// Generated by ZYANG
#ifndef INCLUDED_CCS_DUT_WRAPPER_H
#define INCLUDED_CCS_DUT_WRAPPER_H

#ifndef SC_USE_STD_STRING
#define SC_USE_STD_STRING
#endif

#include <systemc.h>
#include <mc_simulator_extensions.h>

#ifdef CCS_SYSC
namespace HDL {
#endif
#if defined(CCS_DUT_SYSC)
// alias ccs_DUT_wrapper to namespace enclosure of either cycle or RTL SystemC netlist
namespace
    ccs_design {
#if defined(CCS_DUT_CYCLE)
#include "cycle.cxx"
#else
#if defined(CCS_DUT_RTL)
#include "rtl.cxx"
#endif
#endif
}
typedef
    ccs_design::HDL::inPlaceNTT_DIF ccs_DUT_wrapper;

#else

// Create a foreign module wrapper around the HDL
#ifdef VCS_SYSTEMC
// VCS support - ccs_DUT_wrapper is derived from VCS-generated SystemC wrapper around HDL code
class ccs_DUT_wrapper : public TOP_HDL_ENTITY
{
public:
  ccs_DUT_wrapper(const sc_module_name& nm, const char *hdl_name)
  : TOP_HDL_ENTITY(nm)
  {
  // elaborate_foreign_module(hdl_name);
  }

  ~ccs_DUT_wrapper() {}
};

#else
// non VCS simulators - ccs_DUT_wrapper is derived from mc_foreign_module (adding 2nd ctor arg)
class ccs_DUT_wrapper: public mc_foreign_module
{
public:
  // Interface Ports
  sc_in<bool> clk;
  sc_in<sc_logic> rst;
  sc_out<sc_lv<7> > vec_rsc_0_0_wadr;
  sc_out<sc_lv<64> > vec_rsc_0_0_d;
  sc_out<sc_logic> vec_rsc_0_0_we;
  sc_out<sc_lv<7> > vec_rsc_0_0_radr;
  sc_in<sc_lv<64> > vec_rsc_0_0_q;
  sc_out<sc_logic> vec_rsc_triosy_0_0_lz;
  sc_out<sc_lv<7> > vec_rsc_0_1_wadr;
  sc_out<sc_lv<64> > vec_rsc_0_1_d;
  sc_out<sc_logic> vec_rsc_0_1_we;
  sc_out<sc_lv<7> > vec_rsc_0_1_radr;
  sc_in<sc_lv<64> > vec_rsc_0_1_q;
  sc_out<sc_logic> vec_rsc_triosy_0_1_lz;
  sc_out<sc_lv<7> > vec_rsc_0_2_wadr;
  sc_out<sc_lv<64> > vec_rsc_0_2_d;
  sc_out<sc_logic> vec_rsc_0_2_we;
  sc_out<sc_lv<7> > vec_rsc_0_2_radr;
  sc_in<sc_lv<64> > vec_rsc_0_2_q;
  sc_out<sc_logic> vec_rsc_triosy_0_2_lz;
  sc_out<sc_lv<7> > vec_rsc_0_3_wadr;
  sc_out<sc_lv<64> > vec_rsc_0_3_d;
  sc_out<sc_logic> vec_rsc_0_3_we;
  sc_out<sc_lv<7> > vec_rsc_0_3_radr;
  sc_in<sc_lv<64> > vec_rsc_0_3_q;
  sc_out<sc_logic> vec_rsc_triosy_0_3_lz;
  sc_out<sc_lv<7> > vec_rsc_0_4_wadr;
  sc_out<sc_lv<64> > vec_rsc_0_4_d;
  sc_out<sc_logic> vec_rsc_0_4_we;
  sc_out<sc_lv<7> > vec_rsc_0_4_radr;
  sc_in<sc_lv<64> > vec_rsc_0_4_q;
  sc_out<sc_logic> vec_rsc_triosy_0_4_lz;
  sc_out<sc_lv<7> > vec_rsc_0_5_wadr;
  sc_out<sc_lv<64> > vec_rsc_0_5_d;
  sc_out<sc_logic> vec_rsc_0_5_we;
  sc_out<sc_lv<7> > vec_rsc_0_5_radr;
  sc_in<sc_lv<64> > vec_rsc_0_5_q;
  sc_out<sc_logic> vec_rsc_triosy_0_5_lz;
  sc_out<sc_lv<7> > vec_rsc_0_6_wadr;
  sc_out<sc_lv<64> > vec_rsc_0_6_d;
  sc_out<sc_logic> vec_rsc_0_6_we;
  sc_out<sc_lv<7> > vec_rsc_0_6_radr;
  sc_in<sc_lv<64> > vec_rsc_0_6_q;
  sc_out<sc_logic> vec_rsc_triosy_0_6_lz;
  sc_out<sc_lv<7> > vec_rsc_0_7_wadr;
  sc_out<sc_lv<64> > vec_rsc_0_7_d;
  sc_out<sc_logic> vec_rsc_0_7_we;
  sc_out<sc_lv<7> > vec_rsc_0_7_radr;
  sc_in<sc_lv<64> > vec_rsc_0_7_q;
  sc_out<sc_logic> vec_rsc_triosy_0_7_lz;
  sc_in<sc_lv<64> > p_rsc_dat;
  sc_out<sc_logic> p_rsc_triosy_lz;
  sc_in<sc_lv<64> > r_rsc_dat;
  sc_out<sc_logic> r_rsc_triosy_lz;
  sc_out<sc_lv<7> > twiddle_rsc_0_0_radr;
  sc_in<sc_lv<64> > twiddle_rsc_0_0_q;
  sc_out<sc_logic> twiddle_rsc_triosy_0_0_lz;
  sc_out<sc_lv<7> > twiddle_rsc_0_1_radr;
  sc_in<sc_lv<64> > twiddle_rsc_0_1_q;
  sc_out<sc_logic> twiddle_rsc_triosy_0_1_lz;
  sc_out<sc_lv<7> > twiddle_rsc_0_2_radr;
  sc_in<sc_lv<64> > twiddle_rsc_0_2_q;
  sc_out<sc_logic> twiddle_rsc_triosy_0_2_lz;
  sc_out<sc_lv<7> > twiddle_rsc_0_3_radr;
  sc_in<sc_lv<64> > twiddle_rsc_0_3_q;
  sc_out<sc_logic> twiddle_rsc_triosy_0_3_lz;
  sc_out<sc_lv<7> > twiddle_rsc_0_4_radr;
  sc_in<sc_lv<64> > twiddle_rsc_0_4_q;
  sc_out<sc_logic> twiddle_rsc_triosy_0_4_lz;
  sc_out<sc_lv<7> > twiddle_rsc_0_5_radr;
  sc_in<sc_lv<64> > twiddle_rsc_0_5_q;
  sc_out<sc_logic> twiddle_rsc_triosy_0_5_lz;
  sc_out<sc_lv<7> > twiddle_rsc_0_6_radr;
  sc_in<sc_lv<64> > twiddle_rsc_0_6_q;
  sc_out<sc_logic> twiddle_rsc_triosy_0_6_lz;
  sc_out<sc_lv<7> > twiddle_rsc_0_7_radr;
  sc_in<sc_lv<64> > twiddle_rsc_0_7_q;
  sc_out<sc_logic> twiddle_rsc_triosy_0_7_lz;
public:
  ccs_DUT_wrapper(const sc_module_name& nm, const char *hdl_name)
  :
    mc_foreign_module(nm, hdl_name), 
    clk("clk"), 
    rst("rst"), 
    vec_rsc_0_0_wadr("vec_rsc_0_0_wadr"), 
    vec_rsc_0_0_d("vec_rsc_0_0_d"), 
    vec_rsc_0_0_we("vec_rsc_0_0_we"), 
    vec_rsc_0_0_radr("vec_rsc_0_0_radr"), 
    vec_rsc_0_0_q("vec_rsc_0_0_q"), 
    vec_rsc_triosy_0_0_lz("vec_rsc_triosy_0_0_lz"), 
    vec_rsc_0_1_wadr("vec_rsc_0_1_wadr"), 
    vec_rsc_0_1_d("vec_rsc_0_1_d"), 
    vec_rsc_0_1_we("vec_rsc_0_1_we"), 
    vec_rsc_0_1_radr("vec_rsc_0_1_radr"), 
    vec_rsc_0_1_q("vec_rsc_0_1_q"), 
    vec_rsc_triosy_0_1_lz("vec_rsc_triosy_0_1_lz"), 
    vec_rsc_0_2_wadr("vec_rsc_0_2_wadr"), 
    vec_rsc_0_2_d("vec_rsc_0_2_d"), 
    vec_rsc_0_2_we("vec_rsc_0_2_we"), 
    vec_rsc_0_2_radr("vec_rsc_0_2_radr"), 
    vec_rsc_0_2_q("vec_rsc_0_2_q"), 
    vec_rsc_triosy_0_2_lz("vec_rsc_triosy_0_2_lz"), 
    vec_rsc_0_3_wadr("vec_rsc_0_3_wadr"), 
    vec_rsc_0_3_d("vec_rsc_0_3_d"), 
    vec_rsc_0_3_we("vec_rsc_0_3_we"), 
    vec_rsc_0_3_radr("vec_rsc_0_3_radr"), 
    vec_rsc_0_3_q("vec_rsc_0_3_q"), 
    vec_rsc_triosy_0_3_lz("vec_rsc_triosy_0_3_lz"), 
    vec_rsc_0_4_wadr("vec_rsc_0_4_wadr"), 
    vec_rsc_0_4_d("vec_rsc_0_4_d"), 
    vec_rsc_0_4_we("vec_rsc_0_4_we"), 
    vec_rsc_0_4_radr("vec_rsc_0_4_radr"), 
    vec_rsc_0_4_q("vec_rsc_0_4_q"), 
    vec_rsc_triosy_0_4_lz("vec_rsc_triosy_0_4_lz"), 
    vec_rsc_0_5_wadr("vec_rsc_0_5_wadr"), 
    vec_rsc_0_5_d("vec_rsc_0_5_d"), 
    vec_rsc_0_5_we("vec_rsc_0_5_we"), 
    vec_rsc_0_5_radr("vec_rsc_0_5_radr"), 
    vec_rsc_0_5_q("vec_rsc_0_5_q"), 
    vec_rsc_triosy_0_5_lz("vec_rsc_triosy_0_5_lz"), 
    vec_rsc_0_6_wadr("vec_rsc_0_6_wadr"), 
    vec_rsc_0_6_d("vec_rsc_0_6_d"), 
    vec_rsc_0_6_we("vec_rsc_0_6_we"), 
    vec_rsc_0_6_radr("vec_rsc_0_6_radr"), 
    vec_rsc_0_6_q("vec_rsc_0_6_q"), 
    vec_rsc_triosy_0_6_lz("vec_rsc_triosy_0_6_lz"), 
    vec_rsc_0_7_wadr("vec_rsc_0_7_wadr"), 
    vec_rsc_0_7_d("vec_rsc_0_7_d"), 
    vec_rsc_0_7_we("vec_rsc_0_7_we"), 
    vec_rsc_0_7_radr("vec_rsc_0_7_radr"), 
    vec_rsc_0_7_q("vec_rsc_0_7_q"), 
    vec_rsc_triosy_0_7_lz("vec_rsc_triosy_0_7_lz"), 
    p_rsc_dat("p_rsc_dat"), 
    p_rsc_triosy_lz("p_rsc_triosy_lz"), 
    r_rsc_dat("r_rsc_dat"), 
    r_rsc_triosy_lz("r_rsc_triosy_lz"), 
    twiddle_rsc_0_0_radr("twiddle_rsc_0_0_radr"), 
    twiddle_rsc_0_0_q("twiddle_rsc_0_0_q"), 
    twiddle_rsc_triosy_0_0_lz("twiddle_rsc_triosy_0_0_lz"), 
    twiddle_rsc_0_1_radr("twiddle_rsc_0_1_radr"), 
    twiddle_rsc_0_1_q("twiddle_rsc_0_1_q"), 
    twiddle_rsc_triosy_0_1_lz("twiddle_rsc_triosy_0_1_lz"), 
    twiddle_rsc_0_2_radr("twiddle_rsc_0_2_radr"), 
    twiddle_rsc_0_2_q("twiddle_rsc_0_2_q"), 
    twiddle_rsc_triosy_0_2_lz("twiddle_rsc_triosy_0_2_lz"), 
    twiddle_rsc_0_3_radr("twiddle_rsc_0_3_radr"), 
    twiddle_rsc_0_3_q("twiddle_rsc_0_3_q"), 
    twiddle_rsc_triosy_0_3_lz("twiddle_rsc_triosy_0_3_lz"), 
    twiddle_rsc_0_4_radr("twiddle_rsc_0_4_radr"), 
    twiddle_rsc_0_4_q("twiddle_rsc_0_4_q"), 
    twiddle_rsc_triosy_0_4_lz("twiddle_rsc_triosy_0_4_lz"), 
    twiddle_rsc_0_5_radr("twiddle_rsc_0_5_radr"), 
    twiddle_rsc_0_5_q("twiddle_rsc_0_5_q"), 
    twiddle_rsc_triosy_0_5_lz("twiddle_rsc_triosy_0_5_lz"), 
    twiddle_rsc_0_6_radr("twiddle_rsc_0_6_radr"), 
    twiddle_rsc_0_6_q("twiddle_rsc_0_6_q"), 
    twiddle_rsc_triosy_0_6_lz("twiddle_rsc_triosy_0_6_lz"), 
    twiddle_rsc_0_7_radr("twiddle_rsc_0_7_radr"), 
    twiddle_rsc_0_7_q("twiddle_rsc_0_7_q"), 
    twiddle_rsc_triosy_0_7_lz("twiddle_rsc_triosy_0_7_lz")
  {
    elaborate_foreign_module(hdl_name);
  }

  ~ccs_DUT_wrapper() {}
};
#endif

#endif

#ifdef CCS_SYSC
} // end namespace HDL
#endif
#endif


