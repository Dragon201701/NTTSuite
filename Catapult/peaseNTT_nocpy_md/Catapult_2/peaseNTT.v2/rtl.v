// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    10.5c/896140 Production Release
//  HLS Date:       Sun Sep  6 22:45:38 PDT 2020
// 
//  Generated by:   jd4691@newnano.poly.edu
//  Generated date: Sat Sep 11 21:17:22 2021
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_70_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_70_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_69_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_69_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_68_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_68_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_67_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_67_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_66_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_66_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_65_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_65_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_64_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_64_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_63_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_63_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_62_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_62_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_61_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_61_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_60_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_60_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_59_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_59_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_58_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_58_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_57_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_57_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_56_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_56_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_55_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_55_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_54_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_54_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_53_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_53_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_52_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_52_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_51_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_51_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_50_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_50_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_49_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_49_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_48_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_48_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_47_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_47_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_46_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_46_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_45_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_45_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_44_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_44_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_43_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_43_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_42_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_42_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_41_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_41_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_40_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_40_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_39_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_39_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_38_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_38_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_37_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_37_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_36_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_36_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_35_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_35_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_34_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_34_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_33_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_33_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_32_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_32_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_31_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_31_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_30_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_30_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_29_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_29_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_28_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_28_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_27_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_27_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_26_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_26_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_25_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_25_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_24_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_24_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_23_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_23_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_22_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_22_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_21_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_21_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_20_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_20_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_19_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_19_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_18_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_18_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_17_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_17_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_16_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_16_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_15_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_15_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_14_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_14_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_13_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_13_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_12_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_12_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_11_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_11_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_10_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_10_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_9_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_9_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_8_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_8_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_7_4_32_16_16_32_1_gen
// ------------------------------------------------------------------


module peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_7_4_32_16_16_32_1_gen (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [31:0] q;
  output [3:0] radr;
  output we;
  output [31:0] d;
  output [3:0] wadr;
  input clken_d;
  input [31:0] d_d;
  output [31:0] q_d;
  input [3:0] radr_d;
  input [3:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_core_fsm
//  FSM Module
// ------------------------------------------------------------------


module peaseNTT_core_core_fsm (
  clk, rst, core_wen, fsm_output, INNER_LOOP1_C_0_tr0, INNER_LOOP2_C_0_tr0, INNER_LOOP2_C_0_tr1,
      INNER_LOOP3_C_0_tr0, INNER_LOOP4_C_0_tr0, INNER_LOOP4_C_0_tr1
);
  input clk;
  input rst;
  input core_wen;
  output [9:0] fsm_output;
  reg [9:0] fsm_output;
  input INNER_LOOP1_C_0_tr0;
  input INNER_LOOP2_C_0_tr0;
  input INNER_LOOP2_C_0_tr1;
  input INNER_LOOP3_C_0_tr0;
  input INNER_LOOP4_C_0_tr0;
  input INNER_LOOP4_C_0_tr1;


  // FSM State Type Declaration for peaseNTT_core_core_fsm_1
  parameter
    main_C_0 = 4'd0,
    STAGE_LOOP_C_0 = 4'd1,
    INNER_LOOP1_C_0 = 4'd2,
    STAGE_LOOP_C_1 = 4'd3,
    INNER_LOOP2_C_0 = 4'd4,
    STAGE_LOOP1_C_0 = 4'd5,
    INNER_LOOP3_C_0 = 4'd6,
    STAGE_LOOP1_C_1 = 4'd7,
    INNER_LOOP4_C_0 = 4'd8,
    main_C_1 = 4'd9;

  reg [3:0] state_var;
  reg [3:0] state_var_NS;


  // Interconnect Declarations for Component Instantiations 
  always @(*)
  begin : peaseNTT_core_core_fsm_1
    case (state_var)
      STAGE_LOOP_C_0 : begin
        fsm_output = 10'b0000000010;
        state_var_NS = INNER_LOOP1_C_0;
      end
      INNER_LOOP1_C_0 : begin
        fsm_output = 10'b0000000100;
        if ( INNER_LOOP1_C_0_tr0 ) begin
          state_var_NS = STAGE_LOOP_C_1;
        end
        else begin
          state_var_NS = INNER_LOOP1_C_0;
        end
      end
      STAGE_LOOP_C_1 : begin
        fsm_output = 10'b0000001000;
        state_var_NS = INNER_LOOP2_C_0;
      end
      INNER_LOOP2_C_0 : begin
        fsm_output = 10'b0000010000;
        if ( INNER_LOOP2_C_0_tr0 ) begin
          state_var_NS = STAGE_LOOP1_C_0;
        end
        else if ( INNER_LOOP2_C_0_tr1 ) begin
          state_var_NS = INNER_LOOP2_C_0;
        end
        else begin
          state_var_NS = STAGE_LOOP_C_0;
        end
      end
      STAGE_LOOP1_C_0 : begin
        fsm_output = 10'b0000100000;
        state_var_NS = INNER_LOOP3_C_0;
      end
      INNER_LOOP3_C_0 : begin
        fsm_output = 10'b0001000000;
        if ( INNER_LOOP3_C_0_tr0 ) begin
          state_var_NS = STAGE_LOOP1_C_1;
        end
        else begin
          state_var_NS = INNER_LOOP3_C_0;
        end
      end
      STAGE_LOOP1_C_1 : begin
        fsm_output = 10'b0010000000;
        state_var_NS = INNER_LOOP4_C_0;
      end
      INNER_LOOP4_C_0 : begin
        fsm_output = 10'b0100000000;
        if ( INNER_LOOP4_C_0_tr0 ) begin
          state_var_NS = main_C_1;
        end
        else if ( INNER_LOOP4_C_0_tr1 ) begin
          state_var_NS = INNER_LOOP4_C_0;
        end
        else begin
          state_var_NS = STAGE_LOOP1_C_0;
        end
      end
      main_C_1 : begin
        fsm_output = 10'b1000000000;
        state_var_NS = main_C_0;
      end
      // main_C_0
      default : begin
        fsm_output = 10'b0000000001;
        state_var_NS = STAGE_LOOP_C_0;
      end
    endcase
  end

  always @(posedge clk) begin
    if ( rst ) begin
      state_var <= main_C_0;
    end
    else if ( core_wen ) begin
      state_var <= state_var_NS;
    end
  end

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_staller
// ------------------------------------------------------------------


module peaseNTT_core_staller (
  clk, rst, core_wen, core_wten, xt_rsc_0_0_i_wen_comp, xt_rsc_0_0_i_wen_comp_1,
      xt_rsc_0_1_i_wen_comp, xt_rsc_0_1_i_wen_comp_1, xt_rsc_0_2_i_wen_comp, xt_rsc_0_2_i_wen_comp_1,
      xt_rsc_0_3_i_wen_comp, xt_rsc_0_3_i_wen_comp_1, xt_rsc_0_4_i_wen_comp, xt_rsc_0_4_i_wen_comp_1,
      xt_rsc_0_5_i_wen_comp, xt_rsc_0_5_i_wen_comp_1, xt_rsc_0_6_i_wen_comp, xt_rsc_0_6_i_wen_comp_1,
      xt_rsc_0_7_i_wen_comp, xt_rsc_0_7_i_wen_comp_1, xt_rsc_0_8_i_wen_comp, xt_rsc_0_8_i_wen_comp_1,
      xt_rsc_0_9_i_wen_comp, xt_rsc_0_9_i_wen_comp_1, xt_rsc_0_10_i_wen_comp, xt_rsc_0_10_i_wen_comp_1,
      xt_rsc_0_11_i_wen_comp, xt_rsc_0_11_i_wen_comp_1, xt_rsc_0_12_i_wen_comp, xt_rsc_0_12_i_wen_comp_1,
      xt_rsc_0_13_i_wen_comp, xt_rsc_0_13_i_wen_comp_1, xt_rsc_0_14_i_wen_comp, xt_rsc_0_14_i_wen_comp_1,
      xt_rsc_0_15_i_wen_comp, xt_rsc_0_15_i_wen_comp_1, xt_rsc_0_16_i_wen_comp, xt_rsc_0_16_i_wen_comp_1,
      xt_rsc_0_17_i_wen_comp, xt_rsc_0_17_i_wen_comp_1, xt_rsc_0_18_i_wen_comp, xt_rsc_0_18_i_wen_comp_1,
      xt_rsc_0_19_i_wen_comp, xt_rsc_0_19_i_wen_comp_1, xt_rsc_0_20_i_wen_comp, xt_rsc_0_20_i_wen_comp_1,
      xt_rsc_0_21_i_wen_comp, xt_rsc_0_21_i_wen_comp_1, xt_rsc_0_22_i_wen_comp, xt_rsc_0_22_i_wen_comp_1,
      xt_rsc_0_23_i_wen_comp, xt_rsc_0_23_i_wen_comp_1, xt_rsc_0_24_i_wen_comp, xt_rsc_0_24_i_wen_comp_1,
      xt_rsc_0_25_i_wen_comp, xt_rsc_0_25_i_wen_comp_1, xt_rsc_0_26_i_wen_comp, xt_rsc_0_26_i_wen_comp_1,
      xt_rsc_0_27_i_wen_comp, xt_rsc_0_27_i_wen_comp_1, xt_rsc_0_28_i_wen_comp, xt_rsc_0_28_i_wen_comp_1,
      xt_rsc_0_29_i_wen_comp, xt_rsc_0_29_i_wen_comp_1, xt_rsc_0_30_i_wen_comp, xt_rsc_0_30_i_wen_comp_1,
      xt_rsc_0_31_i_wen_comp, xt_rsc_0_31_i_wen_comp_1, xt_rsc_1_0_i_wen_comp, xt_rsc_1_0_i_wen_comp_1,
      xt_rsc_1_1_i_wen_comp, xt_rsc_1_1_i_wen_comp_1, xt_rsc_1_2_i_wen_comp, xt_rsc_1_2_i_wen_comp_1,
      xt_rsc_1_3_i_wen_comp, xt_rsc_1_3_i_wen_comp_1, xt_rsc_1_4_i_wen_comp, xt_rsc_1_4_i_wen_comp_1,
      xt_rsc_1_5_i_wen_comp, xt_rsc_1_5_i_wen_comp_1, xt_rsc_1_6_i_wen_comp, xt_rsc_1_6_i_wen_comp_1,
      xt_rsc_1_7_i_wen_comp, xt_rsc_1_7_i_wen_comp_1, xt_rsc_1_8_i_wen_comp, xt_rsc_1_8_i_wen_comp_1,
      xt_rsc_1_9_i_wen_comp, xt_rsc_1_9_i_wen_comp_1, xt_rsc_1_10_i_wen_comp, xt_rsc_1_10_i_wen_comp_1,
      xt_rsc_1_11_i_wen_comp, xt_rsc_1_11_i_wen_comp_1, xt_rsc_1_12_i_wen_comp, xt_rsc_1_12_i_wen_comp_1,
      xt_rsc_1_13_i_wen_comp, xt_rsc_1_13_i_wen_comp_1, xt_rsc_1_14_i_wen_comp, xt_rsc_1_14_i_wen_comp_1,
      xt_rsc_1_15_i_wen_comp, xt_rsc_1_15_i_wen_comp_1, xt_rsc_1_16_i_wen_comp, xt_rsc_1_16_i_wen_comp_1,
      xt_rsc_1_17_i_wen_comp, xt_rsc_1_17_i_wen_comp_1, xt_rsc_1_18_i_wen_comp, xt_rsc_1_18_i_wen_comp_1,
      xt_rsc_1_19_i_wen_comp, xt_rsc_1_19_i_wen_comp_1, xt_rsc_1_20_i_wen_comp, xt_rsc_1_20_i_wen_comp_1,
      xt_rsc_1_21_i_wen_comp, xt_rsc_1_21_i_wen_comp_1, xt_rsc_1_22_i_wen_comp, xt_rsc_1_22_i_wen_comp_1,
      xt_rsc_1_23_i_wen_comp, xt_rsc_1_23_i_wen_comp_1, xt_rsc_1_24_i_wen_comp, xt_rsc_1_24_i_wen_comp_1,
      xt_rsc_1_25_i_wen_comp, xt_rsc_1_25_i_wen_comp_1, xt_rsc_1_26_i_wen_comp, xt_rsc_1_26_i_wen_comp_1,
      xt_rsc_1_27_i_wen_comp, xt_rsc_1_27_i_wen_comp_1, xt_rsc_1_28_i_wen_comp, xt_rsc_1_28_i_wen_comp_1,
      xt_rsc_1_29_i_wen_comp, xt_rsc_1_29_i_wen_comp_1, xt_rsc_1_30_i_wen_comp, xt_rsc_1_30_i_wen_comp_1,
      xt_rsc_1_31_i_wen_comp, xt_rsc_1_31_i_wen_comp_1, twiddle_rsc_0_0_i_wen_comp,
      twiddle_rsc_0_1_i_wen_comp, twiddle_rsc_0_2_i_wen_comp, twiddle_rsc_0_3_i_wen_comp,
      twiddle_rsc_0_4_i_wen_comp, twiddle_rsc_0_5_i_wen_comp, twiddle_rsc_0_6_i_wen_comp,
      twiddle_rsc_0_7_i_wen_comp, twiddle_rsc_0_8_i_wen_comp, twiddle_rsc_0_9_i_wen_comp,
      twiddle_rsc_0_10_i_wen_comp, twiddle_rsc_0_11_i_wen_comp, twiddle_rsc_0_12_i_wen_comp,
      twiddle_rsc_0_13_i_wen_comp, twiddle_rsc_0_14_i_wen_comp, twiddle_rsc_0_15_i_wen_comp,
      twiddle_h_rsc_0_0_i_wen_comp, twiddle_h_rsc_0_1_i_wen_comp, twiddle_h_rsc_0_2_i_wen_comp,
      twiddle_h_rsc_0_3_i_wen_comp, twiddle_h_rsc_0_4_i_wen_comp, twiddle_h_rsc_0_5_i_wen_comp,
      twiddle_h_rsc_0_6_i_wen_comp, twiddle_h_rsc_0_7_i_wen_comp, twiddle_h_rsc_0_8_i_wen_comp,
      twiddle_h_rsc_0_9_i_wen_comp, twiddle_h_rsc_0_10_i_wen_comp, twiddle_h_rsc_0_11_i_wen_comp,
      twiddle_h_rsc_0_12_i_wen_comp, twiddle_h_rsc_0_13_i_wen_comp, twiddle_h_rsc_0_14_i_wen_comp,
      twiddle_h_rsc_0_15_i_wen_comp
);
  input clk;
  input rst;
  output core_wen;
  output core_wten;
  reg core_wten;
  input xt_rsc_0_0_i_wen_comp;
  input xt_rsc_0_0_i_wen_comp_1;
  input xt_rsc_0_1_i_wen_comp;
  input xt_rsc_0_1_i_wen_comp_1;
  input xt_rsc_0_2_i_wen_comp;
  input xt_rsc_0_2_i_wen_comp_1;
  input xt_rsc_0_3_i_wen_comp;
  input xt_rsc_0_3_i_wen_comp_1;
  input xt_rsc_0_4_i_wen_comp;
  input xt_rsc_0_4_i_wen_comp_1;
  input xt_rsc_0_5_i_wen_comp;
  input xt_rsc_0_5_i_wen_comp_1;
  input xt_rsc_0_6_i_wen_comp;
  input xt_rsc_0_6_i_wen_comp_1;
  input xt_rsc_0_7_i_wen_comp;
  input xt_rsc_0_7_i_wen_comp_1;
  input xt_rsc_0_8_i_wen_comp;
  input xt_rsc_0_8_i_wen_comp_1;
  input xt_rsc_0_9_i_wen_comp;
  input xt_rsc_0_9_i_wen_comp_1;
  input xt_rsc_0_10_i_wen_comp;
  input xt_rsc_0_10_i_wen_comp_1;
  input xt_rsc_0_11_i_wen_comp;
  input xt_rsc_0_11_i_wen_comp_1;
  input xt_rsc_0_12_i_wen_comp;
  input xt_rsc_0_12_i_wen_comp_1;
  input xt_rsc_0_13_i_wen_comp;
  input xt_rsc_0_13_i_wen_comp_1;
  input xt_rsc_0_14_i_wen_comp;
  input xt_rsc_0_14_i_wen_comp_1;
  input xt_rsc_0_15_i_wen_comp;
  input xt_rsc_0_15_i_wen_comp_1;
  input xt_rsc_0_16_i_wen_comp;
  input xt_rsc_0_16_i_wen_comp_1;
  input xt_rsc_0_17_i_wen_comp;
  input xt_rsc_0_17_i_wen_comp_1;
  input xt_rsc_0_18_i_wen_comp;
  input xt_rsc_0_18_i_wen_comp_1;
  input xt_rsc_0_19_i_wen_comp;
  input xt_rsc_0_19_i_wen_comp_1;
  input xt_rsc_0_20_i_wen_comp;
  input xt_rsc_0_20_i_wen_comp_1;
  input xt_rsc_0_21_i_wen_comp;
  input xt_rsc_0_21_i_wen_comp_1;
  input xt_rsc_0_22_i_wen_comp;
  input xt_rsc_0_22_i_wen_comp_1;
  input xt_rsc_0_23_i_wen_comp;
  input xt_rsc_0_23_i_wen_comp_1;
  input xt_rsc_0_24_i_wen_comp;
  input xt_rsc_0_24_i_wen_comp_1;
  input xt_rsc_0_25_i_wen_comp;
  input xt_rsc_0_25_i_wen_comp_1;
  input xt_rsc_0_26_i_wen_comp;
  input xt_rsc_0_26_i_wen_comp_1;
  input xt_rsc_0_27_i_wen_comp;
  input xt_rsc_0_27_i_wen_comp_1;
  input xt_rsc_0_28_i_wen_comp;
  input xt_rsc_0_28_i_wen_comp_1;
  input xt_rsc_0_29_i_wen_comp;
  input xt_rsc_0_29_i_wen_comp_1;
  input xt_rsc_0_30_i_wen_comp;
  input xt_rsc_0_30_i_wen_comp_1;
  input xt_rsc_0_31_i_wen_comp;
  input xt_rsc_0_31_i_wen_comp_1;
  input xt_rsc_1_0_i_wen_comp;
  input xt_rsc_1_0_i_wen_comp_1;
  input xt_rsc_1_1_i_wen_comp;
  input xt_rsc_1_1_i_wen_comp_1;
  input xt_rsc_1_2_i_wen_comp;
  input xt_rsc_1_2_i_wen_comp_1;
  input xt_rsc_1_3_i_wen_comp;
  input xt_rsc_1_3_i_wen_comp_1;
  input xt_rsc_1_4_i_wen_comp;
  input xt_rsc_1_4_i_wen_comp_1;
  input xt_rsc_1_5_i_wen_comp;
  input xt_rsc_1_5_i_wen_comp_1;
  input xt_rsc_1_6_i_wen_comp;
  input xt_rsc_1_6_i_wen_comp_1;
  input xt_rsc_1_7_i_wen_comp;
  input xt_rsc_1_7_i_wen_comp_1;
  input xt_rsc_1_8_i_wen_comp;
  input xt_rsc_1_8_i_wen_comp_1;
  input xt_rsc_1_9_i_wen_comp;
  input xt_rsc_1_9_i_wen_comp_1;
  input xt_rsc_1_10_i_wen_comp;
  input xt_rsc_1_10_i_wen_comp_1;
  input xt_rsc_1_11_i_wen_comp;
  input xt_rsc_1_11_i_wen_comp_1;
  input xt_rsc_1_12_i_wen_comp;
  input xt_rsc_1_12_i_wen_comp_1;
  input xt_rsc_1_13_i_wen_comp;
  input xt_rsc_1_13_i_wen_comp_1;
  input xt_rsc_1_14_i_wen_comp;
  input xt_rsc_1_14_i_wen_comp_1;
  input xt_rsc_1_15_i_wen_comp;
  input xt_rsc_1_15_i_wen_comp_1;
  input xt_rsc_1_16_i_wen_comp;
  input xt_rsc_1_16_i_wen_comp_1;
  input xt_rsc_1_17_i_wen_comp;
  input xt_rsc_1_17_i_wen_comp_1;
  input xt_rsc_1_18_i_wen_comp;
  input xt_rsc_1_18_i_wen_comp_1;
  input xt_rsc_1_19_i_wen_comp;
  input xt_rsc_1_19_i_wen_comp_1;
  input xt_rsc_1_20_i_wen_comp;
  input xt_rsc_1_20_i_wen_comp_1;
  input xt_rsc_1_21_i_wen_comp;
  input xt_rsc_1_21_i_wen_comp_1;
  input xt_rsc_1_22_i_wen_comp;
  input xt_rsc_1_22_i_wen_comp_1;
  input xt_rsc_1_23_i_wen_comp;
  input xt_rsc_1_23_i_wen_comp_1;
  input xt_rsc_1_24_i_wen_comp;
  input xt_rsc_1_24_i_wen_comp_1;
  input xt_rsc_1_25_i_wen_comp;
  input xt_rsc_1_25_i_wen_comp_1;
  input xt_rsc_1_26_i_wen_comp;
  input xt_rsc_1_26_i_wen_comp_1;
  input xt_rsc_1_27_i_wen_comp;
  input xt_rsc_1_27_i_wen_comp_1;
  input xt_rsc_1_28_i_wen_comp;
  input xt_rsc_1_28_i_wen_comp_1;
  input xt_rsc_1_29_i_wen_comp;
  input xt_rsc_1_29_i_wen_comp_1;
  input xt_rsc_1_30_i_wen_comp;
  input xt_rsc_1_30_i_wen_comp_1;
  input xt_rsc_1_31_i_wen_comp;
  input xt_rsc_1_31_i_wen_comp_1;
  input twiddle_rsc_0_0_i_wen_comp;
  input twiddle_rsc_0_1_i_wen_comp;
  input twiddle_rsc_0_2_i_wen_comp;
  input twiddle_rsc_0_3_i_wen_comp;
  input twiddle_rsc_0_4_i_wen_comp;
  input twiddle_rsc_0_5_i_wen_comp;
  input twiddle_rsc_0_6_i_wen_comp;
  input twiddle_rsc_0_7_i_wen_comp;
  input twiddle_rsc_0_8_i_wen_comp;
  input twiddle_rsc_0_9_i_wen_comp;
  input twiddle_rsc_0_10_i_wen_comp;
  input twiddle_rsc_0_11_i_wen_comp;
  input twiddle_rsc_0_12_i_wen_comp;
  input twiddle_rsc_0_13_i_wen_comp;
  input twiddle_rsc_0_14_i_wen_comp;
  input twiddle_rsc_0_15_i_wen_comp;
  input twiddle_h_rsc_0_0_i_wen_comp;
  input twiddle_h_rsc_0_1_i_wen_comp;
  input twiddle_h_rsc_0_2_i_wen_comp;
  input twiddle_h_rsc_0_3_i_wen_comp;
  input twiddle_h_rsc_0_4_i_wen_comp;
  input twiddle_h_rsc_0_5_i_wen_comp;
  input twiddle_h_rsc_0_6_i_wen_comp;
  input twiddle_h_rsc_0_7_i_wen_comp;
  input twiddle_h_rsc_0_8_i_wen_comp;
  input twiddle_h_rsc_0_9_i_wen_comp;
  input twiddle_h_rsc_0_10_i_wen_comp;
  input twiddle_h_rsc_0_11_i_wen_comp;
  input twiddle_h_rsc_0_12_i_wen_comp;
  input twiddle_h_rsc_0_13_i_wen_comp;
  input twiddle_h_rsc_0_14_i_wen_comp;
  input twiddle_h_rsc_0_15_i_wen_comp;



  // Interconnect Declarations for Component Instantiations 
  assign core_wen = xt_rsc_0_0_i_wen_comp & xt_rsc_0_0_i_wen_comp_1 & xt_rsc_0_1_i_wen_comp
      & xt_rsc_0_1_i_wen_comp_1 & xt_rsc_0_2_i_wen_comp & xt_rsc_0_2_i_wen_comp_1
      & xt_rsc_0_3_i_wen_comp & xt_rsc_0_3_i_wen_comp_1 & xt_rsc_0_4_i_wen_comp &
      xt_rsc_0_4_i_wen_comp_1 & xt_rsc_0_5_i_wen_comp & xt_rsc_0_5_i_wen_comp_1 &
      xt_rsc_0_6_i_wen_comp & xt_rsc_0_6_i_wen_comp_1 & xt_rsc_0_7_i_wen_comp & xt_rsc_0_7_i_wen_comp_1
      & xt_rsc_0_8_i_wen_comp & xt_rsc_0_8_i_wen_comp_1 & xt_rsc_0_9_i_wen_comp &
      xt_rsc_0_9_i_wen_comp_1 & xt_rsc_0_10_i_wen_comp & xt_rsc_0_10_i_wen_comp_1
      & xt_rsc_0_11_i_wen_comp & xt_rsc_0_11_i_wen_comp_1 & xt_rsc_0_12_i_wen_comp
      & xt_rsc_0_12_i_wen_comp_1 & xt_rsc_0_13_i_wen_comp & xt_rsc_0_13_i_wen_comp_1
      & xt_rsc_0_14_i_wen_comp & xt_rsc_0_14_i_wen_comp_1 & xt_rsc_0_15_i_wen_comp
      & xt_rsc_0_15_i_wen_comp_1 & xt_rsc_0_16_i_wen_comp & xt_rsc_0_16_i_wen_comp_1
      & xt_rsc_0_17_i_wen_comp & xt_rsc_0_17_i_wen_comp_1 & xt_rsc_0_18_i_wen_comp
      & xt_rsc_0_18_i_wen_comp_1 & xt_rsc_0_19_i_wen_comp & xt_rsc_0_19_i_wen_comp_1
      & xt_rsc_0_20_i_wen_comp & xt_rsc_0_20_i_wen_comp_1 & xt_rsc_0_21_i_wen_comp
      & xt_rsc_0_21_i_wen_comp_1 & xt_rsc_0_22_i_wen_comp & xt_rsc_0_22_i_wen_comp_1
      & xt_rsc_0_23_i_wen_comp & xt_rsc_0_23_i_wen_comp_1 & xt_rsc_0_24_i_wen_comp
      & xt_rsc_0_24_i_wen_comp_1 & xt_rsc_0_25_i_wen_comp & xt_rsc_0_25_i_wen_comp_1
      & xt_rsc_0_26_i_wen_comp & xt_rsc_0_26_i_wen_comp_1 & xt_rsc_0_27_i_wen_comp
      & xt_rsc_0_27_i_wen_comp_1 & xt_rsc_0_28_i_wen_comp & xt_rsc_0_28_i_wen_comp_1
      & xt_rsc_0_29_i_wen_comp & xt_rsc_0_29_i_wen_comp_1 & xt_rsc_0_30_i_wen_comp
      & xt_rsc_0_30_i_wen_comp_1 & xt_rsc_0_31_i_wen_comp & xt_rsc_0_31_i_wen_comp_1
      & xt_rsc_1_0_i_wen_comp & xt_rsc_1_0_i_wen_comp_1 & xt_rsc_1_1_i_wen_comp &
      xt_rsc_1_1_i_wen_comp_1 & xt_rsc_1_2_i_wen_comp & xt_rsc_1_2_i_wen_comp_1 &
      xt_rsc_1_3_i_wen_comp & xt_rsc_1_3_i_wen_comp_1 & xt_rsc_1_4_i_wen_comp & xt_rsc_1_4_i_wen_comp_1
      & xt_rsc_1_5_i_wen_comp & xt_rsc_1_5_i_wen_comp_1 & xt_rsc_1_6_i_wen_comp &
      xt_rsc_1_6_i_wen_comp_1 & xt_rsc_1_7_i_wen_comp & xt_rsc_1_7_i_wen_comp_1 &
      xt_rsc_1_8_i_wen_comp & xt_rsc_1_8_i_wen_comp_1 & xt_rsc_1_9_i_wen_comp & xt_rsc_1_9_i_wen_comp_1
      & xt_rsc_1_10_i_wen_comp & xt_rsc_1_10_i_wen_comp_1 & xt_rsc_1_11_i_wen_comp
      & xt_rsc_1_11_i_wen_comp_1 & xt_rsc_1_12_i_wen_comp & xt_rsc_1_12_i_wen_comp_1
      & xt_rsc_1_13_i_wen_comp & xt_rsc_1_13_i_wen_comp_1 & xt_rsc_1_14_i_wen_comp
      & xt_rsc_1_14_i_wen_comp_1 & xt_rsc_1_15_i_wen_comp & xt_rsc_1_15_i_wen_comp_1
      & xt_rsc_1_16_i_wen_comp & xt_rsc_1_16_i_wen_comp_1 & xt_rsc_1_17_i_wen_comp
      & xt_rsc_1_17_i_wen_comp_1 & xt_rsc_1_18_i_wen_comp & xt_rsc_1_18_i_wen_comp_1
      & xt_rsc_1_19_i_wen_comp & xt_rsc_1_19_i_wen_comp_1 & xt_rsc_1_20_i_wen_comp
      & xt_rsc_1_20_i_wen_comp_1 & xt_rsc_1_21_i_wen_comp & xt_rsc_1_21_i_wen_comp_1
      & xt_rsc_1_22_i_wen_comp & xt_rsc_1_22_i_wen_comp_1 & xt_rsc_1_23_i_wen_comp
      & xt_rsc_1_23_i_wen_comp_1 & xt_rsc_1_24_i_wen_comp & xt_rsc_1_24_i_wen_comp_1
      & xt_rsc_1_25_i_wen_comp & xt_rsc_1_25_i_wen_comp_1 & xt_rsc_1_26_i_wen_comp
      & xt_rsc_1_26_i_wen_comp_1 & xt_rsc_1_27_i_wen_comp & xt_rsc_1_27_i_wen_comp_1
      & xt_rsc_1_28_i_wen_comp & xt_rsc_1_28_i_wen_comp_1 & xt_rsc_1_29_i_wen_comp
      & xt_rsc_1_29_i_wen_comp_1 & xt_rsc_1_30_i_wen_comp & xt_rsc_1_30_i_wen_comp_1
      & xt_rsc_1_31_i_wen_comp & xt_rsc_1_31_i_wen_comp_1 & twiddle_rsc_0_0_i_wen_comp
      & twiddle_rsc_0_1_i_wen_comp & twiddle_rsc_0_2_i_wen_comp & twiddle_rsc_0_3_i_wen_comp
      & twiddle_rsc_0_4_i_wen_comp & twiddle_rsc_0_5_i_wen_comp & twiddle_rsc_0_6_i_wen_comp
      & twiddle_rsc_0_7_i_wen_comp & twiddle_rsc_0_8_i_wen_comp & twiddle_rsc_0_9_i_wen_comp
      & twiddle_rsc_0_10_i_wen_comp & twiddle_rsc_0_11_i_wen_comp & twiddle_rsc_0_12_i_wen_comp
      & twiddle_rsc_0_13_i_wen_comp & twiddle_rsc_0_14_i_wen_comp & twiddle_rsc_0_15_i_wen_comp
      & twiddle_h_rsc_0_0_i_wen_comp & twiddle_h_rsc_0_1_i_wen_comp & twiddle_h_rsc_0_2_i_wen_comp
      & twiddle_h_rsc_0_3_i_wen_comp & twiddle_h_rsc_0_4_i_wen_comp & twiddle_h_rsc_0_5_i_wen_comp
      & twiddle_h_rsc_0_6_i_wen_comp & twiddle_h_rsc_0_7_i_wen_comp & twiddle_h_rsc_0_8_i_wen_comp
      & twiddle_h_rsc_0_9_i_wen_comp & twiddle_h_rsc_0_10_i_wen_comp & twiddle_h_rsc_0_11_i_wen_comp
      & twiddle_h_rsc_0_12_i_wen_comp & twiddle_h_rsc_0_13_i_wen_comp & twiddle_h_rsc_0_14_i_wen_comp
      & twiddle_h_rsc_0_15_i_wen_comp;
  always @(posedge clk) begin
    if ( rst ) begin
      core_wten <= 1'b0;
    end
    else begin
      core_wten <= ~ core_wen;
    end
  end
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_0_obj_twiddle_h_rsc_triosy_0_0_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_0_obj_twiddle_h_rsc_triosy_0_0_wait_ctrl
    (
  core_wten, twiddle_h_rsc_triosy_0_0_obj_iswt0, twiddle_h_rsc_triosy_0_0_obj_ld_core_sct
);
  input core_wten;
  input twiddle_h_rsc_triosy_0_0_obj_iswt0;
  output twiddle_h_rsc_triosy_0_0_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_triosy_0_0_obj_ld_core_sct = twiddle_h_rsc_triosy_0_0_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_1_obj_twiddle_h_rsc_triosy_0_1_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_1_obj_twiddle_h_rsc_triosy_0_1_wait_ctrl
    (
  core_wten, twiddle_h_rsc_triosy_0_1_obj_iswt0, twiddle_h_rsc_triosy_0_1_obj_ld_core_sct
);
  input core_wten;
  input twiddle_h_rsc_triosy_0_1_obj_iswt0;
  output twiddle_h_rsc_triosy_0_1_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_triosy_0_1_obj_ld_core_sct = twiddle_h_rsc_triosy_0_1_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_2_obj_twiddle_h_rsc_triosy_0_2_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_2_obj_twiddle_h_rsc_triosy_0_2_wait_ctrl
    (
  core_wten, twiddle_h_rsc_triosy_0_2_obj_iswt0, twiddle_h_rsc_triosy_0_2_obj_ld_core_sct
);
  input core_wten;
  input twiddle_h_rsc_triosy_0_2_obj_iswt0;
  output twiddle_h_rsc_triosy_0_2_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_triosy_0_2_obj_ld_core_sct = twiddle_h_rsc_triosy_0_2_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_3_obj_twiddle_h_rsc_triosy_0_3_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_3_obj_twiddle_h_rsc_triosy_0_3_wait_ctrl
    (
  core_wten, twiddle_h_rsc_triosy_0_3_obj_iswt0, twiddle_h_rsc_triosy_0_3_obj_ld_core_sct
);
  input core_wten;
  input twiddle_h_rsc_triosy_0_3_obj_iswt0;
  output twiddle_h_rsc_triosy_0_3_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_triosy_0_3_obj_ld_core_sct = twiddle_h_rsc_triosy_0_3_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_4_obj_twiddle_h_rsc_triosy_0_4_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_4_obj_twiddle_h_rsc_triosy_0_4_wait_ctrl
    (
  core_wten, twiddle_h_rsc_triosy_0_4_obj_iswt0, twiddle_h_rsc_triosy_0_4_obj_ld_core_sct
);
  input core_wten;
  input twiddle_h_rsc_triosy_0_4_obj_iswt0;
  output twiddle_h_rsc_triosy_0_4_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_triosy_0_4_obj_ld_core_sct = twiddle_h_rsc_triosy_0_4_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_5_obj_twiddle_h_rsc_triosy_0_5_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_5_obj_twiddle_h_rsc_triosy_0_5_wait_ctrl
    (
  core_wten, twiddle_h_rsc_triosy_0_5_obj_iswt0, twiddle_h_rsc_triosy_0_5_obj_ld_core_sct
);
  input core_wten;
  input twiddle_h_rsc_triosy_0_5_obj_iswt0;
  output twiddle_h_rsc_triosy_0_5_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_triosy_0_5_obj_ld_core_sct = twiddle_h_rsc_triosy_0_5_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_6_obj_twiddle_h_rsc_triosy_0_6_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_6_obj_twiddle_h_rsc_triosy_0_6_wait_ctrl
    (
  core_wten, twiddle_h_rsc_triosy_0_6_obj_iswt0, twiddle_h_rsc_triosy_0_6_obj_ld_core_sct
);
  input core_wten;
  input twiddle_h_rsc_triosy_0_6_obj_iswt0;
  output twiddle_h_rsc_triosy_0_6_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_triosy_0_6_obj_ld_core_sct = twiddle_h_rsc_triosy_0_6_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_7_obj_twiddle_h_rsc_triosy_0_7_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_7_obj_twiddle_h_rsc_triosy_0_7_wait_ctrl
    (
  core_wten, twiddle_h_rsc_triosy_0_7_obj_iswt0, twiddle_h_rsc_triosy_0_7_obj_ld_core_sct
);
  input core_wten;
  input twiddle_h_rsc_triosy_0_7_obj_iswt0;
  output twiddle_h_rsc_triosy_0_7_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_triosy_0_7_obj_ld_core_sct = twiddle_h_rsc_triosy_0_7_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_8_obj_twiddle_h_rsc_triosy_0_8_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_8_obj_twiddle_h_rsc_triosy_0_8_wait_ctrl
    (
  core_wten, twiddle_h_rsc_triosy_0_8_obj_iswt0, twiddle_h_rsc_triosy_0_8_obj_ld_core_sct
);
  input core_wten;
  input twiddle_h_rsc_triosy_0_8_obj_iswt0;
  output twiddle_h_rsc_triosy_0_8_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_triosy_0_8_obj_ld_core_sct = twiddle_h_rsc_triosy_0_8_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_9_obj_twiddle_h_rsc_triosy_0_9_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_9_obj_twiddle_h_rsc_triosy_0_9_wait_ctrl
    (
  core_wten, twiddle_h_rsc_triosy_0_9_obj_iswt0, twiddle_h_rsc_triosy_0_9_obj_ld_core_sct
);
  input core_wten;
  input twiddle_h_rsc_triosy_0_9_obj_iswt0;
  output twiddle_h_rsc_triosy_0_9_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_triosy_0_9_obj_ld_core_sct = twiddle_h_rsc_triosy_0_9_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_10_obj_twiddle_h_rsc_triosy_0_10_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_10_obj_twiddle_h_rsc_triosy_0_10_wait_ctrl
    (
  core_wten, twiddle_h_rsc_triosy_0_10_obj_iswt0, twiddle_h_rsc_triosy_0_10_obj_ld_core_sct
);
  input core_wten;
  input twiddle_h_rsc_triosy_0_10_obj_iswt0;
  output twiddle_h_rsc_triosy_0_10_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_triosy_0_10_obj_ld_core_sct = twiddle_h_rsc_triosy_0_10_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_11_obj_twiddle_h_rsc_triosy_0_11_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_11_obj_twiddle_h_rsc_triosy_0_11_wait_ctrl
    (
  core_wten, twiddle_h_rsc_triosy_0_11_obj_iswt0, twiddle_h_rsc_triosy_0_11_obj_ld_core_sct
);
  input core_wten;
  input twiddle_h_rsc_triosy_0_11_obj_iswt0;
  output twiddle_h_rsc_triosy_0_11_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_triosy_0_11_obj_ld_core_sct = twiddle_h_rsc_triosy_0_11_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_12_obj_twiddle_h_rsc_triosy_0_12_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_12_obj_twiddle_h_rsc_triosy_0_12_wait_ctrl
    (
  core_wten, twiddle_h_rsc_triosy_0_12_obj_iswt0, twiddle_h_rsc_triosy_0_12_obj_ld_core_sct
);
  input core_wten;
  input twiddle_h_rsc_triosy_0_12_obj_iswt0;
  output twiddle_h_rsc_triosy_0_12_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_triosy_0_12_obj_ld_core_sct = twiddle_h_rsc_triosy_0_12_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_13_obj_twiddle_h_rsc_triosy_0_13_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_13_obj_twiddle_h_rsc_triosy_0_13_wait_ctrl
    (
  core_wten, twiddle_h_rsc_triosy_0_13_obj_iswt0, twiddle_h_rsc_triosy_0_13_obj_ld_core_sct
);
  input core_wten;
  input twiddle_h_rsc_triosy_0_13_obj_iswt0;
  output twiddle_h_rsc_triosy_0_13_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_triosy_0_13_obj_ld_core_sct = twiddle_h_rsc_triosy_0_13_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_14_obj_twiddle_h_rsc_triosy_0_14_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_14_obj_twiddle_h_rsc_triosy_0_14_wait_ctrl
    (
  core_wten, twiddle_h_rsc_triosy_0_14_obj_iswt0, twiddle_h_rsc_triosy_0_14_obj_ld_core_sct
);
  input core_wten;
  input twiddle_h_rsc_triosy_0_14_obj_iswt0;
  output twiddle_h_rsc_triosy_0_14_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_triosy_0_14_obj_ld_core_sct = twiddle_h_rsc_triosy_0_14_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_15_obj_twiddle_h_rsc_triosy_0_15_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_15_obj_twiddle_h_rsc_triosy_0_15_wait_ctrl
    (
  core_wten, twiddle_h_rsc_triosy_0_15_obj_iswt0, twiddle_h_rsc_triosy_0_15_obj_ld_core_sct
);
  input core_wten;
  input twiddle_h_rsc_triosy_0_15_obj_iswt0;
  output twiddle_h_rsc_triosy_0_15_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_triosy_0_15_obj_ld_core_sct = twiddle_h_rsc_triosy_0_15_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_0_obj_twiddle_rsc_triosy_0_0_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_0_obj_twiddle_rsc_triosy_0_0_wait_ctrl
    (
  core_wten, twiddle_rsc_triosy_0_0_obj_iswt0, twiddle_rsc_triosy_0_0_obj_ld_core_sct
);
  input core_wten;
  input twiddle_rsc_triosy_0_0_obj_iswt0;
  output twiddle_rsc_triosy_0_0_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_triosy_0_0_obj_ld_core_sct = twiddle_rsc_triosy_0_0_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_1_obj_twiddle_rsc_triosy_0_1_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_1_obj_twiddle_rsc_triosy_0_1_wait_ctrl
    (
  core_wten, twiddle_rsc_triosy_0_1_obj_iswt0, twiddle_rsc_triosy_0_1_obj_ld_core_sct
);
  input core_wten;
  input twiddle_rsc_triosy_0_1_obj_iswt0;
  output twiddle_rsc_triosy_0_1_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_triosy_0_1_obj_ld_core_sct = twiddle_rsc_triosy_0_1_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_2_obj_twiddle_rsc_triosy_0_2_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_2_obj_twiddle_rsc_triosy_0_2_wait_ctrl
    (
  core_wten, twiddle_rsc_triosy_0_2_obj_iswt0, twiddle_rsc_triosy_0_2_obj_ld_core_sct
);
  input core_wten;
  input twiddle_rsc_triosy_0_2_obj_iswt0;
  output twiddle_rsc_triosy_0_2_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_triosy_0_2_obj_ld_core_sct = twiddle_rsc_triosy_0_2_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_3_obj_twiddle_rsc_triosy_0_3_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_3_obj_twiddle_rsc_triosy_0_3_wait_ctrl
    (
  core_wten, twiddle_rsc_triosy_0_3_obj_iswt0, twiddle_rsc_triosy_0_3_obj_ld_core_sct
);
  input core_wten;
  input twiddle_rsc_triosy_0_3_obj_iswt0;
  output twiddle_rsc_triosy_0_3_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_triosy_0_3_obj_ld_core_sct = twiddle_rsc_triosy_0_3_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_4_obj_twiddle_rsc_triosy_0_4_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_4_obj_twiddle_rsc_triosy_0_4_wait_ctrl
    (
  core_wten, twiddle_rsc_triosy_0_4_obj_iswt0, twiddle_rsc_triosy_0_4_obj_ld_core_sct
);
  input core_wten;
  input twiddle_rsc_triosy_0_4_obj_iswt0;
  output twiddle_rsc_triosy_0_4_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_triosy_0_4_obj_ld_core_sct = twiddle_rsc_triosy_0_4_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_5_obj_twiddle_rsc_triosy_0_5_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_5_obj_twiddle_rsc_triosy_0_5_wait_ctrl
    (
  core_wten, twiddle_rsc_triosy_0_5_obj_iswt0, twiddle_rsc_triosy_0_5_obj_ld_core_sct
);
  input core_wten;
  input twiddle_rsc_triosy_0_5_obj_iswt0;
  output twiddle_rsc_triosy_0_5_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_triosy_0_5_obj_ld_core_sct = twiddle_rsc_triosy_0_5_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_6_obj_twiddle_rsc_triosy_0_6_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_6_obj_twiddle_rsc_triosy_0_6_wait_ctrl
    (
  core_wten, twiddle_rsc_triosy_0_6_obj_iswt0, twiddle_rsc_triosy_0_6_obj_ld_core_sct
);
  input core_wten;
  input twiddle_rsc_triosy_0_6_obj_iswt0;
  output twiddle_rsc_triosy_0_6_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_triosy_0_6_obj_ld_core_sct = twiddle_rsc_triosy_0_6_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_7_obj_twiddle_rsc_triosy_0_7_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_7_obj_twiddle_rsc_triosy_0_7_wait_ctrl
    (
  core_wten, twiddle_rsc_triosy_0_7_obj_iswt0, twiddle_rsc_triosy_0_7_obj_ld_core_sct
);
  input core_wten;
  input twiddle_rsc_triosy_0_7_obj_iswt0;
  output twiddle_rsc_triosy_0_7_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_triosy_0_7_obj_ld_core_sct = twiddle_rsc_triosy_0_7_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_8_obj_twiddle_rsc_triosy_0_8_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_8_obj_twiddle_rsc_triosy_0_8_wait_ctrl
    (
  core_wten, twiddle_rsc_triosy_0_8_obj_iswt0, twiddle_rsc_triosy_0_8_obj_ld_core_sct
);
  input core_wten;
  input twiddle_rsc_triosy_0_8_obj_iswt0;
  output twiddle_rsc_triosy_0_8_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_triosy_0_8_obj_ld_core_sct = twiddle_rsc_triosy_0_8_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_9_obj_twiddle_rsc_triosy_0_9_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_9_obj_twiddle_rsc_triosy_0_9_wait_ctrl
    (
  core_wten, twiddle_rsc_triosy_0_9_obj_iswt0, twiddle_rsc_triosy_0_9_obj_ld_core_sct
);
  input core_wten;
  input twiddle_rsc_triosy_0_9_obj_iswt0;
  output twiddle_rsc_triosy_0_9_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_triosy_0_9_obj_ld_core_sct = twiddle_rsc_triosy_0_9_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_10_obj_twiddle_rsc_triosy_0_10_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_10_obj_twiddle_rsc_triosy_0_10_wait_ctrl
    (
  core_wten, twiddle_rsc_triosy_0_10_obj_iswt0, twiddle_rsc_triosy_0_10_obj_ld_core_sct
);
  input core_wten;
  input twiddle_rsc_triosy_0_10_obj_iswt0;
  output twiddle_rsc_triosy_0_10_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_triosy_0_10_obj_ld_core_sct = twiddle_rsc_triosy_0_10_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_11_obj_twiddle_rsc_triosy_0_11_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_11_obj_twiddle_rsc_triosy_0_11_wait_ctrl
    (
  core_wten, twiddle_rsc_triosy_0_11_obj_iswt0, twiddle_rsc_triosy_0_11_obj_ld_core_sct
);
  input core_wten;
  input twiddle_rsc_triosy_0_11_obj_iswt0;
  output twiddle_rsc_triosy_0_11_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_triosy_0_11_obj_ld_core_sct = twiddle_rsc_triosy_0_11_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_12_obj_twiddle_rsc_triosy_0_12_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_12_obj_twiddle_rsc_triosy_0_12_wait_ctrl
    (
  core_wten, twiddle_rsc_triosy_0_12_obj_iswt0, twiddle_rsc_triosy_0_12_obj_ld_core_sct
);
  input core_wten;
  input twiddle_rsc_triosy_0_12_obj_iswt0;
  output twiddle_rsc_triosy_0_12_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_triosy_0_12_obj_ld_core_sct = twiddle_rsc_triosy_0_12_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_13_obj_twiddle_rsc_triosy_0_13_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_13_obj_twiddle_rsc_triosy_0_13_wait_ctrl
    (
  core_wten, twiddle_rsc_triosy_0_13_obj_iswt0, twiddle_rsc_triosy_0_13_obj_ld_core_sct
);
  input core_wten;
  input twiddle_rsc_triosy_0_13_obj_iswt0;
  output twiddle_rsc_triosy_0_13_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_triosy_0_13_obj_ld_core_sct = twiddle_rsc_triosy_0_13_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_14_obj_twiddle_rsc_triosy_0_14_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_14_obj_twiddle_rsc_triosy_0_14_wait_ctrl
    (
  core_wten, twiddle_rsc_triosy_0_14_obj_iswt0, twiddle_rsc_triosy_0_14_obj_ld_core_sct
);
  input core_wten;
  input twiddle_rsc_triosy_0_14_obj_iswt0;
  output twiddle_rsc_triosy_0_14_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_triosy_0_14_obj_ld_core_sct = twiddle_rsc_triosy_0_14_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_15_obj_twiddle_rsc_triosy_0_15_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_15_obj_twiddle_rsc_triosy_0_15_wait_ctrl
    (
  core_wten, twiddle_rsc_triosy_0_15_obj_iswt0, twiddle_rsc_triosy_0_15_obj_ld_core_sct
);
  input core_wten;
  input twiddle_rsc_triosy_0_15_obj_iswt0;
  output twiddle_rsc_triosy_0_15_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_triosy_0_15_obj_ld_core_sct = twiddle_rsc_triosy_0_15_obj_iswt0
      & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_r_rsc_triosy_obj_r_rsc_triosy_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_r_rsc_triosy_obj_r_rsc_triosy_wait_ctrl (
  core_wten, r_rsc_triosy_obj_iswt0, r_rsc_triosy_obj_ld_core_sct
);
  input core_wten;
  input r_rsc_triosy_obj_iswt0;
  output r_rsc_triosy_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign r_rsc_triosy_obj_ld_core_sct = r_rsc_triosy_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_p_rsc_triosy_obj_p_rsc_triosy_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_p_rsc_triosy_obj_p_rsc_triosy_wait_ctrl (
  core_wten, p_rsc_triosy_obj_iswt0, p_rsc_triosy_obj_ld_core_sct
);
  input core_wten;
  input p_rsc_triosy_obj_iswt0;
  output p_rsc_triosy_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign p_rsc_triosy_obj_ld_core_sct = p_rsc_triosy_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_0_obj_xt_rsc_triosy_0_0_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_0_obj_xt_rsc_triosy_0_0_wait_ctrl (
  core_wten, xt_rsc_triosy_0_0_obj_iswt0, xt_rsc_triosy_0_0_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_0_obj_iswt0;
  output xt_rsc_triosy_0_0_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_0_obj_ld_core_sct = xt_rsc_triosy_0_0_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_1_obj_xt_rsc_triosy_0_1_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_1_obj_xt_rsc_triosy_0_1_wait_ctrl (
  core_wten, xt_rsc_triosy_0_1_obj_iswt0, xt_rsc_triosy_0_1_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_1_obj_iswt0;
  output xt_rsc_triosy_0_1_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_1_obj_ld_core_sct = xt_rsc_triosy_0_1_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_2_obj_xt_rsc_triosy_0_2_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_2_obj_xt_rsc_triosy_0_2_wait_ctrl (
  core_wten, xt_rsc_triosy_0_2_obj_iswt0, xt_rsc_triosy_0_2_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_2_obj_iswt0;
  output xt_rsc_triosy_0_2_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_2_obj_ld_core_sct = xt_rsc_triosy_0_2_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_3_obj_xt_rsc_triosy_0_3_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_3_obj_xt_rsc_triosy_0_3_wait_ctrl (
  core_wten, xt_rsc_triosy_0_3_obj_iswt0, xt_rsc_triosy_0_3_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_3_obj_iswt0;
  output xt_rsc_triosy_0_3_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_3_obj_ld_core_sct = xt_rsc_triosy_0_3_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_4_obj_xt_rsc_triosy_0_4_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_4_obj_xt_rsc_triosy_0_4_wait_ctrl (
  core_wten, xt_rsc_triosy_0_4_obj_iswt0, xt_rsc_triosy_0_4_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_4_obj_iswt0;
  output xt_rsc_triosy_0_4_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_4_obj_ld_core_sct = xt_rsc_triosy_0_4_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_5_obj_xt_rsc_triosy_0_5_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_5_obj_xt_rsc_triosy_0_5_wait_ctrl (
  core_wten, xt_rsc_triosy_0_5_obj_iswt0, xt_rsc_triosy_0_5_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_5_obj_iswt0;
  output xt_rsc_triosy_0_5_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_5_obj_ld_core_sct = xt_rsc_triosy_0_5_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_6_obj_xt_rsc_triosy_0_6_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_6_obj_xt_rsc_triosy_0_6_wait_ctrl (
  core_wten, xt_rsc_triosy_0_6_obj_iswt0, xt_rsc_triosy_0_6_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_6_obj_iswt0;
  output xt_rsc_triosy_0_6_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_6_obj_ld_core_sct = xt_rsc_triosy_0_6_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_7_obj_xt_rsc_triosy_0_7_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_7_obj_xt_rsc_triosy_0_7_wait_ctrl (
  core_wten, xt_rsc_triosy_0_7_obj_iswt0, xt_rsc_triosy_0_7_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_7_obj_iswt0;
  output xt_rsc_triosy_0_7_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_7_obj_ld_core_sct = xt_rsc_triosy_0_7_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_8_obj_xt_rsc_triosy_0_8_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_8_obj_xt_rsc_triosy_0_8_wait_ctrl (
  core_wten, xt_rsc_triosy_0_8_obj_iswt0, xt_rsc_triosy_0_8_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_8_obj_iswt0;
  output xt_rsc_triosy_0_8_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_8_obj_ld_core_sct = xt_rsc_triosy_0_8_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_9_obj_xt_rsc_triosy_0_9_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_9_obj_xt_rsc_triosy_0_9_wait_ctrl (
  core_wten, xt_rsc_triosy_0_9_obj_iswt0, xt_rsc_triosy_0_9_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_9_obj_iswt0;
  output xt_rsc_triosy_0_9_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_9_obj_ld_core_sct = xt_rsc_triosy_0_9_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_10_obj_xt_rsc_triosy_0_10_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_10_obj_xt_rsc_triosy_0_10_wait_ctrl (
  core_wten, xt_rsc_triosy_0_10_obj_iswt0, xt_rsc_triosy_0_10_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_10_obj_iswt0;
  output xt_rsc_triosy_0_10_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_10_obj_ld_core_sct = xt_rsc_triosy_0_10_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_11_obj_xt_rsc_triosy_0_11_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_11_obj_xt_rsc_triosy_0_11_wait_ctrl (
  core_wten, xt_rsc_triosy_0_11_obj_iswt0, xt_rsc_triosy_0_11_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_11_obj_iswt0;
  output xt_rsc_triosy_0_11_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_11_obj_ld_core_sct = xt_rsc_triosy_0_11_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_12_obj_xt_rsc_triosy_0_12_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_12_obj_xt_rsc_triosy_0_12_wait_ctrl (
  core_wten, xt_rsc_triosy_0_12_obj_iswt0, xt_rsc_triosy_0_12_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_12_obj_iswt0;
  output xt_rsc_triosy_0_12_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_12_obj_ld_core_sct = xt_rsc_triosy_0_12_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_13_obj_xt_rsc_triosy_0_13_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_13_obj_xt_rsc_triosy_0_13_wait_ctrl (
  core_wten, xt_rsc_triosy_0_13_obj_iswt0, xt_rsc_triosy_0_13_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_13_obj_iswt0;
  output xt_rsc_triosy_0_13_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_13_obj_ld_core_sct = xt_rsc_triosy_0_13_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_14_obj_xt_rsc_triosy_0_14_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_14_obj_xt_rsc_triosy_0_14_wait_ctrl (
  core_wten, xt_rsc_triosy_0_14_obj_iswt0, xt_rsc_triosy_0_14_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_14_obj_iswt0;
  output xt_rsc_triosy_0_14_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_14_obj_ld_core_sct = xt_rsc_triosy_0_14_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_15_obj_xt_rsc_triosy_0_15_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_15_obj_xt_rsc_triosy_0_15_wait_ctrl (
  core_wten, xt_rsc_triosy_0_15_obj_iswt0, xt_rsc_triosy_0_15_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_15_obj_iswt0;
  output xt_rsc_triosy_0_15_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_15_obj_ld_core_sct = xt_rsc_triosy_0_15_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_16_obj_xt_rsc_triosy_0_16_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_16_obj_xt_rsc_triosy_0_16_wait_ctrl (
  core_wten, xt_rsc_triosy_0_16_obj_iswt0, xt_rsc_triosy_0_16_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_16_obj_iswt0;
  output xt_rsc_triosy_0_16_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_16_obj_ld_core_sct = xt_rsc_triosy_0_16_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_17_obj_xt_rsc_triosy_0_17_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_17_obj_xt_rsc_triosy_0_17_wait_ctrl (
  core_wten, xt_rsc_triosy_0_17_obj_iswt0, xt_rsc_triosy_0_17_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_17_obj_iswt0;
  output xt_rsc_triosy_0_17_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_17_obj_ld_core_sct = xt_rsc_triosy_0_17_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_18_obj_xt_rsc_triosy_0_18_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_18_obj_xt_rsc_triosy_0_18_wait_ctrl (
  core_wten, xt_rsc_triosy_0_18_obj_iswt0, xt_rsc_triosy_0_18_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_18_obj_iswt0;
  output xt_rsc_triosy_0_18_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_18_obj_ld_core_sct = xt_rsc_triosy_0_18_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_19_obj_xt_rsc_triosy_0_19_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_19_obj_xt_rsc_triosy_0_19_wait_ctrl (
  core_wten, xt_rsc_triosy_0_19_obj_iswt0, xt_rsc_triosy_0_19_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_19_obj_iswt0;
  output xt_rsc_triosy_0_19_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_19_obj_ld_core_sct = xt_rsc_triosy_0_19_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_20_obj_xt_rsc_triosy_0_20_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_20_obj_xt_rsc_triosy_0_20_wait_ctrl (
  core_wten, xt_rsc_triosy_0_20_obj_iswt0, xt_rsc_triosy_0_20_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_20_obj_iswt0;
  output xt_rsc_triosy_0_20_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_20_obj_ld_core_sct = xt_rsc_triosy_0_20_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_21_obj_xt_rsc_triosy_0_21_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_21_obj_xt_rsc_triosy_0_21_wait_ctrl (
  core_wten, xt_rsc_triosy_0_21_obj_iswt0, xt_rsc_triosy_0_21_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_21_obj_iswt0;
  output xt_rsc_triosy_0_21_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_21_obj_ld_core_sct = xt_rsc_triosy_0_21_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_22_obj_xt_rsc_triosy_0_22_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_22_obj_xt_rsc_triosy_0_22_wait_ctrl (
  core_wten, xt_rsc_triosy_0_22_obj_iswt0, xt_rsc_triosy_0_22_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_22_obj_iswt0;
  output xt_rsc_triosy_0_22_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_22_obj_ld_core_sct = xt_rsc_triosy_0_22_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_23_obj_xt_rsc_triosy_0_23_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_23_obj_xt_rsc_triosy_0_23_wait_ctrl (
  core_wten, xt_rsc_triosy_0_23_obj_iswt0, xt_rsc_triosy_0_23_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_23_obj_iswt0;
  output xt_rsc_triosy_0_23_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_23_obj_ld_core_sct = xt_rsc_triosy_0_23_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_24_obj_xt_rsc_triosy_0_24_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_24_obj_xt_rsc_triosy_0_24_wait_ctrl (
  core_wten, xt_rsc_triosy_0_24_obj_iswt0, xt_rsc_triosy_0_24_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_24_obj_iswt0;
  output xt_rsc_triosy_0_24_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_24_obj_ld_core_sct = xt_rsc_triosy_0_24_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_25_obj_xt_rsc_triosy_0_25_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_25_obj_xt_rsc_triosy_0_25_wait_ctrl (
  core_wten, xt_rsc_triosy_0_25_obj_iswt0, xt_rsc_triosy_0_25_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_25_obj_iswt0;
  output xt_rsc_triosy_0_25_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_25_obj_ld_core_sct = xt_rsc_triosy_0_25_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_26_obj_xt_rsc_triosy_0_26_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_26_obj_xt_rsc_triosy_0_26_wait_ctrl (
  core_wten, xt_rsc_triosy_0_26_obj_iswt0, xt_rsc_triosy_0_26_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_26_obj_iswt0;
  output xt_rsc_triosy_0_26_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_26_obj_ld_core_sct = xt_rsc_triosy_0_26_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_27_obj_xt_rsc_triosy_0_27_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_27_obj_xt_rsc_triosy_0_27_wait_ctrl (
  core_wten, xt_rsc_triosy_0_27_obj_iswt0, xt_rsc_triosy_0_27_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_27_obj_iswt0;
  output xt_rsc_triosy_0_27_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_27_obj_ld_core_sct = xt_rsc_triosy_0_27_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_28_obj_xt_rsc_triosy_0_28_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_28_obj_xt_rsc_triosy_0_28_wait_ctrl (
  core_wten, xt_rsc_triosy_0_28_obj_iswt0, xt_rsc_triosy_0_28_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_28_obj_iswt0;
  output xt_rsc_triosy_0_28_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_28_obj_ld_core_sct = xt_rsc_triosy_0_28_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_29_obj_xt_rsc_triosy_0_29_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_29_obj_xt_rsc_triosy_0_29_wait_ctrl (
  core_wten, xt_rsc_triosy_0_29_obj_iswt0, xt_rsc_triosy_0_29_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_29_obj_iswt0;
  output xt_rsc_triosy_0_29_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_29_obj_ld_core_sct = xt_rsc_triosy_0_29_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_30_obj_xt_rsc_triosy_0_30_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_30_obj_xt_rsc_triosy_0_30_wait_ctrl (
  core_wten, xt_rsc_triosy_0_30_obj_iswt0, xt_rsc_triosy_0_30_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_30_obj_iswt0;
  output xt_rsc_triosy_0_30_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_30_obj_ld_core_sct = xt_rsc_triosy_0_30_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_31_obj_xt_rsc_triosy_0_31_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_31_obj_xt_rsc_triosy_0_31_wait_ctrl (
  core_wten, xt_rsc_triosy_0_31_obj_iswt0, xt_rsc_triosy_0_31_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_0_31_obj_iswt0;
  output xt_rsc_triosy_0_31_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_0_31_obj_ld_core_sct = xt_rsc_triosy_0_31_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_0_obj_xt_rsc_triosy_1_0_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_0_obj_xt_rsc_triosy_1_0_wait_ctrl (
  core_wten, xt_rsc_triosy_1_0_obj_iswt0, xt_rsc_triosy_1_0_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_0_obj_iswt0;
  output xt_rsc_triosy_1_0_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_0_obj_ld_core_sct = xt_rsc_triosy_1_0_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_1_obj_xt_rsc_triosy_1_1_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_1_obj_xt_rsc_triosy_1_1_wait_ctrl (
  core_wten, xt_rsc_triosy_1_1_obj_iswt0, xt_rsc_triosy_1_1_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_1_obj_iswt0;
  output xt_rsc_triosy_1_1_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_1_obj_ld_core_sct = xt_rsc_triosy_1_1_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_2_obj_xt_rsc_triosy_1_2_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_2_obj_xt_rsc_triosy_1_2_wait_ctrl (
  core_wten, xt_rsc_triosy_1_2_obj_iswt0, xt_rsc_triosy_1_2_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_2_obj_iswt0;
  output xt_rsc_triosy_1_2_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_2_obj_ld_core_sct = xt_rsc_triosy_1_2_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_3_obj_xt_rsc_triosy_1_3_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_3_obj_xt_rsc_triosy_1_3_wait_ctrl (
  core_wten, xt_rsc_triosy_1_3_obj_iswt0, xt_rsc_triosy_1_3_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_3_obj_iswt0;
  output xt_rsc_triosy_1_3_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_3_obj_ld_core_sct = xt_rsc_triosy_1_3_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_4_obj_xt_rsc_triosy_1_4_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_4_obj_xt_rsc_triosy_1_4_wait_ctrl (
  core_wten, xt_rsc_triosy_1_4_obj_iswt0, xt_rsc_triosy_1_4_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_4_obj_iswt0;
  output xt_rsc_triosy_1_4_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_4_obj_ld_core_sct = xt_rsc_triosy_1_4_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_5_obj_xt_rsc_triosy_1_5_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_5_obj_xt_rsc_triosy_1_5_wait_ctrl (
  core_wten, xt_rsc_triosy_1_5_obj_iswt0, xt_rsc_triosy_1_5_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_5_obj_iswt0;
  output xt_rsc_triosy_1_5_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_5_obj_ld_core_sct = xt_rsc_triosy_1_5_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_6_obj_xt_rsc_triosy_1_6_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_6_obj_xt_rsc_triosy_1_6_wait_ctrl (
  core_wten, xt_rsc_triosy_1_6_obj_iswt0, xt_rsc_triosy_1_6_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_6_obj_iswt0;
  output xt_rsc_triosy_1_6_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_6_obj_ld_core_sct = xt_rsc_triosy_1_6_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_7_obj_xt_rsc_triosy_1_7_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_7_obj_xt_rsc_triosy_1_7_wait_ctrl (
  core_wten, xt_rsc_triosy_1_7_obj_iswt0, xt_rsc_triosy_1_7_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_7_obj_iswt0;
  output xt_rsc_triosy_1_7_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_7_obj_ld_core_sct = xt_rsc_triosy_1_7_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_8_obj_xt_rsc_triosy_1_8_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_8_obj_xt_rsc_triosy_1_8_wait_ctrl (
  core_wten, xt_rsc_triosy_1_8_obj_iswt0, xt_rsc_triosy_1_8_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_8_obj_iswt0;
  output xt_rsc_triosy_1_8_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_8_obj_ld_core_sct = xt_rsc_triosy_1_8_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_9_obj_xt_rsc_triosy_1_9_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_9_obj_xt_rsc_triosy_1_9_wait_ctrl (
  core_wten, xt_rsc_triosy_1_9_obj_iswt0, xt_rsc_triosy_1_9_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_9_obj_iswt0;
  output xt_rsc_triosy_1_9_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_9_obj_ld_core_sct = xt_rsc_triosy_1_9_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_10_obj_xt_rsc_triosy_1_10_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_10_obj_xt_rsc_triosy_1_10_wait_ctrl (
  core_wten, xt_rsc_triosy_1_10_obj_iswt0, xt_rsc_triosy_1_10_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_10_obj_iswt0;
  output xt_rsc_triosy_1_10_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_10_obj_ld_core_sct = xt_rsc_triosy_1_10_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_11_obj_xt_rsc_triosy_1_11_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_11_obj_xt_rsc_triosy_1_11_wait_ctrl (
  core_wten, xt_rsc_triosy_1_11_obj_iswt0, xt_rsc_triosy_1_11_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_11_obj_iswt0;
  output xt_rsc_triosy_1_11_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_11_obj_ld_core_sct = xt_rsc_triosy_1_11_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_12_obj_xt_rsc_triosy_1_12_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_12_obj_xt_rsc_triosy_1_12_wait_ctrl (
  core_wten, xt_rsc_triosy_1_12_obj_iswt0, xt_rsc_triosy_1_12_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_12_obj_iswt0;
  output xt_rsc_triosy_1_12_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_12_obj_ld_core_sct = xt_rsc_triosy_1_12_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_13_obj_xt_rsc_triosy_1_13_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_13_obj_xt_rsc_triosy_1_13_wait_ctrl (
  core_wten, xt_rsc_triosy_1_13_obj_iswt0, xt_rsc_triosy_1_13_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_13_obj_iswt0;
  output xt_rsc_triosy_1_13_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_13_obj_ld_core_sct = xt_rsc_triosy_1_13_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_14_obj_xt_rsc_triosy_1_14_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_14_obj_xt_rsc_triosy_1_14_wait_ctrl (
  core_wten, xt_rsc_triosy_1_14_obj_iswt0, xt_rsc_triosy_1_14_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_14_obj_iswt0;
  output xt_rsc_triosy_1_14_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_14_obj_ld_core_sct = xt_rsc_triosy_1_14_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_15_obj_xt_rsc_triosy_1_15_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_15_obj_xt_rsc_triosy_1_15_wait_ctrl (
  core_wten, xt_rsc_triosy_1_15_obj_iswt0, xt_rsc_triosy_1_15_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_15_obj_iswt0;
  output xt_rsc_triosy_1_15_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_15_obj_ld_core_sct = xt_rsc_triosy_1_15_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_16_obj_xt_rsc_triosy_1_16_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_16_obj_xt_rsc_triosy_1_16_wait_ctrl (
  core_wten, xt_rsc_triosy_1_16_obj_iswt0, xt_rsc_triosy_1_16_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_16_obj_iswt0;
  output xt_rsc_triosy_1_16_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_16_obj_ld_core_sct = xt_rsc_triosy_1_16_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_17_obj_xt_rsc_triosy_1_17_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_17_obj_xt_rsc_triosy_1_17_wait_ctrl (
  core_wten, xt_rsc_triosy_1_17_obj_iswt0, xt_rsc_triosy_1_17_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_17_obj_iswt0;
  output xt_rsc_triosy_1_17_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_17_obj_ld_core_sct = xt_rsc_triosy_1_17_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_18_obj_xt_rsc_triosy_1_18_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_18_obj_xt_rsc_triosy_1_18_wait_ctrl (
  core_wten, xt_rsc_triosy_1_18_obj_iswt0, xt_rsc_triosy_1_18_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_18_obj_iswt0;
  output xt_rsc_triosy_1_18_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_18_obj_ld_core_sct = xt_rsc_triosy_1_18_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_19_obj_xt_rsc_triosy_1_19_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_19_obj_xt_rsc_triosy_1_19_wait_ctrl (
  core_wten, xt_rsc_triosy_1_19_obj_iswt0, xt_rsc_triosy_1_19_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_19_obj_iswt0;
  output xt_rsc_triosy_1_19_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_19_obj_ld_core_sct = xt_rsc_triosy_1_19_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_20_obj_xt_rsc_triosy_1_20_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_20_obj_xt_rsc_triosy_1_20_wait_ctrl (
  core_wten, xt_rsc_triosy_1_20_obj_iswt0, xt_rsc_triosy_1_20_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_20_obj_iswt0;
  output xt_rsc_triosy_1_20_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_20_obj_ld_core_sct = xt_rsc_triosy_1_20_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_21_obj_xt_rsc_triosy_1_21_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_21_obj_xt_rsc_triosy_1_21_wait_ctrl (
  core_wten, xt_rsc_triosy_1_21_obj_iswt0, xt_rsc_triosy_1_21_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_21_obj_iswt0;
  output xt_rsc_triosy_1_21_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_21_obj_ld_core_sct = xt_rsc_triosy_1_21_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_22_obj_xt_rsc_triosy_1_22_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_22_obj_xt_rsc_triosy_1_22_wait_ctrl (
  core_wten, xt_rsc_triosy_1_22_obj_iswt0, xt_rsc_triosy_1_22_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_22_obj_iswt0;
  output xt_rsc_triosy_1_22_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_22_obj_ld_core_sct = xt_rsc_triosy_1_22_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_23_obj_xt_rsc_triosy_1_23_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_23_obj_xt_rsc_triosy_1_23_wait_ctrl (
  core_wten, xt_rsc_triosy_1_23_obj_iswt0, xt_rsc_triosy_1_23_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_23_obj_iswt0;
  output xt_rsc_triosy_1_23_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_23_obj_ld_core_sct = xt_rsc_triosy_1_23_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_24_obj_xt_rsc_triosy_1_24_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_24_obj_xt_rsc_triosy_1_24_wait_ctrl (
  core_wten, xt_rsc_triosy_1_24_obj_iswt0, xt_rsc_triosy_1_24_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_24_obj_iswt0;
  output xt_rsc_triosy_1_24_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_24_obj_ld_core_sct = xt_rsc_triosy_1_24_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_25_obj_xt_rsc_triosy_1_25_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_25_obj_xt_rsc_triosy_1_25_wait_ctrl (
  core_wten, xt_rsc_triosy_1_25_obj_iswt0, xt_rsc_triosy_1_25_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_25_obj_iswt0;
  output xt_rsc_triosy_1_25_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_25_obj_ld_core_sct = xt_rsc_triosy_1_25_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_26_obj_xt_rsc_triosy_1_26_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_26_obj_xt_rsc_triosy_1_26_wait_ctrl (
  core_wten, xt_rsc_triosy_1_26_obj_iswt0, xt_rsc_triosy_1_26_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_26_obj_iswt0;
  output xt_rsc_triosy_1_26_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_26_obj_ld_core_sct = xt_rsc_triosy_1_26_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_27_obj_xt_rsc_triosy_1_27_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_27_obj_xt_rsc_triosy_1_27_wait_ctrl (
  core_wten, xt_rsc_triosy_1_27_obj_iswt0, xt_rsc_triosy_1_27_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_27_obj_iswt0;
  output xt_rsc_triosy_1_27_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_27_obj_ld_core_sct = xt_rsc_triosy_1_27_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_28_obj_xt_rsc_triosy_1_28_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_28_obj_xt_rsc_triosy_1_28_wait_ctrl (
  core_wten, xt_rsc_triosy_1_28_obj_iswt0, xt_rsc_triosy_1_28_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_28_obj_iswt0;
  output xt_rsc_triosy_1_28_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_28_obj_ld_core_sct = xt_rsc_triosy_1_28_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_29_obj_xt_rsc_triosy_1_29_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_29_obj_xt_rsc_triosy_1_29_wait_ctrl (
  core_wten, xt_rsc_triosy_1_29_obj_iswt0, xt_rsc_triosy_1_29_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_29_obj_iswt0;
  output xt_rsc_triosy_1_29_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_29_obj_ld_core_sct = xt_rsc_triosy_1_29_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_30_obj_xt_rsc_triosy_1_30_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_30_obj_xt_rsc_triosy_1_30_wait_ctrl (
  core_wten, xt_rsc_triosy_1_30_obj_iswt0, xt_rsc_triosy_1_30_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_30_obj_iswt0;
  output xt_rsc_triosy_1_30_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_30_obj_ld_core_sct = xt_rsc_triosy_1_30_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_31_obj_xt_rsc_triosy_1_31_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_31_obj_xt_rsc_triosy_1_31_wait_ctrl (
  core_wten, xt_rsc_triosy_1_31_obj_iswt0, xt_rsc_triosy_1_31_obj_ld_core_sct
);
  input core_wten;
  input xt_rsc_triosy_1_31_obj_iswt0;
  output xt_rsc_triosy_1_31_obj_ld_core_sct;



  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_triosy_1_31_obj_ld_core_sct = xt_rsc_triosy_1_31_obj_iswt0 & (~ core_wten);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_15_i_twiddle_h_rsc_0_15_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_15_i_twiddle_h_rsc_0_15_wait_dp (
  clk, rst, twiddle_h_rsc_0_15_i_oswt, twiddle_h_rsc_0_15_i_wen_comp, twiddle_h_rsc_0_15_i_s_raddr_core,
      twiddle_h_rsc_0_15_i_s_din_mxwt, twiddle_h_rsc_0_15_i_biwt, twiddle_h_rsc_0_15_i_bdwt,
      twiddle_h_rsc_0_15_i_bcwt, twiddle_h_rsc_0_15_i_s_raddr, twiddle_h_rsc_0_15_i_s_raddr_core_sct,
      twiddle_h_rsc_0_15_i_s_din
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_15_i_oswt;
  output twiddle_h_rsc_0_15_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_15_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_15_i_s_din_mxwt;
  input twiddle_h_rsc_0_15_i_biwt;
  input twiddle_h_rsc_0_15_i_bdwt;
  output twiddle_h_rsc_0_15_i_bcwt;
  reg twiddle_h_rsc_0_15_i_bcwt;
  output [5:0] twiddle_h_rsc_0_15_i_s_raddr;
  input twiddle_h_rsc_0_15_i_s_raddr_core_sct;
  input [31:0] twiddle_h_rsc_0_15_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_h_rsc_0_15_i_s_din_bfwt;

  wire[4:0] butterFly2_15_tw_h_butterFly2_15_tw_h_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_15_i_wen_comp = (~ twiddle_h_rsc_0_15_i_oswt) | twiddle_h_rsc_0_15_i_biwt
      | twiddle_h_rsc_0_15_i_bcwt;
  assign butterFly2_15_tw_h_butterFly2_15_tw_h_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_h_rsc_0_15_i_s_raddr_core[4:0]),
      twiddle_h_rsc_0_15_i_s_raddr_core_sct);
  assign twiddle_h_rsc_0_15_i_s_raddr = {1'b0, butterFly2_15_tw_h_butterFly2_15_tw_h_and_nl};
  assign twiddle_h_rsc_0_15_i_s_din_mxwt = MUX_v_32_2_2(twiddle_h_rsc_0_15_i_s_din,
      twiddle_h_rsc_0_15_i_s_din_bfwt, twiddle_h_rsc_0_15_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_h_rsc_0_15_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_h_rsc_0_15_i_bcwt <= ~((~(twiddle_h_rsc_0_15_i_bcwt | twiddle_h_rsc_0_15_i_biwt))
          | twiddle_h_rsc_0_15_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_h_rsc_0_15_i_biwt ) begin
      twiddle_h_rsc_0_15_i_s_din_bfwt <= twiddle_h_rsc_0_15_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_15_i_twiddle_h_rsc_0_15_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_15_i_twiddle_h_rsc_0_15_wait_ctrl (
  core_wen, twiddle_h_rsc_0_15_i_oswt, twiddle_h_rsc_0_15_i_biwt, twiddle_h_rsc_0_15_i_bdwt,
      twiddle_h_rsc_0_15_i_bcwt, twiddle_h_rsc_0_15_i_s_re_core_sct, twiddle_h_rsc_0_15_i_s_rrdy
);
  input core_wen;
  input twiddle_h_rsc_0_15_i_oswt;
  output twiddle_h_rsc_0_15_i_biwt;
  output twiddle_h_rsc_0_15_i_bdwt;
  input twiddle_h_rsc_0_15_i_bcwt;
  output twiddle_h_rsc_0_15_i_s_re_core_sct;
  input twiddle_h_rsc_0_15_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_15_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_15_i_bdwt = twiddle_h_rsc_0_15_i_oswt & core_wen;
  assign twiddle_h_rsc_0_15_i_biwt = twiddle_h_rsc_0_15_i_ogwt & twiddle_h_rsc_0_15_i_s_rrdy;
  assign twiddle_h_rsc_0_15_i_ogwt = twiddle_h_rsc_0_15_i_oswt & (~ twiddle_h_rsc_0_15_i_bcwt);
  assign twiddle_h_rsc_0_15_i_s_re_core_sct = twiddle_h_rsc_0_15_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_14_i_twiddle_h_rsc_0_14_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_14_i_twiddle_h_rsc_0_14_wait_dp (
  clk, rst, twiddle_h_rsc_0_14_i_oswt, twiddle_h_rsc_0_14_i_wen_comp, twiddle_h_rsc_0_14_i_s_raddr_core,
      twiddle_h_rsc_0_14_i_s_din_mxwt, twiddle_h_rsc_0_14_i_biwt, twiddle_h_rsc_0_14_i_bdwt,
      twiddle_h_rsc_0_14_i_bcwt, twiddle_h_rsc_0_14_i_s_raddr, twiddle_h_rsc_0_14_i_s_raddr_core_sct,
      twiddle_h_rsc_0_14_i_s_din
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_14_i_oswt;
  output twiddle_h_rsc_0_14_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_14_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_14_i_s_din_mxwt;
  input twiddle_h_rsc_0_14_i_biwt;
  input twiddle_h_rsc_0_14_i_bdwt;
  output twiddle_h_rsc_0_14_i_bcwt;
  reg twiddle_h_rsc_0_14_i_bcwt;
  output [5:0] twiddle_h_rsc_0_14_i_s_raddr;
  input twiddle_h_rsc_0_14_i_s_raddr_core_sct;
  input [31:0] twiddle_h_rsc_0_14_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_h_rsc_0_14_i_s_din_bfwt;

  wire[4:0] butterFly2_14_tw_h_butterFly2_14_tw_h_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_14_i_wen_comp = (~ twiddle_h_rsc_0_14_i_oswt) | twiddle_h_rsc_0_14_i_biwt
      | twiddle_h_rsc_0_14_i_bcwt;
  assign butterFly2_14_tw_h_butterFly2_14_tw_h_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_h_rsc_0_14_i_s_raddr_core[4:0]),
      twiddle_h_rsc_0_14_i_s_raddr_core_sct);
  assign twiddle_h_rsc_0_14_i_s_raddr = {1'b0, butterFly2_14_tw_h_butterFly2_14_tw_h_and_nl};
  assign twiddle_h_rsc_0_14_i_s_din_mxwt = MUX_v_32_2_2(twiddle_h_rsc_0_14_i_s_din,
      twiddle_h_rsc_0_14_i_s_din_bfwt, twiddle_h_rsc_0_14_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_h_rsc_0_14_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_h_rsc_0_14_i_bcwt <= ~((~(twiddle_h_rsc_0_14_i_bcwt | twiddle_h_rsc_0_14_i_biwt))
          | twiddle_h_rsc_0_14_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_h_rsc_0_14_i_biwt ) begin
      twiddle_h_rsc_0_14_i_s_din_bfwt <= twiddle_h_rsc_0_14_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_14_i_twiddle_h_rsc_0_14_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_14_i_twiddle_h_rsc_0_14_wait_ctrl (
  core_wen, twiddle_h_rsc_0_14_i_oswt, twiddle_h_rsc_0_14_i_biwt, twiddle_h_rsc_0_14_i_bdwt,
      twiddle_h_rsc_0_14_i_bcwt, twiddle_h_rsc_0_14_i_s_re_core_sct, twiddle_h_rsc_0_14_i_s_rrdy
);
  input core_wen;
  input twiddle_h_rsc_0_14_i_oswt;
  output twiddle_h_rsc_0_14_i_biwt;
  output twiddle_h_rsc_0_14_i_bdwt;
  input twiddle_h_rsc_0_14_i_bcwt;
  output twiddle_h_rsc_0_14_i_s_re_core_sct;
  input twiddle_h_rsc_0_14_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_14_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_14_i_bdwt = twiddle_h_rsc_0_14_i_oswt & core_wen;
  assign twiddle_h_rsc_0_14_i_biwt = twiddle_h_rsc_0_14_i_ogwt & twiddle_h_rsc_0_14_i_s_rrdy;
  assign twiddle_h_rsc_0_14_i_ogwt = twiddle_h_rsc_0_14_i_oswt & (~ twiddle_h_rsc_0_14_i_bcwt);
  assign twiddle_h_rsc_0_14_i_s_re_core_sct = twiddle_h_rsc_0_14_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_13_i_twiddle_h_rsc_0_13_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_13_i_twiddle_h_rsc_0_13_wait_dp (
  clk, rst, twiddle_h_rsc_0_13_i_oswt, twiddle_h_rsc_0_13_i_wen_comp, twiddle_h_rsc_0_13_i_s_raddr_core,
      twiddle_h_rsc_0_13_i_s_din_mxwt, twiddle_h_rsc_0_13_i_biwt, twiddle_h_rsc_0_13_i_bdwt,
      twiddle_h_rsc_0_13_i_bcwt, twiddle_h_rsc_0_13_i_s_raddr, twiddle_h_rsc_0_13_i_s_raddr_core_sct,
      twiddle_h_rsc_0_13_i_s_din
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_13_i_oswt;
  output twiddle_h_rsc_0_13_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_13_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_13_i_s_din_mxwt;
  input twiddle_h_rsc_0_13_i_biwt;
  input twiddle_h_rsc_0_13_i_bdwt;
  output twiddle_h_rsc_0_13_i_bcwt;
  reg twiddle_h_rsc_0_13_i_bcwt;
  output [5:0] twiddle_h_rsc_0_13_i_s_raddr;
  input twiddle_h_rsc_0_13_i_s_raddr_core_sct;
  input [31:0] twiddle_h_rsc_0_13_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_h_rsc_0_13_i_s_din_bfwt;

  wire[4:0] butterFly2_13_tw_h_butterFly2_13_tw_h_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_13_i_wen_comp = (~ twiddle_h_rsc_0_13_i_oswt) | twiddle_h_rsc_0_13_i_biwt
      | twiddle_h_rsc_0_13_i_bcwt;
  assign butterFly2_13_tw_h_butterFly2_13_tw_h_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_h_rsc_0_13_i_s_raddr_core[4:0]),
      twiddle_h_rsc_0_13_i_s_raddr_core_sct);
  assign twiddle_h_rsc_0_13_i_s_raddr = {1'b0, butterFly2_13_tw_h_butterFly2_13_tw_h_and_nl};
  assign twiddle_h_rsc_0_13_i_s_din_mxwt = MUX_v_32_2_2(twiddle_h_rsc_0_13_i_s_din,
      twiddle_h_rsc_0_13_i_s_din_bfwt, twiddle_h_rsc_0_13_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_h_rsc_0_13_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_h_rsc_0_13_i_bcwt <= ~((~(twiddle_h_rsc_0_13_i_bcwt | twiddle_h_rsc_0_13_i_biwt))
          | twiddle_h_rsc_0_13_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_h_rsc_0_13_i_biwt ) begin
      twiddle_h_rsc_0_13_i_s_din_bfwt <= twiddle_h_rsc_0_13_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_13_i_twiddle_h_rsc_0_13_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_13_i_twiddle_h_rsc_0_13_wait_ctrl (
  core_wen, twiddle_h_rsc_0_13_i_oswt, twiddle_h_rsc_0_13_i_biwt, twiddle_h_rsc_0_13_i_bdwt,
      twiddle_h_rsc_0_13_i_bcwt, twiddle_h_rsc_0_13_i_s_re_core_sct, twiddle_h_rsc_0_13_i_s_rrdy
);
  input core_wen;
  input twiddle_h_rsc_0_13_i_oswt;
  output twiddle_h_rsc_0_13_i_biwt;
  output twiddle_h_rsc_0_13_i_bdwt;
  input twiddle_h_rsc_0_13_i_bcwt;
  output twiddle_h_rsc_0_13_i_s_re_core_sct;
  input twiddle_h_rsc_0_13_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_13_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_13_i_bdwt = twiddle_h_rsc_0_13_i_oswt & core_wen;
  assign twiddle_h_rsc_0_13_i_biwt = twiddle_h_rsc_0_13_i_ogwt & twiddle_h_rsc_0_13_i_s_rrdy;
  assign twiddle_h_rsc_0_13_i_ogwt = twiddle_h_rsc_0_13_i_oswt & (~ twiddle_h_rsc_0_13_i_bcwt);
  assign twiddle_h_rsc_0_13_i_s_re_core_sct = twiddle_h_rsc_0_13_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_12_i_twiddle_h_rsc_0_12_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_12_i_twiddle_h_rsc_0_12_wait_dp (
  clk, rst, twiddle_h_rsc_0_12_i_oswt, twiddle_h_rsc_0_12_i_wen_comp, twiddle_h_rsc_0_12_i_s_raddr_core,
      twiddle_h_rsc_0_12_i_s_din_mxwt, twiddle_h_rsc_0_12_i_biwt, twiddle_h_rsc_0_12_i_bdwt,
      twiddle_h_rsc_0_12_i_bcwt, twiddle_h_rsc_0_12_i_s_raddr, twiddle_h_rsc_0_12_i_s_raddr_core_sct,
      twiddle_h_rsc_0_12_i_s_din
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_12_i_oswt;
  output twiddle_h_rsc_0_12_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_12_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_12_i_s_din_mxwt;
  input twiddle_h_rsc_0_12_i_biwt;
  input twiddle_h_rsc_0_12_i_bdwt;
  output twiddle_h_rsc_0_12_i_bcwt;
  reg twiddle_h_rsc_0_12_i_bcwt;
  output [5:0] twiddle_h_rsc_0_12_i_s_raddr;
  input twiddle_h_rsc_0_12_i_s_raddr_core_sct;
  input [31:0] twiddle_h_rsc_0_12_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_h_rsc_0_12_i_s_din_bfwt;

  wire[4:0] butterFly2_12_tw_h_butterFly2_12_tw_h_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_12_i_wen_comp = (~ twiddle_h_rsc_0_12_i_oswt) | twiddle_h_rsc_0_12_i_biwt
      | twiddle_h_rsc_0_12_i_bcwt;
  assign butterFly2_12_tw_h_butterFly2_12_tw_h_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_h_rsc_0_12_i_s_raddr_core[4:0]),
      twiddle_h_rsc_0_12_i_s_raddr_core_sct);
  assign twiddle_h_rsc_0_12_i_s_raddr = {1'b0, butterFly2_12_tw_h_butterFly2_12_tw_h_and_nl};
  assign twiddle_h_rsc_0_12_i_s_din_mxwt = MUX_v_32_2_2(twiddle_h_rsc_0_12_i_s_din,
      twiddle_h_rsc_0_12_i_s_din_bfwt, twiddle_h_rsc_0_12_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_h_rsc_0_12_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_h_rsc_0_12_i_bcwt <= ~((~(twiddle_h_rsc_0_12_i_bcwt | twiddle_h_rsc_0_12_i_biwt))
          | twiddle_h_rsc_0_12_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_h_rsc_0_12_i_biwt ) begin
      twiddle_h_rsc_0_12_i_s_din_bfwt <= twiddle_h_rsc_0_12_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_12_i_twiddle_h_rsc_0_12_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_12_i_twiddle_h_rsc_0_12_wait_ctrl (
  core_wen, twiddle_h_rsc_0_12_i_oswt, twiddle_h_rsc_0_12_i_biwt, twiddle_h_rsc_0_12_i_bdwt,
      twiddle_h_rsc_0_12_i_bcwt, twiddle_h_rsc_0_12_i_s_re_core_sct, twiddle_h_rsc_0_12_i_s_rrdy
);
  input core_wen;
  input twiddle_h_rsc_0_12_i_oswt;
  output twiddle_h_rsc_0_12_i_biwt;
  output twiddle_h_rsc_0_12_i_bdwt;
  input twiddle_h_rsc_0_12_i_bcwt;
  output twiddle_h_rsc_0_12_i_s_re_core_sct;
  input twiddle_h_rsc_0_12_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_12_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_12_i_bdwt = twiddle_h_rsc_0_12_i_oswt & core_wen;
  assign twiddle_h_rsc_0_12_i_biwt = twiddle_h_rsc_0_12_i_ogwt & twiddle_h_rsc_0_12_i_s_rrdy;
  assign twiddle_h_rsc_0_12_i_ogwt = twiddle_h_rsc_0_12_i_oswt & (~ twiddle_h_rsc_0_12_i_bcwt);
  assign twiddle_h_rsc_0_12_i_s_re_core_sct = twiddle_h_rsc_0_12_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_11_i_twiddle_h_rsc_0_11_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_11_i_twiddle_h_rsc_0_11_wait_dp (
  clk, rst, twiddle_h_rsc_0_11_i_oswt, twiddle_h_rsc_0_11_i_wen_comp, twiddle_h_rsc_0_11_i_s_raddr_core,
      twiddle_h_rsc_0_11_i_s_din_mxwt, twiddle_h_rsc_0_11_i_biwt, twiddle_h_rsc_0_11_i_bdwt,
      twiddle_h_rsc_0_11_i_bcwt, twiddle_h_rsc_0_11_i_s_raddr, twiddle_h_rsc_0_11_i_s_raddr_core_sct,
      twiddle_h_rsc_0_11_i_s_din
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_11_i_oswt;
  output twiddle_h_rsc_0_11_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_11_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_11_i_s_din_mxwt;
  input twiddle_h_rsc_0_11_i_biwt;
  input twiddle_h_rsc_0_11_i_bdwt;
  output twiddle_h_rsc_0_11_i_bcwt;
  reg twiddle_h_rsc_0_11_i_bcwt;
  output [5:0] twiddle_h_rsc_0_11_i_s_raddr;
  input twiddle_h_rsc_0_11_i_s_raddr_core_sct;
  input [31:0] twiddle_h_rsc_0_11_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_h_rsc_0_11_i_s_din_bfwt;

  wire[4:0] butterFly2_11_tw_h_butterFly2_11_tw_h_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_11_i_wen_comp = (~ twiddle_h_rsc_0_11_i_oswt) | twiddle_h_rsc_0_11_i_biwt
      | twiddle_h_rsc_0_11_i_bcwt;
  assign butterFly2_11_tw_h_butterFly2_11_tw_h_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_h_rsc_0_11_i_s_raddr_core[4:0]),
      twiddle_h_rsc_0_11_i_s_raddr_core_sct);
  assign twiddle_h_rsc_0_11_i_s_raddr = {1'b0, butterFly2_11_tw_h_butterFly2_11_tw_h_and_nl};
  assign twiddle_h_rsc_0_11_i_s_din_mxwt = MUX_v_32_2_2(twiddle_h_rsc_0_11_i_s_din,
      twiddle_h_rsc_0_11_i_s_din_bfwt, twiddle_h_rsc_0_11_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_h_rsc_0_11_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_h_rsc_0_11_i_bcwt <= ~((~(twiddle_h_rsc_0_11_i_bcwt | twiddle_h_rsc_0_11_i_biwt))
          | twiddle_h_rsc_0_11_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_h_rsc_0_11_i_biwt ) begin
      twiddle_h_rsc_0_11_i_s_din_bfwt <= twiddle_h_rsc_0_11_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_11_i_twiddle_h_rsc_0_11_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_11_i_twiddle_h_rsc_0_11_wait_ctrl (
  core_wen, twiddle_h_rsc_0_11_i_oswt, twiddle_h_rsc_0_11_i_biwt, twiddle_h_rsc_0_11_i_bdwt,
      twiddle_h_rsc_0_11_i_bcwt, twiddle_h_rsc_0_11_i_s_re_core_sct, twiddle_h_rsc_0_11_i_s_rrdy
);
  input core_wen;
  input twiddle_h_rsc_0_11_i_oswt;
  output twiddle_h_rsc_0_11_i_biwt;
  output twiddle_h_rsc_0_11_i_bdwt;
  input twiddle_h_rsc_0_11_i_bcwt;
  output twiddle_h_rsc_0_11_i_s_re_core_sct;
  input twiddle_h_rsc_0_11_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_11_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_11_i_bdwt = twiddle_h_rsc_0_11_i_oswt & core_wen;
  assign twiddle_h_rsc_0_11_i_biwt = twiddle_h_rsc_0_11_i_ogwt & twiddle_h_rsc_0_11_i_s_rrdy;
  assign twiddle_h_rsc_0_11_i_ogwt = twiddle_h_rsc_0_11_i_oswt & (~ twiddle_h_rsc_0_11_i_bcwt);
  assign twiddle_h_rsc_0_11_i_s_re_core_sct = twiddle_h_rsc_0_11_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_10_i_twiddle_h_rsc_0_10_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_10_i_twiddle_h_rsc_0_10_wait_dp (
  clk, rst, twiddle_h_rsc_0_10_i_oswt, twiddle_h_rsc_0_10_i_wen_comp, twiddle_h_rsc_0_10_i_s_raddr_core,
      twiddle_h_rsc_0_10_i_s_din_mxwt, twiddle_h_rsc_0_10_i_biwt, twiddle_h_rsc_0_10_i_bdwt,
      twiddle_h_rsc_0_10_i_bcwt, twiddle_h_rsc_0_10_i_s_raddr, twiddle_h_rsc_0_10_i_s_raddr_core_sct,
      twiddle_h_rsc_0_10_i_s_din
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_10_i_oswt;
  output twiddle_h_rsc_0_10_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_10_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_10_i_s_din_mxwt;
  input twiddle_h_rsc_0_10_i_biwt;
  input twiddle_h_rsc_0_10_i_bdwt;
  output twiddle_h_rsc_0_10_i_bcwt;
  reg twiddle_h_rsc_0_10_i_bcwt;
  output [5:0] twiddle_h_rsc_0_10_i_s_raddr;
  input twiddle_h_rsc_0_10_i_s_raddr_core_sct;
  input [31:0] twiddle_h_rsc_0_10_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_h_rsc_0_10_i_s_din_bfwt;

  wire[4:0] butterFly2_10_tw_h_butterFly2_10_tw_h_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_10_i_wen_comp = (~ twiddle_h_rsc_0_10_i_oswt) | twiddle_h_rsc_0_10_i_biwt
      | twiddle_h_rsc_0_10_i_bcwt;
  assign butterFly2_10_tw_h_butterFly2_10_tw_h_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_h_rsc_0_10_i_s_raddr_core[4:0]),
      twiddle_h_rsc_0_10_i_s_raddr_core_sct);
  assign twiddle_h_rsc_0_10_i_s_raddr = {1'b0, butterFly2_10_tw_h_butterFly2_10_tw_h_and_nl};
  assign twiddle_h_rsc_0_10_i_s_din_mxwt = MUX_v_32_2_2(twiddle_h_rsc_0_10_i_s_din,
      twiddle_h_rsc_0_10_i_s_din_bfwt, twiddle_h_rsc_0_10_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_h_rsc_0_10_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_h_rsc_0_10_i_bcwt <= ~((~(twiddle_h_rsc_0_10_i_bcwt | twiddle_h_rsc_0_10_i_biwt))
          | twiddle_h_rsc_0_10_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_h_rsc_0_10_i_biwt ) begin
      twiddle_h_rsc_0_10_i_s_din_bfwt <= twiddle_h_rsc_0_10_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_10_i_twiddle_h_rsc_0_10_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_10_i_twiddle_h_rsc_0_10_wait_ctrl (
  core_wen, twiddle_h_rsc_0_10_i_oswt, twiddle_h_rsc_0_10_i_biwt, twiddle_h_rsc_0_10_i_bdwt,
      twiddle_h_rsc_0_10_i_bcwt, twiddle_h_rsc_0_10_i_s_re_core_sct, twiddle_h_rsc_0_10_i_s_rrdy
);
  input core_wen;
  input twiddle_h_rsc_0_10_i_oswt;
  output twiddle_h_rsc_0_10_i_biwt;
  output twiddle_h_rsc_0_10_i_bdwt;
  input twiddle_h_rsc_0_10_i_bcwt;
  output twiddle_h_rsc_0_10_i_s_re_core_sct;
  input twiddle_h_rsc_0_10_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_10_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_10_i_bdwt = twiddle_h_rsc_0_10_i_oswt & core_wen;
  assign twiddle_h_rsc_0_10_i_biwt = twiddle_h_rsc_0_10_i_ogwt & twiddle_h_rsc_0_10_i_s_rrdy;
  assign twiddle_h_rsc_0_10_i_ogwt = twiddle_h_rsc_0_10_i_oswt & (~ twiddle_h_rsc_0_10_i_bcwt);
  assign twiddle_h_rsc_0_10_i_s_re_core_sct = twiddle_h_rsc_0_10_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_9_i_twiddle_h_rsc_0_9_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_9_i_twiddle_h_rsc_0_9_wait_dp (
  clk, rst, twiddle_h_rsc_0_9_i_oswt, twiddle_h_rsc_0_9_i_wen_comp, twiddle_h_rsc_0_9_i_s_raddr_core,
      twiddle_h_rsc_0_9_i_s_din_mxwt, twiddle_h_rsc_0_9_i_biwt, twiddle_h_rsc_0_9_i_bdwt,
      twiddle_h_rsc_0_9_i_bcwt, twiddle_h_rsc_0_9_i_s_raddr, twiddle_h_rsc_0_9_i_s_raddr_core_sct,
      twiddle_h_rsc_0_9_i_s_din
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_9_i_oswt;
  output twiddle_h_rsc_0_9_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_9_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_9_i_s_din_mxwt;
  input twiddle_h_rsc_0_9_i_biwt;
  input twiddle_h_rsc_0_9_i_bdwt;
  output twiddle_h_rsc_0_9_i_bcwt;
  reg twiddle_h_rsc_0_9_i_bcwt;
  output [5:0] twiddle_h_rsc_0_9_i_s_raddr;
  input twiddle_h_rsc_0_9_i_s_raddr_core_sct;
  input [31:0] twiddle_h_rsc_0_9_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_h_rsc_0_9_i_s_din_bfwt;

  wire[4:0] butterFly2_9_tw_h_butterFly2_9_tw_h_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_9_i_wen_comp = (~ twiddle_h_rsc_0_9_i_oswt) | twiddle_h_rsc_0_9_i_biwt
      | twiddle_h_rsc_0_9_i_bcwt;
  assign butterFly2_9_tw_h_butterFly2_9_tw_h_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_h_rsc_0_9_i_s_raddr_core[4:0]),
      twiddle_h_rsc_0_9_i_s_raddr_core_sct);
  assign twiddle_h_rsc_0_9_i_s_raddr = {1'b0, butterFly2_9_tw_h_butterFly2_9_tw_h_and_nl};
  assign twiddle_h_rsc_0_9_i_s_din_mxwt = MUX_v_32_2_2(twiddle_h_rsc_0_9_i_s_din,
      twiddle_h_rsc_0_9_i_s_din_bfwt, twiddle_h_rsc_0_9_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_h_rsc_0_9_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_h_rsc_0_9_i_bcwt <= ~((~(twiddle_h_rsc_0_9_i_bcwt | twiddle_h_rsc_0_9_i_biwt))
          | twiddle_h_rsc_0_9_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_h_rsc_0_9_i_biwt ) begin
      twiddle_h_rsc_0_9_i_s_din_bfwt <= twiddle_h_rsc_0_9_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_9_i_twiddle_h_rsc_0_9_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_9_i_twiddle_h_rsc_0_9_wait_ctrl (
  core_wen, twiddle_h_rsc_0_9_i_oswt, twiddle_h_rsc_0_9_i_biwt, twiddle_h_rsc_0_9_i_bdwt,
      twiddle_h_rsc_0_9_i_bcwt, twiddle_h_rsc_0_9_i_s_re_core_sct, twiddle_h_rsc_0_9_i_s_rrdy
);
  input core_wen;
  input twiddle_h_rsc_0_9_i_oswt;
  output twiddle_h_rsc_0_9_i_biwt;
  output twiddle_h_rsc_0_9_i_bdwt;
  input twiddle_h_rsc_0_9_i_bcwt;
  output twiddle_h_rsc_0_9_i_s_re_core_sct;
  input twiddle_h_rsc_0_9_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_9_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_9_i_bdwt = twiddle_h_rsc_0_9_i_oswt & core_wen;
  assign twiddle_h_rsc_0_9_i_biwt = twiddle_h_rsc_0_9_i_ogwt & twiddle_h_rsc_0_9_i_s_rrdy;
  assign twiddle_h_rsc_0_9_i_ogwt = twiddle_h_rsc_0_9_i_oswt & (~ twiddle_h_rsc_0_9_i_bcwt);
  assign twiddle_h_rsc_0_9_i_s_re_core_sct = twiddle_h_rsc_0_9_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_8_i_twiddle_h_rsc_0_8_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_8_i_twiddle_h_rsc_0_8_wait_dp (
  clk, rst, twiddle_h_rsc_0_8_i_oswt, twiddle_h_rsc_0_8_i_wen_comp, twiddle_h_rsc_0_8_i_s_raddr_core,
      twiddle_h_rsc_0_8_i_s_din_mxwt, twiddle_h_rsc_0_8_i_biwt, twiddle_h_rsc_0_8_i_bdwt,
      twiddle_h_rsc_0_8_i_bcwt, twiddle_h_rsc_0_8_i_s_raddr, twiddle_h_rsc_0_8_i_s_raddr_core_sct,
      twiddle_h_rsc_0_8_i_s_din
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_8_i_oswt;
  output twiddle_h_rsc_0_8_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_8_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_8_i_s_din_mxwt;
  input twiddle_h_rsc_0_8_i_biwt;
  input twiddle_h_rsc_0_8_i_bdwt;
  output twiddle_h_rsc_0_8_i_bcwt;
  reg twiddle_h_rsc_0_8_i_bcwt;
  output [5:0] twiddle_h_rsc_0_8_i_s_raddr;
  input twiddle_h_rsc_0_8_i_s_raddr_core_sct;
  input [31:0] twiddle_h_rsc_0_8_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_h_rsc_0_8_i_s_din_bfwt;

  wire[4:0] butterFly2_8_tw_h_butterFly2_8_tw_h_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_8_i_wen_comp = (~ twiddle_h_rsc_0_8_i_oswt) | twiddle_h_rsc_0_8_i_biwt
      | twiddle_h_rsc_0_8_i_bcwt;
  assign butterFly2_8_tw_h_butterFly2_8_tw_h_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_h_rsc_0_8_i_s_raddr_core[4:0]),
      twiddle_h_rsc_0_8_i_s_raddr_core_sct);
  assign twiddle_h_rsc_0_8_i_s_raddr = {1'b0, butterFly2_8_tw_h_butterFly2_8_tw_h_and_nl};
  assign twiddle_h_rsc_0_8_i_s_din_mxwt = MUX_v_32_2_2(twiddle_h_rsc_0_8_i_s_din,
      twiddle_h_rsc_0_8_i_s_din_bfwt, twiddle_h_rsc_0_8_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_h_rsc_0_8_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_h_rsc_0_8_i_bcwt <= ~((~(twiddle_h_rsc_0_8_i_bcwt | twiddle_h_rsc_0_8_i_biwt))
          | twiddle_h_rsc_0_8_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_h_rsc_0_8_i_biwt ) begin
      twiddle_h_rsc_0_8_i_s_din_bfwt <= twiddle_h_rsc_0_8_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_8_i_twiddle_h_rsc_0_8_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_8_i_twiddle_h_rsc_0_8_wait_ctrl (
  core_wen, twiddle_h_rsc_0_8_i_oswt, twiddle_h_rsc_0_8_i_biwt, twiddle_h_rsc_0_8_i_bdwt,
      twiddle_h_rsc_0_8_i_bcwt, twiddle_h_rsc_0_8_i_s_re_core_sct, twiddle_h_rsc_0_8_i_s_rrdy
);
  input core_wen;
  input twiddle_h_rsc_0_8_i_oswt;
  output twiddle_h_rsc_0_8_i_biwt;
  output twiddle_h_rsc_0_8_i_bdwt;
  input twiddle_h_rsc_0_8_i_bcwt;
  output twiddle_h_rsc_0_8_i_s_re_core_sct;
  input twiddle_h_rsc_0_8_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_8_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_8_i_bdwt = twiddle_h_rsc_0_8_i_oswt & core_wen;
  assign twiddle_h_rsc_0_8_i_biwt = twiddle_h_rsc_0_8_i_ogwt & twiddle_h_rsc_0_8_i_s_rrdy;
  assign twiddle_h_rsc_0_8_i_ogwt = twiddle_h_rsc_0_8_i_oswt & (~ twiddle_h_rsc_0_8_i_bcwt);
  assign twiddle_h_rsc_0_8_i_s_re_core_sct = twiddle_h_rsc_0_8_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_7_i_twiddle_h_rsc_0_7_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_7_i_twiddle_h_rsc_0_7_wait_dp (
  clk, rst, twiddle_h_rsc_0_7_i_oswt, twiddle_h_rsc_0_7_i_wen_comp, twiddle_h_rsc_0_7_i_s_raddr_core,
      twiddle_h_rsc_0_7_i_s_din_mxwt, twiddle_h_rsc_0_7_i_biwt, twiddle_h_rsc_0_7_i_bdwt,
      twiddle_h_rsc_0_7_i_bcwt, twiddle_h_rsc_0_7_i_s_raddr, twiddle_h_rsc_0_7_i_s_raddr_core_sct,
      twiddle_h_rsc_0_7_i_s_din
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_7_i_oswt;
  output twiddle_h_rsc_0_7_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_7_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_7_i_s_din_mxwt;
  input twiddle_h_rsc_0_7_i_biwt;
  input twiddle_h_rsc_0_7_i_bdwt;
  output twiddle_h_rsc_0_7_i_bcwt;
  reg twiddle_h_rsc_0_7_i_bcwt;
  output [5:0] twiddle_h_rsc_0_7_i_s_raddr;
  input twiddle_h_rsc_0_7_i_s_raddr_core_sct;
  input [31:0] twiddle_h_rsc_0_7_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_h_rsc_0_7_i_s_din_bfwt;

  wire[4:0] butterFly2_7_tw_h_butterFly2_7_tw_h_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_7_i_wen_comp = (~ twiddle_h_rsc_0_7_i_oswt) | twiddle_h_rsc_0_7_i_biwt
      | twiddle_h_rsc_0_7_i_bcwt;
  assign butterFly2_7_tw_h_butterFly2_7_tw_h_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_h_rsc_0_7_i_s_raddr_core[4:0]),
      twiddle_h_rsc_0_7_i_s_raddr_core_sct);
  assign twiddle_h_rsc_0_7_i_s_raddr = {1'b0, butterFly2_7_tw_h_butterFly2_7_tw_h_and_nl};
  assign twiddle_h_rsc_0_7_i_s_din_mxwt = MUX_v_32_2_2(twiddle_h_rsc_0_7_i_s_din,
      twiddle_h_rsc_0_7_i_s_din_bfwt, twiddle_h_rsc_0_7_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_h_rsc_0_7_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_h_rsc_0_7_i_bcwt <= ~((~(twiddle_h_rsc_0_7_i_bcwt | twiddle_h_rsc_0_7_i_biwt))
          | twiddle_h_rsc_0_7_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_h_rsc_0_7_i_biwt ) begin
      twiddle_h_rsc_0_7_i_s_din_bfwt <= twiddle_h_rsc_0_7_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_7_i_twiddle_h_rsc_0_7_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_7_i_twiddle_h_rsc_0_7_wait_ctrl (
  core_wen, twiddle_h_rsc_0_7_i_oswt, twiddle_h_rsc_0_7_i_biwt, twiddle_h_rsc_0_7_i_bdwt,
      twiddle_h_rsc_0_7_i_bcwt, twiddle_h_rsc_0_7_i_s_re_core_sct, twiddle_h_rsc_0_7_i_s_rrdy
);
  input core_wen;
  input twiddle_h_rsc_0_7_i_oswt;
  output twiddle_h_rsc_0_7_i_biwt;
  output twiddle_h_rsc_0_7_i_bdwt;
  input twiddle_h_rsc_0_7_i_bcwt;
  output twiddle_h_rsc_0_7_i_s_re_core_sct;
  input twiddle_h_rsc_0_7_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_7_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_7_i_bdwt = twiddle_h_rsc_0_7_i_oswt & core_wen;
  assign twiddle_h_rsc_0_7_i_biwt = twiddle_h_rsc_0_7_i_ogwt & twiddle_h_rsc_0_7_i_s_rrdy;
  assign twiddle_h_rsc_0_7_i_ogwt = twiddle_h_rsc_0_7_i_oswt & (~ twiddle_h_rsc_0_7_i_bcwt);
  assign twiddle_h_rsc_0_7_i_s_re_core_sct = twiddle_h_rsc_0_7_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_6_i_twiddle_h_rsc_0_6_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_6_i_twiddle_h_rsc_0_6_wait_dp (
  clk, rst, twiddle_h_rsc_0_6_i_oswt, twiddle_h_rsc_0_6_i_wen_comp, twiddle_h_rsc_0_6_i_s_raddr_core,
      twiddle_h_rsc_0_6_i_s_din_mxwt, twiddle_h_rsc_0_6_i_biwt, twiddle_h_rsc_0_6_i_bdwt,
      twiddle_h_rsc_0_6_i_bcwt, twiddle_h_rsc_0_6_i_s_raddr, twiddle_h_rsc_0_6_i_s_raddr_core_sct,
      twiddle_h_rsc_0_6_i_s_din
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_6_i_oswt;
  output twiddle_h_rsc_0_6_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_6_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_6_i_s_din_mxwt;
  input twiddle_h_rsc_0_6_i_biwt;
  input twiddle_h_rsc_0_6_i_bdwt;
  output twiddle_h_rsc_0_6_i_bcwt;
  reg twiddle_h_rsc_0_6_i_bcwt;
  output [5:0] twiddle_h_rsc_0_6_i_s_raddr;
  input twiddle_h_rsc_0_6_i_s_raddr_core_sct;
  input [31:0] twiddle_h_rsc_0_6_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_h_rsc_0_6_i_s_din_bfwt;

  wire[4:0] butterFly2_6_tw_h_butterFly2_6_tw_h_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_6_i_wen_comp = (~ twiddle_h_rsc_0_6_i_oswt) | twiddle_h_rsc_0_6_i_biwt
      | twiddle_h_rsc_0_6_i_bcwt;
  assign butterFly2_6_tw_h_butterFly2_6_tw_h_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_h_rsc_0_6_i_s_raddr_core[4:0]),
      twiddle_h_rsc_0_6_i_s_raddr_core_sct);
  assign twiddle_h_rsc_0_6_i_s_raddr = {1'b0, butterFly2_6_tw_h_butterFly2_6_tw_h_and_nl};
  assign twiddle_h_rsc_0_6_i_s_din_mxwt = MUX_v_32_2_2(twiddle_h_rsc_0_6_i_s_din,
      twiddle_h_rsc_0_6_i_s_din_bfwt, twiddle_h_rsc_0_6_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_h_rsc_0_6_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_h_rsc_0_6_i_bcwt <= ~((~(twiddle_h_rsc_0_6_i_bcwt | twiddle_h_rsc_0_6_i_biwt))
          | twiddle_h_rsc_0_6_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_h_rsc_0_6_i_biwt ) begin
      twiddle_h_rsc_0_6_i_s_din_bfwt <= twiddle_h_rsc_0_6_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_6_i_twiddle_h_rsc_0_6_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_6_i_twiddle_h_rsc_0_6_wait_ctrl (
  core_wen, twiddle_h_rsc_0_6_i_oswt, twiddle_h_rsc_0_6_i_biwt, twiddle_h_rsc_0_6_i_bdwt,
      twiddle_h_rsc_0_6_i_bcwt, twiddle_h_rsc_0_6_i_s_re_core_sct, twiddle_h_rsc_0_6_i_s_rrdy
);
  input core_wen;
  input twiddle_h_rsc_0_6_i_oswt;
  output twiddle_h_rsc_0_6_i_biwt;
  output twiddle_h_rsc_0_6_i_bdwt;
  input twiddle_h_rsc_0_6_i_bcwt;
  output twiddle_h_rsc_0_6_i_s_re_core_sct;
  input twiddle_h_rsc_0_6_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_6_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_6_i_bdwt = twiddle_h_rsc_0_6_i_oswt & core_wen;
  assign twiddle_h_rsc_0_6_i_biwt = twiddle_h_rsc_0_6_i_ogwt & twiddle_h_rsc_0_6_i_s_rrdy;
  assign twiddle_h_rsc_0_6_i_ogwt = twiddle_h_rsc_0_6_i_oswt & (~ twiddle_h_rsc_0_6_i_bcwt);
  assign twiddle_h_rsc_0_6_i_s_re_core_sct = twiddle_h_rsc_0_6_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_5_i_twiddle_h_rsc_0_5_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_5_i_twiddle_h_rsc_0_5_wait_dp (
  clk, rst, twiddle_h_rsc_0_5_i_oswt, twiddle_h_rsc_0_5_i_wen_comp, twiddle_h_rsc_0_5_i_s_raddr_core,
      twiddle_h_rsc_0_5_i_s_din_mxwt, twiddle_h_rsc_0_5_i_biwt, twiddle_h_rsc_0_5_i_bdwt,
      twiddle_h_rsc_0_5_i_bcwt, twiddle_h_rsc_0_5_i_s_raddr, twiddle_h_rsc_0_5_i_s_raddr_core_sct,
      twiddle_h_rsc_0_5_i_s_din
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_5_i_oswt;
  output twiddle_h_rsc_0_5_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_5_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_5_i_s_din_mxwt;
  input twiddle_h_rsc_0_5_i_biwt;
  input twiddle_h_rsc_0_5_i_bdwt;
  output twiddle_h_rsc_0_5_i_bcwt;
  reg twiddle_h_rsc_0_5_i_bcwt;
  output [5:0] twiddle_h_rsc_0_5_i_s_raddr;
  input twiddle_h_rsc_0_5_i_s_raddr_core_sct;
  input [31:0] twiddle_h_rsc_0_5_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_h_rsc_0_5_i_s_din_bfwt;

  wire[4:0] butterFly2_5_tw_h_butterFly2_5_tw_h_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_5_i_wen_comp = (~ twiddle_h_rsc_0_5_i_oswt) | twiddle_h_rsc_0_5_i_biwt
      | twiddle_h_rsc_0_5_i_bcwt;
  assign butterFly2_5_tw_h_butterFly2_5_tw_h_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_h_rsc_0_5_i_s_raddr_core[4:0]),
      twiddle_h_rsc_0_5_i_s_raddr_core_sct);
  assign twiddle_h_rsc_0_5_i_s_raddr = {1'b0, butterFly2_5_tw_h_butterFly2_5_tw_h_and_nl};
  assign twiddle_h_rsc_0_5_i_s_din_mxwt = MUX_v_32_2_2(twiddle_h_rsc_0_5_i_s_din,
      twiddle_h_rsc_0_5_i_s_din_bfwt, twiddle_h_rsc_0_5_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_h_rsc_0_5_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_h_rsc_0_5_i_bcwt <= ~((~(twiddle_h_rsc_0_5_i_bcwt | twiddle_h_rsc_0_5_i_biwt))
          | twiddle_h_rsc_0_5_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_h_rsc_0_5_i_biwt ) begin
      twiddle_h_rsc_0_5_i_s_din_bfwt <= twiddle_h_rsc_0_5_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_5_i_twiddle_h_rsc_0_5_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_5_i_twiddle_h_rsc_0_5_wait_ctrl (
  core_wen, twiddle_h_rsc_0_5_i_oswt, twiddle_h_rsc_0_5_i_biwt, twiddle_h_rsc_0_5_i_bdwt,
      twiddle_h_rsc_0_5_i_bcwt, twiddle_h_rsc_0_5_i_s_re_core_sct, twiddle_h_rsc_0_5_i_s_rrdy
);
  input core_wen;
  input twiddle_h_rsc_0_5_i_oswt;
  output twiddle_h_rsc_0_5_i_biwt;
  output twiddle_h_rsc_0_5_i_bdwt;
  input twiddle_h_rsc_0_5_i_bcwt;
  output twiddle_h_rsc_0_5_i_s_re_core_sct;
  input twiddle_h_rsc_0_5_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_5_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_5_i_bdwt = twiddle_h_rsc_0_5_i_oswt & core_wen;
  assign twiddle_h_rsc_0_5_i_biwt = twiddle_h_rsc_0_5_i_ogwt & twiddle_h_rsc_0_5_i_s_rrdy;
  assign twiddle_h_rsc_0_5_i_ogwt = twiddle_h_rsc_0_5_i_oswt & (~ twiddle_h_rsc_0_5_i_bcwt);
  assign twiddle_h_rsc_0_5_i_s_re_core_sct = twiddle_h_rsc_0_5_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_4_i_twiddle_h_rsc_0_4_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_4_i_twiddle_h_rsc_0_4_wait_dp (
  clk, rst, twiddle_h_rsc_0_4_i_oswt, twiddle_h_rsc_0_4_i_wen_comp, twiddle_h_rsc_0_4_i_s_raddr_core,
      twiddle_h_rsc_0_4_i_s_din_mxwt, twiddle_h_rsc_0_4_i_biwt, twiddle_h_rsc_0_4_i_bdwt,
      twiddle_h_rsc_0_4_i_bcwt, twiddle_h_rsc_0_4_i_s_raddr, twiddle_h_rsc_0_4_i_s_raddr_core_sct,
      twiddle_h_rsc_0_4_i_s_din
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_4_i_oswt;
  output twiddle_h_rsc_0_4_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_4_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_4_i_s_din_mxwt;
  input twiddle_h_rsc_0_4_i_biwt;
  input twiddle_h_rsc_0_4_i_bdwt;
  output twiddle_h_rsc_0_4_i_bcwt;
  reg twiddle_h_rsc_0_4_i_bcwt;
  output [5:0] twiddle_h_rsc_0_4_i_s_raddr;
  input twiddle_h_rsc_0_4_i_s_raddr_core_sct;
  input [31:0] twiddle_h_rsc_0_4_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_h_rsc_0_4_i_s_din_bfwt;

  wire[4:0] butterFly2_4_tw_h_butterFly2_4_tw_h_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_4_i_wen_comp = (~ twiddle_h_rsc_0_4_i_oswt) | twiddle_h_rsc_0_4_i_biwt
      | twiddle_h_rsc_0_4_i_bcwt;
  assign butterFly2_4_tw_h_butterFly2_4_tw_h_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_h_rsc_0_4_i_s_raddr_core[4:0]),
      twiddle_h_rsc_0_4_i_s_raddr_core_sct);
  assign twiddle_h_rsc_0_4_i_s_raddr = {1'b0, butterFly2_4_tw_h_butterFly2_4_tw_h_and_nl};
  assign twiddle_h_rsc_0_4_i_s_din_mxwt = MUX_v_32_2_2(twiddle_h_rsc_0_4_i_s_din,
      twiddle_h_rsc_0_4_i_s_din_bfwt, twiddle_h_rsc_0_4_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_h_rsc_0_4_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_h_rsc_0_4_i_bcwt <= ~((~(twiddle_h_rsc_0_4_i_bcwt | twiddle_h_rsc_0_4_i_biwt))
          | twiddle_h_rsc_0_4_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_h_rsc_0_4_i_biwt ) begin
      twiddle_h_rsc_0_4_i_s_din_bfwt <= twiddle_h_rsc_0_4_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_4_i_twiddle_h_rsc_0_4_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_4_i_twiddle_h_rsc_0_4_wait_ctrl (
  core_wen, twiddle_h_rsc_0_4_i_oswt, twiddle_h_rsc_0_4_i_biwt, twiddle_h_rsc_0_4_i_bdwt,
      twiddle_h_rsc_0_4_i_bcwt, twiddle_h_rsc_0_4_i_s_re_core_sct, twiddle_h_rsc_0_4_i_s_rrdy
);
  input core_wen;
  input twiddle_h_rsc_0_4_i_oswt;
  output twiddle_h_rsc_0_4_i_biwt;
  output twiddle_h_rsc_0_4_i_bdwt;
  input twiddle_h_rsc_0_4_i_bcwt;
  output twiddle_h_rsc_0_4_i_s_re_core_sct;
  input twiddle_h_rsc_0_4_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_4_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_4_i_bdwt = twiddle_h_rsc_0_4_i_oswt & core_wen;
  assign twiddle_h_rsc_0_4_i_biwt = twiddle_h_rsc_0_4_i_ogwt & twiddle_h_rsc_0_4_i_s_rrdy;
  assign twiddle_h_rsc_0_4_i_ogwt = twiddle_h_rsc_0_4_i_oswt & (~ twiddle_h_rsc_0_4_i_bcwt);
  assign twiddle_h_rsc_0_4_i_s_re_core_sct = twiddle_h_rsc_0_4_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_3_i_twiddle_h_rsc_0_3_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_3_i_twiddle_h_rsc_0_3_wait_dp (
  clk, rst, twiddle_h_rsc_0_3_i_oswt, twiddle_h_rsc_0_3_i_wen_comp, twiddle_h_rsc_0_3_i_s_raddr_core,
      twiddle_h_rsc_0_3_i_s_din_mxwt, twiddle_h_rsc_0_3_i_biwt, twiddle_h_rsc_0_3_i_bdwt,
      twiddle_h_rsc_0_3_i_bcwt, twiddle_h_rsc_0_3_i_s_raddr, twiddle_h_rsc_0_3_i_s_raddr_core_sct,
      twiddle_h_rsc_0_3_i_s_din
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_3_i_oswt;
  output twiddle_h_rsc_0_3_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_3_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_3_i_s_din_mxwt;
  input twiddle_h_rsc_0_3_i_biwt;
  input twiddle_h_rsc_0_3_i_bdwt;
  output twiddle_h_rsc_0_3_i_bcwt;
  reg twiddle_h_rsc_0_3_i_bcwt;
  output [5:0] twiddle_h_rsc_0_3_i_s_raddr;
  input twiddle_h_rsc_0_3_i_s_raddr_core_sct;
  input [31:0] twiddle_h_rsc_0_3_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_h_rsc_0_3_i_s_din_bfwt;

  wire[4:0] butterFly2_3_tw_h_butterFly2_3_tw_h_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_3_i_wen_comp = (~ twiddle_h_rsc_0_3_i_oswt) | twiddle_h_rsc_0_3_i_biwt
      | twiddle_h_rsc_0_3_i_bcwt;
  assign butterFly2_3_tw_h_butterFly2_3_tw_h_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_h_rsc_0_3_i_s_raddr_core[4:0]),
      twiddle_h_rsc_0_3_i_s_raddr_core_sct);
  assign twiddle_h_rsc_0_3_i_s_raddr = {1'b0, butterFly2_3_tw_h_butterFly2_3_tw_h_and_nl};
  assign twiddle_h_rsc_0_3_i_s_din_mxwt = MUX_v_32_2_2(twiddle_h_rsc_0_3_i_s_din,
      twiddle_h_rsc_0_3_i_s_din_bfwt, twiddle_h_rsc_0_3_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_h_rsc_0_3_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_h_rsc_0_3_i_bcwt <= ~((~(twiddle_h_rsc_0_3_i_bcwt | twiddle_h_rsc_0_3_i_biwt))
          | twiddle_h_rsc_0_3_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_h_rsc_0_3_i_biwt ) begin
      twiddle_h_rsc_0_3_i_s_din_bfwt <= twiddle_h_rsc_0_3_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_3_i_twiddle_h_rsc_0_3_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_3_i_twiddle_h_rsc_0_3_wait_ctrl (
  core_wen, twiddle_h_rsc_0_3_i_oswt, twiddle_h_rsc_0_3_i_biwt, twiddle_h_rsc_0_3_i_bdwt,
      twiddle_h_rsc_0_3_i_bcwt, twiddle_h_rsc_0_3_i_s_re_core_sct, twiddle_h_rsc_0_3_i_s_rrdy
);
  input core_wen;
  input twiddle_h_rsc_0_3_i_oswt;
  output twiddle_h_rsc_0_3_i_biwt;
  output twiddle_h_rsc_0_3_i_bdwt;
  input twiddle_h_rsc_0_3_i_bcwt;
  output twiddle_h_rsc_0_3_i_s_re_core_sct;
  input twiddle_h_rsc_0_3_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_3_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_3_i_bdwt = twiddle_h_rsc_0_3_i_oswt & core_wen;
  assign twiddle_h_rsc_0_3_i_biwt = twiddle_h_rsc_0_3_i_ogwt & twiddle_h_rsc_0_3_i_s_rrdy;
  assign twiddle_h_rsc_0_3_i_ogwt = twiddle_h_rsc_0_3_i_oswt & (~ twiddle_h_rsc_0_3_i_bcwt);
  assign twiddle_h_rsc_0_3_i_s_re_core_sct = twiddle_h_rsc_0_3_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_2_i_twiddle_h_rsc_0_2_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_2_i_twiddle_h_rsc_0_2_wait_dp (
  clk, rst, twiddle_h_rsc_0_2_i_oswt, twiddle_h_rsc_0_2_i_wen_comp, twiddle_h_rsc_0_2_i_s_raddr_core,
      twiddle_h_rsc_0_2_i_s_din_mxwt, twiddle_h_rsc_0_2_i_biwt, twiddle_h_rsc_0_2_i_bdwt,
      twiddle_h_rsc_0_2_i_bcwt, twiddle_h_rsc_0_2_i_s_raddr, twiddle_h_rsc_0_2_i_s_raddr_core_sct,
      twiddle_h_rsc_0_2_i_s_din
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_2_i_oswt;
  output twiddle_h_rsc_0_2_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_2_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_2_i_s_din_mxwt;
  input twiddle_h_rsc_0_2_i_biwt;
  input twiddle_h_rsc_0_2_i_bdwt;
  output twiddle_h_rsc_0_2_i_bcwt;
  reg twiddle_h_rsc_0_2_i_bcwt;
  output [5:0] twiddle_h_rsc_0_2_i_s_raddr;
  input twiddle_h_rsc_0_2_i_s_raddr_core_sct;
  input [31:0] twiddle_h_rsc_0_2_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_h_rsc_0_2_i_s_din_bfwt;

  wire[4:0] butterFly2_2_tw_h_butterFly2_2_tw_h_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_2_i_wen_comp = (~ twiddle_h_rsc_0_2_i_oswt) | twiddle_h_rsc_0_2_i_biwt
      | twiddle_h_rsc_0_2_i_bcwt;
  assign butterFly2_2_tw_h_butterFly2_2_tw_h_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_h_rsc_0_2_i_s_raddr_core[4:0]),
      twiddle_h_rsc_0_2_i_s_raddr_core_sct);
  assign twiddle_h_rsc_0_2_i_s_raddr = {1'b0, butterFly2_2_tw_h_butterFly2_2_tw_h_and_nl};
  assign twiddle_h_rsc_0_2_i_s_din_mxwt = MUX_v_32_2_2(twiddle_h_rsc_0_2_i_s_din,
      twiddle_h_rsc_0_2_i_s_din_bfwt, twiddle_h_rsc_0_2_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_h_rsc_0_2_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_h_rsc_0_2_i_bcwt <= ~((~(twiddle_h_rsc_0_2_i_bcwt | twiddle_h_rsc_0_2_i_biwt))
          | twiddle_h_rsc_0_2_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_h_rsc_0_2_i_biwt ) begin
      twiddle_h_rsc_0_2_i_s_din_bfwt <= twiddle_h_rsc_0_2_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_2_i_twiddle_h_rsc_0_2_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_2_i_twiddle_h_rsc_0_2_wait_ctrl (
  core_wen, twiddle_h_rsc_0_2_i_oswt, twiddle_h_rsc_0_2_i_biwt, twiddle_h_rsc_0_2_i_bdwt,
      twiddle_h_rsc_0_2_i_bcwt, twiddle_h_rsc_0_2_i_s_re_core_sct, twiddle_h_rsc_0_2_i_s_rrdy
);
  input core_wen;
  input twiddle_h_rsc_0_2_i_oswt;
  output twiddle_h_rsc_0_2_i_biwt;
  output twiddle_h_rsc_0_2_i_bdwt;
  input twiddle_h_rsc_0_2_i_bcwt;
  output twiddle_h_rsc_0_2_i_s_re_core_sct;
  input twiddle_h_rsc_0_2_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_2_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_2_i_bdwt = twiddle_h_rsc_0_2_i_oswt & core_wen;
  assign twiddle_h_rsc_0_2_i_biwt = twiddle_h_rsc_0_2_i_ogwt & twiddle_h_rsc_0_2_i_s_rrdy;
  assign twiddle_h_rsc_0_2_i_ogwt = twiddle_h_rsc_0_2_i_oswt & (~ twiddle_h_rsc_0_2_i_bcwt);
  assign twiddle_h_rsc_0_2_i_s_re_core_sct = twiddle_h_rsc_0_2_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_1_i_twiddle_h_rsc_0_1_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_1_i_twiddle_h_rsc_0_1_wait_dp (
  clk, rst, twiddle_h_rsc_0_1_i_oswt, twiddle_h_rsc_0_1_i_wen_comp, twiddle_h_rsc_0_1_i_s_raddr_core,
      twiddle_h_rsc_0_1_i_s_din_mxwt, twiddle_h_rsc_0_1_i_biwt, twiddle_h_rsc_0_1_i_bdwt,
      twiddle_h_rsc_0_1_i_bcwt, twiddle_h_rsc_0_1_i_s_raddr, twiddle_h_rsc_0_1_i_s_raddr_core_sct,
      twiddle_h_rsc_0_1_i_s_din
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_1_i_oswt;
  output twiddle_h_rsc_0_1_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_1_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_1_i_s_din_mxwt;
  input twiddle_h_rsc_0_1_i_biwt;
  input twiddle_h_rsc_0_1_i_bdwt;
  output twiddle_h_rsc_0_1_i_bcwt;
  reg twiddle_h_rsc_0_1_i_bcwt;
  output [5:0] twiddle_h_rsc_0_1_i_s_raddr;
  input twiddle_h_rsc_0_1_i_s_raddr_core_sct;
  input [31:0] twiddle_h_rsc_0_1_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_h_rsc_0_1_i_s_din_bfwt;

  wire[4:0] butterFly2_1_tw_h_butterFly2_1_tw_h_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_1_i_wen_comp = (~ twiddle_h_rsc_0_1_i_oswt) | twiddle_h_rsc_0_1_i_biwt
      | twiddle_h_rsc_0_1_i_bcwt;
  assign butterFly2_1_tw_h_butterFly2_1_tw_h_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_h_rsc_0_1_i_s_raddr_core[4:0]),
      twiddle_h_rsc_0_1_i_s_raddr_core_sct);
  assign twiddle_h_rsc_0_1_i_s_raddr = {1'b0, butterFly2_1_tw_h_butterFly2_1_tw_h_and_nl};
  assign twiddle_h_rsc_0_1_i_s_din_mxwt = MUX_v_32_2_2(twiddle_h_rsc_0_1_i_s_din,
      twiddle_h_rsc_0_1_i_s_din_bfwt, twiddle_h_rsc_0_1_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_h_rsc_0_1_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_h_rsc_0_1_i_bcwt <= ~((~(twiddle_h_rsc_0_1_i_bcwt | twiddle_h_rsc_0_1_i_biwt))
          | twiddle_h_rsc_0_1_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_h_rsc_0_1_i_biwt ) begin
      twiddle_h_rsc_0_1_i_s_din_bfwt <= twiddle_h_rsc_0_1_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_1_i_twiddle_h_rsc_0_1_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_1_i_twiddle_h_rsc_0_1_wait_ctrl (
  core_wen, twiddle_h_rsc_0_1_i_oswt, twiddle_h_rsc_0_1_i_biwt, twiddle_h_rsc_0_1_i_bdwt,
      twiddle_h_rsc_0_1_i_bcwt, twiddle_h_rsc_0_1_i_s_re_core_sct, twiddle_h_rsc_0_1_i_s_rrdy
);
  input core_wen;
  input twiddle_h_rsc_0_1_i_oswt;
  output twiddle_h_rsc_0_1_i_biwt;
  output twiddle_h_rsc_0_1_i_bdwt;
  input twiddle_h_rsc_0_1_i_bcwt;
  output twiddle_h_rsc_0_1_i_s_re_core_sct;
  input twiddle_h_rsc_0_1_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_1_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_1_i_bdwt = twiddle_h_rsc_0_1_i_oswt & core_wen;
  assign twiddle_h_rsc_0_1_i_biwt = twiddle_h_rsc_0_1_i_ogwt & twiddle_h_rsc_0_1_i_s_rrdy;
  assign twiddle_h_rsc_0_1_i_ogwt = twiddle_h_rsc_0_1_i_oswt & (~ twiddle_h_rsc_0_1_i_bcwt);
  assign twiddle_h_rsc_0_1_i_s_re_core_sct = twiddle_h_rsc_0_1_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_0_i_twiddle_h_rsc_0_0_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_0_i_twiddle_h_rsc_0_0_wait_dp (
  clk, rst, twiddle_h_rsc_0_0_i_oswt, twiddle_h_rsc_0_0_i_wen_comp, twiddle_h_rsc_0_0_i_s_raddr_core,
      twiddle_h_rsc_0_0_i_s_din_mxwt, twiddle_h_rsc_0_0_i_biwt, twiddle_h_rsc_0_0_i_bdwt,
      twiddle_h_rsc_0_0_i_bcwt, twiddle_h_rsc_0_0_i_s_raddr, twiddle_h_rsc_0_0_i_s_raddr_core_sct,
      twiddle_h_rsc_0_0_i_s_din
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_0_i_oswt;
  output twiddle_h_rsc_0_0_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_0_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_0_i_s_din_mxwt;
  input twiddle_h_rsc_0_0_i_biwt;
  input twiddle_h_rsc_0_0_i_bdwt;
  output twiddle_h_rsc_0_0_i_bcwt;
  reg twiddle_h_rsc_0_0_i_bcwt;
  output [5:0] twiddle_h_rsc_0_0_i_s_raddr;
  input twiddle_h_rsc_0_0_i_s_raddr_core_sct;
  input [31:0] twiddle_h_rsc_0_0_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_h_rsc_0_0_i_s_din_bfwt;

  wire[4:0] INNER_LOOP1_tw_h_INNER_LOOP1_tw_h_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_0_i_wen_comp = (~ twiddle_h_rsc_0_0_i_oswt) | twiddle_h_rsc_0_0_i_biwt
      | twiddle_h_rsc_0_0_i_bcwt;
  assign INNER_LOOP1_tw_h_INNER_LOOP1_tw_h_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_h_rsc_0_0_i_s_raddr_core[4:0]),
      twiddle_h_rsc_0_0_i_s_raddr_core_sct);
  assign twiddle_h_rsc_0_0_i_s_raddr = {1'b0, INNER_LOOP1_tw_h_INNER_LOOP1_tw_h_and_nl};
  assign twiddle_h_rsc_0_0_i_s_din_mxwt = MUX_v_32_2_2(twiddle_h_rsc_0_0_i_s_din,
      twiddle_h_rsc_0_0_i_s_din_bfwt, twiddle_h_rsc_0_0_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_h_rsc_0_0_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_h_rsc_0_0_i_bcwt <= ~((~(twiddle_h_rsc_0_0_i_bcwt | twiddle_h_rsc_0_0_i_biwt))
          | twiddle_h_rsc_0_0_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_h_rsc_0_0_i_biwt ) begin
      twiddle_h_rsc_0_0_i_s_din_bfwt <= twiddle_h_rsc_0_0_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_0_i_twiddle_h_rsc_0_0_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_0_i_twiddle_h_rsc_0_0_wait_ctrl (
  core_wen, twiddle_h_rsc_0_0_i_oswt, twiddle_h_rsc_0_0_i_biwt, twiddle_h_rsc_0_0_i_bdwt,
      twiddle_h_rsc_0_0_i_bcwt, twiddle_h_rsc_0_0_i_s_re_core_sct, twiddle_h_rsc_0_0_i_s_rrdy
);
  input core_wen;
  input twiddle_h_rsc_0_0_i_oswt;
  output twiddle_h_rsc_0_0_i_biwt;
  output twiddle_h_rsc_0_0_i_bdwt;
  input twiddle_h_rsc_0_0_i_bcwt;
  output twiddle_h_rsc_0_0_i_s_re_core_sct;
  input twiddle_h_rsc_0_0_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_0_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_h_rsc_0_0_i_bdwt = twiddle_h_rsc_0_0_i_oswt & core_wen;
  assign twiddle_h_rsc_0_0_i_biwt = twiddle_h_rsc_0_0_i_ogwt & twiddle_h_rsc_0_0_i_s_rrdy;
  assign twiddle_h_rsc_0_0_i_ogwt = twiddle_h_rsc_0_0_i_oswt & (~ twiddle_h_rsc_0_0_i_bcwt);
  assign twiddle_h_rsc_0_0_i_s_re_core_sct = twiddle_h_rsc_0_0_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_15_i_twiddle_rsc_0_15_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_15_i_twiddle_rsc_0_15_wait_dp (
  clk, rst, twiddle_rsc_0_15_i_oswt, twiddle_rsc_0_15_i_wen_comp, twiddle_rsc_0_15_i_s_raddr_core,
      twiddle_rsc_0_15_i_s_din_mxwt, twiddle_rsc_0_15_i_biwt, twiddle_rsc_0_15_i_bdwt,
      twiddle_rsc_0_15_i_bcwt, twiddle_rsc_0_15_i_s_raddr, twiddle_rsc_0_15_i_s_raddr_core_sct,
      twiddle_rsc_0_15_i_s_din
);
  input clk;
  input rst;
  input twiddle_rsc_0_15_i_oswt;
  output twiddle_rsc_0_15_i_wen_comp;
  input [5:0] twiddle_rsc_0_15_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_15_i_s_din_mxwt;
  input twiddle_rsc_0_15_i_biwt;
  input twiddle_rsc_0_15_i_bdwt;
  output twiddle_rsc_0_15_i_bcwt;
  reg twiddle_rsc_0_15_i_bcwt;
  output [5:0] twiddle_rsc_0_15_i_s_raddr;
  input twiddle_rsc_0_15_i_s_raddr_core_sct;
  input [31:0] twiddle_rsc_0_15_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_rsc_0_15_i_s_din_bfwt;

  wire[4:0] butterFly2_15_tw_butterFly2_15_tw_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_15_i_wen_comp = (~ twiddle_rsc_0_15_i_oswt) | twiddle_rsc_0_15_i_biwt
      | twiddle_rsc_0_15_i_bcwt;
  assign butterFly2_15_tw_butterFly2_15_tw_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_rsc_0_15_i_s_raddr_core[4:0]),
      twiddle_rsc_0_15_i_s_raddr_core_sct);
  assign twiddle_rsc_0_15_i_s_raddr = {1'b0, butterFly2_15_tw_butterFly2_15_tw_and_nl};
  assign twiddle_rsc_0_15_i_s_din_mxwt = MUX_v_32_2_2(twiddle_rsc_0_15_i_s_din, twiddle_rsc_0_15_i_s_din_bfwt,
      twiddle_rsc_0_15_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_rsc_0_15_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_rsc_0_15_i_bcwt <= ~((~(twiddle_rsc_0_15_i_bcwt | twiddle_rsc_0_15_i_biwt))
          | twiddle_rsc_0_15_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_rsc_0_15_i_biwt ) begin
      twiddle_rsc_0_15_i_s_din_bfwt <= twiddle_rsc_0_15_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_15_i_twiddle_rsc_0_15_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_15_i_twiddle_rsc_0_15_wait_ctrl (
  core_wen, twiddle_rsc_0_15_i_oswt, twiddle_rsc_0_15_i_biwt, twiddle_rsc_0_15_i_bdwt,
      twiddle_rsc_0_15_i_bcwt, twiddle_rsc_0_15_i_s_re_core_sct, twiddle_rsc_0_15_i_s_rrdy
);
  input core_wen;
  input twiddle_rsc_0_15_i_oswt;
  output twiddle_rsc_0_15_i_biwt;
  output twiddle_rsc_0_15_i_bdwt;
  input twiddle_rsc_0_15_i_bcwt;
  output twiddle_rsc_0_15_i_s_re_core_sct;
  input twiddle_rsc_0_15_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_rsc_0_15_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_15_i_bdwt = twiddle_rsc_0_15_i_oswt & core_wen;
  assign twiddle_rsc_0_15_i_biwt = twiddle_rsc_0_15_i_ogwt & twiddle_rsc_0_15_i_s_rrdy;
  assign twiddle_rsc_0_15_i_ogwt = twiddle_rsc_0_15_i_oswt & (~ twiddle_rsc_0_15_i_bcwt);
  assign twiddle_rsc_0_15_i_s_re_core_sct = twiddle_rsc_0_15_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_14_i_twiddle_rsc_0_14_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_14_i_twiddle_rsc_0_14_wait_dp (
  clk, rst, twiddle_rsc_0_14_i_oswt, twiddle_rsc_0_14_i_wen_comp, twiddle_rsc_0_14_i_s_raddr_core,
      twiddle_rsc_0_14_i_s_din_mxwt, twiddle_rsc_0_14_i_biwt, twiddle_rsc_0_14_i_bdwt,
      twiddle_rsc_0_14_i_bcwt, twiddle_rsc_0_14_i_s_raddr, twiddle_rsc_0_14_i_s_raddr_core_sct,
      twiddle_rsc_0_14_i_s_din
);
  input clk;
  input rst;
  input twiddle_rsc_0_14_i_oswt;
  output twiddle_rsc_0_14_i_wen_comp;
  input [5:0] twiddle_rsc_0_14_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_14_i_s_din_mxwt;
  input twiddle_rsc_0_14_i_biwt;
  input twiddle_rsc_0_14_i_bdwt;
  output twiddle_rsc_0_14_i_bcwt;
  reg twiddle_rsc_0_14_i_bcwt;
  output [5:0] twiddle_rsc_0_14_i_s_raddr;
  input twiddle_rsc_0_14_i_s_raddr_core_sct;
  input [31:0] twiddle_rsc_0_14_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_rsc_0_14_i_s_din_bfwt;

  wire[4:0] butterFly2_14_tw_butterFly2_14_tw_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_14_i_wen_comp = (~ twiddle_rsc_0_14_i_oswt) | twiddle_rsc_0_14_i_biwt
      | twiddle_rsc_0_14_i_bcwt;
  assign butterFly2_14_tw_butterFly2_14_tw_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_rsc_0_14_i_s_raddr_core[4:0]),
      twiddle_rsc_0_14_i_s_raddr_core_sct);
  assign twiddle_rsc_0_14_i_s_raddr = {1'b0, butterFly2_14_tw_butterFly2_14_tw_and_nl};
  assign twiddle_rsc_0_14_i_s_din_mxwt = MUX_v_32_2_2(twiddle_rsc_0_14_i_s_din, twiddle_rsc_0_14_i_s_din_bfwt,
      twiddle_rsc_0_14_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_rsc_0_14_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_rsc_0_14_i_bcwt <= ~((~(twiddle_rsc_0_14_i_bcwt | twiddle_rsc_0_14_i_biwt))
          | twiddle_rsc_0_14_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_rsc_0_14_i_biwt ) begin
      twiddle_rsc_0_14_i_s_din_bfwt <= twiddle_rsc_0_14_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_14_i_twiddle_rsc_0_14_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_14_i_twiddle_rsc_0_14_wait_ctrl (
  core_wen, twiddle_rsc_0_14_i_oswt, twiddle_rsc_0_14_i_biwt, twiddle_rsc_0_14_i_bdwt,
      twiddle_rsc_0_14_i_bcwt, twiddle_rsc_0_14_i_s_re_core_sct, twiddle_rsc_0_14_i_s_rrdy
);
  input core_wen;
  input twiddle_rsc_0_14_i_oswt;
  output twiddle_rsc_0_14_i_biwt;
  output twiddle_rsc_0_14_i_bdwt;
  input twiddle_rsc_0_14_i_bcwt;
  output twiddle_rsc_0_14_i_s_re_core_sct;
  input twiddle_rsc_0_14_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_rsc_0_14_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_14_i_bdwt = twiddle_rsc_0_14_i_oswt & core_wen;
  assign twiddle_rsc_0_14_i_biwt = twiddle_rsc_0_14_i_ogwt & twiddle_rsc_0_14_i_s_rrdy;
  assign twiddle_rsc_0_14_i_ogwt = twiddle_rsc_0_14_i_oswt & (~ twiddle_rsc_0_14_i_bcwt);
  assign twiddle_rsc_0_14_i_s_re_core_sct = twiddle_rsc_0_14_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_13_i_twiddle_rsc_0_13_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_13_i_twiddle_rsc_0_13_wait_dp (
  clk, rst, twiddle_rsc_0_13_i_oswt, twiddle_rsc_0_13_i_wen_comp, twiddle_rsc_0_13_i_s_raddr_core,
      twiddle_rsc_0_13_i_s_din_mxwt, twiddle_rsc_0_13_i_biwt, twiddle_rsc_0_13_i_bdwt,
      twiddle_rsc_0_13_i_bcwt, twiddle_rsc_0_13_i_s_raddr, twiddle_rsc_0_13_i_s_raddr_core_sct,
      twiddle_rsc_0_13_i_s_din
);
  input clk;
  input rst;
  input twiddle_rsc_0_13_i_oswt;
  output twiddle_rsc_0_13_i_wen_comp;
  input [5:0] twiddle_rsc_0_13_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_13_i_s_din_mxwt;
  input twiddle_rsc_0_13_i_biwt;
  input twiddle_rsc_0_13_i_bdwt;
  output twiddle_rsc_0_13_i_bcwt;
  reg twiddle_rsc_0_13_i_bcwt;
  output [5:0] twiddle_rsc_0_13_i_s_raddr;
  input twiddle_rsc_0_13_i_s_raddr_core_sct;
  input [31:0] twiddle_rsc_0_13_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_rsc_0_13_i_s_din_bfwt;

  wire[4:0] butterFly2_13_tw_butterFly2_13_tw_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_13_i_wen_comp = (~ twiddle_rsc_0_13_i_oswt) | twiddle_rsc_0_13_i_biwt
      | twiddle_rsc_0_13_i_bcwt;
  assign butterFly2_13_tw_butterFly2_13_tw_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_rsc_0_13_i_s_raddr_core[4:0]),
      twiddle_rsc_0_13_i_s_raddr_core_sct);
  assign twiddle_rsc_0_13_i_s_raddr = {1'b0, butterFly2_13_tw_butterFly2_13_tw_and_nl};
  assign twiddle_rsc_0_13_i_s_din_mxwt = MUX_v_32_2_2(twiddle_rsc_0_13_i_s_din, twiddle_rsc_0_13_i_s_din_bfwt,
      twiddle_rsc_0_13_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_rsc_0_13_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_rsc_0_13_i_bcwt <= ~((~(twiddle_rsc_0_13_i_bcwt | twiddle_rsc_0_13_i_biwt))
          | twiddle_rsc_0_13_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_rsc_0_13_i_biwt ) begin
      twiddle_rsc_0_13_i_s_din_bfwt <= twiddle_rsc_0_13_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_13_i_twiddle_rsc_0_13_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_13_i_twiddle_rsc_0_13_wait_ctrl (
  core_wen, twiddle_rsc_0_13_i_oswt, twiddle_rsc_0_13_i_biwt, twiddle_rsc_0_13_i_bdwt,
      twiddle_rsc_0_13_i_bcwt, twiddle_rsc_0_13_i_s_re_core_sct, twiddle_rsc_0_13_i_s_rrdy
);
  input core_wen;
  input twiddle_rsc_0_13_i_oswt;
  output twiddle_rsc_0_13_i_biwt;
  output twiddle_rsc_0_13_i_bdwt;
  input twiddle_rsc_0_13_i_bcwt;
  output twiddle_rsc_0_13_i_s_re_core_sct;
  input twiddle_rsc_0_13_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_rsc_0_13_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_13_i_bdwt = twiddle_rsc_0_13_i_oswt & core_wen;
  assign twiddle_rsc_0_13_i_biwt = twiddle_rsc_0_13_i_ogwt & twiddle_rsc_0_13_i_s_rrdy;
  assign twiddle_rsc_0_13_i_ogwt = twiddle_rsc_0_13_i_oswt & (~ twiddle_rsc_0_13_i_bcwt);
  assign twiddle_rsc_0_13_i_s_re_core_sct = twiddle_rsc_0_13_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_12_i_twiddle_rsc_0_12_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_12_i_twiddle_rsc_0_12_wait_dp (
  clk, rst, twiddle_rsc_0_12_i_oswt, twiddle_rsc_0_12_i_wen_comp, twiddle_rsc_0_12_i_s_raddr_core,
      twiddle_rsc_0_12_i_s_din_mxwt, twiddle_rsc_0_12_i_biwt, twiddle_rsc_0_12_i_bdwt,
      twiddle_rsc_0_12_i_bcwt, twiddle_rsc_0_12_i_s_raddr, twiddle_rsc_0_12_i_s_raddr_core_sct,
      twiddle_rsc_0_12_i_s_din
);
  input clk;
  input rst;
  input twiddle_rsc_0_12_i_oswt;
  output twiddle_rsc_0_12_i_wen_comp;
  input [5:0] twiddle_rsc_0_12_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_12_i_s_din_mxwt;
  input twiddle_rsc_0_12_i_biwt;
  input twiddle_rsc_0_12_i_bdwt;
  output twiddle_rsc_0_12_i_bcwt;
  reg twiddle_rsc_0_12_i_bcwt;
  output [5:0] twiddle_rsc_0_12_i_s_raddr;
  input twiddle_rsc_0_12_i_s_raddr_core_sct;
  input [31:0] twiddle_rsc_0_12_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_rsc_0_12_i_s_din_bfwt;

  wire[4:0] butterFly2_12_tw_butterFly2_12_tw_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_12_i_wen_comp = (~ twiddle_rsc_0_12_i_oswt) | twiddle_rsc_0_12_i_biwt
      | twiddle_rsc_0_12_i_bcwt;
  assign butterFly2_12_tw_butterFly2_12_tw_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_rsc_0_12_i_s_raddr_core[4:0]),
      twiddle_rsc_0_12_i_s_raddr_core_sct);
  assign twiddle_rsc_0_12_i_s_raddr = {1'b0, butterFly2_12_tw_butterFly2_12_tw_and_nl};
  assign twiddle_rsc_0_12_i_s_din_mxwt = MUX_v_32_2_2(twiddle_rsc_0_12_i_s_din, twiddle_rsc_0_12_i_s_din_bfwt,
      twiddle_rsc_0_12_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_rsc_0_12_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_rsc_0_12_i_bcwt <= ~((~(twiddle_rsc_0_12_i_bcwt | twiddle_rsc_0_12_i_biwt))
          | twiddle_rsc_0_12_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_rsc_0_12_i_biwt ) begin
      twiddle_rsc_0_12_i_s_din_bfwt <= twiddle_rsc_0_12_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_12_i_twiddle_rsc_0_12_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_12_i_twiddle_rsc_0_12_wait_ctrl (
  core_wen, twiddle_rsc_0_12_i_oswt, twiddle_rsc_0_12_i_biwt, twiddle_rsc_0_12_i_bdwt,
      twiddle_rsc_0_12_i_bcwt, twiddle_rsc_0_12_i_s_re_core_sct, twiddle_rsc_0_12_i_s_rrdy
);
  input core_wen;
  input twiddle_rsc_0_12_i_oswt;
  output twiddle_rsc_0_12_i_biwt;
  output twiddle_rsc_0_12_i_bdwt;
  input twiddle_rsc_0_12_i_bcwt;
  output twiddle_rsc_0_12_i_s_re_core_sct;
  input twiddle_rsc_0_12_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_rsc_0_12_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_12_i_bdwt = twiddle_rsc_0_12_i_oswt & core_wen;
  assign twiddle_rsc_0_12_i_biwt = twiddle_rsc_0_12_i_ogwt & twiddle_rsc_0_12_i_s_rrdy;
  assign twiddle_rsc_0_12_i_ogwt = twiddle_rsc_0_12_i_oswt & (~ twiddle_rsc_0_12_i_bcwt);
  assign twiddle_rsc_0_12_i_s_re_core_sct = twiddle_rsc_0_12_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_11_i_twiddle_rsc_0_11_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_11_i_twiddle_rsc_0_11_wait_dp (
  clk, rst, twiddle_rsc_0_11_i_oswt, twiddle_rsc_0_11_i_wen_comp, twiddle_rsc_0_11_i_s_raddr_core,
      twiddle_rsc_0_11_i_s_din_mxwt, twiddle_rsc_0_11_i_biwt, twiddle_rsc_0_11_i_bdwt,
      twiddle_rsc_0_11_i_bcwt, twiddle_rsc_0_11_i_s_raddr, twiddle_rsc_0_11_i_s_raddr_core_sct,
      twiddle_rsc_0_11_i_s_din
);
  input clk;
  input rst;
  input twiddle_rsc_0_11_i_oswt;
  output twiddle_rsc_0_11_i_wen_comp;
  input [5:0] twiddle_rsc_0_11_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_11_i_s_din_mxwt;
  input twiddle_rsc_0_11_i_biwt;
  input twiddle_rsc_0_11_i_bdwt;
  output twiddle_rsc_0_11_i_bcwt;
  reg twiddle_rsc_0_11_i_bcwt;
  output [5:0] twiddle_rsc_0_11_i_s_raddr;
  input twiddle_rsc_0_11_i_s_raddr_core_sct;
  input [31:0] twiddle_rsc_0_11_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_rsc_0_11_i_s_din_bfwt;

  wire[4:0] butterFly2_11_tw_butterFly2_11_tw_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_11_i_wen_comp = (~ twiddle_rsc_0_11_i_oswt) | twiddle_rsc_0_11_i_biwt
      | twiddle_rsc_0_11_i_bcwt;
  assign butterFly2_11_tw_butterFly2_11_tw_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_rsc_0_11_i_s_raddr_core[4:0]),
      twiddle_rsc_0_11_i_s_raddr_core_sct);
  assign twiddle_rsc_0_11_i_s_raddr = {1'b0, butterFly2_11_tw_butterFly2_11_tw_and_nl};
  assign twiddle_rsc_0_11_i_s_din_mxwt = MUX_v_32_2_2(twiddle_rsc_0_11_i_s_din, twiddle_rsc_0_11_i_s_din_bfwt,
      twiddle_rsc_0_11_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_rsc_0_11_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_rsc_0_11_i_bcwt <= ~((~(twiddle_rsc_0_11_i_bcwt | twiddle_rsc_0_11_i_biwt))
          | twiddle_rsc_0_11_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_rsc_0_11_i_biwt ) begin
      twiddle_rsc_0_11_i_s_din_bfwt <= twiddle_rsc_0_11_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_11_i_twiddle_rsc_0_11_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_11_i_twiddle_rsc_0_11_wait_ctrl (
  core_wen, twiddle_rsc_0_11_i_oswt, twiddle_rsc_0_11_i_biwt, twiddle_rsc_0_11_i_bdwt,
      twiddle_rsc_0_11_i_bcwt, twiddle_rsc_0_11_i_s_re_core_sct, twiddle_rsc_0_11_i_s_rrdy
);
  input core_wen;
  input twiddle_rsc_0_11_i_oswt;
  output twiddle_rsc_0_11_i_biwt;
  output twiddle_rsc_0_11_i_bdwt;
  input twiddle_rsc_0_11_i_bcwt;
  output twiddle_rsc_0_11_i_s_re_core_sct;
  input twiddle_rsc_0_11_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_rsc_0_11_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_11_i_bdwt = twiddle_rsc_0_11_i_oswt & core_wen;
  assign twiddle_rsc_0_11_i_biwt = twiddle_rsc_0_11_i_ogwt & twiddle_rsc_0_11_i_s_rrdy;
  assign twiddle_rsc_0_11_i_ogwt = twiddle_rsc_0_11_i_oswt & (~ twiddle_rsc_0_11_i_bcwt);
  assign twiddle_rsc_0_11_i_s_re_core_sct = twiddle_rsc_0_11_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_10_i_twiddle_rsc_0_10_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_10_i_twiddle_rsc_0_10_wait_dp (
  clk, rst, twiddle_rsc_0_10_i_oswt, twiddle_rsc_0_10_i_wen_comp, twiddle_rsc_0_10_i_s_raddr_core,
      twiddle_rsc_0_10_i_s_din_mxwt, twiddle_rsc_0_10_i_biwt, twiddle_rsc_0_10_i_bdwt,
      twiddle_rsc_0_10_i_bcwt, twiddle_rsc_0_10_i_s_raddr, twiddle_rsc_0_10_i_s_raddr_core_sct,
      twiddle_rsc_0_10_i_s_din
);
  input clk;
  input rst;
  input twiddle_rsc_0_10_i_oswt;
  output twiddle_rsc_0_10_i_wen_comp;
  input [5:0] twiddle_rsc_0_10_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_10_i_s_din_mxwt;
  input twiddle_rsc_0_10_i_biwt;
  input twiddle_rsc_0_10_i_bdwt;
  output twiddle_rsc_0_10_i_bcwt;
  reg twiddle_rsc_0_10_i_bcwt;
  output [5:0] twiddle_rsc_0_10_i_s_raddr;
  input twiddle_rsc_0_10_i_s_raddr_core_sct;
  input [31:0] twiddle_rsc_0_10_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_rsc_0_10_i_s_din_bfwt;

  wire[4:0] butterFly2_10_tw_butterFly2_10_tw_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_10_i_wen_comp = (~ twiddle_rsc_0_10_i_oswt) | twiddle_rsc_0_10_i_biwt
      | twiddle_rsc_0_10_i_bcwt;
  assign butterFly2_10_tw_butterFly2_10_tw_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_rsc_0_10_i_s_raddr_core[4:0]),
      twiddle_rsc_0_10_i_s_raddr_core_sct);
  assign twiddle_rsc_0_10_i_s_raddr = {1'b0, butterFly2_10_tw_butterFly2_10_tw_and_nl};
  assign twiddle_rsc_0_10_i_s_din_mxwt = MUX_v_32_2_2(twiddle_rsc_0_10_i_s_din, twiddle_rsc_0_10_i_s_din_bfwt,
      twiddle_rsc_0_10_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_rsc_0_10_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_rsc_0_10_i_bcwt <= ~((~(twiddle_rsc_0_10_i_bcwt | twiddle_rsc_0_10_i_biwt))
          | twiddle_rsc_0_10_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_rsc_0_10_i_biwt ) begin
      twiddle_rsc_0_10_i_s_din_bfwt <= twiddle_rsc_0_10_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_10_i_twiddle_rsc_0_10_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_10_i_twiddle_rsc_0_10_wait_ctrl (
  core_wen, twiddle_rsc_0_10_i_oswt, twiddle_rsc_0_10_i_biwt, twiddle_rsc_0_10_i_bdwt,
      twiddle_rsc_0_10_i_bcwt, twiddle_rsc_0_10_i_s_re_core_sct, twiddle_rsc_0_10_i_s_rrdy
);
  input core_wen;
  input twiddle_rsc_0_10_i_oswt;
  output twiddle_rsc_0_10_i_biwt;
  output twiddle_rsc_0_10_i_bdwt;
  input twiddle_rsc_0_10_i_bcwt;
  output twiddle_rsc_0_10_i_s_re_core_sct;
  input twiddle_rsc_0_10_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_rsc_0_10_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_10_i_bdwt = twiddle_rsc_0_10_i_oswt & core_wen;
  assign twiddle_rsc_0_10_i_biwt = twiddle_rsc_0_10_i_ogwt & twiddle_rsc_0_10_i_s_rrdy;
  assign twiddle_rsc_0_10_i_ogwt = twiddle_rsc_0_10_i_oswt & (~ twiddle_rsc_0_10_i_bcwt);
  assign twiddle_rsc_0_10_i_s_re_core_sct = twiddle_rsc_0_10_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_9_i_twiddle_rsc_0_9_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_9_i_twiddle_rsc_0_9_wait_dp (
  clk, rst, twiddle_rsc_0_9_i_oswt, twiddle_rsc_0_9_i_wen_comp, twiddle_rsc_0_9_i_s_raddr_core,
      twiddle_rsc_0_9_i_s_din_mxwt, twiddle_rsc_0_9_i_biwt, twiddle_rsc_0_9_i_bdwt,
      twiddle_rsc_0_9_i_bcwt, twiddle_rsc_0_9_i_s_raddr, twiddle_rsc_0_9_i_s_raddr_core_sct,
      twiddle_rsc_0_9_i_s_din
);
  input clk;
  input rst;
  input twiddle_rsc_0_9_i_oswt;
  output twiddle_rsc_0_9_i_wen_comp;
  input [5:0] twiddle_rsc_0_9_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_9_i_s_din_mxwt;
  input twiddle_rsc_0_9_i_biwt;
  input twiddle_rsc_0_9_i_bdwt;
  output twiddle_rsc_0_9_i_bcwt;
  reg twiddle_rsc_0_9_i_bcwt;
  output [5:0] twiddle_rsc_0_9_i_s_raddr;
  input twiddle_rsc_0_9_i_s_raddr_core_sct;
  input [31:0] twiddle_rsc_0_9_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_rsc_0_9_i_s_din_bfwt;

  wire[4:0] butterFly2_9_tw_butterFly2_9_tw_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_9_i_wen_comp = (~ twiddle_rsc_0_9_i_oswt) | twiddle_rsc_0_9_i_biwt
      | twiddle_rsc_0_9_i_bcwt;
  assign butterFly2_9_tw_butterFly2_9_tw_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_rsc_0_9_i_s_raddr_core[4:0]),
      twiddle_rsc_0_9_i_s_raddr_core_sct);
  assign twiddle_rsc_0_9_i_s_raddr = {1'b0, butterFly2_9_tw_butterFly2_9_tw_and_nl};
  assign twiddle_rsc_0_9_i_s_din_mxwt = MUX_v_32_2_2(twiddle_rsc_0_9_i_s_din, twiddle_rsc_0_9_i_s_din_bfwt,
      twiddle_rsc_0_9_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_rsc_0_9_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_rsc_0_9_i_bcwt <= ~((~(twiddle_rsc_0_9_i_bcwt | twiddle_rsc_0_9_i_biwt))
          | twiddle_rsc_0_9_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_rsc_0_9_i_biwt ) begin
      twiddle_rsc_0_9_i_s_din_bfwt <= twiddle_rsc_0_9_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_9_i_twiddle_rsc_0_9_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_9_i_twiddle_rsc_0_9_wait_ctrl (
  core_wen, twiddle_rsc_0_9_i_oswt, twiddle_rsc_0_9_i_biwt, twiddle_rsc_0_9_i_bdwt,
      twiddle_rsc_0_9_i_bcwt, twiddle_rsc_0_9_i_s_re_core_sct, twiddle_rsc_0_9_i_s_rrdy
);
  input core_wen;
  input twiddle_rsc_0_9_i_oswt;
  output twiddle_rsc_0_9_i_biwt;
  output twiddle_rsc_0_9_i_bdwt;
  input twiddle_rsc_0_9_i_bcwt;
  output twiddle_rsc_0_9_i_s_re_core_sct;
  input twiddle_rsc_0_9_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_rsc_0_9_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_9_i_bdwt = twiddle_rsc_0_9_i_oswt & core_wen;
  assign twiddle_rsc_0_9_i_biwt = twiddle_rsc_0_9_i_ogwt & twiddle_rsc_0_9_i_s_rrdy;
  assign twiddle_rsc_0_9_i_ogwt = twiddle_rsc_0_9_i_oswt & (~ twiddle_rsc_0_9_i_bcwt);
  assign twiddle_rsc_0_9_i_s_re_core_sct = twiddle_rsc_0_9_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_8_i_twiddle_rsc_0_8_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_8_i_twiddle_rsc_0_8_wait_dp (
  clk, rst, twiddle_rsc_0_8_i_oswt, twiddle_rsc_0_8_i_wen_comp, twiddle_rsc_0_8_i_s_raddr_core,
      twiddle_rsc_0_8_i_s_din_mxwt, twiddle_rsc_0_8_i_biwt, twiddle_rsc_0_8_i_bdwt,
      twiddle_rsc_0_8_i_bcwt, twiddle_rsc_0_8_i_s_raddr, twiddle_rsc_0_8_i_s_raddr_core_sct,
      twiddle_rsc_0_8_i_s_din
);
  input clk;
  input rst;
  input twiddle_rsc_0_8_i_oswt;
  output twiddle_rsc_0_8_i_wen_comp;
  input [5:0] twiddle_rsc_0_8_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_8_i_s_din_mxwt;
  input twiddle_rsc_0_8_i_biwt;
  input twiddle_rsc_0_8_i_bdwt;
  output twiddle_rsc_0_8_i_bcwt;
  reg twiddle_rsc_0_8_i_bcwt;
  output [5:0] twiddle_rsc_0_8_i_s_raddr;
  input twiddle_rsc_0_8_i_s_raddr_core_sct;
  input [31:0] twiddle_rsc_0_8_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_rsc_0_8_i_s_din_bfwt;

  wire[4:0] butterFly2_8_tw_butterFly2_8_tw_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_8_i_wen_comp = (~ twiddle_rsc_0_8_i_oswt) | twiddle_rsc_0_8_i_biwt
      | twiddle_rsc_0_8_i_bcwt;
  assign butterFly2_8_tw_butterFly2_8_tw_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_rsc_0_8_i_s_raddr_core[4:0]),
      twiddle_rsc_0_8_i_s_raddr_core_sct);
  assign twiddle_rsc_0_8_i_s_raddr = {1'b0, butterFly2_8_tw_butterFly2_8_tw_and_nl};
  assign twiddle_rsc_0_8_i_s_din_mxwt = MUX_v_32_2_2(twiddle_rsc_0_8_i_s_din, twiddle_rsc_0_8_i_s_din_bfwt,
      twiddle_rsc_0_8_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_rsc_0_8_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_rsc_0_8_i_bcwt <= ~((~(twiddle_rsc_0_8_i_bcwt | twiddle_rsc_0_8_i_biwt))
          | twiddle_rsc_0_8_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_rsc_0_8_i_biwt ) begin
      twiddle_rsc_0_8_i_s_din_bfwt <= twiddle_rsc_0_8_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_8_i_twiddle_rsc_0_8_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_8_i_twiddle_rsc_0_8_wait_ctrl (
  core_wen, twiddle_rsc_0_8_i_oswt, twiddle_rsc_0_8_i_biwt, twiddle_rsc_0_8_i_bdwt,
      twiddle_rsc_0_8_i_bcwt, twiddle_rsc_0_8_i_s_re_core_sct, twiddle_rsc_0_8_i_s_rrdy
);
  input core_wen;
  input twiddle_rsc_0_8_i_oswt;
  output twiddle_rsc_0_8_i_biwt;
  output twiddle_rsc_0_8_i_bdwt;
  input twiddle_rsc_0_8_i_bcwt;
  output twiddle_rsc_0_8_i_s_re_core_sct;
  input twiddle_rsc_0_8_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_rsc_0_8_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_8_i_bdwt = twiddle_rsc_0_8_i_oswt & core_wen;
  assign twiddle_rsc_0_8_i_biwt = twiddle_rsc_0_8_i_ogwt & twiddle_rsc_0_8_i_s_rrdy;
  assign twiddle_rsc_0_8_i_ogwt = twiddle_rsc_0_8_i_oswt & (~ twiddle_rsc_0_8_i_bcwt);
  assign twiddle_rsc_0_8_i_s_re_core_sct = twiddle_rsc_0_8_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_7_i_twiddle_rsc_0_7_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_7_i_twiddle_rsc_0_7_wait_dp (
  clk, rst, twiddle_rsc_0_7_i_oswt, twiddle_rsc_0_7_i_wen_comp, twiddle_rsc_0_7_i_s_raddr_core,
      twiddle_rsc_0_7_i_s_din_mxwt, twiddle_rsc_0_7_i_biwt, twiddle_rsc_0_7_i_bdwt,
      twiddle_rsc_0_7_i_bcwt, twiddle_rsc_0_7_i_s_raddr, twiddle_rsc_0_7_i_s_raddr_core_sct,
      twiddle_rsc_0_7_i_s_din
);
  input clk;
  input rst;
  input twiddle_rsc_0_7_i_oswt;
  output twiddle_rsc_0_7_i_wen_comp;
  input [5:0] twiddle_rsc_0_7_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_7_i_s_din_mxwt;
  input twiddle_rsc_0_7_i_biwt;
  input twiddle_rsc_0_7_i_bdwt;
  output twiddle_rsc_0_7_i_bcwt;
  reg twiddle_rsc_0_7_i_bcwt;
  output [5:0] twiddle_rsc_0_7_i_s_raddr;
  input twiddle_rsc_0_7_i_s_raddr_core_sct;
  input [31:0] twiddle_rsc_0_7_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_rsc_0_7_i_s_din_bfwt;

  wire[4:0] butterFly2_7_tw_butterFly2_7_tw_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_7_i_wen_comp = (~ twiddle_rsc_0_7_i_oswt) | twiddle_rsc_0_7_i_biwt
      | twiddle_rsc_0_7_i_bcwt;
  assign butterFly2_7_tw_butterFly2_7_tw_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_rsc_0_7_i_s_raddr_core[4:0]),
      twiddle_rsc_0_7_i_s_raddr_core_sct);
  assign twiddle_rsc_0_7_i_s_raddr = {1'b0, butterFly2_7_tw_butterFly2_7_tw_and_nl};
  assign twiddle_rsc_0_7_i_s_din_mxwt = MUX_v_32_2_2(twiddle_rsc_0_7_i_s_din, twiddle_rsc_0_7_i_s_din_bfwt,
      twiddle_rsc_0_7_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_rsc_0_7_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_rsc_0_7_i_bcwt <= ~((~(twiddle_rsc_0_7_i_bcwt | twiddle_rsc_0_7_i_biwt))
          | twiddle_rsc_0_7_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_rsc_0_7_i_biwt ) begin
      twiddle_rsc_0_7_i_s_din_bfwt <= twiddle_rsc_0_7_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_7_i_twiddle_rsc_0_7_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_7_i_twiddle_rsc_0_7_wait_ctrl (
  core_wen, twiddle_rsc_0_7_i_oswt, twiddle_rsc_0_7_i_biwt, twiddle_rsc_0_7_i_bdwt,
      twiddle_rsc_0_7_i_bcwt, twiddle_rsc_0_7_i_s_re_core_sct, twiddle_rsc_0_7_i_s_rrdy
);
  input core_wen;
  input twiddle_rsc_0_7_i_oswt;
  output twiddle_rsc_0_7_i_biwt;
  output twiddle_rsc_0_7_i_bdwt;
  input twiddle_rsc_0_7_i_bcwt;
  output twiddle_rsc_0_7_i_s_re_core_sct;
  input twiddle_rsc_0_7_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_rsc_0_7_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_7_i_bdwt = twiddle_rsc_0_7_i_oswt & core_wen;
  assign twiddle_rsc_0_7_i_biwt = twiddle_rsc_0_7_i_ogwt & twiddle_rsc_0_7_i_s_rrdy;
  assign twiddle_rsc_0_7_i_ogwt = twiddle_rsc_0_7_i_oswt & (~ twiddle_rsc_0_7_i_bcwt);
  assign twiddle_rsc_0_7_i_s_re_core_sct = twiddle_rsc_0_7_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_6_i_twiddle_rsc_0_6_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_6_i_twiddle_rsc_0_6_wait_dp (
  clk, rst, twiddle_rsc_0_6_i_oswt, twiddle_rsc_0_6_i_wen_comp, twiddle_rsc_0_6_i_s_raddr_core,
      twiddle_rsc_0_6_i_s_din_mxwt, twiddle_rsc_0_6_i_biwt, twiddle_rsc_0_6_i_bdwt,
      twiddle_rsc_0_6_i_bcwt, twiddle_rsc_0_6_i_s_raddr, twiddle_rsc_0_6_i_s_raddr_core_sct,
      twiddle_rsc_0_6_i_s_din
);
  input clk;
  input rst;
  input twiddle_rsc_0_6_i_oswt;
  output twiddle_rsc_0_6_i_wen_comp;
  input [5:0] twiddle_rsc_0_6_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_6_i_s_din_mxwt;
  input twiddle_rsc_0_6_i_biwt;
  input twiddle_rsc_0_6_i_bdwt;
  output twiddle_rsc_0_6_i_bcwt;
  reg twiddle_rsc_0_6_i_bcwt;
  output [5:0] twiddle_rsc_0_6_i_s_raddr;
  input twiddle_rsc_0_6_i_s_raddr_core_sct;
  input [31:0] twiddle_rsc_0_6_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_rsc_0_6_i_s_din_bfwt;

  wire[4:0] butterFly2_6_tw_butterFly2_6_tw_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_6_i_wen_comp = (~ twiddle_rsc_0_6_i_oswt) | twiddle_rsc_0_6_i_biwt
      | twiddle_rsc_0_6_i_bcwt;
  assign butterFly2_6_tw_butterFly2_6_tw_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_rsc_0_6_i_s_raddr_core[4:0]),
      twiddle_rsc_0_6_i_s_raddr_core_sct);
  assign twiddle_rsc_0_6_i_s_raddr = {1'b0, butterFly2_6_tw_butterFly2_6_tw_and_nl};
  assign twiddle_rsc_0_6_i_s_din_mxwt = MUX_v_32_2_2(twiddle_rsc_0_6_i_s_din, twiddle_rsc_0_6_i_s_din_bfwt,
      twiddle_rsc_0_6_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_rsc_0_6_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_rsc_0_6_i_bcwt <= ~((~(twiddle_rsc_0_6_i_bcwt | twiddle_rsc_0_6_i_biwt))
          | twiddle_rsc_0_6_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_rsc_0_6_i_biwt ) begin
      twiddle_rsc_0_6_i_s_din_bfwt <= twiddle_rsc_0_6_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_6_i_twiddle_rsc_0_6_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_6_i_twiddle_rsc_0_6_wait_ctrl (
  core_wen, twiddle_rsc_0_6_i_oswt, twiddle_rsc_0_6_i_biwt, twiddle_rsc_0_6_i_bdwt,
      twiddle_rsc_0_6_i_bcwt, twiddle_rsc_0_6_i_s_re_core_sct, twiddle_rsc_0_6_i_s_rrdy
);
  input core_wen;
  input twiddle_rsc_0_6_i_oswt;
  output twiddle_rsc_0_6_i_biwt;
  output twiddle_rsc_0_6_i_bdwt;
  input twiddle_rsc_0_6_i_bcwt;
  output twiddle_rsc_0_6_i_s_re_core_sct;
  input twiddle_rsc_0_6_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_rsc_0_6_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_6_i_bdwt = twiddle_rsc_0_6_i_oswt & core_wen;
  assign twiddle_rsc_0_6_i_biwt = twiddle_rsc_0_6_i_ogwt & twiddle_rsc_0_6_i_s_rrdy;
  assign twiddle_rsc_0_6_i_ogwt = twiddle_rsc_0_6_i_oswt & (~ twiddle_rsc_0_6_i_bcwt);
  assign twiddle_rsc_0_6_i_s_re_core_sct = twiddle_rsc_0_6_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_5_i_twiddle_rsc_0_5_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_5_i_twiddle_rsc_0_5_wait_dp (
  clk, rst, twiddle_rsc_0_5_i_oswt, twiddle_rsc_0_5_i_wen_comp, twiddle_rsc_0_5_i_s_raddr_core,
      twiddle_rsc_0_5_i_s_din_mxwt, twiddle_rsc_0_5_i_biwt, twiddle_rsc_0_5_i_bdwt,
      twiddle_rsc_0_5_i_bcwt, twiddle_rsc_0_5_i_s_raddr, twiddle_rsc_0_5_i_s_raddr_core_sct,
      twiddle_rsc_0_5_i_s_din
);
  input clk;
  input rst;
  input twiddle_rsc_0_5_i_oswt;
  output twiddle_rsc_0_5_i_wen_comp;
  input [5:0] twiddle_rsc_0_5_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_5_i_s_din_mxwt;
  input twiddle_rsc_0_5_i_biwt;
  input twiddle_rsc_0_5_i_bdwt;
  output twiddle_rsc_0_5_i_bcwt;
  reg twiddle_rsc_0_5_i_bcwt;
  output [5:0] twiddle_rsc_0_5_i_s_raddr;
  input twiddle_rsc_0_5_i_s_raddr_core_sct;
  input [31:0] twiddle_rsc_0_5_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_rsc_0_5_i_s_din_bfwt;

  wire[4:0] butterFly2_5_tw_butterFly2_5_tw_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_5_i_wen_comp = (~ twiddle_rsc_0_5_i_oswt) | twiddle_rsc_0_5_i_biwt
      | twiddle_rsc_0_5_i_bcwt;
  assign butterFly2_5_tw_butterFly2_5_tw_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_rsc_0_5_i_s_raddr_core[4:0]),
      twiddle_rsc_0_5_i_s_raddr_core_sct);
  assign twiddle_rsc_0_5_i_s_raddr = {1'b0, butterFly2_5_tw_butterFly2_5_tw_and_nl};
  assign twiddle_rsc_0_5_i_s_din_mxwt = MUX_v_32_2_2(twiddle_rsc_0_5_i_s_din, twiddle_rsc_0_5_i_s_din_bfwt,
      twiddle_rsc_0_5_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_rsc_0_5_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_rsc_0_5_i_bcwt <= ~((~(twiddle_rsc_0_5_i_bcwt | twiddle_rsc_0_5_i_biwt))
          | twiddle_rsc_0_5_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_rsc_0_5_i_biwt ) begin
      twiddle_rsc_0_5_i_s_din_bfwt <= twiddle_rsc_0_5_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_5_i_twiddle_rsc_0_5_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_5_i_twiddle_rsc_0_5_wait_ctrl (
  core_wen, twiddle_rsc_0_5_i_oswt, twiddle_rsc_0_5_i_biwt, twiddle_rsc_0_5_i_bdwt,
      twiddle_rsc_0_5_i_bcwt, twiddle_rsc_0_5_i_s_re_core_sct, twiddle_rsc_0_5_i_s_rrdy
);
  input core_wen;
  input twiddle_rsc_0_5_i_oswt;
  output twiddle_rsc_0_5_i_biwt;
  output twiddle_rsc_0_5_i_bdwt;
  input twiddle_rsc_0_5_i_bcwt;
  output twiddle_rsc_0_5_i_s_re_core_sct;
  input twiddle_rsc_0_5_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_rsc_0_5_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_5_i_bdwt = twiddle_rsc_0_5_i_oswt & core_wen;
  assign twiddle_rsc_0_5_i_biwt = twiddle_rsc_0_5_i_ogwt & twiddle_rsc_0_5_i_s_rrdy;
  assign twiddle_rsc_0_5_i_ogwt = twiddle_rsc_0_5_i_oswt & (~ twiddle_rsc_0_5_i_bcwt);
  assign twiddle_rsc_0_5_i_s_re_core_sct = twiddle_rsc_0_5_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_4_i_twiddle_rsc_0_4_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_4_i_twiddle_rsc_0_4_wait_dp (
  clk, rst, twiddle_rsc_0_4_i_oswt, twiddle_rsc_0_4_i_wen_comp, twiddle_rsc_0_4_i_s_raddr_core,
      twiddle_rsc_0_4_i_s_din_mxwt, twiddle_rsc_0_4_i_biwt, twiddle_rsc_0_4_i_bdwt,
      twiddle_rsc_0_4_i_bcwt, twiddle_rsc_0_4_i_s_raddr, twiddle_rsc_0_4_i_s_raddr_core_sct,
      twiddle_rsc_0_4_i_s_din
);
  input clk;
  input rst;
  input twiddle_rsc_0_4_i_oswt;
  output twiddle_rsc_0_4_i_wen_comp;
  input [5:0] twiddle_rsc_0_4_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_4_i_s_din_mxwt;
  input twiddle_rsc_0_4_i_biwt;
  input twiddle_rsc_0_4_i_bdwt;
  output twiddle_rsc_0_4_i_bcwt;
  reg twiddle_rsc_0_4_i_bcwt;
  output [5:0] twiddle_rsc_0_4_i_s_raddr;
  input twiddle_rsc_0_4_i_s_raddr_core_sct;
  input [31:0] twiddle_rsc_0_4_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_rsc_0_4_i_s_din_bfwt;

  wire[4:0] butterFly2_4_tw_butterFly2_4_tw_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_4_i_wen_comp = (~ twiddle_rsc_0_4_i_oswt) | twiddle_rsc_0_4_i_biwt
      | twiddle_rsc_0_4_i_bcwt;
  assign butterFly2_4_tw_butterFly2_4_tw_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_rsc_0_4_i_s_raddr_core[4:0]),
      twiddle_rsc_0_4_i_s_raddr_core_sct);
  assign twiddle_rsc_0_4_i_s_raddr = {1'b0, butterFly2_4_tw_butterFly2_4_tw_and_nl};
  assign twiddle_rsc_0_4_i_s_din_mxwt = MUX_v_32_2_2(twiddle_rsc_0_4_i_s_din, twiddle_rsc_0_4_i_s_din_bfwt,
      twiddle_rsc_0_4_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_rsc_0_4_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_rsc_0_4_i_bcwt <= ~((~(twiddle_rsc_0_4_i_bcwt | twiddle_rsc_0_4_i_biwt))
          | twiddle_rsc_0_4_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_rsc_0_4_i_biwt ) begin
      twiddle_rsc_0_4_i_s_din_bfwt <= twiddle_rsc_0_4_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_4_i_twiddle_rsc_0_4_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_4_i_twiddle_rsc_0_4_wait_ctrl (
  core_wen, twiddle_rsc_0_4_i_oswt, twiddle_rsc_0_4_i_biwt, twiddle_rsc_0_4_i_bdwt,
      twiddle_rsc_0_4_i_bcwt, twiddle_rsc_0_4_i_s_re_core_sct, twiddle_rsc_0_4_i_s_rrdy
);
  input core_wen;
  input twiddle_rsc_0_4_i_oswt;
  output twiddle_rsc_0_4_i_biwt;
  output twiddle_rsc_0_4_i_bdwt;
  input twiddle_rsc_0_4_i_bcwt;
  output twiddle_rsc_0_4_i_s_re_core_sct;
  input twiddle_rsc_0_4_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_rsc_0_4_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_4_i_bdwt = twiddle_rsc_0_4_i_oswt & core_wen;
  assign twiddle_rsc_0_4_i_biwt = twiddle_rsc_0_4_i_ogwt & twiddle_rsc_0_4_i_s_rrdy;
  assign twiddle_rsc_0_4_i_ogwt = twiddle_rsc_0_4_i_oswt & (~ twiddle_rsc_0_4_i_bcwt);
  assign twiddle_rsc_0_4_i_s_re_core_sct = twiddle_rsc_0_4_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_3_i_twiddle_rsc_0_3_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_3_i_twiddle_rsc_0_3_wait_dp (
  clk, rst, twiddle_rsc_0_3_i_oswt, twiddle_rsc_0_3_i_wen_comp, twiddle_rsc_0_3_i_s_raddr_core,
      twiddle_rsc_0_3_i_s_din_mxwt, twiddle_rsc_0_3_i_biwt, twiddle_rsc_0_3_i_bdwt,
      twiddle_rsc_0_3_i_bcwt, twiddle_rsc_0_3_i_s_raddr, twiddle_rsc_0_3_i_s_raddr_core_sct,
      twiddle_rsc_0_3_i_s_din
);
  input clk;
  input rst;
  input twiddle_rsc_0_3_i_oswt;
  output twiddle_rsc_0_3_i_wen_comp;
  input [5:0] twiddle_rsc_0_3_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_3_i_s_din_mxwt;
  input twiddle_rsc_0_3_i_biwt;
  input twiddle_rsc_0_3_i_bdwt;
  output twiddle_rsc_0_3_i_bcwt;
  reg twiddle_rsc_0_3_i_bcwt;
  output [5:0] twiddle_rsc_0_3_i_s_raddr;
  input twiddle_rsc_0_3_i_s_raddr_core_sct;
  input [31:0] twiddle_rsc_0_3_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_rsc_0_3_i_s_din_bfwt;

  wire[4:0] butterFly2_3_tw_butterFly2_3_tw_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_3_i_wen_comp = (~ twiddle_rsc_0_3_i_oswt) | twiddle_rsc_0_3_i_biwt
      | twiddle_rsc_0_3_i_bcwt;
  assign butterFly2_3_tw_butterFly2_3_tw_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_rsc_0_3_i_s_raddr_core[4:0]),
      twiddle_rsc_0_3_i_s_raddr_core_sct);
  assign twiddle_rsc_0_3_i_s_raddr = {1'b0, butterFly2_3_tw_butterFly2_3_tw_and_nl};
  assign twiddle_rsc_0_3_i_s_din_mxwt = MUX_v_32_2_2(twiddle_rsc_0_3_i_s_din, twiddle_rsc_0_3_i_s_din_bfwt,
      twiddle_rsc_0_3_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_rsc_0_3_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_rsc_0_3_i_bcwt <= ~((~(twiddle_rsc_0_3_i_bcwt | twiddle_rsc_0_3_i_biwt))
          | twiddle_rsc_0_3_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_rsc_0_3_i_biwt ) begin
      twiddle_rsc_0_3_i_s_din_bfwt <= twiddle_rsc_0_3_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_3_i_twiddle_rsc_0_3_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_3_i_twiddle_rsc_0_3_wait_ctrl (
  core_wen, twiddle_rsc_0_3_i_oswt, twiddle_rsc_0_3_i_biwt, twiddle_rsc_0_3_i_bdwt,
      twiddle_rsc_0_3_i_bcwt, twiddle_rsc_0_3_i_s_re_core_sct, twiddle_rsc_0_3_i_s_rrdy
);
  input core_wen;
  input twiddle_rsc_0_3_i_oswt;
  output twiddle_rsc_0_3_i_biwt;
  output twiddle_rsc_0_3_i_bdwt;
  input twiddle_rsc_0_3_i_bcwt;
  output twiddle_rsc_0_3_i_s_re_core_sct;
  input twiddle_rsc_0_3_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_rsc_0_3_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_3_i_bdwt = twiddle_rsc_0_3_i_oswt & core_wen;
  assign twiddle_rsc_0_3_i_biwt = twiddle_rsc_0_3_i_ogwt & twiddle_rsc_0_3_i_s_rrdy;
  assign twiddle_rsc_0_3_i_ogwt = twiddle_rsc_0_3_i_oswt & (~ twiddle_rsc_0_3_i_bcwt);
  assign twiddle_rsc_0_3_i_s_re_core_sct = twiddle_rsc_0_3_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_2_i_twiddle_rsc_0_2_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_2_i_twiddle_rsc_0_2_wait_dp (
  clk, rst, twiddle_rsc_0_2_i_oswt, twiddle_rsc_0_2_i_wen_comp, twiddle_rsc_0_2_i_s_raddr_core,
      twiddle_rsc_0_2_i_s_din_mxwt, twiddle_rsc_0_2_i_biwt, twiddle_rsc_0_2_i_bdwt,
      twiddle_rsc_0_2_i_bcwt, twiddle_rsc_0_2_i_s_raddr, twiddle_rsc_0_2_i_s_raddr_core_sct,
      twiddle_rsc_0_2_i_s_din
);
  input clk;
  input rst;
  input twiddle_rsc_0_2_i_oswt;
  output twiddle_rsc_0_2_i_wen_comp;
  input [5:0] twiddle_rsc_0_2_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_2_i_s_din_mxwt;
  input twiddle_rsc_0_2_i_biwt;
  input twiddle_rsc_0_2_i_bdwt;
  output twiddle_rsc_0_2_i_bcwt;
  reg twiddle_rsc_0_2_i_bcwt;
  output [5:0] twiddle_rsc_0_2_i_s_raddr;
  input twiddle_rsc_0_2_i_s_raddr_core_sct;
  input [31:0] twiddle_rsc_0_2_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_rsc_0_2_i_s_din_bfwt;

  wire[4:0] butterFly2_2_tw_butterFly2_2_tw_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_2_i_wen_comp = (~ twiddle_rsc_0_2_i_oswt) | twiddle_rsc_0_2_i_biwt
      | twiddle_rsc_0_2_i_bcwt;
  assign butterFly2_2_tw_butterFly2_2_tw_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_rsc_0_2_i_s_raddr_core[4:0]),
      twiddle_rsc_0_2_i_s_raddr_core_sct);
  assign twiddle_rsc_0_2_i_s_raddr = {1'b0, butterFly2_2_tw_butterFly2_2_tw_and_nl};
  assign twiddle_rsc_0_2_i_s_din_mxwt = MUX_v_32_2_2(twiddle_rsc_0_2_i_s_din, twiddle_rsc_0_2_i_s_din_bfwt,
      twiddle_rsc_0_2_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_rsc_0_2_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_rsc_0_2_i_bcwt <= ~((~(twiddle_rsc_0_2_i_bcwt | twiddle_rsc_0_2_i_biwt))
          | twiddle_rsc_0_2_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_rsc_0_2_i_biwt ) begin
      twiddle_rsc_0_2_i_s_din_bfwt <= twiddle_rsc_0_2_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_2_i_twiddle_rsc_0_2_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_2_i_twiddle_rsc_0_2_wait_ctrl (
  core_wen, twiddle_rsc_0_2_i_oswt, twiddle_rsc_0_2_i_biwt, twiddle_rsc_0_2_i_bdwt,
      twiddle_rsc_0_2_i_bcwt, twiddle_rsc_0_2_i_s_re_core_sct, twiddle_rsc_0_2_i_s_rrdy
);
  input core_wen;
  input twiddle_rsc_0_2_i_oswt;
  output twiddle_rsc_0_2_i_biwt;
  output twiddle_rsc_0_2_i_bdwt;
  input twiddle_rsc_0_2_i_bcwt;
  output twiddle_rsc_0_2_i_s_re_core_sct;
  input twiddle_rsc_0_2_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_rsc_0_2_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_2_i_bdwt = twiddle_rsc_0_2_i_oswt & core_wen;
  assign twiddle_rsc_0_2_i_biwt = twiddle_rsc_0_2_i_ogwt & twiddle_rsc_0_2_i_s_rrdy;
  assign twiddle_rsc_0_2_i_ogwt = twiddle_rsc_0_2_i_oswt & (~ twiddle_rsc_0_2_i_bcwt);
  assign twiddle_rsc_0_2_i_s_re_core_sct = twiddle_rsc_0_2_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp (
  clk, rst, twiddle_rsc_0_1_i_oswt, twiddle_rsc_0_1_i_wen_comp, twiddle_rsc_0_1_i_s_raddr_core,
      twiddle_rsc_0_1_i_s_din_mxwt, twiddle_rsc_0_1_i_biwt, twiddle_rsc_0_1_i_bdwt,
      twiddle_rsc_0_1_i_bcwt, twiddle_rsc_0_1_i_s_raddr, twiddle_rsc_0_1_i_s_raddr_core_sct,
      twiddle_rsc_0_1_i_s_din
);
  input clk;
  input rst;
  input twiddle_rsc_0_1_i_oswt;
  output twiddle_rsc_0_1_i_wen_comp;
  input [5:0] twiddle_rsc_0_1_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_1_i_s_din_mxwt;
  input twiddle_rsc_0_1_i_biwt;
  input twiddle_rsc_0_1_i_bdwt;
  output twiddle_rsc_0_1_i_bcwt;
  reg twiddle_rsc_0_1_i_bcwt;
  output [5:0] twiddle_rsc_0_1_i_s_raddr;
  input twiddle_rsc_0_1_i_s_raddr_core_sct;
  input [31:0] twiddle_rsc_0_1_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_rsc_0_1_i_s_din_bfwt;

  wire[4:0] butterFly2_1_tw_butterFly2_1_tw_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_1_i_wen_comp = (~ twiddle_rsc_0_1_i_oswt) | twiddle_rsc_0_1_i_biwt
      | twiddle_rsc_0_1_i_bcwt;
  assign butterFly2_1_tw_butterFly2_1_tw_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_rsc_0_1_i_s_raddr_core[4:0]),
      twiddle_rsc_0_1_i_s_raddr_core_sct);
  assign twiddle_rsc_0_1_i_s_raddr = {1'b0, butterFly2_1_tw_butterFly2_1_tw_and_nl};
  assign twiddle_rsc_0_1_i_s_din_mxwt = MUX_v_32_2_2(twiddle_rsc_0_1_i_s_din, twiddle_rsc_0_1_i_s_din_bfwt,
      twiddle_rsc_0_1_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_rsc_0_1_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_rsc_0_1_i_bcwt <= ~((~(twiddle_rsc_0_1_i_bcwt | twiddle_rsc_0_1_i_biwt))
          | twiddle_rsc_0_1_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_rsc_0_1_i_biwt ) begin
      twiddle_rsc_0_1_i_s_din_bfwt <= twiddle_rsc_0_1_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_ctrl (
  core_wen, twiddle_rsc_0_1_i_oswt, twiddle_rsc_0_1_i_biwt, twiddle_rsc_0_1_i_bdwt,
      twiddle_rsc_0_1_i_bcwt, twiddle_rsc_0_1_i_s_re_core_sct, twiddle_rsc_0_1_i_s_rrdy
);
  input core_wen;
  input twiddle_rsc_0_1_i_oswt;
  output twiddle_rsc_0_1_i_biwt;
  output twiddle_rsc_0_1_i_bdwt;
  input twiddle_rsc_0_1_i_bcwt;
  output twiddle_rsc_0_1_i_s_re_core_sct;
  input twiddle_rsc_0_1_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_rsc_0_1_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_1_i_bdwt = twiddle_rsc_0_1_i_oswt & core_wen;
  assign twiddle_rsc_0_1_i_biwt = twiddle_rsc_0_1_i_ogwt & twiddle_rsc_0_1_i_s_rrdy;
  assign twiddle_rsc_0_1_i_ogwt = twiddle_rsc_0_1_i_oswt & (~ twiddle_rsc_0_1_i_bcwt);
  assign twiddle_rsc_0_1_i_s_re_core_sct = twiddle_rsc_0_1_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp (
  clk, rst, twiddle_rsc_0_0_i_oswt, twiddle_rsc_0_0_i_wen_comp, twiddle_rsc_0_0_i_s_raddr_core,
      twiddle_rsc_0_0_i_s_din_mxwt, twiddle_rsc_0_0_i_biwt, twiddle_rsc_0_0_i_bdwt,
      twiddle_rsc_0_0_i_bcwt, twiddle_rsc_0_0_i_s_raddr, twiddle_rsc_0_0_i_s_raddr_core_sct,
      twiddle_rsc_0_0_i_s_din
);
  input clk;
  input rst;
  input twiddle_rsc_0_0_i_oswt;
  output twiddle_rsc_0_0_i_wen_comp;
  input [5:0] twiddle_rsc_0_0_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_0_i_s_din_mxwt;
  input twiddle_rsc_0_0_i_biwt;
  input twiddle_rsc_0_0_i_bdwt;
  output twiddle_rsc_0_0_i_bcwt;
  reg twiddle_rsc_0_0_i_bcwt;
  output [5:0] twiddle_rsc_0_0_i_s_raddr;
  input twiddle_rsc_0_0_i_s_raddr_core_sct;
  input [31:0] twiddle_rsc_0_0_i_s_din;


  // Interconnect Declarations
  reg [31:0] twiddle_rsc_0_0_i_s_din_bfwt;

  wire[4:0] INNER_LOOP1_tw_INNER_LOOP1_tw_and_nl;

  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_0_i_wen_comp = (~ twiddle_rsc_0_0_i_oswt) | twiddle_rsc_0_0_i_biwt
      | twiddle_rsc_0_0_i_bcwt;
  assign INNER_LOOP1_tw_INNER_LOOP1_tw_and_nl = MUX_v_5_2_2(5'b00000, (twiddle_rsc_0_0_i_s_raddr_core[4:0]),
      twiddle_rsc_0_0_i_s_raddr_core_sct);
  assign twiddle_rsc_0_0_i_s_raddr = {1'b0, INNER_LOOP1_tw_INNER_LOOP1_tw_and_nl};
  assign twiddle_rsc_0_0_i_s_din_mxwt = MUX_v_32_2_2(twiddle_rsc_0_0_i_s_din, twiddle_rsc_0_0_i_s_din_bfwt,
      twiddle_rsc_0_0_i_bcwt);
  always @(posedge clk) begin
    if ( rst ) begin
      twiddle_rsc_0_0_i_bcwt <= 1'b0;
    end
    else begin
      twiddle_rsc_0_0_i_bcwt <= ~((~(twiddle_rsc_0_0_i_bcwt | twiddle_rsc_0_0_i_biwt))
          | twiddle_rsc_0_0_i_bdwt);
    end
  end
  always @(posedge clk) begin
    if ( twiddle_rsc_0_0_i_biwt ) begin
      twiddle_rsc_0_0_i_s_din_bfwt <= twiddle_rsc_0_0_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_ctrl (
  core_wen, twiddle_rsc_0_0_i_oswt, twiddle_rsc_0_0_i_biwt, twiddle_rsc_0_0_i_bdwt,
      twiddle_rsc_0_0_i_bcwt, twiddle_rsc_0_0_i_s_re_core_sct, twiddle_rsc_0_0_i_s_rrdy
);
  input core_wen;
  input twiddle_rsc_0_0_i_oswt;
  output twiddle_rsc_0_0_i_biwt;
  output twiddle_rsc_0_0_i_bdwt;
  input twiddle_rsc_0_0_i_bcwt;
  output twiddle_rsc_0_0_i_s_re_core_sct;
  input twiddle_rsc_0_0_i_s_rrdy;


  // Interconnect Declarations
  wire twiddle_rsc_0_0_i_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign twiddle_rsc_0_0_i_bdwt = twiddle_rsc_0_0_i_oswt & core_wen;
  assign twiddle_rsc_0_0_i_biwt = twiddle_rsc_0_0_i_ogwt & twiddle_rsc_0_0_i_s_rrdy;
  assign twiddle_rsc_0_0_i_ogwt = twiddle_rsc_0_0_i_oswt & (~ twiddle_rsc_0_0_i_bcwt);
  assign twiddle_rsc_0_0_i_s_re_core_sct = twiddle_rsc_0_0_i_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_31_i_xt_rsc_1_31_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_31_i_xt_rsc_1_31_wait_dp (
  clk, rst, xt_rsc_1_31_i_oswt, xt_rsc_1_31_i_wen_comp, xt_rsc_1_31_i_oswt_1, xt_rsc_1_31_i_wen_comp_1,
      xt_rsc_1_31_i_s_raddr_core, xt_rsc_1_31_i_s_waddr_core, xt_rsc_1_31_i_s_din_mxwt,
      xt_rsc_1_31_i_s_dout_core, xt_rsc_1_31_i_biwt, xt_rsc_1_31_i_bdwt, xt_rsc_1_31_i_bcwt,
      xt_rsc_1_31_i_biwt_1, xt_rsc_1_31_i_bdwt_2, xt_rsc_1_31_i_bcwt_1, xt_rsc_1_31_i_s_raddr,
      xt_rsc_1_31_i_s_raddr_core_sct, xt_rsc_1_31_i_s_waddr, xt_rsc_1_31_i_s_waddr_core_sct,
      xt_rsc_1_31_i_s_din, xt_rsc_1_31_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_31_i_oswt;
  output xt_rsc_1_31_i_wen_comp;
  input xt_rsc_1_31_i_oswt_1;
  output xt_rsc_1_31_i_wen_comp_1;
  input [3:0] xt_rsc_1_31_i_s_raddr_core;
  input [3:0] xt_rsc_1_31_i_s_waddr_core;
  output [31:0] xt_rsc_1_31_i_s_din_mxwt;
  input [31:0] xt_rsc_1_31_i_s_dout_core;
  input xt_rsc_1_31_i_biwt;
  input xt_rsc_1_31_i_bdwt;
  output xt_rsc_1_31_i_bcwt;
  reg xt_rsc_1_31_i_bcwt;
  input xt_rsc_1_31_i_biwt_1;
  input xt_rsc_1_31_i_bdwt_2;
  output xt_rsc_1_31_i_bcwt_1;
  reg xt_rsc_1_31_i_bcwt_1;
  output [3:0] xt_rsc_1_31_i_s_raddr;
  input xt_rsc_1_31_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_31_i_s_waddr;
  input xt_rsc_1_31_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_31_i_s_din;
  output [31:0] xt_rsc_1_31_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_31_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_31_i_wen_comp = (~ xt_rsc_1_31_i_oswt) | xt_rsc_1_31_i_biwt | xt_rsc_1_31_i_bcwt;
  assign xt_rsc_1_31_i_wen_comp_1 = (~ xt_rsc_1_31_i_oswt_1) | xt_rsc_1_31_i_biwt_1
      | xt_rsc_1_31_i_bcwt_1;
  assign xt_rsc_1_31_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_31_i_s_raddr_core,
      xt_rsc_1_31_i_s_raddr_core_sct);
  assign xt_rsc_1_31_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_31_i_s_waddr_core,
      xt_rsc_1_31_i_s_waddr_core_sct);
  assign xt_rsc_1_31_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_31_i_s_din, xt_rsc_1_31_i_s_din_bfwt,
      xt_rsc_1_31_i_bcwt);
  assign xt_rsc_1_31_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_31_i_s_dout_core, xt_rsc_1_31_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_31_i_bcwt <= 1'b0;
      xt_rsc_1_31_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_31_i_bcwt <= ~((~(xt_rsc_1_31_i_bcwt | xt_rsc_1_31_i_biwt)) | xt_rsc_1_31_i_bdwt);
      xt_rsc_1_31_i_bcwt_1 <= ~((~(xt_rsc_1_31_i_bcwt_1 | xt_rsc_1_31_i_biwt_1))
          | xt_rsc_1_31_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_31_i_biwt ) begin
      xt_rsc_1_31_i_s_din_bfwt <= xt_rsc_1_31_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_31_i_xt_rsc_1_31_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_31_i_xt_rsc_1_31_wait_ctrl (
  core_wen, xt_rsc_1_31_i_oswt, xt_rsc_1_31_i_oswt_1, xt_rsc_1_31_i_biwt, xt_rsc_1_31_i_bdwt,
      xt_rsc_1_31_i_bcwt, xt_rsc_1_31_i_s_re_core_sct, xt_rsc_1_31_i_biwt_1, xt_rsc_1_31_i_bdwt_2,
      xt_rsc_1_31_i_bcwt_1, xt_rsc_1_31_i_s_we_core_sct, xt_rsc_1_31_i_s_rrdy, xt_rsc_1_31_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_31_i_oswt;
  input xt_rsc_1_31_i_oswt_1;
  output xt_rsc_1_31_i_biwt;
  output xt_rsc_1_31_i_bdwt;
  input xt_rsc_1_31_i_bcwt;
  output xt_rsc_1_31_i_s_re_core_sct;
  output xt_rsc_1_31_i_biwt_1;
  output xt_rsc_1_31_i_bdwt_2;
  input xt_rsc_1_31_i_bcwt_1;
  output xt_rsc_1_31_i_s_we_core_sct;
  input xt_rsc_1_31_i_s_rrdy;
  input xt_rsc_1_31_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_31_i_ogwt;
  wire xt_rsc_1_31_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_31_i_bdwt = xt_rsc_1_31_i_oswt & core_wen;
  assign xt_rsc_1_31_i_biwt = xt_rsc_1_31_i_ogwt & xt_rsc_1_31_i_s_rrdy;
  assign xt_rsc_1_31_i_ogwt = xt_rsc_1_31_i_oswt & (~ xt_rsc_1_31_i_bcwt);
  assign xt_rsc_1_31_i_s_re_core_sct = xt_rsc_1_31_i_ogwt;
  assign xt_rsc_1_31_i_bdwt_2 = xt_rsc_1_31_i_oswt_1 & core_wen;
  assign xt_rsc_1_31_i_biwt_1 = xt_rsc_1_31_i_ogwt_1 & xt_rsc_1_31_i_s_wrdy;
  assign xt_rsc_1_31_i_ogwt_1 = xt_rsc_1_31_i_oswt_1 & (~ xt_rsc_1_31_i_bcwt_1);
  assign xt_rsc_1_31_i_s_we_core_sct = xt_rsc_1_31_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_30_i_xt_rsc_1_30_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_30_i_xt_rsc_1_30_wait_dp (
  clk, rst, xt_rsc_1_30_i_oswt, xt_rsc_1_30_i_wen_comp, xt_rsc_1_30_i_oswt_1, xt_rsc_1_30_i_wen_comp_1,
      xt_rsc_1_30_i_s_raddr_core, xt_rsc_1_30_i_s_waddr_core, xt_rsc_1_30_i_s_din_mxwt,
      xt_rsc_1_30_i_s_dout_core, xt_rsc_1_30_i_biwt, xt_rsc_1_30_i_bdwt, xt_rsc_1_30_i_bcwt,
      xt_rsc_1_30_i_biwt_1, xt_rsc_1_30_i_bdwt_2, xt_rsc_1_30_i_bcwt_1, xt_rsc_1_30_i_s_raddr,
      xt_rsc_1_30_i_s_raddr_core_sct, xt_rsc_1_30_i_s_waddr, xt_rsc_1_30_i_s_waddr_core_sct,
      xt_rsc_1_30_i_s_din, xt_rsc_1_30_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_30_i_oswt;
  output xt_rsc_1_30_i_wen_comp;
  input xt_rsc_1_30_i_oswt_1;
  output xt_rsc_1_30_i_wen_comp_1;
  input [3:0] xt_rsc_1_30_i_s_raddr_core;
  input [3:0] xt_rsc_1_30_i_s_waddr_core;
  output [31:0] xt_rsc_1_30_i_s_din_mxwt;
  input [31:0] xt_rsc_1_30_i_s_dout_core;
  input xt_rsc_1_30_i_biwt;
  input xt_rsc_1_30_i_bdwt;
  output xt_rsc_1_30_i_bcwt;
  reg xt_rsc_1_30_i_bcwt;
  input xt_rsc_1_30_i_biwt_1;
  input xt_rsc_1_30_i_bdwt_2;
  output xt_rsc_1_30_i_bcwt_1;
  reg xt_rsc_1_30_i_bcwt_1;
  output [3:0] xt_rsc_1_30_i_s_raddr;
  input xt_rsc_1_30_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_30_i_s_waddr;
  input xt_rsc_1_30_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_30_i_s_din;
  output [31:0] xt_rsc_1_30_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_30_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_30_i_wen_comp = (~ xt_rsc_1_30_i_oswt) | xt_rsc_1_30_i_biwt | xt_rsc_1_30_i_bcwt;
  assign xt_rsc_1_30_i_wen_comp_1 = (~ xt_rsc_1_30_i_oswt_1) | xt_rsc_1_30_i_biwt_1
      | xt_rsc_1_30_i_bcwt_1;
  assign xt_rsc_1_30_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_30_i_s_raddr_core,
      xt_rsc_1_30_i_s_raddr_core_sct);
  assign xt_rsc_1_30_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_30_i_s_waddr_core,
      xt_rsc_1_30_i_s_waddr_core_sct);
  assign xt_rsc_1_30_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_30_i_s_din, xt_rsc_1_30_i_s_din_bfwt,
      xt_rsc_1_30_i_bcwt);
  assign xt_rsc_1_30_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_30_i_s_dout_core, xt_rsc_1_30_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_30_i_bcwt <= 1'b0;
      xt_rsc_1_30_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_30_i_bcwt <= ~((~(xt_rsc_1_30_i_bcwt | xt_rsc_1_30_i_biwt)) | xt_rsc_1_30_i_bdwt);
      xt_rsc_1_30_i_bcwt_1 <= ~((~(xt_rsc_1_30_i_bcwt_1 | xt_rsc_1_30_i_biwt_1))
          | xt_rsc_1_30_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_30_i_biwt ) begin
      xt_rsc_1_30_i_s_din_bfwt <= xt_rsc_1_30_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_30_i_xt_rsc_1_30_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_30_i_xt_rsc_1_30_wait_ctrl (
  core_wen, xt_rsc_1_30_i_oswt, xt_rsc_1_30_i_oswt_1, xt_rsc_1_30_i_biwt, xt_rsc_1_30_i_bdwt,
      xt_rsc_1_30_i_bcwt, xt_rsc_1_30_i_s_re_core_sct, xt_rsc_1_30_i_biwt_1, xt_rsc_1_30_i_bdwt_2,
      xt_rsc_1_30_i_bcwt_1, xt_rsc_1_30_i_s_we_core_sct, xt_rsc_1_30_i_s_rrdy, xt_rsc_1_30_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_30_i_oswt;
  input xt_rsc_1_30_i_oswt_1;
  output xt_rsc_1_30_i_biwt;
  output xt_rsc_1_30_i_bdwt;
  input xt_rsc_1_30_i_bcwt;
  output xt_rsc_1_30_i_s_re_core_sct;
  output xt_rsc_1_30_i_biwt_1;
  output xt_rsc_1_30_i_bdwt_2;
  input xt_rsc_1_30_i_bcwt_1;
  output xt_rsc_1_30_i_s_we_core_sct;
  input xt_rsc_1_30_i_s_rrdy;
  input xt_rsc_1_30_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_30_i_ogwt;
  wire xt_rsc_1_30_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_30_i_bdwt = xt_rsc_1_30_i_oswt & core_wen;
  assign xt_rsc_1_30_i_biwt = xt_rsc_1_30_i_ogwt & xt_rsc_1_30_i_s_rrdy;
  assign xt_rsc_1_30_i_ogwt = xt_rsc_1_30_i_oswt & (~ xt_rsc_1_30_i_bcwt);
  assign xt_rsc_1_30_i_s_re_core_sct = xt_rsc_1_30_i_ogwt;
  assign xt_rsc_1_30_i_bdwt_2 = xt_rsc_1_30_i_oswt_1 & core_wen;
  assign xt_rsc_1_30_i_biwt_1 = xt_rsc_1_30_i_ogwt_1 & xt_rsc_1_30_i_s_wrdy;
  assign xt_rsc_1_30_i_ogwt_1 = xt_rsc_1_30_i_oswt_1 & (~ xt_rsc_1_30_i_bcwt_1);
  assign xt_rsc_1_30_i_s_we_core_sct = xt_rsc_1_30_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_29_i_xt_rsc_1_29_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_29_i_xt_rsc_1_29_wait_dp (
  clk, rst, xt_rsc_1_29_i_oswt, xt_rsc_1_29_i_wen_comp, xt_rsc_1_29_i_oswt_1, xt_rsc_1_29_i_wen_comp_1,
      xt_rsc_1_29_i_s_raddr_core, xt_rsc_1_29_i_s_waddr_core, xt_rsc_1_29_i_s_din_mxwt,
      xt_rsc_1_29_i_s_dout_core, xt_rsc_1_29_i_biwt, xt_rsc_1_29_i_bdwt, xt_rsc_1_29_i_bcwt,
      xt_rsc_1_29_i_biwt_1, xt_rsc_1_29_i_bdwt_2, xt_rsc_1_29_i_bcwt_1, xt_rsc_1_29_i_s_raddr,
      xt_rsc_1_29_i_s_raddr_core_sct, xt_rsc_1_29_i_s_waddr, xt_rsc_1_29_i_s_waddr_core_sct,
      xt_rsc_1_29_i_s_din, xt_rsc_1_29_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_29_i_oswt;
  output xt_rsc_1_29_i_wen_comp;
  input xt_rsc_1_29_i_oswt_1;
  output xt_rsc_1_29_i_wen_comp_1;
  input [3:0] xt_rsc_1_29_i_s_raddr_core;
  input [3:0] xt_rsc_1_29_i_s_waddr_core;
  output [31:0] xt_rsc_1_29_i_s_din_mxwt;
  input [31:0] xt_rsc_1_29_i_s_dout_core;
  input xt_rsc_1_29_i_biwt;
  input xt_rsc_1_29_i_bdwt;
  output xt_rsc_1_29_i_bcwt;
  reg xt_rsc_1_29_i_bcwt;
  input xt_rsc_1_29_i_biwt_1;
  input xt_rsc_1_29_i_bdwt_2;
  output xt_rsc_1_29_i_bcwt_1;
  reg xt_rsc_1_29_i_bcwt_1;
  output [3:0] xt_rsc_1_29_i_s_raddr;
  input xt_rsc_1_29_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_29_i_s_waddr;
  input xt_rsc_1_29_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_29_i_s_din;
  output [31:0] xt_rsc_1_29_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_29_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_29_i_wen_comp = (~ xt_rsc_1_29_i_oswt) | xt_rsc_1_29_i_biwt | xt_rsc_1_29_i_bcwt;
  assign xt_rsc_1_29_i_wen_comp_1 = (~ xt_rsc_1_29_i_oswt_1) | xt_rsc_1_29_i_biwt_1
      | xt_rsc_1_29_i_bcwt_1;
  assign xt_rsc_1_29_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_29_i_s_raddr_core,
      xt_rsc_1_29_i_s_raddr_core_sct);
  assign xt_rsc_1_29_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_29_i_s_waddr_core,
      xt_rsc_1_29_i_s_waddr_core_sct);
  assign xt_rsc_1_29_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_29_i_s_din, xt_rsc_1_29_i_s_din_bfwt,
      xt_rsc_1_29_i_bcwt);
  assign xt_rsc_1_29_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_29_i_s_dout_core, xt_rsc_1_29_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_29_i_bcwt <= 1'b0;
      xt_rsc_1_29_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_29_i_bcwt <= ~((~(xt_rsc_1_29_i_bcwt | xt_rsc_1_29_i_biwt)) | xt_rsc_1_29_i_bdwt);
      xt_rsc_1_29_i_bcwt_1 <= ~((~(xt_rsc_1_29_i_bcwt_1 | xt_rsc_1_29_i_biwt_1))
          | xt_rsc_1_29_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_29_i_biwt ) begin
      xt_rsc_1_29_i_s_din_bfwt <= xt_rsc_1_29_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_29_i_xt_rsc_1_29_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_29_i_xt_rsc_1_29_wait_ctrl (
  core_wen, xt_rsc_1_29_i_oswt, xt_rsc_1_29_i_oswt_1, xt_rsc_1_29_i_biwt, xt_rsc_1_29_i_bdwt,
      xt_rsc_1_29_i_bcwt, xt_rsc_1_29_i_s_re_core_sct, xt_rsc_1_29_i_biwt_1, xt_rsc_1_29_i_bdwt_2,
      xt_rsc_1_29_i_bcwt_1, xt_rsc_1_29_i_s_we_core_sct, xt_rsc_1_29_i_s_rrdy, xt_rsc_1_29_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_29_i_oswt;
  input xt_rsc_1_29_i_oswt_1;
  output xt_rsc_1_29_i_biwt;
  output xt_rsc_1_29_i_bdwt;
  input xt_rsc_1_29_i_bcwt;
  output xt_rsc_1_29_i_s_re_core_sct;
  output xt_rsc_1_29_i_biwt_1;
  output xt_rsc_1_29_i_bdwt_2;
  input xt_rsc_1_29_i_bcwt_1;
  output xt_rsc_1_29_i_s_we_core_sct;
  input xt_rsc_1_29_i_s_rrdy;
  input xt_rsc_1_29_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_29_i_ogwt;
  wire xt_rsc_1_29_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_29_i_bdwt = xt_rsc_1_29_i_oswt & core_wen;
  assign xt_rsc_1_29_i_biwt = xt_rsc_1_29_i_ogwt & xt_rsc_1_29_i_s_rrdy;
  assign xt_rsc_1_29_i_ogwt = xt_rsc_1_29_i_oswt & (~ xt_rsc_1_29_i_bcwt);
  assign xt_rsc_1_29_i_s_re_core_sct = xt_rsc_1_29_i_ogwt;
  assign xt_rsc_1_29_i_bdwt_2 = xt_rsc_1_29_i_oswt_1 & core_wen;
  assign xt_rsc_1_29_i_biwt_1 = xt_rsc_1_29_i_ogwt_1 & xt_rsc_1_29_i_s_wrdy;
  assign xt_rsc_1_29_i_ogwt_1 = xt_rsc_1_29_i_oswt_1 & (~ xt_rsc_1_29_i_bcwt_1);
  assign xt_rsc_1_29_i_s_we_core_sct = xt_rsc_1_29_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_28_i_xt_rsc_1_28_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_28_i_xt_rsc_1_28_wait_dp (
  clk, rst, xt_rsc_1_28_i_oswt, xt_rsc_1_28_i_wen_comp, xt_rsc_1_28_i_oswt_1, xt_rsc_1_28_i_wen_comp_1,
      xt_rsc_1_28_i_s_raddr_core, xt_rsc_1_28_i_s_waddr_core, xt_rsc_1_28_i_s_din_mxwt,
      xt_rsc_1_28_i_s_dout_core, xt_rsc_1_28_i_biwt, xt_rsc_1_28_i_bdwt, xt_rsc_1_28_i_bcwt,
      xt_rsc_1_28_i_biwt_1, xt_rsc_1_28_i_bdwt_2, xt_rsc_1_28_i_bcwt_1, xt_rsc_1_28_i_s_raddr,
      xt_rsc_1_28_i_s_raddr_core_sct, xt_rsc_1_28_i_s_waddr, xt_rsc_1_28_i_s_waddr_core_sct,
      xt_rsc_1_28_i_s_din, xt_rsc_1_28_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_28_i_oswt;
  output xt_rsc_1_28_i_wen_comp;
  input xt_rsc_1_28_i_oswt_1;
  output xt_rsc_1_28_i_wen_comp_1;
  input [3:0] xt_rsc_1_28_i_s_raddr_core;
  input [3:0] xt_rsc_1_28_i_s_waddr_core;
  output [31:0] xt_rsc_1_28_i_s_din_mxwt;
  input [31:0] xt_rsc_1_28_i_s_dout_core;
  input xt_rsc_1_28_i_biwt;
  input xt_rsc_1_28_i_bdwt;
  output xt_rsc_1_28_i_bcwt;
  reg xt_rsc_1_28_i_bcwt;
  input xt_rsc_1_28_i_biwt_1;
  input xt_rsc_1_28_i_bdwt_2;
  output xt_rsc_1_28_i_bcwt_1;
  reg xt_rsc_1_28_i_bcwt_1;
  output [3:0] xt_rsc_1_28_i_s_raddr;
  input xt_rsc_1_28_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_28_i_s_waddr;
  input xt_rsc_1_28_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_28_i_s_din;
  output [31:0] xt_rsc_1_28_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_28_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_28_i_wen_comp = (~ xt_rsc_1_28_i_oswt) | xt_rsc_1_28_i_biwt | xt_rsc_1_28_i_bcwt;
  assign xt_rsc_1_28_i_wen_comp_1 = (~ xt_rsc_1_28_i_oswt_1) | xt_rsc_1_28_i_biwt_1
      | xt_rsc_1_28_i_bcwt_1;
  assign xt_rsc_1_28_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_28_i_s_raddr_core,
      xt_rsc_1_28_i_s_raddr_core_sct);
  assign xt_rsc_1_28_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_28_i_s_waddr_core,
      xt_rsc_1_28_i_s_waddr_core_sct);
  assign xt_rsc_1_28_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_28_i_s_din, xt_rsc_1_28_i_s_din_bfwt,
      xt_rsc_1_28_i_bcwt);
  assign xt_rsc_1_28_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_28_i_s_dout_core, xt_rsc_1_28_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_28_i_bcwt <= 1'b0;
      xt_rsc_1_28_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_28_i_bcwt <= ~((~(xt_rsc_1_28_i_bcwt | xt_rsc_1_28_i_biwt)) | xt_rsc_1_28_i_bdwt);
      xt_rsc_1_28_i_bcwt_1 <= ~((~(xt_rsc_1_28_i_bcwt_1 | xt_rsc_1_28_i_biwt_1))
          | xt_rsc_1_28_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_28_i_biwt ) begin
      xt_rsc_1_28_i_s_din_bfwt <= xt_rsc_1_28_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_28_i_xt_rsc_1_28_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_28_i_xt_rsc_1_28_wait_ctrl (
  core_wen, xt_rsc_1_28_i_oswt, xt_rsc_1_28_i_oswt_1, xt_rsc_1_28_i_biwt, xt_rsc_1_28_i_bdwt,
      xt_rsc_1_28_i_bcwt, xt_rsc_1_28_i_s_re_core_sct, xt_rsc_1_28_i_biwt_1, xt_rsc_1_28_i_bdwt_2,
      xt_rsc_1_28_i_bcwt_1, xt_rsc_1_28_i_s_we_core_sct, xt_rsc_1_28_i_s_rrdy, xt_rsc_1_28_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_28_i_oswt;
  input xt_rsc_1_28_i_oswt_1;
  output xt_rsc_1_28_i_biwt;
  output xt_rsc_1_28_i_bdwt;
  input xt_rsc_1_28_i_bcwt;
  output xt_rsc_1_28_i_s_re_core_sct;
  output xt_rsc_1_28_i_biwt_1;
  output xt_rsc_1_28_i_bdwt_2;
  input xt_rsc_1_28_i_bcwt_1;
  output xt_rsc_1_28_i_s_we_core_sct;
  input xt_rsc_1_28_i_s_rrdy;
  input xt_rsc_1_28_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_28_i_ogwt;
  wire xt_rsc_1_28_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_28_i_bdwt = xt_rsc_1_28_i_oswt & core_wen;
  assign xt_rsc_1_28_i_biwt = xt_rsc_1_28_i_ogwt & xt_rsc_1_28_i_s_rrdy;
  assign xt_rsc_1_28_i_ogwt = xt_rsc_1_28_i_oswt & (~ xt_rsc_1_28_i_bcwt);
  assign xt_rsc_1_28_i_s_re_core_sct = xt_rsc_1_28_i_ogwt;
  assign xt_rsc_1_28_i_bdwt_2 = xt_rsc_1_28_i_oswt_1 & core_wen;
  assign xt_rsc_1_28_i_biwt_1 = xt_rsc_1_28_i_ogwt_1 & xt_rsc_1_28_i_s_wrdy;
  assign xt_rsc_1_28_i_ogwt_1 = xt_rsc_1_28_i_oswt_1 & (~ xt_rsc_1_28_i_bcwt_1);
  assign xt_rsc_1_28_i_s_we_core_sct = xt_rsc_1_28_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_27_i_xt_rsc_1_27_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_27_i_xt_rsc_1_27_wait_dp (
  clk, rst, xt_rsc_1_27_i_oswt, xt_rsc_1_27_i_wen_comp, xt_rsc_1_27_i_oswt_1, xt_rsc_1_27_i_wen_comp_1,
      xt_rsc_1_27_i_s_raddr_core, xt_rsc_1_27_i_s_waddr_core, xt_rsc_1_27_i_s_din_mxwt,
      xt_rsc_1_27_i_s_dout_core, xt_rsc_1_27_i_biwt, xt_rsc_1_27_i_bdwt, xt_rsc_1_27_i_bcwt,
      xt_rsc_1_27_i_biwt_1, xt_rsc_1_27_i_bdwt_2, xt_rsc_1_27_i_bcwt_1, xt_rsc_1_27_i_s_raddr,
      xt_rsc_1_27_i_s_raddr_core_sct, xt_rsc_1_27_i_s_waddr, xt_rsc_1_27_i_s_waddr_core_sct,
      xt_rsc_1_27_i_s_din, xt_rsc_1_27_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_27_i_oswt;
  output xt_rsc_1_27_i_wen_comp;
  input xt_rsc_1_27_i_oswt_1;
  output xt_rsc_1_27_i_wen_comp_1;
  input [3:0] xt_rsc_1_27_i_s_raddr_core;
  input [3:0] xt_rsc_1_27_i_s_waddr_core;
  output [31:0] xt_rsc_1_27_i_s_din_mxwt;
  input [31:0] xt_rsc_1_27_i_s_dout_core;
  input xt_rsc_1_27_i_biwt;
  input xt_rsc_1_27_i_bdwt;
  output xt_rsc_1_27_i_bcwt;
  reg xt_rsc_1_27_i_bcwt;
  input xt_rsc_1_27_i_biwt_1;
  input xt_rsc_1_27_i_bdwt_2;
  output xt_rsc_1_27_i_bcwt_1;
  reg xt_rsc_1_27_i_bcwt_1;
  output [3:0] xt_rsc_1_27_i_s_raddr;
  input xt_rsc_1_27_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_27_i_s_waddr;
  input xt_rsc_1_27_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_27_i_s_din;
  output [31:0] xt_rsc_1_27_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_27_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_27_i_wen_comp = (~ xt_rsc_1_27_i_oswt) | xt_rsc_1_27_i_biwt | xt_rsc_1_27_i_bcwt;
  assign xt_rsc_1_27_i_wen_comp_1 = (~ xt_rsc_1_27_i_oswt_1) | xt_rsc_1_27_i_biwt_1
      | xt_rsc_1_27_i_bcwt_1;
  assign xt_rsc_1_27_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_27_i_s_raddr_core,
      xt_rsc_1_27_i_s_raddr_core_sct);
  assign xt_rsc_1_27_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_27_i_s_waddr_core,
      xt_rsc_1_27_i_s_waddr_core_sct);
  assign xt_rsc_1_27_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_27_i_s_din, xt_rsc_1_27_i_s_din_bfwt,
      xt_rsc_1_27_i_bcwt);
  assign xt_rsc_1_27_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_27_i_s_dout_core, xt_rsc_1_27_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_27_i_bcwt <= 1'b0;
      xt_rsc_1_27_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_27_i_bcwt <= ~((~(xt_rsc_1_27_i_bcwt | xt_rsc_1_27_i_biwt)) | xt_rsc_1_27_i_bdwt);
      xt_rsc_1_27_i_bcwt_1 <= ~((~(xt_rsc_1_27_i_bcwt_1 | xt_rsc_1_27_i_biwt_1))
          | xt_rsc_1_27_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_27_i_biwt ) begin
      xt_rsc_1_27_i_s_din_bfwt <= xt_rsc_1_27_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_27_i_xt_rsc_1_27_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_27_i_xt_rsc_1_27_wait_ctrl (
  core_wen, xt_rsc_1_27_i_oswt, xt_rsc_1_27_i_oswt_1, xt_rsc_1_27_i_biwt, xt_rsc_1_27_i_bdwt,
      xt_rsc_1_27_i_bcwt, xt_rsc_1_27_i_s_re_core_sct, xt_rsc_1_27_i_biwt_1, xt_rsc_1_27_i_bdwt_2,
      xt_rsc_1_27_i_bcwt_1, xt_rsc_1_27_i_s_we_core_sct, xt_rsc_1_27_i_s_rrdy, xt_rsc_1_27_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_27_i_oswt;
  input xt_rsc_1_27_i_oswt_1;
  output xt_rsc_1_27_i_biwt;
  output xt_rsc_1_27_i_bdwt;
  input xt_rsc_1_27_i_bcwt;
  output xt_rsc_1_27_i_s_re_core_sct;
  output xt_rsc_1_27_i_biwt_1;
  output xt_rsc_1_27_i_bdwt_2;
  input xt_rsc_1_27_i_bcwt_1;
  output xt_rsc_1_27_i_s_we_core_sct;
  input xt_rsc_1_27_i_s_rrdy;
  input xt_rsc_1_27_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_27_i_ogwt;
  wire xt_rsc_1_27_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_27_i_bdwt = xt_rsc_1_27_i_oswt & core_wen;
  assign xt_rsc_1_27_i_biwt = xt_rsc_1_27_i_ogwt & xt_rsc_1_27_i_s_rrdy;
  assign xt_rsc_1_27_i_ogwt = xt_rsc_1_27_i_oswt & (~ xt_rsc_1_27_i_bcwt);
  assign xt_rsc_1_27_i_s_re_core_sct = xt_rsc_1_27_i_ogwt;
  assign xt_rsc_1_27_i_bdwt_2 = xt_rsc_1_27_i_oswt_1 & core_wen;
  assign xt_rsc_1_27_i_biwt_1 = xt_rsc_1_27_i_ogwt_1 & xt_rsc_1_27_i_s_wrdy;
  assign xt_rsc_1_27_i_ogwt_1 = xt_rsc_1_27_i_oswt_1 & (~ xt_rsc_1_27_i_bcwt_1);
  assign xt_rsc_1_27_i_s_we_core_sct = xt_rsc_1_27_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_26_i_xt_rsc_1_26_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_26_i_xt_rsc_1_26_wait_dp (
  clk, rst, xt_rsc_1_26_i_oswt, xt_rsc_1_26_i_wen_comp, xt_rsc_1_26_i_oswt_1, xt_rsc_1_26_i_wen_comp_1,
      xt_rsc_1_26_i_s_raddr_core, xt_rsc_1_26_i_s_waddr_core, xt_rsc_1_26_i_s_din_mxwt,
      xt_rsc_1_26_i_s_dout_core, xt_rsc_1_26_i_biwt, xt_rsc_1_26_i_bdwt, xt_rsc_1_26_i_bcwt,
      xt_rsc_1_26_i_biwt_1, xt_rsc_1_26_i_bdwt_2, xt_rsc_1_26_i_bcwt_1, xt_rsc_1_26_i_s_raddr,
      xt_rsc_1_26_i_s_raddr_core_sct, xt_rsc_1_26_i_s_waddr, xt_rsc_1_26_i_s_waddr_core_sct,
      xt_rsc_1_26_i_s_din, xt_rsc_1_26_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_26_i_oswt;
  output xt_rsc_1_26_i_wen_comp;
  input xt_rsc_1_26_i_oswt_1;
  output xt_rsc_1_26_i_wen_comp_1;
  input [3:0] xt_rsc_1_26_i_s_raddr_core;
  input [3:0] xt_rsc_1_26_i_s_waddr_core;
  output [31:0] xt_rsc_1_26_i_s_din_mxwt;
  input [31:0] xt_rsc_1_26_i_s_dout_core;
  input xt_rsc_1_26_i_biwt;
  input xt_rsc_1_26_i_bdwt;
  output xt_rsc_1_26_i_bcwt;
  reg xt_rsc_1_26_i_bcwt;
  input xt_rsc_1_26_i_biwt_1;
  input xt_rsc_1_26_i_bdwt_2;
  output xt_rsc_1_26_i_bcwt_1;
  reg xt_rsc_1_26_i_bcwt_1;
  output [3:0] xt_rsc_1_26_i_s_raddr;
  input xt_rsc_1_26_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_26_i_s_waddr;
  input xt_rsc_1_26_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_26_i_s_din;
  output [31:0] xt_rsc_1_26_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_26_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_26_i_wen_comp = (~ xt_rsc_1_26_i_oswt) | xt_rsc_1_26_i_biwt | xt_rsc_1_26_i_bcwt;
  assign xt_rsc_1_26_i_wen_comp_1 = (~ xt_rsc_1_26_i_oswt_1) | xt_rsc_1_26_i_biwt_1
      | xt_rsc_1_26_i_bcwt_1;
  assign xt_rsc_1_26_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_26_i_s_raddr_core,
      xt_rsc_1_26_i_s_raddr_core_sct);
  assign xt_rsc_1_26_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_26_i_s_waddr_core,
      xt_rsc_1_26_i_s_waddr_core_sct);
  assign xt_rsc_1_26_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_26_i_s_din, xt_rsc_1_26_i_s_din_bfwt,
      xt_rsc_1_26_i_bcwt);
  assign xt_rsc_1_26_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_26_i_s_dout_core, xt_rsc_1_26_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_26_i_bcwt <= 1'b0;
      xt_rsc_1_26_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_26_i_bcwt <= ~((~(xt_rsc_1_26_i_bcwt | xt_rsc_1_26_i_biwt)) | xt_rsc_1_26_i_bdwt);
      xt_rsc_1_26_i_bcwt_1 <= ~((~(xt_rsc_1_26_i_bcwt_1 | xt_rsc_1_26_i_biwt_1))
          | xt_rsc_1_26_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_26_i_biwt ) begin
      xt_rsc_1_26_i_s_din_bfwt <= xt_rsc_1_26_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_26_i_xt_rsc_1_26_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_26_i_xt_rsc_1_26_wait_ctrl (
  core_wen, xt_rsc_1_26_i_oswt, xt_rsc_1_26_i_oswt_1, xt_rsc_1_26_i_biwt, xt_rsc_1_26_i_bdwt,
      xt_rsc_1_26_i_bcwt, xt_rsc_1_26_i_s_re_core_sct, xt_rsc_1_26_i_biwt_1, xt_rsc_1_26_i_bdwt_2,
      xt_rsc_1_26_i_bcwt_1, xt_rsc_1_26_i_s_we_core_sct, xt_rsc_1_26_i_s_rrdy, xt_rsc_1_26_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_26_i_oswt;
  input xt_rsc_1_26_i_oswt_1;
  output xt_rsc_1_26_i_biwt;
  output xt_rsc_1_26_i_bdwt;
  input xt_rsc_1_26_i_bcwt;
  output xt_rsc_1_26_i_s_re_core_sct;
  output xt_rsc_1_26_i_biwt_1;
  output xt_rsc_1_26_i_bdwt_2;
  input xt_rsc_1_26_i_bcwt_1;
  output xt_rsc_1_26_i_s_we_core_sct;
  input xt_rsc_1_26_i_s_rrdy;
  input xt_rsc_1_26_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_26_i_ogwt;
  wire xt_rsc_1_26_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_26_i_bdwt = xt_rsc_1_26_i_oswt & core_wen;
  assign xt_rsc_1_26_i_biwt = xt_rsc_1_26_i_ogwt & xt_rsc_1_26_i_s_rrdy;
  assign xt_rsc_1_26_i_ogwt = xt_rsc_1_26_i_oswt & (~ xt_rsc_1_26_i_bcwt);
  assign xt_rsc_1_26_i_s_re_core_sct = xt_rsc_1_26_i_ogwt;
  assign xt_rsc_1_26_i_bdwt_2 = xt_rsc_1_26_i_oswt_1 & core_wen;
  assign xt_rsc_1_26_i_biwt_1 = xt_rsc_1_26_i_ogwt_1 & xt_rsc_1_26_i_s_wrdy;
  assign xt_rsc_1_26_i_ogwt_1 = xt_rsc_1_26_i_oswt_1 & (~ xt_rsc_1_26_i_bcwt_1);
  assign xt_rsc_1_26_i_s_we_core_sct = xt_rsc_1_26_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_25_i_xt_rsc_1_25_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_25_i_xt_rsc_1_25_wait_dp (
  clk, rst, xt_rsc_1_25_i_oswt, xt_rsc_1_25_i_wen_comp, xt_rsc_1_25_i_oswt_1, xt_rsc_1_25_i_wen_comp_1,
      xt_rsc_1_25_i_s_raddr_core, xt_rsc_1_25_i_s_waddr_core, xt_rsc_1_25_i_s_din_mxwt,
      xt_rsc_1_25_i_s_dout_core, xt_rsc_1_25_i_biwt, xt_rsc_1_25_i_bdwt, xt_rsc_1_25_i_bcwt,
      xt_rsc_1_25_i_biwt_1, xt_rsc_1_25_i_bdwt_2, xt_rsc_1_25_i_bcwt_1, xt_rsc_1_25_i_s_raddr,
      xt_rsc_1_25_i_s_raddr_core_sct, xt_rsc_1_25_i_s_waddr, xt_rsc_1_25_i_s_waddr_core_sct,
      xt_rsc_1_25_i_s_din, xt_rsc_1_25_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_25_i_oswt;
  output xt_rsc_1_25_i_wen_comp;
  input xt_rsc_1_25_i_oswt_1;
  output xt_rsc_1_25_i_wen_comp_1;
  input [3:0] xt_rsc_1_25_i_s_raddr_core;
  input [3:0] xt_rsc_1_25_i_s_waddr_core;
  output [31:0] xt_rsc_1_25_i_s_din_mxwt;
  input [31:0] xt_rsc_1_25_i_s_dout_core;
  input xt_rsc_1_25_i_biwt;
  input xt_rsc_1_25_i_bdwt;
  output xt_rsc_1_25_i_bcwt;
  reg xt_rsc_1_25_i_bcwt;
  input xt_rsc_1_25_i_biwt_1;
  input xt_rsc_1_25_i_bdwt_2;
  output xt_rsc_1_25_i_bcwt_1;
  reg xt_rsc_1_25_i_bcwt_1;
  output [3:0] xt_rsc_1_25_i_s_raddr;
  input xt_rsc_1_25_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_25_i_s_waddr;
  input xt_rsc_1_25_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_25_i_s_din;
  output [31:0] xt_rsc_1_25_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_25_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_25_i_wen_comp = (~ xt_rsc_1_25_i_oswt) | xt_rsc_1_25_i_biwt | xt_rsc_1_25_i_bcwt;
  assign xt_rsc_1_25_i_wen_comp_1 = (~ xt_rsc_1_25_i_oswt_1) | xt_rsc_1_25_i_biwt_1
      | xt_rsc_1_25_i_bcwt_1;
  assign xt_rsc_1_25_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_25_i_s_raddr_core,
      xt_rsc_1_25_i_s_raddr_core_sct);
  assign xt_rsc_1_25_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_25_i_s_waddr_core,
      xt_rsc_1_25_i_s_waddr_core_sct);
  assign xt_rsc_1_25_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_25_i_s_din, xt_rsc_1_25_i_s_din_bfwt,
      xt_rsc_1_25_i_bcwt);
  assign xt_rsc_1_25_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_25_i_s_dout_core, xt_rsc_1_25_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_25_i_bcwt <= 1'b0;
      xt_rsc_1_25_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_25_i_bcwt <= ~((~(xt_rsc_1_25_i_bcwt | xt_rsc_1_25_i_biwt)) | xt_rsc_1_25_i_bdwt);
      xt_rsc_1_25_i_bcwt_1 <= ~((~(xt_rsc_1_25_i_bcwt_1 | xt_rsc_1_25_i_biwt_1))
          | xt_rsc_1_25_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_25_i_biwt ) begin
      xt_rsc_1_25_i_s_din_bfwt <= xt_rsc_1_25_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_25_i_xt_rsc_1_25_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_25_i_xt_rsc_1_25_wait_ctrl (
  core_wen, xt_rsc_1_25_i_oswt, xt_rsc_1_25_i_oswt_1, xt_rsc_1_25_i_biwt, xt_rsc_1_25_i_bdwt,
      xt_rsc_1_25_i_bcwt, xt_rsc_1_25_i_s_re_core_sct, xt_rsc_1_25_i_biwt_1, xt_rsc_1_25_i_bdwt_2,
      xt_rsc_1_25_i_bcwt_1, xt_rsc_1_25_i_s_we_core_sct, xt_rsc_1_25_i_s_rrdy, xt_rsc_1_25_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_25_i_oswt;
  input xt_rsc_1_25_i_oswt_1;
  output xt_rsc_1_25_i_biwt;
  output xt_rsc_1_25_i_bdwt;
  input xt_rsc_1_25_i_bcwt;
  output xt_rsc_1_25_i_s_re_core_sct;
  output xt_rsc_1_25_i_biwt_1;
  output xt_rsc_1_25_i_bdwt_2;
  input xt_rsc_1_25_i_bcwt_1;
  output xt_rsc_1_25_i_s_we_core_sct;
  input xt_rsc_1_25_i_s_rrdy;
  input xt_rsc_1_25_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_25_i_ogwt;
  wire xt_rsc_1_25_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_25_i_bdwt = xt_rsc_1_25_i_oswt & core_wen;
  assign xt_rsc_1_25_i_biwt = xt_rsc_1_25_i_ogwt & xt_rsc_1_25_i_s_rrdy;
  assign xt_rsc_1_25_i_ogwt = xt_rsc_1_25_i_oswt & (~ xt_rsc_1_25_i_bcwt);
  assign xt_rsc_1_25_i_s_re_core_sct = xt_rsc_1_25_i_ogwt;
  assign xt_rsc_1_25_i_bdwt_2 = xt_rsc_1_25_i_oswt_1 & core_wen;
  assign xt_rsc_1_25_i_biwt_1 = xt_rsc_1_25_i_ogwt_1 & xt_rsc_1_25_i_s_wrdy;
  assign xt_rsc_1_25_i_ogwt_1 = xt_rsc_1_25_i_oswt_1 & (~ xt_rsc_1_25_i_bcwt_1);
  assign xt_rsc_1_25_i_s_we_core_sct = xt_rsc_1_25_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_24_i_xt_rsc_1_24_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_24_i_xt_rsc_1_24_wait_dp (
  clk, rst, xt_rsc_1_24_i_oswt, xt_rsc_1_24_i_wen_comp, xt_rsc_1_24_i_oswt_1, xt_rsc_1_24_i_wen_comp_1,
      xt_rsc_1_24_i_s_raddr_core, xt_rsc_1_24_i_s_waddr_core, xt_rsc_1_24_i_s_din_mxwt,
      xt_rsc_1_24_i_s_dout_core, xt_rsc_1_24_i_biwt, xt_rsc_1_24_i_bdwt, xt_rsc_1_24_i_bcwt,
      xt_rsc_1_24_i_biwt_1, xt_rsc_1_24_i_bdwt_2, xt_rsc_1_24_i_bcwt_1, xt_rsc_1_24_i_s_raddr,
      xt_rsc_1_24_i_s_raddr_core_sct, xt_rsc_1_24_i_s_waddr, xt_rsc_1_24_i_s_waddr_core_sct,
      xt_rsc_1_24_i_s_din, xt_rsc_1_24_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_24_i_oswt;
  output xt_rsc_1_24_i_wen_comp;
  input xt_rsc_1_24_i_oswt_1;
  output xt_rsc_1_24_i_wen_comp_1;
  input [3:0] xt_rsc_1_24_i_s_raddr_core;
  input [3:0] xt_rsc_1_24_i_s_waddr_core;
  output [31:0] xt_rsc_1_24_i_s_din_mxwt;
  input [31:0] xt_rsc_1_24_i_s_dout_core;
  input xt_rsc_1_24_i_biwt;
  input xt_rsc_1_24_i_bdwt;
  output xt_rsc_1_24_i_bcwt;
  reg xt_rsc_1_24_i_bcwt;
  input xt_rsc_1_24_i_biwt_1;
  input xt_rsc_1_24_i_bdwt_2;
  output xt_rsc_1_24_i_bcwt_1;
  reg xt_rsc_1_24_i_bcwt_1;
  output [3:0] xt_rsc_1_24_i_s_raddr;
  input xt_rsc_1_24_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_24_i_s_waddr;
  input xt_rsc_1_24_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_24_i_s_din;
  output [31:0] xt_rsc_1_24_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_24_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_24_i_wen_comp = (~ xt_rsc_1_24_i_oswt) | xt_rsc_1_24_i_biwt | xt_rsc_1_24_i_bcwt;
  assign xt_rsc_1_24_i_wen_comp_1 = (~ xt_rsc_1_24_i_oswt_1) | xt_rsc_1_24_i_biwt_1
      | xt_rsc_1_24_i_bcwt_1;
  assign xt_rsc_1_24_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_24_i_s_raddr_core,
      xt_rsc_1_24_i_s_raddr_core_sct);
  assign xt_rsc_1_24_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_24_i_s_waddr_core,
      xt_rsc_1_24_i_s_waddr_core_sct);
  assign xt_rsc_1_24_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_24_i_s_din, xt_rsc_1_24_i_s_din_bfwt,
      xt_rsc_1_24_i_bcwt);
  assign xt_rsc_1_24_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_24_i_s_dout_core, xt_rsc_1_24_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_24_i_bcwt <= 1'b0;
      xt_rsc_1_24_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_24_i_bcwt <= ~((~(xt_rsc_1_24_i_bcwt | xt_rsc_1_24_i_biwt)) | xt_rsc_1_24_i_bdwt);
      xt_rsc_1_24_i_bcwt_1 <= ~((~(xt_rsc_1_24_i_bcwt_1 | xt_rsc_1_24_i_biwt_1))
          | xt_rsc_1_24_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_24_i_biwt ) begin
      xt_rsc_1_24_i_s_din_bfwt <= xt_rsc_1_24_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_24_i_xt_rsc_1_24_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_24_i_xt_rsc_1_24_wait_ctrl (
  core_wen, xt_rsc_1_24_i_oswt, xt_rsc_1_24_i_oswt_1, xt_rsc_1_24_i_biwt, xt_rsc_1_24_i_bdwt,
      xt_rsc_1_24_i_bcwt, xt_rsc_1_24_i_s_re_core_sct, xt_rsc_1_24_i_biwt_1, xt_rsc_1_24_i_bdwt_2,
      xt_rsc_1_24_i_bcwt_1, xt_rsc_1_24_i_s_we_core_sct, xt_rsc_1_24_i_s_rrdy, xt_rsc_1_24_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_24_i_oswt;
  input xt_rsc_1_24_i_oswt_1;
  output xt_rsc_1_24_i_biwt;
  output xt_rsc_1_24_i_bdwt;
  input xt_rsc_1_24_i_bcwt;
  output xt_rsc_1_24_i_s_re_core_sct;
  output xt_rsc_1_24_i_biwt_1;
  output xt_rsc_1_24_i_bdwt_2;
  input xt_rsc_1_24_i_bcwt_1;
  output xt_rsc_1_24_i_s_we_core_sct;
  input xt_rsc_1_24_i_s_rrdy;
  input xt_rsc_1_24_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_24_i_ogwt;
  wire xt_rsc_1_24_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_24_i_bdwt = xt_rsc_1_24_i_oswt & core_wen;
  assign xt_rsc_1_24_i_biwt = xt_rsc_1_24_i_ogwt & xt_rsc_1_24_i_s_rrdy;
  assign xt_rsc_1_24_i_ogwt = xt_rsc_1_24_i_oswt & (~ xt_rsc_1_24_i_bcwt);
  assign xt_rsc_1_24_i_s_re_core_sct = xt_rsc_1_24_i_ogwt;
  assign xt_rsc_1_24_i_bdwt_2 = xt_rsc_1_24_i_oswt_1 & core_wen;
  assign xt_rsc_1_24_i_biwt_1 = xt_rsc_1_24_i_ogwt_1 & xt_rsc_1_24_i_s_wrdy;
  assign xt_rsc_1_24_i_ogwt_1 = xt_rsc_1_24_i_oswt_1 & (~ xt_rsc_1_24_i_bcwt_1);
  assign xt_rsc_1_24_i_s_we_core_sct = xt_rsc_1_24_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_23_i_xt_rsc_1_23_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_23_i_xt_rsc_1_23_wait_dp (
  clk, rst, xt_rsc_1_23_i_oswt, xt_rsc_1_23_i_wen_comp, xt_rsc_1_23_i_oswt_1, xt_rsc_1_23_i_wen_comp_1,
      xt_rsc_1_23_i_s_raddr_core, xt_rsc_1_23_i_s_waddr_core, xt_rsc_1_23_i_s_din_mxwt,
      xt_rsc_1_23_i_s_dout_core, xt_rsc_1_23_i_biwt, xt_rsc_1_23_i_bdwt, xt_rsc_1_23_i_bcwt,
      xt_rsc_1_23_i_biwt_1, xt_rsc_1_23_i_bdwt_2, xt_rsc_1_23_i_bcwt_1, xt_rsc_1_23_i_s_raddr,
      xt_rsc_1_23_i_s_raddr_core_sct, xt_rsc_1_23_i_s_waddr, xt_rsc_1_23_i_s_waddr_core_sct,
      xt_rsc_1_23_i_s_din, xt_rsc_1_23_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_23_i_oswt;
  output xt_rsc_1_23_i_wen_comp;
  input xt_rsc_1_23_i_oswt_1;
  output xt_rsc_1_23_i_wen_comp_1;
  input [3:0] xt_rsc_1_23_i_s_raddr_core;
  input [3:0] xt_rsc_1_23_i_s_waddr_core;
  output [31:0] xt_rsc_1_23_i_s_din_mxwt;
  input [31:0] xt_rsc_1_23_i_s_dout_core;
  input xt_rsc_1_23_i_biwt;
  input xt_rsc_1_23_i_bdwt;
  output xt_rsc_1_23_i_bcwt;
  reg xt_rsc_1_23_i_bcwt;
  input xt_rsc_1_23_i_biwt_1;
  input xt_rsc_1_23_i_bdwt_2;
  output xt_rsc_1_23_i_bcwt_1;
  reg xt_rsc_1_23_i_bcwt_1;
  output [3:0] xt_rsc_1_23_i_s_raddr;
  input xt_rsc_1_23_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_23_i_s_waddr;
  input xt_rsc_1_23_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_23_i_s_din;
  output [31:0] xt_rsc_1_23_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_23_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_23_i_wen_comp = (~ xt_rsc_1_23_i_oswt) | xt_rsc_1_23_i_biwt | xt_rsc_1_23_i_bcwt;
  assign xt_rsc_1_23_i_wen_comp_1 = (~ xt_rsc_1_23_i_oswt_1) | xt_rsc_1_23_i_biwt_1
      | xt_rsc_1_23_i_bcwt_1;
  assign xt_rsc_1_23_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_23_i_s_raddr_core,
      xt_rsc_1_23_i_s_raddr_core_sct);
  assign xt_rsc_1_23_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_23_i_s_waddr_core,
      xt_rsc_1_23_i_s_waddr_core_sct);
  assign xt_rsc_1_23_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_23_i_s_din, xt_rsc_1_23_i_s_din_bfwt,
      xt_rsc_1_23_i_bcwt);
  assign xt_rsc_1_23_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_23_i_s_dout_core, xt_rsc_1_23_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_23_i_bcwt <= 1'b0;
      xt_rsc_1_23_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_23_i_bcwt <= ~((~(xt_rsc_1_23_i_bcwt | xt_rsc_1_23_i_biwt)) | xt_rsc_1_23_i_bdwt);
      xt_rsc_1_23_i_bcwt_1 <= ~((~(xt_rsc_1_23_i_bcwt_1 | xt_rsc_1_23_i_biwt_1))
          | xt_rsc_1_23_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_23_i_biwt ) begin
      xt_rsc_1_23_i_s_din_bfwt <= xt_rsc_1_23_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_23_i_xt_rsc_1_23_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_23_i_xt_rsc_1_23_wait_ctrl (
  core_wen, xt_rsc_1_23_i_oswt, xt_rsc_1_23_i_oswt_1, xt_rsc_1_23_i_biwt, xt_rsc_1_23_i_bdwt,
      xt_rsc_1_23_i_bcwt, xt_rsc_1_23_i_s_re_core_sct, xt_rsc_1_23_i_biwt_1, xt_rsc_1_23_i_bdwt_2,
      xt_rsc_1_23_i_bcwt_1, xt_rsc_1_23_i_s_we_core_sct, xt_rsc_1_23_i_s_rrdy, xt_rsc_1_23_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_23_i_oswt;
  input xt_rsc_1_23_i_oswt_1;
  output xt_rsc_1_23_i_biwt;
  output xt_rsc_1_23_i_bdwt;
  input xt_rsc_1_23_i_bcwt;
  output xt_rsc_1_23_i_s_re_core_sct;
  output xt_rsc_1_23_i_biwt_1;
  output xt_rsc_1_23_i_bdwt_2;
  input xt_rsc_1_23_i_bcwt_1;
  output xt_rsc_1_23_i_s_we_core_sct;
  input xt_rsc_1_23_i_s_rrdy;
  input xt_rsc_1_23_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_23_i_ogwt;
  wire xt_rsc_1_23_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_23_i_bdwt = xt_rsc_1_23_i_oswt & core_wen;
  assign xt_rsc_1_23_i_biwt = xt_rsc_1_23_i_ogwt & xt_rsc_1_23_i_s_rrdy;
  assign xt_rsc_1_23_i_ogwt = xt_rsc_1_23_i_oswt & (~ xt_rsc_1_23_i_bcwt);
  assign xt_rsc_1_23_i_s_re_core_sct = xt_rsc_1_23_i_ogwt;
  assign xt_rsc_1_23_i_bdwt_2 = xt_rsc_1_23_i_oswt_1 & core_wen;
  assign xt_rsc_1_23_i_biwt_1 = xt_rsc_1_23_i_ogwt_1 & xt_rsc_1_23_i_s_wrdy;
  assign xt_rsc_1_23_i_ogwt_1 = xt_rsc_1_23_i_oswt_1 & (~ xt_rsc_1_23_i_bcwt_1);
  assign xt_rsc_1_23_i_s_we_core_sct = xt_rsc_1_23_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_22_i_xt_rsc_1_22_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_22_i_xt_rsc_1_22_wait_dp (
  clk, rst, xt_rsc_1_22_i_oswt, xt_rsc_1_22_i_wen_comp, xt_rsc_1_22_i_oswt_1, xt_rsc_1_22_i_wen_comp_1,
      xt_rsc_1_22_i_s_raddr_core, xt_rsc_1_22_i_s_waddr_core, xt_rsc_1_22_i_s_din_mxwt,
      xt_rsc_1_22_i_s_dout_core, xt_rsc_1_22_i_biwt, xt_rsc_1_22_i_bdwt, xt_rsc_1_22_i_bcwt,
      xt_rsc_1_22_i_biwt_1, xt_rsc_1_22_i_bdwt_2, xt_rsc_1_22_i_bcwt_1, xt_rsc_1_22_i_s_raddr,
      xt_rsc_1_22_i_s_raddr_core_sct, xt_rsc_1_22_i_s_waddr, xt_rsc_1_22_i_s_waddr_core_sct,
      xt_rsc_1_22_i_s_din, xt_rsc_1_22_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_22_i_oswt;
  output xt_rsc_1_22_i_wen_comp;
  input xt_rsc_1_22_i_oswt_1;
  output xt_rsc_1_22_i_wen_comp_1;
  input [3:0] xt_rsc_1_22_i_s_raddr_core;
  input [3:0] xt_rsc_1_22_i_s_waddr_core;
  output [31:0] xt_rsc_1_22_i_s_din_mxwt;
  input [31:0] xt_rsc_1_22_i_s_dout_core;
  input xt_rsc_1_22_i_biwt;
  input xt_rsc_1_22_i_bdwt;
  output xt_rsc_1_22_i_bcwt;
  reg xt_rsc_1_22_i_bcwt;
  input xt_rsc_1_22_i_biwt_1;
  input xt_rsc_1_22_i_bdwt_2;
  output xt_rsc_1_22_i_bcwt_1;
  reg xt_rsc_1_22_i_bcwt_1;
  output [3:0] xt_rsc_1_22_i_s_raddr;
  input xt_rsc_1_22_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_22_i_s_waddr;
  input xt_rsc_1_22_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_22_i_s_din;
  output [31:0] xt_rsc_1_22_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_22_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_22_i_wen_comp = (~ xt_rsc_1_22_i_oswt) | xt_rsc_1_22_i_biwt | xt_rsc_1_22_i_bcwt;
  assign xt_rsc_1_22_i_wen_comp_1 = (~ xt_rsc_1_22_i_oswt_1) | xt_rsc_1_22_i_biwt_1
      | xt_rsc_1_22_i_bcwt_1;
  assign xt_rsc_1_22_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_22_i_s_raddr_core,
      xt_rsc_1_22_i_s_raddr_core_sct);
  assign xt_rsc_1_22_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_22_i_s_waddr_core,
      xt_rsc_1_22_i_s_waddr_core_sct);
  assign xt_rsc_1_22_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_22_i_s_din, xt_rsc_1_22_i_s_din_bfwt,
      xt_rsc_1_22_i_bcwt);
  assign xt_rsc_1_22_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_22_i_s_dout_core, xt_rsc_1_22_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_22_i_bcwt <= 1'b0;
      xt_rsc_1_22_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_22_i_bcwt <= ~((~(xt_rsc_1_22_i_bcwt | xt_rsc_1_22_i_biwt)) | xt_rsc_1_22_i_bdwt);
      xt_rsc_1_22_i_bcwt_1 <= ~((~(xt_rsc_1_22_i_bcwt_1 | xt_rsc_1_22_i_biwt_1))
          | xt_rsc_1_22_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_22_i_biwt ) begin
      xt_rsc_1_22_i_s_din_bfwt <= xt_rsc_1_22_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_22_i_xt_rsc_1_22_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_22_i_xt_rsc_1_22_wait_ctrl (
  core_wen, xt_rsc_1_22_i_oswt, xt_rsc_1_22_i_oswt_1, xt_rsc_1_22_i_biwt, xt_rsc_1_22_i_bdwt,
      xt_rsc_1_22_i_bcwt, xt_rsc_1_22_i_s_re_core_sct, xt_rsc_1_22_i_biwt_1, xt_rsc_1_22_i_bdwt_2,
      xt_rsc_1_22_i_bcwt_1, xt_rsc_1_22_i_s_we_core_sct, xt_rsc_1_22_i_s_rrdy, xt_rsc_1_22_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_22_i_oswt;
  input xt_rsc_1_22_i_oswt_1;
  output xt_rsc_1_22_i_biwt;
  output xt_rsc_1_22_i_bdwt;
  input xt_rsc_1_22_i_bcwt;
  output xt_rsc_1_22_i_s_re_core_sct;
  output xt_rsc_1_22_i_biwt_1;
  output xt_rsc_1_22_i_bdwt_2;
  input xt_rsc_1_22_i_bcwt_1;
  output xt_rsc_1_22_i_s_we_core_sct;
  input xt_rsc_1_22_i_s_rrdy;
  input xt_rsc_1_22_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_22_i_ogwt;
  wire xt_rsc_1_22_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_22_i_bdwt = xt_rsc_1_22_i_oswt & core_wen;
  assign xt_rsc_1_22_i_biwt = xt_rsc_1_22_i_ogwt & xt_rsc_1_22_i_s_rrdy;
  assign xt_rsc_1_22_i_ogwt = xt_rsc_1_22_i_oswt & (~ xt_rsc_1_22_i_bcwt);
  assign xt_rsc_1_22_i_s_re_core_sct = xt_rsc_1_22_i_ogwt;
  assign xt_rsc_1_22_i_bdwt_2 = xt_rsc_1_22_i_oswt_1 & core_wen;
  assign xt_rsc_1_22_i_biwt_1 = xt_rsc_1_22_i_ogwt_1 & xt_rsc_1_22_i_s_wrdy;
  assign xt_rsc_1_22_i_ogwt_1 = xt_rsc_1_22_i_oswt_1 & (~ xt_rsc_1_22_i_bcwt_1);
  assign xt_rsc_1_22_i_s_we_core_sct = xt_rsc_1_22_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_21_i_xt_rsc_1_21_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_21_i_xt_rsc_1_21_wait_dp (
  clk, rst, xt_rsc_1_21_i_oswt, xt_rsc_1_21_i_wen_comp, xt_rsc_1_21_i_oswt_1, xt_rsc_1_21_i_wen_comp_1,
      xt_rsc_1_21_i_s_raddr_core, xt_rsc_1_21_i_s_waddr_core, xt_rsc_1_21_i_s_din_mxwt,
      xt_rsc_1_21_i_s_dout_core, xt_rsc_1_21_i_biwt, xt_rsc_1_21_i_bdwt, xt_rsc_1_21_i_bcwt,
      xt_rsc_1_21_i_biwt_1, xt_rsc_1_21_i_bdwt_2, xt_rsc_1_21_i_bcwt_1, xt_rsc_1_21_i_s_raddr,
      xt_rsc_1_21_i_s_raddr_core_sct, xt_rsc_1_21_i_s_waddr, xt_rsc_1_21_i_s_waddr_core_sct,
      xt_rsc_1_21_i_s_din, xt_rsc_1_21_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_21_i_oswt;
  output xt_rsc_1_21_i_wen_comp;
  input xt_rsc_1_21_i_oswt_1;
  output xt_rsc_1_21_i_wen_comp_1;
  input [3:0] xt_rsc_1_21_i_s_raddr_core;
  input [3:0] xt_rsc_1_21_i_s_waddr_core;
  output [31:0] xt_rsc_1_21_i_s_din_mxwt;
  input [31:0] xt_rsc_1_21_i_s_dout_core;
  input xt_rsc_1_21_i_biwt;
  input xt_rsc_1_21_i_bdwt;
  output xt_rsc_1_21_i_bcwt;
  reg xt_rsc_1_21_i_bcwt;
  input xt_rsc_1_21_i_biwt_1;
  input xt_rsc_1_21_i_bdwt_2;
  output xt_rsc_1_21_i_bcwt_1;
  reg xt_rsc_1_21_i_bcwt_1;
  output [3:0] xt_rsc_1_21_i_s_raddr;
  input xt_rsc_1_21_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_21_i_s_waddr;
  input xt_rsc_1_21_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_21_i_s_din;
  output [31:0] xt_rsc_1_21_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_21_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_21_i_wen_comp = (~ xt_rsc_1_21_i_oswt) | xt_rsc_1_21_i_biwt | xt_rsc_1_21_i_bcwt;
  assign xt_rsc_1_21_i_wen_comp_1 = (~ xt_rsc_1_21_i_oswt_1) | xt_rsc_1_21_i_biwt_1
      | xt_rsc_1_21_i_bcwt_1;
  assign xt_rsc_1_21_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_21_i_s_raddr_core,
      xt_rsc_1_21_i_s_raddr_core_sct);
  assign xt_rsc_1_21_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_21_i_s_waddr_core,
      xt_rsc_1_21_i_s_waddr_core_sct);
  assign xt_rsc_1_21_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_21_i_s_din, xt_rsc_1_21_i_s_din_bfwt,
      xt_rsc_1_21_i_bcwt);
  assign xt_rsc_1_21_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_21_i_s_dout_core, xt_rsc_1_21_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_21_i_bcwt <= 1'b0;
      xt_rsc_1_21_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_21_i_bcwt <= ~((~(xt_rsc_1_21_i_bcwt | xt_rsc_1_21_i_biwt)) | xt_rsc_1_21_i_bdwt);
      xt_rsc_1_21_i_bcwt_1 <= ~((~(xt_rsc_1_21_i_bcwt_1 | xt_rsc_1_21_i_biwt_1))
          | xt_rsc_1_21_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_21_i_biwt ) begin
      xt_rsc_1_21_i_s_din_bfwt <= xt_rsc_1_21_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_21_i_xt_rsc_1_21_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_21_i_xt_rsc_1_21_wait_ctrl (
  core_wen, xt_rsc_1_21_i_oswt, xt_rsc_1_21_i_oswt_1, xt_rsc_1_21_i_biwt, xt_rsc_1_21_i_bdwt,
      xt_rsc_1_21_i_bcwt, xt_rsc_1_21_i_s_re_core_sct, xt_rsc_1_21_i_biwt_1, xt_rsc_1_21_i_bdwt_2,
      xt_rsc_1_21_i_bcwt_1, xt_rsc_1_21_i_s_we_core_sct, xt_rsc_1_21_i_s_rrdy, xt_rsc_1_21_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_21_i_oswt;
  input xt_rsc_1_21_i_oswt_1;
  output xt_rsc_1_21_i_biwt;
  output xt_rsc_1_21_i_bdwt;
  input xt_rsc_1_21_i_bcwt;
  output xt_rsc_1_21_i_s_re_core_sct;
  output xt_rsc_1_21_i_biwt_1;
  output xt_rsc_1_21_i_bdwt_2;
  input xt_rsc_1_21_i_bcwt_1;
  output xt_rsc_1_21_i_s_we_core_sct;
  input xt_rsc_1_21_i_s_rrdy;
  input xt_rsc_1_21_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_21_i_ogwt;
  wire xt_rsc_1_21_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_21_i_bdwt = xt_rsc_1_21_i_oswt & core_wen;
  assign xt_rsc_1_21_i_biwt = xt_rsc_1_21_i_ogwt & xt_rsc_1_21_i_s_rrdy;
  assign xt_rsc_1_21_i_ogwt = xt_rsc_1_21_i_oswt & (~ xt_rsc_1_21_i_bcwt);
  assign xt_rsc_1_21_i_s_re_core_sct = xt_rsc_1_21_i_ogwt;
  assign xt_rsc_1_21_i_bdwt_2 = xt_rsc_1_21_i_oswt_1 & core_wen;
  assign xt_rsc_1_21_i_biwt_1 = xt_rsc_1_21_i_ogwt_1 & xt_rsc_1_21_i_s_wrdy;
  assign xt_rsc_1_21_i_ogwt_1 = xt_rsc_1_21_i_oswt_1 & (~ xt_rsc_1_21_i_bcwt_1);
  assign xt_rsc_1_21_i_s_we_core_sct = xt_rsc_1_21_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_20_i_xt_rsc_1_20_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_20_i_xt_rsc_1_20_wait_dp (
  clk, rst, xt_rsc_1_20_i_oswt, xt_rsc_1_20_i_wen_comp, xt_rsc_1_20_i_oswt_1, xt_rsc_1_20_i_wen_comp_1,
      xt_rsc_1_20_i_s_raddr_core, xt_rsc_1_20_i_s_waddr_core, xt_rsc_1_20_i_s_din_mxwt,
      xt_rsc_1_20_i_s_dout_core, xt_rsc_1_20_i_biwt, xt_rsc_1_20_i_bdwt, xt_rsc_1_20_i_bcwt,
      xt_rsc_1_20_i_biwt_1, xt_rsc_1_20_i_bdwt_2, xt_rsc_1_20_i_bcwt_1, xt_rsc_1_20_i_s_raddr,
      xt_rsc_1_20_i_s_raddr_core_sct, xt_rsc_1_20_i_s_waddr, xt_rsc_1_20_i_s_waddr_core_sct,
      xt_rsc_1_20_i_s_din, xt_rsc_1_20_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_20_i_oswt;
  output xt_rsc_1_20_i_wen_comp;
  input xt_rsc_1_20_i_oswt_1;
  output xt_rsc_1_20_i_wen_comp_1;
  input [3:0] xt_rsc_1_20_i_s_raddr_core;
  input [3:0] xt_rsc_1_20_i_s_waddr_core;
  output [31:0] xt_rsc_1_20_i_s_din_mxwt;
  input [31:0] xt_rsc_1_20_i_s_dout_core;
  input xt_rsc_1_20_i_biwt;
  input xt_rsc_1_20_i_bdwt;
  output xt_rsc_1_20_i_bcwt;
  reg xt_rsc_1_20_i_bcwt;
  input xt_rsc_1_20_i_biwt_1;
  input xt_rsc_1_20_i_bdwt_2;
  output xt_rsc_1_20_i_bcwt_1;
  reg xt_rsc_1_20_i_bcwt_1;
  output [3:0] xt_rsc_1_20_i_s_raddr;
  input xt_rsc_1_20_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_20_i_s_waddr;
  input xt_rsc_1_20_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_20_i_s_din;
  output [31:0] xt_rsc_1_20_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_20_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_20_i_wen_comp = (~ xt_rsc_1_20_i_oswt) | xt_rsc_1_20_i_biwt | xt_rsc_1_20_i_bcwt;
  assign xt_rsc_1_20_i_wen_comp_1 = (~ xt_rsc_1_20_i_oswt_1) | xt_rsc_1_20_i_biwt_1
      | xt_rsc_1_20_i_bcwt_1;
  assign xt_rsc_1_20_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_20_i_s_raddr_core,
      xt_rsc_1_20_i_s_raddr_core_sct);
  assign xt_rsc_1_20_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_20_i_s_waddr_core,
      xt_rsc_1_20_i_s_waddr_core_sct);
  assign xt_rsc_1_20_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_20_i_s_din, xt_rsc_1_20_i_s_din_bfwt,
      xt_rsc_1_20_i_bcwt);
  assign xt_rsc_1_20_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_20_i_s_dout_core, xt_rsc_1_20_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_20_i_bcwt <= 1'b0;
      xt_rsc_1_20_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_20_i_bcwt <= ~((~(xt_rsc_1_20_i_bcwt | xt_rsc_1_20_i_biwt)) | xt_rsc_1_20_i_bdwt);
      xt_rsc_1_20_i_bcwt_1 <= ~((~(xt_rsc_1_20_i_bcwt_1 | xt_rsc_1_20_i_biwt_1))
          | xt_rsc_1_20_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_20_i_biwt ) begin
      xt_rsc_1_20_i_s_din_bfwt <= xt_rsc_1_20_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_20_i_xt_rsc_1_20_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_20_i_xt_rsc_1_20_wait_ctrl (
  core_wen, xt_rsc_1_20_i_oswt, xt_rsc_1_20_i_oswt_1, xt_rsc_1_20_i_biwt, xt_rsc_1_20_i_bdwt,
      xt_rsc_1_20_i_bcwt, xt_rsc_1_20_i_s_re_core_sct, xt_rsc_1_20_i_biwt_1, xt_rsc_1_20_i_bdwt_2,
      xt_rsc_1_20_i_bcwt_1, xt_rsc_1_20_i_s_we_core_sct, xt_rsc_1_20_i_s_rrdy, xt_rsc_1_20_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_20_i_oswt;
  input xt_rsc_1_20_i_oswt_1;
  output xt_rsc_1_20_i_biwt;
  output xt_rsc_1_20_i_bdwt;
  input xt_rsc_1_20_i_bcwt;
  output xt_rsc_1_20_i_s_re_core_sct;
  output xt_rsc_1_20_i_biwt_1;
  output xt_rsc_1_20_i_bdwt_2;
  input xt_rsc_1_20_i_bcwt_1;
  output xt_rsc_1_20_i_s_we_core_sct;
  input xt_rsc_1_20_i_s_rrdy;
  input xt_rsc_1_20_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_20_i_ogwt;
  wire xt_rsc_1_20_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_20_i_bdwt = xt_rsc_1_20_i_oswt & core_wen;
  assign xt_rsc_1_20_i_biwt = xt_rsc_1_20_i_ogwt & xt_rsc_1_20_i_s_rrdy;
  assign xt_rsc_1_20_i_ogwt = xt_rsc_1_20_i_oswt & (~ xt_rsc_1_20_i_bcwt);
  assign xt_rsc_1_20_i_s_re_core_sct = xt_rsc_1_20_i_ogwt;
  assign xt_rsc_1_20_i_bdwt_2 = xt_rsc_1_20_i_oswt_1 & core_wen;
  assign xt_rsc_1_20_i_biwt_1 = xt_rsc_1_20_i_ogwt_1 & xt_rsc_1_20_i_s_wrdy;
  assign xt_rsc_1_20_i_ogwt_1 = xt_rsc_1_20_i_oswt_1 & (~ xt_rsc_1_20_i_bcwt_1);
  assign xt_rsc_1_20_i_s_we_core_sct = xt_rsc_1_20_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_19_i_xt_rsc_1_19_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_19_i_xt_rsc_1_19_wait_dp (
  clk, rst, xt_rsc_1_19_i_oswt, xt_rsc_1_19_i_wen_comp, xt_rsc_1_19_i_oswt_1, xt_rsc_1_19_i_wen_comp_1,
      xt_rsc_1_19_i_s_raddr_core, xt_rsc_1_19_i_s_waddr_core, xt_rsc_1_19_i_s_din_mxwt,
      xt_rsc_1_19_i_s_dout_core, xt_rsc_1_19_i_biwt, xt_rsc_1_19_i_bdwt, xt_rsc_1_19_i_bcwt,
      xt_rsc_1_19_i_biwt_1, xt_rsc_1_19_i_bdwt_2, xt_rsc_1_19_i_bcwt_1, xt_rsc_1_19_i_s_raddr,
      xt_rsc_1_19_i_s_raddr_core_sct, xt_rsc_1_19_i_s_waddr, xt_rsc_1_19_i_s_waddr_core_sct,
      xt_rsc_1_19_i_s_din, xt_rsc_1_19_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_19_i_oswt;
  output xt_rsc_1_19_i_wen_comp;
  input xt_rsc_1_19_i_oswt_1;
  output xt_rsc_1_19_i_wen_comp_1;
  input [3:0] xt_rsc_1_19_i_s_raddr_core;
  input [3:0] xt_rsc_1_19_i_s_waddr_core;
  output [31:0] xt_rsc_1_19_i_s_din_mxwt;
  input [31:0] xt_rsc_1_19_i_s_dout_core;
  input xt_rsc_1_19_i_biwt;
  input xt_rsc_1_19_i_bdwt;
  output xt_rsc_1_19_i_bcwt;
  reg xt_rsc_1_19_i_bcwt;
  input xt_rsc_1_19_i_biwt_1;
  input xt_rsc_1_19_i_bdwt_2;
  output xt_rsc_1_19_i_bcwt_1;
  reg xt_rsc_1_19_i_bcwt_1;
  output [3:0] xt_rsc_1_19_i_s_raddr;
  input xt_rsc_1_19_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_19_i_s_waddr;
  input xt_rsc_1_19_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_19_i_s_din;
  output [31:0] xt_rsc_1_19_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_19_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_19_i_wen_comp = (~ xt_rsc_1_19_i_oswt) | xt_rsc_1_19_i_biwt | xt_rsc_1_19_i_bcwt;
  assign xt_rsc_1_19_i_wen_comp_1 = (~ xt_rsc_1_19_i_oswt_1) | xt_rsc_1_19_i_biwt_1
      | xt_rsc_1_19_i_bcwt_1;
  assign xt_rsc_1_19_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_19_i_s_raddr_core,
      xt_rsc_1_19_i_s_raddr_core_sct);
  assign xt_rsc_1_19_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_19_i_s_waddr_core,
      xt_rsc_1_19_i_s_waddr_core_sct);
  assign xt_rsc_1_19_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_19_i_s_din, xt_rsc_1_19_i_s_din_bfwt,
      xt_rsc_1_19_i_bcwt);
  assign xt_rsc_1_19_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_19_i_s_dout_core, xt_rsc_1_19_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_19_i_bcwt <= 1'b0;
      xt_rsc_1_19_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_19_i_bcwt <= ~((~(xt_rsc_1_19_i_bcwt | xt_rsc_1_19_i_biwt)) | xt_rsc_1_19_i_bdwt);
      xt_rsc_1_19_i_bcwt_1 <= ~((~(xt_rsc_1_19_i_bcwt_1 | xt_rsc_1_19_i_biwt_1))
          | xt_rsc_1_19_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_19_i_biwt ) begin
      xt_rsc_1_19_i_s_din_bfwt <= xt_rsc_1_19_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_19_i_xt_rsc_1_19_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_19_i_xt_rsc_1_19_wait_ctrl (
  core_wen, xt_rsc_1_19_i_oswt, xt_rsc_1_19_i_oswt_1, xt_rsc_1_19_i_biwt, xt_rsc_1_19_i_bdwt,
      xt_rsc_1_19_i_bcwt, xt_rsc_1_19_i_s_re_core_sct, xt_rsc_1_19_i_biwt_1, xt_rsc_1_19_i_bdwt_2,
      xt_rsc_1_19_i_bcwt_1, xt_rsc_1_19_i_s_we_core_sct, xt_rsc_1_19_i_s_rrdy, xt_rsc_1_19_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_19_i_oswt;
  input xt_rsc_1_19_i_oswt_1;
  output xt_rsc_1_19_i_biwt;
  output xt_rsc_1_19_i_bdwt;
  input xt_rsc_1_19_i_bcwt;
  output xt_rsc_1_19_i_s_re_core_sct;
  output xt_rsc_1_19_i_biwt_1;
  output xt_rsc_1_19_i_bdwt_2;
  input xt_rsc_1_19_i_bcwt_1;
  output xt_rsc_1_19_i_s_we_core_sct;
  input xt_rsc_1_19_i_s_rrdy;
  input xt_rsc_1_19_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_19_i_ogwt;
  wire xt_rsc_1_19_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_19_i_bdwt = xt_rsc_1_19_i_oswt & core_wen;
  assign xt_rsc_1_19_i_biwt = xt_rsc_1_19_i_ogwt & xt_rsc_1_19_i_s_rrdy;
  assign xt_rsc_1_19_i_ogwt = xt_rsc_1_19_i_oswt & (~ xt_rsc_1_19_i_bcwt);
  assign xt_rsc_1_19_i_s_re_core_sct = xt_rsc_1_19_i_ogwt;
  assign xt_rsc_1_19_i_bdwt_2 = xt_rsc_1_19_i_oswt_1 & core_wen;
  assign xt_rsc_1_19_i_biwt_1 = xt_rsc_1_19_i_ogwt_1 & xt_rsc_1_19_i_s_wrdy;
  assign xt_rsc_1_19_i_ogwt_1 = xt_rsc_1_19_i_oswt_1 & (~ xt_rsc_1_19_i_bcwt_1);
  assign xt_rsc_1_19_i_s_we_core_sct = xt_rsc_1_19_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_18_i_xt_rsc_1_18_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_18_i_xt_rsc_1_18_wait_dp (
  clk, rst, xt_rsc_1_18_i_oswt, xt_rsc_1_18_i_wen_comp, xt_rsc_1_18_i_oswt_1, xt_rsc_1_18_i_wen_comp_1,
      xt_rsc_1_18_i_s_raddr_core, xt_rsc_1_18_i_s_waddr_core, xt_rsc_1_18_i_s_din_mxwt,
      xt_rsc_1_18_i_s_dout_core, xt_rsc_1_18_i_biwt, xt_rsc_1_18_i_bdwt, xt_rsc_1_18_i_bcwt,
      xt_rsc_1_18_i_biwt_1, xt_rsc_1_18_i_bdwt_2, xt_rsc_1_18_i_bcwt_1, xt_rsc_1_18_i_s_raddr,
      xt_rsc_1_18_i_s_raddr_core_sct, xt_rsc_1_18_i_s_waddr, xt_rsc_1_18_i_s_waddr_core_sct,
      xt_rsc_1_18_i_s_din, xt_rsc_1_18_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_18_i_oswt;
  output xt_rsc_1_18_i_wen_comp;
  input xt_rsc_1_18_i_oswt_1;
  output xt_rsc_1_18_i_wen_comp_1;
  input [3:0] xt_rsc_1_18_i_s_raddr_core;
  input [3:0] xt_rsc_1_18_i_s_waddr_core;
  output [31:0] xt_rsc_1_18_i_s_din_mxwt;
  input [31:0] xt_rsc_1_18_i_s_dout_core;
  input xt_rsc_1_18_i_biwt;
  input xt_rsc_1_18_i_bdwt;
  output xt_rsc_1_18_i_bcwt;
  reg xt_rsc_1_18_i_bcwt;
  input xt_rsc_1_18_i_biwt_1;
  input xt_rsc_1_18_i_bdwt_2;
  output xt_rsc_1_18_i_bcwt_1;
  reg xt_rsc_1_18_i_bcwt_1;
  output [3:0] xt_rsc_1_18_i_s_raddr;
  input xt_rsc_1_18_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_18_i_s_waddr;
  input xt_rsc_1_18_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_18_i_s_din;
  output [31:0] xt_rsc_1_18_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_18_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_18_i_wen_comp = (~ xt_rsc_1_18_i_oswt) | xt_rsc_1_18_i_biwt | xt_rsc_1_18_i_bcwt;
  assign xt_rsc_1_18_i_wen_comp_1 = (~ xt_rsc_1_18_i_oswt_1) | xt_rsc_1_18_i_biwt_1
      | xt_rsc_1_18_i_bcwt_1;
  assign xt_rsc_1_18_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_18_i_s_raddr_core,
      xt_rsc_1_18_i_s_raddr_core_sct);
  assign xt_rsc_1_18_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_18_i_s_waddr_core,
      xt_rsc_1_18_i_s_waddr_core_sct);
  assign xt_rsc_1_18_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_18_i_s_din, xt_rsc_1_18_i_s_din_bfwt,
      xt_rsc_1_18_i_bcwt);
  assign xt_rsc_1_18_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_18_i_s_dout_core, xt_rsc_1_18_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_18_i_bcwt <= 1'b0;
      xt_rsc_1_18_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_18_i_bcwt <= ~((~(xt_rsc_1_18_i_bcwt | xt_rsc_1_18_i_biwt)) | xt_rsc_1_18_i_bdwt);
      xt_rsc_1_18_i_bcwt_1 <= ~((~(xt_rsc_1_18_i_bcwt_1 | xt_rsc_1_18_i_biwt_1))
          | xt_rsc_1_18_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_18_i_biwt ) begin
      xt_rsc_1_18_i_s_din_bfwt <= xt_rsc_1_18_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_18_i_xt_rsc_1_18_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_18_i_xt_rsc_1_18_wait_ctrl (
  core_wen, xt_rsc_1_18_i_oswt, xt_rsc_1_18_i_oswt_1, xt_rsc_1_18_i_biwt, xt_rsc_1_18_i_bdwt,
      xt_rsc_1_18_i_bcwt, xt_rsc_1_18_i_s_re_core_sct, xt_rsc_1_18_i_biwt_1, xt_rsc_1_18_i_bdwt_2,
      xt_rsc_1_18_i_bcwt_1, xt_rsc_1_18_i_s_we_core_sct, xt_rsc_1_18_i_s_rrdy, xt_rsc_1_18_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_18_i_oswt;
  input xt_rsc_1_18_i_oswt_1;
  output xt_rsc_1_18_i_biwt;
  output xt_rsc_1_18_i_bdwt;
  input xt_rsc_1_18_i_bcwt;
  output xt_rsc_1_18_i_s_re_core_sct;
  output xt_rsc_1_18_i_biwt_1;
  output xt_rsc_1_18_i_bdwt_2;
  input xt_rsc_1_18_i_bcwt_1;
  output xt_rsc_1_18_i_s_we_core_sct;
  input xt_rsc_1_18_i_s_rrdy;
  input xt_rsc_1_18_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_18_i_ogwt;
  wire xt_rsc_1_18_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_18_i_bdwt = xt_rsc_1_18_i_oswt & core_wen;
  assign xt_rsc_1_18_i_biwt = xt_rsc_1_18_i_ogwt & xt_rsc_1_18_i_s_rrdy;
  assign xt_rsc_1_18_i_ogwt = xt_rsc_1_18_i_oswt & (~ xt_rsc_1_18_i_bcwt);
  assign xt_rsc_1_18_i_s_re_core_sct = xt_rsc_1_18_i_ogwt;
  assign xt_rsc_1_18_i_bdwt_2 = xt_rsc_1_18_i_oswt_1 & core_wen;
  assign xt_rsc_1_18_i_biwt_1 = xt_rsc_1_18_i_ogwt_1 & xt_rsc_1_18_i_s_wrdy;
  assign xt_rsc_1_18_i_ogwt_1 = xt_rsc_1_18_i_oswt_1 & (~ xt_rsc_1_18_i_bcwt_1);
  assign xt_rsc_1_18_i_s_we_core_sct = xt_rsc_1_18_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_17_i_xt_rsc_1_17_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_17_i_xt_rsc_1_17_wait_dp (
  clk, rst, xt_rsc_1_17_i_oswt, xt_rsc_1_17_i_wen_comp, xt_rsc_1_17_i_oswt_1, xt_rsc_1_17_i_wen_comp_1,
      xt_rsc_1_17_i_s_raddr_core, xt_rsc_1_17_i_s_waddr_core, xt_rsc_1_17_i_s_din_mxwt,
      xt_rsc_1_17_i_s_dout_core, xt_rsc_1_17_i_biwt, xt_rsc_1_17_i_bdwt, xt_rsc_1_17_i_bcwt,
      xt_rsc_1_17_i_biwt_1, xt_rsc_1_17_i_bdwt_2, xt_rsc_1_17_i_bcwt_1, xt_rsc_1_17_i_s_raddr,
      xt_rsc_1_17_i_s_raddr_core_sct, xt_rsc_1_17_i_s_waddr, xt_rsc_1_17_i_s_waddr_core_sct,
      xt_rsc_1_17_i_s_din, xt_rsc_1_17_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_17_i_oswt;
  output xt_rsc_1_17_i_wen_comp;
  input xt_rsc_1_17_i_oswt_1;
  output xt_rsc_1_17_i_wen_comp_1;
  input [3:0] xt_rsc_1_17_i_s_raddr_core;
  input [3:0] xt_rsc_1_17_i_s_waddr_core;
  output [31:0] xt_rsc_1_17_i_s_din_mxwt;
  input [31:0] xt_rsc_1_17_i_s_dout_core;
  input xt_rsc_1_17_i_biwt;
  input xt_rsc_1_17_i_bdwt;
  output xt_rsc_1_17_i_bcwt;
  reg xt_rsc_1_17_i_bcwt;
  input xt_rsc_1_17_i_biwt_1;
  input xt_rsc_1_17_i_bdwt_2;
  output xt_rsc_1_17_i_bcwt_1;
  reg xt_rsc_1_17_i_bcwt_1;
  output [3:0] xt_rsc_1_17_i_s_raddr;
  input xt_rsc_1_17_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_17_i_s_waddr;
  input xt_rsc_1_17_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_17_i_s_din;
  output [31:0] xt_rsc_1_17_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_17_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_17_i_wen_comp = (~ xt_rsc_1_17_i_oswt) | xt_rsc_1_17_i_biwt | xt_rsc_1_17_i_bcwt;
  assign xt_rsc_1_17_i_wen_comp_1 = (~ xt_rsc_1_17_i_oswt_1) | xt_rsc_1_17_i_biwt_1
      | xt_rsc_1_17_i_bcwt_1;
  assign xt_rsc_1_17_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_17_i_s_raddr_core,
      xt_rsc_1_17_i_s_raddr_core_sct);
  assign xt_rsc_1_17_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_17_i_s_waddr_core,
      xt_rsc_1_17_i_s_waddr_core_sct);
  assign xt_rsc_1_17_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_17_i_s_din, xt_rsc_1_17_i_s_din_bfwt,
      xt_rsc_1_17_i_bcwt);
  assign xt_rsc_1_17_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_17_i_s_dout_core, xt_rsc_1_17_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_17_i_bcwt <= 1'b0;
      xt_rsc_1_17_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_17_i_bcwt <= ~((~(xt_rsc_1_17_i_bcwt | xt_rsc_1_17_i_biwt)) | xt_rsc_1_17_i_bdwt);
      xt_rsc_1_17_i_bcwt_1 <= ~((~(xt_rsc_1_17_i_bcwt_1 | xt_rsc_1_17_i_biwt_1))
          | xt_rsc_1_17_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_17_i_biwt ) begin
      xt_rsc_1_17_i_s_din_bfwt <= xt_rsc_1_17_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_17_i_xt_rsc_1_17_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_17_i_xt_rsc_1_17_wait_ctrl (
  core_wen, xt_rsc_1_17_i_oswt, xt_rsc_1_17_i_oswt_1, xt_rsc_1_17_i_biwt, xt_rsc_1_17_i_bdwt,
      xt_rsc_1_17_i_bcwt, xt_rsc_1_17_i_s_re_core_sct, xt_rsc_1_17_i_biwt_1, xt_rsc_1_17_i_bdwt_2,
      xt_rsc_1_17_i_bcwt_1, xt_rsc_1_17_i_s_we_core_sct, xt_rsc_1_17_i_s_rrdy, xt_rsc_1_17_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_17_i_oswt;
  input xt_rsc_1_17_i_oswt_1;
  output xt_rsc_1_17_i_biwt;
  output xt_rsc_1_17_i_bdwt;
  input xt_rsc_1_17_i_bcwt;
  output xt_rsc_1_17_i_s_re_core_sct;
  output xt_rsc_1_17_i_biwt_1;
  output xt_rsc_1_17_i_bdwt_2;
  input xt_rsc_1_17_i_bcwt_1;
  output xt_rsc_1_17_i_s_we_core_sct;
  input xt_rsc_1_17_i_s_rrdy;
  input xt_rsc_1_17_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_17_i_ogwt;
  wire xt_rsc_1_17_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_17_i_bdwt = xt_rsc_1_17_i_oswt & core_wen;
  assign xt_rsc_1_17_i_biwt = xt_rsc_1_17_i_ogwt & xt_rsc_1_17_i_s_rrdy;
  assign xt_rsc_1_17_i_ogwt = xt_rsc_1_17_i_oswt & (~ xt_rsc_1_17_i_bcwt);
  assign xt_rsc_1_17_i_s_re_core_sct = xt_rsc_1_17_i_ogwt;
  assign xt_rsc_1_17_i_bdwt_2 = xt_rsc_1_17_i_oswt_1 & core_wen;
  assign xt_rsc_1_17_i_biwt_1 = xt_rsc_1_17_i_ogwt_1 & xt_rsc_1_17_i_s_wrdy;
  assign xt_rsc_1_17_i_ogwt_1 = xt_rsc_1_17_i_oswt_1 & (~ xt_rsc_1_17_i_bcwt_1);
  assign xt_rsc_1_17_i_s_we_core_sct = xt_rsc_1_17_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_16_i_xt_rsc_1_16_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_16_i_xt_rsc_1_16_wait_dp (
  clk, rst, xt_rsc_1_16_i_oswt, xt_rsc_1_16_i_wen_comp, xt_rsc_1_16_i_oswt_1, xt_rsc_1_16_i_wen_comp_1,
      xt_rsc_1_16_i_s_raddr_core, xt_rsc_1_16_i_s_waddr_core, xt_rsc_1_16_i_s_din_mxwt,
      xt_rsc_1_16_i_s_dout_core, xt_rsc_1_16_i_biwt, xt_rsc_1_16_i_bdwt, xt_rsc_1_16_i_bcwt,
      xt_rsc_1_16_i_biwt_1, xt_rsc_1_16_i_bdwt_2, xt_rsc_1_16_i_bcwt_1, xt_rsc_1_16_i_s_raddr,
      xt_rsc_1_16_i_s_raddr_core_sct, xt_rsc_1_16_i_s_waddr, xt_rsc_1_16_i_s_waddr_core_sct,
      xt_rsc_1_16_i_s_din, xt_rsc_1_16_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_16_i_oswt;
  output xt_rsc_1_16_i_wen_comp;
  input xt_rsc_1_16_i_oswt_1;
  output xt_rsc_1_16_i_wen_comp_1;
  input [3:0] xt_rsc_1_16_i_s_raddr_core;
  input [3:0] xt_rsc_1_16_i_s_waddr_core;
  output [31:0] xt_rsc_1_16_i_s_din_mxwt;
  input [31:0] xt_rsc_1_16_i_s_dout_core;
  input xt_rsc_1_16_i_biwt;
  input xt_rsc_1_16_i_bdwt;
  output xt_rsc_1_16_i_bcwt;
  reg xt_rsc_1_16_i_bcwt;
  input xt_rsc_1_16_i_biwt_1;
  input xt_rsc_1_16_i_bdwt_2;
  output xt_rsc_1_16_i_bcwt_1;
  reg xt_rsc_1_16_i_bcwt_1;
  output [3:0] xt_rsc_1_16_i_s_raddr;
  input xt_rsc_1_16_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_16_i_s_waddr;
  input xt_rsc_1_16_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_16_i_s_din;
  output [31:0] xt_rsc_1_16_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_16_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_16_i_wen_comp = (~ xt_rsc_1_16_i_oswt) | xt_rsc_1_16_i_biwt | xt_rsc_1_16_i_bcwt;
  assign xt_rsc_1_16_i_wen_comp_1 = (~ xt_rsc_1_16_i_oswt_1) | xt_rsc_1_16_i_biwt_1
      | xt_rsc_1_16_i_bcwt_1;
  assign xt_rsc_1_16_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_16_i_s_raddr_core,
      xt_rsc_1_16_i_s_raddr_core_sct);
  assign xt_rsc_1_16_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_16_i_s_waddr_core,
      xt_rsc_1_16_i_s_waddr_core_sct);
  assign xt_rsc_1_16_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_16_i_s_din, xt_rsc_1_16_i_s_din_bfwt,
      xt_rsc_1_16_i_bcwt);
  assign xt_rsc_1_16_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_16_i_s_dout_core, xt_rsc_1_16_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_16_i_bcwt <= 1'b0;
      xt_rsc_1_16_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_16_i_bcwt <= ~((~(xt_rsc_1_16_i_bcwt | xt_rsc_1_16_i_biwt)) | xt_rsc_1_16_i_bdwt);
      xt_rsc_1_16_i_bcwt_1 <= ~((~(xt_rsc_1_16_i_bcwt_1 | xt_rsc_1_16_i_biwt_1))
          | xt_rsc_1_16_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_16_i_biwt ) begin
      xt_rsc_1_16_i_s_din_bfwt <= xt_rsc_1_16_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_16_i_xt_rsc_1_16_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_16_i_xt_rsc_1_16_wait_ctrl (
  core_wen, xt_rsc_1_16_i_oswt, xt_rsc_1_16_i_oswt_1, xt_rsc_1_16_i_biwt, xt_rsc_1_16_i_bdwt,
      xt_rsc_1_16_i_bcwt, xt_rsc_1_16_i_s_re_core_sct, xt_rsc_1_16_i_biwt_1, xt_rsc_1_16_i_bdwt_2,
      xt_rsc_1_16_i_bcwt_1, xt_rsc_1_16_i_s_we_core_sct, xt_rsc_1_16_i_s_rrdy, xt_rsc_1_16_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_16_i_oswt;
  input xt_rsc_1_16_i_oswt_1;
  output xt_rsc_1_16_i_biwt;
  output xt_rsc_1_16_i_bdwt;
  input xt_rsc_1_16_i_bcwt;
  output xt_rsc_1_16_i_s_re_core_sct;
  output xt_rsc_1_16_i_biwt_1;
  output xt_rsc_1_16_i_bdwt_2;
  input xt_rsc_1_16_i_bcwt_1;
  output xt_rsc_1_16_i_s_we_core_sct;
  input xt_rsc_1_16_i_s_rrdy;
  input xt_rsc_1_16_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_16_i_ogwt;
  wire xt_rsc_1_16_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_16_i_bdwt = xt_rsc_1_16_i_oswt & core_wen;
  assign xt_rsc_1_16_i_biwt = xt_rsc_1_16_i_ogwt & xt_rsc_1_16_i_s_rrdy;
  assign xt_rsc_1_16_i_ogwt = xt_rsc_1_16_i_oswt & (~ xt_rsc_1_16_i_bcwt);
  assign xt_rsc_1_16_i_s_re_core_sct = xt_rsc_1_16_i_ogwt;
  assign xt_rsc_1_16_i_bdwt_2 = xt_rsc_1_16_i_oswt_1 & core_wen;
  assign xt_rsc_1_16_i_biwt_1 = xt_rsc_1_16_i_ogwt_1 & xt_rsc_1_16_i_s_wrdy;
  assign xt_rsc_1_16_i_ogwt_1 = xt_rsc_1_16_i_oswt_1 & (~ xt_rsc_1_16_i_bcwt_1);
  assign xt_rsc_1_16_i_s_we_core_sct = xt_rsc_1_16_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_15_i_xt_rsc_1_15_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_15_i_xt_rsc_1_15_wait_dp (
  clk, rst, xt_rsc_1_15_i_oswt, xt_rsc_1_15_i_wen_comp, xt_rsc_1_15_i_oswt_1, xt_rsc_1_15_i_wen_comp_1,
      xt_rsc_1_15_i_s_raddr_core, xt_rsc_1_15_i_s_waddr_core, xt_rsc_1_15_i_s_din_mxwt,
      xt_rsc_1_15_i_s_dout_core, xt_rsc_1_15_i_biwt, xt_rsc_1_15_i_bdwt, xt_rsc_1_15_i_bcwt,
      xt_rsc_1_15_i_biwt_1, xt_rsc_1_15_i_bdwt_2, xt_rsc_1_15_i_bcwt_1, xt_rsc_1_15_i_s_raddr,
      xt_rsc_1_15_i_s_raddr_core_sct, xt_rsc_1_15_i_s_waddr, xt_rsc_1_15_i_s_waddr_core_sct,
      xt_rsc_1_15_i_s_din, xt_rsc_1_15_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_15_i_oswt;
  output xt_rsc_1_15_i_wen_comp;
  input xt_rsc_1_15_i_oswt_1;
  output xt_rsc_1_15_i_wen_comp_1;
  input [3:0] xt_rsc_1_15_i_s_raddr_core;
  input [3:0] xt_rsc_1_15_i_s_waddr_core;
  output [31:0] xt_rsc_1_15_i_s_din_mxwt;
  input [31:0] xt_rsc_1_15_i_s_dout_core;
  input xt_rsc_1_15_i_biwt;
  input xt_rsc_1_15_i_bdwt;
  output xt_rsc_1_15_i_bcwt;
  reg xt_rsc_1_15_i_bcwt;
  input xt_rsc_1_15_i_biwt_1;
  input xt_rsc_1_15_i_bdwt_2;
  output xt_rsc_1_15_i_bcwt_1;
  reg xt_rsc_1_15_i_bcwt_1;
  output [3:0] xt_rsc_1_15_i_s_raddr;
  input xt_rsc_1_15_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_15_i_s_waddr;
  input xt_rsc_1_15_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_15_i_s_din;
  output [31:0] xt_rsc_1_15_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_15_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_15_i_wen_comp = (~ xt_rsc_1_15_i_oswt) | xt_rsc_1_15_i_biwt | xt_rsc_1_15_i_bcwt;
  assign xt_rsc_1_15_i_wen_comp_1 = (~ xt_rsc_1_15_i_oswt_1) | xt_rsc_1_15_i_biwt_1
      | xt_rsc_1_15_i_bcwt_1;
  assign xt_rsc_1_15_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_15_i_s_raddr_core,
      xt_rsc_1_15_i_s_raddr_core_sct);
  assign xt_rsc_1_15_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_15_i_s_waddr_core,
      xt_rsc_1_15_i_s_waddr_core_sct);
  assign xt_rsc_1_15_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_15_i_s_din, xt_rsc_1_15_i_s_din_bfwt,
      xt_rsc_1_15_i_bcwt);
  assign xt_rsc_1_15_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_15_i_s_dout_core, xt_rsc_1_15_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_15_i_bcwt <= 1'b0;
      xt_rsc_1_15_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_15_i_bcwt <= ~((~(xt_rsc_1_15_i_bcwt | xt_rsc_1_15_i_biwt)) | xt_rsc_1_15_i_bdwt);
      xt_rsc_1_15_i_bcwt_1 <= ~((~(xt_rsc_1_15_i_bcwt_1 | xt_rsc_1_15_i_biwt_1))
          | xt_rsc_1_15_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_15_i_biwt ) begin
      xt_rsc_1_15_i_s_din_bfwt <= xt_rsc_1_15_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_15_i_xt_rsc_1_15_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_15_i_xt_rsc_1_15_wait_ctrl (
  core_wen, xt_rsc_1_15_i_oswt, xt_rsc_1_15_i_oswt_1, xt_rsc_1_15_i_biwt, xt_rsc_1_15_i_bdwt,
      xt_rsc_1_15_i_bcwt, xt_rsc_1_15_i_s_re_core_sct, xt_rsc_1_15_i_biwt_1, xt_rsc_1_15_i_bdwt_2,
      xt_rsc_1_15_i_bcwt_1, xt_rsc_1_15_i_s_we_core_sct, xt_rsc_1_15_i_s_rrdy, xt_rsc_1_15_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_15_i_oswt;
  input xt_rsc_1_15_i_oswt_1;
  output xt_rsc_1_15_i_biwt;
  output xt_rsc_1_15_i_bdwt;
  input xt_rsc_1_15_i_bcwt;
  output xt_rsc_1_15_i_s_re_core_sct;
  output xt_rsc_1_15_i_biwt_1;
  output xt_rsc_1_15_i_bdwt_2;
  input xt_rsc_1_15_i_bcwt_1;
  output xt_rsc_1_15_i_s_we_core_sct;
  input xt_rsc_1_15_i_s_rrdy;
  input xt_rsc_1_15_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_15_i_ogwt;
  wire xt_rsc_1_15_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_15_i_bdwt = xt_rsc_1_15_i_oswt & core_wen;
  assign xt_rsc_1_15_i_biwt = xt_rsc_1_15_i_ogwt & xt_rsc_1_15_i_s_rrdy;
  assign xt_rsc_1_15_i_ogwt = xt_rsc_1_15_i_oswt & (~ xt_rsc_1_15_i_bcwt);
  assign xt_rsc_1_15_i_s_re_core_sct = xt_rsc_1_15_i_ogwt;
  assign xt_rsc_1_15_i_bdwt_2 = xt_rsc_1_15_i_oswt_1 & core_wen;
  assign xt_rsc_1_15_i_biwt_1 = xt_rsc_1_15_i_ogwt_1 & xt_rsc_1_15_i_s_wrdy;
  assign xt_rsc_1_15_i_ogwt_1 = xt_rsc_1_15_i_oswt_1 & (~ xt_rsc_1_15_i_bcwt_1);
  assign xt_rsc_1_15_i_s_we_core_sct = xt_rsc_1_15_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_14_i_xt_rsc_1_14_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_14_i_xt_rsc_1_14_wait_dp (
  clk, rst, xt_rsc_1_14_i_oswt, xt_rsc_1_14_i_wen_comp, xt_rsc_1_14_i_oswt_1, xt_rsc_1_14_i_wen_comp_1,
      xt_rsc_1_14_i_s_raddr_core, xt_rsc_1_14_i_s_waddr_core, xt_rsc_1_14_i_s_din_mxwt,
      xt_rsc_1_14_i_s_dout_core, xt_rsc_1_14_i_biwt, xt_rsc_1_14_i_bdwt, xt_rsc_1_14_i_bcwt,
      xt_rsc_1_14_i_biwt_1, xt_rsc_1_14_i_bdwt_2, xt_rsc_1_14_i_bcwt_1, xt_rsc_1_14_i_s_raddr,
      xt_rsc_1_14_i_s_raddr_core_sct, xt_rsc_1_14_i_s_waddr, xt_rsc_1_14_i_s_waddr_core_sct,
      xt_rsc_1_14_i_s_din, xt_rsc_1_14_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_14_i_oswt;
  output xt_rsc_1_14_i_wen_comp;
  input xt_rsc_1_14_i_oswt_1;
  output xt_rsc_1_14_i_wen_comp_1;
  input [3:0] xt_rsc_1_14_i_s_raddr_core;
  input [3:0] xt_rsc_1_14_i_s_waddr_core;
  output [31:0] xt_rsc_1_14_i_s_din_mxwt;
  input [31:0] xt_rsc_1_14_i_s_dout_core;
  input xt_rsc_1_14_i_biwt;
  input xt_rsc_1_14_i_bdwt;
  output xt_rsc_1_14_i_bcwt;
  reg xt_rsc_1_14_i_bcwt;
  input xt_rsc_1_14_i_biwt_1;
  input xt_rsc_1_14_i_bdwt_2;
  output xt_rsc_1_14_i_bcwt_1;
  reg xt_rsc_1_14_i_bcwt_1;
  output [3:0] xt_rsc_1_14_i_s_raddr;
  input xt_rsc_1_14_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_14_i_s_waddr;
  input xt_rsc_1_14_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_14_i_s_din;
  output [31:0] xt_rsc_1_14_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_14_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_14_i_wen_comp = (~ xt_rsc_1_14_i_oswt) | xt_rsc_1_14_i_biwt | xt_rsc_1_14_i_bcwt;
  assign xt_rsc_1_14_i_wen_comp_1 = (~ xt_rsc_1_14_i_oswt_1) | xt_rsc_1_14_i_biwt_1
      | xt_rsc_1_14_i_bcwt_1;
  assign xt_rsc_1_14_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_14_i_s_raddr_core,
      xt_rsc_1_14_i_s_raddr_core_sct);
  assign xt_rsc_1_14_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_14_i_s_waddr_core,
      xt_rsc_1_14_i_s_waddr_core_sct);
  assign xt_rsc_1_14_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_14_i_s_din, xt_rsc_1_14_i_s_din_bfwt,
      xt_rsc_1_14_i_bcwt);
  assign xt_rsc_1_14_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_14_i_s_dout_core, xt_rsc_1_14_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_14_i_bcwt <= 1'b0;
      xt_rsc_1_14_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_14_i_bcwt <= ~((~(xt_rsc_1_14_i_bcwt | xt_rsc_1_14_i_biwt)) | xt_rsc_1_14_i_bdwt);
      xt_rsc_1_14_i_bcwt_1 <= ~((~(xt_rsc_1_14_i_bcwt_1 | xt_rsc_1_14_i_biwt_1))
          | xt_rsc_1_14_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_14_i_biwt ) begin
      xt_rsc_1_14_i_s_din_bfwt <= xt_rsc_1_14_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_14_i_xt_rsc_1_14_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_14_i_xt_rsc_1_14_wait_ctrl (
  core_wen, xt_rsc_1_14_i_oswt, xt_rsc_1_14_i_oswt_1, xt_rsc_1_14_i_biwt, xt_rsc_1_14_i_bdwt,
      xt_rsc_1_14_i_bcwt, xt_rsc_1_14_i_s_re_core_sct, xt_rsc_1_14_i_biwt_1, xt_rsc_1_14_i_bdwt_2,
      xt_rsc_1_14_i_bcwt_1, xt_rsc_1_14_i_s_we_core_sct, xt_rsc_1_14_i_s_rrdy, xt_rsc_1_14_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_14_i_oswt;
  input xt_rsc_1_14_i_oswt_1;
  output xt_rsc_1_14_i_biwt;
  output xt_rsc_1_14_i_bdwt;
  input xt_rsc_1_14_i_bcwt;
  output xt_rsc_1_14_i_s_re_core_sct;
  output xt_rsc_1_14_i_biwt_1;
  output xt_rsc_1_14_i_bdwt_2;
  input xt_rsc_1_14_i_bcwt_1;
  output xt_rsc_1_14_i_s_we_core_sct;
  input xt_rsc_1_14_i_s_rrdy;
  input xt_rsc_1_14_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_14_i_ogwt;
  wire xt_rsc_1_14_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_14_i_bdwt = xt_rsc_1_14_i_oswt & core_wen;
  assign xt_rsc_1_14_i_biwt = xt_rsc_1_14_i_ogwt & xt_rsc_1_14_i_s_rrdy;
  assign xt_rsc_1_14_i_ogwt = xt_rsc_1_14_i_oswt & (~ xt_rsc_1_14_i_bcwt);
  assign xt_rsc_1_14_i_s_re_core_sct = xt_rsc_1_14_i_ogwt;
  assign xt_rsc_1_14_i_bdwt_2 = xt_rsc_1_14_i_oswt_1 & core_wen;
  assign xt_rsc_1_14_i_biwt_1 = xt_rsc_1_14_i_ogwt_1 & xt_rsc_1_14_i_s_wrdy;
  assign xt_rsc_1_14_i_ogwt_1 = xt_rsc_1_14_i_oswt_1 & (~ xt_rsc_1_14_i_bcwt_1);
  assign xt_rsc_1_14_i_s_we_core_sct = xt_rsc_1_14_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_13_i_xt_rsc_1_13_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_13_i_xt_rsc_1_13_wait_dp (
  clk, rst, xt_rsc_1_13_i_oswt, xt_rsc_1_13_i_wen_comp, xt_rsc_1_13_i_oswt_1, xt_rsc_1_13_i_wen_comp_1,
      xt_rsc_1_13_i_s_raddr_core, xt_rsc_1_13_i_s_waddr_core, xt_rsc_1_13_i_s_din_mxwt,
      xt_rsc_1_13_i_s_dout_core, xt_rsc_1_13_i_biwt, xt_rsc_1_13_i_bdwt, xt_rsc_1_13_i_bcwt,
      xt_rsc_1_13_i_biwt_1, xt_rsc_1_13_i_bdwt_2, xt_rsc_1_13_i_bcwt_1, xt_rsc_1_13_i_s_raddr,
      xt_rsc_1_13_i_s_raddr_core_sct, xt_rsc_1_13_i_s_waddr, xt_rsc_1_13_i_s_waddr_core_sct,
      xt_rsc_1_13_i_s_din, xt_rsc_1_13_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_13_i_oswt;
  output xt_rsc_1_13_i_wen_comp;
  input xt_rsc_1_13_i_oswt_1;
  output xt_rsc_1_13_i_wen_comp_1;
  input [3:0] xt_rsc_1_13_i_s_raddr_core;
  input [3:0] xt_rsc_1_13_i_s_waddr_core;
  output [31:0] xt_rsc_1_13_i_s_din_mxwt;
  input [31:0] xt_rsc_1_13_i_s_dout_core;
  input xt_rsc_1_13_i_biwt;
  input xt_rsc_1_13_i_bdwt;
  output xt_rsc_1_13_i_bcwt;
  reg xt_rsc_1_13_i_bcwt;
  input xt_rsc_1_13_i_biwt_1;
  input xt_rsc_1_13_i_bdwt_2;
  output xt_rsc_1_13_i_bcwt_1;
  reg xt_rsc_1_13_i_bcwt_1;
  output [3:0] xt_rsc_1_13_i_s_raddr;
  input xt_rsc_1_13_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_13_i_s_waddr;
  input xt_rsc_1_13_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_13_i_s_din;
  output [31:0] xt_rsc_1_13_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_13_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_13_i_wen_comp = (~ xt_rsc_1_13_i_oswt) | xt_rsc_1_13_i_biwt | xt_rsc_1_13_i_bcwt;
  assign xt_rsc_1_13_i_wen_comp_1 = (~ xt_rsc_1_13_i_oswt_1) | xt_rsc_1_13_i_biwt_1
      | xt_rsc_1_13_i_bcwt_1;
  assign xt_rsc_1_13_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_13_i_s_raddr_core,
      xt_rsc_1_13_i_s_raddr_core_sct);
  assign xt_rsc_1_13_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_13_i_s_waddr_core,
      xt_rsc_1_13_i_s_waddr_core_sct);
  assign xt_rsc_1_13_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_13_i_s_din, xt_rsc_1_13_i_s_din_bfwt,
      xt_rsc_1_13_i_bcwt);
  assign xt_rsc_1_13_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_13_i_s_dout_core, xt_rsc_1_13_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_13_i_bcwt <= 1'b0;
      xt_rsc_1_13_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_13_i_bcwt <= ~((~(xt_rsc_1_13_i_bcwt | xt_rsc_1_13_i_biwt)) | xt_rsc_1_13_i_bdwt);
      xt_rsc_1_13_i_bcwt_1 <= ~((~(xt_rsc_1_13_i_bcwt_1 | xt_rsc_1_13_i_biwt_1))
          | xt_rsc_1_13_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_13_i_biwt ) begin
      xt_rsc_1_13_i_s_din_bfwt <= xt_rsc_1_13_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_13_i_xt_rsc_1_13_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_13_i_xt_rsc_1_13_wait_ctrl (
  core_wen, xt_rsc_1_13_i_oswt, xt_rsc_1_13_i_oswt_1, xt_rsc_1_13_i_biwt, xt_rsc_1_13_i_bdwt,
      xt_rsc_1_13_i_bcwt, xt_rsc_1_13_i_s_re_core_sct, xt_rsc_1_13_i_biwt_1, xt_rsc_1_13_i_bdwt_2,
      xt_rsc_1_13_i_bcwt_1, xt_rsc_1_13_i_s_we_core_sct, xt_rsc_1_13_i_s_rrdy, xt_rsc_1_13_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_13_i_oswt;
  input xt_rsc_1_13_i_oswt_1;
  output xt_rsc_1_13_i_biwt;
  output xt_rsc_1_13_i_bdwt;
  input xt_rsc_1_13_i_bcwt;
  output xt_rsc_1_13_i_s_re_core_sct;
  output xt_rsc_1_13_i_biwt_1;
  output xt_rsc_1_13_i_bdwt_2;
  input xt_rsc_1_13_i_bcwt_1;
  output xt_rsc_1_13_i_s_we_core_sct;
  input xt_rsc_1_13_i_s_rrdy;
  input xt_rsc_1_13_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_13_i_ogwt;
  wire xt_rsc_1_13_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_13_i_bdwt = xt_rsc_1_13_i_oswt & core_wen;
  assign xt_rsc_1_13_i_biwt = xt_rsc_1_13_i_ogwt & xt_rsc_1_13_i_s_rrdy;
  assign xt_rsc_1_13_i_ogwt = xt_rsc_1_13_i_oswt & (~ xt_rsc_1_13_i_bcwt);
  assign xt_rsc_1_13_i_s_re_core_sct = xt_rsc_1_13_i_ogwt;
  assign xt_rsc_1_13_i_bdwt_2 = xt_rsc_1_13_i_oswt_1 & core_wen;
  assign xt_rsc_1_13_i_biwt_1 = xt_rsc_1_13_i_ogwt_1 & xt_rsc_1_13_i_s_wrdy;
  assign xt_rsc_1_13_i_ogwt_1 = xt_rsc_1_13_i_oswt_1 & (~ xt_rsc_1_13_i_bcwt_1);
  assign xt_rsc_1_13_i_s_we_core_sct = xt_rsc_1_13_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_12_i_xt_rsc_1_12_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_12_i_xt_rsc_1_12_wait_dp (
  clk, rst, xt_rsc_1_12_i_oswt, xt_rsc_1_12_i_wen_comp, xt_rsc_1_12_i_oswt_1, xt_rsc_1_12_i_wen_comp_1,
      xt_rsc_1_12_i_s_raddr_core, xt_rsc_1_12_i_s_waddr_core, xt_rsc_1_12_i_s_din_mxwt,
      xt_rsc_1_12_i_s_dout_core, xt_rsc_1_12_i_biwt, xt_rsc_1_12_i_bdwt, xt_rsc_1_12_i_bcwt,
      xt_rsc_1_12_i_biwt_1, xt_rsc_1_12_i_bdwt_2, xt_rsc_1_12_i_bcwt_1, xt_rsc_1_12_i_s_raddr,
      xt_rsc_1_12_i_s_raddr_core_sct, xt_rsc_1_12_i_s_waddr, xt_rsc_1_12_i_s_waddr_core_sct,
      xt_rsc_1_12_i_s_din, xt_rsc_1_12_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_12_i_oswt;
  output xt_rsc_1_12_i_wen_comp;
  input xt_rsc_1_12_i_oswt_1;
  output xt_rsc_1_12_i_wen_comp_1;
  input [3:0] xt_rsc_1_12_i_s_raddr_core;
  input [3:0] xt_rsc_1_12_i_s_waddr_core;
  output [31:0] xt_rsc_1_12_i_s_din_mxwt;
  input [31:0] xt_rsc_1_12_i_s_dout_core;
  input xt_rsc_1_12_i_biwt;
  input xt_rsc_1_12_i_bdwt;
  output xt_rsc_1_12_i_bcwt;
  reg xt_rsc_1_12_i_bcwt;
  input xt_rsc_1_12_i_biwt_1;
  input xt_rsc_1_12_i_bdwt_2;
  output xt_rsc_1_12_i_bcwt_1;
  reg xt_rsc_1_12_i_bcwt_1;
  output [3:0] xt_rsc_1_12_i_s_raddr;
  input xt_rsc_1_12_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_12_i_s_waddr;
  input xt_rsc_1_12_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_12_i_s_din;
  output [31:0] xt_rsc_1_12_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_12_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_12_i_wen_comp = (~ xt_rsc_1_12_i_oswt) | xt_rsc_1_12_i_biwt | xt_rsc_1_12_i_bcwt;
  assign xt_rsc_1_12_i_wen_comp_1 = (~ xt_rsc_1_12_i_oswt_1) | xt_rsc_1_12_i_biwt_1
      | xt_rsc_1_12_i_bcwt_1;
  assign xt_rsc_1_12_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_12_i_s_raddr_core,
      xt_rsc_1_12_i_s_raddr_core_sct);
  assign xt_rsc_1_12_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_12_i_s_waddr_core,
      xt_rsc_1_12_i_s_waddr_core_sct);
  assign xt_rsc_1_12_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_12_i_s_din, xt_rsc_1_12_i_s_din_bfwt,
      xt_rsc_1_12_i_bcwt);
  assign xt_rsc_1_12_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_12_i_s_dout_core, xt_rsc_1_12_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_12_i_bcwt <= 1'b0;
      xt_rsc_1_12_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_12_i_bcwt <= ~((~(xt_rsc_1_12_i_bcwt | xt_rsc_1_12_i_biwt)) | xt_rsc_1_12_i_bdwt);
      xt_rsc_1_12_i_bcwt_1 <= ~((~(xt_rsc_1_12_i_bcwt_1 | xt_rsc_1_12_i_biwt_1))
          | xt_rsc_1_12_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_12_i_biwt ) begin
      xt_rsc_1_12_i_s_din_bfwt <= xt_rsc_1_12_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_12_i_xt_rsc_1_12_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_12_i_xt_rsc_1_12_wait_ctrl (
  core_wen, xt_rsc_1_12_i_oswt, xt_rsc_1_12_i_oswt_1, xt_rsc_1_12_i_biwt, xt_rsc_1_12_i_bdwt,
      xt_rsc_1_12_i_bcwt, xt_rsc_1_12_i_s_re_core_sct, xt_rsc_1_12_i_biwt_1, xt_rsc_1_12_i_bdwt_2,
      xt_rsc_1_12_i_bcwt_1, xt_rsc_1_12_i_s_we_core_sct, xt_rsc_1_12_i_s_rrdy, xt_rsc_1_12_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_12_i_oswt;
  input xt_rsc_1_12_i_oswt_1;
  output xt_rsc_1_12_i_biwt;
  output xt_rsc_1_12_i_bdwt;
  input xt_rsc_1_12_i_bcwt;
  output xt_rsc_1_12_i_s_re_core_sct;
  output xt_rsc_1_12_i_biwt_1;
  output xt_rsc_1_12_i_bdwt_2;
  input xt_rsc_1_12_i_bcwt_1;
  output xt_rsc_1_12_i_s_we_core_sct;
  input xt_rsc_1_12_i_s_rrdy;
  input xt_rsc_1_12_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_12_i_ogwt;
  wire xt_rsc_1_12_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_12_i_bdwt = xt_rsc_1_12_i_oswt & core_wen;
  assign xt_rsc_1_12_i_biwt = xt_rsc_1_12_i_ogwt & xt_rsc_1_12_i_s_rrdy;
  assign xt_rsc_1_12_i_ogwt = xt_rsc_1_12_i_oswt & (~ xt_rsc_1_12_i_bcwt);
  assign xt_rsc_1_12_i_s_re_core_sct = xt_rsc_1_12_i_ogwt;
  assign xt_rsc_1_12_i_bdwt_2 = xt_rsc_1_12_i_oswt_1 & core_wen;
  assign xt_rsc_1_12_i_biwt_1 = xt_rsc_1_12_i_ogwt_1 & xt_rsc_1_12_i_s_wrdy;
  assign xt_rsc_1_12_i_ogwt_1 = xt_rsc_1_12_i_oswt_1 & (~ xt_rsc_1_12_i_bcwt_1);
  assign xt_rsc_1_12_i_s_we_core_sct = xt_rsc_1_12_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_11_i_xt_rsc_1_11_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_11_i_xt_rsc_1_11_wait_dp (
  clk, rst, xt_rsc_1_11_i_oswt, xt_rsc_1_11_i_wen_comp, xt_rsc_1_11_i_oswt_1, xt_rsc_1_11_i_wen_comp_1,
      xt_rsc_1_11_i_s_raddr_core, xt_rsc_1_11_i_s_waddr_core, xt_rsc_1_11_i_s_din_mxwt,
      xt_rsc_1_11_i_s_dout_core, xt_rsc_1_11_i_biwt, xt_rsc_1_11_i_bdwt, xt_rsc_1_11_i_bcwt,
      xt_rsc_1_11_i_biwt_1, xt_rsc_1_11_i_bdwt_2, xt_rsc_1_11_i_bcwt_1, xt_rsc_1_11_i_s_raddr,
      xt_rsc_1_11_i_s_raddr_core_sct, xt_rsc_1_11_i_s_waddr, xt_rsc_1_11_i_s_waddr_core_sct,
      xt_rsc_1_11_i_s_din, xt_rsc_1_11_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_11_i_oswt;
  output xt_rsc_1_11_i_wen_comp;
  input xt_rsc_1_11_i_oswt_1;
  output xt_rsc_1_11_i_wen_comp_1;
  input [3:0] xt_rsc_1_11_i_s_raddr_core;
  input [3:0] xt_rsc_1_11_i_s_waddr_core;
  output [31:0] xt_rsc_1_11_i_s_din_mxwt;
  input [31:0] xt_rsc_1_11_i_s_dout_core;
  input xt_rsc_1_11_i_biwt;
  input xt_rsc_1_11_i_bdwt;
  output xt_rsc_1_11_i_bcwt;
  reg xt_rsc_1_11_i_bcwt;
  input xt_rsc_1_11_i_biwt_1;
  input xt_rsc_1_11_i_bdwt_2;
  output xt_rsc_1_11_i_bcwt_1;
  reg xt_rsc_1_11_i_bcwt_1;
  output [3:0] xt_rsc_1_11_i_s_raddr;
  input xt_rsc_1_11_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_11_i_s_waddr;
  input xt_rsc_1_11_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_11_i_s_din;
  output [31:0] xt_rsc_1_11_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_11_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_11_i_wen_comp = (~ xt_rsc_1_11_i_oswt) | xt_rsc_1_11_i_biwt | xt_rsc_1_11_i_bcwt;
  assign xt_rsc_1_11_i_wen_comp_1 = (~ xt_rsc_1_11_i_oswt_1) | xt_rsc_1_11_i_biwt_1
      | xt_rsc_1_11_i_bcwt_1;
  assign xt_rsc_1_11_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_11_i_s_raddr_core,
      xt_rsc_1_11_i_s_raddr_core_sct);
  assign xt_rsc_1_11_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_11_i_s_waddr_core,
      xt_rsc_1_11_i_s_waddr_core_sct);
  assign xt_rsc_1_11_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_11_i_s_din, xt_rsc_1_11_i_s_din_bfwt,
      xt_rsc_1_11_i_bcwt);
  assign xt_rsc_1_11_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_11_i_s_dout_core, xt_rsc_1_11_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_11_i_bcwt <= 1'b0;
      xt_rsc_1_11_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_11_i_bcwt <= ~((~(xt_rsc_1_11_i_bcwt | xt_rsc_1_11_i_biwt)) | xt_rsc_1_11_i_bdwt);
      xt_rsc_1_11_i_bcwt_1 <= ~((~(xt_rsc_1_11_i_bcwt_1 | xt_rsc_1_11_i_biwt_1))
          | xt_rsc_1_11_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_11_i_biwt ) begin
      xt_rsc_1_11_i_s_din_bfwt <= xt_rsc_1_11_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_11_i_xt_rsc_1_11_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_11_i_xt_rsc_1_11_wait_ctrl (
  core_wen, xt_rsc_1_11_i_oswt, xt_rsc_1_11_i_oswt_1, xt_rsc_1_11_i_biwt, xt_rsc_1_11_i_bdwt,
      xt_rsc_1_11_i_bcwt, xt_rsc_1_11_i_s_re_core_sct, xt_rsc_1_11_i_biwt_1, xt_rsc_1_11_i_bdwt_2,
      xt_rsc_1_11_i_bcwt_1, xt_rsc_1_11_i_s_we_core_sct, xt_rsc_1_11_i_s_rrdy, xt_rsc_1_11_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_11_i_oswt;
  input xt_rsc_1_11_i_oswt_1;
  output xt_rsc_1_11_i_biwt;
  output xt_rsc_1_11_i_bdwt;
  input xt_rsc_1_11_i_bcwt;
  output xt_rsc_1_11_i_s_re_core_sct;
  output xt_rsc_1_11_i_biwt_1;
  output xt_rsc_1_11_i_bdwt_2;
  input xt_rsc_1_11_i_bcwt_1;
  output xt_rsc_1_11_i_s_we_core_sct;
  input xt_rsc_1_11_i_s_rrdy;
  input xt_rsc_1_11_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_11_i_ogwt;
  wire xt_rsc_1_11_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_11_i_bdwt = xt_rsc_1_11_i_oswt & core_wen;
  assign xt_rsc_1_11_i_biwt = xt_rsc_1_11_i_ogwt & xt_rsc_1_11_i_s_rrdy;
  assign xt_rsc_1_11_i_ogwt = xt_rsc_1_11_i_oswt & (~ xt_rsc_1_11_i_bcwt);
  assign xt_rsc_1_11_i_s_re_core_sct = xt_rsc_1_11_i_ogwt;
  assign xt_rsc_1_11_i_bdwt_2 = xt_rsc_1_11_i_oswt_1 & core_wen;
  assign xt_rsc_1_11_i_biwt_1 = xt_rsc_1_11_i_ogwt_1 & xt_rsc_1_11_i_s_wrdy;
  assign xt_rsc_1_11_i_ogwt_1 = xt_rsc_1_11_i_oswt_1 & (~ xt_rsc_1_11_i_bcwt_1);
  assign xt_rsc_1_11_i_s_we_core_sct = xt_rsc_1_11_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_10_i_xt_rsc_1_10_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_10_i_xt_rsc_1_10_wait_dp (
  clk, rst, xt_rsc_1_10_i_oswt, xt_rsc_1_10_i_wen_comp, xt_rsc_1_10_i_oswt_1, xt_rsc_1_10_i_wen_comp_1,
      xt_rsc_1_10_i_s_raddr_core, xt_rsc_1_10_i_s_waddr_core, xt_rsc_1_10_i_s_din_mxwt,
      xt_rsc_1_10_i_s_dout_core, xt_rsc_1_10_i_biwt, xt_rsc_1_10_i_bdwt, xt_rsc_1_10_i_bcwt,
      xt_rsc_1_10_i_biwt_1, xt_rsc_1_10_i_bdwt_2, xt_rsc_1_10_i_bcwt_1, xt_rsc_1_10_i_s_raddr,
      xt_rsc_1_10_i_s_raddr_core_sct, xt_rsc_1_10_i_s_waddr, xt_rsc_1_10_i_s_waddr_core_sct,
      xt_rsc_1_10_i_s_din, xt_rsc_1_10_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_10_i_oswt;
  output xt_rsc_1_10_i_wen_comp;
  input xt_rsc_1_10_i_oswt_1;
  output xt_rsc_1_10_i_wen_comp_1;
  input [3:0] xt_rsc_1_10_i_s_raddr_core;
  input [3:0] xt_rsc_1_10_i_s_waddr_core;
  output [31:0] xt_rsc_1_10_i_s_din_mxwt;
  input [31:0] xt_rsc_1_10_i_s_dout_core;
  input xt_rsc_1_10_i_biwt;
  input xt_rsc_1_10_i_bdwt;
  output xt_rsc_1_10_i_bcwt;
  reg xt_rsc_1_10_i_bcwt;
  input xt_rsc_1_10_i_biwt_1;
  input xt_rsc_1_10_i_bdwt_2;
  output xt_rsc_1_10_i_bcwt_1;
  reg xt_rsc_1_10_i_bcwt_1;
  output [3:0] xt_rsc_1_10_i_s_raddr;
  input xt_rsc_1_10_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_10_i_s_waddr;
  input xt_rsc_1_10_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_10_i_s_din;
  output [31:0] xt_rsc_1_10_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_10_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_10_i_wen_comp = (~ xt_rsc_1_10_i_oswt) | xt_rsc_1_10_i_biwt | xt_rsc_1_10_i_bcwt;
  assign xt_rsc_1_10_i_wen_comp_1 = (~ xt_rsc_1_10_i_oswt_1) | xt_rsc_1_10_i_biwt_1
      | xt_rsc_1_10_i_bcwt_1;
  assign xt_rsc_1_10_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_10_i_s_raddr_core,
      xt_rsc_1_10_i_s_raddr_core_sct);
  assign xt_rsc_1_10_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_10_i_s_waddr_core,
      xt_rsc_1_10_i_s_waddr_core_sct);
  assign xt_rsc_1_10_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_10_i_s_din, xt_rsc_1_10_i_s_din_bfwt,
      xt_rsc_1_10_i_bcwt);
  assign xt_rsc_1_10_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_10_i_s_dout_core, xt_rsc_1_10_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_10_i_bcwt <= 1'b0;
      xt_rsc_1_10_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_10_i_bcwt <= ~((~(xt_rsc_1_10_i_bcwt | xt_rsc_1_10_i_biwt)) | xt_rsc_1_10_i_bdwt);
      xt_rsc_1_10_i_bcwt_1 <= ~((~(xt_rsc_1_10_i_bcwt_1 | xt_rsc_1_10_i_biwt_1))
          | xt_rsc_1_10_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_10_i_biwt ) begin
      xt_rsc_1_10_i_s_din_bfwt <= xt_rsc_1_10_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_10_i_xt_rsc_1_10_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_10_i_xt_rsc_1_10_wait_ctrl (
  core_wen, xt_rsc_1_10_i_oswt, xt_rsc_1_10_i_oswt_1, xt_rsc_1_10_i_biwt, xt_rsc_1_10_i_bdwt,
      xt_rsc_1_10_i_bcwt, xt_rsc_1_10_i_s_re_core_sct, xt_rsc_1_10_i_biwt_1, xt_rsc_1_10_i_bdwt_2,
      xt_rsc_1_10_i_bcwt_1, xt_rsc_1_10_i_s_we_core_sct, xt_rsc_1_10_i_s_rrdy, xt_rsc_1_10_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_10_i_oswt;
  input xt_rsc_1_10_i_oswt_1;
  output xt_rsc_1_10_i_biwt;
  output xt_rsc_1_10_i_bdwt;
  input xt_rsc_1_10_i_bcwt;
  output xt_rsc_1_10_i_s_re_core_sct;
  output xt_rsc_1_10_i_biwt_1;
  output xt_rsc_1_10_i_bdwt_2;
  input xt_rsc_1_10_i_bcwt_1;
  output xt_rsc_1_10_i_s_we_core_sct;
  input xt_rsc_1_10_i_s_rrdy;
  input xt_rsc_1_10_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_10_i_ogwt;
  wire xt_rsc_1_10_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_10_i_bdwt = xt_rsc_1_10_i_oswt & core_wen;
  assign xt_rsc_1_10_i_biwt = xt_rsc_1_10_i_ogwt & xt_rsc_1_10_i_s_rrdy;
  assign xt_rsc_1_10_i_ogwt = xt_rsc_1_10_i_oswt & (~ xt_rsc_1_10_i_bcwt);
  assign xt_rsc_1_10_i_s_re_core_sct = xt_rsc_1_10_i_ogwt;
  assign xt_rsc_1_10_i_bdwt_2 = xt_rsc_1_10_i_oswt_1 & core_wen;
  assign xt_rsc_1_10_i_biwt_1 = xt_rsc_1_10_i_ogwt_1 & xt_rsc_1_10_i_s_wrdy;
  assign xt_rsc_1_10_i_ogwt_1 = xt_rsc_1_10_i_oswt_1 & (~ xt_rsc_1_10_i_bcwt_1);
  assign xt_rsc_1_10_i_s_we_core_sct = xt_rsc_1_10_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_9_i_xt_rsc_1_9_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_9_i_xt_rsc_1_9_wait_dp (
  clk, rst, xt_rsc_1_9_i_oswt, xt_rsc_1_9_i_wen_comp, xt_rsc_1_9_i_oswt_1, xt_rsc_1_9_i_wen_comp_1,
      xt_rsc_1_9_i_s_raddr_core, xt_rsc_1_9_i_s_waddr_core, xt_rsc_1_9_i_s_din_mxwt,
      xt_rsc_1_9_i_s_dout_core, xt_rsc_1_9_i_biwt, xt_rsc_1_9_i_bdwt, xt_rsc_1_9_i_bcwt,
      xt_rsc_1_9_i_biwt_1, xt_rsc_1_9_i_bdwt_2, xt_rsc_1_9_i_bcwt_1, xt_rsc_1_9_i_s_raddr,
      xt_rsc_1_9_i_s_raddr_core_sct, xt_rsc_1_9_i_s_waddr, xt_rsc_1_9_i_s_waddr_core_sct,
      xt_rsc_1_9_i_s_din, xt_rsc_1_9_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_9_i_oswt;
  output xt_rsc_1_9_i_wen_comp;
  input xt_rsc_1_9_i_oswt_1;
  output xt_rsc_1_9_i_wen_comp_1;
  input [3:0] xt_rsc_1_9_i_s_raddr_core;
  input [3:0] xt_rsc_1_9_i_s_waddr_core;
  output [31:0] xt_rsc_1_9_i_s_din_mxwt;
  input [31:0] xt_rsc_1_9_i_s_dout_core;
  input xt_rsc_1_9_i_biwt;
  input xt_rsc_1_9_i_bdwt;
  output xt_rsc_1_9_i_bcwt;
  reg xt_rsc_1_9_i_bcwt;
  input xt_rsc_1_9_i_biwt_1;
  input xt_rsc_1_9_i_bdwt_2;
  output xt_rsc_1_9_i_bcwt_1;
  reg xt_rsc_1_9_i_bcwt_1;
  output [3:0] xt_rsc_1_9_i_s_raddr;
  input xt_rsc_1_9_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_9_i_s_waddr;
  input xt_rsc_1_9_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_9_i_s_din;
  output [31:0] xt_rsc_1_9_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_9_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_9_i_wen_comp = (~ xt_rsc_1_9_i_oswt) | xt_rsc_1_9_i_biwt | xt_rsc_1_9_i_bcwt;
  assign xt_rsc_1_9_i_wen_comp_1 = (~ xt_rsc_1_9_i_oswt_1) | xt_rsc_1_9_i_biwt_1
      | xt_rsc_1_9_i_bcwt_1;
  assign xt_rsc_1_9_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_9_i_s_raddr_core, xt_rsc_1_9_i_s_raddr_core_sct);
  assign xt_rsc_1_9_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_9_i_s_waddr_core, xt_rsc_1_9_i_s_waddr_core_sct);
  assign xt_rsc_1_9_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_9_i_s_din, xt_rsc_1_9_i_s_din_bfwt,
      xt_rsc_1_9_i_bcwt);
  assign xt_rsc_1_9_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_9_i_s_dout_core, xt_rsc_1_9_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_9_i_bcwt <= 1'b0;
      xt_rsc_1_9_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_9_i_bcwt <= ~((~(xt_rsc_1_9_i_bcwt | xt_rsc_1_9_i_biwt)) | xt_rsc_1_9_i_bdwt);
      xt_rsc_1_9_i_bcwt_1 <= ~((~(xt_rsc_1_9_i_bcwt_1 | xt_rsc_1_9_i_biwt_1)) | xt_rsc_1_9_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_9_i_biwt ) begin
      xt_rsc_1_9_i_s_din_bfwt <= xt_rsc_1_9_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_9_i_xt_rsc_1_9_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_9_i_xt_rsc_1_9_wait_ctrl (
  core_wen, xt_rsc_1_9_i_oswt, xt_rsc_1_9_i_oswt_1, xt_rsc_1_9_i_biwt, xt_rsc_1_9_i_bdwt,
      xt_rsc_1_9_i_bcwt, xt_rsc_1_9_i_s_re_core_sct, xt_rsc_1_9_i_biwt_1, xt_rsc_1_9_i_bdwt_2,
      xt_rsc_1_9_i_bcwt_1, xt_rsc_1_9_i_s_we_core_sct, xt_rsc_1_9_i_s_rrdy, xt_rsc_1_9_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_9_i_oswt;
  input xt_rsc_1_9_i_oswt_1;
  output xt_rsc_1_9_i_biwt;
  output xt_rsc_1_9_i_bdwt;
  input xt_rsc_1_9_i_bcwt;
  output xt_rsc_1_9_i_s_re_core_sct;
  output xt_rsc_1_9_i_biwt_1;
  output xt_rsc_1_9_i_bdwt_2;
  input xt_rsc_1_9_i_bcwt_1;
  output xt_rsc_1_9_i_s_we_core_sct;
  input xt_rsc_1_9_i_s_rrdy;
  input xt_rsc_1_9_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_9_i_ogwt;
  wire xt_rsc_1_9_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_9_i_bdwt = xt_rsc_1_9_i_oswt & core_wen;
  assign xt_rsc_1_9_i_biwt = xt_rsc_1_9_i_ogwt & xt_rsc_1_9_i_s_rrdy;
  assign xt_rsc_1_9_i_ogwt = xt_rsc_1_9_i_oswt & (~ xt_rsc_1_9_i_bcwt);
  assign xt_rsc_1_9_i_s_re_core_sct = xt_rsc_1_9_i_ogwt;
  assign xt_rsc_1_9_i_bdwt_2 = xt_rsc_1_9_i_oswt_1 & core_wen;
  assign xt_rsc_1_9_i_biwt_1 = xt_rsc_1_9_i_ogwt_1 & xt_rsc_1_9_i_s_wrdy;
  assign xt_rsc_1_9_i_ogwt_1 = xt_rsc_1_9_i_oswt_1 & (~ xt_rsc_1_9_i_bcwt_1);
  assign xt_rsc_1_9_i_s_we_core_sct = xt_rsc_1_9_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_8_i_xt_rsc_1_8_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_8_i_xt_rsc_1_8_wait_dp (
  clk, rst, xt_rsc_1_8_i_oswt, xt_rsc_1_8_i_wen_comp, xt_rsc_1_8_i_oswt_1, xt_rsc_1_8_i_wen_comp_1,
      xt_rsc_1_8_i_s_raddr_core, xt_rsc_1_8_i_s_waddr_core, xt_rsc_1_8_i_s_din_mxwt,
      xt_rsc_1_8_i_s_dout_core, xt_rsc_1_8_i_biwt, xt_rsc_1_8_i_bdwt, xt_rsc_1_8_i_bcwt,
      xt_rsc_1_8_i_biwt_1, xt_rsc_1_8_i_bdwt_2, xt_rsc_1_8_i_bcwt_1, xt_rsc_1_8_i_s_raddr,
      xt_rsc_1_8_i_s_raddr_core_sct, xt_rsc_1_8_i_s_waddr, xt_rsc_1_8_i_s_waddr_core_sct,
      xt_rsc_1_8_i_s_din, xt_rsc_1_8_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_8_i_oswt;
  output xt_rsc_1_8_i_wen_comp;
  input xt_rsc_1_8_i_oswt_1;
  output xt_rsc_1_8_i_wen_comp_1;
  input [3:0] xt_rsc_1_8_i_s_raddr_core;
  input [3:0] xt_rsc_1_8_i_s_waddr_core;
  output [31:0] xt_rsc_1_8_i_s_din_mxwt;
  input [31:0] xt_rsc_1_8_i_s_dout_core;
  input xt_rsc_1_8_i_biwt;
  input xt_rsc_1_8_i_bdwt;
  output xt_rsc_1_8_i_bcwt;
  reg xt_rsc_1_8_i_bcwt;
  input xt_rsc_1_8_i_biwt_1;
  input xt_rsc_1_8_i_bdwt_2;
  output xt_rsc_1_8_i_bcwt_1;
  reg xt_rsc_1_8_i_bcwt_1;
  output [3:0] xt_rsc_1_8_i_s_raddr;
  input xt_rsc_1_8_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_8_i_s_waddr;
  input xt_rsc_1_8_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_8_i_s_din;
  output [31:0] xt_rsc_1_8_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_8_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_8_i_wen_comp = (~ xt_rsc_1_8_i_oswt) | xt_rsc_1_8_i_biwt | xt_rsc_1_8_i_bcwt;
  assign xt_rsc_1_8_i_wen_comp_1 = (~ xt_rsc_1_8_i_oswt_1) | xt_rsc_1_8_i_biwt_1
      | xt_rsc_1_8_i_bcwt_1;
  assign xt_rsc_1_8_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_8_i_s_raddr_core, xt_rsc_1_8_i_s_raddr_core_sct);
  assign xt_rsc_1_8_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_8_i_s_waddr_core, xt_rsc_1_8_i_s_waddr_core_sct);
  assign xt_rsc_1_8_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_8_i_s_din, xt_rsc_1_8_i_s_din_bfwt,
      xt_rsc_1_8_i_bcwt);
  assign xt_rsc_1_8_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_8_i_s_dout_core, xt_rsc_1_8_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_8_i_bcwt <= 1'b0;
      xt_rsc_1_8_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_8_i_bcwt <= ~((~(xt_rsc_1_8_i_bcwt | xt_rsc_1_8_i_biwt)) | xt_rsc_1_8_i_bdwt);
      xt_rsc_1_8_i_bcwt_1 <= ~((~(xt_rsc_1_8_i_bcwt_1 | xt_rsc_1_8_i_biwt_1)) | xt_rsc_1_8_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_8_i_biwt ) begin
      xt_rsc_1_8_i_s_din_bfwt <= xt_rsc_1_8_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_8_i_xt_rsc_1_8_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_8_i_xt_rsc_1_8_wait_ctrl (
  core_wen, xt_rsc_1_8_i_oswt, xt_rsc_1_8_i_oswt_1, xt_rsc_1_8_i_biwt, xt_rsc_1_8_i_bdwt,
      xt_rsc_1_8_i_bcwt, xt_rsc_1_8_i_s_re_core_sct, xt_rsc_1_8_i_biwt_1, xt_rsc_1_8_i_bdwt_2,
      xt_rsc_1_8_i_bcwt_1, xt_rsc_1_8_i_s_we_core_sct, xt_rsc_1_8_i_s_rrdy, xt_rsc_1_8_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_8_i_oswt;
  input xt_rsc_1_8_i_oswt_1;
  output xt_rsc_1_8_i_biwt;
  output xt_rsc_1_8_i_bdwt;
  input xt_rsc_1_8_i_bcwt;
  output xt_rsc_1_8_i_s_re_core_sct;
  output xt_rsc_1_8_i_biwt_1;
  output xt_rsc_1_8_i_bdwt_2;
  input xt_rsc_1_8_i_bcwt_1;
  output xt_rsc_1_8_i_s_we_core_sct;
  input xt_rsc_1_8_i_s_rrdy;
  input xt_rsc_1_8_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_8_i_ogwt;
  wire xt_rsc_1_8_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_8_i_bdwt = xt_rsc_1_8_i_oswt & core_wen;
  assign xt_rsc_1_8_i_biwt = xt_rsc_1_8_i_ogwt & xt_rsc_1_8_i_s_rrdy;
  assign xt_rsc_1_8_i_ogwt = xt_rsc_1_8_i_oswt & (~ xt_rsc_1_8_i_bcwt);
  assign xt_rsc_1_8_i_s_re_core_sct = xt_rsc_1_8_i_ogwt;
  assign xt_rsc_1_8_i_bdwt_2 = xt_rsc_1_8_i_oswt_1 & core_wen;
  assign xt_rsc_1_8_i_biwt_1 = xt_rsc_1_8_i_ogwt_1 & xt_rsc_1_8_i_s_wrdy;
  assign xt_rsc_1_8_i_ogwt_1 = xt_rsc_1_8_i_oswt_1 & (~ xt_rsc_1_8_i_bcwt_1);
  assign xt_rsc_1_8_i_s_we_core_sct = xt_rsc_1_8_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_7_i_xt_rsc_1_7_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_7_i_xt_rsc_1_7_wait_dp (
  clk, rst, xt_rsc_1_7_i_oswt, xt_rsc_1_7_i_wen_comp, xt_rsc_1_7_i_oswt_1, xt_rsc_1_7_i_wen_comp_1,
      xt_rsc_1_7_i_s_raddr_core, xt_rsc_1_7_i_s_waddr_core, xt_rsc_1_7_i_s_din_mxwt,
      xt_rsc_1_7_i_s_dout_core, xt_rsc_1_7_i_biwt, xt_rsc_1_7_i_bdwt, xt_rsc_1_7_i_bcwt,
      xt_rsc_1_7_i_biwt_1, xt_rsc_1_7_i_bdwt_2, xt_rsc_1_7_i_bcwt_1, xt_rsc_1_7_i_s_raddr,
      xt_rsc_1_7_i_s_raddr_core_sct, xt_rsc_1_7_i_s_waddr, xt_rsc_1_7_i_s_waddr_core_sct,
      xt_rsc_1_7_i_s_din, xt_rsc_1_7_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_7_i_oswt;
  output xt_rsc_1_7_i_wen_comp;
  input xt_rsc_1_7_i_oswt_1;
  output xt_rsc_1_7_i_wen_comp_1;
  input [3:0] xt_rsc_1_7_i_s_raddr_core;
  input [3:0] xt_rsc_1_7_i_s_waddr_core;
  output [31:0] xt_rsc_1_7_i_s_din_mxwt;
  input [31:0] xt_rsc_1_7_i_s_dout_core;
  input xt_rsc_1_7_i_biwt;
  input xt_rsc_1_7_i_bdwt;
  output xt_rsc_1_7_i_bcwt;
  reg xt_rsc_1_7_i_bcwt;
  input xt_rsc_1_7_i_biwt_1;
  input xt_rsc_1_7_i_bdwt_2;
  output xt_rsc_1_7_i_bcwt_1;
  reg xt_rsc_1_7_i_bcwt_1;
  output [3:0] xt_rsc_1_7_i_s_raddr;
  input xt_rsc_1_7_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_7_i_s_waddr;
  input xt_rsc_1_7_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_7_i_s_din;
  output [31:0] xt_rsc_1_7_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_7_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_7_i_wen_comp = (~ xt_rsc_1_7_i_oswt) | xt_rsc_1_7_i_biwt | xt_rsc_1_7_i_bcwt;
  assign xt_rsc_1_7_i_wen_comp_1 = (~ xt_rsc_1_7_i_oswt_1) | xt_rsc_1_7_i_biwt_1
      | xt_rsc_1_7_i_bcwt_1;
  assign xt_rsc_1_7_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_7_i_s_raddr_core, xt_rsc_1_7_i_s_raddr_core_sct);
  assign xt_rsc_1_7_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_7_i_s_waddr_core, xt_rsc_1_7_i_s_waddr_core_sct);
  assign xt_rsc_1_7_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_7_i_s_din, xt_rsc_1_7_i_s_din_bfwt,
      xt_rsc_1_7_i_bcwt);
  assign xt_rsc_1_7_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_7_i_s_dout_core, xt_rsc_1_7_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_7_i_bcwt <= 1'b0;
      xt_rsc_1_7_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_7_i_bcwt <= ~((~(xt_rsc_1_7_i_bcwt | xt_rsc_1_7_i_biwt)) | xt_rsc_1_7_i_bdwt);
      xt_rsc_1_7_i_bcwt_1 <= ~((~(xt_rsc_1_7_i_bcwt_1 | xt_rsc_1_7_i_biwt_1)) | xt_rsc_1_7_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_7_i_biwt ) begin
      xt_rsc_1_7_i_s_din_bfwt <= xt_rsc_1_7_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_7_i_xt_rsc_1_7_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_7_i_xt_rsc_1_7_wait_ctrl (
  core_wen, xt_rsc_1_7_i_oswt, xt_rsc_1_7_i_oswt_1, xt_rsc_1_7_i_biwt, xt_rsc_1_7_i_bdwt,
      xt_rsc_1_7_i_bcwt, xt_rsc_1_7_i_s_re_core_sct, xt_rsc_1_7_i_biwt_1, xt_rsc_1_7_i_bdwt_2,
      xt_rsc_1_7_i_bcwt_1, xt_rsc_1_7_i_s_we_core_sct, xt_rsc_1_7_i_s_rrdy, xt_rsc_1_7_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_7_i_oswt;
  input xt_rsc_1_7_i_oswt_1;
  output xt_rsc_1_7_i_biwt;
  output xt_rsc_1_7_i_bdwt;
  input xt_rsc_1_7_i_bcwt;
  output xt_rsc_1_7_i_s_re_core_sct;
  output xt_rsc_1_7_i_biwt_1;
  output xt_rsc_1_7_i_bdwt_2;
  input xt_rsc_1_7_i_bcwt_1;
  output xt_rsc_1_7_i_s_we_core_sct;
  input xt_rsc_1_7_i_s_rrdy;
  input xt_rsc_1_7_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_7_i_ogwt;
  wire xt_rsc_1_7_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_7_i_bdwt = xt_rsc_1_7_i_oswt & core_wen;
  assign xt_rsc_1_7_i_biwt = xt_rsc_1_7_i_ogwt & xt_rsc_1_7_i_s_rrdy;
  assign xt_rsc_1_7_i_ogwt = xt_rsc_1_7_i_oswt & (~ xt_rsc_1_7_i_bcwt);
  assign xt_rsc_1_7_i_s_re_core_sct = xt_rsc_1_7_i_ogwt;
  assign xt_rsc_1_7_i_bdwt_2 = xt_rsc_1_7_i_oswt_1 & core_wen;
  assign xt_rsc_1_7_i_biwt_1 = xt_rsc_1_7_i_ogwt_1 & xt_rsc_1_7_i_s_wrdy;
  assign xt_rsc_1_7_i_ogwt_1 = xt_rsc_1_7_i_oswt_1 & (~ xt_rsc_1_7_i_bcwt_1);
  assign xt_rsc_1_7_i_s_we_core_sct = xt_rsc_1_7_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_6_i_xt_rsc_1_6_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_6_i_xt_rsc_1_6_wait_dp (
  clk, rst, xt_rsc_1_6_i_oswt, xt_rsc_1_6_i_wen_comp, xt_rsc_1_6_i_oswt_1, xt_rsc_1_6_i_wen_comp_1,
      xt_rsc_1_6_i_s_raddr_core, xt_rsc_1_6_i_s_waddr_core, xt_rsc_1_6_i_s_din_mxwt,
      xt_rsc_1_6_i_s_dout_core, xt_rsc_1_6_i_biwt, xt_rsc_1_6_i_bdwt, xt_rsc_1_6_i_bcwt,
      xt_rsc_1_6_i_biwt_1, xt_rsc_1_6_i_bdwt_2, xt_rsc_1_6_i_bcwt_1, xt_rsc_1_6_i_s_raddr,
      xt_rsc_1_6_i_s_raddr_core_sct, xt_rsc_1_6_i_s_waddr, xt_rsc_1_6_i_s_waddr_core_sct,
      xt_rsc_1_6_i_s_din, xt_rsc_1_6_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_6_i_oswt;
  output xt_rsc_1_6_i_wen_comp;
  input xt_rsc_1_6_i_oswt_1;
  output xt_rsc_1_6_i_wen_comp_1;
  input [3:0] xt_rsc_1_6_i_s_raddr_core;
  input [3:0] xt_rsc_1_6_i_s_waddr_core;
  output [31:0] xt_rsc_1_6_i_s_din_mxwt;
  input [31:0] xt_rsc_1_6_i_s_dout_core;
  input xt_rsc_1_6_i_biwt;
  input xt_rsc_1_6_i_bdwt;
  output xt_rsc_1_6_i_bcwt;
  reg xt_rsc_1_6_i_bcwt;
  input xt_rsc_1_6_i_biwt_1;
  input xt_rsc_1_6_i_bdwt_2;
  output xt_rsc_1_6_i_bcwt_1;
  reg xt_rsc_1_6_i_bcwt_1;
  output [3:0] xt_rsc_1_6_i_s_raddr;
  input xt_rsc_1_6_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_6_i_s_waddr;
  input xt_rsc_1_6_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_6_i_s_din;
  output [31:0] xt_rsc_1_6_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_6_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_6_i_wen_comp = (~ xt_rsc_1_6_i_oswt) | xt_rsc_1_6_i_biwt | xt_rsc_1_6_i_bcwt;
  assign xt_rsc_1_6_i_wen_comp_1 = (~ xt_rsc_1_6_i_oswt_1) | xt_rsc_1_6_i_biwt_1
      | xt_rsc_1_6_i_bcwt_1;
  assign xt_rsc_1_6_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_6_i_s_raddr_core, xt_rsc_1_6_i_s_raddr_core_sct);
  assign xt_rsc_1_6_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_6_i_s_waddr_core, xt_rsc_1_6_i_s_waddr_core_sct);
  assign xt_rsc_1_6_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_6_i_s_din, xt_rsc_1_6_i_s_din_bfwt,
      xt_rsc_1_6_i_bcwt);
  assign xt_rsc_1_6_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_6_i_s_dout_core, xt_rsc_1_6_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_6_i_bcwt <= 1'b0;
      xt_rsc_1_6_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_6_i_bcwt <= ~((~(xt_rsc_1_6_i_bcwt | xt_rsc_1_6_i_biwt)) | xt_rsc_1_6_i_bdwt);
      xt_rsc_1_6_i_bcwt_1 <= ~((~(xt_rsc_1_6_i_bcwt_1 | xt_rsc_1_6_i_biwt_1)) | xt_rsc_1_6_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_6_i_biwt ) begin
      xt_rsc_1_6_i_s_din_bfwt <= xt_rsc_1_6_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_6_i_xt_rsc_1_6_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_6_i_xt_rsc_1_6_wait_ctrl (
  core_wen, xt_rsc_1_6_i_oswt, xt_rsc_1_6_i_oswt_1, xt_rsc_1_6_i_biwt, xt_rsc_1_6_i_bdwt,
      xt_rsc_1_6_i_bcwt, xt_rsc_1_6_i_s_re_core_sct, xt_rsc_1_6_i_biwt_1, xt_rsc_1_6_i_bdwt_2,
      xt_rsc_1_6_i_bcwt_1, xt_rsc_1_6_i_s_we_core_sct, xt_rsc_1_6_i_s_rrdy, xt_rsc_1_6_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_6_i_oswt;
  input xt_rsc_1_6_i_oswt_1;
  output xt_rsc_1_6_i_biwt;
  output xt_rsc_1_6_i_bdwt;
  input xt_rsc_1_6_i_bcwt;
  output xt_rsc_1_6_i_s_re_core_sct;
  output xt_rsc_1_6_i_biwt_1;
  output xt_rsc_1_6_i_bdwt_2;
  input xt_rsc_1_6_i_bcwt_1;
  output xt_rsc_1_6_i_s_we_core_sct;
  input xt_rsc_1_6_i_s_rrdy;
  input xt_rsc_1_6_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_6_i_ogwt;
  wire xt_rsc_1_6_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_6_i_bdwt = xt_rsc_1_6_i_oswt & core_wen;
  assign xt_rsc_1_6_i_biwt = xt_rsc_1_6_i_ogwt & xt_rsc_1_6_i_s_rrdy;
  assign xt_rsc_1_6_i_ogwt = xt_rsc_1_6_i_oswt & (~ xt_rsc_1_6_i_bcwt);
  assign xt_rsc_1_6_i_s_re_core_sct = xt_rsc_1_6_i_ogwt;
  assign xt_rsc_1_6_i_bdwt_2 = xt_rsc_1_6_i_oswt_1 & core_wen;
  assign xt_rsc_1_6_i_biwt_1 = xt_rsc_1_6_i_ogwt_1 & xt_rsc_1_6_i_s_wrdy;
  assign xt_rsc_1_6_i_ogwt_1 = xt_rsc_1_6_i_oswt_1 & (~ xt_rsc_1_6_i_bcwt_1);
  assign xt_rsc_1_6_i_s_we_core_sct = xt_rsc_1_6_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_5_i_xt_rsc_1_5_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_5_i_xt_rsc_1_5_wait_dp (
  clk, rst, xt_rsc_1_5_i_oswt, xt_rsc_1_5_i_wen_comp, xt_rsc_1_5_i_oswt_1, xt_rsc_1_5_i_wen_comp_1,
      xt_rsc_1_5_i_s_raddr_core, xt_rsc_1_5_i_s_waddr_core, xt_rsc_1_5_i_s_din_mxwt,
      xt_rsc_1_5_i_s_dout_core, xt_rsc_1_5_i_biwt, xt_rsc_1_5_i_bdwt, xt_rsc_1_5_i_bcwt,
      xt_rsc_1_5_i_biwt_1, xt_rsc_1_5_i_bdwt_2, xt_rsc_1_5_i_bcwt_1, xt_rsc_1_5_i_s_raddr,
      xt_rsc_1_5_i_s_raddr_core_sct, xt_rsc_1_5_i_s_waddr, xt_rsc_1_5_i_s_waddr_core_sct,
      xt_rsc_1_5_i_s_din, xt_rsc_1_5_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_5_i_oswt;
  output xt_rsc_1_5_i_wen_comp;
  input xt_rsc_1_5_i_oswt_1;
  output xt_rsc_1_5_i_wen_comp_1;
  input [3:0] xt_rsc_1_5_i_s_raddr_core;
  input [3:0] xt_rsc_1_5_i_s_waddr_core;
  output [31:0] xt_rsc_1_5_i_s_din_mxwt;
  input [31:0] xt_rsc_1_5_i_s_dout_core;
  input xt_rsc_1_5_i_biwt;
  input xt_rsc_1_5_i_bdwt;
  output xt_rsc_1_5_i_bcwt;
  reg xt_rsc_1_5_i_bcwt;
  input xt_rsc_1_5_i_biwt_1;
  input xt_rsc_1_5_i_bdwt_2;
  output xt_rsc_1_5_i_bcwt_1;
  reg xt_rsc_1_5_i_bcwt_1;
  output [3:0] xt_rsc_1_5_i_s_raddr;
  input xt_rsc_1_5_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_5_i_s_waddr;
  input xt_rsc_1_5_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_5_i_s_din;
  output [31:0] xt_rsc_1_5_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_5_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_5_i_wen_comp = (~ xt_rsc_1_5_i_oswt) | xt_rsc_1_5_i_biwt | xt_rsc_1_5_i_bcwt;
  assign xt_rsc_1_5_i_wen_comp_1 = (~ xt_rsc_1_5_i_oswt_1) | xt_rsc_1_5_i_biwt_1
      | xt_rsc_1_5_i_bcwt_1;
  assign xt_rsc_1_5_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_5_i_s_raddr_core, xt_rsc_1_5_i_s_raddr_core_sct);
  assign xt_rsc_1_5_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_5_i_s_waddr_core, xt_rsc_1_5_i_s_waddr_core_sct);
  assign xt_rsc_1_5_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_5_i_s_din, xt_rsc_1_5_i_s_din_bfwt,
      xt_rsc_1_5_i_bcwt);
  assign xt_rsc_1_5_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_5_i_s_dout_core, xt_rsc_1_5_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_5_i_bcwt <= 1'b0;
      xt_rsc_1_5_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_5_i_bcwt <= ~((~(xt_rsc_1_5_i_bcwt | xt_rsc_1_5_i_biwt)) | xt_rsc_1_5_i_bdwt);
      xt_rsc_1_5_i_bcwt_1 <= ~((~(xt_rsc_1_5_i_bcwt_1 | xt_rsc_1_5_i_biwt_1)) | xt_rsc_1_5_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_5_i_biwt ) begin
      xt_rsc_1_5_i_s_din_bfwt <= xt_rsc_1_5_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_5_i_xt_rsc_1_5_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_5_i_xt_rsc_1_5_wait_ctrl (
  core_wen, xt_rsc_1_5_i_oswt, xt_rsc_1_5_i_oswt_1, xt_rsc_1_5_i_biwt, xt_rsc_1_5_i_bdwt,
      xt_rsc_1_5_i_bcwt, xt_rsc_1_5_i_s_re_core_sct, xt_rsc_1_5_i_biwt_1, xt_rsc_1_5_i_bdwt_2,
      xt_rsc_1_5_i_bcwt_1, xt_rsc_1_5_i_s_we_core_sct, xt_rsc_1_5_i_s_rrdy, xt_rsc_1_5_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_5_i_oswt;
  input xt_rsc_1_5_i_oswt_1;
  output xt_rsc_1_5_i_biwt;
  output xt_rsc_1_5_i_bdwt;
  input xt_rsc_1_5_i_bcwt;
  output xt_rsc_1_5_i_s_re_core_sct;
  output xt_rsc_1_5_i_biwt_1;
  output xt_rsc_1_5_i_bdwt_2;
  input xt_rsc_1_5_i_bcwt_1;
  output xt_rsc_1_5_i_s_we_core_sct;
  input xt_rsc_1_5_i_s_rrdy;
  input xt_rsc_1_5_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_5_i_ogwt;
  wire xt_rsc_1_5_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_5_i_bdwt = xt_rsc_1_5_i_oswt & core_wen;
  assign xt_rsc_1_5_i_biwt = xt_rsc_1_5_i_ogwt & xt_rsc_1_5_i_s_rrdy;
  assign xt_rsc_1_5_i_ogwt = xt_rsc_1_5_i_oswt & (~ xt_rsc_1_5_i_bcwt);
  assign xt_rsc_1_5_i_s_re_core_sct = xt_rsc_1_5_i_ogwt;
  assign xt_rsc_1_5_i_bdwt_2 = xt_rsc_1_5_i_oswt_1 & core_wen;
  assign xt_rsc_1_5_i_biwt_1 = xt_rsc_1_5_i_ogwt_1 & xt_rsc_1_5_i_s_wrdy;
  assign xt_rsc_1_5_i_ogwt_1 = xt_rsc_1_5_i_oswt_1 & (~ xt_rsc_1_5_i_bcwt_1);
  assign xt_rsc_1_5_i_s_we_core_sct = xt_rsc_1_5_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_4_i_xt_rsc_1_4_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_4_i_xt_rsc_1_4_wait_dp (
  clk, rst, xt_rsc_1_4_i_oswt, xt_rsc_1_4_i_wen_comp, xt_rsc_1_4_i_oswt_1, xt_rsc_1_4_i_wen_comp_1,
      xt_rsc_1_4_i_s_raddr_core, xt_rsc_1_4_i_s_waddr_core, xt_rsc_1_4_i_s_din_mxwt,
      xt_rsc_1_4_i_s_dout_core, xt_rsc_1_4_i_biwt, xt_rsc_1_4_i_bdwt, xt_rsc_1_4_i_bcwt,
      xt_rsc_1_4_i_biwt_1, xt_rsc_1_4_i_bdwt_2, xt_rsc_1_4_i_bcwt_1, xt_rsc_1_4_i_s_raddr,
      xt_rsc_1_4_i_s_raddr_core_sct, xt_rsc_1_4_i_s_waddr, xt_rsc_1_4_i_s_waddr_core_sct,
      xt_rsc_1_4_i_s_din, xt_rsc_1_4_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_4_i_oswt;
  output xt_rsc_1_4_i_wen_comp;
  input xt_rsc_1_4_i_oswt_1;
  output xt_rsc_1_4_i_wen_comp_1;
  input [3:0] xt_rsc_1_4_i_s_raddr_core;
  input [3:0] xt_rsc_1_4_i_s_waddr_core;
  output [31:0] xt_rsc_1_4_i_s_din_mxwt;
  input [31:0] xt_rsc_1_4_i_s_dout_core;
  input xt_rsc_1_4_i_biwt;
  input xt_rsc_1_4_i_bdwt;
  output xt_rsc_1_4_i_bcwt;
  reg xt_rsc_1_4_i_bcwt;
  input xt_rsc_1_4_i_biwt_1;
  input xt_rsc_1_4_i_bdwt_2;
  output xt_rsc_1_4_i_bcwt_1;
  reg xt_rsc_1_4_i_bcwt_1;
  output [3:0] xt_rsc_1_4_i_s_raddr;
  input xt_rsc_1_4_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_4_i_s_waddr;
  input xt_rsc_1_4_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_4_i_s_din;
  output [31:0] xt_rsc_1_4_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_4_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_4_i_wen_comp = (~ xt_rsc_1_4_i_oswt) | xt_rsc_1_4_i_biwt | xt_rsc_1_4_i_bcwt;
  assign xt_rsc_1_4_i_wen_comp_1 = (~ xt_rsc_1_4_i_oswt_1) | xt_rsc_1_4_i_biwt_1
      | xt_rsc_1_4_i_bcwt_1;
  assign xt_rsc_1_4_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_4_i_s_raddr_core, xt_rsc_1_4_i_s_raddr_core_sct);
  assign xt_rsc_1_4_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_4_i_s_waddr_core, xt_rsc_1_4_i_s_waddr_core_sct);
  assign xt_rsc_1_4_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_4_i_s_din, xt_rsc_1_4_i_s_din_bfwt,
      xt_rsc_1_4_i_bcwt);
  assign xt_rsc_1_4_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_4_i_s_dout_core, xt_rsc_1_4_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_4_i_bcwt <= 1'b0;
      xt_rsc_1_4_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_4_i_bcwt <= ~((~(xt_rsc_1_4_i_bcwt | xt_rsc_1_4_i_biwt)) | xt_rsc_1_4_i_bdwt);
      xt_rsc_1_4_i_bcwt_1 <= ~((~(xt_rsc_1_4_i_bcwt_1 | xt_rsc_1_4_i_biwt_1)) | xt_rsc_1_4_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_4_i_biwt ) begin
      xt_rsc_1_4_i_s_din_bfwt <= xt_rsc_1_4_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_4_i_xt_rsc_1_4_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_4_i_xt_rsc_1_4_wait_ctrl (
  core_wen, xt_rsc_1_4_i_oswt, xt_rsc_1_4_i_oswt_1, xt_rsc_1_4_i_biwt, xt_rsc_1_4_i_bdwt,
      xt_rsc_1_4_i_bcwt, xt_rsc_1_4_i_s_re_core_sct, xt_rsc_1_4_i_biwt_1, xt_rsc_1_4_i_bdwt_2,
      xt_rsc_1_4_i_bcwt_1, xt_rsc_1_4_i_s_we_core_sct, xt_rsc_1_4_i_s_rrdy, xt_rsc_1_4_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_4_i_oswt;
  input xt_rsc_1_4_i_oswt_1;
  output xt_rsc_1_4_i_biwt;
  output xt_rsc_1_4_i_bdwt;
  input xt_rsc_1_4_i_bcwt;
  output xt_rsc_1_4_i_s_re_core_sct;
  output xt_rsc_1_4_i_biwt_1;
  output xt_rsc_1_4_i_bdwt_2;
  input xt_rsc_1_4_i_bcwt_1;
  output xt_rsc_1_4_i_s_we_core_sct;
  input xt_rsc_1_4_i_s_rrdy;
  input xt_rsc_1_4_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_4_i_ogwt;
  wire xt_rsc_1_4_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_4_i_bdwt = xt_rsc_1_4_i_oswt & core_wen;
  assign xt_rsc_1_4_i_biwt = xt_rsc_1_4_i_ogwt & xt_rsc_1_4_i_s_rrdy;
  assign xt_rsc_1_4_i_ogwt = xt_rsc_1_4_i_oswt & (~ xt_rsc_1_4_i_bcwt);
  assign xt_rsc_1_4_i_s_re_core_sct = xt_rsc_1_4_i_ogwt;
  assign xt_rsc_1_4_i_bdwt_2 = xt_rsc_1_4_i_oswt_1 & core_wen;
  assign xt_rsc_1_4_i_biwt_1 = xt_rsc_1_4_i_ogwt_1 & xt_rsc_1_4_i_s_wrdy;
  assign xt_rsc_1_4_i_ogwt_1 = xt_rsc_1_4_i_oswt_1 & (~ xt_rsc_1_4_i_bcwt_1);
  assign xt_rsc_1_4_i_s_we_core_sct = xt_rsc_1_4_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_3_i_xt_rsc_1_3_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_3_i_xt_rsc_1_3_wait_dp (
  clk, rst, xt_rsc_1_3_i_oswt, xt_rsc_1_3_i_wen_comp, xt_rsc_1_3_i_oswt_1, xt_rsc_1_3_i_wen_comp_1,
      xt_rsc_1_3_i_s_raddr_core, xt_rsc_1_3_i_s_waddr_core, xt_rsc_1_3_i_s_din_mxwt,
      xt_rsc_1_3_i_s_dout_core, xt_rsc_1_3_i_biwt, xt_rsc_1_3_i_bdwt, xt_rsc_1_3_i_bcwt,
      xt_rsc_1_3_i_biwt_1, xt_rsc_1_3_i_bdwt_2, xt_rsc_1_3_i_bcwt_1, xt_rsc_1_3_i_s_raddr,
      xt_rsc_1_3_i_s_raddr_core_sct, xt_rsc_1_3_i_s_waddr, xt_rsc_1_3_i_s_waddr_core_sct,
      xt_rsc_1_3_i_s_din, xt_rsc_1_3_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_3_i_oswt;
  output xt_rsc_1_3_i_wen_comp;
  input xt_rsc_1_3_i_oswt_1;
  output xt_rsc_1_3_i_wen_comp_1;
  input [3:0] xt_rsc_1_3_i_s_raddr_core;
  input [3:0] xt_rsc_1_3_i_s_waddr_core;
  output [31:0] xt_rsc_1_3_i_s_din_mxwt;
  input [31:0] xt_rsc_1_3_i_s_dout_core;
  input xt_rsc_1_3_i_biwt;
  input xt_rsc_1_3_i_bdwt;
  output xt_rsc_1_3_i_bcwt;
  reg xt_rsc_1_3_i_bcwt;
  input xt_rsc_1_3_i_biwt_1;
  input xt_rsc_1_3_i_bdwt_2;
  output xt_rsc_1_3_i_bcwt_1;
  reg xt_rsc_1_3_i_bcwt_1;
  output [3:0] xt_rsc_1_3_i_s_raddr;
  input xt_rsc_1_3_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_3_i_s_waddr;
  input xt_rsc_1_3_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_3_i_s_din;
  output [31:0] xt_rsc_1_3_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_3_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_3_i_wen_comp = (~ xt_rsc_1_3_i_oswt) | xt_rsc_1_3_i_biwt | xt_rsc_1_3_i_bcwt;
  assign xt_rsc_1_3_i_wen_comp_1 = (~ xt_rsc_1_3_i_oswt_1) | xt_rsc_1_3_i_biwt_1
      | xt_rsc_1_3_i_bcwt_1;
  assign xt_rsc_1_3_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_3_i_s_raddr_core, xt_rsc_1_3_i_s_raddr_core_sct);
  assign xt_rsc_1_3_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_3_i_s_waddr_core, xt_rsc_1_3_i_s_waddr_core_sct);
  assign xt_rsc_1_3_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_3_i_s_din, xt_rsc_1_3_i_s_din_bfwt,
      xt_rsc_1_3_i_bcwt);
  assign xt_rsc_1_3_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_3_i_s_dout_core, xt_rsc_1_3_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_3_i_bcwt <= 1'b0;
      xt_rsc_1_3_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_3_i_bcwt <= ~((~(xt_rsc_1_3_i_bcwt | xt_rsc_1_3_i_biwt)) | xt_rsc_1_3_i_bdwt);
      xt_rsc_1_3_i_bcwt_1 <= ~((~(xt_rsc_1_3_i_bcwt_1 | xt_rsc_1_3_i_biwt_1)) | xt_rsc_1_3_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_3_i_biwt ) begin
      xt_rsc_1_3_i_s_din_bfwt <= xt_rsc_1_3_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_3_i_xt_rsc_1_3_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_3_i_xt_rsc_1_3_wait_ctrl (
  core_wen, xt_rsc_1_3_i_oswt, xt_rsc_1_3_i_oswt_1, xt_rsc_1_3_i_biwt, xt_rsc_1_3_i_bdwt,
      xt_rsc_1_3_i_bcwt, xt_rsc_1_3_i_s_re_core_sct, xt_rsc_1_3_i_biwt_1, xt_rsc_1_3_i_bdwt_2,
      xt_rsc_1_3_i_bcwt_1, xt_rsc_1_3_i_s_we_core_sct, xt_rsc_1_3_i_s_rrdy, xt_rsc_1_3_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_3_i_oswt;
  input xt_rsc_1_3_i_oswt_1;
  output xt_rsc_1_3_i_biwt;
  output xt_rsc_1_3_i_bdwt;
  input xt_rsc_1_3_i_bcwt;
  output xt_rsc_1_3_i_s_re_core_sct;
  output xt_rsc_1_3_i_biwt_1;
  output xt_rsc_1_3_i_bdwt_2;
  input xt_rsc_1_3_i_bcwt_1;
  output xt_rsc_1_3_i_s_we_core_sct;
  input xt_rsc_1_3_i_s_rrdy;
  input xt_rsc_1_3_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_3_i_ogwt;
  wire xt_rsc_1_3_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_3_i_bdwt = xt_rsc_1_3_i_oswt & core_wen;
  assign xt_rsc_1_3_i_biwt = xt_rsc_1_3_i_ogwt & xt_rsc_1_3_i_s_rrdy;
  assign xt_rsc_1_3_i_ogwt = xt_rsc_1_3_i_oswt & (~ xt_rsc_1_3_i_bcwt);
  assign xt_rsc_1_3_i_s_re_core_sct = xt_rsc_1_3_i_ogwt;
  assign xt_rsc_1_3_i_bdwt_2 = xt_rsc_1_3_i_oswt_1 & core_wen;
  assign xt_rsc_1_3_i_biwt_1 = xt_rsc_1_3_i_ogwt_1 & xt_rsc_1_3_i_s_wrdy;
  assign xt_rsc_1_3_i_ogwt_1 = xt_rsc_1_3_i_oswt_1 & (~ xt_rsc_1_3_i_bcwt_1);
  assign xt_rsc_1_3_i_s_we_core_sct = xt_rsc_1_3_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_2_i_xt_rsc_1_2_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_2_i_xt_rsc_1_2_wait_dp (
  clk, rst, xt_rsc_1_2_i_oswt, xt_rsc_1_2_i_wen_comp, xt_rsc_1_2_i_oswt_1, xt_rsc_1_2_i_wen_comp_1,
      xt_rsc_1_2_i_s_raddr_core, xt_rsc_1_2_i_s_waddr_core, xt_rsc_1_2_i_s_din_mxwt,
      xt_rsc_1_2_i_s_dout_core, xt_rsc_1_2_i_biwt, xt_rsc_1_2_i_bdwt, xt_rsc_1_2_i_bcwt,
      xt_rsc_1_2_i_biwt_1, xt_rsc_1_2_i_bdwt_2, xt_rsc_1_2_i_bcwt_1, xt_rsc_1_2_i_s_raddr,
      xt_rsc_1_2_i_s_raddr_core_sct, xt_rsc_1_2_i_s_waddr, xt_rsc_1_2_i_s_waddr_core_sct,
      xt_rsc_1_2_i_s_din, xt_rsc_1_2_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_2_i_oswt;
  output xt_rsc_1_2_i_wen_comp;
  input xt_rsc_1_2_i_oswt_1;
  output xt_rsc_1_2_i_wen_comp_1;
  input [3:0] xt_rsc_1_2_i_s_raddr_core;
  input [3:0] xt_rsc_1_2_i_s_waddr_core;
  output [31:0] xt_rsc_1_2_i_s_din_mxwt;
  input [31:0] xt_rsc_1_2_i_s_dout_core;
  input xt_rsc_1_2_i_biwt;
  input xt_rsc_1_2_i_bdwt;
  output xt_rsc_1_2_i_bcwt;
  reg xt_rsc_1_2_i_bcwt;
  input xt_rsc_1_2_i_biwt_1;
  input xt_rsc_1_2_i_bdwt_2;
  output xt_rsc_1_2_i_bcwt_1;
  reg xt_rsc_1_2_i_bcwt_1;
  output [3:0] xt_rsc_1_2_i_s_raddr;
  input xt_rsc_1_2_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_2_i_s_waddr;
  input xt_rsc_1_2_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_2_i_s_din;
  output [31:0] xt_rsc_1_2_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_2_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_2_i_wen_comp = (~ xt_rsc_1_2_i_oswt) | xt_rsc_1_2_i_biwt | xt_rsc_1_2_i_bcwt;
  assign xt_rsc_1_2_i_wen_comp_1 = (~ xt_rsc_1_2_i_oswt_1) | xt_rsc_1_2_i_biwt_1
      | xt_rsc_1_2_i_bcwt_1;
  assign xt_rsc_1_2_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_2_i_s_raddr_core, xt_rsc_1_2_i_s_raddr_core_sct);
  assign xt_rsc_1_2_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_2_i_s_waddr_core, xt_rsc_1_2_i_s_waddr_core_sct);
  assign xt_rsc_1_2_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_2_i_s_din, xt_rsc_1_2_i_s_din_bfwt,
      xt_rsc_1_2_i_bcwt);
  assign xt_rsc_1_2_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_2_i_s_dout_core, xt_rsc_1_2_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_2_i_bcwt <= 1'b0;
      xt_rsc_1_2_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_2_i_bcwt <= ~((~(xt_rsc_1_2_i_bcwt | xt_rsc_1_2_i_biwt)) | xt_rsc_1_2_i_bdwt);
      xt_rsc_1_2_i_bcwt_1 <= ~((~(xt_rsc_1_2_i_bcwt_1 | xt_rsc_1_2_i_biwt_1)) | xt_rsc_1_2_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_2_i_biwt ) begin
      xt_rsc_1_2_i_s_din_bfwt <= xt_rsc_1_2_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_2_i_xt_rsc_1_2_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_2_i_xt_rsc_1_2_wait_ctrl (
  core_wen, xt_rsc_1_2_i_oswt, xt_rsc_1_2_i_oswt_1, xt_rsc_1_2_i_biwt, xt_rsc_1_2_i_bdwt,
      xt_rsc_1_2_i_bcwt, xt_rsc_1_2_i_s_re_core_sct, xt_rsc_1_2_i_biwt_1, xt_rsc_1_2_i_bdwt_2,
      xt_rsc_1_2_i_bcwt_1, xt_rsc_1_2_i_s_we_core_sct, xt_rsc_1_2_i_s_rrdy, xt_rsc_1_2_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_2_i_oswt;
  input xt_rsc_1_2_i_oswt_1;
  output xt_rsc_1_2_i_biwt;
  output xt_rsc_1_2_i_bdwt;
  input xt_rsc_1_2_i_bcwt;
  output xt_rsc_1_2_i_s_re_core_sct;
  output xt_rsc_1_2_i_biwt_1;
  output xt_rsc_1_2_i_bdwt_2;
  input xt_rsc_1_2_i_bcwt_1;
  output xt_rsc_1_2_i_s_we_core_sct;
  input xt_rsc_1_2_i_s_rrdy;
  input xt_rsc_1_2_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_2_i_ogwt;
  wire xt_rsc_1_2_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_2_i_bdwt = xt_rsc_1_2_i_oswt & core_wen;
  assign xt_rsc_1_2_i_biwt = xt_rsc_1_2_i_ogwt & xt_rsc_1_2_i_s_rrdy;
  assign xt_rsc_1_2_i_ogwt = xt_rsc_1_2_i_oswt & (~ xt_rsc_1_2_i_bcwt);
  assign xt_rsc_1_2_i_s_re_core_sct = xt_rsc_1_2_i_ogwt;
  assign xt_rsc_1_2_i_bdwt_2 = xt_rsc_1_2_i_oswt_1 & core_wen;
  assign xt_rsc_1_2_i_biwt_1 = xt_rsc_1_2_i_ogwt_1 & xt_rsc_1_2_i_s_wrdy;
  assign xt_rsc_1_2_i_ogwt_1 = xt_rsc_1_2_i_oswt_1 & (~ xt_rsc_1_2_i_bcwt_1);
  assign xt_rsc_1_2_i_s_we_core_sct = xt_rsc_1_2_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_1_i_xt_rsc_1_1_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_1_i_xt_rsc_1_1_wait_dp (
  clk, rst, xt_rsc_1_1_i_oswt, xt_rsc_1_1_i_wen_comp, xt_rsc_1_1_i_oswt_1, xt_rsc_1_1_i_wen_comp_1,
      xt_rsc_1_1_i_s_raddr_core, xt_rsc_1_1_i_s_waddr_core, xt_rsc_1_1_i_s_din_mxwt,
      xt_rsc_1_1_i_s_dout_core, xt_rsc_1_1_i_biwt, xt_rsc_1_1_i_bdwt, xt_rsc_1_1_i_bcwt,
      xt_rsc_1_1_i_biwt_1, xt_rsc_1_1_i_bdwt_2, xt_rsc_1_1_i_bcwt_1, xt_rsc_1_1_i_s_raddr,
      xt_rsc_1_1_i_s_raddr_core_sct, xt_rsc_1_1_i_s_waddr, xt_rsc_1_1_i_s_waddr_core_sct,
      xt_rsc_1_1_i_s_din, xt_rsc_1_1_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_1_i_oswt;
  output xt_rsc_1_1_i_wen_comp;
  input xt_rsc_1_1_i_oswt_1;
  output xt_rsc_1_1_i_wen_comp_1;
  input [3:0] xt_rsc_1_1_i_s_raddr_core;
  input [3:0] xt_rsc_1_1_i_s_waddr_core;
  output [31:0] xt_rsc_1_1_i_s_din_mxwt;
  input [31:0] xt_rsc_1_1_i_s_dout_core;
  input xt_rsc_1_1_i_biwt;
  input xt_rsc_1_1_i_bdwt;
  output xt_rsc_1_1_i_bcwt;
  reg xt_rsc_1_1_i_bcwt;
  input xt_rsc_1_1_i_biwt_1;
  input xt_rsc_1_1_i_bdwt_2;
  output xt_rsc_1_1_i_bcwt_1;
  reg xt_rsc_1_1_i_bcwt_1;
  output [3:0] xt_rsc_1_1_i_s_raddr;
  input xt_rsc_1_1_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_1_i_s_waddr;
  input xt_rsc_1_1_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_1_i_s_din;
  output [31:0] xt_rsc_1_1_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_1_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_1_i_wen_comp = (~ xt_rsc_1_1_i_oswt) | xt_rsc_1_1_i_biwt | xt_rsc_1_1_i_bcwt;
  assign xt_rsc_1_1_i_wen_comp_1 = (~ xt_rsc_1_1_i_oswt_1) | xt_rsc_1_1_i_biwt_1
      | xt_rsc_1_1_i_bcwt_1;
  assign xt_rsc_1_1_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_1_i_s_raddr_core, xt_rsc_1_1_i_s_raddr_core_sct);
  assign xt_rsc_1_1_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_1_i_s_waddr_core, xt_rsc_1_1_i_s_waddr_core_sct);
  assign xt_rsc_1_1_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_1_i_s_din, xt_rsc_1_1_i_s_din_bfwt,
      xt_rsc_1_1_i_bcwt);
  assign xt_rsc_1_1_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_1_i_s_dout_core, xt_rsc_1_1_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_1_i_bcwt <= 1'b0;
      xt_rsc_1_1_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_1_i_bcwt <= ~((~(xt_rsc_1_1_i_bcwt | xt_rsc_1_1_i_biwt)) | xt_rsc_1_1_i_bdwt);
      xt_rsc_1_1_i_bcwt_1 <= ~((~(xt_rsc_1_1_i_bcwt_1 | xt_rsc_1_1_i_biwt_1)) | xt_rsc_1_1_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_1_i_biwt ) begin
      xt_rsc_1_1_i_s_din_bfwt <= xt_rsc_1_1_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_1_i_xt_rsc_1_1_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_1_i_xt_rsc_1_1_wait_ctrl (
  core_wen, xt_rsc_1_1_i_oswt, xt_rsc_1_1_i_oswt_1, xt_rsc_1_1_i_biwt, xt_rsc_1_1_i_bdwt,
      xt_rsc_1_1_i_bcwt, xt_rsc_1_1_i_s_re_core_sct, xt_rsc_1_1_i_biwt_1, xt_rsc_1_1_i_bdwt_2,
      xt_rsc_1_1_i_bcwt_1, xt_rsc_1_1_i_s_we_core_sct, xt_rsc_1_1_i_s_rrdy, xt_rsc_1_1_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_1_i_oswt;
  input xt_rsc_1_1_i_oswt_1;
  output xt_rsc_1_1_i_biwt;
  output xt_rsc_1_1_i_bdwt;
  input xt_rsc_1_1_i_bcwt;
  output xt_rsc_1_1_i_s_re_core_sct;
  output xt_rsc_1_1_i_biwt_1;
  output xt_rsc_1_1_i_bdwt_2;
  input xt_rsc_1_1_i_bcwt_1;
  output xt_rsc_1_1_i_s_we_core_sct;
  input xt_rsc_1_1_i_s_rrdy;
  input xt_rsc_1_1_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_1_i_ogwt;
  wire xt_rsc_1_1_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_1_i_bdwt = xt_rsc_1_1_i_oswt & core_wen;
  assign xt_rsc_1_1_i_biwt = xt_rsc_1_1_i_ogwt & xt_rsc_1_1_i_s_rrdy;
  assign xt_rsc_1_1_i_ogwt = xt_rsc_1_1_i_oswt & (~ xt_rsc_1_1_i_bcwt);
  assign xt_rsc_1_1_i_s_re_core_sct = xt_rsc_1_1_i_ogwt;
  assign xt_rsc_1_1_i_bdwt_2 = xt_rsc_1_1_i_oswt_1 & core_wen;
  assign xt_rsc_1_1_i_biwt_1 = xt_rsc_1_1_i_ogwt_1 & xt_rsc_1_1_i_s_wrdy;
  assign xt_rsc_1_1_i_ogwt_1 = xt_rsc_1_1_i_oswt_1 & (~ xt_rsc_1_1_i_bcwt_1);
  assign xt_rsc_1_1_i_s_we_core_sct = xt_rsc_1_1_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_0_i_xt_rsc_1_0_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_0_i_xt_rsc_1_0_wait_dp (
  clk, rst, xt_rsc_1_0_i_oswt, xt_rsc_1_0_i_wen_comp, xt_rsc_1_0_i_oswt_1, xt_rsc_1_0_i_wen_comp_1,
      xt_rsc_1_0_i_s_raddr_core, xt_rsc_1_0_i_s_waddr_core, xt_rsc_1_0_i_s_din_mxwt,
      xt_rsc_1_0_i_s_dout_core, xt_rsc_1_0_i_biwt, xt_rsc_1_0_i_bdwt, xt_rsc_1_0_i_bcwt,
      xt_rsc_1_0_i_biwt_1, xt_rsc_1_0_i_bdwt_2, xt_rsc_1_0_i_bcwt_1, xt_rsc_1_0_i_s_raddr,
      xt_rsc_1_0_i_s_raddr_core_sct, xt_rsc_1_0_i_s_waddr, xt_rsc_1_0_i_s_waddr_core_sct,
      xt_rsc_1_0_i_s_din, xt_rsc_1_0_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_1_0_i_oswt;
  output xt_rsc_1_0_i_wen_comp;
  input xt_rsc_1_0_i_oswt_1;
  output xt_rsc_1_0_i_wen_comp_1;
  input [3:0] xt_rsc_1_0_i_s_raddr_core;
  input [3:0] xt_rsc_1_0_i_s_waddr_core;
  output [31:0] xt_rsc_1_0_i_s_din_mxwt;
  input [31:0] xt_rsc_1_0_i_s_dout_core;
  input xt_rsc_1_0_i_biwt;
  input xt_rsc_1_0_i_bdwt;
  output xt_rsc_1_0_i_bcwt;
  reg xt_rsc_1_0_i_bcwt;
  input xt_rsc_1_0_i_biwt_1;
  input xt_rsc_1_0_i_bdwt_2;
  output xt_rsc_1_0_i_bcwt_1;
  reg xt_rsc_1_0_i_bcwt_1;
  output [3:0] xt_rsc_1_0_i_s_raddr;
  input xt_rsc_1_0_i_s_raddr_core_sct;
  output [3:0] xt_rsc_1_0_i_s_waddr;
  input xt_rsc_1_0_i_s_waddr_core_sct;
  input [31:0] xt_rsc_1_0_i_s_din;
  output [31:0] xt_rsc_1_0_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_1_0_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_0_i_wen_comp = (~ xt_rsc_1_0_i_oswt) | xt_rsc_1_0_i_biwt | xt_rsc_1_0_i_bcwt;
  assign xt_rsc_1_0_i_wen_comp_1 = (~ xt_rsc_1_0_i_oswt_1) | xt_rsc_1_0_i_biwt_1
      | xt_rsc_1_0_i_bcwt_1;
  assign xt_rsc_1_0_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_0_i_s_raddr_core, xt_rsc_1_0_i_s_raddr_core_sct);
  assign xt_rsc_1_0_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_1_0_i_s_waddr_core, xt_rsc_1_0_i_s_waddr_core_sct);
  assign xt_rsc_1_0_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_1_0_i_s_din, xt_rsc_1_0_i_s_din_bfwt,
      xt_rsc_1_0_i_bcwt);
  assign xt_rsc_1_0_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_1_0_i_s_dout_core, xt_rsc_1_0_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_1_0_i_bcwt <= 1'b0;
      xt_rsc_1_0_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_1_0_i_bcwt <= ~((~(xt_rsc_1_0_i_bcwt | xt_rsc_1_0_i_biwt)) | xt_rsc_1_0_i_bdwt);
      xt_rsc_1_0_i_bcwt_1 <= ~((~(xt_rsc_1_0_i_bcwt_1 | xt_rsc_1_0_i_biwt_1)) | xt_rsc_1_0_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_1_0_i_biwt ) begin
      xt_rsc_1_0_i_s_din_bfwt <= xt_rsc_1_0_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_0_i_xt_rsc_1_0_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_0_i_xt_rsc_1_0_wait_ctrl (
  core_wen, xt_rsc_1_0_i_oswt, xt_rsc_1_0_i_oswt_1, xt_rsc_1_0_i_biwt, xt_rsc_1_0_i_bdwt,
      xt_rsc_1_0_i_bcwt, xt_rsc_1_0_i_s_re_core_sct, xt_rsc_1_0_i_biwt_1, xt_rsc_1_0_i_bdwt_2,
      xt_rsc_1_0_i_bcwt_1, xt_rsc_1_0_i_s_we_core_sct, xt_rsc_1_0_i_s_rrdy, xt_rsc_1_0_i_s_wrdy
);
  input core_wen;
  input xt_rsc_1_0_i_oswt;
  input xt_rsc_1_0_i_oswt_1;
  output xt_rsc_1_0_i_biwt;
  output xt_rsc_1_0_i_bdwt;
  input xt_rsc_1_0_i_bcwt;
  output xt_rsc_1_0_i_s_re_core_sct;
  output xt_rsc_1_0_i_biwt_1;
  output xt_rsc_1_0_i_bdwt_2;
  input xt_rsc_1_0_i_bcwt_1;
  output xt_rsc_1_0_i_s_we_core_sct;
  input xt_rsc_1_0_i_s_rrdy;
  input xt_rsc_1_0_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_1_0_i_ogwt;
  wire xt_rsc_1_0_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_1_0_i_bdwt = xt_rsc_1_0_i_oswt & core_wen;
  assign xt_rsc_1_0_i_biwt = xt_rsc_1_0_i_ogwt & xt_rsc_1_0_i_s_rrdy;
  assign xt_rsc_1_0_i_ogwt = xt_rsc_1_0_i_oswt & (~ xt_rsc_1_0_i_bcwt);
  assign xt_rsc_1_0_i_s_re_core_sct = xt_rsc_1_0_i_ogwt;
  assign xt_rsc_1_0_i_bdwt_2 = xt_rsc_1_0_i_oswt_1 & core_wen;
  assign xt_rsc_1_0_i_biwt_1 = xt_rsc_1_0_i_ogwt_1 & xt_rsc_1_0_i_s_wrdy;
  assign xt_rsc_1_0_i_ogwt_1 = xt_rsc_1_0_i_oswt_1 & (~ xt_rsc_1_0_i_bcwt_1);
  assign xt_rsc_1_0_i_s_we_core_sct = xt_rsc_1_0_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_31_i_xt_rsc_0_31_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_31_i_xt_rsc_0_31_wait_dp (
  clk, rst, xt_rsc_0_31_i_oswt, xt_rsc_0_31_i_wen_comp, xt_rsc_0_31_i_oswt_1, xt_rsc_0_31_i_wen_comp_1,
      xt_rsc_0_31_i_s_raddr_core, xt_rsc_0_31_i_s_waddr_core, xt_rsc_0_31_i_s_din_mxwt,
      xt_rsc_0_31_i_s_dout_core, xt_rsc_0_31_i_biwt, xt_rsc_0_31_i_bdwt, xt_rsc_0_31_i_bcwt,
      xt_rsc_0_31_i_biwt_1, xt_rsc_0_31_i_bdwt_2, xt_rsc_0_31_i_bcwt_1, xt_rsc_0_31_i_s_raddr,
      xt_rsc_0_31_i_s_raddr_core_sct, xt_rsc_0_31_i_s_waddr, xt_rsc_0_31_i_s_waddr_core_sct,
      xt_rsc_0_31_i_s_din, xt_rsc_0_31_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_31_i_oswt;
  output xt_rsc_0_31_i_wen_comp;
  input xt_rsc_0_31_i_oswt_1;
  output xt_rsc_0_31_i_wen_comp_1;
  input [3:0] xt_rsc_0_31_i_s_raddr_core;
  input [3:0] xt_rsc_0_31_i_s_waddr_core;
  output [31:0] xt_rsc_0_31_i_s_din_mxwt;
  input [31:0] xt_rsc_0_31_i_s_dout_core;
  input xt_rsc_0_31_i_biwt;
  input xt_rsc_0_31_i_bdwt;
  output xt_rsc_0_31_i_bcwt;
  reg xt_rsc_0_31_i_bcwt;
  input xt_rsc_0_31_i_biwt_1;
  input xt_rsc_0_31_i_bdwt_2;
  output xt_rsc_0_31_i_bcwt_1;
  reg xt_rsc_0_31_i_bcwt_1;
  output [3:0] xt_rsc_0_31_i_s_raddr;
  input xt_rsc_0_31_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_31_i_s_waddr;
  input xt_rsc_0_31_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_31_i_s_din;
  output [31:0] xt_rsc_0_31_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_31_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_31_i_wen_comp = (~ xt_rsc_0_31_i_oswt) | xt_rsc_0_31_i_biwt | xt_rsc_0_31_i_bcwt;
  assign xt_rsc_0_31_i_wen_comp_1 = (~ xt_rsc_0_31_i_oswt_1) | xt_rsc_0_31_i_biwt_1
      | xt_rsc_0_31_i_bcwt_1;
  assign xt_rsc_0_31_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_31_i_s_raddr_core,
      xt_rsc_0_31_i_s_raddr_core_sct);
  assign xt_rsc_0_31_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_31_i_s_waddr_core,
      xt_rsc_0_31_i_s_waddr_core_sct);
  assign xt_rsc_0_31_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_31_i_s_din, xt_rsc_0_31_i_s_din_bfwt,
      xt_rsc_0_31_i_bcwt);
  assign xt_rsc_0_31_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_31_i_s_dout_core, xt_rsc_0_31_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_31_i_bcwt <= 1'b0;
      xt_rsc_0_31_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_31_i_bcwt <= ~((~(xt_rsc_0_31_i_bcwt | xt_rsc_0_31_i_biwt)) | xt_rsc_0_31_i_bdwt);
      xt_rsc_0_31_i_bcwt_1 <= ~((~(xt_rsc_0_31_i_bcwt_1 | xt_rsc_0_31_i_biwt_1))
          | xt_rsc_0_31_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_31_i_biwt ) begin
      xt_rsc_0_31_i_s_din_bfwt <= xt_rsc_0_31_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_31_i_xt_rsc_0_31_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_31_i_xt_rsc_0_31_wait_ctrl (
  core_wen, xt_rsc_0_31_i_oswt, xt_rsc_0_31_i_oswt_1, xt_rsc_0_31_i_biwt, xt_rsc_0_31_i_bdwt,
      xt_rsc_0_31_i_bcwt, xt_rsc_0_31_i_s_re_core_sct, xt_rsc_0_31_i_biwt_1, xt_rsc_0_31_i_bdwt_2,
      xt_rsc_0_31_i_bcwt_1, xt_rsc_0_31_i_s_we_core_sct, xt_rsc_0_31_i_s_rrdy, xt_rsc_0_31_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_31_i_oswt;
  input xt_rsc_0_31_i_oswt_1;
  output xt_rsc_0_31_i_biwt;
  output xt_rsc_0_31_i_bdwt;
  input xt_rsc_0_31_i_bcwt;
  output xt_rsc_0_31_i_s_re_core_sct;
  output xt_rsc_0_31_i_biwt_1;
  output xt_rsc_0_31_i_bdwt_2;
  input xt_rsc_0_31_i_bcwt_1;
  output xt_rsc_0_31_i_s_we_core_sct;
  input xt_rsc_0_31_i_s_rrdy;
  input xt_rsc_0_31_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_31_i_ogwt;
  wire xt_rsc_0_31_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_31_i_bdwt = xt_rsc_0_31_i_oswt & core_wen;
  assign xt_rsc_0_31_i_biwt = xt_rsc_0_31_i_ogwt & xt_rsc_0_31_i_s_rrdy;
  assign xt_rsc_0_31_i_ogwt = xt_rsc_0_31_i_oswt & (~ xt_rsc_0_31_i_bcwt);
  assign xt_rsc_0_31_i_s_re_core_sct = xt_rsc_0_31_i_ogwt;
  assign xt_rsc_0_31_i_bdwt_2 = xt_rsc_0_31_i_oswt_1 & core_wen;
  assign xt_rsc_0_31_i_biwt_1 = xt_rsc_0_31_i_ogwt_1 & xt_rsc_0_31_i_s_wrdy;
  assign xt_rsc_0_31_i_ogwt_1 = xt_rsc_0_31_i_oswt_1 & (~ xt_rsc_0_31_i_bcwt_1);
  assign xt_rsc_0_31_i_s_we_core_sct = xt_rsc_0_31_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_30_i_xt_rsc_0_30_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_30_i_xt_rsc_0_30_wait_dp (
  clk, rst, xt_rsc_0_30_i_oswt, xt_rsc_0_30_i_wen_comp, xt_rsc_0_30_i_oswt_1, xt_rsc_0_30_i_wen_comp_1,
      xt_rsc_0_30_i_s_raddr_core, xt_rsc_0_30_i_s_waddr_core, xt_rsc_0_30_i_s_din_mxwt,
      xt_rsc_0_30_i_s_dout_core, xt_rsc_0_30_i_biwt, xt_rsc_0_30_i_bdwt, xt_rsc_0_30_i_bcwt,
      xt_rsc_0_30_i_biwt_1, xt_rsc_0_30_i_bdwt_2, xt_rsc_0_30_i_bcwt_1, xt_rsc_0_30_i_s_raddr,
      xt_rsc_0_30_i_s_raddr_core_sct, xt_rsc_0_30_i_s_waddr, xt_rsc_0_30_i_s_waddr_core_sct,
      xt_rsc_0_30_i_s_din, xt_rsc_0_30_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_30_i_oswt;
  output xt_rsc_0_30_i_wen_comp;
  input xt_rsc_0_30_i_oswt_1;
  output xt_rsc_0_30_i_wen_comp_1;
  input [3:0] xt_rsc_0_30_i_s_raddr_core;
  input [3:0] xt_rsc_0_30_i_s_waddr_core;
  output [31:0] xt_rsc_0_30_i_s_din_mxwt;
  input [31:0] xt_rsc_0_30_i_s_dout_core;
  input xt_rsc_0_30_i_biwt;
  input xt_rsc_0_30_i_bdwt;
  output xt_rsc_0_30_i_bcwt;
  reg xt_rsc_0_30_i_bcwt;
  input xt_rsc_0_30_i_biwt_1;
  input xt_rsc_0_30_i_bdwt_2;
  output xt_rsc_0_30_i_bcwt_1;
  reg xt_rsc_0_30_i_bcwt_1;
  output [3:0] xt_rsc_0_30_i_s_raddr;
  input xt_rsc_0_30_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_30_i_s_waddr;
  input xt_rsc_0_30_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_30_i_s_din;
  output [31:0] xt_rsc_0_30_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_30_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_30_i_wen_comp = (~ xt_rsc_0_30_i_oswt) | xt_rsc_0_30_i_biwt | xt_rsc_0_30_i_bcwt;
  assign xt_rsc_0_30_i_wen_comp_1 = (~ xt_rsc_0_30_i_oswt_1) | xt_rsc_0_30_i_biwt_1
      | xt_rsc_0_30_i_bcwt_1;
  assign xt_rsc_0_30_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_30_i_s_raddr_core,
      xt_rsc_0_30_i_s_raddr_core_sct);
  assign xt_rsc_0_30_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_30_i_s_waddr_core,
      xt_rsc_0_30_i_s_waddr_core_sct);
  assign xt_rsc_0_30_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_30_i_s_din, xt_rsc_0_30_i_s_din_bfwt,
      xt_rsc_0_30_i_bcwt);
  assign xt_rsc_0_30_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_30_i_s_dout_core, xt_rsc_0_30_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_30_i_bcwt <= 1'b0;
      xt_rsc_0_30_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_30_i_bcwt <= ~((~(xt_rsc_0_30_i_bcwt | xt_rsc_0_30_i_biwt)) | xt_rsc_0_30_i_bdwt);
      xt_rsc_0_30_i_bcwt_1 <= ~((~(xt_rsc_0_30_i_bcwt_1 | xt_rsc_0_30_i_biwt_1))
          | xt_rsc_0_30_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_30_i_biwt ) begin
      xt_rsc_0_30_i_s_din_bfwt <= xt_rsc_0_30_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_30_i_xt_rsc_0_30_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_30_i_xt_rsc_0_30_wait_ctrl (
  core_wen, xt_rsc_0_30_i_oswt, xt_rsc_0_30_i_oswt_1, xt_rsc_0_30_i_biwt, xt_rsc_0_30_i_bdwt,
      xt_rsc_0_30_i_bcwt, xt_rsc_0_30_i_s_re_core_sct, xt_rsc_0_30_i_biwt_1, xt_rsc_0_30_i_bdwt_2,
      xt_rsc_0_30_i_bcwt_1, xt_rsc_0_30_i_s_we_core_sct, xt_rsc_0_30_i_s_rrdy, xt_rsc_0_30_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_30_i_oswt;
  input xt_rsc_0_30_i_oswt_1;
  output xt_rsc_0_30_i_biwt;
  output xt_rsc_0_30_i_bdwt;
  input xt_rsc_0_30_i_bcwt;
  output xt_rsc_0_30_i_s_re_core_sct;
  output xt_rsc_0_30_i_biwt_1;
  output xt_rsc_0_30_i_bdwt_2;
  input xt_rsc_0_30_i_bcwt_1;
  output xt_rsc_0_30_i_s_we_core_sct;
  input xt_rsc_0_30_i_s_rrdy;
  input xt_rsc_0_30_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_30_i_ogwt;
  wire xt_rsc_0_30_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_30_i_bdwt = xt_rsc_0_30_i_oswt & core_wen;
  assign xt_rsc_0_30_i_biwt = xt_rsc_0_30_i_ogwt & xt_rsc_0_30_i_s_rrdy;
  assign xt_rsc_0_30_i_ogwt = xt_rsc_0_30_i_oswt & (~ xt_rsc_0_30_i_bcwt);
  assign xt_rsc_0_30_i_s_re_core_sct = xt_rsc_0_30_i_ogwt;
  assign xt_rsc_0_30_i_bdwt_2 = xt_rsc_0_30_i_oswt_1 & core_wen;
  assign xt_rsc_0_30_i_biwt_1 = xt_rsc_0_30_i_ogwt_1 & xt_rsc_0_30_i_s_wrdy;
  assign xt_rsc_0_30_i_ogwt_1 = xt_rsc_0_30_i_oswt_1 & (~ xt_rsc_0_30_i_bcwt_1);
  assign xt_rsc_0_30_i_s_we_core_sct = xt_rsc_0_30_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_29_i_xt_rsc_0_29_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_29_i_xt_rsc_0_29_wait_dp (
  clk, rst, xt_rsc_0_29_i_oswt, xt_rsc_0_29_i_wen_comp, xt_rsc_0_29_i_oswt_1, xt_rsc_0_29_i_wen_comp_1,
      xt_rsc_0_29_i_s_raddr_core, xt_rsc_0_29_i_s_waddr_core, xt_rsc_0_29_i_s_din_mxwt,
      xt_rsc_0_29_i_s_dout_core, xt_rsc_0_29_i_biwt, xt_rsc_0_29_i_bdwt, xt_rsc_0_29_i_bcwt,
      xt_rsc_0_29_i_biwt_1, xt_rsc_0_29_i_bdwt_2, xt_rsc_0_29_i_bcwt_1, xt_rsc_0_29_i_s_raddr,
      xt_rsc_0_29_i_s_raddr_core_sct, xt_rsc_0_29_i_s_waddr, xt_rsc_0_29_i_s_waddr_core_sct,
      xt_rsc_0_29_i_s_din, xt_rsc_0_29_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_29_i_oswt;
  output xt_rsc_0_29_i_wen_comp;
  input xt_rsc_0_29_i_oswt_1;
  output xt_rsc_0_29_i_wen_comp_1;
  input [3:0] xt_rsc_0_29_i_s_raddr_core;
  input [3:0] xt_rsc_0_29_i_s_waddr_core;
  output [31:0] xt_rsc_0_29_i_s_din_mxwt;
  input [31:0] xt_rsc_0_29_i_s_dout_core;
  input xt_rsc_0_29_i_biwt;
  input xt_rsc_0_29_i_bdwt;
  output xt_rsc_0_29_i_bcwt;
  reg xt_rsc_0_29_i_bcwt;
  input xt_rsc_0_29_i_biwt_1;
  input xt_rsc_0_29_i_bdwt_2;
  output xt_rsc_0_29_i_bcwt_1;
  reg xt_rsc_0_29_i_bcwt_1;
  output [3:0] xt_rsc_0_29_i_s_raddr;
  input xt_rsc_0_29_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_29_i_s_waddr;
  input xt_rsc_0_29_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_29_i_s_din;
  output [31:0] xt_rsc_0_29_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_29_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_29_i_wen_comp = (~ xt_rsc_0_29_i_oswt) | xt_rsc_0_29_i_biwt | xt_rsc_0_29_i_bcwt;
  assign xt_rsc_0_29_i_wen_comp_1 = (~ xt_rsc_0_29_i_oswt_1) | xt_rsc_0_29_i_biwt_1
      | xt_rsc_0_29_i_bcwt_1;
  assign xt_rsc_0_29_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_29_i_s_raddr_core,
      xt_rsc_0_29_i_s_raddr_core_sct);
  assign xt_rsc_0_29_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_29_i_s_waddr_core,
      xt_rsc_0_29_i_s_waddr_core_sct);
  assign xt_rsc_0_29_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_29_i_s_din, xt_rsc_0_29_i_s_din_bfwt,
      xt_rsc_0_29_i_bcwt);
  assign xt_rsc_0_29_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_29_i_s_dout_core, xt_rsc_0_29_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_29_i_bcwt <= 1'b0;
      xt_rsc_0_29_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_29_i_bcwt <= ~((~(xt_rsc_0_29_i_bcwt | xt_rsc_0_29_i_biwt)) | xt_rsc_0_29_i_bdwt);
      xt_rsc_0_29_i_bcwt_1 <= ~((~(xt_rsc_0_29_i_bcwt_1 | xt_rsc_0_29_i_biwt_1))
          | xt_rsc_0_29_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_29_i_biwt ) begin
      xt_rsc_0_29_i_s_din_bfwt <= xt_rsc_0_29_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_29_i_xt_rsc_0_29_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_29_i_xt_rsc_0_29_wait_ctrl (
  core_wen, xt_rsc_0_29_i_oswt, xt_rsc_0_29_i_oswt_1, xt_rsc_0_29_i_biwt, xt_rsc_0_29_i_bdwt,
      xt_rsc_0_29_i_bcwt, xt_rsc_0_29_i_s_re_core_sct, xt_rsc_0_29_i_biwt_1, xt_rsc_0_29_i_bdwt_2,
      xt_rsc_0_29_i_bcwt_1, xt_rsc_0_29_i_s_we_core_sct, xt_rsc_0_29_i_s_rrdy, xt_rsc_0_29_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_29_i_oswt;
  input xt_rsc_0_29_i_oswt_1;
  output xt_rsc_0_29_i_biwt;
  output xt_rsc_0_29_i_bdwt;
  input xt_rsc_0_29_i_bcwt;
  output xt_rsc_0_29_i_s_re_core_sct;
  output xt_rsc_0_29_i_biwt_1;
  output xt_rsc_0_29_i_bdwt_2;
  input xt_rsc_0_29_i_bcwt_1;
  output xt_rsc_0_29_i_s_we_core_sct;
  input xt_rsc_0_29_i_s_rrdy;
  input xt_rsc_0_29_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_29_i_ogwt;
  wire xt_rsc_0_29_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_29_i_bdwt = xt_rsc_0_29_i_oswt & core_wen;
  assign xt_rsc_0_29_i_biwt = xt_rsc_0_29_i_ogwt & xt_rsc_0_29_i_s_rrdy;
  assign xt_rsc_0_29_i_ogwt = xt_rsc_0_29_i_oswt & (~ xt_rsc_0_29_i_bcwt);
  assign xt_rsc_0_29_i_s_re_core_sct = xt_rsc_0_29_i_ogwt;
  assign xt_rsc_0_29_i_bdwt_2 = xt_rsc_0_29_i_oswt_1 & core_wen;
  assign xt_rsc_0_29_i_biwt_1 = xt_rsc_0_29_i_ogwt_1 & xt_rsc_0_29_i_s_wrdy;
  assign xt_rsc_0_29_i_ogwt_1 = xt_rsc_0_29_i_oswt_1 & (~ xt_rsc_0_29_i_bcwt_1);
  assign xt_rsc_0_29_i_s_we_core_sct = xt_rsc_0_29_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_28_i_xt_rsc_0_28_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_28_i_xt_rsc_0_28_wait_dp (
  clk, rst, xt_rsc_0_28_i_oswt, xt_rsc_0_28_i_wen_comp, xt_rsc_0_28_i_oswt_1, xt_rsc_0_28_i_wen_comp_1,
      xt_rsc_0_28_i_s_raddr_core, xt_rsc_0_28_i_s_waddr_core, xt_rsc_0_28_i_s_din_mxwt,
      xt_rsc_0_28_i_s_dout_core, xt_rsc_0_28_i_biwt, xt_rsc_0_28_i_bdwt, xt_rsc_0_28_i_bcwt,
      xt_rsc_0_28_i_biwt_1, xt_rsc_0_28_i_bdwt_2, xt_rsc_0_28_i_bcwt_1, xt_rsc_0_28_i_s_raddr,
      xt_rsc_0_28_i_s_raddr_core_sct, xt_rsc_0_28_i_s_waddr, xt_rsc_0_28_i_s_waddr_core_sct,
      xt_rsc_0_28_i_s_din, xt_rsc_0_28_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_28_i_oswt;
  output xt_rsc_0_28_i_wen_comp;
  input xt_rsc_0_28_i_oswt_1;
  output xt_rsc_0_28_i_wen_comp_1;
  input [3:0] xt_rsc_0_28_i_s_raddr_core;
  input [3:0] xt_rsc_0_28_i_s_waddr_core;
  output [31:0] xt_rsc_0_28_i_s_din_mxwt;
  input [31:0] xt_rsc_0_28_i_s_dout_core;
  input xt_rsc_0_28_i_biwt;
  input xt_rsc_0_28_i_bdwt;
  output xt_rsc_0_28_i_bcwt;
  reg xt_rsc_0_28_i_bcwt;
  input xt_rsc_0_28_i_biwt_1;
  input xt_rsc_0_28_i_bdwt_2;
  output xt_rsc_0_28_i_bcwt_1;
  reg xt_rsc_0_28_i_bcwt_1;
  output [3:0] xt_rsc_0_28_i_s_raddr;
  input xt_rsc_0_28_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_28_i_s_waddr;
  input xt_rsc_0_28_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_28_i_s_din;
  output [31:0] xt_rsc_0_28_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_28_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_28_i_wen_comp = (~ xt_rsc_0_28_i_oswt) | xt_rsc_0_28_i_biwt | xt_rsc_0_28_i_bcwt;
  assign xt_rsc_0_28_i_wen_comp_1 = (~ xt_rsc_0_28_i_oswt_1) | xt_rsc_0_28_i_biwt_1
      | xt_rsc_0_28_i_bcwt_1;
  assign xt_rsc_0_28_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_28_i_s_raddr_core,
      xt_rsc_0_28_i_s_raddr_core_sct);
  assign xt_rsc_0_28_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_28_i_s_waddr_core,
      xt_rsc_0_28_i_s_waddr_core_sct);
  assign xt_rsc_0_28_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_28_i_s_din, xt_rsc_0_28_i_s_din_bfwt,
      xt_rsc_0_28_i_bcwt);
  assign xt_rsc_0_28_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_28_i_s_dout_core, xt_rsc_0_28_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_28_i_bcwt <= 1'b0;
      xt_rsc_0_28_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_28_i_bcwt <= ~((~(xt_rsc_0_28_i_bcwt | xt_rsc_0_28_i_biwt)) | xt_rsc_0_28_i_bdwt);
      xt_rsc_0_28_i_bcwt_1 <= ~((~(xt_rsc_0_28_i_bcwt_1 | xt_rsc_0_28_i_biwt_1))
          | xt_rsc_0_28_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_28_i_biwt ) begin
      xt_rsc_0_28_i_s_din_bfwt <= xt_rsc_0_28_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_28_i_xt_rsc_0_28_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_28_i_xt_rsc_0_28_wait_ctrl (
  core_wen, xt_rsc_0_28_i_oswt, xt_rsc_0_28_i_oswt_1, xt_rsc_0_28_i_biwt, xt_rsc_0_28_i_bdwt,
      xt_rsc_0_28_i_bcwt, xt_rsc_0_28_i_s_re_core_sct, xt_rsc_0_28_i_biwt_1, xt_rsc_0_28_i_bdwt_2,
      xt_rsc_0_28_i_bcwt_1, xt_rsc_0_28_i_s_we_core_sct, xt_rsc_0_28_i_s_rrdy, xt_rsc_0_28_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_28_i_oswt;
  input xt_rsc_0_28_i_oswt_1;
  output xt_rsc_0_28_i_biwt;
  output xt_rsc_0_28_i_bdwt;
  input xt_rsc_0_28_i_bcwt;
  output xt_rsc_0_28_i_s_re_core_sct;
  output xt_rsc_0_28_i_biwt_1;
  output xt_rsc_0_28_i_bdwt_2;
  input xt_rsc_0_28_i_bcwt_1;
  output xt_rsc_0_28_i_s_we_core_sct;
  input xt_rsc_0_28_i_s_rrdy;
  input xt_rsc_0_28_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_28_i_ogwt;
  wire xt_rsc_0_28_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_28_i_bdwt = xt_rsc_0_28_i_oswt & core_wen;
  assign xt_rsc_0_28_i_biwt = xt_rsc_0_28_i_ogwt & xt_rsc_0_28_i_s_rrdy;
  assign xt_rsc_0_28_i_ogwt = xt_rsc_0_28_i_oswt & (~ xt_rsc_0_28_i_bcwt);
  assign xt_rsc_0_28_i_s_re_core_sct = xt_rsc_0_28_i_ogwt;
  assign xt_rsc_0_28_i_bdwt_2 = xt_rsc_0_28_i_oswt_1 & core_wen;
  assign xt_rsc_0_28_i_biwt_1 = xt_rsc_0_28_i_ogwt_1 & xt_rsc_0_28_i_s_wrdy;
  assign xt_rsc_0_28_i_ogwt_1 = xt_rsc_0_28_i_oswt_1 & (~ xt_rsc_0_28_i_bcwt_1);
  assign xt_rsc_0_28_i_s_we_core_sct = xt_rsc_0_28_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_27_i_xt_rsc_0_27_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_27_i_xt_rsc_0_27_wait_dp (
  clk, rst, xt_rsc_0_27_i_oswt, xt_rsc_0_27_i_wen_comp, xt_rsc_0_27_i_oswt_1, xt_rsc_0_27_i_wen_comp_1,
      xt_rsc_0_27_i_s_raddr_core, xt_rsc_0_27_i_s_waddr_core, xt_rsc_0_27_i_s_din_mxwt,
      xt_rsc_0_27_i_s_dout_core, xt_rsc_0_27_i_biwt, xt_rsc_0_27_i_bdwt, xt_rsc_0_27_i_bcwt,
      xt_rsc_0_27_i_biwt_1, xt_rsc_0_27_i_bdwt_2, xt_rsc_0_27_i_bcwt_1, xt_rsc_0_27_i_s_raddr,
      xt_rsc_0_27_i_s_raddr_core_sct, xt_rsc_0_27_i_s_waddr, xt_rsc_0_27_i_s_waddr_core_sct,
      xt_rsc_0_27_i_s_din, xt_rsc_0_27_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_27_i_oswt;
  output xt_rsc_0_27_i_wen_comp;
  input xt_rsc_0_27_i_oswt_1;
  output xt_rsc_0_27_i_wen_comp_1;
  input [3:0] xt_rsc_0_27_i_s_raddr_core;
  input [3:0] xt_rsc_0_27_i_s_waddr_core;
  output [31:0] xt_rsc_0_27_i_s_din_mxwt;
  input [31:0] xt_rsc_0_27_i_s_dout_core;
  input xt_rsc_0_27_i_biwt;
  input xt_rsc_0_27_i_bdwt;
  output xt_rsc_0_27_i_bcwt;
  reg xt_rsc_0_27_i_bcwt;
  input xt_rsc_0_27_i_biwt_1;
  input xt_rsc_0_27_i_bdwt_2;
  output xt_rsc_0_27_i_bcwt_1;
  reg xt_rsc_0_27_i_bcwt_1;
  output [3:0] xt_rsc_0_27_i_s_raddr;
  input xt_rsc_0_27_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_27_i_s_waddr;
  input xt_rsc_0_27_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_27_i_s_din;
  output [31:0] xt_rsc_0_27_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_27_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_27_i_wen_comp = (~ xt_rsc_0_27_i_oswt) | xt_rsc_0_27_i_biwt | xt_rsc_0_27_i_bcwt;
  assign xt_rsc_0_27_i_wen_comp_1 = (~ xt_rsc_0_27_i_oswt_1) | xt_rsc_0_27_i_biwt_1
      | xt_rsc_0_27_i_bcwt_1;
  assign xt_rsc_0_27_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_27_i_s_raddr_core,
      xt_rsc_0_27_i_s_raddr_core_sct);
  assign xt_rsc_0_27_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_27_i_s_waddr_core,
      xt_rsc_0_27_i_s_waddr_core_sct);
  assign xt_rsc_0_27_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_27_i_s_din, xt_rsc_0_27_i_s_din_bfwt,
      xt_rsc_0_27_i_bcwt);
  assign xt_rsc_0_27_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_27_i_s_dout_core, xt_rsc_0_27_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_27_i_bcwt <= 1'b0;
      xt_rsc_0_27_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_27_i_bcwt <= ~((~(xt_rsc_0_27_i_bcwt | xt_rsc_0_27_i_biwt)) | xt_rsc_0_27_i_bdwt);
      xt_rsc_0_27_i_bcwt_1 <= ~((~(xt_rsc_0_27_i_bcwt_1 | xt_rsc_0_27_i_biwt_1))
          | xt_rsc_0_27_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_27_i_biwt ) begin
      xt_rsc_0_27_i_s_din_bfwt <= xt_rsc_0_27_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_27_i_xt_rsc_0_27_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_27_i_xt_rsc_0_27_wait_ctrl (
  core_wen, xt_rsc_0_27_i_oswt, xt_rsc_0_27_i_oswt_1, xt_rsc_0_27_i_biwt, xt_rsc_0_27_i_bdwt,
      xt_rsc_0_27_i_bcwt, xt_rsc_0_27_i_s_re_core_sct, xt_rsc_0_27_i_biwt_1, xt_rsc_0_27_i_bdwt_2,
      xt_rsc_0_27_i_bcwt_1, xt_rsc_0_27_i_s_we_core_sct, xt_rsc_0_27_i_s_rrdy, xt_rsc_0_27_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_27_i_oswt;
  input xt_rsc_0_27_i_oswt_1;
  output xt_rsc_0_27_i_biwt;
  output xt_rsc_0_27_i_bdwt;
  input xt_rsc_0_27_i_bcwt;
  output xt_rsc_0_27_i_s_re_core_sct;
  output xt_rsc_0_27_i_biwt_1;
  output xt_rsc_0_27_i_bdwt_2;
  input xt_rsc_0_27_i_bcwt_1;
  output xt_rsc_0_27_i_s_we_core_sct;
  input xt_rsc_0_27_i_s_rrdy;
  input xt_rsc_0_27_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_27_i_ogwt;
  wire xt_rsc_0_27_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_27_i_bdwt = xt_rsc_0_27_i_oswt & core_wen;
  assign xt_rsc_0_27_i_biwt = xt_rsc_0_27_i_ogwt & xt_rsc_0_27_i_s_rrdy;
  assign xt_rsc_0_27_i_ogwt = xt_rsc_0_27_i_oswt & (~ xt_rsc_0_27_i_bcwt);
  assign xt_rsc_0_27_i_s_re_core_sct = xt_rsc_0_27_i_ogwt;
  assign xt_rsc_0_27_i_bdwt_2 = xt_rsc_0_27_i_oswt_1 & core_wen;
  assign xt_rsc_0_27_i_biwt_1 = xt_rsc_0_27_i_ogwt_1 & xt_rsc_0_27_i_s_wrdy;
  assign xt_rsc_0_27_i_ogwt_1 = xt_rsc_0_27_i_oswt_1 & (~ xt_rsc_0_27_i_bcwt_1);
  assign xt_rsc_0_27_i_s_we_core_sct = xt_rsc_0_27_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_26_i_xt_rsc_0_26_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_26_i_xt_rsc_0_26_wait_dp (
  clk, rst, xt_rsc_0_26_i_oswt, xt_rsc_0_26_i_wen_comp, xt_rsc_0_26_i_oswt_1, xt_rsc_0_26_i_wen_comp_1,
      xt_rsc_0_26_i_s_raddr_core, xt_rsc_0_26_i_s_waddr_core, xt_rsc_0_26_i_s_din_mxwt,
      xt_rsc_0_26_i_s_dout_core, xt_rsc_0_26_i_biwt, xt_rsc_0_26_i_bdwt, xt_rsc_0_26_i_bcwt,
      xt_rsc_0_26_i_biwt_1, xt_rsc_0_26_i_bdwt_2, xt_rsc_0_26_i_bcwt_1, xt_rsc_0_26_i_s_raddr,
      xt_rsc_0_26_i_s_raddr_core_sct, xt_rsc_0_26_i_s_waddr, xt_rsc_0_26_i_s_waddr_core_sct,
      xt_rsc_0_26_i_s_din, xt_rsc_0_26_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_26_i_oswt;
  output xt_rsc_0_26_i_wen_comp;
  input xt_rsc_0_26_i_oswt_1;
  output xt_rsc_0_26_i_wen_comp_1;
  input [3:0] xt_rsc_0_26_i_s_raddr_core;
  input [3:0] xt_rsc_0_26_i_s_waddr_core;
  output [31:0] xt_rsc_0_26_i_s_din_mxwt;
  input [31:0] xt_rsc_0_26_i_s_dout_core;
  input xt_rsc_0_26_i_biwt;
  input xt_rsc_0_26_i_bdwt;
  output xt_rsc_0_26_i_bcwt;
  reg xt_rsc_0_26_i_bcwt;
  input xt_rsc_0_26_i_biwt_1;
  input xt_rsc_0_26_i_bdwt_2;
  output xt_rsc_0_26_i_bcwt_1;
  reg xt_rsc_0_26_i_bcwt_1;
  output [3:0] xt_rsc_0_26_i_s_raddr;
  input xt_rsc_0_26_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_26_i_s_waddr;
  input xt_rsc_0_26_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_26_i_s_din;
  output [31:0] xt_rsc_0_26_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_26_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_26_i_wen_comp = (~ xt_rsc_0_26_i_oswt) | xt_rsc_0_26_i_biwt | xt_rsc_0_26_i_bcwt;
  assign xt_rsc_0_26_i_wen_comp_1 = (~ xt_rsc_0_26_i_oswt_1) | xt_rsc_0_26_i_biwt_1
      | xt_rsc_0_26_i_bcwt_1;
  assign xt_rsc_0_26_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_26_i_s_raddr_core,
      xt_rsc_0_26_i_s_raddr_core_sct);
  assign xt_rsc_0_26_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_26_i_s_waddr_core,
      xt_rsc_0_26_i_s_waddr_core_sct);
  assign xt_rsc_0_26_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_26_i_s_din, xt_rsc_0_26_i_s_din_bfwt,
      xt_rsc_0_26_i_bcwt);
  assign xt_rsc_0_26_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_26_i_s_dout_core, xt_rsc_0_26_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_26_i_bcwt <= 1'b0;
      xt_rsc_0_26_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_26_i_bcwt <= ~((~(xt_rsc_0_26_i_bcwt | xt_rsc_0_26_i_biwt)) | xt_rsc_0_26_i_bdwt);
      xt_rsc_0_26_i_bcwt_1 <= ~((~(xt_rsc_0_26_i_bcwt_1 | xt_rsc_0_26_i_biwt_1))
          | xt_rsc_0_26_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_26_i_biwt ) begin
      xt_rsc_0_26_i_s_din_bfwt <= xt_rsc_0_26_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_26_i_xt_rsc_0_26_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_26_i_xt_rsc_0_26_wait_ctrl (
  core_wen, xt_rsc_0_26_i_oswt, xt_rsc_0_26_i_oswt_1, xt_rsc_0_26_i_biwt, xt_rsc_0_26_i_bdwt,
      xt_rsc_0_26_i_bcwt, xt_rsc_0_26_i_s_re_core_sct, xt_rsc_0_26_i_biwt_1, xt_rsc_0_26_i_bdwt_2,
      xt_rsc_0_26_i_bcwt_1, xt_rsc_0_26_i_s_we_core_sct, xt_rsc_0_26_i_s_rrdy, xt_rsc_0_26_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_26_i_oswt;
  input xt_rsc_0_26_i_oswt_1;
  output xt_rsc_0_26_i_biwt;
  output xt_rsc_0_26_i_bdwt;
  input xt_rsc_0_26_i_bcwt;
  output xt_rsc_0_26_i_s_re_core_sct;
  output xt_rsc_0_26_i_biwt_1;
  output xt_rsc_0_26_i_bdwt_2;
  input xt_rsc_0_26_i_bcwt_1;
  output xt_rsc_0_26_i_s_we_core_sct;
  input xt_rsc_0_26_i_s_rrdy;
  input xt_rsc_0_26_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_26_i_ogwt;
  wire xt_rsc_0_26_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_26_i_bdwt = xt_rsc_0_26_i_oswt & core_wen;
  assign xt_rsc_0_26_i_biwt = xt_rsc_0_26_i_ogwt & xt_rsc_0_26_i_s_rrdy;
  assign xt_rsc_0_26_i_ogwt = xt_rsc_0_26_i_oswt & (~ xt_rsc_0_26_i_bcwt);
  assign xt_rsc_0_26_i_s_re_core_sct = xt_rsc_0_26_i_ogwt;
  assign xt_rsc_0_26_i_bdwt_2 = xt_rsc_0_26_i_oswt_1 & core_wen;
  assign xt_rsc_0_26_i_biwt_1 = xt_rsc_0_26_i_ogwt_1 & xt_rsc_0_26_i_s_wrdy;
  assign xt_rsc_0_26_i_ogwt_1 = xt_rsc_0_26_i_oswt_1 & (~ xt_rsc_0_26_i_bcwt_1);
  assign xt_rsc_0_26_i_s_we_core_sct = xt_rsc_0_26_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_25_i_xt_rsc_0_25_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_25_i_xt_rsc_0_25_wait_dp (
  clk, rst, xt_rsc_0_25_i_oswt, xt_rsc_0_25_i_wen_comp, xt_rsc_0_25_i_oswt_1, xt_rsc_0_25_i_wen_comp_1,
      xt_rsc_0_25_i_s_raddr_core, xt_rsc_0_25_i_s_waddr_core, xt_rsc_0_25_i_s_din_mxwt,
      xt_rsc_0_25_i_s_dout_core, xt_rsc_0_25_i_biwt, xt_rsc_0_25_i_bdwt, xt_rsc_0_25_i_bcwt,
      xt_rsc_0_25_i_biwt_1, xt_rsc_0_25_i_bdwt_2, xt_rsc_0_25_i_bcwt_1, xt_rsc_0_25_i_s_raddr,
      xt_rsc_0_25_i_s_raddr_core_sct, xt_rsc_0_25_i_s_waddr, xt_rsc_0_25_i_s_waddr_core_sct,
      xt_rsc_0_25_i_s_din, xt_rsc_0_25_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_25_i_oswt;
  output xt_rsc_0_25_i_wen_comp;
  input xt_rsc_0_25_i_oswt_1;
  output xt_rsc_0_25_i_wen_comp_1;
  input [3:0] xt_rsc_0_25_i_s_raddr_core;
  input [3:0] xt_rsc_0_25_i_s_waddr_core;
  output [31:0] xt_rsc_0_25_i_s_din_mxwt;
  input [31:0] xt_rsc_0_25_i_s_dout_core;
  input xt_rsc_0_25_i_biwt;
  input xt_rsc_0_25_i_bdwt;
  output xt_rsc_0_25_i_bcwt;
  reg xt_rsc_0_25_i_bcwt;
  input xt_rsc_0_25_i_biwt_1;
  input xt_rsc_0_25_i_bdwt_2;
  output xt_rsc_0_25_i_bcwt_1;
  reg xt_rsc_0_25_i_bcwt_1;
  output [3:0] xt_rsc_0_25_i_s_raddr;
  input xt_rsc_0_25_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_25_i_s_waddr;
  input xt_rsc_0_25_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_25_i_s_din;
  output [31:0] xt_rsc_0_25_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_25_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_25_i_wen_comp = (~ xt_rsc_0_25_i_oswt) | xt_rsc_0_25_i_biwt | xt_rsc_0_25_i_bcwt;
  assign xt_rsc_0_25_i_wen_comp_1 = (~ xt_rsc_0_25_i_oswt_1) | xt_rsc_0_25_i_biwt_1
      | xt_rsc_0_25_i_bcwt_1;
  assign xt_rsc_0_25_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_25_i_s_raddr_core,
      xt_rsc_0_25_i_s_raddr_core_sct);
  assign xt_rsc_0_25_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_25_i_s_waddr_core,
      xt_rsc_0_25_i_s_waddr_core_sct);
  assign xt_rsc_0_25_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_25_i_s_din, xt_rsc_0_25_i_s_din_bfwt,
      xt_rsc_0_25_i_bcwt);
  assign xt_rsc_0_25_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_25_i_s_dout_core, xt_rsc_0_25_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_25_i_bcwt <= 1'b0;
      xt_rsc_0_25_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_25_i_bcwt <= ~((~(xt_rsc_0_25_i_bcwt | xt_rsc_0_25_i_biwt)) | xt_rsc_0_25_i_bdwt);
      xt_rsc_0_25_i_bcwt_1 <= ~((~(xt_rsc_0_25_i_bcwt_1 | xt_rsc_0_25_i_biwt_1))
          | xt_rsc_0_25_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_25_i_biwt ) begin
      xt_rsc_0_25_i_s_din_bfwt <= xt_rsc_0_25_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_25_i_xt_rsc_0_25_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_25_i_xt_rsc_0_25_wait_ctrl (
  core_wen, xt_rsc_0_25_i_oswt, xt_rsc_0_25_i_oswt_1, xt_rsc_0_25_i_biwt, xt_rsc_0_25_i_bdwt,
      xt_rsc_0_25_i_bcwt, xt_rsc_0_25_i_s_re_core_sct, xt_rsc_0_25_i_biwt_1, xt_rsc_0_25_i_bdwt_2,
      xt_rsc_0_25_i_bcwt_1, xt_rsc_0_25_i_s_we_core_sct, xt_rsc_0_25_i_s_rrdy, xt_rsc_0_25_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_25_i_oswt;
  input xt_rsc_0_25_i_oswt_1;
  output xt_rsc_0_25_i_biwt;
  output xt_rsc_0_25_i_bdwt;
  input xt_rsc_0_25_i_bcwt;
  output xt_rsc_0_25_i_s_re_core_sct;
  output xt_rsc_0_25_i_biwt_1;
  output xt_rsc_0_25_i_bdwt_2;
  input xt_rsc_0_25_i_bcwt_1;
  output xt_rsc_0_25_i_s_we_core_sct;
  input xt_rsc_0_25_i_s_rrdy;
  input xt_rsc_0_25_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_25_i_ogwt;
  wire xt_rsc_0_25_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_25_i_bdwt = xt_rsc_0_25_i_oswt & core_wen;
  assign xt_rsc_0_25_i_biwt = xt_rsc_0_25_i_ogwt & xt_rsc_0_25_i_s_rrdy;
  assign xt_rsc_0_25_i_ogwt = xt_rsc_0_25_i_oswt & (~ xt_rsc_0_25_i_bcwt);
  assign xt_rsc_0_25_i_s_re_core_sct = xt_rsc_0_25_i_ogwt;
  assign xt_rsc_0_25_i_bdwt_2 = xt_rsc_0_25_i_oswt_1 & core_wen;
  assign xt_rsc_0_25_i_biwt_1 = xt_rsc_0_25_i_ogwt_1 & xt_rsc_0_25_i_s_wrdy;
  assign xt_rsc_0_25_i_ogwt_1 = xt_rsc_0_25_i_oswt_1 & (~ xt_rsc_0_25_i_bcwt_1);
  assign xt_rsc_0_25_i_s_we_core_sct = xt_rsc_0_25_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_24_i_xt_rsc_0_24_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_24_i_xt_rsc_0_24_wait_dp (
  clk, rst, xt_rsc_0_24_i_oswt, xt_rsc_0_24_i_wen_comp, xt_rsc_0_24_i_oswt_1, xt_rsc_0_24_i_wen_comp_1,
      xt_rsc_0_24_i_s_raddr_core, xt_rsc_0_24_i_s_waddr_core, xt_rsc_0_24_i_s_din_mxwt,
      xt_rsc_0_24_i_s_dout_core, xt_rsc_0_24_i_biwt, xt_rsc_0_24_i_bdwt, xt_rsc_0_24_i_bcwt,
      xt_rsc_0_24_i_biwt_1, xt_rsc_0_24_i_bdwt_2, xt_rsc_0_24_i_bcwt_1, xt_rsc_0_24_i_s_raddr,
      xt_rsc_0_24_i_s_raddr_core_sct, xt_rsc_0_24_i_s_waddr, xt_rsc_0_24_i_s_waddr_core_sct,
      xt_rsc_0_24_i_s_din, xt_rsc_0_24_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_24_i_oswt;
  output xt_rsc_0_24_i_wen_comp;
  input xt_rsc_0_24_i_oswt_1;
  output xt_rsc_0_24_i_wen_comp_1;
  input [3:0] xt_rsc_0_24_i_s_raddr_core;
  input [3:0] xt_rsc_0_24_i_s_waddr_core;
  output [31:0] xt_rsc_0_24_i_s_din_mxwt;
  input [31:0] xt_rsc_0_24_i_s_dout_core;
  input xt_rsc_0_24_i_biwt;
  input xt_rsc_0_24_i_bdwt;
  output xt_rsc_0_24_i_bcwt;
  reg xt_rsc_0_24_i_bcwt;
  input xt_rsc_0_24_i_biwt_1;
  input xt_rsc_0_24_i_bdwt_2;
  output xt_rsc_0_24_i_bcwt_1;
  reg xt_rsc_0_24_i_bcwt_1;
  output [3:0] xt_rsc_0_24_i_s_raddr;
  input xt_rsc_0_24_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_24_i_s_waddr;
  input xt_rsc_0_24_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_24_i_s_din;
  output [31:0] xt_rsc_0_24_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_24_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_24_i_wen_comp = (~ xt_rsc_0_24_i_oswt) | xt_rsc_0_24_i_biwt | xt_rsc_0_24_i_bcwt;
  assign xt_rsc_0_24_i_wen_comp_1 = (~ xt_rsc_0_24_i_oswt_1) | xt_rsc_0_24_i_biwt_1
      | xt_rsc_0_24_i_bcwt_1;
  assign xt_rsc_0_24_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_24_i_s_raddr_core,
      xt_rsc_0_24_i_s_raddr_core_sct);
  assign xt_rsc_0_24_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_24_i_s_waddr_core,
      xt_rsc_0_24_i_s_waddr_core_sct);
  assign xt_rsc_0_24_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_24_i_s_din, xt_rsc_0_24_i_s_din_bfwt,
      xt_rsc_0_24_i_bcwt);
  assign xt_rsc_0_24_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_24_i_s_dout_core, xt_rsc_0_24_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_24_i_bcwt <= 1'b0;
      xt_rsc_0_24_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_24_i_bcwt <= ~((~(xt_rsc_0_24_i_bcwt | xt_rsc_0_24_i_biwt)) | xt_rsc_0_24_i_bdwt);
      xt_rsc_0_24_i_bcwt_1 <= ~((~(xt_rsc_0_24_i_bcwt_1 | xt_rsc_0_24_i_biwt_1))
          | xt_rsc_0_24_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_24_i_biwt ) begin
      xt_rsc_0_24_i_s_din_bfwt <= xt_rsc_0_24_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_24_i_xt_rsc_0_24_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_24_i_xt_rsc_0_24_wait_ctrl (
  core_wen, xt_rsc_0_24_i_oswt, xt_rsc_0_24_i_oswt_1, xt_rsc_0_24_i_biwt, xt_rsc_0_24_i_bdwt,
      xt_rsc_0_24_i_bcwt, xt_rsc_0_24_i_s_re_core_sct, xt_rsc_0_24_i_biwt_1, xt_rsc_0_24_i_bdwt_2,
      xt_rsc_0_24_i_bcwt_1, xt_rsc_0_24_i_s_we_core_sct, xt_rsc_0_24_i_s_rrdy, xt_rsc_0_24_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_24_i_oswt;
  input xt_rsc_0_24_i_oswt_1;
  output xt_rsc_0_24_i_biwt;
  output xt_rsc_0_24_i_bdwt;
  input xt_rsc_0_24_i_bcwt;
  output xt_rsc_0_24_i_s_re_core_sct;
  output xt_rsc_0_24_i_biwt_1;
  output xt_rsc_0_24_i_bdwt_2;
  input xt_rsc_0_24_i_bcwt_1;
  output xt_rsc_0_24_i_s_we_core_sct;
  input xt_rsc_0_24_i_s_rrdy;
  input xt_rsc_0_24_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_24_i_ogwt;
  wire xt_rsc_0_24_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_24_i_bdwt = xt_rsc_0_24_i_oswt & core_wen;
  assign xt_rsc_0_24_i_biwt = xt_rsc_0_24_i_ogwt & xt_rsc_0_24_i_s_rrdy;
  assign xt_rsc_0_24_i_ogwt = xt_rsc_0_24_i_oswt & (~ xt_rsc_0_24_i_bcwt);
  assign xt_rsc_0_24_i_s_re_core_sct = xt_rsc_0_24_i_ogwt;
  assign xt_rsc_0_24_i_bdwt_2 = xt_rsc_0_24_i_oswt_1 & core_wen;
  assign xt_rsc_0_24_i_biwt_1 = xt_rsc_0_24_i_ogwt_1 & xt_rsc_0_24_i_s_wrdy;
  assign xt_rsc_0_24_i_ogwt_1 = xt_rsc_0_24_i_oswt_1 & (~ xt_rsc_0_24_i_bcwt_1);
  assign xt_rsc_0_24_i_s_we_core_sct = xt_rsc_0_24_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_23_i_xt_rsc_0_23_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_23_i_xt_rsc_0_23_wait_dp (
  clk, rst, xt_rsc_0_23_i_oswt, xt_rsc_0_23_i_wen_comp, xt_rsc_0_23_i_oswt_1, xt_rsc_0_23_i_wen_comp_1,
      xt_rsc_0_23_i_s_raddr_core, xt_rsc_0_23_i_s_waddr_core, xt_rsc_0_23_i_s_din_mxwt,
      xt_rsc_0_23_i_s_dout_core, xt_rsc_0_23_i_biwt, xt_rsc_0_23_i_bdwt, xt_rsc_0_23_i_bcwt,
      xt_rsc_0_23_i_biwt_1, xt_rsc_0_23_i_bdwt_2, xt_rsc_0_23_i_bcwt_1, xt_rsc_0_23_i_s_raddr,
      xt_rsc_0_23_i_s_raddr_core_sct, xt_rsc_0_23_i_s_waddr, xt_rsc_0_23_i_s_waddr_core_sct,
      xt_rsc_0_23_i_s_din, xt_rsc_0_23_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_23_i_oswt;
  output xt_rsc_0_23_i_wen_comp;
  input xt_rsc_0_23_i_oswt_1;
  output xt_rsc_0_23_i_wen_comp_1;
  input [3:0] xt_rsc_0_23_i_s_raddr_core;
  input [3:0] xt_rsc_0_23_i_s_waddr_core;
  output [31:0] xt_rsc_0_23_i_s_din_mxwt;
  input [31:0] xt_rsc_0_23_i_s_dout_core;
  input xt_rsc_0_23_i_biwt;
  input xt_rsc_0_23_i_bdwt;
  output xt_rsc_0_23_i_bcwt;
  reg xt_rsc_0_23_i_bcwt;
  input xt_rsc_0_23_i_biwt_1;
  input xt_rsc_0_23_i_bdwt_2;
  output xt_rsc_0_23_i_bcwt_1;
  reg xt_rsc_0_23_i_bcwt_1;
  output [3:0] xt_rsc_0_23_i_s_raddr;
  input xt_rsc_0_23_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_23_i_s_waddr;
  input xt_rsc_0_23_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_23_i_s_din;
  output [31:0] xt_rsc_0_23_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_23_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_23_i_wen_comp = (~ xt_rsc_0_23_i_oswt) | xt_rsc_0_23_i_biwt | xt_rsc_0_23_i_bcwt;
  assign xt_rsc_0_23_i_wen_comp_1 = (~ xt_rsc_0_23_i_oswt_1) | xt_rsc_0_23_i_biwt_1
      | xt_rsc_0_23_i_bcwt_1;
  assign xt_rsc_0_23_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_23_i_s_raddr_core,
      xt_rsc_0_23_i_s_raddr_core_sct);
  assign xt_rsc_0_23_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_23_i_s_waddr_core,
      xt_rsc_0_23_i_s_waddr_core_sct);
  assign xt_rsc_0_23_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_23_i_s_din, xt_rsc_0_23_i_s_din_bfwt,
      xt_rsc_0_23_i_bcwt);
  assign xt_rsc_0_23_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_23_i_s_dout_core, xt_rsc_0_23_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_23_i_bcwt <= 1'b0;
      xt_rsc_0_23_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_23_i_bcwt <= ~((~(xt_rsc_0_23_i_bcwt | xt_rsc_0_23_i_biwt)) | xt_rsc_0_23_i_bdwt);
      xt_rsc_0_23_i_bcwt_1 <= ~((~(xt_rsc_0_23_i_bcwt_1 | xt_rsc_0_23_i_biwt_1))
          | xt_rsc_0_23_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_23_i_biwt ) begin
      xt_rsc_0_23_i_s_din_bfwt <= xt_rsc_0_23_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_23_i_xt_rsc_0_23_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_23_i_xt_rsc_0_23_wait_ctrl (
  core_wen, xt_rsc_0_23_i_oswt, xt_rsc_0_23_i_oswt_1, xt_rsc_0_23_i_biwt, xt_rsc_0_23_i_bdwt,
      xt_rsc_0_23_i_bcwt, xt_rsc_0_23_i_s_re_core_sct, xt_rsc_0_23_i_biwt_1, xt_rsc_0_23_i_bdwt_2,
      xt_rsc_0_23_i_bcwt_1, xt_rsc_0_23_i_s_we_core_sct, xt_rsc_0_23_i_s_rrdy, xt_rsc_0_23_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_23_i_oswt;
  input xt_rsc_0_23_i_oswt_1;
  output xt_rsc_0_23_i_biwt;
  output xt_rsc_0_23_i_bdwt;
  input xt_rsc_0_23_i_bcwt;
  output xt_rsc_0_23_i_s_re_core_sct;
  output xt_rsc_0_23_i_biwt_1;
  output xt_rsc_0_23_i_bdwt_2;
  input xt_rsc_0_23_i_bcwt_1;
  output xt_rsc_0_23_i_s_we_core_sct;
  input xt_rsc_0_23_i_s_rrdy;
  input xt_rsc_0_23_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_23_i_ogwt;
  wire xt_rsc_0_23_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_23_i_bdwt = xt_rsc_0_23_i_oswt & core_wen;
  assign xt_rsc_0_23_i_biwt = xt_rsc_0_23_i_ogwt & xt_rsc_0_23_i_s_rrdy;
  assign xt_rsc_0_23_i_ogwt = xt_rsc_0_23_i_oswt & (~ xt_rsc_0_23_i_bcwt);
  assign xt_rsc_0_23_i_s_re_core_sct = xt_rsc_0_23_i_ogwt;
  assign xt_rsc_0_23_i_bdwt_2 = xt_rsc_0_23_i_oswt_1 & core_wen;
  assign xt_rsc_0_23_i_biwt_1 = xt_rsc_0_23_i_ogwt_1 & xt_rsc_0_23_i_s_wrdy;
  assign xt_rsc_0_23_i_ogwt_1 = xt_rsc_0_23_i_oswt_1 & (~ xt_rsc_0_23_i_bcwt_1);
  assign xt_rsc_0_23_i_s_we_core_sct = xt_rsc_0_23_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_22_i_xt_rsc_0_22_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_22_i_xt_rsc_0_22_wait_dp (
  clk, rst, xt_rsc_0_22_i_oswt, xt_rsc_0_22_i_wen_comp, xt_rsc_0_22_i_oswt_1, xt_rsc_0_22_i_wen_comp_1,
      xt_rsc_0_22_i_s_raddr_core, xt_rsc_0_22_i_s_waddr_core, xt_rsc_0_22_i_s_din_mxwt,
      xt_rsc_0_22_i_s_dout_core, xt_rsc_0_22_i_biwt, xt_rsc_0_22_i_bdwt, xt_rsc_0_22_i_bcwt,
      xt_rsc_0_22_i_biwt_1, xt_rsc_0_22_i_bdwt_2, xt_rsc_0_22_i_bcwt_1, xt_rsc_0_22_i_s_raddr,
      xt_rsc_0_22_i_s_raddr_core_sct, xt_rsc_0_22_i_s_waddr, xt_rsc_0_22_i_s_waddr_core_sct,
      xt_rsc_0_22_i_s_din, xt_rsc_0_22_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_22_i_oswt;
  output xt_rsc_0_22_i_wen_comp;
  input xt_rsc_0_22_i_oswt_1;
  output xt_rsc_0_22_i_wen_comp_1;
  input [3:0] xt_rsc_0_22_i_s_raddr_core;
  input [3:0] xt_rsc_0_22_i_s_waddr_core;
  output [31:0] xt_rsc_0_22_i_s_din_mxwt;
  input [31:0] xt_rsc_0_22_i_s_dout_core;
  input xt_rsc_0_22_i_biwt;
  input xt_rsc_0_22_i_bdwt;
  output xt_rsc_0_22_i_bcwt;
  reg xt_rsc_0_22_i_bcwt;
  input xt_rsc_0_22_i_biwt_1;
  input xt_rsc_0_22_i_bdwt_2;
  output xt_rsc_0_22_i_bcwt_1;
  reg xt_rsc_0_22_i_bcwt_1;
  output [3:0] xt_rsc_0_22_i_s_raddr;
  input xt_rsc_0_22_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_22_i_s_waddr;
  input xt_rsc_0_22_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_22_i_s_din;
  output [31:0] xt_rsc_0_22_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_22_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_22_i_wen_comp = (~ xt_rsc_0_22_i_oswt) | xt_rsc_0_22_i_biwt | xt_rsc_0_22_i_bcwt;
  assign xt_rsc_0_22_i_wen_comp_1 = (~ xt_rsc_0_22_i_oswt_1) | xt_rsc_0_22_i_biwt_1
      | xt_rsc_0_22_i_bcwt_1;
  assign xt_rsc_0_22_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_22_i_s_raddr_core,
      xt_rsc_0_22_i_s_raddr_core_sct);
  assign xt_rsc_0_22_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_22_i_s_waddr_core,
      xt_rsc_0_22_i_s_waddr_core_sct);
  assign xt_rsc_0_22_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_22_i_s_din, xt_rsc_0_22_i_s_din_bfwt,
      xt_rsc_0_22_i_bcwt);
  assign xt_rsc_0_22_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_22_i_s_dout_core, xt_rsc_0_22_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_22_i_bcwt <= 1'b0;
      xt_rsc_0_22_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_22_i_bcwt <= ~((~(xt_rsc_0_22_i_bcwt | xt_rsc_0_22_i_biwt)) | xt_rsc_0_22_i_bdwt);
      xt_rsc_0_22_i_bcwt_1 <= ~((~(xt_rsc_0_22_i_bcwt_1 | xt_rsc_0_22_i_biwt_1))
          | xt_rsc_0_22_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_22_i_biwt ) begin
      xt_rsc_0_22_i_s_din_bfwt <= xt_rsc_0_22_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_22_i_xt_rsc_0_22_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_22_i_xt_rsc_0_22_wait_ctrl (
  core_wen, xt_rsc_0_22_i_oswt, xt_rsc_0_22_i_oswt_1, xt_rsc_0_22_i_biwt, xt_rsc_0_22_i_bdwt,
      xt_rsc_0_22_i_bcwt, xt_rsc_0_22_i_s_re_core_sct, xt_rsc_0_22_i_biwt_1, xt_rsc_0_22_i_bdwt_2,
      xt_rsc_0_22_i_bcwt_1, xt_rsc_0_22_i_s_we_core_sct, xt_rsc_0_22_i_s_rrdy, xt_rsc_0_22_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_22_i_oswt;
  input xt_rsc_0_22_i_oswt_1;
  output xt_rsc_0_22_i_biwt;
  output xt_rsc_0_22_i_bdwt;
  input xt_rsc_0_22_i_bcwt;
  output xt_rsc_0_22_i_s_re_core_sct;
  output xt_rsc_0_22_i_biwt_1;
  output xt_rsc_0_22_i_bdwt_2;
  input xt_rsc_0_22_i_bcwt_1;
  output xt_rsc_0_22_i_s_we_core_sct;
  input xt_rsc_0_22_i_s_rrdy;
  input xt_rsc_0_22_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_22_i_ogwt;
  wire xt_rsc_0_22_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_22_i_bdwt = xt_rsc_0_22_i_oswt & core_wen;
  assign xt_rsc_0_22_i_biwt = xt_rsc_0_22_i_ogwt & xt_rsc_0_22_i_s_rrdy;
  assign xt_rsc_0_22_i_ogwt = xt_rsc_0_22_i_oswt & (~ xt_rsc_0_22_i_bcwt);
  assign xt_rsc_0_22_i_s_re_core_sct = xt_rsc_0_22_i_ogwt;
  assign xt_rsc_0_22_i_bdwt_2 = xt_rsc_0_22_i_oswt_1 & core_wen;
  assign xt_rsc_0_22_i_biwt_1 = xt_rsc_0_22_i_ogwt_1 & xt_rsc_0_22_i_s_wrdy;
  assign xt_rsc_0_22_i_ogwt_1 = xt_rsc_0_22_i_oswt_1 & (~ xt_rsc_0_22_i_bcwt_1);
  assign xt_rsc_0_22_i_s_we_core_sct = xt_rsc_0_22_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_21_i_xt_rsc_0_21_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_21_i_xt_rsc_0_21_wait_dp (
  clk, rst, xt_rsc_0_21_i_oswt, xt_rsc_0_21_i_wen_comp, xt_rsc_0_21_i_oswt_1, xt_rsc_0_21_i_wen_comp_1,
      xt_rsc_0_21_i_s_raddr_core, xt_rsc_0_21_i_s_waddr_core, xt_rsc_0_21_i_s_din_mxwt,
      xt_rsc_0_21_i_s_dout_core, xt_rsc_0_21_i_biwt, xt_rsc_0_21_i_bdwt, xt_rsc_0_21_i_bcwt,
      xt_rsc_0_21_i_biwt_1, xt_rsc_0_21_i_bdwt_2, xt_rsc_0_21_i_bcwt_1, xt_rsc_0_21_i_s_raddr,
      xt_rsc_0_21_i_s_raddr_core_sct, xt_rsc_0_21_i_s_waddr, xt_rsc_0_21_i_s_waddr_core_sct,
      xt_rsc_0_21_i_s_din, xt_rsc_0_21_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_21_i_oswt;
  output xt_rsc_0_21_i_wen_comp;
  input xt_rsc_0_21_i_oswt_1;
  output xt_rsc_0_21_i_wen_comp_1;
  input [3:0] xt_rsc_0_21_i_s_raddr_core;
  input [3:0] xt_rsc_0_21_i_s_waddr_core;
  output [31:0] xt_rsc_0_21_i_s_din_mxwt;
  input [31:0] xt_rsc_0_21_i_s_dout_core;
  input xt_rsc_0_21_i_biwt;
  input xt_rsc_0_21_i_bdwt;
  output xt_rsc_0_21_i_bcwt;
  reg xt_rsc_0_21_i_bcwt;
  input xt_rsc_0_21_i_biwt_1;
  input xt_rsc_0_21_i_bdwt_2;
  output xt_rsc_0_21_i_bcwt_1;
  reg xt_rsc_0_21_i_bcwt_1;
  output [3:0] xt_rsc_0_21_i_s_raddr;
  input xt_rsc_0_21_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_21_i_s_waddr;
  input xt_rsc_0_21_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_21_i_s_din;
  output [31:0] xt_rsc_0_21_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_21_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_21_i_wen_comp = (~ xt_rsc_0_21_i_oswt) | xt_rsc_0_21_i_biwt | xt_rsc_0_21_i_bcwt;
  assign xt_rsc_0_21_i_wen_comp_1 = (~ xt_rsc_0_21_i_oswt_1) | xt_rsc_0_21_i_biwt_1
      | xt_rsc_0_21_i_bcwt_1;
  assign xt_rsc_0_21_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_21_i_s_raddr_core,
      xt_rsc_0_21_i_s_raddr_core_sct);
  assign xt_rsc_0_21_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_21_i_s_waddr_core,
      xt_rsc_0_21_i_s_waddr_core_sct);
  assign xt_rsc_0_21_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_21_i_s_din, xt_rsc_0_21_i_s_din_bfwt,
      xt_rsc_0_21_i_bcwt);
  assign xt_rsc_0_21_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_21_i_s_dout_core, xt_rsc_0_21_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_21_i_bcwt <= 1'b0;
      xt_rsc_0_21_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_21_i_bcwt <= ~((~(xt_rsc_0_21_i_bcwt | xt_rsc_0_21_i_biwt)) | xt_rsc_0_21_i_bdwt);
      xt_rsc_0_21_i_bcwt_1 <= ~((~(xt_rsc_0_21_i_bcwt_1 | xt_rsc_0_21_i_biwt_1))
          | xt_rsc_0_21_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_21_i_biwt ) begin
      xt_rsc_0_21_i_s_din_bfwt <= xt_rsc_0_21_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_21_i_xt_rsc_0_21_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_21_i_xt_rsc_0_21_wait_ctrl (
  core_wen, xt_rsc_0_21_i_oswt, xt_rsc_0_21_i_oswt_1, xt_rsc_0_21_i_biwt, xt_rsc_0_21_i_bdwt,
      xt_rsc_0_21_i_bcwt, xt_rsc_0_21_i_s_re_core_sct, xt_rsc_0_21_i_biwt_1, xt_rsc_0_21_i_bdwt_2,
      xt_rsc_0_21_i_bcwt_1, xt_rsc_0_21_i_s_we_core_sct, xt_rsc_0_21_i_s_rrdy, xt_rsc_0_21_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_21_i_oswt;
  input xt_rsc_0_21_i_oswt_1;
  output xt_rsc_0_21_i_biwt;
  output xt_rsc_0_21_i_bdwt;
  input xt_rsc_0_21_i_bcwt;
  output xt_rsc_0_21_i_s_re_core_sct;
  output xt_rsc_0_21_i_biwt_1;
  output xt_rsc_0_21_i_bdwt_2;
  input xt_rsc_0_21_i_bcwt_1;
  output xt_rsc_0_21_i_s_we_core_sct;
  input xt_rsc_0_21_i_s_rrdy;
  input xt_rsc_0_21_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_21_i_ogwt;
  wire xt_rsc_0_21_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_21_i_bdwt = xt_rsc_0_21_i_oswt & core_wen;
  assign xt_rsc_0_21_i_biwt = xt_rsc_0_21_i_ogwt & xt_rsc_0_21_i_s_rrdy;
  assign xt_rsc_0_21_i_ogwt = xt_rsc_0_21_i_oswt & (~ xt_rsc_0_21_i_bcwt);
  assign xt_rsc_0_21_i_s_re_core_sct = xt_rsc_0_21_i_ogwt;
  assign xt_rsc_0_21_i_bdwt_2 = xt_rsc_0_21_i_oswt_1 & core_wen;
  assign xt_rsc_0_21_i_biwt_1 = xt_rsc_0_21_i_ogwt_1 & xt_rsc_0_21_i_s_wrdy;
  assign xt_rsc_0_21_i_ogwt_1 = xt_rsc_0_21_i_oswt_1 & (~ xt_rsc_0_21_i_bcwt_1);
  assign xt_rsc_0_21_i_s_we_core_sct = xt_rsc_0_21_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_20_i_xt_rsc_0_20_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_20_i_xt_rsc_0_20_wait_dp (
  clk, rst, xt_rsc_0_20_i_oswt, xt_rsc_0_20_i_wen_comp, xt_rsc_0_20_i_oswt_1, xt_rsc_0_20_i_wen_comp_1,
      xt_rsc_0_20_i_s_raddr_core, xt_rsc_0_20_i_s_waddr_core, xt_rsc_0_20_i_s_din_mxwt,
      xt_rsc_0_20_i_s_dout_core, xt_rsc_0_20_i_biwt, xt_rsc_0_20_i_bdwt, xt_rsc_0_20_i_bcwt,
      xt_rsc_0_20_i_biwt_1, xt_rsc_0_20_i_bdwt_2, xt_rsc_0_20_i_bcwt_1, xt_rsc_0_20_i_s_raddr,
      xt_rsc_0_20_i_s_raddr_core_sct, xt_rsc_0_20_i_s_waddr, xt_rsc_0_20_i_s_waddr_core_sct,
      xt_rsc_0_20_i_s_din, xt_rsc_0_20_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_20_i_oswt;
  output xt_rsc_0_20_i_wen_comp;
  input xt_rsc_0_20_i_oswt_1;
  output xt_rsc_0_20_i_wen_comp_1;
  input [3:0] xt_rsc_0_20_i_s_raddr_core;
  input [3:0] xt_rsc_0_20_i_s_waddr_core;
  output [31:0] xt_rsc_0_20_i_s_din_mxwt;
  input [31:0] xt_rsc_0_20_i_s_dout_core;
  input xt_rsc_0_20_i_biwt;
  input xt_rsc_0_20_i_bdwt;
  output xt_rsc_0_20_i_bcwt;
  reg xt_rsc_0_20_i_bcwt;
  input xt_rsc_0_20_i_biwt_1;
  input xt_rsc_0_20_i_bdwt_2;
  output xt_rsc_0_20_i_bcwt_1;
  reg xt_rsc_0_20_i_bcwt_1;
  output [3:0] xt_rsc_0_20_i_s_raddr;
  input xt_rsc_0_20_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_20_i_s_waddr;
  input xt_rsc_0_20_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_20_i_s_din;
  output [31:0] xt_rsc_0_20_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_20_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_20_i_wen_comp = (~ xt_rsc_0_20_i_oswt) | xt_rsc_0_20_i_biwt | xt_rsc_0_20_i_bcwt;
  assign xt_rsc_0_20_i_wen_comp_1 = (~ xt_rsc_0_20_i_oswt_1) | xt_rsc_0_20_i_biwt_1
      | xt_rsc_0_20_i_bcwt_1;
  assign xt_rsc_0_20_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_20_i_s_raddr_core,
      xt_rsc_0_20_i_s_raddr_core_sct);
  assign xt_rsc_0_20_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_20_i_s_waddr_core,
      xt_rsc_0_20_i_s_waddr_core_sct);
  assign xt_rsc_0_20_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_20_i_s_din, xt_rsc_0_20_i_s_din_bfwt,
      xt_rsc_0_20_i_bcwt);
  assign xt_rsc_0_20_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_20_i_s_dout_core, xt_rsc_0_20_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_20_i_bcwt <= 1'b0;
      xt_rsc_0_20_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_20_i_bcwt <= ~((~(xt_rsc_0_20_i_bcwt | xt_rsc_0_20_i_biwt)) | xt_rsc_0_20_i_bdwt);
      xt_rsc_0_20_i_bcwt_1 <= ~((~(xt_rsc_0_20_i_bcwt_1 | xt_rsc_0_20_i_biwt_1))
          | xt_rsc_0_20_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_20_i_biwt ) begin
      xt_rsc_0_20_i_s_din_bfwt <= xt_rsc_0_20_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_20_i_xt_rsc_0_20_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_20_i_xt_rsc_0_20_wait_ctrl (
  core_wen, xt_rsc_0_20_i_oswt, xt_rsc_0_20_i_oswt_1, xt_rsc_0_20_i_biwt, xt_rsc_0_20_i_bdwt,
      xt_rsc_0_20_i_bcwt, xt_rsc_0_20_i_s_re_core_sct, xt_rsc_0_20_i_biwt_1, xt_rsc_0_20_i_bdwt_2,
      xt_rsc_0_20_i_bcwt_1, xt_rsc_0_20_i_s_we_core_sct, xt_rsc_0_20_i_s_rrdy, xt_rsc_0_20_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_20_i_oswt;
  input xt_rsc_0_20_i_oswt_1;
  output xt_rsc_0_20_i_biwt;
  output xt_rsc_0_20_i_bdwt;
  input xt_rsc_0_20_i_bcwt;
  output xt_rsc_0_20_i_s_re_core_sct;
  output xt_rsc_0_20_i_biwt_1;
  output xt_rsc_0_20_i_bdwt_2;
  input xt_rsc_0_20_i_bcwt_1;
  output xt_rsc_0_20_i_s_we_core_sct;
  input xt_rsc_0_20_i_s_rrdy;
  input xt_rsc_0_20_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_20_i_ogwt;
  wire xt_rsc_0_20_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_20_i_bdwt = xt_rsc_0_20_i_oswt & core_wen;
  assign xt_rsc_0_20_i_biwt = xt_rsc_0_20_i_ogwt & xt_rsc_0_20_i_s_rrdy;
  assign xt_rsc_0_20_i_ogwt = xt_rsc_0_20_i_oswt & (~ xt_rsc_0_20_i_bcwt);
  assign xt_rsc_0_20_i_s_re_core_sct = xt_rsc_0_20_i_ogwt;
  assign xt_rsc_0_20_i_bdwt_2 = xt_rsc_0_20_i_oswt_1 & core_wen;
  assign xt_rsc_0_20_i_biwt_1 = xt_rsc_0_20_i_ogwt_1 & xt_rsc_0_20_i_s_wrdy;
  assign xt_rsc_0_20_i_ogwt_1 = xt_rsc_0_20_i_oswt_1 & (~ xt_rsc_0_20_i_bcwt_1);
  assign xt_rsc_0_20_i_s_we_core_sct = xt_rsc_0_20_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_19_i_xt_rsc_0_19_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_19_i_xt_rsc_0_19_wait_dp (
  clk, rst, xt_rsc_0_19_i_oswt, xt_rsc_0_19_i_wen_comp, xt_rsc_0_19_i_oswt_1, xt_rsc_0_19_i_wen_comp_1,
      xt_rsc_0_19_i_s_raddr_core, xt_rsc_0_19_i_s_waddr_core, xt_rsc_0_19_i_s_din_mxwt,
      xt_rsc_0_19_i_s_dout_core, xt_rsc_0_19_i_biwt, xt_rsc_0_19_i_bdwt, xt_rsc_0_19_i_bcwt,
      xt_rsc_0_19_i_biwt_1, xt_rsc_0_19_i_bdwt_2, xt_rsc_0_19_i_bcwt_1, xt_rsc_0_19_i_s_raddr,
      xt_rsc_0_19_i_s_raddr_core_sct, xt_rsc_0_19_i_s_waddr, xt_rsc_0_19_i_s_waddr_core_sct,
      xt_rsc_0_19_i_s_din, xt_rsc_0_19_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_19_i_oswt;
  output xt_rsc_0_19_i_wen_comp;
  input xt_rsc_0_19_i_oswt_1;
  output xt_rsc_0_19_i_wen_comp_1;
  input [3:0] xt_rsc_0_19_i_s_raddr_core;
  input [3:0] xt_rsc_0_19_i_s_waddr_core;
  output [31:0] xt_rsc_0_19_i_s_din_mxwt;
  input [31:0] xt_rsc_0_19_i_s_dout_core;
  input xt_rsc_0_19_i_biwt;
  input xt_rsc_0_19_i_bdwt;
  output xt_rsc_0_19_i_bcwt;
  reg xt_rsc_0_19_i_bcwt;
  input xt_rsc_0_19_i_biwt_1;
  input xt_rsc_0_19_i_bdwt_2;
  output xt_rsc_0_19_i_bcwt_1;
  reg xt_rsc_0_19_i_bcwt_1;
  output [3:0] xt_rsc_0_19_i_s_raddr;
  input xt_rsc_0_19_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_19_i_s_waddr;
  input xt_rsc_0_19_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_19_i_s_din;
  output [31:0] xt_rsc_0_19_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_19_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_19_i_wen_comp = (~ xt_rsc_0_19_i_oswt) | xt_rsc_0_19_i_biwt | xt_rsc_0_19_i_bcwt;
  assign xt_rsc_0_19_i_wen_comp_1 = (~ xt_rsc_0_19_i_oswt_1) | xt_rsc_0_19_i_biwt_1
      | xt_rsc_0_19_i_bcwt_1;
  assign xt_rsc_0_19_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_19_i_s_raddr_core,
      xt_rsc_0_19_i_s_raddr_core_sct);
  assign xt_rsc_0_19_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_19_i_s_waddr_core,
      xt_rsc_0_19_i_s_waddr_core_sct);
  assign xt_rsc_0_19_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_19_i_s_din, xt_rsc_0_19_i_s_din_bfwt,
      xt_rsc_0_19_i_bcwt);
  assign xt_rsc_0_19_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_19_i_s_dout_core, xt_rsc_0_19_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_19_i_bcwt <= 1'b0;
      xt_rsc_0_19_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_19_i_bcwt <= ~((~(xt_rsc_0_19_i_bcwt | xt_rsc_0_19_i_biwt)) | xt_rsc_0_19_i_bdwt);
      xt_rsc_0_19_i_bcwt_1 <= ~((~(xt_rsc_0_19_i_bcwt_1 | xt_rsc_0_19_i_biwt_1))
          | xt_rsc_0_19_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_19_i_biwt ) begin
      xt_rsc_0_19_i_s_din_bfwt <= xt_rsc_0_19_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_19_i_xt_rsc_0_19_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_19_i_xt_rsc_0_19_wait_ctrl (
  core_wen, xt_rsc_0_19_i_oswt, xt_rsc_0_19_i_oswt_1, xt_rsc_0_19_i_biwt, xt_rsc_0_19_i_bdwt,
      xt_rsc_0_19_i_bcwt, xt_rsc_0_19_i_s_re_core_sct, xt_rsc_0_19_i_biwt_1, xt_rsc_0_19_i_bdwt_2,
      xt_rsc_0_19_i_bcwt_1, xt_rsc_0_19_i_s_we_core_sct, xt_rsc_0_19_i_s_rrdy, xt_rsc_0_19_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_19_i_oswt;
  input xt_rsc_0_19_i_oswt_1;
  output xt_rsc_0_19_i_biwt;
  output xt_rsc_0_19_i_bdwt;
  input xt_rsc_0_19_i_bcwt;
  output xt_rsc_0_19_i_s_re_core_sct;
  output xt_rsc_0_19_i_biwt_1;
  output xt_rsc_0_19_i_bdwt_2;
  input xt_rsc_0_19_i_bcwt_1;
  output xt_rsc_0_19_i_s_we_core_sct;
  input xt_rsc_0_19_i_s_rrdy;
  input xt_rsc_0_19_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_19_i_ogwt;
  wire xt_rsc_0_19_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_19_i_bdwt = xt_rsc_0_19_i_oswt & core_wen;
  assign xt_rsc_0_19_i_biwt = xt_rsc_0_19_i_ogwt & xt_rsc_0_19_i_s_rrdy;
  assign xt_rsc_0_19_i_ogwt = xt_rsc_0_19_i_oswt & (~ xt_rsc_0_19_i_bcwt);
  assign xt_rsc_0_19_i_s_re_core_sct = xt_rsc_0_19_i_ogwt;
  assign xt_rsc_0_19_i_bdwt_2 = xt_rsc_0_19_i_oswt_1 & core_wen;
  assign xt_rsc_0_19_i_biwt_1 = xt_rsc_0_19_i_ogwt_1 & xt_rsc_0_19_i_s_wrdy;
  assign xt_rsc_0_19_i_ogwt_1 = xt_rsc_0_19_i_oswt_1 & (~ xt_rsc_0_19_i_bcwt_1);
  assign xt_rsc_0_19_i_s_we_core_sct = xt_rsc_0_19_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_18_i_xt_rsc_0_18_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_18_i_xt_rsc_0_18_wait_dp (
  clk, rst, xt_rsc_0_18_i_oswt, xt_rsc_0_18_i_wen_comp, xt_rsc_0_18_i_oswt_1, xt_rsc_0_18_i_wen_comp_1,
      xt_rsc_0_18_i_s_raddr_core, xt_rsc_0_18_i_s_waddr_core, xt_rsc_0_18_i_s_din_mxwt,
      xt_rsc_0_18_i_s_dout_core, xt_rsc_0_18_i_biwt, xt_rsc_0_18_i_bdwt, xt_rsc_0_18_i_bcwt,
      xt_rsc_0_18_i_biwt_1, xt_rsc_0_18_i_bdwt_2, xt_rsc_0_18_i_bcwt_1, xt_rsc_0_18_i_s_raddr,
      xt_rsc_0_18_i_s_raddr_core_sct, xt_rsc_0_18_i_s_waddr, xt_rsc_0_18_i_s_waddr_core_sct,
      xt_rsc_0_18_i_s_din, xt_rsc_0_18_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_18_i_oswt;
  output xt_rsc_0_18_i_wen_comp;
  input xt_rsc_0_18_i_oswt_1;
  output xt_rsc_0_18_i_wen_comp_1;
  input [3:0] xt_rsc_0_18_i_s_raddr_core;
  input [3:0] xt_rsc_0_18_i_s_waddr_core;
  output [31:0] xt_rsc_0_18_i_s_din_mxwt;
  input [31:0] xt_rsc_0_18_i_s_dout_core;
  input xt_rsc_0_18_i_biwt;
  input xt_rsc_0_18_i_bdwt;
  output xt_rsc_0_18_i_bcwt;
  reg xt_rsc_0_18_i_bcwt;
  input xt_rsc_0_18_i_biwt_1;
  input xt_rsc_0_18_i_bdwt_2;
  output xt_rsc_0_18_i_bcwt_1;
  reg xt_rsc_0_18_i_bcwt_1;
  output [3:0] xt_rsc_0_18_i_s_raddr;
  input xt_rsc_0_18_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_18_i_s_waddr;
  input xt_rsc_0_18_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_18_i_s_din;
  output [31:0] xt_rsc_0_18_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_18_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_18_i_wen_comp = (~ xt_rsc_0_18_i_oswt) | xt_rsc_0_18_i_biwt | xt_rsc_0_18_i_bcwt;
  assign xt_rsc_0_18_i_wen_comp_1 = (~ xt_rsc_0_18_i_oswt_1) | xt_rsc_0_18_i_biwt_1
      | xt_rsc_0_18_i_bcwt_1;
  assign xt_rsc_0_18_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_18_i_s_raddr_core,
      xt_rsc_0_18_i_s_raddr_core_sct);
  assign xt_rsc_0_18_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_18_i_s_waddr_core,
      xt_rsc_0_18_i_s_waddr_core_sct);
  assign xt_rsc_0_18_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_18_i_s_din, xt_rsc_0_18_i_s_din_bfwt,
      xt_rsc_0_18_i_bcwt);
  assign xt_rsc_0_18_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_18_i_s_dout_core, xt_rsc_0_18_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_18_i_bcwt <= 1'b0;
      xt_rsc_0_18_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_18_i_bcwt <= ~((~(xt_rsc_0_18_i_bcwt | xt_rsc_0_18_i_biwt)) | xt_rsc_0_18_i_bdwt);
      xt_rsc_0_18_i_bcwt_1 <= ~((~(xt_rsc_0_18_i_bcwt_1 | xt_rsc_0_18_i_biwt_1))
          | xt_rsc_0_18_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_18_i_biwt ) begin
      xt_rsc_0_18_i_s_din_bfwt <= xt_rsc_0_18_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_18_i_xt_rsc_0_18_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_18_i_xt_rsc_0_18_wait_ctrl (
  core_wen, xt_rsc_0_18_i_oswt, xt_rsc_0_18_i_oswt_1, xt_rsc_0_18_i_biwt, xt_rsc_0_18_i_bdwt,
      xt_rsc_0_18_i_bcwt, xt_rsc_0_18_i_s_re_core_sct, xt_rsc_0_18_i_biwt_1, xt_rsc_0_18_i_bdwt_2,
      xt_rsc_0_18_i_bcwt_1, xt_rsc_0_18_i_s_we_core_sct, xt_rsc_0_18_i_s_rrdy, xt_rsc_0_18_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_18_i_oswt;
  input xt_rsc_0_18_i_oswt_1;
  output xt_rsc_0_18_i_biwt;
  output xt_rsc_0_18_i_bdwt;
  input xt_rsc_0_18_i_bcwt;
  output xt_rsc_0_18_i_s_re_core_sct;
  output xt_rsc_0_18_i_biwt_1;
  output xt_rsc_0_18_i_bdwt_2;
  input xt_rsc_0_18_i_bcwt_1;
  output xt_rsc_0_18_i_s_we_core_sct;
  input xt_rsc_0_18_i_s_rrdy;
  input xt_rsc_0_18_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_18_i_ogwt;
  wire xt_rsc_0_18_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_18_i_bdwt = xt_rsc_0_18_i_oswt & core_wen;
  assign xt_rsc_0_18_i_biwt = xt_rsc_0_18_i_ogwt & xt_rsc_0_18_i_s_rrdy;
  assign xt_rsc_0_18_i_ogwt = xt_rsc_0_18_i_oswt & (~ xt_rsc_0_18_i_bcwt);
  assign xt_rsc_0_18_i_s_re_core_sct = xt_rsc_0_18_i_ogwt;
  assign xt_rsc_0_18_i_bdwt_2 = xt_rsc_0_18_i_oswt_1 & core_wen;
  assign xt_rsc_0_18_i_biwt_1 = xt_rsc_0_18_i_ogwt_1 & xt_rsc_0_18_i_s_wrdy;
  assign xt_rsc_0_18_i_ogwt_1 = xt_rsc_0_18_i_oswt_1 & (~ xt_rsc_0_18_i_bcwt_1);
  assign xt_rsc_0_18_i_s_we_core_sct = xt_rsc_0_18_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_17_i_xt_rsc_0_17_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_17_i_xt_rsc_0_17_wait_dp (
  clk, rst, xt_rsc_0_17_i_oswt, xt_rsc_0_17_i_wen_comp, xt_rsc_0_17_i_oswt_1, xt_rsc_0_17_i_wen_comp_1,
      xt_rsc_0_17_i_s_raddr_core, xt_rsc_0_17_i_s_waddr_core, xt_rsc_0_17_i_s_din_mxwt,
      xt_rsc_0_17_i_s_dout_core, xt_rsc_0_17_i_biwt, xt_rsc_0_17_i_bdwt, xt_rsc_0_17_i_bcwt,
      xt_rsc_0_17_i_biwt_1, xt_rsc_0_17_i_bdwt_2, xt_rsc_0_17_i_bcwt_1, xt_rsc_0_17_i_s_raddr,
      xt_rsc_0_17_i_s_raddr_core_sct, xt_rsc_0_17_i_s_waddr, xt_rsc_0_17_i_s_waddr_core_sct,
      xt_rsc_0_17_i_s_din, xt_rsc_0_17_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_17_i_oswt;
  output xt_rsc_0_17_i_wen_comp;
  input xt_rsc_0_17_i_oswt_1;
  output xt_rsc_0_17_i_wen_comp_1;
  input [3:0] xt_rsc_0_17_i_s_raddr_core;
  input [3:0] xt_rsc_0_17_i_s_waddr_core;
  output [31:0] xt_rsc_0_17_i_s_din_mxwt;
  input [31:0] xt_rsc_0_17_i_s_dout_core;
  input xt_rsc_0_17_i_biwt;
  input xt_rsc_0_17_i_bdwt;
  output xt_rsc_0_17_i_bcwt;
  reg xt_rsc_0_17_i_bcwt;
  input xt_rsc_0_17_i_biwt_1;
  input xt_rsc_0_17_i_bdwt_2;
  output xt_rsc_0_17_i_bcwt_1;
  reg xt_rsc_0_17_i_bcwt_1;
  output [3:0] xt_rsc_0_17_i_s_raddr;
  input xt_rsc_0_17_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_17_i_s_waddr;
  input xt_rsc_0_17_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_17_i_s_din;
  output [31:0] xt_rsc_0_17_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_17_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_17_i_wen_comp = (~ xt_rsc_0_17_i_oswt) | xt_rsc_0_17_i_biwt | xt_rsc_0_17_i_bcwt;
  assign xt_rsc_0_17_i_wen_comp_1 = (~ xt_rsc_0_17_i_oswt_1) | xt_rsc_0_17_i_biwt_1
      | xt_rsc_0_17_i_bcwt_1;
  assign xt_rsc_0_17_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_17_i_s_raddr_core,
      xt_rsc_0_17_i_s_raddr_core_sct);
  assign xt_rsc_0_17_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_17_i_s_waddr_core,
      xt_rsc_0_17_i_s_waddr_core_sct);
  assign xt_rsc_0_17_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_17_i_s_din, xt_rsc_0_17_i_s_din_bfwt,
      xt_rsc_0_17_i_bcwt);
  assign xt_rsc_0_17_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_17_i_s_dout_core, xt_rsc_0_17_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_17_i_bcwt <= 1'b0;
      xt_rsc_0_17_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_17_i_bcwt <= ~((~(xt_rsc_0_17_i_bcwt | xt_rsc_0_17_i_biwt)) | xt_rsc_0_17_i_bdwt);
      xt_rsc_0_17_i_bcwt_1 <= ~((~(xt_rsc_0_17_i_bcwt_1 | xt_rsc_0_17_i_biwt_1))
          | xt_rsc_0_17_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_17_i_biwt ) begin
      xt_rsc_0_17_i_s_din_bfwt <= xt_rsc_0_17_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_17_i_xt_rsc_0_17_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_17_i_xt_rsc_0_17_wait_ctrl (
  core_wen, xt_rsc_0_17_i_oswt, xt_rsc_0_17_i_oswt_1, xt_rsc_0_17_i_biwt, xt_rsc_0_17_i_bdwt,
      xt_rsc_0_17_i_bcwt, xt_rsc_0_17_i_s_re_core_sct, xt_rsc_0_17_i_biwt_1, xt_rsc_0_17_i_bdwt_2,
      xt_rsc_0_17_i_bcwt_1, xt_rsc_0_17_i_s_we_core_sct, xt_rsc_0_17_i_s_rrdy, xt_rsc_0_17_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_17_i_oswt;
  input xt_rsc_0_17_i_oswt_1;
  output xt_rsc_0_17_i_biwt;
  output xt_rsc_0_17_i_bdwt;
  input xt_rsc_0_17_i_bcwt;
  output xt_rsc_0_17_i_s_re_core_sct;
  output xt_rsc_0_17_i_biwt_1;
  output xt_rsc_0_17_i_bdwt_2;
  input xt_rsc_0_17_i_bcwt_1;
  output xt_rsc_0_17_i_s_we_core_sct;
  input xt_rsc_0_17_i_s_rrdy;
  input xt_rsc_0_17_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_17_i_ogwt;
  wire xt_rsc_0_17_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_17_i_bdwt = xt_rsc_0_17_i_oswt & core_wen;
  assign xt_rsc_0_17_i_biwt = xt_rsc_0_17_i_ogwt & xt_rsc_0_17_i_s_rrdy;
  assign xt_rsc_0_17_i_ogwt = xt_rsc_0_17_i_oswt & (~ xt_rsc_0_17_i_bcwt);
  assign xt_rsc_0_17_i_s_re_core_sct = xt_rsc_0_17_i_ogwt;
  assign xt_rsc_0_17_i_bdwt_2 = xt_rsc_0_17_i_oswt_1 & core_wen;
  assign xt_rsc_0_17_i_biwt_1 = xt_rsc_0_17_i_ogwt_1 & xt_rsc_0_17_i_s_wrdy;
  assign xt_rsc_0_17_i_ogwt_1 = xt_rsc_0_17_i_oswt_1 & (~ xt_rsc_0_17_i_bcwt_1);
  assign xt_rsc_0_17_i_s_we_core_sct = xt_rsc_0_17_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_16_i_xt_rsc_0_16_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_16_i_xt_rsc_0_16_wait_dp (
  clk, rst, xt_rsc_0_16_i_oswt, xt_rsc_0_16_i_wen_comp, xt_rsc_0_16_i_oswt_1, xt_rsc_0_16_i_wen_comp_1,
      xt_rsc_0_16_i_s_raddr_core, xt_rsc_0_16_i_s_waddr_core, xt_rsc_0_16_i_s_din_mxwt,
      xt_rsc_0_16_i_s_dout_core, xt_rsc_0_16_i_biwt, xt_rsc_0_16_i_bdwt, xt_rsc_0_16_i_bcwt,
      xt_rsc_0_16_i_biwt_1, xt_rsc_0_16_i_bdwt_2, xt_rsc_0_16_i_bcwt_1, xt_rsc_0_16_i_s_raddr,
      xt_rsc_0_16_i_s_raddr_core_sct, xt_rsc_0_16_i_s_waddr, xt_rsc_0_16_i_s_waddr_core_sct,
      xt_rsc_0_16_i_s_din, xt_rsc_0_16_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_16_i_oswt;
  output xt_rsc_0_16_i_wen_comp;
  input xt_rsc_0_16_i_oswt_1;
  output xt_rsc_0_16_i_wen_comp_1;
  input [3:0] xt_rsc_0_16_i_s_raddr_core;
  input [3:0] xt_rsc_0_16_i_s_waddr_core;
  output [31:0] xt_rsc_0_16_i_s_din_mxwt;
  input [31:0] xt_rsc_0_16_i_s_dout_core;
  input xt_rsc_0_16_i_biwt;
  input xt_rsc_0_16_i_bdwt;
  output xt_rsc_0_16_i_bcwt;
  reg xt_rsc_0_16_i_bcwt;
  input xt_rsc_0_16_i_biwt_1;
  input xt_rsc_0_16_i_bdwt_2;
  output xt_rsc_0_16_i_bcwt_1;
  reg xt_rsc_0_16_i_bcwt_1;
  output [3:0] xt_rsc_0_16_i_s_raddr;
  input xt_rsc_0_16_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_16_i_s_waddr;
  input xt_rsc_0_16_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_16_i_s_din;
  output [31:0] xt_rsc_0_16_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_16_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_16_i_wen_comp = (~ xt_rsc_0_16_i_oswt) | xt_rsc_0_16_i_biwt | xt_rsc_0_16_i_bcwt;
  assign xt_rsc_0_16_i_wen_comp_1 = (~ xt_rsc_0_16_i_oswt_1) | xt_rsc_0_16_i_biwt_1
      | xt_rsc_0_16_i_bcwt_1;
  assign xt_rsc_0_16_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_16_i_s_raddr_core,
      xt_rsc_0_16_i_s_raddr_core_sct);
  assign xt_rsc_0_16_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_16_i_s_waddr_core,
      xt_rsc_0_16_i_s_waddr_core_sct);
  assign xt_rsc_0_16_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_16_i_s_din, xt_rsc_0_16_i_s_din_bfwt,
      xt_rsc_0_16_i_bcwt);
  assign xt_rsc_0_16_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_16_i_s_dout_core, xt_rsc_0_16_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_16_i_bcwt <= 1'b0;
      xt_rsc_0_16_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_16_i_bcwt <= ~((~(xt_rsc_0_16_i_bcwt | xt_rsc_0_16_i_biwt)) | xt_rsc_0_16_i_bdwt);
      xt_rsc_0_16_i_bcwt_1 <= ~((~(xt_rsc_0_16_i_bcwt_1 | xt_rsc_0_16_i_biwt_1))
          | xt_rsc_0_16_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_16_i_biwt ) begin
      xt_rsc_0_16_i_s_din_bfwt <= xt_rsc_0_16_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_16_i_xt_rsc_0_16_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_16_i_xt_rsc_0_16_wait_ctrl (
  core_wen, xt_rsc_0_16_i_oswt, xt_rsc_0_16_i_oswt_1, xt_rsc_0_16_i_biwt, xt_rsc_0_16_i_bdwt,
      xt_rsc_0_16_i_bcwt, xt_rsc_0_16_i_s_re_core_sct, xt_rsc_0_16_i_biwt_1, xt_rsc_0_16_i_bdwt_2,
      xt_rsc_0_16_i_bcwt_1, xt_rsc_0_16_i_s_we_core_sct, xt_rsc_0_16_i_s_rrdy, xt_rsc_0_16_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_16_i_oswt;
  input xt_rsc_0_16_i_oswt_1;
  output xt_rsc_0_16_i_biwt;
  output xt_rsc_0_16_i_bdwt;
  input xt_rsc_0_16_i_bcwt;
  output xt_rsc_0_16_i_s_re_core_sct;
  output xt_rsc_0_16_i_biwt_1;
  output xt_rsc_0_16_i_bdwt_2;
  input xt_rsc_0_16_i_bcwt_1;
  output xt_rsc_0_16_i_s_we_core_sct;
  input xt_rsc_0_16_i_s_rrdy;
  input xt_rsc_0_16_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_16_i_ogwt;
  wire xt_rsc_0_16_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_16_i_bdwt = xt_rsc_0_16_i_oswt & core_wen;
  assign xt_rsc_0_16_i_biwt = xt_rsc_0_16_i_ogwt & xt_rsc_0_16_i_s_rrdy;
  assign xt_rsc_0_16_i_ogwt = xt_rsc_0_16_i_oswt & (~ xt_rsc_0_16_i_bcwt);
  assign xt_rsc_0_16_i_s_re_core_sct = xt_rsc_0_16_i_ogwt;
  assign xt_rsc_0_16_i_bdwt_2 = xt_rsc_0_16_i_oswt_1 & core_wen;
  assign xt_rsc_0_16_i_biwt_1 = xt_rsc_0_16_i_ogwt_1 & xt_rsc_0_16_i_s_wrdy;
  assign xt_rsc_0_16_i_ogwt_1 = xt_rsc_0_16_i_oswt_1 & (~ xt_rsc_0_16_i_bcwt_1);
  assign xt_rsc_0_16_i_s_we_core_sct = xt_rsc_0_16_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_15_i_xt_rsc_0_15_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_15_i_xt_rsc_0_15_wait_dp (
  clk, rst, xt_rsc_0_15_i_oswt, xt_rsc_0_15_i_wen_comp, xt_rsc_0_15_i_oswt_1, xt_rsc_0_15_i_wen_comp_1,
      xt_rsc_0_15_i_s_raddr_core, xt_rsc_0_15_i_s_waddr_core, xt_rsc_0_15_i_s_din_mxwt,
      xt_rsc_0_15_i_s_dout_core, xt_rsc_0_15_i_biwt, xt_rsc_0_15_i_bdwt, xt_rsc_0_15_i_bcwt,
      xt_rsc_0_15_i_biwt_1, xt_rsc_0_15_i_bdwt_2, xt_rsc_0_15_i_bcwt_1, xt_rsc_0_15_i_s_raddr,
      xt_rsc_0_15_i_s_raddr_core_sct, xt_rsc_0_15_i_s_waddr, xt_rsc_0_15_i_s_waddr_core_sct,
      xt_rsc_0_15_i_s_din, xt_rsc_0_15_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_15_i_oswt;
  output xt_rsc_0_15_i_wen_comp;
  input xt_rsc_0_15_i_oswt_1;
  output xt_rsc_0_15_i_wen_comp_1;
  input [3:0] xt_rsc_0_15_i_s_raddr_core;
  input [3:0] xt_rsc_0_15_i_s_waddr_core;
  output [31:0] xt_rsc_0_15_i_s_din_mxwt;
  input [31:0] xt_rsc_0_15_i_s_dout_core;
  input xt_rsc_0_15_i_biwt;
  input xt_rsc_0_15_i_bdwt;
  output xt_rsc_0_15_i_bcwt;
  reg xt_rsc_0_15_i_bcwt;
  input xt_rsc_0_15_i_biwt_1;
  input xt_rsc_0_15_i_bdwt_2;
  output xt_rsc_0_15_i_bcwt_1;
  reg xt_rsc_0_15_i_bcwt_1;
  output [3:0] xt_rsc_0_15_i_s_raddr;
  input xt_rsc_0_15_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_15_i_s_waddr;
  input xt_rsc_0_15_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_15_i_s_din;
  output [31:0] xt_rsc_0_15_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_15_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_15_i_wen_comp = (~ xt_rsc_0_15_i_oswt) | xt_rsc_0_15_i_biwt | xt_rsc_0_15_i_bcwt;
  assign xt_rsc_0_15_i_wen_comp_1 = (~ xt_rsc_0_15_i_oswt_1) | xt_rsc_0_15_i_biwt_1
      | xt_rsc_0_15_i_bcwt_1;
  assign xt_rsc_0_15_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_15_i_s_raddr_core,
      xt_rsc_0_15_i_s_raddr_core_sct);
  assign xt_rsc_0_15_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_15_i_s_waddr_core,
      xt_rsc_0_15_i_s_waddr_core_sct);
  assign xt_rsc_0_15_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_15_i_s_din, xt_rsc_0_15_i_s_din_bfwt,
      xt_rsc_0_15_i_bcwt);
  assign xt_rsc_0_15_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_15_i_s_dout_core, xt_rsc_0_15_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_15_i_bcwt <= 1'b0;
      xt_rsc_0_15_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_15_i_bcwt <= ~((~(xt_rsc_0_15_i_bcwt | xt_rsc_0_15_i_biwt)) | xt_rsc_0_15_i_bdwt);
      xt_rsc_0_15_i_bcwt_1 <= ~((~(xt_rsc_0_15_i_bcwt_1 | xt_rsc_0_15_i_biwt_1))
          | xt_rsc_0_15_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_15_i_biwt ) begin
      xt_rsc_0_15_i_s_din_bfwt <= xt_rsc_0_15_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_15_i_xt_rsc_0_15_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_15_i_xt_rsc_0_15_wait_ctrl (
  core_wen, xt_rsc_0_15_i_oswt, xt_rsc_0_15_i_oswt_1, xt_rsc_0_15_i_biwt, xt_rsc_0_15_i_bdwt,
      xt_rsc_0_15_i_bcwt, xt_rsc_0_15_i_s_re_core_sct, xt_rsc_0_15_i_biwt_1, xt_rsc_0_15_i_bdwt_2,
      xt_rsc_0_15_i_bcwt_1, xt_rsc_0_15_i_s_we_core_sct, xt_rsc_0_15_i_s_rrdy, xt_rsc_0_15_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_15_i_oswt;
  input xt_rsc_0_15_i_oswt_1;
  output xt_rsc_0_15_i_biwt;
  output xt_rsc_0_15_i_bdwt;
  input xt_rsc_0_15_i_bcwt;
  output xt_rsc_0_15_i_s_re_core_sct;
  output xt_rsc_0_15_i_biwt_1;
  output xt_rsc_0_15_i_bdwt_2;
  input xt_rsc_0_15_i_bcwt_1;
  output xt_rsc_0_15_i_s_we_core_sct;
  input xt_rsc_0_15_i_s_rrdy;
  input xt_rsc_0_15_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_15_i_ogwt;
  wire xt_rsc_0_15_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_15_i_bdwt = xt_rsc_0_15_i_oswt & core_wen;
  assign xt_rsc_0_15_i_biwt = xt_rsc_0_15_i_ogwt & xt_rsc_0_15_i_s_rrdy;
  assign xt_rsc_0_15_i_ogwt = xt_rsc_0_15_i_oswt & (~ xt_rsc_0_15_i_bcwt);
  assign xt_rsc_0_15_i_s_re_core_sct = xt_rsc_0_15_i_ogwt;
  assign xt_rsc_0_15_i_bdwt_2 = xt_rsc_0_15_i_oswt_1 & core_wen;
  assign xt_rsc_0_15_i_biwt_1 = xt_rsc_0_15_i_ogwt_1 & xt_rsc_0_15_i_s_wrdy;
  assign xt_rsc_0_15_i_ogwt_1 = xt_rsc_0_15_i_oswt_1 & (~ xt_rsc_0_15_i_bcwt_1);
  assign xt_rsc_0_15_i_s_we_core_sct = xt_rsc_0_15_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_14_i_xt_rsc_0_14_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_14_i_xt_rsc_0_14_wait_dp (
  clk, rst, xt_rsc_0_14_i_oswt, xt_rsc_0_14_i_wen_comp, xt_rsc_0_14_i_oswt_1, xt_rsc_0_14_i_wen_comp_1,
      xt_rsc_0_14_i_s_raddr_core, xt_rsc_0_14_i_s_waddr_core, xt_rsc_0_14_i_s_din_mxwt,
      xt_rsc_0_14_i_s_dout_core, xt_rsc_0_14_i_biwt, xt_rsc_0_14_i_bdwt, xt_rsc_0_14_i_bcwt,
      xt_rsc_0_14_i_biwt_1, xt_rsc_0_14_i_bdwt_2, xt_rsc_0_14_i_bcwt_1, xt_rsc_0_14_i_s_raddr,
      xt_rsc_0_14_i_s_raddr_core_sct, xt_rsc_0_14_i_s_waddr, xt_rsc_0_14_i_s_waddr_core_sct,
      xt_rsc_0_14_i_s_din, xt_rsc_0_14_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_14_i_oswt;
  output xt_rsc_0_14_i_wen_comp;
  input xt_rsc_0_14_i_oswt_1;
  output xt_rsc_0_14_i_wen_comp_1;
  input [3:0] xt_rsc_0_14_i_s_raddr_core;
  input [3:0] xt_rsc_0_14_i_s_waddr_core;
  output [31:0] xt_rsc_0_14_i_s_din_mxwt;
  input [31:0] xt_rsc_0_14_i_s_dout_core;
  input xt_rsc_0_14_i_biwt;
  input xt_rsc_0_14_i_bdwt;
  output xt_rsc_0_14_i_bcwt;
  reg xt_rsc_0_14_i_bcwt;
  input xt_rsc_0_14_i_biwt_1;
  input xt_rsc_0_14_i_bdwt_2;
  output xt_rsc_0_14_i_bcwt_1;
  reg xt_rsc_0_14_i_bcwt_1;
  output [3:0] xt_rsc_0_14_i_s_raddr;
  input xt_rsc_0_14_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_14_i_s_waddr;
  input xt_rsc_0_14_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_14_i_s_din;
  output [31:0] xt_rsc_0_14_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_14_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_14_i_wen_comp = (~ xt_rsc_0_14_i_oswt) | xt_rsc_0_14_i_biwt | xt_rsc_0_14_i_bcwt;
  assign xt_rsc_0_14_i_wen_comp_1 = (~ xt_rsc_0_14_i_oswt_1) | xt_rsc_0_14_i_biwt_1
      | xt_rsc_0_14_i_bcwt_1;
  assign xt_rsc_0_14_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_14_i_s_raddr_core,
      xt_rsc_0_14_i_s_raddr_core_sct);
  assign xt_rsc_0_14_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_14_i_s_waddr_core,
      xt_rsc_0_14_i_s_waddr_core_sct);
  assign xt_rsc_0_14_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_14_i_s_din, xt_rsc_0_14_i_s_din_bfwt,
      xt_rsc_0_14_i_bcwt);
  assign xt_rsc_0_14_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_14_i_s_dout_core, xt_rsc_0_14_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_14_i_bcwt <= 1'b0;
      xt_rsc_0_14_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_14_i_bcwt <= ~((~(xt_rsc_0_14_i_bcwt | xt_rsc_0_14_i_biwt)) | xt_rsc_0_14_i_bdwt);
      xt_rsc_0_14_i_bcwt_1 <= ~((~(xt_rsc_0_14_i_bcwt_1 | xt_rsc_0_14_i_biwt_1))
          | xt_rsc_0_14_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_14_i_biwt ) begin
      xt_rsc_0_14_i_s_din_bfwt <= xt_rsc_0_14_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_14_i_xt_rsc_0_14_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_14_i_xt_rsc_0_14_wait_ctrl (
  core_wen, xt_rsc_0_14_i_oswt, xt_rsc_0_14_i_oswt_1, xt_rsc_0_14_i_biwt, xt_rsc_0_14_i_bdwt,
      xt_rsc_0_14_i_bcwt, xt_rsc_0_14_i_s_re_core_sct, xt_rsc_0_14_i_biwt_1, xt_rsc_0_14_i_bdwt_2,
      xt_rsc_0_14_i_bcwt_1, xt_rsc_0_14_i_s_we_core_sct, xt_rsc_0_14_i_s_rrdy, xt_rsc_0_14_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_14_i_oswt;
  input xt_rsc_0_14_i_oswt_1;
  output xt_rsc_0_14_i_biwt;
  output xt_rsc_0_14_i_bdwt;
  input xt_rsc_0_14_i_bcwt;
  output xt_rsc_0_14_i_s_re_core_sct;
  output xt_rsc_0_14_i_biwt_1;
  output xt_rsc_0_14_i_bdwt_2;
  input xt_rsc_0_14_i_bcwt_1;
  output xt_rsc_0_14_i_s_we_core_sct;
  input xt_rsc_0_14_i_s_rrdy;
  input xt_rsc_0_14_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_14_i_ogwt;
  wire xt_rsc_0_14_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_14_i_bdwt = xt_rsc_0_14_i_oswt & core_wen;
  assign xt_rsc_0_14_i_biwt = xt_rsc_0_14_i_ogwt & xt_rsc_0_14_i_s_rrdy;
  assign xt_rsc_0_14_i_ogwt = xt_rsc_0_14_i_oswt & (~ xt_rsc_0_14_i_bcwt);
  assign xt_rsc_0_14_i_s_re_core_sct = xt_rsc_0_14_i_ogwt;
  assign xt_rsc_0_14_i_bdwt_2 = xt_rsc_0_14_i_oswt_1 & core_wen;
  assign xt_rsc_0_14_i_biwt_1 = xt_rsc_0_14_i_ogwt_1 & xt_rsc_0_14_i_s_wrdy;
  assign xt_rsc_0_14_i_ogwt_1 = xt_rsc_0_14_i_oswt_1 & (~ xt_rsc_0_14_i_bcwt_1);
  assign xt_rsc_0_14_i_s_we_core_sct = xt_rsc_0_14_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_13_i_xt_rsc_0_13_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_13_i_xt_rsc_0_13_wait_dp (
  clk, rst, xt_rsc_0_13_i_oswt, xt_rsc_0_13_i_wen_comp, xt_rsc_0_13_i_oswt_1, xt_rsc_0_13_i_wen_comp_1,
      xt_rsc_0_13_i_s_raddr_core, xt_rsc_0_13_i_s_waddr_core, xt_rsc_0_13_i_s_din_mxwt,
      xt_rsc_0_13_i_s_dout_core, xt_rsc_0_13_i_biwt, xt_rsc_0_13_i_bdwt, xt_rsc_0_13_i_bcwt,
      xt_rsc_0_13_i_biwt_1, xt_rsc_0_13_i_bdwt_2, xt_rsc_0_13_i_bcwt_1, xt_rsc_0_13_i_s_raddr,
      xt_rsc_0_13_i_s_raddr_core_sct, xt_rsc_0_13_i_s_waddr, xt_rsc_0_13_i_s_waddr_core_sct,
      xt_rsc_0_13_i_s_din, xt_rsc_0_13_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_13_i_oswt;
  output xt_rsc_0_13_i_wen_comp;
  input xt_rsc_0_13_i_oswt_1;
  output xt_rsc_0_13_i_wen_comp_1;
  input [3:0] xt_rsc_0_13_i_s_raddr_core;
  input [3:0] xt_rsc_0_13_i_s_waddr_core;
  output [31:0] xt_rsc_0_13_i_s_din_mxwt;
  input [31:0] xt_rsc_0_13_i_s_dout_core;
  input xt_rsc_0_13_i_biwt;
  input xt_rsc_0_13_i_bdwt;
  output xt_rsc_0_13_i_bcwt;
  reg xt_rsc_0_13_i_bcwt;
  input xt_rsc_0_13_i_biwt_1;
  input xt_rsc_0_13_i_bdwt_2;
  output xt_rsc_0_13_i_bcwt_1;
  reg xt_rsc_0_13_i_bcwt_1;
  output [3:0] xt_rsc_0_13_i_s_raddr;
  input xt_rsc_0_13_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_13_i_s_waddr;
  input xt_rsc_0_13_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_13_i_s_din;
  output [31:0] xt_rsc_0_13_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_13_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_13_i_wen_comp = (~ xt_rsc_0_13_i_oswt) | xt_rsc_0_13_i_biwt | xt_rsc_0_13_i_bcwt;
  assign xt_rsc_0_13_i_wen_comp_1 = (~ xt_rsc_0_13_i_oswt_1) | xt_rsc_0_13_i_biwt_1
      | xt_rsc_0_13_i_bcwt_1;
  assign xt_rsc_0_13_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_13_i_s_raddr_core,
      xt_rsc_0_13_i_s_raddr_core_sct);
  assign xt_rsc_0_13_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_13_i_s_waddr_core,
      xt_rsc_0_13_i_s_waddr_core_sct);
  assign xt_rsc_0_13_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_13_i_s_din, xt_rsc_0_13_i_s_din_bfwt,
      xt_rsc_0_13_i_bcwt);
  assign xt_rsc_0_13_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_13_i_s_dout_core, xt_rsc_0_13_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_13_i_bcwt <= 1'b0;
      xt_rsc_0_13_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_13_i_bcwt <= ~((~(xt_rsc_0_13_i_bcwt | xt_rsc_0_13_i_biwt)) | xt_rsc_0_13_i_bdwt);
      xt_rsc_0_13_i_bcwt_1 <= ~((~(xt_rsc_0_13_i_bcwt_1 | xt_rsc_0_13_i_biwt_1))
          | xt_rsc_0_13_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_13_i_biwt ) begin
      xt_rsc_0_13_i_s_din_bfwt <= xt_rsc_0_13_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_13_i_xt_rsc_0_13_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_13_i_xt_rsc_0_13_wait_ctrl (
  core_wen, xt_rsc_0_13_i_oswt, xt_rsc_0_13_i_oswt_1, xt_rsc_0_13_i_biwt, xt_rsc_0_13_i_bdwt,
      xt_rsc_0_13_i_bcwt, xt_rsc_0_13_i_s_re_core_sct, xt_rsc_0_13_i_biwt_1, xt_rsc_0_13_i_bdwt_2,
      xt_rsc_0_13_i_bcwt_1, xt_rsc_0_13_i_s_we_core_sct, xt_rsc_0_13_i_s_rrdy, xt_rsc_0_13_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_13_i_oswt;
  input xt_rsc_0_13_i_oswt_1;
  output xt_rsc_0_13_i_biwt;
  output xt_rsc_0_13_i_bdwt;
  input xt_rsc_0_13_i_bcwt;
  output xt_rsc_0_13_i_s_re_core_sct;
  output xt_rsc_0_13_i_biwt_1;
  output xt_rsc_0_13_i_bdwt_2;
  input xt_rsc_0_13_i_bcwt_1;
  output xt_rsc_0_13_i_s_we_core_sct;
  input xt_rsc_0_13_i_s_rrdy;
  input xt_rsc_0_13_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_13_i_ogwt;
  wire xt_rsc_0_13_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_13_i_bdwt = xt_rsc_0_13_i_oswt & core_wen;
  assign xt_rsc_0_13_i_biwt = xt_rsc_0_13_i_ogwt & xt_rsc_0_13_i_s_rrdy;
  assign xt_rsc_0_13_i_ogwt = xt_rsc_0_13_i_oswt & (~ xt_rsc_0_13_i_bcwt);
  assign xt_rsc_0_13_i_s_re_core_sct = xt_rsc_0_13_i_ogwt;
  assign xt_rsc_0_13_i_bdwt_2 = xt_rsc_0_13_i_oswt_1 & core_wen;
  assign xt_rsc_0_13_i_biwt_1 = xt_rsc_0_13_i_ogwt_1 & xt_rsc_0_13_i_s_wrdy;
  assign xt_rsc_0_13_i_ogwt_1 = xt_rsc_0_13_i_oswt_1 & (~ xt_rsc_0_13_i_bcwt_1);
  assign xt_rsc_0_13_i_s_we_core_sct = xt_rsc_0_13_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_12_i_xt_rsc_0_12_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_12_i_xt_rsc_0_12_wait_dp (
  clk, rst, xt_rsc_0_12_i_oswt, xt_rsc_0_12_i_wen_comp, xt_rsc_0_12_i_oswt_1, xt_rsc_0_12_i_wen_comp_1,
      xt_rsc_0_12_i_s_raddr_core, xt_rsc_0_12_i_s_waddr_core, xt_rsc_0_12_i_s_din_mxwt,
      xt_rsc_0_12_i_s_dout_core, xt_rsc_0_12_i_biwt, xt_rsc_0_12_i_bdwt, xt_rsc_0_12_i_bcwt,
      xt_rsc_0_12_i_biwt_1, xt_rsc_0_12_i_bdwt_2, xt_rsc_0_12_i_bcwt_1, xt_rsc_0_12_i_s_raddr,
      xt_rsc_0_12_i_s_raddr_core_sct, xt_rsc_0_12_i_s_waddr, xt_rsc_0_12_i_s_waddr_core_sct,
      xt_rsc_0_12_i_s_din, xt_rsc_0_12_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_12_i_oswt;
  output xt_rsc_0_12_i_wen_comp;
  input xt_rsc_0_12_i_oswt_1;
  output xt_rsc_0_12_i_wen_comp_1;
  input [3:0] xt_rsc_0_12_i_s_raddr_core;
  input [3:0] xt_rsc_0_12_i_s_waddr_core;
  output [31:0] xt_rsc_0_12_i_s_din_mxwt;
  input [31:0] xt_rsc_0_12_i_s_dout_core;
  input xt_rsc_0_12_i_biwt;
  input xt_rsc_0_12_i_bdwt;
  output xt_rsc_0_12_i_bcwt;
  reg xt_rsc_0_12_i_bcwt;
  input xt_rsc_0_12_i_biwt_1;
  input xt_rsc_0_12_i_bdwt_2;
  output xt_rsc_0_12_i_bcwt_1;
  reg xt_rsc_0_12_i_bcwt_1;
  output [3:0] xt_rsc_0_12_i_s_raddr;
  input xt_rsc_0_12_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_12_i_s_waddr;
  input xt_rsc_0_12_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_12_i_s_din;
  output [31:0] xt_rsc_0_12_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_12_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_12_i_wen_comp = (~ xt_rsc_0_12_i_oswt) | xt_rsc_0_12_i_biwt | xt_rsc_0_12_i_bcwt;
  assign xt_rsc_0_12_i_wen_comp_1 = (~ xt_rsc_0_12_i_oswt_1) | xt_rsc_0_12_i_biwt_1
      | xt_rsc_0_12_i_bcwt_1;
  assign xt_rsc_0_12_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_12_i_s_raddr_core,
      xt_rsc_0_12_i_s_raddr_core_sct);
  assign xt_rsc_0_12_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_12_i_s_waddr_core,
      xt_rsc_0_12_i_s_waddr_core_sct);
  assign xt_rsc_0_12_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_12_i_s_din, xt_rsc_0_12_i_s_din_bfwt,
      xt_rsc_0_12_i_bcwt);
  assign xt_rsc_0_12_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_12_i_s_dout_core, xt_rsc_0_12_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_12_i_bcwt <= 1'b0;
      xt_rsc_0_12_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_12_i_bcwt <= ~((~(xt_rsc_0_12_i_bcwt | xt_rsc_0_12_i_biwt)) | xt_rsc_0_12_i_bdwt);
      xt_rsc_0_12_i_bcwt_1 <= ~((~(xt_rsc_0_12_i_bcwt_1 | xt_rsc_0_12_i_biwt_1))
          | xt_rsc_0_12_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_12_i_biwt ) begin
      xt_rsc_0_12_i_s_din_bfwt <= xt_rsc_0_12_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_12_i_xt_rsc_0_12_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_12_i_xt_rsc_0_12_wait_ctrl (
  core_wen, xt_rsc_0_12_i_oswt, xt_rsc_0_12_i_oswt_1, xt_rsc_0_12_i_biwt, xt_rsc_0_12_i_bdwt,
      xt_rsc_0_12_i_bcwt, xt_rsc_0_12_i_s_re_core_sct, xt_rsc_0_12_i_biwt_1, xt_rsc_0_12_i_bdwt_2,
      xt_rsc_0_12_i_bcwt_1, xt_rsc_0_12_i_s_we_core_sct, xt_rsc_0_12_i_s_rrdy, xt_rsc_0_12_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_12_i_oswt;
  input xt_rsc_0_12_i_oswt_1;
  output xt_rsc_0_12_i_biwt;
  output xt_rsc_0_12_i_bdwt;
  input xt_rsc_0_12_i_bcwt;
  output xt_rsc_0_12_i_s_re_core_sct;
  output xt_rsc_0_12_i_biwt_1;
  output xt_rsc_0_12_i_bdwt_2;
  input xt_rsc_0_12_i_bcwt_1;
  output xt_rsc_0_12_i_s_we_core_sct;
  input xt_rsc_0_12_i_s_rrdy;
  input xt_rsc_0_12_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_12_i_ogwt;
  wire xt_rsc_0_12_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_12_i_bdwt = xt_rsc_0_12_i_oswt & core_wen;
  assign xt_rsc_0_12_i_biwt = xt_rsc_0_12_i_ogwt & xt_rsc_0_12_i_s_rrdy;
  assign xt_rsc_0_12_i_ogwt = xt_rsc_0_12_i_oswt & (~ xt_rsc_0_12_i_bcwt);
  assign xt_rsc_0_12_i_s_re_core_sct = xt_rsc_0_12_i_ogwt;
  assign xt_rsc_0_12_i_bdwt_2 = xt_rsc_0_12_i_oswt_1 & core_wen;
  assign xt_rsc_0_12_i_biwt_1 = xt_rsc_0_12_i_ogwt_1 & xt_rsc_0_12_i_s_wrdy;
  assign xt_rsc_0_12_i_ogwt_1 = xt_rsc_0_12_i_oswt_1 & (~ xt_rsc_0_12_i_bcwt_1);
  assign xt_rsc_0_12_i_s_we_core_sct = xt_rsc_0_12_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_11_i_xt_rsc_0_11_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_11_i_xt_rsc_0_11_wait_dp (
  clk, rst, xt_rsc_0_11_i_oswt, xt_rsc_0_11_i_wen_comp, xt_rsc_0_11_i_oswt_1, xt_rsc_0_11_i_wen_comp_1,
      xt_rsc_0_11_i_s_raddr_core, xt_rsc_0_11_i_s_waddr_core, xt_rsc_0_11_i_s_din_mxwt,
      xt_rsc_0_11_i_s_dout_core, xt_rsc_0_11_i_biwt, xt_rsc_0_11_i_bdwt, xt_rsc_0_11_i_bcwt,
      xt_rsc_0_11_i_biwt_1, xt_rsc_0_11_i_bdwt_2, xt_rsc_0_11_i_bcwt_1, xt_rsc_0_11_i_s_raddr,
      xt_rsc_0_11_i_s_raddr_core_sct, xt_rsc_0_11_i_s_waddr, xt_rsc_0_11_i_s_waddr_core_sct,
      xt_rsc_0_11_i_s_din, xt_rsc_0_11_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_11_i_oswt;
  output xt_rsc_0_11_i_wen_comp;
  input xt_rsc_0_11_i_oswt_1;
  output xt_rsc_0_11_i_wen_comp_1;
  input [3:0] xt_rsc_0_11_i_s_raddr_core;
  input [3:0] xt_rsc_0_11_i_s_waddr_core;
  output [31:0] xt_rsc_0_11_i_s_din_mxwt;
  input [31:0] xt_rsc_0_11_i_s_dout_core;
  input xt_rsc_0_11_i_biwt;
  input xt_rsc_0_11_i_bdwt;
  output xt_rsc_0_11_i_bcwt;
  reg xt_rsc_0_11_i_bcwt;
  input xt_rsc_0_11_i_biwt_1;
  input xt_rsc_0_11_i_bdwt_2;
  output xt_rsc_0_11_i_bcwt_1;
  reg xt_rsc_0_11_i_bcwt_1;
  output [3:0] xt_rsc_0_11_i_s_raddr;
  input xt_rsc_0_11_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_11_i_s_waddr;
  input xt_rsc_0_11_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_11_i_s_din;
  output [31:0] xt_rsc_0_11_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_11_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_11_i_wen_comp = (~ xt_rsc_0_11_i_oswt) | xt_rsc_0_11_i_biwt | xt_rsc_0_11_i_bcwt;
  assign xt_rsc_0_11_i_wen_comp_1 = (~ xt_rsc_0_11_i_oswt_1) | xt_rsc_0_11_i_biwt_1
      | xt_rsc_0_11_i_bcwt_1;
  assign xt_rsc_0_11_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_11_i_s_raddr_core,
      xt_rsc_0_11_i_s_raddr_core_sct);
  assign xt_rsc_0_11_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_11_i_s_waddr_core,
      xt_rsc_0_11_i_s_waddr_core_sct);
  assign xt_rsc_0_11_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_11_i_s_din, xt_rsc_0_11_i_s_din_bfwt,
      xt_rsc_0_11_i_bcwt);
  assign xt_rsc_0_11_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_11_i_s_dout_core, xt_rsc_0_11_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_11_i_bcwt <= 1'b0;
      xt_rsc_0_11_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_11_i_bcwt <= ~((~(xt_rsc_0_11_i_bcwt | xt_rsc_0_11_i_biwt)) | xt_rsc_0_11_i_bdwt);
      xt_rsc_0_11_i_bcwt_1 <= ~((~(xt_rsc_0_11_i_bcwt_1 | xt_rsc_0_11_i_biwt_1))
          | xt_rsc_0_11_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_11_i_biwt ) begin
      xt_rsc_0_11_i_s_din_bfwt <= xt_rsc_0_11_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_11_i_xt_rsc_0_11_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_11_i_xt_rsc_0_11_wait_ctrl (
  core_wen, xt_rsc_0_11_i_oswt, xt_rsc_0_11_i_oswt_1, xt_rsc_0_11_i_biwt, xt_rsc_0_11_i_bdwt,
      xt_rsc_0_11_i_bcwt, xt_rsc_0_11_i_s_re_core_sct, xt_rsc_0_11_i_biwt_1, xt_rsc_0_11_i_bdwt_2,
      xt_rsc_0_11_i_bcwt_1, xt_rsc_0_11_i_s_we_core_sct, xt_rsc_0_11_i_s_rrdy, xt_rsc_0_11_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_11_i_oswt;
  input xt_rsc_0_11_i_oswt_1;
  output xt_rsc_0_11_i_biwt;
  output xt_rsc_0_11_i_bdwt;
  input xt_rsc_0_11_i_bcwt;
  output xt_rsc_0_11_i_s_re_core_sct;
  output xt_rsc_0_11_i_biwt_1;
  output xt_rsc_0_11_i_bdwt_2;
  input xt_rsc_0_11_i_bcwt_1;
  output xt_rsc_0_11_i_s_we_core_sct;
  input xt_rsc_0_11_i_s_rrdy;
  input xt_rsc_0_11_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_11_i_ogwt;
  wire xt_rsc_0_11_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_11_i_bdwt = xt_rsc_0_11_i_oswt & core_wen;
  assign xt_rsc_0_11_i_biwt = xt_rsc_0_11_i_ogwt & xt_rsc_0_11_i_s_rrdy;
  assign xt_rsc_0_11_i_ogwt = xt_rsc_0_11_i_oswt & (~ xt_rsc_0_11_i_bcwt);
  assign xt_rsc_0_11_i_s_re_core_sct = xt_rsc_0_11_i_ogwt;
  assign xt_rsc_0_11_i_bdwt_2 = xt_rsc_0_11_i_oswt_1 & core_wen;
  assign xt_rsc_0_11_i_biwt_1 = xt_rsc_0_11_i_ogwt_1 & xt_rsc_0_11_i_s_wrdy;
  assign xt_rsc_0_11_i_ogwt_1 = xt_rsc_0_11_i_oswt_1 & (~ xt_rsc_0_11_i_bcwt_1);
  assign xt_rsc_0_11_i_s_we_core_sct = xt_rsc_0_11_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_10_i_xt_rsc_0_10_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_10_i_xt_rsc_0_10_wait_dp (
  clk, rst, xt_rsc_0_10_i_oswt, xt_rsc_0_10_i_wen_comp, xt_rsc_0_10_i_oswt_1, xt_rsc_0_10_i_wen_comp_1,
      xt_rsc_0_10_i_s_raddr_core, xt_rsc_0_10_i_s_waddr_core, xt_rsc_0_10_i_s_din_mxwt,
      xt_rsc_0_10_i_s_dout_core, xt_rsc_0_10_i_biwt, xt_rsc_0_10_i_bdwt, xt_rsc_0_10_i_bcwt,
      xt_rsc_0_10_i_biwt_1, xt_rsc_0_10_i_bdwt_2, xt_rsc_0_10_i_bcwt_1, xt_rsc_0_10_i_s_raddr,
      xt_rsc_0_10_i_s_raddr_core_sct, xt_rsc_0_10_i_s_waddr, xt_rsc_0_10_i_s_waddr_core_sct,
      xt_rsc_0_10_i_s_din, xt_rsc_0_10_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_10_i_oswt;
  output xt_rsc_0_10_i_wen_comp;
  input xt_rsc_0_10_i_oswt_1;
  output xt_rsc_0_10_i_wen_comp_1;
  input [3:0] xt_rsc_0_10_i_s_raddr_core;
  input [3:0] xt_rsc_0_10_i_s_waddr_core;
  output [31:0] xt_rsc_0_10_i_s_din_mxwt;
  input [31:0] xt_rsc_0_10_i_s_dout_core;
  input xt_rsc_0_10_i_biwt;
  input xt_rsc_0_10_i_bdwt;
  output xt_rsc_0_10_i_bcwt;
  reg xt_rsc_0_10_i_bcwt;
  input xt_rsc_0_10_i_biwt_1;
  input xt_rsc_0_10_i_bdwt_2;
  output xt_rsc_0_10_i_bcwt_1;
  reg xt_rsc_0_10_i_bcwt_1;
  output [3:0] xt_rsc_0_10_i_s_raddr;
  input xt_rsc_0_10_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_10_i_s_waddr;
  input xt_rsc_0_10_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_10_i_s_din;
  output [31:0] xt_rsc_0_10_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_10_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_10_i_wen_comp = (~ xt_rsc_0_10_i_oswt) | xt_rsc_0_10_i_biwt | xt_rsc_0_10_i_bcwt;
  assign xt_rsc_0_10_i_wen_comp_1 = (~ xt_rsc_0_10_i_oswt_1) | xt_rsc_0_10_i_biwt_1
      | xt_rsc_0_10_i_bcwt_1;
  assign xt_rsc_0_10_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_10_i_s_raddr_core,
      xt_rsc_0_10_i_s_raddr_core_sct);
  assign xt_rsc_0_10_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_10_i_s_waddr_core,
      xt_rsc_0_10_i_s_waddr_core_sct);
  assign xt_rsc_0_10_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_10_i_s_din, xt_rsc_0_10_i_s_din_bfwt,
      xt_rsc_0_10_i_bcwt);
  assign xt_rsc_0_10_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_10_i_s_dout_core, xt_rsc_0_10_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_10_i_bcwt <= 1'b0;
      xt_rsc_0_10_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_10_i_bcwt <= ~((~(xt_rsc_0_10_i_bcwt | xt_rsc_0_10_i_biwt)) | xt_rsc_0_10_i_bdwt);
      xt_rsc_0_10_i_bcwt_1 <= ~((~(xt_rsc_0_10_i_bcwt_1 | xt_rsc_0_10_i_biwt_1))
          | xt_rsc_0_10_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_10_i_biwt ) begin
      xt_rsc_0_10_i_s_din_bfwt <= xt_rsc_0_10_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_10_i_xt_rsc_0_10_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_10_i_xt_rsc_0_10_wait_ctrl (
  core_wen, xt_rsc_0_10_i_oswt, xt_rsc_0_10_i_oswt_1, xt_rsc_0_10_i_biwt, xt_rsc_0_10_i_bdwt,
      xt_rsc_0_10_i_bcwt, xt_rsc_0_10_i_s_re_core_sct, xt_rsc_0_10_i_biwt_1, xt_rsc_0_10_i_bdwt_2,
      xt_rsc_0_10_i_bcwt_1, xt_rsc_0_10_i_s_we_core_sct, xt_rsc_0_10_i_s_rrdy, xt_rsc_0_10_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_10_i_oswt;
  input xt_rsc_0_10_i_oswt_1;
  output xt_rsc_0_10_i_biwt;
  output xt_rsc_0_10_i_bdwt;
  input xt_rsc_0_10_i_bcwt;
  output xt_rsc_0_10_i_s_re_core_sct;
  output xt_rsc_0_10_i_biwt_1;
  output xt_rsc_0_10_i_bdwt_2;
  input xt_rsc_0_10_i_bcwt_1;
  output xt_rsc_0_10_i_s_we_core_sct;
  input xt_rsc_0_10_i_s_rrdy;
  input xt_rsc_0_10_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_10_i_ogwt;
  wire xt_rsc_0_10_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_10_i_bdwt = xt_rsc_0_10_i_oswt & core_wen;
  assign xt_rsc_0_10_i_biwt = xt_rsc_0_10_i_ogwt & xt_rsc_0_10_i_s_rrdy;
  assign xt_rsc_0_10_i_ogwt = xt_rsc_0_10_i_oswt & (~ xt_rsc_0_10_i_bcwt);
  assign xt_rsc_0_10_i_s_re_core_sct = xt_rsc_0_10_i_ogwt;
  assign xt_rsc_0_10_i_bdwt_2 = xt_rsc_0_10_i_oswt_1 & core_wen;
  assign xt_rsc_0_10_i_biwt_1 = xt_rsc_0_10_i_ogwt_1 & xt_rsc_0_10_i_s_wrdy;
  assign xt_rsc_0_10_i_ogwt_1 = xt_rsc_0_10_i_oswt_1 & (~ xt_rsc_0_10_i_bcwt_1);
  assign xt_rsc_0_10_i_s_we_core_sct = xt_rsc_0_10_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_9_i_xt_rsc_0_9_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_9_i_xt_rsc_0_9_wait_dp (
  clk, rst, xt_rsc_0_9_i_oswt, xt_rsc_0_9_i_wen_comp, xt_rsc_0_9_i_oswt_1, xt_rsc_0_9_i_wen_comp_1,
      xt_rsc_0_9_i_s_raddr_core, xt_rsc_0_9_i_s_waddr_core, xt_rsc_0_9_i_s_din_mxwt,
      xt_rsc_0_9_i_s_dout_core, xt_rsc_0_9_i_biwt, xt_rsc_0_9_i_bdwt, xt_rsc_0_9_i_bcwt,
      xt_rsc_0_9_i_biwt_1, xt_rsc_0_9_i_bdwt_2, xt_rsc_0_9_i_bcwt_1, xt_rsc_0_9_i_s_raddr,
      xt_rsc_0_9_i_s_raddr_core_sct, xt_rsc_0_9_i_s_waddr, xt_rsc_0_9_i_s_waddr_core_sct,
      xt_rsc_0_9_i_s_din, xt_rsc_0_9_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_9_i_oswt;
  output xt_rsc_0_9_i_wen_comp;
  input xt_rsc_0_9_i_oswt_1;
  output xt_rsc_0_9_i_wen_comp_1;
  input [3:0] xt_rsc_0_9_i_s_raddr_core;
  input [3:0] xt_rsc_0_9_i_s_waddr_core;
  output [31:0] xt_rsc_0_9_i_s_din_mxwt;
  input [31:0] xt_rsc_0_9_i_s_dout_core;
  input xt_rsc_0_9_i_biwt;
  input xt_rsc_0_9_i_bdwt;
  output xt_rsc_0_9_i_bcwt;
  reg xt_rsc_0_9_i_bcwt;
  input xt_rsc_0_9_i_biwt_1;
  input xt_rsc_0_9_i_bdwt_2;
  output xt_rsc_0_9_i_bcwt_1;
  reg xt_rsc_0_9_i_bcwt_1;
  output [3:0] xt_rsc_0_9_i_s_raddr;
  input xt_rsc_0_9_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_9_i_s_waddr;
  input xt_rsc_0_9_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_9_i_s_din;
  output [31:0] xt_rsc_0_9_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_9_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_9_i_wen_comp = (~ xt_rsc_0_9_i_oswt) | xt_rsc_0_9_i_biwt | xt_rsc_0_9_i_bcwt;
  assign xt_rsc_0_9_i_wen_comp_1 = (~ xt_rsc_0_9_i_oswt_1) | xt_rsc_0_9_i_biwt_1
      | xt_rsc_0_9_i_bcwt_1;
  assign xt_rsc_0_9_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_9_i_s_raddr_core, xt_rsc_0_9_i_s_raddr_core_sct);
  assign xt_rsc_0_9_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_9_i_s_waddr_core, xt_rsc_0_9_i_s_waddr_core_sct);
  assign xt_rsc_0_9_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_9_i_s_din, xt_rsc_0_9_i_s_din_bfwt,
      xt_rsc_0_9_i_bcwt);
  assign xt_rsc_0_9_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_9_i_s_dout_core, xt_rsc_0_9_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_9_i_bcwt <= 1'b0;
      xt_rsc_0_9_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_9_i_bcwt <= ~((~(xt_rsc_0_9_i_bcwt | xt_rsc_0_9_i_biwt)) | xt_rsc_0_9_i_bdwt);
      xt_rsc_0_9_i_bcwt_1 <= ~((~(xt_rsc_0_9_i_bcwt_1 | xt_rsc_0_9_i_biwt_1)) | xt_rsc_0_9_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_9_i_biwt ) begin
      xt_rsc_0_9_i_s_din_bfwt <= xt_rsc_0_9_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_9_i_xt_rsc_0_9_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_9_i_xt_rsc_0_9_wait_ctrl (
  core_wen, xt_rsc_0_9_i_oswt, xt_rsc_0_9_i_oswt_1, xt_rsc_0_9_i_biwt, xt_rsc_0_9_i_bdwt,
      xt_rsc_0_9_i_bcwt, xt_rsc_0_9_i_s_re_core_sct, xt_rsc_0_9_i_biwt_1, xt_rsc_0_9_i_bdwt_2,
      xt_rsc_0_9_i_bcwt_1, xt_rsc_0_9_i_s_we_core_sct, xt_rsc_0_9_i_s_rrdy, xt_rsc_0_9_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_9_i_oswt;
  input xt_rsc_0_9_i_oswt_1;
  output xt_rsc_0_9_i_biwt;
  output xt_rsc_0_9_i_bdwt;
  input xt_rsc_0_9_i_bcwt;
  output xt_rsc_0_9_i_s_re_core_sct;
  output xt_rsc_0_9_i_biwt_1;
  output xt_rsc_0_9_i_bdwt_2;
  input xt_rsc_0_9_i_bcwt_1;
  output xt_rsc_0_9_i_s_we_core_sct;
  input xt_rsc_0_9_i_s_rrdy;
  input xt_rsc_0_9_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_9_i_ogwt;
  wire xt_rsc_0_9_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_9_i_bdwt = xt_rsc_0_9_i_oswt & core_wen;
  assign xt_rsc_0_9_i_biwt = xt_rsc_0_9_i_ogwt & xt_rsc_0_9_i_s_rrdy;
  assign xt_rsc_0_9_i_ogwt = xt_rsc_0_9_i_oswt & (~ xt_rsc_0_9_i_bcwt);
  assign xt_rsc_0_9_i_s_re_core_sct = xt_rsc_0_9_i_ogwt;
  assign xt_rsc_0_9_i_bdwt_2 = xt_rsc_0_9_i_oswt_1 & core_wen;
  assign xt_rsc_0_9_i_biwt_1 = xt_rsc_0_9_i_ogwt_1 & xt_rsc_0_9_i_s_wrdy;
  assign xt_rsc_0_9_i_ogwt_1 = xt_rsc_0_9_i_oswt_1 & (~ xt_rsc_0_9_i_bcwt_1);
  assign xt_rsc_0_9_i_s_we_core_sct = xt_rsc_0_9_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_8_i_xt_rsc_0_8_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_8_i_xt_rsc_0_8_wait_dp (
  clk, rst, xt_rsc_0_8_i_oswt, xt_rsc_0_8_i_wen_comp, xt_rsc_0_8_i_oswt_1, xt_rsc_0_8_i_wen_comp_1,
      xt_rsc_0_8_i_s_raddr_core, xt_rsc_0_8_i_s_waddr_core, xt_rsc_0_8_i_s_din_mxwt,
      xt_rsc_0_8_i_s_dout_core, xt_rsc_0_8_i_biwt, xt_rsc_0_8_i_bdwt, xt_rsc_0_8_i_bcwt,
      xt_rsc_0_8_i_biwt_1, xt_rsc_0_8_i_bdwt_2, xt_rsc_0_8_i_bcwt_1, xt_rsc_0_8_i_s_raddr,
      xt_rsc_0_8_i_s_raddr_core_sct, xt_rsc_0_8_i_s_waddr, xt_rsc_0_8_i_s_waddr_core_sct,
      xt_rsc_0_8_i_s_din, xt_rsc_0_8_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_8_i_oswt;
  output xt_rsc_0_8_i_wen_comp;
  input xt_rsc_0_8_i_oswt_1;
  output xt_rsc_0_8_i_wen_comp_1;
  input [3:0] xt_rsc_0_8_i_s_raddr_core;
  input [3:0] xt_rsc_0_8_i_s_waddr_core;
  output [31:0] xt_rsc_0_8_i_s_din_mxwt;
  input [31:0] xt_rsc_0_8_i_s_dout_core;
  input xt_rsc_0_8_i_biwt;
  input xt_rsc_0_8_i_bdwt;
  output xt_rsc_0_8_i_bcwt;
  reg xt_rsc_0_8_i_bcwt;
  input xt_rsc_0_8_i_biwt_1;
  input xt_rsc_0_8_i_bdwt_2;
  output xt_rsc_0_8_i_bcwt_1;
  reg xt_rsc_0_8_i_bcwt_1;
  output [3:0] xt_rsc_0_8_i_s_raddr;
  input xt_rsc_0_8_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_8_i_s_waddr;
  input xt_rsc_0_8_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_8_i_s_din;
  output [31:0] xt_rsc_0_8_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_8_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_8_i_wen_comp = (~ xt_rsc_0_8_i_oswt) | xt_rsc_0_8_i_biwt | xt_rsc_0_8_i_bcwt;
  assign xt_rsc_0_8_i_wen_comp_1 = (~ xt_rsc_0_8_i_oswt_1) | xt_rsc_0_8_i_biwt_1
      | xt_rsc_0_8_i_bcwt_1;
  assign xt_rsc_0_8_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_8_i_s_raddr_core, xt_rsc_0_8_i_s_raddr_core_sct);
  assign xt_rsc_0_8_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_8_i_s_waddr_core, xt_rsc_0_8_i_s_waddr_core_sct);
  assign xt_rsc_0_8_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_8_i_s_din, xt_rsc_0_8_i_s_din_bfwt,
      xt_rsc_0_8_i_bcwt);
  assign xt_rsc_0_8_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_8_i_s_dout_core, xt_rsc_0_8_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_8_i_bcwt <= 1'b0;
      xt_rsc_0_8_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_8_i_bcwt <= ~((~(xt_rsc_0_8_i_bcwt | xt_rsc_0_8_i_biwt)) | xt_rsc_0_8_i_bdwt);
      xt_rsc_0_8_i_bcwt_1 <= ~((~(xt_rsc_0_8_i_bcwt_1 | xt_rsc_0_8_i_biwt_1)) | xt_rsc_0_8_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_8_i_biwt ) begin
      xt_rsc_0_8_i_s_din_bfwt <= xt_rsc_0_8_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_8_i_xt_rsc_0_8_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_8_i_xt_rsc_0_8_wait_ctrl (
  core_wen, xt_rsc_0_8_i_oswt, xt_rsc_0_8_i_oswt_1, xt_rsc_0_8_i_biwt, xt_rsc_0_8_i_bdwt,
      xt_rsc_0_8_i_bcwt, xt_rsc_0_8_i_s_re_core_sct, xt_rsc_0_8_i_biwt_1, xt_rsc_0_8_i_bdwt_2,
      xt_rsc_0_8_i_bcwt_1, xt_rsc_0_8_i_s_we_core_sct, xt_rsc_0_8_i_s_rrdy, xt_rsc_0_8_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_8_i_oswt;
  input xt_rsc_0_8_i_oswt_1;
  output xt_rsc_0_8_i_biwt;
  output xt_rsc_0_8_i_bdwt;
  input xt_rsc_0_8_i_bcwt;
  output xt_rsc_0_8_i_s_re_core_sct;
  output xt_rsc_0_8_i_biwt_1;
  output xt_rsc_0_8_i_bdwt_2;
  input xt_rsc_0_8_i_bcwt_1;
  output xt_rsc_0_8_i_s_we_core_sct;
  input xt_rsc_0_8_i_s_rrdy;
  input xt_rsc_0_8_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_8_i_ogwt;
  wire xt_rsc_0_8_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_8_i_bdwt = xt_rsc_0_8_i_oswt & core_wen;
  assign xt_rsc_0_8_i_biwt = xt_rsc_0_8_i_ogwt & xt_rsc_0_8_i_s_rrdy;
  assign xt_rsc_0_8_i_ogwt = xt_rsc_0_8_i_oswt & (~ xt_rsc_0_8_i_bcwt);
  assign xt_rsc_0_8_i_s_re_core_sct = xt_rsc_0_8_i_ogwt;
  assign xt_rsc_0_8_i_bdwt_2 = xt_rsc_0_8_i_oswt_1 & core_wen;
  assign xt_rsc_0_8_i_biwt_1 = xt_rsc_0_8_i_ogwt_1 & xt_rsc_0_8_i_s_wrdy;
  assign xt_rsc_0_8_i_ogwt_1 = xt_rsc_0_8_i_oswt_1 & (~ xt_rsc_0_8_i_bcwt_1);
  assign xt_rsc_0_8_i_s_we_core_sct = xt_rsc_0_8_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_7_i_xt_rsc_0_7_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_7_i_xt_rsc_0_7_wait_dp (
  clk, rst, xt_rsc_0_7_i_oswt, xt_rsc_0_7_i_wen_comp, xt_rsc_0_7_i_oswt_1, xt_rsc_0_7_i_wen_comp_1,
      xt_rsc_0_7_i_s_raddr_core, xt_rsc_0_7_i_s_waddr_core, xt_rsc_0_7_i_s_din_mxwt,
      xt_rsc_0_7_i_s_dout_core, xt_rsc_0_7_i_biwt, xt_rsc_0_7_i_bdwt, xt_rsc_0_7_i_bcwt,
      xt_rsc_0_7_i_biwt_1, xt_rsc_0_7_i_bdwt_2, xt_rsc_0_7_i_bcwt_1, xt_rsc_0_7_i_s_raddr,
      xt_rsc_0_7_i_s_raddr_core_sct, xt_rsc_0_7_i_s_waddr, xt_rsc_0_7_i_s_waddr_core_sct,
      xt_rsc_0_7_i_s_din, xt_rsc_0_7_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_7_i_oswt;
  output xt_rsc_0_7_i_wen_comp;
  input xt_rsc_0_7_i_oswt_1;
  output xt_rsc_0_7_i_wen_comp_1;
  input [3:0] xt_rsc_0_7_i_s_raddr_core;
  input [3:0] xt_rsc_0_7_i_s_waddr_core;
  output [31:0] xt_rsc_0_7_i_s_din_mxwt;
  input [31:0] xt_rsc_0_7_i_s_dout_core;
  input xt_rsc_0_7_i_biwt;
  input xt_rsc_0_7_i_bdwt;
  output xt_rsc_0_7_i_bcwt;
  reg xt_rsc_0_7_i_bcwt;
  input xt_rsc_0_7_i_biwt_1;
  input xt_rsc_0_7_i_bdwt_2;
  output xt_rsc_0_7_i_bcwt_1;
  reg xt_rsc_0_7_i_bcwt_1;
  output [3:0] xt_rsc_0_7_i_s_raddr;
  input xt_rsc_0_7_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_7_i_s_waddr;
  input xt_rsc_0_7_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_7_i_s_din;
  output [31:0] xt_rsc_0_7_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_7_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_7_i_wen_comp = (~ xt_rsc_0_7_i_oswt) | xt_rsc_0_7_i_biwt | xt_rsc_0_7_i_bcwt;
  assign xt_rsc_0_7_i_wen_comp_1 = (~ xt_rsc_0_7_i_oswt_1) | xt_rsc_0_7_i_biwt_1
      | xt_rsc_0_7_i_bcwt_1;
  assign xt_rsc_0_7_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_7_i_s_raddr_core, xt_rsc_0_7_i_s_raddr_core_sct);
  assign xt_rsc_0_7_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_7_i_s_waddr_core, xt_rsc_0_7_i_s_waddr_core_sct);
  assign xt_rsc_0_7_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_7_i_s_din, xt_rsc_0_7_i_s_din_bfwt,
      xt_rsc_0_7_i_bcwt);
  assign xt_rsc_0_7_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_7_i_s_dout_core, xt_rsc_0_7_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_7_i_bcwt <= 1'b0;
      xt_rsc_0_7_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_7_i_bcwt <= ~((~(xt_rsc_0_7_i_bcwt | xt_rsc_0_7_i_biwt)) | xt_rsc_0_7_i_bdwt);
      xt_rsc_0_7_i_bcwt_1 <= ~((~(xt_rsc_0_7_i_bcwt_1 | xt_rsc_0_7_i_biwt_1)) | xt_rsc_0_7_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_7_i_biwt ) begin
      xt_rsc_0_7_i_s_din_bfwt <= xt_rsc_0_7_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_7_i_xt_rsc_0_7_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_7_i_xt_rsc_0_7_wait_ctrl (
  core_wen, xt_rsc_0_7_i_oswt, xt_rsc_0_7_i_oswt_1, xt_rsc_0_7_i_biwt, xt_rsc_0_7_i_bdwt,
      xt_rsc_0_7_i_bcwt, xt_rsc_0_7_i_s_re_core_sct, xt_rsc_0_7_i_biwt_1, xt_rsc_0_7_i_bdwt_2,
      xt_rsc_0_7_i_bcwt_1, xt_rsc_0_7_i_s_we_core_sct, xt_rsc_0_7_i_s_rrdy, xt_rsc_0_7_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_7_i_oswt;
  input xt_rsc_0_7_i_oswt_1;
  output xt_rsc_0_7_i_biwt;
  output xt_rsc_0_7_i_bdwt;
  input xt_rsc_0_7_i_bcwt;
  output xt_rsc_0_7_i_s_re_core_sct;
  output xt_rsc_0_7_i_biwt_1;
  output xt_rsc_0_7_i_bdwt_2;
  input xt_rsc_0_7_i_bcwt_1;
  output xt_rsc_0_7_i_s_we_core_sct;
  input xt_rsc_0_7_i_s_rrdy;
  input xt_rsc_0_7_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_7_i_ogwt;
  wire xt_rsc_0_7_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_7_i_bdwt = xt_rsc_0_7_i_oswt & core_wen;
  assign xt_rsc_0_7_i_biwt = xt_rsc_0_7_i_ogwt & xt_rsc_0_7_i_s_rrdy;
  assign xt_rsc_0_7_i_ogwt = xt_rsc_0_7_i_oswt & (~ xt_rsc_0_7_i_bcwt);
  assign xt_rsc_0_7_i_s_re_core_sct = xt_rsc_0_7_i_ogwt;
  assign xt_rsc_0_7_i_bdwt_2 = xt_rsc_0_7_i_oswt_1 & core_wen;
  assign xt_rsc_0_7_i_biwt_1 = xt_rsc_0_7_i_ogwt_1 & xt_rsc_0_7_i_s_wrdy;
  assign xt_rsc_0_7_i_ogwt_1 = xt_rsc_0_7_i_oswt_1 & (~ xt_rsc_0_7_i_bcwt_1);
  assign xt_rsc_0_7_i_s_we_core_sct = xt_rsc_0_7_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_6_i_xt_rsc_0_6_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_6_i_xt_rsc_0_6_wait_dp (
  clk, rst, xt_rsc_0_6_i_oswt, xt_rsc_0_6_i_wen_comp, xt_rsc_0_6_i_oswt_1, xt_rsc_0_6_i_wen_comp_1,
      xt_rsc_0_6_i_s_raddr_core, xt_rsc_0_6_i_s_waddr_core, xt_rsc_0_6_i_s_din_mxwt,
      xt_rsc_0_6_i_s_dout_core, xt_rsc_0_6_i_biwt, xt_rsc_0_6_i_bdwt, xt_rsc_0_6_i_bcwt,
      xt_rsc_0_6_i_biwt_1, xt_rsc_0_6_i_bdwt_2, xt_rsc_0_6_i_bcwt_1, xt_rsc_0_6_i_s_raddr,
      xt_rsc_0_6_i_s_raddr_core_sct, xt_rsc_0_6_i_s_waddr, xt_rsc_0_6_i_s_waddr_core_sct,
      xt_rsc_0_6_i_s_din, xt_rsc_0_6_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_6_i_oswt;
  output xt_rsc_0_6_i_wen_comp;
  input xt_rsc_0_6_i_oswt_1;
  output xt_rsc_0_6_i_wen_comp_1;
  input [3:0] xt_rsc_0_6_i_s_raddr_core;
  input [3:0] xt_rsc_0_6_i_s_waddr_core;
  output [31:0] xt_rsc_0_6_i_s_din_mxwt;
  input [31:0] xt_rsc_0_6_i_s_dout_core;
  input xt_rsc_0_6_i_biwt;
  input xt_rsc_0_6_i_bdwt;
  output xt_rsc_0_6_i_bcwt;
  reg xt_rsc_0_6_i_bcwt;
  input xt_rsc_0_6_i_biwt_1;
  input xt_rsc_0_6_i_bdwt_2;
  output xt_rsc_0_6_i_bcwt_1;
  reg xt_rsc_0_6_i_bcwt_1;
  output [3:0] xt_rsc_0_6_i_s_raddr;
  input xt_rsc_0_6_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_6_i_s_waddr;
  input xt_rsc_0_6_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_6_i_s_din;
  output [31:0] xt_rsc_0_6_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_6_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_6_i_wen_comp = (~ xt_rsc_0_6_i_oswt) | xt_rsc_0_6_i_biwt | xt_rsc_0_6_i_bcwt;
  assign xt_rsc_0_6_i_wen_comp_1 = (~ xt_rsc_0_6_i_oswt_1) | xt_rsc_0_6_i_biwt_1
      | xt_rsc_0_6_i_bcwt_1;
  assign xt_rsc_0_6_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_6_i_s_raddr_core, xt_rsc_0_6_i_s_raddr_core_sct);
  assign xt_rsc_0_6_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_6_i_s_waddr_core, xt_rsc_0_6_i_s_waddr_core_sct);
  assign xt_rsc_0_6_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_6_i_s_din, xt_rsc_0_6_i_s_din_bfwt,
      xt_rsc_0_6_i_bcwt);
  assign xt_rsc_0_6_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_6_i_s_dout_core, xt_rsc_0_6_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_6_i_bcwt <= 1'b0;
      xt_rsc_0_6_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_6_i_bcwt <= ~((~(xt_rsc_0_6_i_bcwt | xt_rsc_0_6_i_biwt)) | xt_rsc_0_6_i_bdwt);
      xt_rsc_0_6_i_bcwt_1 <= ~((~(xt_rsc_0_6_i_bcwt_1 | xt_rsc_0_6_i_biwt_1)) | xt_rsc_0_6_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_6_i_biwt ) begin
      xt_rsc_0_6_i_s_din_bfwt <= xt_rsc_0_6_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_6_i_xt_rsc_0_6_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_6_i_xt_rsc_0_6_wait_ctrl (
  core_wen, xt_rsc_0_6_i_oswt, xt_rsc_0_6_i_oswt_1, xt_rsc_0_6_i_biwt, xt_rsc_0_6_i_bdwt,
      xt_rsc_0_6_i_bcwt, xt_rsc_0_6_i_s_re_core_sct, xt_rsc_0_6_i_biwt_1, xt_rsc_0_6_i_bdwt_2,
      xt_rsc_0_6_i_bcwt_1, xt_rsc_0_6_i_s_we_core_sct, xt_rsc_0_6_i_s_rrdy, xt_rsc_0_6_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_6_i_oswt;
  input xt_rsc_0_6_i_oswt_1;
  output xt_rsc_0_6_i_biwt;
  output xt_rsc_0_6_i_bdwt;
  input xt_rsc_0_6_i_bcwt;
  output xt_rsc_0_6_i_s_re_core_sct;
  output xt_rsc_0_6_i_biwt_1;
  output xt_rsc_0_6_i_bdwt_2;
  input xt_rsc_0_6_i_bcwt_1;
  output xt_rsc_0_6_i_s_we_core_sct;
  input xt_rsc_0_6_i_s_rrdy;
  input xt_rsc_0_6_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_6_i_ogwt;
  wire xt_rsc_0_6_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_6_i_bdwt = xt_rsc_0_6_i_oswt & core_wen;
  assign xt_rsc_0_6_i_biwt = xt_rsc_0_6_i_ogwt & xt_rsc_0_6_i_s_rrdy;
  assign xt_rsc_0_6_i_ogwt = xt_rsc_0_6_i_oswt & (~ xt_rsc_0_6_i_bcwt);
  assign xt_rsc_0_6_i_s_re_core_sct = xt_rsc_0_6_i_ogwt;
  assign xt_rsc_0_6_i_bdwt_2 = xt_rsc_0_6_i_oswt_1 & core_wen;
  assign xt_rsc_0_6_i_biwt_1 = xt_rsc_0_6_i_ogwt_1 & xt_rsc_0_6_i_s_wrdy;
  assign xt_rsc_0_6_i_ogwt_1 = xt_rsc_0_6_i_oswt_1 & (~ xt_rsc_0_6_i_bcwt_1);
  assign xt_rsc_0_6_i_s_we_core_sct = xt_rsc_0_6_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_5_i_xt_rsc_0_5_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_5_i_xt_rsc_0_5_wait_dp (
  clk, rst, xt_rsc_0_5_i_oswt, xt_rsc_0_5_i_wen_comp, xt_rsc_0_5_i_oswt_1, xt_rsc_0_5_i_wen_comp_1,
      xt_rsc_0_5_i_s_raddr_core, xt_rsc_0_5_i_s_waddr_core, xt_rsc_0_5_i_s_din_mxwt,
      xt_rsc_0_5_i_s_dout_core, xt_rsc_0_5_i_biwt, xt_rsc_0_5_i_bdwt, xt_rsc_0_5_i_bcwt,
      xt_rsc_0_5_i_biwt_1, xt_rsc_0_5_i_bdwt_2, xt_rsc_0_5_i_bcwt_1, xt_rsc_0_5_i_s_raddr,
      xt_rsc_0_5_i_s_raddr_core_sct, xt_rsc_0_5_i_s_waddr, xt_rsc_0_5_i_s_waddr_core_sct,
      xt_rsc_0_5_i_s_din, xt_rsc_0_5_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_5_i_oswt;
  output xt_rsc_0_5_i_wen_comp;
  input xt_rsc_0_5_i_oswt_1;
  output xt_rsc_0_5_i_wen_comp_1;
  input [3:0] xt_rsc_0_5_i_s_raddr_core;
  input [3:0] xt_rsc_0_5_i_s_waddr_core;
  output [31:0] xt_rsc_0_5_i_s_din_mxwt;
  input [31:0] xt_rsc_0_5_i_s_dout_core;
  input xt_rsc_0_5_i_biwt;
  input xt_rsc_0_5_i_bdwt;
  output xt_rsc_0_5_i_bcwt;
  reg xt_rsc_0_5_i_bcwt;
  input xt_rsc_0_5_i_biwt_1;
  input xt_rsc_0_5_i_bdwt_2;
  output xt_rsc_0_5_i_bcwt_1;
  reg xt_rsc_0_5_i_bcwt_1;
  output [3:0] xt_rsc_0_5_i_s_raddr;
  input xt_rsc_0_5_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_5_i_s_waddr;
  input xt_rsc_0_5_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_5_i_s_din;
  output [31:0] xt_rsc_0_5_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_5_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_5_i_wen_comp = (~ xt_rsc_0_5_i_oswt) | xt_rsc_0_5_i_biwt | xt_rsc_0_5_i_bcwt;
  assign xt_rsc_0_5_i_wen_comp_1 = (~ xt_rsc_0_5_i_oswt_1) | xt_rsc_0_5_i_biwt_1
      | xt_rsc_0_5_i_bcwt_1;
  assign xt_rsc_0_5_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_5_i_s_raddr_core, xt_rsc_0_5_i_s_raddr_core_sct);
  assign xt_rsc_0_5_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_5_i_s_waddr_core, xt_rsc_0_5_i_s_waddr_core_sct);
  assign xt_rsc_0_5_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_5_i_s_din, xt_rsc_0_5_i_s_din_bfwt,
      xt_rsc_0_5_i_bcwt);
  assign xt_rsc_0_5_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_5_i_s_dout_core, xt_rsc_0_5_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_5_i_bcwt <= 1'b0;
      xt_rsc_0_5_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_5_i_bcwt <= ~((~(xt_rsc_0_5_i_bcwt | xt_rsc_0_5_i_biwt)) | xt_rsc_0_5_i_bdwt);
      xt_rsc_0_5_i_bcwt_1 <= ~((~(xt_rsc_0_5_i_bcwt_1 | xt_rsc_0_5_i_biwt_1)) | xt_rsc_0_5_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_5_i_biwt ) begin
      xt_rsc_0_5_i_s_din_bfwt <= xt_rsc_0_5_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_5_i_xt_rsc_0_5_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_5_i_xt_rsc_0_5_wait_ctrl (
  core_wen, xt_rsc_0_5_i_oswt, xt_rsc_0_5_i_oswt_1, xt_rsc_0_5_i_biwt, xt_rsc_0_5_i_bdwt,
      xt_rsc_0_5_i_bcwt, xt_rsc_0_5_i_s_re_core_sct, xt_rsc_0_5_i_biwt_1, xt_rsc_0_5_i_bdwt_2,
      xt_rsc_0_5_i_bcwt_1, xt_rsc_0_5_i_s_we_core_sct, xt_rsc_0_5_i_s_rrdy, xt_rsc_0_5_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_5_i_oswt;
  input xt_rsc_0_5_i_oswt_1;
  output xt_rsc_0_5_i_biwt;
  output xt_rsc_0_5_i_bdwt;
  input xt_rsc_0_5_i_bcwt;
  output xt_rsc_0_5_i_s_re_core_sct;
  output xt_rsc_0_5_i_biwt_1;
  output xt_rsc_0_5_i_bdwt_2;
  input xt_rsc_0_5_i_bcwt_1;
  output xt_rsc_0_5_i_s_we_core_sct;
  input xt_rsc_0_5_i_s_rrdy;
  input xt_rsc_0_5_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_5_i_ogwt;
  wire xt_rsc_0_5_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_5_i_bdwt = xt_rsc_0_5_i_oswt & core_wen;
  assign xt_rsc_0_5_i_biwt = xt_rsc_0_5_i_ogwt & xt_rsc_0_5_i_s_rrdy;
  assign xt_rsc_0_5_i_ogwt = xt_rsc_0_5_i_oswt & (~ xt_rsc_0_5_i_bcwt);
  assign xt_rsc_0_5_i_s_re_core_sct = xt_rsc_0_5_i_ogwt;
  assign xt_rsc_0_5_i_bdwt_2 = xt_rsc_0_5_i_oswt_1 & core_wen;
  assign xt_rsc_0_5_i_biwt_1 = xt_rsc_0_5_i_ogwt_1 & xt_rsc_0_5_i_s_wrdy;
  assign xt_rsc_0_5_i_ogwt_1 = xt_rsc_0_5_i_oswt_1 & (~ xt_rsc_0_5_i_bcwt_1);
  assign xt_rsc_0_5_i_s_we_core_sct = xt_rsc_0_5_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_4_i_xt_rsc_0_4_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_4_i_xt_rsc_0_4_wait_dp (
  clk, rst, xt_rsc_0_4_i_oswt, xt_rsc_0_4_i_wen_comp, xt_rsc_0_4_i_oswt_1, xt_rsc_0_4_i_wen_comp_1,
      xt_rsc_0_4_i_s_raddr_core, xt_rsc_0_4_i_s_waddr_core, xt_rsc_0_4_i_s_din_mxwt,
      xt_rsc_0_4_i_s_dout_core, xt_rsc_0_4_i_biwt, xt_rsc_0_4_i_bdwt, xt_rsc_0_4_i_bcwt,
      xt_rsc_0_4_i_biwt_1, xt_rsc_0_4_i_bdwt_2, xt_rsc_0_4_i_bcwt_1, xt_rsc_0_4_i_s_raddr,
      xt_rsc_0_4_i_s_raddr_core_sct, xt_rsc_0_4_i_s_waddr, xt_rsc_0_4_i_s_waddr_core_sct,
      xt_rsc_0_4_i_s_din, xt_rsc_0_4_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_4_i_oswt;
  output xt_rsc_0_4_i_wen_comp;
  input xt_rsc_0_4_i_oswt_1;
  output xt_rsc_0_4_i_wen_comp_1;
  input [3:0] xt_rsc_0_4_i_s_raddr_core;
  input [3:0] xt_rsc_0_4_i_s_waddr_core;
  output [31:0] xt_rsc_0_4_i_s_din_mxwt;
  input [31:0] xt_rsc_0_4_i_s_dout_core;
  input xt_rsc_0_4_i_biwt;
  input xt_rsc_0_4_i_bdwt;
  output xt_rsc_0_4_i_bcwt;
  reg xt_rsc_0_4_i_bcwt;
  input xt_rsc_0_4_i_biwt_1;
  input xt_rsc_0_4_i_bdwt_2;
  output xt_rsc_0_4_i_bcwt_1;
  reg xt_rsc_0_4_i_bcwt_1;
  output [3:0] xt_rsc_0_4_i_s_raddr;
  input xt_rsc_0_4_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_4_i_s_waddr;
  input xt_rsc_0_4_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_4_i_s_din;
  output [31:0] xt_rsc_0_4_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_4_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_4_i_wen_comp = (~ xt_rsc_0_4_i_oswt) | xt_rsc_0_4_i_biwt | xt_rsc_0_4_i_bcwt;
  assign xt_rsc_0_4_i_wen_comp_1 = (~ xt_rsc_0_4_i_oswt_1) | xt_rsc_0_4_i_biwt_1
      | xt_rsc_0_4_i_bcwt_1;
  assign xt_rsc_0_4_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_4_i_s_raddr_core, xt_rsc_0_4_i_s_raddr_core_sct);
  assign xt_rsc_0_4_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_4_i_s_waddr_core, xt_rsc_0_4_i_s_waddr_core_sct);
  assign xt_rsc_0_4_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_4_i_s_din, xt_rsc_0_4_i_s_din_bfwt,
      xt_rsc_0_4_i_bcwt);
  assign xt_rsc_0_4_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_4_i_s_dout_core, xt_rsc_0_4_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_4_i_bcwt <= 1'b0;
      xt_rsc_0_4_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_4_i_bcwt <= ~((~(xt_rsc_0_4_i_bcwt | xt_rsc_0_4_i_biwt)) | xt_rsc_0_4_i_bdwt);
      xt_rsc_0_4_i_bcwt_1 <= ~((~(xt_rsc_0_4_i_bcwt_1 | xt_rsc_0_4_i_biwt_1)) | xt_rsc_0_4_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_4_i_biwt ) begin
      xt_rsc_0_4_i_s_din_bfwt <= xt_rsc_0_4_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_4_i_xt_rsc_0_4_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_4_i_xt_rsc_0_4_wait_ctrl (
  core_wen, xt_rsc_0_4_i_oswt, xt_rsc_0_4_i_oswt_1, xt_rsc_0_4_i_biwt, xt_rsc_0_4_i_bdwt,
      xt_rsc_0_4_i_bcwt, xt_rsc_0_4_i_s_re_core_sct, xt_rsc_0_4_i_biwt_1, xt_rsc_0_4_i_bdwt_2,
      xt_rsc_0_4_i_bcwt_1, xt_rsc_0_4_i_s_we_core_sct, xt_rsc_0_4_i_s_rrdy, xt_rsc_0_4_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_4_i_oswt;
  input xt_rsc_0_4_i_oswt_1;
  output xt_rsc_0_4_i_biwt;
  output xt_rsc_0_4_i_bdwt;
  input xt_rsc_0_4_i_bcwt;
  output xt_rsc_0_4_i_s_re_core_sct;
  output xt_rsc_0_4_i_biwt_1;
  output xt_rsc_0_4_i_bdwt_2;
  input xt_rsc_0_4_i_bcwt_1;
  output xt_rsc_0_4_i_s_we_core_sct;
  input xt_rsc_0_4_i_s_rrdy;
  input xt_rsc_0_4_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_4_i_ogwt;
  wire xt_rsc_0_4_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_4_i_bdwt = xt_rsc_0_4_i_oswt & core_wen;
  assign xt_rsc_0_4_i_biwt = xt_rsc_0_4_i_ogwt & xt_rsc_0_4_i_s_rrdy;
  assign xt_rsc_0_4_i_ogwt = xt_rsc_0_4_i_oswt & (~ xt_rsc_0_4_i_bcwt);
  assign xt_rsc_0_4_i_s_re_core_sct = xt_rsc_0_4_i_ogwt;
  assign xt_rsc_0_4_i_bdwt_2 = xt_rsc_0_4_i_oswt_1 & core_wen;
  assign xt_rsc_0_4_i_biwt_1 = xt_rsc_0_4_i_ogwt_1 & xt_rsc_0_4_i_s_wrdy;
  assign xt_rsc_0_4_i_ogwt_1 = xt_rsc_0_4_i_oswt_1 & (~ xt_rsc_0_4_i_bcwt_1);
  assign xt_rsc_0_4_i_s_we_core_sct = xt_rsc_0_4_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_3_i_xt_rsc_0_3_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_3_i_xt_rsc_0_3_wait_dp (
  clk, rst, xt_rsc_0_3_i_oswt, xt_rsc_0_3_i_wen_comp, xt_rsc_0_3_i_oswt_1, xt_rsc_0_3_i_wen_comp_1,
      xt_rsc_0_3_i_s_raddr_core, xt_rsc_0_3_i_s_waddr_core, xt_rsc_0_3_i_s_din_mxwt,
      xt_rsc_0_3_i_s_dout_core, xt_rsc_0_3_i_biwt, xt_rsc_0_3_i_bdwt, xt_rsc_0_3_i_bcwt,
      xt_rsc_0_3_i_biwt_1, xt_rsc_0_3_i_bdwt_2, xt_rsc_0_3_i_bcwt_1, xt_rsc_0_3_i_s_raddr,
      xt_rsc_0_3_i_s_raddr_core_sct, xt_rsc_0_3_i_s_waddr, xt_rsc_0_3_i_s_waddr_core_sct,
      xt_rsc_0_3_i_s_din, xt_rsc_0_3_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_3_i_oswt;
  output xt_rsc_0_3_i_wen_comp;
  input xt_rsc_0_3_i_oswt_1;
  output xt_rsc_0_3_i_wen_comp_1;
  input [3:0] xt_rsc_0_3_i_s_raddr_core;
  input [3:0] xt_rsc_0_3_i_s_waddr_core;
  output [31:0] xt_rsc_0_3_i_s_din_mxwt;
  input [31:0] xt_rsc_0_3_i_s_dout_core;
  input xt_rsc_0_3_i_biwt;
  input xt_rsc_0_3_i_bdwt;
  output xt_rsc_0_3_i_bcwt;
  reg xt_rsc_0_3_i_bcwt;
  input xt_rsc_0_3_i_biwt_1;
  input xt_rsc_0_3_i_bdwt_2;
  output xt_rsc_0_3_i_bcwt_1;
  reg xt_rsc_0_3_i_bcwt_1;
  output [3:0] xt_rsc_0_3_i_s_raddr;
  input xt_rsc_0_3_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_3_i_s_waddr;
  input xt_rsc_0_3_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_3_i_s_din;
  output [31:0] xt_rsc_0_3_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_3_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_3_i_wen_comp = (~ xt_rsc_0_3_i_oswt) | xt_rsc_0_3_i_biwt | xt_rsc_0_3_i_bcwt;
  assign xt_rsc_0_3_i_wen_comp_1 = (~ xt_rsc_0_3_i_oswt_1) | xt_rsc_0_3_i_biwt_1
      | xt_rsc_0_3_i_bcwt_1;
  assign xt_rsc_0_3_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_3_i_s_raddr_core, xt_rsc_0_3_i_s_raddr_core_sct);
  assign xt_rsc_0_3_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_3_i_s_waddr_core, xt_rsc_0_3_i_s_waddr_core_sct);
  assign xt_rsc_0_3_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_3_i_s_din, xt_rsc_0_3_i_s_din_bfwt,
      xt_rsc_0_3_i_bcwt);
  assign xt_rsc_0_3_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_3_i_s_dout_core, xt_rsc_0_3_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_3_i_bcwt <= 1'b0;
      xt_rsc_0_3_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_3_i_bcwt <= ~((~(xt_rsc_0_3_i_bcwt | xt_rsc_0_3_i_biwt)) | xt_rsc_0_3_i_bdwt);
      xt_rsc_0_3_i_bcwt_1 <= ~((~(xt_rsc_0_3_i_bcwt_1 | xt_rsc_0_3_i_biwt_1)) | xt_rsc_0_3_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_3_i_biwt ) begin
      xt_rsc_0_3_i_s_din_bfwt <= xt_rsc_0_3_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_3_i_xt_rsc_0_3_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_3_i_xt_rsc_0_3_wait_ctrl (
  core_wen, xt_rsc_0_3_i_oswt, xt_rsc_0_3_i_oswt_1, xt_rsc_0_3_i_biwt, xt_rsc_0_3_i_bdwt,
      xt_rsc_0_3_i_bcwt, xt_rsc_0_3_i_s_re_core_sct, xt_rsc_0_3_i_biwt_1, xt_rsc_0_3_i_bdwt_2,
      xt_rsc_0_3_i_bcwt_1, xt_rsc_0_3_i_s_we_core_sct, xt_rsc_0_3_i_s_rrdy, xt_rsc_0_3_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_3_i_oswt;
  input xt_rsc_0_3_i_oswt_1;
  output xt_rsc_0_3_i_biwt;
  output xt_rsc_0_3_i_bdwt;
  input xt_rsc_0_3_i_bcwt;
  output xt_rsc_0_3_i_s_re_core_sct;
  output xt_rsc_0_3_i_biwt_1;
  output xt_rsc_0_3_i_bdwt_2;
  input xt_rsc_0_3_i_bcwt_1;
  output xt_rsc_0_3_i_s_we_core_sct;
  input xt_rsc_0_3_i_s_rrdy;
  input xt_rsc_0_3_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_3_i_ogwt;
  wire xt_rsc_0_3_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_3_i_bdwt = xt_rsc_0_3_i_oswt & core_wen;
  assign xt_rsc_0_3_i_biwt = xt_rsc_0_3_i_ogwt & xt_rsc_0_3_i_s_rrdy;
  assign xt_rsc_0_3_i_ogwt = xt_rsc_0_3_i_oswt & (~ xt_rsc_0_3_i_bcwt);
  assign xt_rsc_0_3_i_s_re_core_sct = xt_rsc_0_3_i_ogwt;
  assign xt_rsc_0_3_i_bdwt_2 = xt_rsc_0_3_i_oswt_1 & core_wen;
  assign xt_rsc_0_3_i_biwt_1 = xt_rsc_0_3_i_ogwt_1 & xt_rsc_0_3_i_s_wrdy;
  assign xt_rsc_0_3_i_ogwt_1 = xt_rsc_0_3_i_oswt_1 & (~ xt_rsc_0_3_i_bcwt_1);
  assign xt_rsc_0_3_i_s_we_core_sct = xt_rsc_0_3_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_2_i_xt_rsc_0_2_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_2_i_xt_rsc_0_2_wait_dp (
  clk, rst, xt_rsc_0_2_i_oswt, xt_rsc_0_2_i_wen_comp, xt_rsc_0_2_i_oswt_1, xt_rsc_0_2_i_wen_comp_1,
      xt_rsc_0_2_i_s_raddr_core, xt_rsc_0_2_i_s_waddr_core, xt_rsc_0_2_i_s_din_mxwt,
      xt_rsc_0_2_i_s_dout_core, xt_rsc_0_2_i_biwt, xt_rsc_0_2_i_bdwt, xt_rsc_0_2_i_bcwt,
      xt_rsc_0_2_i_biwt_1, xt_rsc_0_2_i_bdwt_2, xt_rsc_0_2_i_bcwt_1, xt_rsc_0_2_i_s_raddr,
      xt_rsc_0_2_i_s_raddr_core_sct, xt_rsc_0_2_i_s_waddr, xt_rsc_0_2_i_s_waddr_core_sct,
      xt_rsc_0_2_i_s_din, xt_rsc_0_2_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_2_i_oswt;
  output xt_rsc_0_2_i_wen_comp;
  input xt_rsc_0_2_i_oswt_1;
  output xt_rsc_0_2_i_wen_comp_1;
  input [3:0] xt_rsc_0_2_i_s_raddr_core;
  input [3:0] xt_rsc_0_2_i_s_waddr_core;
  output [31:0] xt_rsc_0_2_i_s_din_mxwt;
  input [31:0] xt_rsc_0_2_i_s_dout_core;
  input xt_rsc_0_2_i_biwt;
  input xt_rsc_0_2_i_bdwt;
  output xt_rsc_0_2_i_bcwt;
  reg xt_rsc_0_2_i_bcwt;
  input xt_rsc_0_2_i_biwt_1;
  input xt_rsc_0_2_i_bdwt_2;
  output xt_rsc_0_2_i_bcwt_1;
  reg xt_rsc_0_2_i_bcwt_1;
  output [3:0] xt_rsc_0_2_i_s_raddr;
  input xt_rsc_0_2_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_2_i_s_waddr;
  input xt_rsc_0_2_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_2_i_s_din;
  output [31:0] xt_rsc_0_2_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_2_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_2_i_wen_comp = (~ xt_rsc_0_2_i_oswt) | xt_rsc_0_2_i_biwt | xt_rsc_0_2_i_bcwt;
  assign xt_rsc_0_2_i_wen_comp_1 = (~ xt_rsc_0_2_i_oswt_1) | xt_rsc_0_2_i_biwt_1
      | xt_rsc_0_2_i_bcwt_1;
  assign xt_rsc_0_2_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_2_i_s_raddr_core, xt_rsc_0_2_i_s_raddr_core_sct);
  assign xt_rsc_0_2_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_2_i_s_waddr_core, xt_rsc_0_2_i_s_waddr_core_sct);
  assign xt_rsc_0_2_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_2_i_s_din, xt_rsc_0_2_i_s_din_bfwt,
      xt_rsc_0_2_i_bcwt);
  assign xt_rsc_0_2_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_2_i_s_dout_core, xt_rsc_0_2_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_2_i_bcwt <= 1'b0;
      xt_rsc_0_2_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_2_i_bcwt <= ~((~(xt_rsc_0_2_i_bcwt | xt_rsc_0_2_i_biwt)) | xt_rsc_0_2_i_bdwt);
      xt_rsc_0_2_i_bcwt_1 <= ~((~(xt_rsc_0_2_i_bcwt_1 | xt_rsc_0_2_i_biwt_1)) | xt_rsc_0_2_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_2_i_biwt ) begin
      xt_rsc_0_2_i_s_din_bfwt <= xt_rsc_0_2_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_2_i_xt_rsc_0_2_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_2_i_xt_rsc_0_2_wait_ctrl (
  core_wen, xt_rsc_0_2_i_oswt, xt_rsc_0_2_i_oswt_1, xt_rsc_0_2_i_biwt, xt_rsc_0_2_i_bdwt,
      xt_rsc_0_2_i_bcwt, xt_rsc_0_2_i_s_re_core_sct, xt_rsc_0_2_i_biwt_1, xt_rsc_0_2_i_bdwt_2,
      xt_rsc_0_2_i_bcwt_1, xt_rsc_0_2_i_s_we_core_sct, xt_rsc_0_2_i_s_rrdy, xt_rsc_0_2_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_2_i_oswt;
  input xt_rsc_0_2_i_oswt_1;
  output xt_rsc_0_2_i_biwt;
  output xt_rsc_0_2_i_bdwt;
  input xt_rsc_0_2_i_bcwt;
  output xt_rsc_0_2_i_s_re_core_sct;
  output xt_rsc_0_2_i_biwt_1;
  output xt_rsc_0_2_i_bdwt_2;
  input xt_rsc_0_2_i_bcwt_1;
  output xt_rsc_0_2_i_s_we_core_sct;
  input xt_rsc_0_2_i_s_rrdy;
  input xt_rsc_0_2_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_2_i_ogwt;
  wire xt_rsc_0_2_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_2_i_bdwt = xt_rsc_0_2_i_oswt & core_wen;
  assign xt_rsc_0_2_i_biwt = xt_rsc_0_2_i_ogwt & xt_rsc_0_2_i_s_rrdy;
  assign xt_rsc_0_2_i_ogwt = xt_rsc_0_2_i_oswt & (~ xt_rsc_0_2_i_bcwt);
  assign xt_rsc_0_2_i_s_re_core_sct = xt_rsc_0_2_i_ogwt;
  assign xt_rsc_0_2_i_bdwt_2 = xt_rsc_0_2_i_oswt_1 & core_wen;
  assign xt_rsc_0_2_i_biwt_1 = xt_rsc_0_2_i_ogwt_1 & xt_rsc_0_2_i_s_wrdy;
  assign xt_rsc_0_2_i_ogwt_1 = xt_rsc_0_2_i_oswt_1 & (~ xt_rsc_0_2_i_bcwt_1);
  assign xt_rsc_0_2_i_s_we_core_sct = xt_rsc_0_2_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_1_i_xt_rsc_0_1_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_1_i_xt_rsc_0_1_wait_dp (
  clk, rst, xt_rsc_0_1_i_oswt, xt_rsc_0_1_i_wen_comp, xt_rsc_0_1_i_oswt_1, xt_rsc_0_1_i_wen_comp_1,
      xt_rsc_0_1_i_s_raddr_core, xt_rsc_0_1_i_s_waddr_core, xt_rsc_0_1_i_s_din_mxwt,
      xt_rsc_0_1_i_s_dout_core, xt_rsc_0_1_i_biwt, xt_rsc_0_1_i_bdwt, xt_rsc_0_1_i_bcwt,
      xt_rsc_0_1_i_biwt_1, xt_rsc_0_1_i_bdwt_2, xt_rsc_0_1_i_bcwt_1, xt_rsc_0_1_i_s_raddr,
      xt_rsc_0_1_i_s_raddr_core_sct, xt_rsc_0_1_i_s_waddr, xt_rsc_0_1_i_s_waddr_core_sct,
      xt_rsc_0_1_i_s_din, xt_rsc_0_1_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_1_i_oswt;
  output xt_rsc_0_1_i_wen_comp;
  input xt_rsc_0_1_i_oswt_1;
  output xt_rsc_0_1_i_wen_comp_1;
  input [3:0] xt_rsc_0_1_i_s_raddr_core;
  input [3:0] xt_rsc_0_1_i_s_waddr_core;
  output [31:0] xt_rsc_0_1_i_s_din_mxwt;
  input [31:0] xt_rsc_0_1_i_s_dout_core;
  input xt_rsc_0_1_i_biwt;
  input xt_rsc_0_1_i_bdwt;
  output xt_rsc_0_1_i_bcwt;
  reg xt_rsc_0_1_i_bcwt;
  input xt_rsc_0_1_i_biwt_1;
  input xt_rsc_0_1_i_bdwt_2;
  output xt_rsc_0_1_i_bcwt_1;
  reg xt_rsc_0_1_i_bcwt_1;
  output [3:0] xt_rsc_0_1_i_s_raddr;
  input xt_rsc_0_1_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_1_i_s_waddr;
  input xt_rsc_0_1_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_1_i_s_din;
  output [31:0] xt_rsc_0_1_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_1_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_1_i_wen_comp = (~ xt_rsc_0_1_i_oswt) | xt_rsc_0_1_i_biwt | xt_rsc_0_1_i_bcwt;
  assign xt_rsc_0_1_i_wen_comp_1 = (~ xt_rsc_0_1_i_oswt_1) | xt_rsc_0_1_i_biwt_1
      | xt_rsc_0_1_i_bcwt_1;
  assign xt_rsc_0_1_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_1_i_s_raddr_core, xt_rsc_0_1_i_s_raddr_core_sct);
  assign xt_rsc_0_1_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_1_i_s_waddr_core, xt_rsc_0_1_i_s_waddr_core_sct);
  assign xt_rsc_0_1_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_1_i_s_din, xt_rsc_0_1_i_s_din_bfwt,
      xt_rsc_0_1_i_bcwt);
  assign xt_rsc_0_1_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_1_i_s_dout_core, xt_rsc_0_1_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_1_i_bcwt <= 1'b0;
      xt_rsc_0_1_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_1_i_bcwt <= ~((~(xt_rsc_0_1_i_bcwt | xt_rsc_0_1_i_biwt)) | xt_rsc_0_1_i_bdwt);
      xt_rsc_0_1_i_bcwt_1 <= ~((~(xt_rsc_0_1_i_bcwt_1 | xt_rsc_0_1_i_biwt_1)) | xt_rsc_0_1_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_1_i_biwt ) begin
      xt_rsc_0_1_i_s_din_bfwt <= xt_rsc_0_1_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_1_i_xt_rsc_0_1_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_1_i_xt_rsc_0_1_wait_ctrl (
  core_wen, xt_rsc_0_1_i_oswt, xt_rsc_0_1_i_oswt_1, xt_rsc_0_1_i_biwt, xt_rsc_0_1_i_bdwt,
      xt_rsc_0_1_i_bcwt, xt_rsc_0_1_i_s_re_core_sct, xt_rsc_0_1_i_biwt_1, xt_rsc_0_1_i_bdwt_2,
      xt_rsc_0_1_i_bcwt_1, xt_rsc_0_1_i_s_we_core_sct, xt_rsc_0_1_i_s_rrdy, xt_rsc_0_1_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_1_i_oswt;
  input xt_rsc_0_1_i_oswt_1;
  output xt_rsc_0_1_i_biwt;
  output xt_rsc_0_1_i_bdwt;
  input xt_rsc_0_1_i_bcwt;
  output xt_rsc_0_1_i_s_re_core_sct;
  output xt_rsc_0_1_i_biwt_1;
  output xt_rsc_0_1_i_bdwt_2;
  input xt_rsc_0_1_i_bcwt_1;
  output xt_rsc_0_1_i_s_we_core_sct;
  input xt_rsc_0_1_i_s_rrdy;
  input xt_rsc_0_1_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_1_i_ogwt;
  wire xt_rsc_0_1_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_1_i_bdwt = xt_rsc_0_1_i_oswt & core_wen;
  assign xt_rsc_0_1_i_biwt = xt_rsc_0_1_i_ogwt & xt_rsc_0_1_i_s_rrdy;
  assign xt_rsc_0_1_i_ogwt = xt_rsc_0_1_i_oswt & (~ xt_rsc_0_1_i_bcwt);
  assign xt_rsc_0_1_i_s_re_core_sct = xt_rsc_0_1_i_ogwt;
  assign xt_rsc_0_1_i_bdwt_2 = xt_rsc_0_1_i_oswt_1 & core_wen;
  assign xt_rsc_0_1_i_biwt_1 = xt_rsc_0_1_i_ogwt_1 & xt_rsc_0_1_i_s_wrdy;
  assign xt_rsc_0_1_i_ogwt_1 = xt_rsc_0_1_i_oswt_1 & (~ xt_rsc_0_1_i_bcwt_1);
  assign xt_rsc_0_1_i_s_we_core_sct = xt_rsc_0_1_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_0_i_xt_rsc_0_0_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_0_i_xt_rsc_0_0_wait_dp (
  clk, rst, xt_rsc_0_0_i_oswt, xt_rsc_0_0_i_wen_comp, xt_rsc_0_0_i_oswt_1, xt_rsc_0_0_i_wen_comp_1,
      xt_rsc_0_0_i_s_raddr_core, xt_rsc_0_0_i_s_waddr_core, xt_rsc_0_0_i_s_din_mxwt,
      xt_rsc_0_0_i_s_dout_core, xt_rsc_0_0_i_biwt, xt_rsc_0_0_i_bdwt, xt_rsc_0_0_i_bcwt,
      xt_rsc_0_0_i_biwt_1, xt_rsc_0_0_i_bdwt_2, xt_rsc_0_0_i_bcwt_1, xt_rsc_0_0_i_s_raddr,
      xt_rsc_0_0_i_s_raddr_core_sct, xt_rsc_0_0_i_s_waddr, xt_rsc_0_0_i_s_waddr_core_sct,
      xt_rsc_0_0_i_s_din, xt_rsc_0_0_i_s_dout
);
  input clk;
  input rst;
  input xt_rsc_0_0_i_oswt;
  output xt_rsc_0_0_i_wen_comp;
  input xt_rsc_0_0_i_oswt_1;
  output xt_rsc_0_0_i_wen_comp_1;
  input [3:0] xt_rsc_0_0_i_s_raddr_core;
  input [3:0] xt_rsc_0_0_i_s_waddr_core;
  output [31:0] xt_rsc_0_0_i_s_din_mxwt;
  input [31:0] xt_rsc_0_0_i_s_dout_core;
  input xt_rsc_0_0_i_biwt;
  input xt_rsc_0_0_i_bdwt;
  output xt_rsc_0_0_i_bcwt;
  reg xt_rsc_0_0_i_bcwt;
  input xt_rsc_0_0_i_biwt_1;
  input xt_rsc_0_0_i_bdwt_2;
  output xt_rsc_0_0_i_bcwt_1;
  reg xt_rsc_0_0_i_bcwt_1;
  output [3:0] xt_rsc_0_0_i_s_raddr;
  input xt_rsc_0_0_i_s_raddr_core_sct;
  output [3:0] xt_rsc_0_0_i_s_waddr;
  input xt_rsc_0_0_i_s_waddr_core_sct;
  input [31:0] xt_rsc_0_0_i_s_din;
  output [31:0] xt_rsc_0_0_i_s_dout;


  // Interconnect Declarations
  reg [31:0] xt_rsc_0_0_i_s_din_bfwt;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_0_i_wen_comp = (~ xt_rsc_0_0_i_oswt) | xt_rsc_0_0_i_biwt | xt_rsc_0_0_i_bcwt;
  assign xt_rsc_0_0_i_wen_comp_1 = (~ xt_rsc_0_0_i_oswt_1) | xt_rsc_0_0_i_biwt_1
      | xt_rsc_0_0_i_bcwt_1;
  assign xt_rsc_0_0_i_s_raddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_0_i_s_raddr_core, xt_rsc_0_0_i_s_raddr_core_sct);
  assign xt_rsc_0_0_i_s_waddr = MUX_v_4_2_2(4'b0000, xt_rsc_0_0_i_s_waddr_core, xt_rsc_0_0_i_s_waddr_core_sct);
  assign xt_rsc_0_0_i_s_din_mxwt = MUX_v_32_2_2(xt_rsc_0_0_i_s_din, xt_rsc_0_0_i_s_din_bfwt,
      xt_rsc_0_0_i_bcwt);
  assign xt_rsc_0_0_i_s_dout = MUX_v_32_2_2(32'b00000000000000000000000000000000,
      xt_rsc_0_0_i_s_dout_core, xt_rsc_0_0_i_s_waddr_core_sct);
  always @(posedge clk) begin
    if ( rst ) begin
      xt_rsc_0_0_i_bcwt <= 1'b0;
      xt_rsc_0_0_i_bcwt_1 <= 1'b0;
    end
    else begin
      xt_rsc_0_0_i_bcwt <= ~((~(xt_rsc_0_0_i_bcwt | xt_rsc_0_0_i_biwt)) | xt_rsc_0_0_i_bdwt);
      xt_rsc_0_0_i_bcwt_1 <= ~((~(xt_rsc_0_0_i_bcwt_1 | xt_rsc_0_0_i_biwt_1)) | xt_rsc_0_0_i_bdwt_2);
    end
  end
  always @(posedge clk) begin
    if ( xt_rsc_0_0_i_biwt ) begin
      xt_rsc_0_0_i_s_din_bfwt <= xt_rsc_0_0_i_s_din;
    end
  end

  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_0_i_xt_rsc_0_0_wait_ctrl
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_0_i_xt_rsc_0_0_wait_ctrl (
  core_wen, xt_rsc_0_0_i_oswt, xt_rsc_0_0_i_oswt_1, xt_rsc_0_0_i_biwt, xt_rsc_0_0_i_bdwt,
      xt_rsc_0_0_i_bcwt, xt_rsc_0_0_i_s_re_core_sct, xt_rsc_0_0_i_biwt_1, xt_rsc_0_0_i_bdwt_2,
      xt_rsc_0_0_i_bcwt_1, xt_rsc_0_0_i_s_we_core_sct, xt_rsc_0_0_i_s_rrdy, xt_rsc_0_0_i_s_wrdy
);
  input core_wen;
  input xt_rsc_0_0_i_oswt;
  input xt_rsc_0_0_i_oswt_1;
  output xt_rsc_0_0_i_biwt;
  output xt_rsc_0_0_i_bdwt;
  input xt_rsc_0_0_i_bcwt;
  output xt_rsc_0_0_i_s_re_core_sct;
  output xt_rsc_0_0_i_biwt_1;
  output xt_rsc_0_0_i_bdwt_2;
  input xt_rsc_0_0_i_bcwt_1;
  output xt_rsc_0_0_i_s_we_core_sct;
  input xt_rsc_0_0_i_s_rrdy;
  input xt_rsc_0_0_i_s_wrdy;


  // Interconnect Declarations
  wire xt_rsc_0_0_i_ogwt;
  wire xt_rsc_0_0_i_ogwt_1;


  // Interconnect Declarations for Component Instantiations 
  assign xt_rsc_0_0_i_bdwt = xt_rsc_0_0_i_oswt & core_wen;
  assign xt_rsc_0_0_i_biwt = xt_rsc_0_0_i_ogwt & xt_rsc_0_0_i_s_rrdy;
  assign xt_rsc_0_0_i_ogwt = xt_rsc_0_0_i_oswt & (~ xt_rsc_0_0_i_bcwt);
  assign xt_rsc_0_0_i_s_re_core_sct = xt_rsc_0_0_i_ogwt;
  assign xt_rsc_0_0_i_bdwt_2 = xt_rsc_0_0_i_oswt_1 & core_wen;
  assign xt_rsc_0_0_i_biwt_1 = xt_rsc_0_0_i_ogwt_1 & xt_rsc_0_0_i_s_wrdy;
  assign xt_rsc_0_0_i_ogwt_1 = xt_rsc_0_0_i_oswt_1 & (~ xt_rsc_0_0_i_bcwt_1);
  assign xt_rsc_0_0_i_s_we_core_sct = xt_rsc_0_0_i_ogwt_1;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_wait_dp
// ------------------------------------------------------------------


module peaseNTT_core_wait_dp (
  yt_rsc_0_0_cgo_iro, yt_rsc_0_0_i_clken_d, yt_rsc_0_16_cgo_iro, yt_rsc_0_16_i_clken_d,
      yt_rsc_1_0_cgo_iro, yt_rsc_1_0_i_clken_d, yt_rsc_1_16_cgo_iro, yt_rsc_1_16_i_clken_d,
      ensig_cgo_iro, ensig_cgo_iro_17, core_wen, yt_rsc_0_0_cgo, yt_rsc_0_16_cgo,
      yt_rsc_1_0_cgo, yt_rsc_1_16_cgo, ensig_cgo, mult_t_mul_cmp_en, ensig_cgo_17,
      mult_z_mul_cmp_1_en
);
  input yt_rsc_0_0_cgo_iro;
  output yt_rsc_0_0_i_clken_d;
  input yt_rsc_0_16_cgo_iro;
  output yt_rsc_0_16_i_clken_d;
  input yt_rsc_1_0_cgo_iro;
  output yt_rsc_1_0_i_clken_d;
  input yt_rsc_1_16_cgo_iro;
  output yt_rsc_1_16_i_clken_d;
  input ensig_cgo_iro;
  input ensig_cgo_iro_17;
  input core_wen;
  input yt_rsc_0_0_cgo;
  input yt_rsc_0_16_cgo;
  input yt_rsc_1_0_cgo;
  input yt_rsc_1_16_cgo;
  input ensig_cgo;
  output mult_t_mul_cmp_en;
  input ensig_cgo_17;
  output mult_z_mul_cmp_1_en;



  // Interconnect Declarations for Component Instantiations 
  assign yt_rsc_0_0_i_clken_d = core_wen & (yt_rsc_0_0_cgo | yt_rsc_0_0_cgo_iro);
  assign yt_rsc_0_16_i_clken_d = core_wen & (yt_rsc_0_16_cgo | yt_rsc_0_16_cgo_iro);
  assign yt_rsc_1_0_i_clken_d = core_wen & (yt_rsc_1_0_cgo | yt_rsc_1_0_cgo_iro);
  assign yt_rsc_1_16_i_clken_d = core_wen & (yt_rsc_1_16_cgo | yt_rsc_1_16_cgo_iro);
  assign mult_t_mul_cmp_en = core_wen & (ensig_cgo | ensig_cgo_iro);
  assign mult_z_mul_cmp_1_en = core_wen & (ensig_cgo_17 | ensig_cgo_iro_17);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_0_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_0_obj (
  twiddle_h_rsc_triosy_0_0_lz, core_wten, twiddle_h_rsc_triosy_0_0_obj_iswt0
);
  output twiddle_h_rsc_triosy_0_0_lz;
  input core_wten;
  input twiddle_h_rsc_triosy_0_0_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_h_rsc_triosy_0_0_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_h_rsc_triosy_0_0_obj (
      .ld(twiddle_h_rsc_triosy_0_0_obj_ld_core_sct),
      .lz(twiddle_h_rsc_triosy_0_0_lz)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_0_obj_twiddle_h_rsc_triosy_0_0_wait_ctrl peaseNTT_core_twiddle_h_rsc_triosy_0_0_obj_twiddle_h_rsc_triosy_0_0_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_0_obj_iswt0(twiddle_h_rsc_triosy_0_0_obj_iswt0),
      .twiddle_h_rsc_triosy_0_0_obj_ld_core_sct(twiddle_h_rsc_triosy_0_0_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_1_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_1_obj (
  twiddle_h_rsc_triosy_0_1_lz, core_wten, twiddle_h_rsc_triosy_0_1_obj_iswt0
);
  output twiddle_h_rsc_triosy_0_1_lz;
  input core_wten;
  input twiddle_h_rsc_triosy_0_1_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_h_rsc_triosy_0_1_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_h_rsc_triosy_0_1_obj (
      .ld(twiddle_h_rsc_triosy_0_1_obj_ld_core_sct),
      .lz(twiddle_h_rsc_triosy_0_1_lz)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_1_obj_twiddle_h_rsc_triosy_0_1_wait_ctrl peaseNTT_core_twiddle_h_rsc_triosy_0_1_obj_twiddle_h_rsc_triosy_0_1_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_1_obj_iswt0(twiddle_h_rsc_triosy_0_1_obj_iswt0),
      .twiddle_h_rsc_triosy_0_1_obj_ld_core_sct(twiddle_h_rsc_triosy_0_1_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_2_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_2_obj (
  twiddle_h_rsc_triosy_0_2_lz, core_wten, twiddle_h_rsc_triosy_0_2_obj_iswt0
);
  output twiddle_h_rsc_triosy_0_2_lz;
  input core_wten;
  input twiddle_h_rsc_triosy_0_2_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_h_rsc_triosy_0_2_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_h_rsc_triosy_0_2_obj (
      .ld(twiddle_h_rsc_triosy_0_2_obj_ld_core_sct),
      .lz(twiddle_h_rsc_triosy_0_2_lz)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_2_obj_twiddle_h_rsc_triosy_0_2_wait_ctrl peaseNTT_core_twiddle_h_rsc_triosy_0_2_obj_twiddle_h_rsc_triosy_0_2_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_2_obj_iswt0(twiddle_h_rsc_triosy_0_2_obj_iswt0),
      .twiddle_h_rsc_triosy_0_2_obj_ld_core_sct(twiddle_h_rsc_triosy_0_2_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_3_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_3_obj (
  twiddle_h_rsc_triosy_0_3_lz, core_wten, twiddle_h_rsc_triosy_0_3_obj_iswt0
);
  output twiddle_h_rsc_triosy_0_3_lz;
  input core_wten;
  input twiddle_h_rsc_triosy_0_3_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_h_rsc_triosy_0_3_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_h_rsc_triosy_0_3_obj (
      .ld(twiddle_h_rsc_triosy_0_3_obj_ld_core_sct),
      .lz(twiddle_h_rsc_triosy_0_3_lz)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_3_obj_twiddle_h_rsc_triosy_0_3_wait_ctrl peaseNTT_core_twiddle_h_rsc_triosy_0_3_obj_twiddle_h_rsc_triosy_0_3_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_3_obj_iswt0(twiddle_h_rsc_triosy_0_3_obj_iswt0),
      .twiddle_h_rsc_triosy_0_3_obj_ld_core_sct(twiddle_h_rsc_triosy_0_3_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_4_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_4_obj (
  twiddle_h_rsc_triosy_0_4_lz, core_wten, twiddle_h_rsc_triosy_0_4_obj_iswt0
);
  output twiddle_h_rsc_triosy_0_4_lz;
  input core_wten;
  input twiddle_h_rsc_triosy_0_4_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_h_rsc_triosy_0_4_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_h_rsc_triosy_0_4_obj (
      .ld(twiddle_h_rsc_triosy_0_4_obj_ld_core_sct),
      .lz(twiddle_h_rsc_triosy_0_4_lz)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_4_obj_twiddle_h_rsc_triosy_0_4_wait_ctrl peaseNTT_core_twiddle_h_rsc_triosy_0_4_obj_twiddle_h_rsc_triosy_0_4_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_4_obj_iswt0(twiddle_h_rsc_triosy_0_4_obj_iswt0),
      .twiddle_h_rsc_triosy_0_4_obj_ld_core_sct(twiddle_h_rsc_triosy_0_4_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_5_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_5_obj (
  twiddle_h_rsc_triosy_0_5_lz, core_wten, twiddle_h_rsc_triosy_0_5_obj_iswt0
);
  output twiddle_h_rsc_triosy_0_5_lz;
  input core_wten;
  input twiddle_h_rsc_triosy_0_5_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_h_rsc_triosy_0_5_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_h_rsc_triosy_0_5_obj (
      .ld(twiddle_h_rsc_triosy_0_5_obj_ld_core_sct),
      .lz(twiddle_h_rsc_triosy_0_5_lz)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_5_obj_twiddle_h_rsc_triosy_0_5_wait_ctrl peaseNTT_core_twiddle_h_rsc_triosy_0_5_obj_twiddle_h_rsc_triosy_0_5_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_5_obj_iswt0(twiddle_h_rsc_triosy_0_5_obj_iswt0),
      .twiddle_h_rsc_triosy_0_5_obj_ld_core_sct(twiddle_h_rsc_triosy_0_5_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_6_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_6_obj (
  twiddle_h_rsc_triosy_0_6_lz, core_wten, twiddle_h_rsc_triosy_0_6_obj_iswt0
);
  output twiddle_h_rsc_triosy_0_6_lz;
  input core_wten;
  input twiddle_h_rsc_triosy_0_6_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_h_rsc_triosy_0_6_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_h_rsc_triosy_0_6_obj (
      .ld(twiddle_h_rsc_triosy_0_6_obj_ld_core_sct),
      .lz(twiddle_h_rsc_triosy_0_6_lz)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_6_obj_twiddle_h_rsc_triosy_0_6_wait_ctrl peaseNTT_core_twiddle_h_rsc_triosy_0_6_obj_twiddle_h_rsc_triosy_0_6_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_6_obj_iswt0(twiddle_h_rsc_triosy_0_6_obj_iswt0),
      .twiddle_h_rsc_triosy_0_6_obj_ld_core_sct(twiddle_h_rsc_triosy_0_6_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_7_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_7_obj (
  twiddle_h_rsc_triosy_0_7_lz, core_wten, twiddle_h_rsc_triosy_0_7_obj_iswt0
);
  output twiddle_h_rsc_triosy_0_7_lz;
  input core_wten;
  input twiddle_h_rsc_triosy_0_7_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_h_rsc_triosy_0_7_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_h_rsc_triosy_0_7_obj (
      .ld(twiddle_h_rsc_triosy_0_7_obj_ld_core_sct),
      .lz(twiddle_h_rsc_triosy_0_7_lz)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_7_obj_twiddle_h_rsc_triosy_0_7_wait_ctrl peaseNTT_core_twiddle_h_rsc_triosy_0_7_obj_twiddle_h_rsc_triosy_0_7_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_7_obj_iswt0(twiddle_h_rsc_triosy_0_7_obj_iswt0),
      .twiddle_h_rsc_triosy_0_7_obj_ld_core_sct(twiddle_h_rsc_triosy_0_7_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_8_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_8_obj (
  twiddle_h_rsc_triosy_0_8_lz, core_wten, twiddle_h_rsc_triosy_0_8_obj_iswt0
);
  output twiddle_h_rsc_triosy_0_8_lz;
  input core_wten;
  input twiddle_h_rsc_triosy_0_8_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_h_rsc_triosy_0_8_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_h_rsc_triosy_0_8_obj (
      .ld(twiddle_h_rsc_triosy_0_8_obj_ld_core_sct),
      .lz(twiddle_h_rsc_triosy_0_8_lz)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_8_obj_twiddle_h_rsc_triosy_0_8_wait_ctrl peaseNTT_core_twiddle_h_rsc_triosy_0_8_obj_twiddle_h_rsc_triosy_0_8_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_8_obj_iswt0(twiddle_h_rsc_triosy_0_8_obj_iswt0),
      .twiddle_h_rsc_triosy_0_8_obj_ld_core_sct(twiddle_h_rsc_triosy_0_8_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_9_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_9_obj (
  twiddle_h_rsc_triosy_0_9_lz, core_wten, twiddle_h_rsc_triosy_0_9_obj_iswt0
);
  output twiddle_h_rsc_triosy_0_9_lz;
  input core_wten;
  input twiddle_h_rsc_triosy_0_9_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_h_rsc_triosy_0_9_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_h_rsc_triosy_0_9_obj (
      .ld(twiddle_h_rsc_triosy_0_9_obj_ld_core_sct),
      .lz(twiddle_h_rsc_triosy_0_9_lz)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_9_obj_twiddle_h_rsc_triosy_0_9_wait_ctrl peaseNTT_core_twiddle_h_rsc_triosy_0_9_obj_twiddle_h_rsc_triosy_0_9_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_9_obj_iswt0(twiddle_h_rsc_triosy_0_9_obj_iswt0),
      .twiddle_h_rsc_triosy_0_9_obj_ld_core_sct(twiddle_h_rsc_triosy_0_9_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_10_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_10_obj (
  twiddle_h_rsc_triosy_0_10_lz, core_wten, twiddle_h_rsc_triosy_0_10_obj_iswt0
);
  output twiddle_h_rsc_triosy_0_10_lz;
  input core_wten;
  input twiddle_h_rsc_triosy_0_10_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_h_rsc_triosy_0_10_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_h_rsc_triosy_0_10_obj (
      .ld(twiddle_h_rsc_triosy_0_10_obj_ld_core_sct),
      .lz(twiddle_h_rsc_triosy_0_10_lz)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_10_obj_twiddle_h_rsc_triosy_0_10_wait_ctrl
      peaseNTT_core_twiddle_h_rsc_triosy_0_10_obj_twiddle_h_rsc_triosy_0_10_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_10_obj_iswt0(twiddle_h_rsc_triosy_0_10_obj_iswt0),
      .twiddle_h_rsc_triosy_0_10_obj_ld_core_sct(twiddle_h_rsc_triosy_0_10_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_11_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_11_obj (
  twiddle_h_rsc_triosy_0_11_lz, core_wten, twiddle_h_rsc_triosy_0_11_obj_iswt0
);
  output twiddle_h_rsc_triosy_0_11_lz;
  input core_wten;
  input twiddle_h_rsc_triosy_0_11_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_h_rsc_triosy_0_11_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_h_rsc_triosy_0_11_obj (
      .ld(twiddle_h_rsc_triosy_0_11_obj_ld_core_sct),
      .lz(twiddle_h_rsc_triosy_0_11_lz)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_11_obj_twiddle_h_rsc_triosy_0_11_wait_ctrl
      peaseNTT_core_twiddle_h_rsc_triosy_0_11_obj_twiddle_h_rsc_triosy_0_11_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_11_obj_iswt0(twiddle_h_rsc_triosy_0_11_obj_iswt0),
      .twiddle_h_rsc_triosy_0_11_obj_ld_core_sct(twiddle_h_rsc_triosy_0_11_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_12_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_12_obj (
  twiddle_h_rsc_triosy_0_12_lz, core_wten, twiddle_h_rsc_triosy_0_12_obj_iswt0
);
  output twiddle_h_rsc_triosy_0_12_lz;
  input core_wten;
  input twiddle_h_rsc_triosy_0_12_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_h_rsc_triosy_0_12_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_h_rsc_triosy_0_12_obj (
      .ld(twiddle_h_rsc_triosy_0_12_obj_ld_core_sct),
      .lz(twiddle_h_rsc_triosy_0_12_lz)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_12_obj_twiddle_h_rsc_triosy_0_12_wait_ctrl
      peaseNTT_core_twiddle_h_rsc_triosy_0_12_obj_twiddle_h_rsc_triosy_0_12_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_12_obj_iswt0(twiddle_h_rsc_triosy_0_12_obj_iswt0),
      .twiddle_h_rsc_triosy_0_12_obj_ld_core_sct(twiddle_h_rsc_triosy_0_12_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_13_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_13_obj (
  twiddle_h_rsc_triosy_0_13_lz, core_wten, twiddle_h_rsc_triosy_0_13_obj_iswt0
);
  output twiddle_h_rsc_triosy_0_13_lz;
  input core_wten;
  input twiddle_h_rsc_triosy_0_13_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_h_rsc_triosy_0_13_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_h_rsc_triosy_0_13_obj (
      .ld(twiddle_h_rsc_triosy_0_13_obj_ld_core_sct),
      .lz(twiddle_h_rsc_triosy_0_13_lz)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_13_obj_twiddle_h_rsc_triosy_0_13_wait_ctrl
      peaseNTT_core_twiddle_h_rsc_triosy_0_13_obj_twiddle_h_rsc_triosy_0_13_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_13_obj_iswt0(twiddle_h_rsc_triosy_0_13_obj_iswt0),
      .twiddle_h_rsc_triosy_0_13_obj_ld_core_sct(twiddle_h_rsc_triosy_0_13_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_14_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_14_obj (
  twiddle_h_rsc_triosy_0_14_lz, core_wten, twiddle_h_rsc_triosy_0_14_obj_iswt0
);
  output twiddle_h_rsc_triosy_0_14_lz;
  input core_wten;
  input twiddle_h_rsc_triosy_0_14_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_h_rsc_triosy_0_14_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_h_rsc_triosy_0_14_obj (
      .ld(twiddle_h_rsc_triosy_0_14_obj_ld_core_sct),
      .lz(twiddle_h_rsc_triosy_0_14_lz)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_14_obj_twiddle_h_rsc_triosy_0_14_wait_ctrl
      peaseNTT_core_twiddle_h_rsc_triosy_0_14_obj_twiddle_h_rsc_triosy_0_14_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_14_obj_iswt0(twiddle_h_rsc_triosy_0_14_obj_iswt0),
      .twiddle_h_rsc_triosy_0_14_obj_ld_core_sct(twiddle_h_rsc_triosy_0_14_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_triosy_0_15_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_triosy_0_15_obj (
  twiddle_h_rsc_triosy_0_15_lz, core_wten, twiddle_h_rsc_triosy_0_15_obj_iswt0
);
  output twiddle_h_rsc_triosy_0_15_lz;
  input core_wten;
  input twiddle_h_rsc_triosy_0_15_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_h_rsc_triosy_0_15_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_h_rsc_triosy_0_15_obj (
      .ld(twiddle_h_rsc_triosy_0_15_obj_ld_core_sct),
      .lz(twiddle_h_rsc_triosy_0_15_lz)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_15_obj_twiddle_h_rsc_triosy_0_15_wait_ctrl
      peaseNTT_core_twiddle_h_rsc_triosy_0_15_obj_twiddle_h_rsc_triosy_0_15_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_15_obj_iswt0(twiddle_h_rsc_triosy_0_15_obj_iswt0),
      .twiddle_h_rsc_triosy_0_15_obj_ld_core_sct(twiddle_h_rsc_triosy_0_15_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_0_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_0_obj (
  twiddle_rsc_triosy_0_0_lz, core_wten, twiddle_rsc_triosy_0_0_obj_iswt0
);
  output twiddle_rsc_triosy_0_0_lz;
  input core_wten;
  input twiddle_rsc_triosy_0_0_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_rsc_triosy_0_0_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_rsc_triosy_0_0_obj (
      .ld(twiddle_rsc_triosy_0_0_obj_ld_core_sct),
      .lz(twiddle_rsc_triosy_0_0_lz)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_0_obj_twiddle_rsc_triosy_0_0_wait_ctrl peaseNTT_core_twiddle_rsc_triosy_0_0_obj_twiddle_rsc_triosy_0_0_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_0_obj_iswt0(twiddle_rsc_triosy_0_0_obj_iswt0),
      .twiddle_rsc_triosy_0_0_obj_ld_core_sct(twiddle_rsc_triosy_0_0_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_1_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_1_obj (
  twiddle_rsc_triosy_0_1_lz, core_wten, twiddle_rsc_triosy_0_1_obj_iswt0
);
  output twiddle_rsc_triosy_0_1_lz;
  input core_wten;
  input twiddle_rsc_triosy_0_1_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_rsc_triosy_0_1_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_rsc_triosy_0_1_obj (
      .ld(twiddle_rsc_triosy_0_1_obj_ld_core_sct),
      .lz(twiddle_rsc_triosy_0_1_lz)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_1_obj_twiddle_rsc_triosy_0_1_wait_ctrl peaseNTT_core_twiddle_rsc_triosy_0_1_obj_twiddle_rsc_triosy_0_1_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_1_obj_iswt0(twiddle_rsc_triosy_0_1_obj_iswt0),
      .twiddle_rsc_triosy_0_1_obj_ld_core_sct(twiddle_rsc_triosy_0_1_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_2_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_2_obj (
  twiddle_rsc_triosy_0_2_lz, core_wten, twiddle_rsc_triosy_0_2_obj_iswt0
);
  output twiddle_rsc_triosy_0_2_lz;
  input core_wten;
  input twiddle_rsc_triosy_0_2_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_rsc_triosy_0_2_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_rsc_triosy_0_2_obj (
      .ld(twiddle_rsc_triosy_0_2_obj_ld_core_sct),
      .lz(twiddle_rsc_triosy_0_2_lz)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_2_obj_twiddle_rsc_triosy_0_2_wait_ctrl peaseNTT_core_twiddle_rsc_triosy_0_2_obj_twiddle_rsc_triosy_0_2_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_2_obj_iswt0(twiddle_rsc_triosy_0_2_obj_iswt0),
      .twiddle_rsc_triosy_0_2_obj_ld_core_sct(twiddle_rsc_triosy_0_2_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_3_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_3_obj (
  twiddle_rsc_triosy_0_3_lz, core_wten, twiddle_rsc_triosy_0_3_obj_iswt0
);
  output twiddle_rsc_triosy_0_3_lz;
  input core_wten;
  input twiddle_rsc_triosy_0_3_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_rsc_triosy_0_3_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_rsc_triosy_0_3_obj (
      .ld(twiddle_rsc_triosy_0_3_obj_ld_core_sct),
      .lz(twiddle_rsc_triosy_0_3_lz)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_3_obj_twiddle_rsc_triosy_0_3_wait_ctrl peaseNTT_core_twiddle_rsc_triosy_0_3_obj_twiddle_rsc_triosy_0_3_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_3_obj_iswt0(twiddle_rsc_triosy_0_3_obj_iswt0),
      .twiddle_rsc_triosy_0_3_obj_ld_core_sct(twiddle_rsc_triosy_0_3_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_4_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_4_obj (
  twiddle_rsc_triosy_0_4_lz, core_wten, twiddle_rsc_triosy_0_4_obj_iswt0
);
  output twiddle_rsc_triosy_0_4_lz;
  input core_wten;
  input twiddle_rsc_triosy_0_4_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_rsc_triosy_0_4_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_rsc_triosy_0_4_obj (
      .ld(twiddle_rsc_triosy_0_4_obj_ld_core_sct),
      .lz(twiddle_rsc_triosy_0_4_lz)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_4_obj_twiddle_rsc_triosy_0_4_wait_ctrl peaseNTT_core_twiddle_rsc_triosy_0_4_obj_twiddle_rsc_triosy_0_4_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_4_obj_iswt0(twiddle_rsc_triosy_0_4_obj_iswt0),
      .twiddle_rsc_triosy_0_4_obj_ld_core_sct(twiddle_rsc_triosy_0_4_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_5_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_5_obj (
  twiddle_rsc_triosy_0_5_lz, core_wten, twiddle_rsc_triosy_0_5_obj_iswt0
);
  output twiddle_rsc_triosy_0_5_lz;
  input core_wten;
  input twiddle_rsc_triosy_0_5_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_rsc_triosy_0_5_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_rsc_triosy_0_5_obj (
      .ld(twiddle_rsc_triosy_0_5_obj_ld_core_sct),
      .lz(twiddle_rsc_triosy_0_5_lz)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_5_obj_twiddle_rsc_triosy_0_5_wait_ctrl peaseNTT_core_twiddle_rsc_triosy_0_5_obj_twiddle_rsc_triosy_0_5_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_5_obj_iswt0(twiddle_rsc_triosy_0_5_obj_iswt0),
      .twiddle_rsc_triosy_0_5_obj_ld_core_sct(twiddle_rsc_triosy_0_5_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_6_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_6_obj (
  twiddle_rsc_triosy_0_6_lz, core_wten, twiddle_rsc_triosy_0_6_obj_iswt0
);
  output twiddle_rsc_triosy_0_6_lz;
  input core_wten;
  input twiddle_rsc_triosy_0_6_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_rsc_triosy_0_6_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_rsc_triosy_0_6_obj (
      .ld(twiddle_rsc_triosy_0_6_obj_ld_core_sct),
      .lz(twiddle_rsc_triosy_0_6_lz)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_6_obj_twiddle_rsc_triosy_0_6_wait_ctrl peaseNTT_core_twiddle_rsc_triosy_0_6_obj_twiddle_rsc_triosy_0_6_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_6_obj_iswt0(twiddle_rsc_triosy_0_6_obj_iswt0),
      .twiddle_rsc_triosy_0_6_obj_ld_core_sct(twiddle_rsc_triosy_0_6_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_7_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_7_obj (
  twiddle_rsc_triosy_0_7_lz, core_wten, twiddle_rsc_triosy_0_7_obj_iswt0
);
  output twiddle_rsc_triosy_0_7_lz;
  input core_wten;
  input twiddle_rsc_triosy_0_7_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_rsc_triosy_0_7_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_rsc_triosy_0_7_obj (
      .ld(twiddle_rsc_triosy_0_7_obj_ld_core_sct),
      .lz(twiddle_rsc_triosy_0_7_lz)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_7_obj_twiddle_rsc_triosy_0_7_wait_ctrl peaseNTT_core_twiddle_rsc_triosy_0_7_obj_twiddle_rsc_triosy_0_7_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_7_obj_iswt0(twiddle_rsc_triosy_0_7_obj_iswt0),
      .twiddle_rsc_triosy_0_7_obj_ld_core_sct(twiddle_rsc_triosy_0_7_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_8_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_8_obj (
  twiddle_rsc_triosy_0_8_lz, core_wten, twiddle_rsc_triosy_0_8_obj_iswt0
);
  output twiddle_rsc_triosy_0_8_lz;
  input core_wten;
  input twiddle_rsc_triosy_0_8_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_rsc_triosy_0_8_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_rsc_triosy_0_8_obj (
      .ld(twiddle_rsc_triosy_0_8_obj_ld_core_sct),
      .lz(twiddle_rsc_triosy_0_8_lz)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_8_obj_twiddle_rsc_triosy_0_8_wait_ctrl peaseNTT_core_twiddle_rsc_triosy_0_8_obj_twiddle_rsc_triosy_0_8_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_8_obj_iswt0(twiddle_rsc_triosy_0_8_obj_iswt0),
      .twiddle_rsc_triosy_0_8_obj_ld_core_sct(twiddle_rsc_triosy_0_8_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_9_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_9_obj (
  twiddle_rsc_triosy_0_9_lz, core_wten, twiddle_rsc_triosy_0_9_obj_iswt0
);
  output twiddle_rsc_triosy_0_9_lz;
  input core_wten;
  input twiddle_rsc_triosy_0_9_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_rsc_triosy_0_9_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_rsc_triosy_0_9_obj (
      .ld(twiddle_rsc_triosy_0_9_obj_ld_core_sct),
      .lz(twiddle_rsc_triosy_0_9_lz)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_9_obj_twiddle_rsc_triosy_0_9_wait_ctrl peaseNTT_core_twiddle_rsc_triosy_0_9_obj_twiddle_rsc_triosy_0_9_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_9_obj_iswt0(twiddle_rsc_triosy_0_9_obj_iswt0),
      .twiddle_rsc_triosy_0_9_obj_ld_core_sct(twiddle_rsc_triosy_0_9_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_10_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_10_obj (
  twiddle_rsc_triosy_0_10_lz, core_wten, twiddle_rsc_triosy_0_10_obj_iswt0
);
  output twiddle_rsc_triosy_0_10_lz;
  input core_wten;
  input twiddle_rsc_triosy_0_10_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_rsc_triosy_0_10_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_rsc_triosy_0_10_obj (
      .ld(twiddle_rsc_triosy_0_10_obj_ld_core_sct),
      .lz(twiddle_rsc_triosy_0_10_lz)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_10_obj_twiddle_rsc_triosy_0_10_wait_ctrl peaseNTT_core_twiddle_rsc_triosy_0_10_obj_twiddle_rsc_triosy_0_10_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_10_obj_iswt0(twiddle_rsc_triosy_0_10_obj_iswt0),
      .twiddle_rsc_triosy_0_10_obj_ld_core_sct(twiddle_rsc_triosy_0_10_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_11_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_11_obj (
  twiddle_rsc_triosy_0_11_lz, core_wten, twiddle_rsc_triosy_0_11_obj_iswt0
);
  output twiddle_rsc_triosy_0_11_lz;
  input core_wten;
  input twiddle_rsc_triosy_0_11_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_rsc_triosy_0_11_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_rsc_triosy_0_11_obj (
      .ld(twiddle_rsc_triosy_0_11_obj_ld_core_sct),
      .lz(twiddle_rsc_triosy_0_11_lz)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_11_obj_twiddle_rsc_triosy_0_11_wait_ctrl peaseNTT_core_twiddle_rsc_triosy_0_11_obj_twiddle_rsc_triosy_0_11_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_11_obj_iswt0(twiddle_rsc_triosy_0_11_obj_iswt0),
      .twiddle_rsc_triosy_0_11_obj_ld_core_sct(twiddle_rsc_triosy_0_11_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_12_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_12_obj (
  twiddle_rsc_triosy_0_12_lz, core_wten, twiddle_rsc_triosy_0_12_obj_iswt0
);
  output twiddle_rsc_triosy_0_12_lz;
  input core_wten;
  input twiddle_rsc_triosy_0_12_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_rsc_triosy_0_12_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_rsc_triosy_0_12_obj (
      .ld(twiddle_rsc_triosy_0_12_obj_ld_core_sct),
      .lz(twiddle_rsc_triosy_0_12_lz)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_12_obj_twiddle_rsc_triosy_0_12_wait_ctrl peaseNTT_core_twiddle_rsc_triosy_0_12_obj_twiddle_rsc_triosy_0_12_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_12_obj_iswt0(twiddle_rsc_triosy_0_12_obj_iswt0),
      .twiddle_rsc_triosy_0_12_obj_ld_core_sct(twiddle_rsc_triosy_0_12_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_13_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_13_obj (
  twiddle_rsc_triosy_0_13_lz, core_wten, twiddle_rsc_triosy_0_13_obj_iswt0
);
  output twiddle_rsc_triosy_0_13_lz;
  input core_wten;
  input twiddle_rsc_triosy_0_13_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_rsc_triosy_0_13_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_rsc_triosy_0_13_obj (
      .ld(twiddle_rsc_triosy_0_13_obj_ld_core_sct),
      .lz(twiddle_rsc_triosy_0_13_lz)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_13_obj_twiddle_rsc_triosy_0_13_wait_ctrl peaseNTT_core_twiddle_rsc_triosy_0_13_obj_twiddle_rsc_triosy_0_13_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_13_obj_iswt0(twiddle_rsc_triosy_0_13_obj_iswt0),
      .twiddle_rsc_triosy_0_13_obj_ld_core_sct(twiddle_rsc_triosy_0_13_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_14_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_14_obj (
  twiddle_rsc_triosy_0_14_lz, core_wten, twiddle_rsc_triosy_0_14_obj_iswt0
);
  output twiddle_rsc_triosy_0_14_lz;
  input core_wten;
  input twiddle_rsc_triosy_0_14_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_rsc_triosy_0_14_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_rsc_triosy_0_14_obj (
      .ld(twiddle_rsc_triosy_0_14_obj_ld_core_sct),
      .lz(twiddle_rsc_triosy_0_14_lz)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_14_obj_twiddle_rsc_triosy_0_14_wait_ctrl peaseNTT_core_twiddle_rsc_triosy_0_14_obj_twiddle_rsc_triosy_0_14_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_14_obj_iswt0(twiddle_rsc_triosy_0_14_obj_iswt0),
      .twiddle_rsc_triosy_0_14_obj_ld_core_sct(twiddle_rsc_triosy_0_14_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_triosy_0_15_obj
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_triosy_0_15_obj (
  twiddle_rsc_triosy_0_15_lz, core_wten, twiddle_rsc_triosy_0_15_obj_iswt0
);
  output twiddle_rsc_triosy_0_15_lz;
  input core_wten;
  input twiddle_rsc_triosy_0_15_obj_iswt0;


  // Interconnect Declarations
  wire twiddle_rsc_triosy_0_15_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) twiddle_rsc_triosy_0_15_obj (
      .ld(twiddle_rsc_triosy_0_15_obj_ld_core_sct),
      .lz(twiddle_rsc_triosy_0_15_lz)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_15_obj_twiddle_rsc_triosy_0_15_wait_ctrl peaseNTT_core_twiddle_rsc_triosy_0_15_obj_twiddle_rsc_triosy_0_15_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_15_obj_iswt0(twiddle_rsc_triosy_0_15_obj_iswt0),
      .twiddle_rsc_triosy_0_15_obj_ld_core_sct(twiddle_rsc_triosy_0_15_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_r_rsc_triosy_obj
// ------------------------------------------------------------------


module peaseNTT_core_r_rsc_triosy_obj (
  r_rsc_triosy_lz, core_wten, r_rsc_triosy_obj_iswt0
);
  output r_rsc_triosy_lz;
  input core_wten;
  input r_rsc_triosy_obj_iswt0;


  // Interconnect Declarations
  wire r_rsc_triosy_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) r_rsc_triosy_obj (
      .ld(r_rsc_triosy_obj_ld_core_sct),
      .lz(r_rsc_triosy_lz)
    );
  peaseNTT_core_r_rsc_triosy_obj_r_rsc_triosy_wait_ctrl peaseNTT_core_r_rsc_triosy_obj_r_rsc_triosy_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .r_rsc_triosy_obj_iswt0(r_rsc_triosy_obj_iswt0),
      .r_rsc_triosy_obj_ld_core_sct(r_rsc_triosy_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_p_rsc_triosy_obj
// ------------------------------------------------------------------


module peaseNTT_core_p_rsc_triosy_obj (
  p_rsc_triosy_lz, core_wten, p_rsc_triosy_obj_iswt0
);
  output p_rsc_triosy_lz;
  input core_wten;
  input p_rsc_triosy_obj_iswt0;


  // Interconnect Declarations
  wire p_rsc_triosy_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) p_rsc_triosy_obj (
      .ld(p_rsc_triosy_obj_ld_core_sct),
      .lz(p_rsc_triosy_lz)
    );
  peaseNTT_core_p_rsc_triosy_obj_p_rsc_triosy_wait_ctrl peaseNTT_core_p_rsc_triosy_obj_p_rsc_triosy_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .p_rsc_triosy_obj_iswt0(p_rsc_triosy_obj_iswt0),
      .p_rsc_triosy_obj_ld_core_sct(p_rsc_triosy_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_0_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_0_obj (
  xt_rsc_triosy_0_0_lz, core_wten, xt_rsc_triosy_0_0_obj_iswt0
);
  output xt_rsc_triosy_0_0_lz;
  input core_wten;
  input xt_rsc_triosy_0_0_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_0_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_0_obj (
      .ld(xt_rsc_triosy_0_0_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_0_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_0_obj_xt_rsc_triosy_0_0_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_0_obj_xt_rsc_triosy_0_0_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_0_obj_iswt0(xt_rsc_triosy_0_0_obj_iswt0),
      .xt_rsc_triosy_0_0_obj_ld_core_sct(xt_rsc_triosy_0_0_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_1_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_1_obj (
  xt_rsc_triosy_0_1_lz, core_wten, xt_rsc_triosy_0_1_obj_iswt0
);
  output xt_rsc_triosy_0_1_lz;
  input core_wten;
  input xt_rsc_triosy_0_1_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_1_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_1_obj (
      .ld(xt_rsc_triosy_0_1_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_1_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_1_obj_xt_rsc_triosy_0_1_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_1_obj_xt_rsc_triosy_0_1_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_1_obj_iswt0(xt_rsc_triosy_0_1_obj_iswt0),
      .xt_rsc_triosy_0_1_obj_ld_core_sct(xt_rsc_triosy_0_1_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_2_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_2_obj (
  xt_rsc_triosy_0_2_lz, core_wten, xt_rsc_triosy_0_2_obj_iswt0
);
  output xt_rsc_triosy_0_2_lz;
  input core_wten;
  input xt_rsc_triosy_0_2_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_2_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_2_obj (
      .ld(xt_rsc_triosy_0_2_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_2_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_2_obj_xt_rsc_triosy_0_2_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_2_obj_xt_rsc_triosy_0_2_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_2_obj_iswt0(xt_rsc_triosy_0_2_obj_iswt0),
      .xt_rsc_triosy_0_2_obj_ld_core_sct(xt_rsc_triosy_0_2_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_3_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_3_obj (
  xt_rsc_triosy_0_3_lz, core_wten, xt_rsc_triosy_0_3_obj_iswt0
);
  output xt_rsc_triosy_0_3_lz;
  input core_wten;
  input xt_rsc_triosy_0_3_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_3_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_3_obj (
      .ld(xt_rsc_triosy_0_3_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_3_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_3_obj_xt_rsc_triosy_0_3_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_3_obj_xt_rsc_triosy_0_3_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_3_obj_iswt0(xt_rsc_triosy_0_3_obj_iswt0),
      .xt_rsc_triosy_0_3_obj_ld_core_sct(xt_rsc_triosy_0_3_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_4_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_4_obj (
  xt_rsc_triosy_0_4_lz, core_wten, xt_rsc_triosy_0_4_obj_iswt0
);
  output xt_rsc_triosy_0_4_lz;
  input core_wten;
  input xt_rsc_triosy_0_4_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_4_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_4_obj (
      .ld(xt_rsc_triosy_0_4_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_4_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_4_obj_xt_rsc_triosy_0_4_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_4_obj_xt_rsc_triosy_0_4_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_4_obj_iswt0(xt_rsc_triosy_0_4_obj_iswt0),
      .xt_rsc_triosy_0_4_obj_ld_core_sct(xt_rsc_triosy_0_4_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_5_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_5_obj (
  xt_rsc_triosy_0_5_lz, core_wten, xt_rsc_triosy_0_5_obj_iswt0
);
  output xt_rsc_triosy_0_5_lz;
  input core_wten;
  input xt_rsc_triosy_0_5_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_5_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_5_obj (
      .ld(xt_rsc_triosy_0_5_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_5_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_5_obj_xt_rsc_triosy_0_5_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_5_obj_xt_rsc_triosy_0_5_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_5_obj_iswt0(xt_rsc_triosy_0_5_obj_iswt0),
      .xt_rsc_triosy_0_5_obj_ld_core_sct(xt_rsc_triosy_0_5_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_6_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_6_obj (
  xt_rsc_triosy_0_6_lz, core_wten, xt_rsc_triosy_0_6_obj_iswt0
);
  output xt_rsc_triosy_0_6_lz;
  input core_wten;
  input xt_rsc_triosy_0_6_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_6_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_6_obj (
      .ld(xt_rsc_triosy_0_6_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_6_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_6_obj_xt_rsc_triosy_0_6_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_6_obj_xt_rsc_triosy_0_6_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_6_obj_iswt0(xt_rsc_triosy_0_6_obj_iswt0),
      .xt_rsc_triosy_0_6_obj_ld_core_sct(xt_rsc_triosy_0_6_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_7_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_7_obj (
  xt_rsc_triosy_0_7_lz, core_wten, xt_rsc_triosy_0_7_obj_iswt0
);
  output xt_rsc_triosy_0_7_lz;
  input core_wten;
  input xt_rsc_triosy_0_7_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_7_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_7_obj (
      .ld(xt_rsc_triosy_0_7_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_7_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_7_obj_xt_rsc_triosy_0_7_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_7_obj_xt_rsc_triosy_0_7_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_7_obj_iswt0(xt_rsc_triosy_0_7_obj_iswt0),
      .xt_rsc_triosy_0_7_obj_ld_core_sct(xt_rsc_triosy_0_7_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_8_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_8_obj (
  xt_rsc_triosy_0_8_lz, core_wten, xt_rsc_triosy_0_8_obj_iswt0
);
  output xt_rsc_triosy_0_8_lz;
  input core_wten;
  input xt_rsc_triosy_0_8_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_8_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_8_obj (
      .ld(xt_rsc_triosy_0_8_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_8_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_8_obj_xt_rsc_triosy_0_8_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_8_obj_xt_rsc_triosy_0_8_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_8_obj_iswt0(xt_rsc_triosy_0_8_obj_iswt0),
      .xt_rsc_triosy_0_8_obj_ld_core_sct(xt_rsc_triosy_0_8_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_9_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_9_obj (
  xt_rsc_triosy_0_9_lz, core_wten, xt_rsc_triosy_0_9_obj_iswt0
);
  output xt_rsc_triosy_0_9_lz;
  input core_wten;
  input xt_rsc_triosy_0_9_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_9_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_9_obj (
      .ld(xt_rsc_triosy_0_9_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_9_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_9_obj_xt_rsc_triosy_0_9_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_9_obj_xt_rsc_triosy_0_9_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_9_obj_iswt0(xt_rsc_triosy_0_9_obj_iswt0),
      .xt_rsc_triosy_0_9_obj_ld_core_sct(xt_rsc_triosy_0_9_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_10_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_10_obj (
  xt_rsc_triosy_0_10_lz, core_wten, xt_rsc_triosy_0_10_obj_iswt0
);
  output xt_rsc_triosy_0_10_lz;
  input core_wten;
  input xt_rsc_triosy_0_10_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_10_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_10_obj (
      .ld(xt_rsc_triosy_0_10_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_10_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_10_obj_xt_rsc_triosy_0_10_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_10_obj_xt_rsc_triosy_0_10_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_10_obj_iswt0(xt_rsc_triosy_0_10_obj_iswt0),
      .xt_rsc_triosy_0_10_obj_ld_core_sct(xt_rsc_triosy_0_10_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_11_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_11_obj (
  xt_rsc_triosy_0_11_lz, core_wten, xt_rsc_triosy_0_11_obj_iswt0
);
  output xt_rsc_triosy_0_11_lz;
  input core_wten;
  input xt_rsc_triosy_0_11_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_11_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_11_obj (
      .ld(xt_rsc_triosy_0_11_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_11_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_11_obj_xt_rsc_triosy_0_11_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_11_obj_xt_rsc_triosy_0_11_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_11_obj_iswt0(xt_rsc_triosy_0_11_obj_iswt0),
      .xt_rsc_triosy_0_11_obj_ld_core_sct(xt_rsc_triosy_0_11_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_12_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_12_obj (
  xt_rsc_triosy_0_12_lz, core_wten, xt_rsc_triosy_0_12_obj_iswt0
);
  output xt_rsc_triosy_0_12_lz;
  input core_wten;
  input xt_rsc_triosy_0_12_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_12_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_12_obj (
      .ld(xt_rsc_triosy_0_12_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_12_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_12_obj_xt_rsc_triosy_0_12_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_12_obj_xt_rsc_triosy_0_12_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_12_obj_iswt0(xt_rsc_triosy_0_12_obj_iswt0),
      .xt_rsc_triosy_0_12_obj_ld_core_sct(xt_rsc_triosy_0_12_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_13_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_13_obj (
  xt_rsc_triosy_0_13_lz, core_wten, xt_rsc_triosy_0_13_obj_iswt0
);
  output xt_rsc_triosy_0_13_lz;
  input core_wten;
  input xt_rsc_triosy_0_13_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_13_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_13_obj (
      .ld(xt_rsc_triosy_0_13_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_13_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_13_obj_xt_rsc_triosy_0_13_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_13_obj_xt_rsc_triosy_0_13_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_13_obj_iswt0(xt_rsc_triosy_0_13_obj_iswt0),
      .xt_rsc_triosy_0_13_obj_ld_core_sct(xt_rsc_triosy_0_13_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_14_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_14_obj (
  xt_rsc_triosy_0_14_lz, core_wten, xt_rsc_triosy_0_14_obj_iswt0
);
  output xt_rsc_triosy_0_14_lz;
  input core_wten;
  input xt_rsc_triosy_0_14_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_14_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_14_obj (
      .ld(xt_rsc_triosy_0_14_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_14_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_14_obj_xt_rsc_triosy_0_14_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_14_obj_xt_rsc_triosy_0_14_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_14_obj_iswt0(xt_rsc_triosy_0_14_obj_iswt0),
      .xt_rsc_triosy_0_14_obj_ld_core_sct(xt_rsc_triosy_0_14_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_15_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_15_obj (
  xt_rsc_triosy_0_15_lz, core_wten, xt_rsc_triosy_0_15_obj_iswt0
);
  output xt_rsc_triosy_0_15_lz;
  input core_wten;
  input xt_rsc_triosy_0_15_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_15_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_15_obj (
      .ld(xt_rsc_triosy_0_15_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_15_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_15_obj_xt_rsc_triosy_0_15_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_15_obj_xt_rsc_triosy_0_15_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_15_obj_iswt0(xt_rsc_triosy_0_15_obj_iswt0),
      .xt_rsc_triosy_0_15_obj_ld_core_sct(xt_rsc_triosy_0_15_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_16_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_16_obj (
  xt_rsc_triosy_0_16_lz, core_wten, xt_rsc_triosy_0_16_obj_iswt0
);
  output xt_rsc_triosy_0_16_lz;
  input core_wten;
  input xt_rsc_triosy_0_16_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_16_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_16_obj (
      .ld(xt_rsc_triosy_0_16_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_16_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_16_obj_xt_rsc_triosy_0_16_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_16_obj_xt_rsc_triosy_0_16_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_16_obj_iswt0(xt_rsc_triosy_0_16_obj_iswt0),
      .xt_rsc_triosy_0_16_obj_ld_core_sct(xt_rsc_triosy_0_16_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_17_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_17_obj (
  xt_rsc_triosy_0_17_lz, core_wten, xt_rsc_triosy_0_17_obj_iswt0
);
  output xt_rsc_triosy_0_17_lz;
  input core_wten;
  input xt_rsc_triosy_0_17_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_17_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_17_obj (
      .ld(xt_rsc_triosy_0_17_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_17_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_17_obj_xt_rsc_triosy_0_17_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_17_obj_xt_rsc_triosy_0_17_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_17_obj_iswt0(xt_rsc_triosy_0_17_obj_iswt0),
      .xt_rsc_triosy_0_17_obj_ld_core_sct(xt_rsc_triosy_0_17_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_18_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_18_obj (
  xt_rsc_triosy_0_18_lz, core_wten, xt_rsc_triosy_0_18_obj_iswt0
);
  output xt_rsc_triosy_0_18_lz;
  input core_wten;
  input xt_rsc_triosy_0_18_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_18_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_18_obj (
      .ld(xt_rsc_triosy_0_18_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_18_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_18_obj_xt_rsc_triosy_0_18_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_18_obj_xt_rsc_triosy_0_18_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_18_obj_iswt0(xt_rsc_triosy_0_18_obj_iswt0),
      .xt_rsc_triosy_0_18_obj_ld_core_sct(xt_rsc_triosy_0_18_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_19_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_19_obj (
  xt_rsc_triosy_0_19_lz, core_wten, xt_rsc_triosy_0_19_obj_iswt0
);
  output xt_rsc_triosy_0_19_lz;
  input core_wten;
  input xt_rsc_triosy_0_19_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_19_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_19_obj (
      .ld(xt_rsc_triosy_0_19_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_19_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_19_obj_xt_rsc_triosy_0_19_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_19_obj_xt_rsc_triosy_0_19_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_19_obj_iswt0(xt_rsc_triosy_0_19_obj_iswt0),
      .xt_rsc_triosy_0_19_obj_ld_core_sct(xt_rsc_triosy_0_19_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_20_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_20_obj (
  xt_rsc_triosy_0_20_lz, core_wten, xt_rsc_triosy_0_20_obj_iswt0
);
  output xt_rsc_triosy_0_20_lz;
  input core_wten;
  input xt_rsc_triosy_0_20_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_20_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_20_obj (
      .ld(xt_rsc_triosy_0_20_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_20_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_20_obj_xt_rsc_triosy_0_20_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_20_obj_xt_rsc_triosy_0_20_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_20_obj_iswt0(xt_rsc_triosy_0_20_obj_iswt0),
      .xt_rsc_triosy_0_20_obj_ld_core_sct(xt_rsc_triosy_0_20_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_21_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_21_obj (
  xt_rsc_triosy_0_21_lz, core_wten, xt_rsc_triosy_0_21_obj_iswt0
);
  output xt_rsc_triosy_0_21_lz;
  input core_wten;
  input xt_rsc_triosy_0_21_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_21_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_21_obj (
      .ld(xt_rsc_triosy_0_21_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_21_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_21_obj_xt_rsc_triosy_0_21_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_21_obj_xt_rsc_triosy_0_21_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_21_obj_iswt0(xt_rsc_triosy_0_21_obj_iswt0),
      .xt_rsc_triosy_0_21_obj_ld_core_sct(xt_rsc_triosy_0_21_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_22_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_22_obj (
  xt_rsc_triosy_0_22_lz, core_wten, xt_rsc_triosy_0_22_obj_iswt0
);
  output xt_rsc_triosy_0_22_lz;
  input core_wten;
  input xt_rsc_triosy_0_22_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_22_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_22_obj (
      .ld(xt_rsc_triosy_0_22_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_22_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_22_obj_xt_rsc_triosy_0_22_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_22_obj_xt_rsc_triosy_0_22_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_22_obj_iswt0(xt_rsc_triosy_0_22_obj_iswt0),
      .xt_rsc_triosy_0_22_obj_ld_core_sct(xt_rsc_triosy_0_22_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_23_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_23_obj (
  xt_rsc_triosy_0_23_lz, core_wten, xt_rsc_triosy_0_23_obj_iswt0
);
  output xt_rsc_triosy_0_23_lz;
  input core_wten;
  input xt_rsc_triosy_0_23_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_23_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_23_obj (
      .ld(xt_rsc_triosy_0_23_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_23_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_23_obj_xt_rsc_triosy_0_23_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_23_obj_xt_rsc_triosy_0_23_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_23_obj_iswt0(xt_rsc_triosy_0_23_obj_iswt0),
      .xt_rsc_triosy_0_23_obj_ld_core_sct(xt_rsc_triosy_0_23_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_24_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_24_obj (
  xt_rsc_triosy_0_24_lz, core_wten, xt_rsc_triosy_0_24_obj_iswt0
);
  output xt_rsc_triosy_0_24_lz;
  input core_wten;
  input xt_rsc_triosy_0_24_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_24_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_24_obj (
      .ld(xt_rsc_triosy_0_24_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_24_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_24_obj_xt_rsc_triosy_0_24_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_24_obj_xt_rsc_triosy_0_24_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_24_obj_iswt0(xt_rsc_triosy_0_24_obj_iswt0),
      .xt_rsc_triosy_0_24_obj_ld_core_sct(xt_rsc_triosy_0_24_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_25_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_25_obj (
  xt_rsc_triosy_0_25_lz, core_wten, xt_rsc_triosy_0_25_obj_iswt0
);
  output xt_rsc_triosy_0_25_lz;
  input core_wten;
  input xt_rsc_triosy_0_25_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_25_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_25_obj (
      .ld(xt_rsc_triosy_0_25_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_25_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_25_obj_xt_rsc_triosy_0_25_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_25_obj_xt_rsc_triosy_0_25_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_25_obj_iswt0(xt_rsc_triosy_0_25_obj_iswt0),
      .xt_rsc_triosy_0_25_obj_ld_core_sct(xt_rsc_triosy_0_25_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_26_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_26_obj (
  xt_rsc_triosy_0_26_lz, core_wten, xt_rsc_triosy_0_26_obj_iswt0
);
  output xt_rsc_triosy_0_26_lz;
  input core_wten;
  input xt_rsc_triosy_0_26_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_26_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_26_obj (
      .ld(xt_rsc_triosy_0_26_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_26_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_26_obj_xt_rsc_triosy_0_26_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_26_obj_xt_rsc_triosy_0_26_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_26_obj_iswt0(xt_rsc_triosy_0_26_obj_iswt0),
      .xt_rsc_triosy_0_26_obj_ld_core_sct(xt_rsc_triosy_0_26_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_27_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_27_obj (
  xt_rsc_triosy_0_27_lz, core_wten, xt_rsc_triosy_0_27_obj_iswt0
);
  output xt_rsc_triosy_0_27_lz;
  input core_wten;
  input xt_rsc_triosy_0_27_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_27_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_27_obj (
      .ld(xt_rsc_triosy_0_27_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_27_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_27_obj_xt_rsc_triosy_0_27_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_27_obj_xt_rsc_triosy_0_27_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_27_obj_iswt0(xt_rsc_triosy_0_27_obj_iswt0),
      .xt_rsc_triosy_0_27_obj_ld_core_sct(xt_rsc_triosy_0_27_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_28_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_28_obj (
  xt_rsc_triosy_0_28_lz, core_wten, xt_rsc_triosy_0_28_obj_iswt0
);
  output xt_rsc_triosy_0_28_lz;
  input core_wten;
  input xt_rsc_triosy_0_28_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_28_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_28_obj (
      .ld(xt_rsc_triosy_0_28_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_28_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_28_obj_xt_rsc_triosy_0_28_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_28_obj_xt_rsc_triosy_0_28_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_28_obj_iswt0(xt_rsc_triosy_0_28_obj_iswt0),
      .xt_rsc_triosy_0_28_obj_ld_core_sct(xt_rsc_triosy_0_28_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_29_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_29_obj (
  xt_rsc_triosy_0_29_lz, core_wten, xt_rsc_triosy_0_29_obj_iswt0
);
  output xt_rsc_triosy_0_29_lz;
  input core_wten;
  input xt_rsc_triosy_0_29_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_29_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_29_obj (
      .ld(xt_rsc_triosy_0_29_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_29_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_29_obj_xt_rsc_triosy_0_29_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_29_obj_xt_rsc_triosy_0_29_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_29_obj_iswt0(xt_rsc_triosy_0_29_obj_iswt0),
      .xt_rsc_triosy_0_29_obj_ld_core_sct(xt_rsc_triosy_0_29_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_30_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_30_obj (
  xt_rsc_triosy_0_30_lz, core_wten, xt_rsc_triosy_0_30_obj_iswt0
);
  output xt_rsc_triosy_0_30_lz;
  input core_wten;
  input xt_rsc_triosy_0_30_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_30_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_30_obj (
      .ld(xt_rsc_triosy_0_30_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_30_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_30_obj_xt_rsc_triosy_0_30_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_30_obj_xt_rsc_triosy_0_30_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_30_obj_iswt0(xt_rsc_triosy_0_30_obj_iswt0),
      .xt_rsc_triosy_0_30_obj_ld_core_sct(xt_rsc_triosy_0_30_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_0_31_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_0_31_obj (
  xt_rsc_triosy_0_31_lz, core_wten, xt_rsc_triosy_0_31_obj_iswt0
);
  output xt_rsc_triosy_0_31_lz;
  input core_wten;
  input xt_rsc_triosy_0_31_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_0_31_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_0_31_obj (
      .ld(xt_rsc_triosy_0_31_obj_ld_core_sct),
      .lz(xt_rsc_triosy_0_31_lz)
    );
  peaseNTT_core_xt_rsc_triosy_0_31_obj_xt_rsc_triosy_0_31_wait_ctrl peaseNTT_core_xt_rsc_triosy_0_31_obj_xt_rsc_triosy_0_31_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_0_31_obj_iswt0(xt_rsc_triosy_0_31_obj_iswt0),
      .xt_rsc_triosy_0_31_obj_ld_core_sct(xt_rsc_triosy_0_31_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_0_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_0_obj (
  xt_rsc_triosy_1_0_lz, core_wten, xt_rsc_triosy_1_0_obj_iswt0
);
  output xt_rsc_triosy_1_0_lz;
  input core_wten;
  input xt_rsc_triosy_1_0_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_0_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_0_obj (
      .ld(xt_rsc_triosy_1_0_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_0_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_0_obj_xt_rsc_triosy_1_0_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_0_obj_xt_rsc_triosy_1_0_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_0_obj_iswt0(xt_rsc_triosy_1_0_obj_iswt0),
      .xt_rsc_triosy_1_0_obj_ld_core_sct(xt_rsc_triosy_1_0_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_1_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_1_obj (
  xt_rsc_triosy_1_1_lz, core_wten, xt_rsc_triosy_1_1_obj_iswt0
);
  output xt_rsc_triosy_1_1_lz;
  input core_wten;
  input xt_rsc_triosy_1_1_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_1_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_1_obj (
      .ld(xt_rsc_triosy_1_1_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_1_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_1_obj_xt_rsc_triosy_1_1_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_1_obj_xt_rsc_triosy_1_1_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_1_obj_iswt0(xt_rsc_triosy_1_1_obj_iswt0),
      .xt_rsc_triosy_1_1_obj_ld_core_sct(xt_rsc_triosy_1_1_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_2_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_2_obj (
  xt_rsc_triosy_1_2_lz, core_wten, xt_rsc_triosy_1_2_obj_iswt0
);
  output xt_rsc_triosy_1_2_lz;
  input core_wten;
  input xt_rsc_triosy_1_2_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_2_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_2_obj (
      .ld(xt_rsc_triosy_1_2_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_2_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_2_obj_xt_rsc_triosy_1_2_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_2_obj_xt_rsc_triosy_1_2_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_2_obj_iswt0(xt_rsc_triosy_1_2_obj_iswt0),
      .xt_rsc_triosy_1_2_obj_ld_core_sct(xt_rsc_triosy_1_2_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_3_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_3_obj (
  xt_rsc_triosy_1_3_lz, core_wten, xt_rsc_triosy_1_3_obj_iswt0
);
  output xt_rsc_triosy_1_3_lz;
  input core_wten;
  input xt_rsc_triosy_1_3_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_3_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_3_obj (
      .ld(xt_rsc_triosy_1_3_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_3_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_3_obj_xt_rsc_triosy_1_3_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_3_obj_xt_rsc_triosy_1_3_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_3_obj_iswt0(xt_rsc_triosy_1_3_obj_iswt0),
      .xt_rsc_triosy_1_3_obj_ld_core_sct(xt_rsc_triosy_1_3_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_4_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_4_obj (
  xt_rsc_triosy_1_4_lz, core_wten, xt_rsc_triosy_1_4_obj_iswt0
);
  output xt_rsc_triosy_1_4_lz;
  input core_wten;
  input xt_rsc_triosy_1_4_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_4_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_4_obj (
      .ld(xt_rsc_triosy_1_4_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_4_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_4_obj_xt_rsc_triosy_1_4_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_4_obj_xt_rsc_triosy_1_4_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_4_obj_iswt0(xt_rsc_triosy_1_4_obj_iswt0),
      .xt_rsc_triosy_1_4_obj_ld_core_sct(xt_rsc_triosy_1_4_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_5_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_5_obj (
  xt_rsc_triosy_1_5_lz, core_wten, xt_rsc_triosy_1_5_obj_iswt0
);
  output xt_rsc_triosy_1_5_lz;
  input core_wten;
  input xt_rsc_triosy_1_5_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_5_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_5_obj (
      .ld(xt_rsc_triosy_1_5_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_5_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_5_obj_xt_rsc_triosy_1_5_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_5_obj_xt_rsc_triosy_1_5_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_5_obj_iswt0(xt_rsc_triosy_1_5_obj_iswt0),
      .xt_rsc_triosy_1_5_obj_ld_core_sct(xt_rsc_triosy_1_5_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_6_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_6_obj (
  xt_rsc_triosy_1_6_lz, core_wten, xt_rsc_triosy_1_6_obj_iswt0
);
  output xt_rsc_triosy_1_6_lz;
  input core_wten;
  input xt_rsc_triosy_1_6_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_6_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_6_obj (
      .ld(xt_rsc_triosy_1_6_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_6_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_6_obj_xt_rsc_triosy_1_6_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_6_obj_xt_rsc_triosy_1_6_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_6_obj_iswt0(xt_rsc_triosy_1_6_obj_iswt0),
      .xt_rsc_triosy_1_6_obj_ld_core_sct(xt_rsc_triosy_1_6_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_7_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_7_obj (
  xt_rsc_triosy_1_7_lz, core_wten, xt_rsc_triosy_1_7_obj_iswt0
);
  output xt_rsc_triosy_1_7_lz;
  input core_wten;
  input xt_rsc_triosy_1_7_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_7_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_7_obj (
      .ld(xt_rsc_triosy_1_7_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_7_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_7_obj_xt_rsc_triosy_1_7_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_7_obj_xt_rsc_triosy_1_7_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_7_obj_iswt0(xt_rsc_triosy_1_7_obj_iswt0),
      .xt_rsc_triosy_1_7_obj_ld_core_sct(xt_rsc_triosy_1_7_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_8_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_8_obj (
  xt_rsc_triosy_1_8_lz, core_wten, xt_rsc_triosy_1_8_obj_iswt0
);
  output xt_rsc_triosy_1_8_lz;
  input core_wten;
  input xt_rsc_triosy_1_8_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_8_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_8_obj (
      .ld(xt_rsc_triosy_1_8_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_8_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_8_obj_xt_rsc_triosy_1_8_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_8_obj_xt_rsc_triosy_1_8_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_8_obj_iswt0(xt_rsc_triosy_1_8_obj_iswt0),
      .xt_rsc_triosy_1_8_obj_ld_core_sct(xt_rsc_triosy_1_8_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_9_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_9_obj (
  xt_rsc_triosy_1_9_lz, core_wten, xt_rsc_triosy_1_9_obj_iswt0
);
  output xt_rsc_triosy_1_9_lz;
  input core_wten;
  input xt_rsc_triosy_1_9_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_9_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_9_obj (
      .ld(xt_rsc_triosy_1_9_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_9_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_9_obj_xt_rsc_triosy_1_9_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_9_obj_xt_rsc_triosy_1_9_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_9_obj_iswt0(xt_rsc_triosy_1_9_obj_iswt0),
      .xt_rsc_triosy_1_9_obj_ld_core_sct(xt_rsc_triosy_1_9_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_10_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_10_obj (
  xt_rsc_triosy_1_10_lz, core_wten, xt_rsc_triosy_1_10_obj_iswt0
);
  output xt_rsc_triosy_1_10_lz;
  input core_wten;
  input xt_rsc_triosy_1_10_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_10_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_10_obj (
      .ld(xt_rsc_triosy_1_10_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_10_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_10_obj_xt_rsc_triosy_1_10_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_10_obj_xt_rsc_triosy_1_10_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_10_obj_iswt0(xt_rsc_triosy_1_10_obj_iswt0),
      .xt_rsc_triosy_1_10_obj_ld_core_sct(xt_rsc_triosy_1_10_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_11_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_11_obj (
  xt_rsc_triosy_1_11_lz, core_wten, xt_rsc_triosy_1_11_obj_iswt0
);
  output xt_rsc_triosy_1_11_lz;
  input core_wten;
  input xt_rsc_triosy_1_11_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_11_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_11_obj (
      .ld(xt_rsc_triosy_1_11_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_11_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_11_obj_xt_rsc_triosy_1_11_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_11_obj_xt_rsc_triosy_1_11_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_11_obj_iswt0(xt_rsc_triosy_1_11_obj_iswt0),
      .xt_rsc_triosy_1_11_obj_ld_core_sct(xt_rsc_triosy_1_11_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_12_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_12_obj (
  xt_rsc_triosy_1_12_lz, core_wten, xt_rsc_triosy_1_12_obj_iswt0
);
  output xt_rsc_triosy_1_12_lz;
  input core_wten;
  input xt_rsc_triosy_1_12_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_12_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_12_obj (
      .ld(xt_rsc_triosy_1_12_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_12_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_12_obj_xt_rsc_triosy_1_12_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_12_obj_xt_rsc_triosy_1_12_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_12_obj_iswt0(xt_rsc_triosy_1_12_obj_iswt0),
      .xt_rsc_triosy_1_12_obj_ld_core_sct(xt_rsc_triosy_1_12_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_13_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_13_obj (
  xt_rsc_triosy_1_13_lz, core_wten, xt_rsc_triosy_1_13_obj_iswt0
);
  output xt_rsc_triosy_1_13_lz;
  input core_wten;
  input xt_rsc_triosy_1_13_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_13_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_13_obj (
      .ld(xt_rsc_triosy_1_13_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_13_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_13_obj_xt_rsc_triosy_1_13_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_13_obj_xt_rsc_triosy_1_13_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_13_obj_iswt0(xt_rsc_triosy_1_13_obj_iswt0),
      .xt_rsc_triosy_1_13_obj_ld_core_sct(xt_rsc_triosy_1_13_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_14_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_14_obj (
  xt_rsc_triosy_1_14_lz, core_wten, xt_rsc_triosy_1_14_obj_iswt0
);
  output xt_rsc_triosy_1_14_lz;
  input core_wten;
  input xt_rsc_triosy_1_14_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_14_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_14_obj (
      .ld(xt_rsc_triosy_1_14_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_14_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_14_obj_xt_rsc_triosy_1_14_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_14_obj_xt_rsc_triosy_1_14_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_14_obj_iswt0(xt_rsc_triosy_1_14_obj_iswt0),
      .xt_rsc_triosy_1_14_obj_ld_core_sct(xt_rsc_triosy_1_14_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_15_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_15_obj (
  xt_rsc_triosy_1_15_lz, core_wten, xt_rsc_triosy_1_15_obj_iswt0
);
  output xt_rsc_triosy_1_15_lz;
  input core_wten;
  input xt_rsc_triosy_1_15_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_15_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_15_obj (
      .ld(xt_rsc_triosy_1_15_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_15_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_15_obj_xt_rsc_triosy_1_15_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_15_obj_xt_rsc_triosy_1_15_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_15_obj_iswt0(xt_rsc_triosy_1_15_obj_iswt0),
      .xt_rsc_triosy_1_15_obj_ld_core_sct(xt_rsc_triosy_1_15_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_16_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_16_obj (
  xt_rsc_triosy_1_16_lz, core_wten, xt_rsc_triosy_1_16_obj_iswt0
);
  output xt_rsc_triosy_1_16_lz;
  input core_wten;
  input xt_rsc_triosy_1_16_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_16_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_16_obj (
      .ld(xt_rsc_triosy_1_16_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_16_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_16_obj_xt_rsc_triosy_1_16_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_16_obj_xt_rsc_triosy_1_16_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_16_obj_iswt0(xt_rsc_triosy_1_16_obj_iswt0),
      .xt_rsc_triosy_1_16_obj_ld_core_sct(xt_rsc_triosy_1_16_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_17_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_17_obj (
  xt_rsc_triosy_1_17_lz, core_wten, xt_rsc_triosy_1_17_obj_iswt0
);
  output xt_rsc_triosy_1_17_lz;
  input core_wten;
  input xt_rsc_triosy_1_17_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_17_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_17_obj (
      .ld(xt_rsc_triosy_1_17_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_17_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_17_obj_xt_rsc_triosy_1_17_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_17_obj_xt_rsc_triosy_1_17_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_17_obj_iswt0(xt_rsc_triosy_1_17_obj_iswt0),
      .xt_rsc_triosy_1_17_obj_ld_core_sct(xt_rsc_triosy_1_17_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_18_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_18_obj (
  xt_rsc_triosy_1_18_lz, core_wten, xt_rsc_triosy_1_18_obj_iswt0
);
  output xt_rsc_triosy_1_18_lz;
  input core_wten;
  input xt_rsc_triosy_1_18_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_18_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_18_obj (
      .ld(xt_rsc_triosy_1_18_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_18_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_18_obj_xt_rsc_triosy_1_18_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_18_obj_xt_rsc_triosy_1_18_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_18_obj_iswt0(xt_rsc_triosy_1_18_obj_iswt0),
      .xt_rsc_triosy_1_18_obj_ld_core_sct(xt_rsc_triosy_1_18_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_19_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_19_obj (
  xt_rsc_triosy_1_19_lz, core_wten, xt_rsc_triosy_1_19_obj_iswt0
);
  output xt_rsc_triosy_1_19_lz;
  input core_wten;
  input xt_rsc_triosy_1_19_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_19_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_19_obj (
      .ld(xt_rsc_triosy_1_19_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_19_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_19_obj_xt_rsc_triosy_1_19_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_19_obj_xt_rsc_triosy_1_19_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_19_obj_iswt0(xt_rsc_triosy_1_19_obj_iswt0),
      .xt_rsc_triosy_1_19_obj_ld_core_sct(xt_rsc_triosy_1_19_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_20_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_20_obj (
  xt_rsc_triosy_1_20_lz, core_wten, xt_rsc_triosy_1_20_obj_iswt0
);
  output xt_rsc_triosy_1_20_lz;
  input core_wten;
  input xt_rsc_triosy_1_20_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_20_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_20_obj (
      .ld(xt_rsc_triosy_1_20_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_20_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_20_obj_xt_rsc_triosy_1_20_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_20_obj_xt_rsc_triosy_1_20_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_20_obj_iswt0(xt_rsc_triosy_1_20_obj_iswt0),
      .xt_rsc_triosy_1_20_obj_ld_core_sct(xt_rsc_triosy_1_20_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_21_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_21_obj (
  xt_rsc_triosy_1_21_lz, core_wten, xt_rsc_triosy_1_21_obj_iswt0
);
  output xt_rsc_triosy_1_21_lz;
  input core_wten;
  input xt_rsc_triosy_1_21_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_21_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_21_obj (
      .ld(xt_rsc_triosy_1_21_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_21_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_21_obj_xt_rsc_triosy_1_21_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_21_obj_xt_rsc_triosy_1_21_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_21_obj_iswt0(xt_rsc_triosy_1_21_obj_iswt0),
      .xt_rsc_triosy_1_21_obj_ld_core_sct(xt_rsc_triosy_1_21_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_22_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_22_obj (
  xt_rsc_triosy_1_22_lz, core_wten, xt_rsc_triosy_1_22_obj_iswt0
);
  output xt_rsc_triosy_1_22_lz;
  input core_wten;
  input xt_rsc_triosy_1_22_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_22_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_22_obj (
      .ld(xt_rsc_triosy_1_22_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_22_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_22_obj_xt_rsc_triosy_1_22_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_22_obj_xt_rsc_triosy_1_22_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_22_obj_iswt0(xt_rsc_triosy_1_22_obj_iswt0),
      .xt_rsc_triosy_1_22_obj_ld_core_sct(xt_rsc_triosy_1_22_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_23_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_23_obj (
  xt_rsc_triosy_1_23_lz, core_wten, xt_rsc_triosy_1_23_obj_iswt0
);
  output xt_rsc_triosy_1_23_lz;
  input core_wten;
  input xt_rsc_triosy_1_23_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_23_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_23_obj (
      .ld(xt_rsc_triosy_1_23_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_23_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_23_obj_xt_rsc_triosy_1_23_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_23_obj_xt_rsc_triosy_1_23_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_23_obj_iswt0(xt_rsc_triosy_1_23_obj_iswt0),
      .xt_rsc_triosy_1_23_obj_ld_core_sct(xt_rsc_triosy_1_23_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_24_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_24_obj (
  xt_rsc_triosy_1_24_lz, core_wten, xt_rsc_triosy_1_24_obj_iswt0
);
  output xt_rsc_triosy_1_24_lz;
  input core_wten;
  input xt_rsc_triosy_1_24_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_24_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_24_obj (
      .ld(xt_rsc_triosy_1_24_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_24_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_24_obj_xt_rsc_triosy_1_24_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_24_obj_xt_rsc_triosy_1_24_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_24_obj_iswt0(xt_rsc_triosy_1_24_obj_iswt0),
      .xt_rsc_triosy_1_24_obj_ld_core_sct(xt_rsc_triosy_1_24_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_25_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_25_obj (
  xt_rsc_triosy_1_25_lz, core_wten, xt_rsc_triosy_1_25_obj_iswt0
);
  output xt_rsc_triosy_1_25_lz;
  input core_wten;
  input xt_rsc_triosy_1_25_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_25_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_25_obj (
      .ld(xt_rsc_triosy_1_25_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_25_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_25_obj_xt_rsc_triosy_1_25_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_25_obj_xt_rsc_triosy_1_25_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_25_obj_iswt0(xt_rsc_triosy_1_25_obj_iswt0),
      .xt_rsc_triosy_1_25_obj_ld_core_sct(xt_rsc_triosy_1_25_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_26_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_26_obj (
  xt_rsc_triosy_1_26_lz, core_wten, xt_rsc_triosy_1_26_obj_iswt0
);
  output xt_rsc_triosy_1_26_lz;
  input core_wten;
  input xt_rsc_triosy_1_26_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_26_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_26_obj (
      .ld(xt_rsc_triosy_1_26_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_26_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_26_obj_xt_rsc_triosy_1_26_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_26_obj_xt_rsc_triosy_1_26_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_26_obj_iswt0(xt_rsc_triosy_1_26_obj_iswt0),
      .xt_rsc_triosy_1_26_obj_ld_core_sct(xt_rsc_triosy_1_26_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_27_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_27_obj (
  xt_rsc_triosy_1_27_lz, core_wten, xt_rsc_triosy_1_27_obj_iswt0
);
  output xt_rsc_triosy_1_27_lz;
  input core_wten;
  input xt_rsc_triosy_1_27_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_27_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_27_obj (
      .ld(xt_rsc_triosy_1_27_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_27_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_27_obj_xt_rsc_triosy_1_27_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_27_obj_xt_rsc_triosy_1_27_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_27_obj_iswt0(xt_rsc_triosy_1_27_obj_iswt0),
      .xt_rsc_triosy_1_27_obj_ld_core_sct(xt_rsc_triosy_1_27_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_28_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_28_obj (
  xt_rsc_triosy_1_28_lz, core_wten, xt_rsc_triosy_1_28_obj_iswt0
);
  output xt_rsc_triosy_1_28_lz;
  input core_wten;
  input xt_rsc_triosy_1_28_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_28_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_28_obj (
      .ld(xt_rsc_triosy_1_28_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_28_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_28_obj_xt_rsc_triosy_1_28_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_28_obj_xt_rsc_triosy_1_28_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_28_obj_iswt0(xt_rsc_triosy_1_28_obj_iswt0),
      .xt_rsc_triosy_1_28_obj_ld_core_sct(xt_rsc_triosy_1_28_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_29_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_29_obj (
  xt_rsc_triosy_1_29_lz, core_wten, xt_rsc_triosy_1_29_obj_iswt0
);
  output xt_rsc_triosy_1_29_lz;
  input core_wten;
  input xt_rsc_triosy_1_29_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_29_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_29_obj (
      .ld(xt_rsc_triosy_1_29_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_29_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_29_obj_xt_rsc_triosy_1_29_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_29_obj_xt_rsc_triosy_1_29_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_29_obj_iswt0(xt_rsc_triosy_1_29_obj_iswt0),
      .xt_rsc_triosy_1_29_obj_ld_core_sct(xt_rsc_triosy_1_29_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_30_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_30_obj (
  xt_rsc_triosy_1_30_lz, core_wten, xt_rsc_triosy_1_30_obj_iswt0
);
  output xt_rsc_triosy_1_30_lz;
  input core_wten;
  input xt_rsc_triosy_1_30_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_30_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_30_obj (
      .ld(xt_rsc_triosy_1_30_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_30_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_30_obj_xt_rsc_triosy_1_30_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_30_obj_xt_rsc_triosy_1_30_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_30_obj_iswt0(xt_rsc_triosy_1_30_obj_iswt0),
      .xt_rsc_triosy_1_30_obj_ld_core_sct(xt_rsc_triosy_1_30_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_triosy_1_31_obj
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_triosy_1_31_obj (
  xt_rsc_triosy_1_31_lz, core_wten, xt_rsc_triosy_1_31_obj_iswt0
);
  output xt_rsc_triosy_1_31_lz;
  input core_wten;
  input xt_rsc_triosy_1_31_obj_iswt0;


  // Interconnect Declarations
  wire xt_rsc_triosy_1_31_obj_ld_core_sct;


  // Interconnect Declarations for Component Instantiations 
  mgc_io_sync_v2 #(.valid(32'sd0)) xt_rsc_triosy_1_31_obj (
      .ld(xt_rsc_triosy_1_31_obj_ld_core_sct),
      .lz(xt_rsc_triosy_1_31_lz)
    );
  peaseNTT_core_xt_rsc_triosy_1_31_obj_xt_rsc_triosy_1_31_wait_ctrl peaseNTT_core_xt_rsc_triosy_1_31_obj_xt_rsc_triosy_1_31_wait_ctrl_inst
      (
      .core_wten(core_wten),
      .xt_rsc_triosy_1_31_obj_iswt0(xt_rsc_triosy_1_31_obj_iswt0),
      .xt_rsc_triosy_1_31_obj_ld_core_sct(xt_rsc_triosy_1_31_obj_ld_core_sct)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_15_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_15_i (
  clk, rst, twiddle_h_rsc_0_15_s_tdone, twiddle_h_rsc_0_15_tr_write_done, twiddle_h_rsc_0_15_RREADY,
      twiddle_h_rsc_0_15_RVALID, twiddle_h_rsc_0_15_RUSER, twiddle_h_rsc_0_15_RLAST,
      twiddle_h_rsc_0_15_RRESP, twiddle_h_rsc_0_15_RDATA, twiddle_h_rsc_0_15_RID,
      twiddle_h_rsc_0_15_ARREADY, twiddle_h_rsc_0_15_ARVALID, twiddle_h_rsc_0_15_ARUSER,
      twiddle_h_rsc_0_15_ARREGION, twiddle_h_rsc_0_15_ARQOS, twiddle_h_rsc_0_15_ARPROT,
      twiddle_h_rsc_0_15_ARCACHE, twiddle_h_rsc_0_15_ARLOCK, twiddle_h_rsc_0_15_ARBURST,
      twiddle_h_rsc_0_15_ARSIZE, twiddle_h_rsc_0_15_ARLEN, twiddle_h_rsc_0_15_ARADDR,
      twiddle_h_rsc_0_15_ARID, twiddle_h_rsc_0_15_BREADY, twiddle_h_rsc_0_15_BVALID,
      twiddle_h_rsc_0_15_BUSER, twiddle_h_rsc_0_15_BRESP, twiddle_h_rsc_0_15_BID,
      twiddle_h_rsc_0_15_WREADY, twiddle_h_rsc_0_15_WVALID, twiddle_h_rsc_0_15_WUSER,
      twiddle_h_rsc_0_15_WLAST, twiddle_h_rsc_0_15_WSTRB, twiddle_h_rsc_0_15_WDATA,
      twiddle_h_rsc_0_15_AWREADY, twiddle_h_rsc_0_15_AWVALID, twiddle_h_rsc_0_15_AWUSER,
      twiddle_h_rsc_0_15_AWREGION, twiddle_h_rsc_0_15_AWQOS, twiddle_h_rsc_0_15_AWPROT,
      twiddle_h_rsc_0_15_AWCACHE, twiddle_h_rsc_0_15_AWLOCK, twiddle_h_rsc_0_15_AWBURST,
      twiddle_h_rsc_0_15_AWSIZE, twiddle_h_rsc_0_15_AWLEN, twiddle_h_rsc_0_15_AWADDR,
      twiddle_h_rsc_0_15_AWID, core_wen, twiddle_h_rsc_0_15_i_oswt, twiddle_h_rsc_0_15_i_wen_comp,
      twiddle_h_rsc_0_15_i_s_raddr_core, twiddle_h_rsc_0_15_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_15_s_tdone;
  input twiddle_h_rsc_0_15_tr_write_done;
  input twiddle_h_rsc_0_15_RREADY;
  output twiddle_h_rsc_0_15_RVALID;
  output twiddle_h_rsc_0_15_RUSER;
  output twiddle_h_rsc_0_15_RLAST;
  output [1:0] twiddle_h_rsc_0_15_RRESP;
  output [31:0] twiddle_h_rsc_0_15_RDATA;
  output twiddle_h_rsc_0_15_RID;
  output twiddle_h_rsc_0_15_ARREADY;
  input twiddle_h_rsc_0_15_ARVALID;
  input twiddle_h_rsc_0_15_ARUSER;
  input [3:0] twiddle_h_rsc_0_15_ARREGION;
  input [3:0] twiddle_h_rsc_0_15_ARQOS;
  input [2:0] twiddle_h_rsc_0_15_ARPROT;
  input [3:0] twiddle_h_rsc_0_15_ARCACHE;
  input twiddle_h_rsc_0_15_ARLOCK;
  input [1:0] twiddle_h_rsc_0_15_ARBURST;
  input [2:0] twiddle_h_rsc_0_15_ARSIZE;
  input [7:0] twiddle_h_rsc_0_15_ARLEN;
  input [11:0] twiddle_h_rsc_0_15_ARADDR;
  input twiddle_h_rsc_0_15_ARID;
  input twiddle_h_rsc_0_15_BREADY;
  output twiddle_h_rsc_0_15_BVALID;
  output twiddle_h_rsc_0_15_BUSER;
  output [1:0] twiddle_h_rsc_0_15_BRESP;
  output twiddle_h_rsc_0_15_BID;
  output twiddle_h_rsc_0_15_WREADY;
  input twiddle_h_rsc_0_15_WVALID;
  input twiddle_h_rsc_0_15_WUSER;
  input twiddle_h_rsc_0_15_WLAST;
  input [3:0] twiddle_h_rsc_0_15_WSTRB;
  input [31:0] twiddle_h_rsc_0_15_WDATA;
  output twiddle_h_rsc_0_15_AWREADY;
  input twiddle_h_rsc_0_15_AWVALID;
  input twiddle_h_rsc_0_15_AWUSER;
  input [3:0] twiddle_h_rsc_0_15_AWREGION;
  input [3:0] twiddle_h_rsc_0_15_AWQOS;
  input [2:0] twiddle_h_rsc_0_15_AWPROT;
  input [3:0] twiddle_h_rsc_0_15_AWCACHE;
  input twiddle_h_rsc_0_15_AWLOCK;
  input [1:0] twiddle_h_rsc_0_15_AWBURST;
  input [2:0] twiddle_h_rsc_0_15_AWSIZE;
  input [7:0] twiddle_h_rsc_0_15_AWLEN;
  input [11:0] twiddle_h_rsc_0_15_AWADDR;
  input twiddle_h_rsc_0_15_AWID;
  input core_wen;
  input twiddle_h_rsc_0_15_i_oswt;
  output twiddle_h_rsc_0_15_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_15_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_15_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_15_i_biwt;
  wire twiddle_h_rsc_0_15_i_bdwt;
  wire twiddle_h_rsc_0_15_i_bcwt;
  wire twiddle_h_rsc_0_15_i_s_re_core_sct;
  wire [5:0] twiddle_h_rsc_0_15_i_s_raddr;
  wire [31:0] twiddle_h_rsc_0_15_i_s_din;
  wire twiddle_h_rsc_0_15_i_s_rrdy;
  wire twiddle_h_rsc_0_15_i_s_wrdy;
  wire twiddle_h_rsc_0_15_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_15_i_twiddle_h_rsc_0_15_wait_dp_inst_twiddle_h_rsc_0_15_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_15_i_twiddle_h_rsc_0_15_wait_dp_inst_twiddle_h_rsc_0_15_i_s_raddr_core
      = {1'b0 , (twiddle_h_rsc_0_15_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_h_rsc_0_15_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_h_rsc_0_15_AWID),
      .AWADDR(twiddle_h_rsc_0_15_AWADDR),
      .AWLEN(twiddle_h_rsc_0_15_AWLEN),
      .AWSIZE(twiddle_h_rsc_0_15_AWSIZE),
      .AWBURST(twiddle_h_rsc_0_15_AWBURST),
      .AWLOCK(twiddle_h_rsc_0_15_AWLOCK),
      .AWCACHE(twiddle_h_rsc_0_15_AWCACHE),
      .AWPROT(twiddle_h_rsc_0_15_AWPROT),
      .AWQOS(twiddle_h_rsc_0_15_AWQOS),
      .AWREGION(twiddle_h_rsc_0_15_AWREGION),
      .AWUSER(twiddle_h_rsc_0_15_AWUSER),
      .AWVALID(twiddle_h_rsc_0_15_AWVALID),
      .AWREADY(twiddle_h_rsc_0_15_AWREADY),
      .WDATA(twiddle_h_rsc_0_15_WDATA),
      .WSTRB(twiddle_h_rsc_0_15_WSTRB),
      .WLAST(twiddle_h_rsc_0_15_WLAST),
      .WUSER(twiddle_h_rsc_0_15_WUSER),
      .WVALID(twiddle_h_rsc_0_15_WVALID),
      .WREADY(twiddle_h_rsc_0_15_WREADY),
      .BID(twiddle_h_rsc_0_15_BID),
      .BRESP(twiddle_h_rsc_0_15_BRESP),
      .BUSER(twiddle_h_rsc_0_15_BUSER),
      .BVALID(twiddle_h_rsc_0_15_BVALID),
      .BREADY(twiddle_h_rsc_0_15_BREADY),
      .ARID(twiddle_h_rsc_0_15_ARID),
      .ARADDR(twiddle_h_rsc_0_15_ARADDR),
      .ARLEN(twiddle_h_rsc_0_15_ARLEN),
      .ARSIZE(twiddle_h_rsc_0_15_ARSIZE),
      .ARBURST(twiddle_h_rsc_0_15_ARBURST),
      .ARLOCK(twiddle_h_rsc_0_15_ARLOCK),
      .ARCACHE(twiddle_h_rsc_0_15_ARCACHE),
      .ARPROT(twiddle_h_rsc_0_15_ARPROT),
      .ARQOS(twiddle_h_rsc_0_15_ARQOS),
      .ARREGION(twiddle_h_rsc_0_15_ARREGION),
      .ARUSER(twiddle_h_rsc_0_15_ARUSER),
      .ARVALID(twiddle_h_rsc_0_15_ARVALID),
      .ARREADY(twiddle_h_rsc_0_15_ARREADY),
      .RID(twiddle_h_rsc_0_15_RID),
      .RDATA(twiddle_h_rsc_0_15_RDATA),
      .RRESP(twiddle_h_rsc_0_15_RRESP),
      .RLAST(twiddle_h_rsc_0_15_RLAST),
      .RUSER(twiddle_h_rsc_0_15_RUSER),
      .RVALID(twiddle_h_rsc_0_15_RVALID),
      .RREADY(twiddle_h_rsc_0_15_RREADY),
      .s_re(twiddle_h_rsc_0_15_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_h_rsc_0_15_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_h_rsc_0_15_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_h_rsc_0_15_i_s_rrdy),
      .s_wrdy(twiddle_h_rsc_0_15_i_s_wrdy),
      .is_idle(twiddle_h_rsc_0_15_is_idle),
      .tr_write_done(twiddle_h_rsc_0_15_tr_write_done),
      .s_tdone(twiddle_h_rsc_0_15_s_tdone)
    );
  peaseNTT_core_twiddle_h_rsc_0_15_i_twiddle_h_rsc_0_15_wait_ctrl peaseNTT_core_twiddle_h_rsc_0_15_i_twiddle_h_rsc_0_15_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_h_rsc_0_15_i_oswt(twiddle_h_rsc_0_15_i_oswt),
      .twiddle_h_rsc_0_15_i_biwt(twiddle_h_rsc_0_15_i_biwt),
      .twiddle_h_rsc_0_15_i_bdwt(twiddle_h_rsc_0_15_i_bdwt),
      .twiddle_h_rsc_0_15_i_bcwt(twiddle_h_rsc_0_15_i_bcwt),
      .twiddle_h_rsc_0_15_i_s_re_core_sct(twiddle_h_rsc_0_15_i_s_re_core_sct),
      .twiddle_h_rsc_0_15_i_s_rrdy(twiddle_h_rsc_0_15_i_s_rrdy)
    );
  peaseNTT_core_twiddle_h_rsc_0_15_i_twiddle_h_rsc_0_15_wait_dp peaseNTT_core_twiddle_h_rsc_0_15_i_twiddle_h_rsc_0_15_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_15_i_oswt(twiddle_h_rsc_0_15_i_oswt),
      .twiddle_h_rsc_0_15_i_wen_comp(twiddle_h_rsc_0_15_i_wen_comp),
      .twiddle_h_rsc_0_15_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_15_i_twiddle_h_rsc_0_15_wait_dp_inst_twiddle_h_rsc_0_15_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_15_i_s_din_mxwt(twiddle_h_rsc_0_15_i_s_din_mxwt),
      .twiddle_h_rsc_0_15_i_biwt(twiddle_h_rsc_0_15_i_biwt),
      .twiddle_h_rsc_0_15_i_bdwt(twiddle_h_rsc_0_15_i_bdwt),
      .twiddle_h_rsc_0_15_i_bcwt(twiddle_h_rsc_0_15_i_bcwt),
      .twiddle_h_rsc_0_15_i_s_raddr(twiddle_h_rsc_0_15_i_s_raddr),
      .twiddle_h_rsc_0_15_i_s_raddr_core_sct(twiddle_h_rsc_0_15_i_s_re_core_sct),
      .twiddle_h_rsc_0_15_i_s_din(twiddle_h_rsc_0_15_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_14_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_14_i (
  clk, rst, twiddle_h_rsc_0_14_s_tdone, twiddle_h_rsc_0_14_tr_write_done, twiddle_h_rsc_0_14_RREADY,
      twiddle_h_rsc_0_14_RVALID, twiddle_h_rsc_0_14_RUSER, twiddle_h_rsc_0_14_RLAST,
      twiddle_h_rsc_0_14_RRESP, twiddle_h_rsc_0_14_RDATA, twiddle_h_rsc_0_14_RID,
      twiddle_h_rsc_0_14_ARREADY, twiddle_h_rsc_0_14_ARVALID, twiddle_h_rsc_0_14_ARUSER,
      twiddle_h_rsc_0_14_ARREGION, twiddle_h_rsc_0_14_ARQOS, twiddle_h_rsc_0_14_ARPROT,
      twiddle_h_rsc_0_14_ARCACHE, twiddle_h_rsc_0_14_ARLOCK, twiddle_h_rsc_0_14_ARBURST,
      twiddle_h_rsc_0_14_ARSIZE, twiddle_h_rsc_0_14_ARLEN, twiddle_h_rsc_0_14_ARADDR,
      twiddle_h_rsc_0_14_ARID, twiddle_h_rsc_0_14_BREADY, twiddle_h_rsc_0_14_BVALID,
      twiddle_h_rsc_0_14_BUSER, twiddle_h_rsc_0_14_BRESP, twiddle_h_rsc_0_14_BID,
      twiddle_h_rsc_0_14_WREADY, twiddle_h_rsc_0_14_WVALID, twiddle_h_rsc_0_14_WUSER,
      twiddle_h_rsc_0_14_WLAST, twiddle_h_rsc_0_14_WSTRB, twiddle_h_rsc_0_14_WDATA,
      twiddle_h_rsc_0_14_AWREADY, twiddle_h_rsc_0_14_AWVALID, twiddle_h_rsc_0_14_AWUSER,
      twiddle_h_rsc_0_14_AWREGION, twiddle_h_rsc_0_14_AWQOS, twiddle_h_rsc_0_14_AWPROT,
      twiddle_h_rsc_0_14_AWCACHE, twiddle_h_rsc_0_14_AWLOCK, twiddle_h_rsc_0_14_AWBURST,
      twiddle_h_rsc_0_14_AWSIZE, twiddle_h_rsc_0_14_AWLEN, twiddle_h_rsc_0_14_AWADDR,
      twiddle_h_rsc_0_14_AWID, core_wen, twiddle_h_rsc_0_14_i_oswt, twiddle_h_rsc_0_14_i_wen_comp,
      twiddle_h_rsc_0_14_i_s_raddr_core, twiddle_h_rsc_0_14_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_14_s_tdone;
  input twiddle_h_rsc_0_14_tr_write_done;
  input twiddle_h_rsc_0_14_RREADY;
  output twiddle_h_rsc_0_14_RVALID;
  output twiddle_h_rsc_0_14_RUSER;
  output twiddle_h_rsc_0_14_RLAST;
  output [1:0] twiddle_h_rsc_0_14_RRESP;
  output [31:0] twiddle_h_rsc_0_14_RDATA;
  output twiddle_h_rsc_0_14_RID;
  output twiddle_h_rsc_0_14_ARREADY;
  input twiddle_h_rsc_0_14_ARVALID;
  input twiddle_h_rsc_0_14_ARUSER;
  input [3:0] twiddle_h_rsc_0_14_ARREGION;
  input [3:0] twiddle_h_rsc_0_14_ARQOS;
  input [2:0] twiddle_h_rsc_0_14_ARPROT;
  input [3:0] twiddle_h_rsc_0_14_ARCACHE;
  input twiddle_h_rsc_0_14_ARLOCK;
  input [1:0] twiddle_h_rsc_0_14_ARBURST;
  input [2:0] twiddle_h_rsc_0_14_ARSIZE;
  input [7:0] twiddle_h_rsc_0_14_ARLEN;
  input [11:0] twiddle_h_rsc_0_14_ARADDR;
  input twiddle_h_rsc_0_14_ARID;
  input twiddle_h_rsc_0_14_BREADY;
  output twiddle_h_rsc_0_14_BVALID;
  output twiddle_h_rsc_0_14_BUSER;
  output [1:0] twiddle_h_rsc_0_14_BRESP;
  output twiddle_h_rsc_0_14_BID;
  output twiddle_h_rsc_0_14_WREADY;
  input twiddle_h_rsc_0_14_WVALID;
  input twiddle_h_rsc_0_14_WUSER;
  input twiddle_h_rsc_0_14_WLAST;
  input [3:0] twiddle_h_rsc_0_14_WSTRB;
  input [31:0] twiddle_h_rsc_0_14_WDATA;
  output twiddle_h_rsc_0_14_AWREADY;
  input twiddle_h_rsc_0_14_AWVALID;
  input twiddle_h_rsc_0_14_AWUSER;
  input [3:0] twiddle_h_rsc_0_14_AWREGION;
  input [3:0] twiddle_h_rsc_0_14_AWQOS;
  input [2:0] twiddle_h_rsc_0_14_AWPROT;
  input [3:0] twiddle_h_rsc_0_14_AWCACHE;
  input twiddle_h_rsc_0_14_AWLOCK;
  input [1:0] twiddle_h_rsc_0_14_AWBURST;
  input [2:0] twiddle_h_rsc_0_14_AWSIZE;
  input [7:0] twiddle_h_rsc_0_14_AWLEN;
  input [11:0] twiddle_h_rsc_0_14_AWADDR;
  input twiddle_h_rsc_0_14_AWID;
  input core_wen;
  input twiddle_h_rsc_0_14_i_oswt;
  output twiddle_h_rsc_0_14_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_14_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_14_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_14_i_biwt;
  wire twiddle_h_rsc_0_14_i_bdwt;
  wire twiddle_h_rsc_0_14_i_bcwt;
  wire twiddle_h_rsc_0_14_i_s_re_core_sct;
  wire [5:0] twiddle_h_rsc_0_14_i_s_raddr;
  wire [31:0] twiddle_h_rsc_0_14_i_s_din;
  wire twiddle_h_rsc_0_14_i_s_rrdy;
  wire twiddle_h_rsc_0_14_i_s_wrdy;
  wire twiddle_h_rsc_0_14_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_14_i_twiddle_h_rsc_0_14_wait_dp_inst_twiddle_h_rsc_0_14_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_14_i_twiddle_h_rsc_0_14_wait_dp_inst_twiddle_h_rsc_0_14_i_s_raddr_core
      = {1'b0 , (twiddle_h_rsc_0_14_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_h_rsc_0_14_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_h_rsc_0_14_AWID),
      .AWADDR(twiddle_h_rsc_0_14_AWADDR),
      .AWLEN(twiddle_h_rsc_0_14_AWLEN),
      .AWSIZE(twiddle_h_rsc_0_14_AWSIZE),
      .AWBURST(twiddle_h_rsc_0_14_AWBURST),
      .AWLOCK(twiddle_h_rsc_0_14_AWLOCK),
      .AWCACHE(twiddle_h_rsc_0_14_AWCACHE),
      .AWPROT(twiddle_h_rsc_0_14_AWPROT),
      .AWQOS(twiddle_h_rsc_0_14_AWQOS),
      .AWREGION(twiddle_h_rsc_0_14_AWREGION),
      .AWUSER(twiddle_h_rsc_0_14_AWUSER),
      .AWVALID(twiddle_h_rsc_0_14_AWVALID),
      .AWREADY(twiddle_h_rsc_0_14_AWREADY),
      .WDATA(twiddle_h_rsc_0_14_WDATA),
      .WSTRB(twiddle_h_rsc_0_14_WSTRB),
      .WLAST(twiddle_h_rsc_0_14_WLAST),
      .WUSER(twiddle_h_rsc_0_14_WUSER),
      .WVALID(twiddle_h_rsc_0_14_WVALID),
      .WREADY(twiddle_h_rsc_0_14_WREADY),
      .BID(twiddle_h_rsc_0_14_BID),
      .BRESP(twiddle_h_rsc_0_14_BRESP),
      .BUSER(twiddle_h_rsc_0_14_BUSER),
      .BVALID(twiddle_h_rsc_0_14_BVALID),
      .BREADY(twiddle_h_rsc_0_14_BREADY),
      .ARID(twiddle_h_rsc_0_14_ARID),
      .ARADDR(twiddle_h_rsc_0_14_ARADDR),
      .ARLEN(twiddle_h_rsc_0_14_ARLEN),
      .ARSIZE(twiddle_h_rsc_0_14_ARSIZE),
      .ARBURST(twiddle_h_rsc_0_14_ARBURST),
      .ARLOCK(twiddle_h_rsc_0_14_ARLOCK),
      .ARCACHE(twiddle_h_rsc_0_14_ARCACHE),
      .ARPROT(twiddle_h_rsc_0_14_ARPROT),
      .ARQOS(twiddle_h_rsc_0_14_ARQOS),
      .ARREGION(twiddle_h_rsc_0_14_ARREGION),
      .ARUSER(twiddle_h_rsc_0_14_ARUSER),
      .ARVALID(twiddle_h_rsc_0_14_ARVALID),
      .ARREADY(twiddle_h_rsc_0_14_ARREADY),
      .RID(twiddle_h_rsc_0_14_RID),
      .RDATA(twiddle_h_rsc_0_14_RDATA),
      .RRESP(twiddle_h_rsc_0_14_RRESP),
      .RLAST(twiddle_h_rsc_0_14_RLAST),
      .RUSER(twiddle_h_rsc_0_14_RUSER),
      .RVALID(twiddle_h_rsc_0_14_RVALID),
      .RREADY(twiddle_h_rsc_0_14_RREADY),
      .s_re(twiddle_h_rsc_0_14_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_h_rsc_0_14_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_h_rsc_0_14_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_h_rsc_0_14_i_s_rrdy),
      .s_wrdy(twiddle_h_rsc_0_14_i_s_wrdy),
      .is_idle(twiddle_h_rsc_0_14_is_idle),
      .tr_write_done(twiddle_h_rsc_0_14_tr_write_done),
      .s_tdone(twiddle_h_rsc_0_14_s_tdone)
    );
  peaseNTT_core_twiddle_h_rsc_0_14_i_twiddle_h_rsc_0_14_wait_ctrl peaseNTT_core_twiddle_h_rsc_0_14_i_twiddle_h_rsc_0_14_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_h_rsc_0_14_i_oswt(twiddle_h_rsc_0_14_i_oswt),
      .twiddle_h_rsc_0_14_i_biwt(twiddle_h_rsc_0_14_i_biwt),
      .twiddle_h_rsc_0_14_i_bdwt(twiddle_h_rsc_0_14_i_bdwt),
      .twiddle_h_rsc_0_14_i_bcwt(twiddle_h_rsc_0_14_i_bcwt),
      .twiddle_h_rsc_0_14_i_s_re_core_sct(twiddle_h_rsc_0_14_i_s_re_core_sct),
      .twiddle_h_rsc_0_14_i_s_rrdy(twiddle_h_rsc_0_14_i_s_rrdy)
    );
  peaseNTT_core_twiddle_h_rsc_0_14_i_twiddle_h_rsc_0_14_wait_dp peaseNTT_core_twiddle_h_rsc_0_14_i_twiddle_h_rsc_0_14_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_14_i_oswt(twiddle_h_rsc_0_14_i_oswt),
      .twiddle_h_rsc_0_14_i_wen_comp(twiddle_h_rsc_0_14_i_wen_comp),
      .twiddle_h_rsc_0_14_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_14_i_twiddle_h_rsc_0_14_wait_dp_inst_twiddle_h_rsc_0_14_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_14_i_s_din_mxwt(twiddle_h_rsc_0_14_i_s_din_mxwt),
      .twiddle_h_rsc_0_14_i_biwt(twiddle_h_rsc_0_14_i_biwt),
      .twiddle_h_rsc_0_14_i_bdwt(twiddle_h_rsc_0_14_i_bdwt),
      .twiddle_h_rsc_0_14_i_bcwt(twiddle_h_rsc_0_14_i_bcwt),
      .twiddle_h_rsc_0_14_i_s_raddr(twiddle_h_rsc_0_14_i_s_raddr),
      .twiddle_h_rsc_0_14_i_s_raddr_core_sct(twiddle_h_rsc_0_14_i_s_re_core_sct),
      .twiddle_h_rsc_0_14_i_s_din(twiddle_h_rsc_0_14_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_13_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_13_i (
  clk, rst, twiddle_h_rsc_0_13_s_tdone, twiddle_h_rsc_0_13_tr_write_done, twiddle_h_rsc_0_13_RREADY,
      twiddle_h_rsc_0_13_RVALID, twiddle_h_rsc_0_13_RUSER, twiddle_h_rsc_0_13_RLAST,
      twiddle_h_rsc_0_13_RRESP, twiddle_h_rsc_0_13_RDATA, twiddle_h_rsc_0_13_RID,
      twiddle_h_rsc_0_13_ARREADY, twiddle_h_rsc_0_13_ARVALID, twiddle_h_rsc_0_13_ARUSER,
      twiddle_h_rsc_0_13_ARREGION, twiddle_h_rsc_0_13_ARQOS, twiddle_h_rsc_0_13_ARPROT,
      twiddle_h_rsc_0_13_ARCACHE, twiddle_h_rsc_0_13_ARLOCK, twiddle_h_rsc_0_13_ARBURST,
      twiddle_h_rsc_0_13_ARSIZE, twiddle_h_rsc_0_13_ARLEN, twiddle_h_rsc_0_13_ARADDR,
      twiddle_h_rsc_0_13_ARID, twiddle_h_rsc_0_13_BREADY, twiddle_h_rsc_0_13_BVALID,
      twiddle_h_rsc_0_13_BUSER, twiddle_h_rsc_0_13_BRESP, twiddle_h_rsc_0_13_BID,
      twiddle_h_rsc_0_13_WREADY, twiddle_h_rsc_0_13_WVALID, twiddle_h_rsc_0_13_WUSER,
      twiddle_h_rsc_0_13_WLAST, twiddle_h_rsc_0_13_WSTRB, twiddle_h_rsc_0_13_WDATA,
      twiddle_h_rsc_0_13_AWREADY, twiddle_h_rsc_0_13_AWVALID, twiddle_h_rsc_0_13_AWUSER,
      twiddle_h_rsc_0_13_AWREGION, twiddle_h_rsc_0_13_AWQOS, twiddle_h_rsc_0_13_AWPROT,
      twiddle_h_rsc_0_13_AWCACHE, twiddle_h_rsc_0_13_AWLOCK, twiddle_h_rsc_0_13_AWBURST,
      twiddle_h_rsc_0_13_AWSIZE, twiddle_h_rsc_0_13_AWLEN, twiddle_h_rsc_0_13_AWADDR,
      twiddle_h_rsc_0_13_AWID, core_wen, twiddle_h_rsc_0_13_i_oswt, twiddle_h_rsc_0_13_i_wen_comp,
      twiddle_h_rsc_0_13_i_s_raddr_core, twiddle_h_rsc_0_13_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_13_s_tdone;
  input twiddle_h_rsc_0_13_tr_write_done;
  input twiddle_h_rsc_0_13_RREADY;
  output twiddle_h_rsc_0_13_RVALID;
  output twiddle_h_rsc_0_13_RUSER;
  output twiddle_h_rsc_0_13_RLAST;
  output [1:0] twiddle_h_rsc_0_13_RRESP;
  output [31:0] twiddle_h_rsc_0_13_RDATA;
  output twiddle_h_rsc_0_13_RID;
  output twiddle_h_rsc_0_13_ARREADY;
  input twiddle_h_rsc_0_13_ARVALID;
  input twiddle_h_rsc_0_13_ARUSER;
  input [3:0] twiddle_h_rsc_0_13_ARREGION;
  input [3:0] twiddle_h_rsc_0_13_ARQOS;
  input [2:0] twiddle_h_rsc_0_13_ARPROT;
  input [3:0] twiddle_h_rsc_0_13_ARCACHE;
  input twiddle_h_rsc_0_13_ARLOCK;
  input [1:0] twiddle_h_rsc_0_13_ARBURST;
  input [2:0] twiddle_h_rsc_0_13_ARSIZE;
  input [7:0] twiddle_h_rsc_0_13_ARLEN;
  input [11:0] twiddle_h_rsc_0_13_ARADDR;
  input twiddle_h_rsc_0_13_ARID;
  input twiddle_h_rsc_0_13_BREADY;
  output twiddle_h_rsc_0_13_BVALID;
  output twiddle_h_rsc_0_13_BUSER;
  output [1:0] twiddle_h_rsc_0_13_BRESP;
  output twiddle_h_rsc_0_13_BID;
  output twiddle_h_rsc_0_13_WREADY;
  input twiddle_h_rsc_0_13_WVALID;
  input twiddle_h_rsc_0_13_WUSER;
  input twiddle_h_rsc_0_13_WLAST;
  input [3:0] twiddle_h_rsc_0_13_WSTRB;
  input [31:0] twiddle_h_rsc_0_13_WDATA;
  output twiddle_h_rsc_0_13_AWREADY;
  input twiddle_h_rsc_0_13_AWVALID;
  input twiddle_h_rsc_0_13_AWUSER;
  input [3:0] twiddle_h_rsc_0_13_AWREGION;
  input [3:0] twiddle_h_rsc_0_13_AWQOS;
  input [2:0] twiddle_h_rsc_0_13_AWPROT;
  input [3:0] twiddle_h_rsc_0_13_AWCACHE;
  input twiddle_h_rsc_0_13_AWLOCK;
  input [1:0] twiddle_h_rsc_0_13_AWBURST;
  input [2:0] twiddle_h_rsc_0_13_AWSIZE;
  input [7:0] twiddle_h_rsc_0_13_AWLEN;
  input [11:0] twiddle_h_rsc_0_13_AWADDR;
  input twiddle_h_rsc_0_13_AWID;
  input core_wen;
  input twiddle_h_rsc_0_13_i_oswt;
  output twiddle_h_rsc_0_13_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_13_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_13_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_13_i_biwt;
  wire twiddle_h_rsc_0_13_i_bdwt;
  wire twiddle_h_rsc_0_13_i_bcwt;
  wire twiddle_h_rsc_0_13_i_s_re_core_sct;
  wire [5:0] twiddle_h_rsc_0_13_i_s_raddr;
  wire [31:0] twiddle_h_rsc_0_13_i_s_din;
  wire twiddle_h_rsc_0_13_i_s_rrdy;
  wire twiddle_h_rsc_0_13_i_s_wrdy;
  wire twiddle_h_rsc_0_13_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_13_i_twiddle_h_rsc_0_13_wait_dp_inst_twiddle_h_rsc_0_13_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_13_i_twiddle_h_rsc_0_13_wait_dp_inst_twiddle_h_rsc_0_13_i_s_raddr_core
      = {1'b0 , (twiddle_h_rsc_0_13_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_h_rsc_0_13_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_h_rsc_0_13_AWID),
      .AWADDR(twiddle_h_rsc_0_13_AWADDR),
      .AWLEN(twiddle_h_rsc_0_13_AWLEN),
      .AWSIZE(twiddle_h_rsc_0_13_AWSIZE),
      .AWBURST(twiddle_h_rsc_0_13_AWBURST),
      .AWLOCK(twiddle_h_rsc_0_13_AWLOCK),
      .AWCACHE(twiddle_h_rsc_0_13_AWCACHE),
      .AWPROT(twiddle_h_rsc_0_13_AWPROT),
      .AWQOS(twiddle_h_rsc_0_13_AWQOS),
      .AWREGION(twiddle_h_rsc_0_13_AWREGION),
      .AWUSER(twiddle_h_rsc_0_13_AWUSER),
      .AWVALID(twiddle_h_rsc_0_13_AWVALID),
      .AWREADY(twiddle_h_rsc_0_13_AWREADY),
      .WDATA(twiddle_h_rsc_0_13_WDATA),
      .WSTRB(twiddle_h_rsc_0_13_WSTRB),
      .WLAST(twiddle_h_rsc_0_13_WLAST),
      .WUSER(twiddle_h_rsc_0_13_WUSER),
      .WVALID(twiddle_h_rsc_0_13_WVALID),
      .WREADY(twiddle_h_rsc_0_13_WREADY),
      .BID(twiddle_h_rsc_0_13_BID),
      .BRESP(twiddle_h_rsc_0_13_BRESP),
      .BUSER(twiddle_h_rsc_0_13_BUSER),
      .BVALID(twiddle_h_rsc_0_13_BVALID),
      .BREADY(twiddle_h_rsc_0_13_BREADY),
      .ARID(twiddle_h_rsc_0_13_ARID),
      .ARADDR(twiddle_h_rsc_0_13_ARADDR),
      .ARLEN(twiddle_h_rsc_0_13_ARLEN),
      .ARSIZE(twiddle_h_rsc_0_13_ARSIZE),
      .ARBURST(twiddle_h_rsc_0_13_ARBURST),
      .ARLOCK(twiddle_h_rsc_0_13_ARLOCK),
      .ARCACHE(twiddle_h_rsc_0_13_ARCACHE),
      .ARPROT(twiddle_h_rsc_0_13_ARPROT),
      .ARQOS(twiddle_h_rsc_0_13_ARQOS),
      .ARREGION(twiddle_h_rsc_0_13_ARREGION),
      .ARUSER(twiddle_h_rsc_0_13_ARUSER),
      .ARVALID(twiddle_h_rsc_0_13_ARVALID),
      .ARREADY(twiddle_h_rsc_0_13_ARREADY),
      .RID(twiddle_h_rsc_0_13_RID),
      .RDATA(twiddle_h_rsc_0_13_RDATA),
      .RRESP(twiddle_h_rsc_0_13_RRESP),
      .RLAST(twiddle_h_rsc_0_13_RLAST),
      .RUSER(twiddle_h_rsc_0_13_RUSER),
      .RVALID(twiddle_h_rsc_0_13_RVALID),
      .RREADY(twiddle_h_rsc_0_13_RREADY),
      .s_re(twiddle_h_rsc_0_13_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_h_rsc_0_13_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_h_rsc_0_13_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_h_rsc_0_13_i_s_rrdy),
      .s_wrdy(twiddle_h_rsc_0_13_i_s_wrdy),
      .is_idle(twiddle_h_rsc_0_13_is_idle),
      .tr_write_done(twiddle_h_rsc_0_13_tr_write_done),
      .s_tdone(twiddle_h_rsc_0_13_s_tdone)
    );
  peaseNTT_core_twiddle_h_rsc_0_13_i_twiddle_h_rsc_0_13_wait_ctrl peaseNTT_core_twiddle_h_rsc_0_13_i_twiddle_h_rsc_0_13_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_h_rsc_0_13_i_oswt(twiddle_h_rsc_0_13_i_oswt),
      .twiddle_h_rsc_0_13_i_biwt(twiddle_h_rsc_0_13_i_biwt),
      .twiddle_h_rsc_0_13_i_bdwt(twiddle_h_rsc_0_13_i_bdwt),
      .twiddle_h_rsc_0_13_i_bcwt(twiddle_h_rsc_0_13_i_bcwt),
      .twiddle_h_rsc_0_13_i_s_re_core_sct(twiddle_h_rsc_0_13_i_s_re_core_sct),
      .twiddle_h_rsc_0_13_i_s_rrdy(twiddle_h_rsc_0_13_i_s_rrdy)
    );
  peaseNTT_core_twiddle_h_rsc_0_13_i_twiddle_h_rsc_0_13_wait_dp peaseNTT_core_twiddle_h_rsc_0_13_i_twiddle_h_rsc_0_13_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_13_i_oswt(twiddle_h_rsc_0_13_i_oswt),
      .twiddle_h_rsc_0_13_i_wen_comp(twiddle_h_rsc_0_13_i_wen_comp),
      .twiddle_h_rsc_0_13_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_13_i_twiddle_h_rsc_0_13_wait_dp_inst_twiddle_h_rsc_0_13_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_13_i_s_din_mxwt(twiddle_h_rsc_0_13_i_s_din_mxwt),
      .twiddle_h_rsc_0_13_i_biwt(twiddle_h_rsc_0_13_i_biwt),
      .twiddle_h_rsc_0_13_i_bdwt(twiddle_h_rsc_0_13_i_bdwt),
      .twiddle_h_rsc_0_13_i_bcwt(twiddle_h_rsc_0_13_i_bcwt),
      .twiddle_h_rsc_0_13_i_s_raddr(twiddle_h_rsc_0_13_i_s_raddr),
      .twiddle_h_rsc_0_13_i_s_raddr_core_sct(twiddle_h_rsc_0_13_i_s_re_core_sct),
      .twiddle_h_rsc_0_13_i_s_din(twiddle_h_rsc_0_13_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_12_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_12_i (
  clk, rst, twiddle_h_rsc_0_12_s_tdone, twiddle_h_rsc_0_12_tr_write_done, twiddle_h_rsc_0_12_RREADY,
      twiddle_h_rsc_0_12_RVALID, twiddle_h_rsc_0_12_RUSER, twiddle_h_rsc_0_12_RLAST,
      twiddle_h_rsc_0_12_RRESP, twiddle_h_rsc_0_12_RDATA, twiddle_h_rsc_0_12_RID,
      twiddle_h_rsc_0_12_ARREADY, twiddle_h_rsc_0_12_ARVALID, twiddle_h_rsc_0_12_ARUSER,
      twiddle_h_rsc_0_12_ARREGION, twiddle_h_rsc_0_12_ARQOS, twiddle_h_rsc_0_12_ARPROT,
      twiddle_h_rsc_0_12_ARCACHE, twiddle_h_rsc_0_12_ARLOCK, twiddle_h_rsc_0_12_ARBURST,
      twiddle_h_rsc_0_12_ARSIZE, twiddle_h_rsc_0_12_ARLEN, twiddle_h_rsc_0_12_ARADDR,
      twiddle_h_rsc_0_12_ARID, twiddle_h_rsc_0_12_BREADY, twiddle_h_rsc_0_12_BVALID,
      twiddle_h_rsc_0_12_BUSER, twiddle_h_rsc_0_12_BRESP, twiddle_h_rsc_0_12_BID,
      twiddle_h_rsc_0_12_WREADY, twiddle_h_rsc_0_12_WVALID, twiddle_h_rsc_0_12_WUSER,
      twiddle_h_rsc_0_12_WLAST, twiddle_h_rsc_0_12_WSTRB, twiddle_h_rsc_0_12_WDATA,
      twiddle_h_rsc_0_12_AWREADY, twiddle_h_rsc_0_12_AWVALID, twiddle_h_rsc_0_12_AWUSER,
      twiddle_h_rsc_0_12_AWREGION, twiddle_h_rsc_0_12_AWQOS, twiddle_h_rsc_0_12_AWPROT,
      twiddle_h_rsc_0_12_AWCACHE, twiddle_h_rsc_0_12_AWLOCK, twiddle_h_rsc_0_12_AWBURST,
      twiddle_h_rsc_0_12_AWSIZE, twiddle_h_rsc_0_12_AWLEN, twiddle_h_rsc_0_12_AWADDR,
      twiddle_h_rsc_0_12_AWID, core_wen, twiddle_h_rsc_0_12_i_oswt, twiddle_h_rsc_0_12_i_wen_comp,
      twiddle_h_rsc_0_12_i_s_raddr_core, twiddle_h_rsc_0_12_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_12_s_tdone;
  input twiddle_h_rsc_0_12_tr_write_done;
  input twiddle_h_rsc_0_12_RREADY;
  output twiddle_h_rsc_0_12_RVALID;
  output twiddle_h_rsc_0_12_RUSER;
  output twiddle_h_rsc_0_12_RLAST;
  output [1:0] twiddle_h_rsc_0_12_RRESP;
  output [31:0] twiddle_h_rsc_0_12_RDATA;
  output twiddle_h_rsc_0_12_RID;
  output twiddle_h_rsc_0_12_ARREADY;
  input twiddle_h_rsc_0_12_ARVALID;
  input twiddle_h_rsc_0_12_ARUSER;
  input [3:0] twiddle_h_rsc_0_12_ARREGION;
  input [3:0] twiddle_h_rsc_0_12_ARQOS;
  input [2:0] twiddle_h_rsc_0_12_ARPROT;
  input [3:0] twiddle_h_rsc_0_12_ARCACHE;
  input twiddle_h_rsc_0_12_ARLOCK;
  input [1:0] twiddle_h_rsc_0_12_ARBURST;
  input [2:0] twiddle_h_rsc_0_12_ARSIZE;
  input [7:0] twiddle_h_rsc_0_12_ARLEN;
  input [11:0] twiddle_h_rsc_0_12_ARADDR;
  input twiddle_h_rsc_0_12_ARID;
  input twiddle_h_rsc_0_12_BREADY;
  output twiddle_h_rsc_0_12_BVALID;
  output twiddle_h_rsc_0_12_BUSER;
  output [1:0] twiddle_h_rsc_0_12_BRESP;
  output twiddle_h_rsc_0_12_BID;
  output twiddle_h_rsc_0_12_WREADY;
  input twiddle_h_rsc_0_12_WVALID;
  input twiddle_h_rsc_0_12_WUSER;
  input twiddle_h_rsc_0_12_WLAST;
  input [3:0] twiddle_h_rsc_0_12_WSTRB;
  input [31:0] twiddle_h_rsc_0_12_WDATA;
  output twiddle_h_rsc_0_12_AWREADY;
  input twiddle_h_rsc_0_12_AWVALID;
  input twiddle_h_rsc_0_12_AWUSER;
  input [3:0] twiddle_h_rsc_0_12_AWREGION;
  input [3:0] twiddle_h_rsc_0_12_AWQOS;
  input [2:0] twiddle_h_rsc_0_12_AWPROT;
  input [3:0] twiddle_h_rsc_0_12_AWCACHE;
  input twiddle_h_rsc_0_12_AWLOCK;
  input [1:0] twiddle_h_rsc_0_12_AWBURST;
  input [2:0] twiddle_h_rsc_0_12_AWSIZE;
  input [7:0] twiddle_h_rsc_0_12_AWLEN;
  input [11:0] twiddle_h_rsc_0_12_AWADDR;
  input twiddle_h_rsc_0_12_AWID;
  input core_wen;
  input twiddle_h_rsc_0_12_i_oswt;
  output twiddle_h_rsc_0_12_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_12_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_12_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_12_i_biwt;
  wire twiddle_h_rsc_0_12_i_bdwt;
  wire twiddle_h_rsc_0_12_i_bcwt;
  wire twiddle_h_rsc_0_12_i_s_re_core_sct;
  wire [5:0] twiddle_h_rsc_0_12_i_s_raddr;
  wire [31:0] twiddle_h_rsc_0_12_i_s_din;
  wire twiddle_h_rsc_0_12_i_s_rrdy;
  wire twiddle_h_rsc_0_12_i_s_wrdy;
  wire twiddle_h_rsc_0_12_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_12_i_twiddle_h_rsc_0_12_wait_dp_inst_twiddle_h_rsc_0_12_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_12_i_twiddle_h_rsc_0_12_wait_dp_inst_twiddle_h_rsc_0_12_i_s_raddr_core
      = {1'b0 , (twiddle_h_rsc_0_12_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_h_rsc_0_12_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_h_rsc_0_12_AWID),
      .AWADDR(twiddle_h_rsc_0_12_AWADDR),
      .AWLEN(twiddle_h_rsc_0_12_AWLEN),
      .AWSIZE(twiddle_h_rsc_0_12_AWSIZE),
      .AWBURST(twiddle_h_rsc_0_12_AWBURST),
      .AWLOCK(twiddle_h_rsc_0_12_AWLOCK),
      .AWCACHE(twiddle_h_rsc_0_12_AWCACHE),
      .AWPROT(twiddle_h_rsc_0_12_AWPROT),
      .AWQOS(twiddle_h_rsc_0_12_AWQOS),
      .AWREGION(twiddle_h_rsc_0_12_AWREGION),
      .AWUSER(twiddle_h_rsc_0_12_AWUSER),
      .AWVALID(twiddle_h_rsc_0_12_AWVALID),
      .AWREADY(twiddle_h_rsc_0_12_AWREADY),
      .WDATA(twiddle_h_rsc_0_12_WDATA),
      .WSTRB(twiddle_h_rsc_0_12_WSTRB),
      .WLAST(twiddle_h_rsc_0_12_WLAST),
      .WUSER(twiddle_h_rsc_0_12_WUSER),
      .WVALID(twiddle_h_rsc_0_12_WVALID),
      .WREADY(twiddle_h_rsc_0_12_WREADY),
      .BID(twiddle_h_rsc_0_12_BID),
      .BRESP(twiddle_h_rsc_0_12_BRESP),
      .BUSER(twiddle_h_rsc_0_12_BUSER),
      .BVALID(twiddle_h_rsc_0_12_BVALID),
      .BREADY(twiddle_h_rsc_0_12_BREADY),
      .ARID(twiddle_h_rsc_0_12_ARID),
      .ARADDR(twiddle_h_rsc_0_12_ARADDR),
      .ARLEN(twiddle_h_rsc_0_12_ARLEN),
      .ARSIZE(twiddle_h_rsc_0_12_ARSIZE),
      .ARBURST(twiddle_h_rsc_0_12_ARBURST),
      .ARLOCK(twiddle_h_rsc_0_12_ARLOCK),
      .ARCACHE(twiddle_h_rsc_0_12_ARCACHE),
      .ARPROT(twiddle_h_rsc_0_12_ARPROT),
      .ARQOS(twiddle_h_rsc_0_12_ARQOS),
      .ARREGION(twiddle_h_rsc_0_12_ARREGION),
      .ARUSER(twiddle_h_rsc_0_12_ARUSER),
      .ARVALID(twiddle_h_rsc_0_12_ARVALID),
      .ARREADY(twiddle_h_rsc_0_12_ARREADY),
      .RID(twiddle_h_rsc_0_12_RID),
      .RDATA(twiddle_h_rsc_0_12_RDATA),
      .RRESP(twiddle_h_rsc_0_12_RRESP),
      .RLAST(twiddle_h_rsc_0_12_RLAST),
      .RUSER(twiddle_h_rsc_0_12_RUSER),
      .RVALID(twiddle_h_rsc_0_12_RVALID),
      .RREADY(twiddle_h_rsc_0_12_RREADY),
      .s_re(twiddle_h_rsc_0_12_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_h_rsc_0_12_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_h_rsc_0_12_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_h_rsc_0_12_i_s_rrdy),
      .s_wrdy(twiddle_h_rsc_0_12_i_s_wrdy),
      .is_idle(twiddle_h_rsc_0_12_is_idle),
      .tr_write_done(twiddle_h_rsc_0_12_tr_write_done),
      .s_tdone(twiddle_h_rsc_0_12_s_tdone)
    );
  peaseNTT_core_twiddle_h_rsc_0_12_i_twiddle_h_rsc_0_12_wait_ctrl peaseNTT_core_twiddle_h_rsc_0_12_i_twiddle_h_rsc_0_12_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_h_rsc_0_12_i_oswt(twiddle_h_rsc_0_12_i_oswt),
      .twiddle_h_rsc_0_12_i_biwt(twiddle_h_rsc_0_12_i_biwt),
      .twiddle_h_rsc_0_12_i_bdwt(twiddle_h_rsc_0_12_i_bdwt),
      .twiddle_h_rsc_0_12_i_bcwt(twiddle_h_rsc_0_12_i_bcwt),
      .twiddle_h_rsc_0_12_i_s_re_core_sct(twiddle_h_rsc_0_12_i_s_re_core_sct),
      .twiddle_h_rsc_0_12_i_s_rrdy(twiddle_h_rsc_0_12_i_s_rrdy)
    );
  peaseNTT_core_twiddle_h_rsc_0_12_i_twiddle_h_rsc_0_12_wait_dp peaseNTT_core_twiddle_h_rsc_0_12_i_twiddle_h_rsc_0_12_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_12_i_oswt(twiddle_h_rsc_0_12_i_oswt),
      .twiddle_h_rsc_0_12_i_wen_comp(twiddle_h_rsc_0_12_i_wen_comp),
      .twiddle_h_rsc_0_12_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_12_i_twiddle_h_rsc_0_12_wait_dp_inst_twiddle_h_rsc_0_12_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_12_i_s_din_mxwt(twiddle_h_rsc_0_12_i_s_din_mxwt),
      .twiddle_h_rsc_0_12_i_biwt(twiddle_h_rsc_0_12_i_biwt),
      .twiddle_h_rsc_0_12_i_bdwt(twiddle_h_rsc_0_12_i_bdwt),
      .twiddle_h_rsc_0_12_i_bcwt(twiddle_h_rsc_0_12_i_bcwt),
      .twiddle_h_rsc_0_12_i_s_raddr(twiddle_h_rsc_0_12_i_s_raddr),
      .twiddle_h_rsc_0_12_i_s_raddr_core_sct(twiddle_h_rsc_0_12_i_s_re_core_sct),
      .twiddle_h_rsc_0_12_i_s_din(twiddle_h_rsc_0_12_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_11_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_11_i (
  clk, rst, twiddle_h_rsc_0_11_s_tdone, twiddle_h_rsc_0_11_tr_write_done, twiddle_h_rsc_0_11_RREADY,
      twiddle_h_rsc_0_11_RVALID, twiddle_h_rsc_0_11_RUSER, twiddle_h_rsc_0_11_RLAST,
      twiddle_h_rsc_0_11_RRESP, twiddle_h_rsc_0_11_RDATA, twiddle_h_rsc_0_11_RID,
      twiddle_h_rsc_0_11_ARREADY, twiddle_h_rsc_0_11_ARVALID, twiddle_h_rsc_0_11_ARUSER,
      twiddle_h_rsc_0_11_ARREGION, twiddle_h_rsc_0_11_ARQOS, twiddle_h_rsc_0_11_ARPROT,
      twiddle_h_rsc_0_11_ARCACHE, twiddle_h_rsc_0_11_ARLOCK, twiddle_h_rsc_0_11_ARBURST,
      twiddle_h_rsc_0_11_ARSIZE, twiddle_h_rsc_0_11_ARLEN, twiddle_h_rsc_0_11_ARADDR,
      twiddle_h_rsc_0_11_ARID, twiddle_h_rsc_0_11_BREADY, twiddle_h_rsc_0_11_BVALID,
      twiddle_h_rsc_0_11_BUSER, twiddle_h_rsc_0_11_BRESP, twiddle_h_rsc_0_11_BID,
      twiddle_h_rsc_0_11_WREADY, twiddle_h_rsc_0_11_WVALID, twiddle_h_rsc_0_11_WUSER,
      twiddle_h_rsc_0_11_WLAST, twiddle_h_rsc_0_11_WSTRB, twiddle_h_rsc_0_11_WDATA,
      twiddle_h_rsc_0_11_AWREADY, twiddle_h_rsc_0_11_AWVALID, twiddle_h_rsc_0_11_AWUSER,
      twiddle_h_rsc_0_11_AWREGION, twiddle_h_rsc_0_11_AWQOS, twiddle_h_rsc_0_11_AWPROT,
      twiddle_h_rsc_0_11_AWCACHE, twiddle_h_rsc_0_11_AWLOCK, twiddle_h_rsc_0_11_AWBURST,
      twiddle_h_rsc_0_11_AWSIZE, twiddle_h_rsc_0_11_AWLEN, twiddle_h_rsc_0_11_AWADDR,
      twiddle_h_rsc_0_11_AWID, core_wen, twiddle_h_rsc_0_11_i_oswt, twiddle_h_rsc_0_11_i_wen_comp,
      twiddle_h_rsc_0_11_i_s_raddr_core, twiddle_h_rsc_0_11_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_11_s_tdone;
  input twiddle_h_rsc_0_11_tr_write_done;
  input twiddle_h_rsc_0_11_RREADY;
  output twiddle_h_rsc_0_11_RVALID;
  output twiddle_h_rsc_0_11_RUSER;
  output twiddle_h_rsc_0_11_RLAST;
  output [1:0] twiddle_h_rsc_0_11_RRESP;
  output [31:0] twiddle_h_rsc_0_11_RDATA;
  output twiddle_h_rsc_0_11_RID;
  output twiddle_h_rsc_0_11_ARREADY;
  input twiddle_h_rsc_0_11_ARVALID;
  input twiddle_h_rsc_0_11_ARUSER;
  input [3:0] twiddle_h_rsc_0_11_ARREGION;
  input [3:0] twiddle_h_rsc_0_11_ARQOS;
  input [2:0] twiddle_h_rsc_0_11_ARPROT;
  input [3:0] twiddle_h_rsc_0_11_ARCACHE;
  input twiddle_h_rsc_0_11_ARLOCK;
  input [1:0] twiddle_h_rsc_0_11_ARBURST;
  input [2:0] twiddle_h_rsc_0_11_ARSIZE;
  input [7:0] twiddle_h_rsc_0_11_ARLEN;
  input [11:0] twiddle_h_rsc_0_11_ARADDR;
  input twiddle_h_rsc_0_11_ARID;
  input twiddle_h_rsc_0_11_BREADY;
  output twiddle_h_rsc_0_11_BVALID;
  output twiddle_h_rsc_0_11_BUSER;
  output [1:0] twiddle_h_rsc_0_11_BRESP;
  output twiddle_h_rsc_0_11_BID;
  output twiddle_h_rsc_0_11_WREADY;
  input twiddle_h_rsc_0_11_WVALID;
  input twiddle_h_rsc_0_11_WUSER;
  input twiddle_h_rsc_0_11_WLAST;
  input [3:0] twiddle_h_rsc_0_11_WSTRB;
  input [31:0] twiddle_h_rsc_0_11_WDATA;
  output twiddle_h_rsc_0_11_AWREADY;
  input twiddle_h_rsc_0_11_AWVALID;
  input twiddle_h_rsc_0_11_AWUSER;
  input [3:0] twiddle_h_rsc_0_11_AWREGION;
  input [3:0] twiddle_h_rsc_0_11_AWQOS;
  input [2:0] twiddle_h_rsc_0_11_AWPROT;
  input [3:0] twiddle_h_rsc_0_11_AWCACHE;
  input twiddle_h_rsc_0_11_AWLOCK;
  input [1:0] twiddle_h_rsc_0_11_AWBURST;
  input [2:0] twiddle_h_rsc_0_11_AWSIZE;
  input [7:0] twiddle_h_rsc_0_11_AWLEN;
  input [11:0] twiddle_h_rsc_0_11_AWADDR;
  input twiddle_h_rsc_0_11_AWID;
  input core_wen;
  input twiddle_h_rsc_0_11_i_oswt;
  output twiddle_h_rsc_0_11_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_11_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_11_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_11_i_biwt;
  wire twiddle_h_rsc_0_11_i_bdwt;
  wire twiddle_h_rsc_0_11_i_bcwt;
  wire twiddle_h_rsc_0_11_i_s_re_core_sct;
  wire [5:0] twiddle_h_rsc_0_11_i_s_raddr;
  wire [31:0] twiddle_h_rsc_0_11_i_s_din;
  wire twiddle_h_rsc_0_11_i_s_rrdy;
  wire twiddle_h_rsc_0_11_i_s_wrdy;
  wire twiddle_h_rsc_0_11_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_11_i_twiddle_h_rsc_0_11_wait_dp_inst_twiddle_h_rsc_0_11_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_11_i_twiddle_h_rsc_0_11_wait_dp_inst_twiddle_h_rsc_0_11_i_s_raddr_core
      = {1'b0 , (twiddle_h_rsc_0_11_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_h_rsc_0_11_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_h_rsc_0_11_AWID),
      .AWADDR(twiddle_h_rsc_0_11_AWADDR),
      .AWLEN(twiddle_h_rsc_0_11_AWLEN),
      .AWSIZE(twiddle_h_rsc_0_11_AWSIZE),
      .AWBURST(twiddle_h_rsc_0_11_AWBURST),
      .AWLOCK(twiddle_h_rsc_0_11_AWLOCK),
      .AWCACHE(twiddle_h_rsc_0_11_AWCACHE),
      .AWPROT(twiddle_h_rsc_0_11_AWPROT),
      .AWQOS(twiddle_h_rsc_0_11_AWQOS),
      .AWREGION(twiddle_h_rsc_0_11_AWREGION),
      .AWUSER(twiddle_h_rsc_0_11_AWUSER),
      .AWVALID(twiddle_h_rsc_0_11_AWVALID),
      .AWREADY(twiddle_h_rsc_0_11_AWREADY),
      .WDATA(twiddle_h_rsc_0_11_WDATA),
      .WSTRB(twiddle_h_rsc_0_11_WSTRB),
      .WLAST(twiddle_h_rsc_0_11_WLAST),
      .WUSER(twiddle_h_rsc_0_11_WUSER),
      .WVALID(twiddle_h_rsc_0_11_WVALID),
      .WREADY(twiddle_h_rsc_0_11_WREADY),
      .BID(twiddle_h_rsc_0_11_BID),
      .BRESP(twiddle_h_rsc_0_11_BRESP),
      .BUSER(twiddle_h_rsc_0_11_BUSER),
      .BVALID(twiddle_h_rsc_0_11_BVALID),
      .BREADY(twiddle_h_rsc_0_11_BREADY),
      .ARID(twiddle_h_rsc_0_11_ARID),
      .ARADDR(twiddle_h_rsc_0_11_ARADDR),
      .ARLEN(twiddle_h_rsc_0_11_ARLEN),
      .ARSIZE(twiddle_h_rsc_0_11_ARSIZE),
      .ARBURST(twiddle_h_rsc_0_11_ARBURST),
      .ARLOCK(twiddle_h_rsc_0_11_ARLOCK),
      .ARCACHE(twiddle_h_rsc_0_11_ARCACHE),
      .ARPROT(twiddle_h_rsc_0_11_ARPROT),
      .ARQOS(twiddle_h_rsc_0_11_ARQOS),
      .ARREGION(twiddle_h_rsc_0_11_ARREGION),
      .ARUSER(twiddle_h_rsc_0_11_ARUSER),
      .ARVALID(twiddle_h_rsc_0_11_ARVALID),
      .ARREADY(twiddle_h_rsc_0_11_ARREADY),
      .RID(twiddle_h_rsc_0_11_RID),
      .RDATA(twiddle_h_rsc_0_11_RDATA),
      .RRESP(twiddle_h_rsc_0_11_RRESP),
      .RLAST(twiddle_h_rsc_0_11_RLAST),
      .RUSER(twiddle_h_rsc_0_11_RUSER),
      .RVALID(twiddle_h_rsc_0_11_RVALID),
      .RREADY(twiddle_h_rsc_0_11_RREADY),
      .s_re(twiddle_h_rsc_0_11_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_h_rsc_0_11_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_h_rsc_0_11_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_h_rsc_0_11_i_s_rrdy),
      .s_wrdy(twiddle_h_rsc_0_11_i_s_wrdy),
      .is_idle(twiddle_h_rsc_0_11_is_idle),
      .tr_write_done(twiddle_h_rsc_0_11_tr_write_done),
      .s_tdone(twiddle_h_rsc_0_11_s_tdone)
    );
  peaseNTT_core_twiddle_h_rsc_0_11_i_twiddle_h_rsc_0_11_wait_ctrl peaseNTT_core_twiddle_h_rsc_0_11_i_twiddle_h_rsc_0_11_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_h_rsc_0_11_i_oswt(twiddle_h_rsc_0_11_i_oswt),
      .twiddle_h_rsc_0_11_i_biwt(twiddle_h_rsc_0_11_i_biwt),
      .twiddle_h_rsc_0_11_i_bdwt(twiddle_h_rsc_0_11_i_bdwt),
      .twiddle_h_rsc_0_11_i_bcwt(twiddle_h_rsc_0_11_i_bcwt),
      .twiddle_h_rsc_0_11_i_s_re_core_sct(twiddle_h_rsc_0_11_i_s_re_core_sct),
      .twiddle_h_rsc_0_11_i_s_rrdy(twiddle_h_rsc_0_11_i_s_rrdy)
    );
  peaseNTT_core_twiddle_h_rsc_0_11_i_twiddle_h_rsc_0_11_wait_dp peaseNTT_core_twiddle_h_rsc_0_11_i_twiddle_h_rsc_0_11_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_11_i_oswt(twiddle_h_rsc_0_11_i_oswt),
      .twiddle_h_rsc_0_11_i_wen_comp(twiddle_h_rsc_0_11_i_wen_comp),
      .twiddle_h_rsc_0_11_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_11_i_twiddle_h_rsc_0_11_wait_dp_inst_twiddle_h_rsc_0_11_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_11_i_s_din_mxwt(twiddle_h_rsc_0_11_i_s_din_mxwt),
      .twiddle_h_rsc_0_11_i_biwt(twiddle_h_rsc_0_11_i_biwt),
      .twiddle_h_rsc_0_11_i_bdwt(twiddle_h_rsc_0_11_i_bdwt),
      .twiddle_h_rsc_0_11_i_bcwt(twiddle_h_rsc_0_11_i_bcwt),
      .twiddle_h_rsc_0_11_i_s_raddr(twiddle_h_rsc_0_11_i_s_raddr),
      .twiddle_h_rsc_0_11_i_s_raddr_core_sct(twiddle_h_rsc_0_11_i_s_re_core_sct),
      .twiddle_h_rsc_0_11_i_s_din(twiddle_h_rsc_0_11_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_10_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_10_i (
  clk, rst, twiddle_h_rsc_0_10_s_tdone, twiddle_h_rsc_0_10_tr_write_done, twiddle_h_rsc_0_10_RREADY,
      twiddle_h_rsc_0_10_RVALID, twiddle_h_rsc_0_10_RUSER, twiddle_h_rsc_0_10_RLAST,
      twiddle_h_rsc_0_10_RRESP, twiddle_h_rsc_0_10_RDATA, twiddle_h_rsc_0_10_RID,
      twiddle_h_rsc_0_10_ARREADY, twiddle_h_rsc_0_10_ARVALID, twiddle_h_rsc_0_10_ARUSER,
      twiddle_h_rsc_0_10_ARREGION, twiddle_h_rsc_0_10_ARQOS, twiddle_h_rsc_0_10_ARPROT,
      twiddle_h_rsc_0_10_ARCACHE, twiddle_h_rsc_0_10_ARLOCK, twiddle_h_rsc_0_10_ARBURST,
      twiddle_h_rsc_0_10_ARSIZE, twiddle_h_rsc_0_10_ARLEN, twiddle_h_rsc_0_10_ARADDR,
      twiddle_h_rsc_0_10_ARID, twiddle_h_rsc_0_10_BREADY, twiddle_h_rsc_0_10_BVALID,
      twiddle_h_rsc_0_10_BUSER, twiddle_h_rsc_0_10_BRESP, twiddle_h_rsc_0_10_BID,
      twiddle_h_rsc_0_10_WREADY, twiddle_h_rsc_0_10_WVALID, twiddle_h_rsc_0_10_WUSER,
      twiddle_h_rsc_0_10_WLAST, twiddle_h_rsc_0_10_WSTRB, twiddle_h_rsc_0_10_WDATA,
      twiddle_h_rsc_0_10_AWREADY, twiddle_h_rsc_0_10_AWVALID, twiddle_h_rsc_0_10_AWUSER,
      twiddle_h_rsc_0_10_AWREGION, twiddle_h_rsc_0_10_AWQOS, twiddle_h_rsc_0_10_AWPROT,
      twiddle_h_rsc_0_10_AWCACHE, twiddle_h_rsc_0_10_AWLOCK, twiddle_h_rsc_0_10_AWBURST,
      twiddle_h_rsc_0_10_AWSIZE, twiddle_h_rsc_0_10_AWLEN, twiddle_h_rsc_0_10_AWADDR,
      twiddle_h_rsc_0_10_AWID, core_wen, twiddle_h_rsc_0_10_i_oswt, twiddle_h_rsc_0_10_i_wen_comp,
      twiddle_h_rsc_0_10_i_s_raddr_core, twiddle_h_rsc_0_10_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_10_s_tdone;
  input twiddle_h_rsc_0_10_tr_write_done;
  input twiddle_h_rsc_0_10_RREADY;
  output twiddle_h_rsc_0_10_RVALID;
  output twiddle_h_rsc_0_10_RUSER;
  output twiddle_h_rsc_0_10_RLAST;
  output [1:0] twiddle_h_rsc_0_10_RRESP;
  output [31:0] twiddle_h_rsc_0_10_RDATA;
  output twiddle_h_rsc_0_10_RID;
  output twiddle_h_rsc_0_10_ARREADY;
  input twiddle_h_rsc_0_10_ARVALID;
  input twiddle_h_rsc_0_10_ARUSER;
  input [3:0] twiddle_h_rsc_0_10_ARREGION;
  input [3:0] twiddle_h_rsc_0_10_ARQOS;
  input [2:0] twiddle_h_rsc_0_10_ARPROT;
  input [3:0] twiddle_h_rsc_0_10_ARCACHE;
  input twiddle_h_rsc_0_10_ARLOCK;
  input [1:0] twiddle_h_rsc_0_10_ARBURST;
  input [2:0] twiddle_h_rsc_0_10_ARSIZE;
  input [7:0] twiddle_h_rsc_0_10_ARLEN;
  input [11:0] twiddle_h_rsc_0_10_ARADDR;
  input twiddle_h_rsc_0_10_ARID;
  input twiddle_h_rsc_0_10_BREADY;
  output twiddle_h_rsc_0_10_BVALID;
  output twiddle_h_rsc_0_10_BUSER;
  output [1:0] twiddle_h_rsc_0_10_BRESP;
  output twiddle_h_rsc_0_10_BID;
  output twiddle_h_rsc_0_10_WREADY;
  input twiddle_h_rsc_0_10_WVALID;
  input twiddle_h_rsc_0_10_WUSER;
  input twiddle_h_rsc_0_10_WLAST;
  input [3:0] twiddle_h_rsc_0_10_WSTRB;
  input [31:0] twiddle_h_rsc_0_10_WDATA;
  output twiddle_h_rsc_0_10_AWREADY;
  input twiddle_h_rsc_0_10_AWVALID;
  input twiddle_h_rsc_0_10_AWUSER;
  input [3:0] twiddle_h_rsc_0_10_AWREGION;
  input [3:0] twiddle_h_rsc_0_10_AWQOS;
  input [2:0] twiddle_h_rsc_0_10_AWPROT;
  input [3:0] twiddle_h_rsc_0_10_AWCACHE;
  input twiddle_h_rsc_0_10_AWLOCK;
  input [1:0] twiddle_h_rsc_0_10_AWBURST;
  input [2:0] twiddle_h_rsc_0_10_AWSIZE;
  input [7:0] twiddle_h_rsc_0_10_AWLEN;
  input [11:0] twiddle_h_rsc_0_10_AWADDR;
  input twiddle_h_rsc_0_10_AWID;
  input core_wen;
  input twiddle_h_rsc_0_10_i_oswt;
  output twiddle_h_rsc_0_10_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_10_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_10_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_10_i_biwt;
  wire twiddle_h_rsc_0_10_i_bdwt;
  wire twiddle_h_rsc_0_10_i_bcwt;
  wire twiddle_h_rsc_0_10_i_s_re_core_sct;
  wire [5:0] twiddle_h_rsc_0_10_i_s_raddr;
  wire [31:0] twiddle_h_rsc_0_10_i_s_din;
  wire twiddle_h_rsc_0_10_i_s_rrdy;
  wire twiddle_h_rsc_0_10_i_s_wrdy;
  wire twiddle_h_rsc_0_10_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_10_i_twiddle_h_rsc_0_10_wait_dp_inst_twiddle_h_rsc_0_10_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_10_i_twiddle_h_rsc_0_10_wait_dp_inst_twiddle_h_rsc_0_10_i_s_raddr_core
      = {1'b0 , (twiddle_h_rsc_0_10_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_h_rsc_0_10_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_h_rsc_0_10_AWID),
      .AWADDR(twiddle_h_rsc_0_10_AWADDR),
      .AWLEN(twiddle_h_rsc_0_10_AWLEN),
      .AWSIZE(twiddle_h_rsc_0_10_AWSIZE),
      .AWBURST(twiddle_h_rsc_0_10_AWBURST),
      .AWLOCK(twiddle_h_rsc_0_10_AWLOCK),
      .AWCACHE(twiddle_h_rsc_0_10_AWCACHE),
      .AWPROT(twiddle_h_rsc_0_10_AWPROT),
      .AWQOS(twiddle_h_rsc_0_10_AWQOS),
      .AWREGION(twiddle_h_rsc_0_10_AWREGION),
      .AWUSER(twiddle_h_rsc_0_10_AWUSER),
      .AWVALID(twiddle_h_rsc_0_10_AWVALID),
      .AWREADY(twiddle_h_rsc_0_10_AWREADY),
      .WDATA(twiddle_h_rsc_0_10_WDATA),
      .WSTRB(twiddle_h_rsc_0_10_WSTRB),
      .WLAST(twiddle_h_rsc_0_10_WLAST),
      .WUSER(twiddle_h_rsc_0_10_WUSER),
      .WVALID(twiddle_h_rsc_0_10_WVALID),
      .WREADY(twiddle_h_rsc_0_10_WREADY),
      .BID(twiddle_h_rsc_0_10_BID),
      .BRESP(twiddle_h_rsc_0_10_BRESP),
      .BUSER(twiddle_h_rsc_0_10_BUSER),
      .BVALID(twiddle_h_rsc_0_10_BVALID),
      .BREADY(twiddle_h_rsc_0_10_BREADY),
      .ARID(twiddle_h_rsc_0_10_ARID),
      .ARADDR(twiddle_h_rsc_0_10_ARADDR),
      .ARLEN(twiddle_h_rsc_0_10_ARLEN),
      .ARSIZE(twiddle_h_rsc_0_10_ARSIZE),
      .ARBURST(twiddle_h_rsc_0_10_ARBURST),
      .ARLOCK(twiddle_h_rsc_0_10_ARLOCK),
      .ARCACHE(twiddle_h_rsc_0_10_ARCACHE),
      .ARPROT(twiddle_h_rsc_0_10_ARPROT),
      .ARQOS(twiddle_h_rsc_0_10_ARQOS),
      .ARREGION(twiddle_h_rsc_0_10_ARREGION),
      .ARUSER(twiddle_h_rsc_0_10_ARUSER),
      .ARVALID(twiddle_h_rsc_0_10_ARVALID),
      .ARREADY(twiddle_h_rsc_0_10_ARREADY),
      .RID(twiddle_h_rsc_0_10_RID),
      .RDATA(twiddle_h_rsc_0_10_RDATA),
      .RRESP(twiddle_h_rsc_0_10_RRESP),
      .RLAST(twiddle_h_rsc_0_10_RLAST),
      .RUSER(twiddle_h_rsc_0_10_RUSER),
      .RVALID(twiddle_h_rsc_0_10_RVALID),
      .RREADY(twiddle_h_rsc_0_10_RREADY),
      .s_re(twiddle_h_rsc_0_10_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_h_rsc_0_10_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_h_rsc_0_10_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_h_rsc_0_10_i_s_rrdy),
      .s_wrdy(twiddle_h_rsc_0_10_i_s_wrdy),
      .is_idle(twiddle_h_rsc_0_10_is_idle),
      .tr_write_done(twiddle_h_rsc_0_10_tr_write_done),
      .s_tdone(twiddle_h_rsc_0_10_s_tdone)
    );
  peaseNTT_core_twiddle_h_rsc_0_10_i_twiddle_h_rsc_0_10_wait_ctrl peaseNTT_core_twiddle_h_rsc_0_10_i_twiddle_h_rsc_0_10_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_h_rsc_0_10_i_oswt(twiddle_h_rsc_0_10_i_oswt),
      .twiddle_h_rsc_0_10_i_biwt(twiddle_h_rsc_0_10_i_biwt),
      .twiddle_h_rsc_0_10_i_bdwt(twiddle_h_rsc_0_10_i_bdwt),
      .twiddle_h_rsc_0_10_i_bcwt(twiddle_h_rsc_0_10_i_bcwt),
      .twiddle_h_rsc_0_10_i_s_re_core_sct(twiddle_h_rsc_0_10_i_s_re_core_sct),
      .twiddle_h_rsc_0_10_i_s_rrdy(twiddle_h_rsc_0_10_i_s_rrdy)
    );
  peaseNTT_core_twiddle_h_rsc_0_10_i_twiddle_h_rsc_0_10_wait_dp peaseNTT_core_twiddle_h_rsc_0_10_i_twiddle_h_rsc_0_10_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_10_i_oswt(twiddle_h_rsc_0_10_i_oswt),
      .twiddle_h_rsc_0_10_i_wen_comp(twiddle_h_rsc_0_10_i_wen_comp),
      .twiddle_h_rsc_0_10_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_10_i_twiddle_h_rsc_0_10_wait_dp_inst_twiddle_h_rsc_0_10_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_10_i_s_din_mxwt(twiddle_h_rsc_0_10_i_s_din_mxwt),
      .twiddle_h_rsc_0_10_i_biwt(twiddle_h_rsc_0_10_i_biwt),
      .twiddle_h_rsc_0_10_i_bdwt(twiddle_h_rsc_0_10_i_bdwt),
      .twiddle_h_rsc_0_10_i_bcwt(twiddle_h_rsc_0_10_i_bcwt),
      .twiddle_h_rsc_0_10_i_s_raddr(twiddle_h_rsc_0_10_i_s_raddr),
      .twiddle_h_rsc_0_10_i_s_raddr_core_sct(twiddle_h_rsc_0_10_i_s_re_core_sct),
      .twiddle_h_rsc_0_10_i_s_din(twiddle_h_rsc_0_10_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_9_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_9_i (
  clk, rst, twiddle_h_rsc_0_9_s_tdone, twiddle_h_rsc_0_9_tr_write_done, twiddle_h_rsc_0_9_RREADY,
      twiddle_h_rsc_0_9_RVALID, twiddle_h_rsc_0_9_RUSER, twiddle_h_rsc_0_9_RLAST,
      twiddle_h_rsc_0_9_RRESP, twiddle_h_rsc_0_9_RDATA, twiddle_h_rsc_0_9_RID, twiddle_h_rsc_0_9_ARREADY,
      twiddle_h_rsc_0_9_ARVALID, twiddle_h_rsc_0_9_ARUSER, twiddle_h_rsc_0_9_ARREGION,
      twiddle_h_rsc_0_9_ARQOS, twiddle_h_rsc_0_9_ARPROT, twiddle_h_rsc_0_9_ARCACHE,
      twiddle_h_rsc_0_9_ARLOCK, twiddle_h_rsc_0_9_ARBURST, twiddle_h_rsc_0_9_ARSIZE,
      twiddle_h_rsc_0_9_ARLEN, twiddle_h_rsc_0_9_ARADDR, twiddle_h_rsc_0_9_ARID,
      twiddle_h_rsc_0_9_BREADY, twiddle_h_rsc_0_9_BVALID, twiddle_h_rsc_0_9_BUSER,
      twiddle_h_rsc_0_9_BRESP, twiddle_h_rsc_0_9_BID, twiddle_h_rsc_0_9_WREADY, twiddle_h_rsc_0_9_WVALID,
      twiddle_h_rsc_0_9_WUSER, twiddle_h_rsc_0_9_WLAST, twiddle_h_rsc_0_9_WSTRB,
      twiddle_h_rsc_0_9_WDATA, twiddle_h_rsc_0_9_AWREADY, twiddle_h_rsc_0_9_AWVALID,
      twiddle_h_rsc_0_9_AWUSER, twiddle_h_rsc_0_9_AWREGION, twiddle_h_rsc_0_9_AWQOS,
      twiddle_h_rsc_0_9_AWPROT, twiddle_h_rsc_0_9_AWCACHE, twiddle_h_rsc_0_9_AWLOCK,
      twiddle_h_rsc_0_9_AWBURST, twiddle_h_rsc_0_9_AWSIZE, twiddle_h_rsc_0_9_AWLEN,
      twiddle_h_rsc_0_9_AWADDR, twiddle_h_rsc_0_9_AWID, core_wen, twiddle_h_rsc_0_9_i_oswt,
      twiddle_h_rsc_0_9_i_wen_comp, twiddle_h_rsc_0_9_i_s_raddr_core, twiddle_h_rsc_0_9_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_9_s_tdone;
  input twiddle_h_rsc_0_9_tr_write_done;
  input twiddle_h_rsc_0_9_RREADY;
  output twiddle_h_rsc_0_9_RVALID;
  output twiddle_h_rsc_0_9_RUSER;
  output twiddle_h_rsc_0_9_RLAST;
  output [1:0] twiddle_h_rsc_0_9_RRESP;
  output [31:0] twiddle_h_rsc_0_9_RDATA;
  output twiddle_h_rsc_0_9_RID;
  output twiddle_h_rsc_0_9_ARREADY;
  input twiddle_h_rsc_0_9_ARVALID;
  input twiddle_h_rsc_0_9_ARUSER;
  input [3:0] twiddle_h_rsc_0_9_ARREGION;
  input [3:0] twiddle_h_rsc_0_9_ARQOS;
  input [2:0] twiddle_h_rsc_0_9_ARPROT;
  input [3:0] twiddle_h_rsc_0_9_ARCACHE;
  input twiddle_h_rsc_0_9_ARLOCK;
  input [1:0] twiddle_h_rsc_0_9_ARBURST;
  input [2:0] twiddle_h_rsc_0_9_ARSIZE;
  input [7:0] twiddle_h_rsc_0_9_ARLEN;
  input [11:0] twiddle_h_rsc_0_9_ARADDR;
  input twiddle_h_rsc_0_9_ARID;
  input twiddle_h_rsc_0_9_BREADY;
  output twiddle_h_rsc_0_9_BVALID;
  output twiddle_h_rsc_0_9_BUSER;
  output [1:0] twiddle_h_rsc_0_9_BRESP;
  output twiddle_h_rsc_0_9_BID;
  output twiddle_h_rsc_0_9_WREADY;
  input twiddle_h_rsc_0_9_WVALID;
  input twiddle_h_rsc_0_9_WUSER;
  input twiddle_h_rsc_0_9_WLAST;
  input [3:0] twiddle_h_rsc_0_9_WSTRB;
  input [31:0] twiddle_h_rsc_0_9_WDATA;
  output twiddle_h_rsc_0_9_AWREADY;
  input twiddle_h_rsc_0_9_AWVALID;
  input twiddle_h_rsc_0_9_AWUSER;
  input [3:0] twiddle_h_rsc_0_9_AWREGION;
  input [3:0] twiddle_h_rsc_0_9_AWQOS;
  input [2:0] twiddle_h_rsc_0_9_AWPROT;
  input [3:0] twiddle_h_rsc_0_9_AWCACHE;
  input twiddle_h_rsc_0_9_AWLOCK;
  input [1:0] twiddle_h_rsc_0_9_AWBURST;
  input [2:0] twiddle_h_rsc_0_9_AWSIZE;
  input [7:0] twiddle_h_rsc_0_9_AWLEN;
  input [11:0] twiddle_h_rsc_0_9_AWADDR;
  input twiddle_h_rsc_0_9_AWID;
  input core_wen;
  input twiddle_h_rsc_0_9_i_oswt;
  output twiddle_h_rsc_0_9_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_9_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_9_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_9_i_biwt;
  wire twiddle_h_rsc_0_9_i_bdwt;
  wire twiddle_h_rsc_0_9_i_bcwt;
  wire twiddle_h_rsc_0_9_i_s_re_core_sct;
  wire [5:0] twiddle_h_rsc_0_9_i_s_raddr;
  wire [31:0] twiddle_h_rsc_0_9_i_s_din;
  wire twiddle_h_rsc_0_9_i_s_rrdy;
  wire twiddle_h_rsc_0_9_i_s_wrdy;
  wire twiddle_h_rsc_0_9_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_9_i_twiddle_h_rsc_0_9_wait_dp_inst_twiddle_h_rsc_0_9_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_9_i_twiddle_h_rsc_0_9_wait_dp_inst_twiddle_h_rsc_0_9_i_s_raddr_core
      = {1'b0 , (twiddle_h_rsc_0_9_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_h_rsc_0_9_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_h_rsc_0_9_AWID),
      .AWADDR(twiddle_h_rsc_0_9_AWADDR),
      .AWLEN(twiddle_h_rsc_0_9_AWLEN),
      .AWSIZE(twiddle_h_rsc_0_9_AWSIZE),
      .AWBURST(twiddle_h_rsc_0_9_AWBURST),
      .AWLOCK(twiddle_h_rsc_0_9_AWLOCK),
      .AWCACHE(twiddle_h_rsc_0_9_AWCACHE),
      .AWPROT(twiddle_h_rsc_0_9_AWPROT),
      .AWQOS(twiddle_h_rsc_0_9_AWQOS),
      .AWREGION(twiddle_h_rsc_0_9_AWREGION),
      .AWUSER(twiddle_h_rsc_0_9_AWUSER),
      .AWVALID(twiddle_h_rsc_0_9_AWVALID),
      .AWREADY(twiddle_h_rsc_0_9_AWREADY),
      .WDATA(twiddle_h_rsc_0_9_WDATA),
      .WSTRB(twiddle_h_rsc_0_9_WSTRB),
      .WLAST(twiddle_h_rsc_0_9_WLAST),
      .WUSER(twiddle_h_rsc_0_9_WUSER),
      .WVALID(twiddle_h_rsc_0_9_WVALID),
      .WREADY(twiddle_h_rsc_0_9_WREADY),
      .BID(twiddle_h_rsc_0_9_BID),
      .BRESP(twiddle_h_rsc_0_9_BRESP),
      .BUSER(twiddle_h_rsc_0_9_BUSER),
      .BVALID(twiddle_h_rsc_0_9_BVALID),
      .BREADY(twiddle_h_rsc_0_9_BREADY),
      .ARID(twiddle_h_rsc_0_9_ARID),
      .ARADDR(twiddle_h_rsc_0_9_ARADDR),
      .ARLEN(twiddle_h_rsc_0_9_ARLEN),
      .ARSIZE(twiddle_h_rsc_0_9_ARSIZE),
      .ARBURST(twiddle_h_rsc_0_9_ARBURST),
      .ARLOCK(twiddle_h_rsc_0_9_ARLOCK),
      .ARCACHE(twiddle_h_rsc_0_9_ARCACHE),
      .ARPROT(twiddle_h_rsc_0_9_ARPROT),
      .ARQOS(twiddle_h_rsc_0_9_ARQOS),
      .ARREGION(twiddle_h_rsc_0_9_ARREGION),
      .ARUSER(twiddle_h_rsc_0_9_ARUSER),
      .ARVALID(twiddle_h_rsc_0_9_ARVALID),
      .ARREADY(twiddle_h_rsc_0_9_ARREADY),
      .RID(twiddle_h_rsc_0_9_RID),
      .RDATA(twiddle_h_rsc_0_9_RDATA),
      .RRESP(twiddle_h_rsc_0_9_RRESP),
      .RLAST(twiddle_h_rsc_0_9_RLAST),
      .RUSER(twiddle_h_rsc_0_9_RUSER),
      .RVALID(twiddle_h_rsc_0_9_RVALID),
      .RREADY(twiddle_h_rsc_0_9_RREADY),
      .s_re(twiddle_h_rsc_0_9_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_h_rsc_0_9_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_h_rsc_0_9_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_h_rsc_0_9_i_s_rrdy),
      .s_wrdy(twiddle_h_rsc_0_9_i_s_wrdy),
      .is_idle(twiddle_h_rsc_0_9_is_idle),
      .tr_write_done(twiddle_h_rsc_0_9_tr_write_done),
      .s_tdone(twiddle_h_rsc_0_9_s_tdone)
    );
  peaseNTT_core_twiddle_h_rsc_0_9_i_twiddle_h_rsc_0_9_wait_ctrl peaseNTT_core_twiddle_h_rsc_0_9_i_twiddle_h_rsc_0_9_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_h_rsc_0_9_i_oswt(twiddle_h_rsc_0_9_i_oswt),
      .twiddle_h_rsc_0_9_i_biwt(twiddle_h_rsc_0_9_i_biwt),
      .twiddle_h_rsc_0_9_i_bdwt(twiddle_h_rsc_0_9_i_bdwt),
      .twiddle_h_rsc_0_9_i_bcwt(twiddle_h_rsc_0_9_i_bcwt),
      .twiddle_h_rsc_0_9_i_s_re_core_sct(twiddle_h_rsc_0_9_i_s_re_core_sct),
      .twiddle_h_rsc_0_9_i_s_rrdy(twiddle_h_rsc_0_9_i_s_rrdy)
    );
  peaseNTT_core_twiddle_h_rsc_0_9_i_twiddle_h_rsc_0_9_wait_dp peaseNTT_core_twiddle_h_rsc_0_9_i_twiddle_h_rsc_0_9_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_9_i_oswt(twiddle_h_rsc_0_9_i_oswt),
      .twiddle_h_rsc_0_9_i_wen_comp(twiddle_h_rsc_0_9_i_wen_comp),
      .twiddle_h_rsc_0_9_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_9_i_twiddle_h_rsc_0_9_wait_dp_inst_twiddle_h_rsc_0_9_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_9_i_s_din_mxwt(twiddle_h_rsc_0_9_i_s_din_mxwt),
      .twiddle_h_rsc_0_9_i_biwt(twiddle_h_rsc_0_9_i_biwt),
      .twiddle_h_rsc_0_9_i_bdwt(twiddle_h_rsc_0_9_i_bdwt),
      .twiddle_h_rsc_0_9_i_bcwt(twiddle_h_rsc_0_9_i_bcwt),
      .twiddle_h_rsc_0_9_i_s_raddr(twiddle_h_rsc_0_9_i_s_raddr),
      .twiddle_h_rsc_0_9_i_s_raddr_core_sct(twiddle_h_rsc_0_9_i_s_re_core_sct),
      .twiddle_h_rsc_0_9_i_s_din(twiddle_h_rsc_0_9_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_8_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_8_i (
  clk, rst, twiddle_h_rsc_0_8_s_tdone, twiddle_h_rsc_0_8_tr_write_done, twiddle_h_rsc_0_8_RREADY,
      twiddle_h_rsc_0_8_RVALID, twiddle_h_rsc_0_8_RUSER, twiddle_h_rsc_0_8_RLAST,
      twiddle_h_rsc_0_8_RRESP, twiddle_h_rsc_0_8_RDATA, twiddle_h_rsc_0_8_RID, twiddle_h_rsc_0_8_ARREADY,
      twiddle_h_rsc_0_8_ARVALID, twiddle_h_rsc_0_8_ARUSER, twiddle_h_rsc_0_8_ARREGION,
      twiddle_h_rsc_0_8_ARQOS, twiddle_h_rsc_0_8_ARPROT, twiddle_h_rsc_0_8_ARCACHE,
      twiddle_h_rsc_0_8_ARLOCK, twiddle_h_rsc_0_8_ARBURST, twiddle_h_rsc_0_8_ARSIZE,
      twiddle_h_rsc_0_8_ARLEN, twiddle_h_rsc_0_8_ARADDR, twiddle_h_rsc_0_8_ARID,
      twiddle_h_rsc_0_8_BREADY, twiddle_h_rsc_0_8_BVALID, twiddle_h_rsc_0_8_BUSER,
      twiddle_h_rsc_0_8_BRESP, twiddle_h_rsc_0_8_BID, twiddle_h_rsc_0_8_WREADY, twiddle_h_rsc_0_8_WVALID,
      twiddle_h_rsc_0_8_WUSER, twiddle_h_rsc_0_8_WLAST, twiddle_h_rsc_0_8_WSTRB,
      twiddle_h_rsc_0_8_WDATA, twiddle_h_rsc_0_8_AWREADY, twiddle_h_rsc_0_8_AWVALID,
      twiddle_h_rsc_0_8_AWUSER, twiddle_h_rsc_0_8_AWREGION, twiddle_h_rsc_0_8_AWQOS,
      twiddle_h_rsc_0_8_AWPROT, twiddle_h_rsc_0_8_AWCACHE, twiddle_h_rsc_0_8_AWLOCK,
      twiddle_h_rsc_0_8_AWBURST, twiddle_h_rsc_0_8_AWSIZE, twiddle_h_rsc_0_8_AWLEN,
      twiddle_h_rsc_0_8_AWADDR, twiddle_h_rsc_0_8_AWID, core_wen, twiddle_h_rsc_0_8_i_oswt,
      twiddle_h_rsc_0_8_i_wen_comp, twiddle_h_rsc_0_8_i_s_raddr_core, twiddle_h_rsc_0_8_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_8_s_tdone;
  input twiddle_h_rsc_0_8_tr_write_done;
  input twiddle_h_rsc_0_8_RREADY;
  output twiddle_h_rsc_0_8_RVALID;
  output twiddle_h_rsc_0_8_RUSER;
  output twiddle_h_rsc_0_8_RLAST;
  output [1:0] twiddle_h_rsc_0_8_RRESP;
  output [31:0] twiddle_h_rsc_0_8_RDATA;
  output twiddle_h_rsc_0_8_RID;
  output twiddle_h_rsc_0_8_ARREADY;
  input twiddle_h_rsc_0_8_ARVALID;
  input twiddle_h_rsc_0_8_ARUSER;
  input [3:0] twiddle_h_rsc_0_8_ARREGION;
  input [3:0] twiddle_h_rsc_0_8_ARQOS;
  input [2:0] twiddle_h_rsc_0_8_ARPROT;
  input [3:0] twiddle_h_rsc_0_8_ARCACHE;
  input twiddle_h_rsc_0_8_ARLOCK;
  input [1:0] twiddle_h_rsc_0_8_ARBURST;
  input [2:0] twiddle_h_rsc_0_8_ARSIZE;
  input [7:0] twiddle_h_rsc_0_8_ARLEN;
  input [11:0] twiddle_h_rsc_0_8_ARADDR;
  input twiddle_h_rsc_0_8_ARID;
  input twiddle_h_rsc_0_8_BREADY;
  output twiddle_h_rsc_0_8_BVALID;
  output twiddle_h_rsc_0_8_BUSER;
  output [1:0] twiddle_h_rsc_0_8_BRESP;
  output twiddle_h_rsc_0_8_BID;
  output twiddle_h_rsc_0_8_WREADY;
  input twiddle_h_rsc_0_8_WVALID;
  input twiddle_h_rsc_0_8_WUSER;
  input twiddle_h_rsc_0_8_WLAST;
  input [3:0] twiddle_h_rsc_0_8_WSTRB;
  input [31:0] twiddle_h_rsc_0_8_WDATA;
  output twiddle_h_rsc_0_8_AWREADY;
  input twiddle_h_rsc_0_8_AWVALID;
  input twiddle_h_rsc_0_8_AWUSER;
  input [3:0] twiddle_h_rsc_0_8_AWREGION;
  input [3:0] twiddle_h_rsc_0_8_AWQOS;
  input [2:0] twiddle_h_rsc_0_8_AWPROT;
  input [3:0] twiddle_h_rsc_0_8_AWCACHE;
  input twiddle_h_rsc_0_8_AWLOCK;
  input [1:0] twiddle_h_rsc_0_8_AWBURST;
  input [2:0] twiddle_h_rsc_0_8_AWSIZE;
  input [7:0] twiddle_h_rsc_0_8_AWLEN;
  input [11:0] twiddle_h_rsc_0_8_AWADDR;
  input twiddle_h_rsc_0_8_AWID;
  input core_wen;
  input twiddle_h_rsc_0_8_i_oswt;
  output twiddle_h_rsc_0_8_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_8_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_8_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_8_i_biwt;
  wire twiddle_h_rsc_0_8_i_bdwt;
  wire twiddle_h_rsc_0_8_i_bcwt;
  wire twiddle_h_rsc_0_8_i_s_re_core_sct;
  wire [5:0] twiddle_h_rsc_0_8_i_s_raddr;
  wire [31:0] twiddle_h_rsc_0_8_i_s_din;
  wire twiddle_h_rsc_0_8_i_s_rrdy;
  wire twiddle_h_rsc_0_8_i_s_wrdy;
  wire twiddle_h_rsc_0_8_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_8_i_twiddle_h_rsc_0_8_wait_dp_inst_twiddle_h_rsc_0_8_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_8_i_twiddle_h_rsc_0_8_wait_dp_inst_twiddle_h_rsc_0_8_i_s_raddr_core
      = {1'b0 , (twiddle_h_rsc_0_8_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_h_rsc_0_8_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_h_rsc_0_8_AWID),
      .AWADDR(twiddle_h_rsc_0_8_AWADDR),
      .AWLEN(twiddle_h_rsc_0_8_AWLEN),
      .AWSIZE(twiddle_h_rsc_0_8_AWSIZE),
      .AWBURST(twiddle_h_rsc_0_8_AWBURST),
      .AWLOCK(twiddle_h_rsc_0_8_AWLOCK),
      .AWCACHE(twiddle_h_rsc_0_8_AWCACHE),
      .AWPROT(twiddle_h_rsc_0_8_AWPROT),
      .AWQOS(twiddle_h_rsc_0_8_AWQOS),
      .AWREGION(twiddle_h_rsc_0_8_AWREGION),
      .AWUSER(twiddle_h_rsc_0_8_AWUSER),
      .AWVALID(twiddle_h_rsc_0_8_AWVALID),
      .AWREADY(twiddle_h_rsc_0_8_AWREADY),
      .WDATA(twiddle_h_rsc_0_8_WDATA),
      .WSTRB(twiddle_h_rsc_0_8_WSTRB),
      .WLAST(twiddle_h_rsc_0_8_WLAST),
      .WUSER(twiddle_h_rsc_0_8_WUSER),
      .WVALID(twiddle_h_rsc_0_8_WVALID),
      .WREADY(twiddle_h_rsc_0_8_WREADY),
      .BID(twiddle_h_rsc_0_8_BID),
      .BRESP(twiddle_h_rsc_0_8_BRESP),
      .BUSER(twiddle_h_rsc_0_8_BUSER),
      .BVALID(twiddle_h_rsc_0_8_BVALID),
      .BREADY(twiddle_h_rsc_0_8_BREADY),
      .ARID(twiddle_h_rsc_0_8_ARID),
      .ARADDR(twiddle_h_rsc_0_8_ARADDR),
      .ARLEN(twiddle_h_rsc_0_8_ARLEN),
      .ARSIZE(twiddle_h_rsc_0_8_ARSIZE),
      .ARBURST(twiddle_h_rsc_0_8_ARBURST),
      .ARLOCK(twiddle_h_rsc_0_8_ARLOCK),
      .ARCACHE(twiddle_h_rsc_0_8_ARCACHE),
      .ARPROT(twiddle_h_rsc_0_8_ARPROT),
      .ARQOS(twiddle_h_rsc_0_8_ARQOS),
      .ARREGION(twiddle_h_rsc_0_8_ARREGION),
      .ARUSER(twiddle_h_rsc_0_8_ARUSER),
      .ARVALID(twiddle_h_rsc_0_8_ARVALID),
      .ARREADY(twiddle_h_rsc_0_8_ARREADY),
      .RID(twiddle_h_rsc_0_8_RID),
      .RDATA(twiddle_h_rsc_0_8_RDATA),
      .RRESP(twiddle_h_rsc_0_8_RRESP),
      .RLAST(twiddle_h_rsc_0_8_RLAST),
      .RUSER(twiddle_h_rsc_0_8_RUSER),
      .RVALID(twiddle_h_rsc_0_8_RVALID),
      .RREADY(twiddle_h_rsc_0_8_RREADY),
      .s_re(twiddle_h_rsc_0_8_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_h_rsc_0_8_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_h_rsc_0_8_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_h_rsc_0_8_i_s_rrdy),
      .s_wrdy(twiddle_h_rsc_0_8_i_s_wrdy),
      .is_idle(twiddle_h_rsc_0_8_is_idle),
      .tr_write_done(twiddle_h_rsc_0_8_tr_write_done),
      .s_tdone(twiddle_h_rsc_0_8_s_tdone)
    );
  peaseNTT_core_twiddle_h_rsc_0_8_i_twiddle_h_rsc_0_8_wait_ctrl peaseNTT_core_twiddle_h_rsc_0_8_i_twiddle_h_rsc_0_8_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_h_rsc_0_8_i_oswt(twiddle_h_rsc_0_8_i_oswt),
      .twiddle_h_rsc_0_8_i_biwt(twiddle_h_rsc_0_8_i_biwt),
      .twiddle_h_rsc_0_8_i_bdwt(twiddle_h_rsc_0_8_i_bdwt),
      .twiddle_h_rsc_0_8_i_bcwt(twiddle_h_rsc_0_8_i_bcwt),
      .twiddle_h_rsc_0_8_i_s_re_core_sct(twiddle_h_rsc_0_8_i_s_re_core_sct),
      .twiddle_h_rsc_0_8_i_s_rrdy(twiddle_h_rsc_0_8_i_s_rrdy)
    );
  peaseNTT_core_twiddle_h_rsc_0_8_i_twiddle_h_rsc_0_8_wait_dp peaseNTT_core_twiddle_h_rsc_0_8_i_twiddle_h_rsc_0_8_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_8_i_oswt(twiddle_h_rsc_0_8_i_oswt),
      .twiddle_h_rsc_0_8_i_wen_comp(twiddle_h_rsc_0_8_i_wen_comp),
      .twiddle_h_rsc_0_8_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_8_i_twiddle_h_rsc_0_8_wait_dp_inst_twiddle_h_rsc_0_8_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_8_i_s_din_mxwt(twiddle_h_rsc_0_8_i_s_din_mxwt),
      .twiddle_h_rsc_0_8_i_biwt(twiddle_h_rsc_0_8_i_biwt),
      .twiddle_h_rsc_0_8_i_bdwt(twiddle_h_rsc_0_8_i_bdwt),
      .twiddle_h_rsc_0_8_i_bcwt(twiddle_h_rsc_0_8_i_bcwt),
      .twiddle_h_rsc_0_8_i_s_raddr(twiddle_h_rsc_0_8_i_s_raddr),
      .twiddle_h_rsc_0_8_i_s_raddr_core_sct(twiddle_h_rsc_0_8_i_s_re_core_sct),
      .twiddle_h_rsc_0_8_i_s_din(twiddle_h_rsc_0_8_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_7_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_7_i (
  clk, rst, twiddle_h_rsc_0_7_s_tdone, twiddle_h_rsc_0_7_tr_write_done, twiddle_h_rsc_0_7_RREADY,
      twiddle_h_rsc_0_7_RVALID, twiddle_h_rsc_0_7_RUSER, twiddle_h_rsc_0_7_RLAST,
      twiddle_h_rsc_0_7_RRESP, twiddle_h_rsc_0_7_RDATA, twiddle_h_rsc_0_7_RID, twiddle_h_rsc_0_7_ARREADY,
      twiddle_h_rsc_0_7_ARVALID, twiddle_h_rsc_0_7_ARUSER, twiddle_h_rsc_0_7_ARREGION,
      twiddle_h_rsc_0_7_ARQOS, twiddle_h_rsc_0_7_ARPROT, twiddle_h_rsc_0_7_ARCACHE,
      twiddle_h_rsc_0_7_ARLOCK, twiddle_h_rsc_0_7_ARBURST, twiddle_h_rsc_0_7_ARSIZE,
      twiddle_h_rsc_0_7_ARLEN, twiddle_h_rsc_0_7_ARADDR, twiddle_h_rsc_0_7_ARID,
      twiddle_h_rsc_0_7_BREADY, twiddle_h_rsc_0_7_BVALID, twiddle_h_rsc_0_7_BUSER,
      twiddle_h_rsc_0_7_BRESP, twiddle_h_rsc_0_7_BID, twiddle_h_rsc_0_7_WREADY, twiddle_h_rsc_0_7_WVALID,
      twiddle_h_rsc_0_7_WUSER, twiddle_h_rsc_0_7_WLAST, twiddle_h_rsc_0_7_WSTRB,
      twiddle_h_rsc_0_7_WDATA, twiddle_h_rsc_0_7_AWREADY, twiddle_h_rsc_0_7_AWVALID,
      twiddle_h_rsc_0_7_AWUSER, twiddle_h_rsc_0_7_AWREGION, twiddle_h_rsc_0_7_AWQOS,
      twiddle_h_rsc_0_7_AWPROT, twiddle_h_rsc_0_7_AWCACHE, twiddle_h_rsc_0_7_AWLOCK,
      twiddle_h_rsc_0_7_AWBURST, twiddle_h_rsc_0_7_AWSIZE, twiddle_h_rsc_0_7_AWLEN,
      twiddle_h_rsc_0_7_AWADDR, twiddle_h_rsc_0_7_AWID, core_wen, twiddle_h_rsc_0_7_i_oswt,
      twiddle_h_rsc_0_7_i_wen_comp, twiddle_h_rsc_0_7_i_s_raddr_core, twiddle_h_rsc_0_7_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_7_s_tdone;
  input twiddle_h_rsc_0_7_tr_write_done;
  input twiddle_h_rsc_0_7_RREADY;
  output twiddle_h_rsc_0_7_RVALID;
  output twiddle_h_rsc_0_7_RUSER;
  output twiddle_h_rsc_0_7_RLAST;
  output [1:0] twiddle_h_rsc_0_7_RRESP;
  output [31:0] twiddle_h_rsc_0_7_RDATA;
  output twiddle_h_rsc_0_7_RID;
  output twiddle_h_rsc_0_7_ARREADY;
  input twiddle_h_rsc_0_7_ARVALID;
  input twiddle_h_rsc_0_7_ARUSER;
  input [3:0] twiddle_h_rsc_0_7_ARREGION;
  input [3:0] twiddle_h_rsc_0_7_ARQOS;
  input [2:0] twiddle_h_rsc_0_7_ARPROT;
  input [3:0] twiddle_h_rsc_0_7_ARCACHE;
  input twiddle_h_rsc_0_7_ARLOCK;
  input [1:0] twiddle_h_rsc_0_7_ARBURST;
  input [2:0] twiddle_h_rsc_0_7_ARSIZE;
  input [7:0] twiddle_h_rsc_0_7_ARLEN;
  input [11:0] twiddle_h_rsc_0_7_ARADDR;
  input twiddle_h_rsc_0_7_ARID;
  input twiddle_h_rsc_0_7_BREADY;
  output twiddle_h_rsc_0_7_BVALID;
  output twiddle_h_rsc_0_7_BUSER;
  output [1:0] twiddle_h_rsc_0_7_BRESP;
  output twiddle_h_rsc_0_7_BID;
  output twiddle_h_rsc_0_7_WREADY;
  input twiddle_h_rsc_0_7_WVALID;
  input twiddle_h_rsc_0_7_WUSER;
  input twiddle_h_rsc_0_7_WLAST;
  input [3:0] twiddle_h_rsc_0_7_WSTRB;
  input [31:0] twiddle_h_rsc_0_7_WDATA;
  output twiddle_h_rsc_0_7_AWREADY;
  input twiddle_h_rsc_0_7_AWVALID;
  input twiddle_h_rsc_0_7_AWUSER;
  input [3:0] twiddle_h_rsc_0_7_AWREGION;
  input [3:0] twiddle_h_rsc_0_7_AWQOS;
  input [2:0] twiddle_h_rsc_0_7_AWPROT;
  input [3:0] twiddle_h_rsc_0_7_AWCACHE;
  input twiddle_h_rsc_0_7_AWLOCK;
  input [1:0] twiddle_h_rsc_0_7_AWBURST;
  input [2:0] twiddle_h_rsc_0_7_AWSIZE;
  input [7:0] twiddle_h_rsc_0_7_AWLEN;
  input [11:0] twiddle_h_rsc_0_7_AWADDR;
  input twiddle_h_rsc_0_7_AWID;
  input core_wen;
  input twiddle_h_rsc_0_7_i_oswt;
  output twiddle_h_rsc_0_7_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_7_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_7_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_7_i_biwt;
  wire twiddle_h_rsc_0_7_i_bdwt;
  wire twiddle_h_rsc_0_7_i_bcwt;
  wire twiddle_h_rsc_0_7_i_s_re_core_sct;
  wire [5:0] twiddle_h_rsc_0_7_i_s_raddr;
  wire [31:0] twiddle_h_rsc_0_7_i_s_din;
  wire twiddle_h_rsc_0_7_i_s_rrdy;
  wire twiddle_h_rsc_0_7_i_s_wrdy;
  wire twiddle_h_rsc_0_7_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_7_i_twiddle_h_rsc_0_7_wait_dp_inst_twiddle_h_rsc_0_7_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_7_i_twiddle_h_rsc_0_7_wait_dp_inst_twiddle_h_rsc_0_7_i_s_raddr_core
      = {1'b0 , (twiddle_h_rsc_0_7_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_h_rsc_0_7_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_h_rsc_0_7_AWID),
      .AWADDR(twiddle_h_rsc_0_7_AWADDR),
      .AWLEN(twiddle_h_rsc_0_7_AWLEN),
      .AWSIZE(twiddle_h_rsc_0_7_AWSIZE),
      .AWBURST(twiddle_h_rsc_0_7_AWBURST),
      .AWLOCK(twiddle_h_rsc_0_7_AWLOCK),
      .AWCACHE(twiddle_h_rsc_0_7_AWCACHE),
      .AWPROT(twiddle_h_rsc_0_7_AWPROT),
      .AWQOS(twiddle_h_rsc_0_7_AWQOS),
      .AWREGION(twiddle_h_rsc_0_7_AWREGION),
      .AWUSER(twiddle_h_rsc_0_7_AWUSER),
      .AWVALID(twiddle_h_rsc_0_7_AWVALID),
      .AWREADY(twiddle_h_rsc_0_7_AWREADY),
      .WDATA(twiddle_h_rsc_0_7_WDATA),
      .WSTRB(twiddle_h_rsc_0_7_WSTRB),
      .WLAST(twiddle_h_rsc_0_7_WLAST),
      .WUSER(twiddle_h_rsc_0_7_WUSER),
      .WVALID(twiddle_h_rsc_0_7_WVALID),
      .WREADY(twiddle_h_rsc_0_7_WREADY),
      .BID(twiddle_h_rsc_0_7_BID),
      .BRESP(twiddle_h_rsc_0_7_BRESP),
      .BUSER(twiddle_h_rsc_0_7_BUSER),
      .BVALID(twiddle_h_rsc_0_7_BVALID),
      .BREADY(twiddle_h_rsc_0_7_BREADY),
      .ARID(twiddle_h_rsc_0_7_ARID),
      .ARADDR(twiddle_h_rsc_0_7_ARADDR),
      .ARLEN(twiddle_h_rsc_0_7_ARLEN),
      .ARSIZE(twiddle_h_rsc_0_7_ARSIZE),
      .ARBURST(twiddle_h_rsc_0_7_ARBURST),
      .ARLOCK(twiddle_h_rsc_0_7_ARLOCK),
      .ARCACHE(twiddle_h_rsc_0_7_ARCACHE),
      .ARPROT(twiddle_h_rsc_0_7_ARPROT),
      .ARQOS(twiddle_h_rsc_0_7_ARQOS),
      .ARREGION(twiddle_h_rsc_0_7_ARREGION),
      .ARUSER(twiddle_h_rsc_0_7_ARUSER),
      .ARVALID(twiddle_h_rsc_0_7_ARVALID),
      .ARREADY(twiddle_h_rsc_0_7_ARREADY),
      .RID(twiddle_h_rsc_0_7_RID),
      .RDATA(twiddle_h_rsc_0_7_RDATA),
      .RRESP(twiddle_h_rsc_0_7_RRESP),
      .RLAST(twiddle_h_rsc_0_7_RLAST),
      .RUSER(twiddle_h_rsc_0_7_RUSER),
      .RVALID(twiddle_h_rsc_0_7_RVALID),
      .RREADY(twiddle_h_rsc_0_7_RREADY),
      .s_re(twiddle_h_rsc_0_7_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_h_rsc_0_7_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_h_rsc_0_7_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_h_rsc_0_7_i_s_rrdy),
      .s_wrdy(twiddle_h_rsc_0_7_i_s_wrdy),
      .is_idle(twiddle_h_rsc_0_7_is_idle),
      .tr_write_done(twiddle_h_rsc_0_7_tr_write_done),
      .s_tdone(twiddle_h_rsc_0_7_s_tdone)
    );
  peaseNTT_core_twiddle_h_rsc_0_7_i_twiddle_h_rsc_0_7_wait_ctrl peaseNTT_core_twiddle_h_rsc_0_7_i_twiddle_h_rsc_0_7_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_h_rsc_0_7_i_oswt(twiddle_h_rsc_0_7_i_oswt),
      .twiddle_h_rsc_0_7_i_biwt(twiddle_h_rsc_0_7_i_biwt),
      .twiddle_h_rsc_0_7_i_bdwt(twiddle_h_rsc_0_7_i_bdwt),
      .twiddle_h_rsc_0_7_i_bcwt(twiddle_h_rsc_0_7_i_bcwt),
      .twiddle_h_rsc_0_7_i_s_re_core_sct(twiddle_h_rsc_0_7_i_s_re_core_sct),
      .twiddle_h_rsc_0_7_i_s_rrdy(twiddle_h_rsc_0_7_i_s_rrdy)
    );
  peaseNTT_core_twiddle_h_rsc_0_7_i_twiddle_h_rsc_0_7_wait_dp peaseNTT_core_twiddle_h_rsc_0_7_i_twiddle_h_rsc_0_7_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_7_i_oswt(twiddle_h_rsc_0_7_i_oswt),
      .twiddle_h_rsc_0_7_i_wen_comp(twiddle_h_rsc_0_7_i_wen_comp),
      .twiddle_h_rsc_0_7_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_7_i_twiddle_h_rsc_0_7_wait_dp_inst_twiddle_h_rsc_0_7_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_7_i_s_din_mxwt(twiddle_h_rsc_0_7_i_s_din_mxwt),
      .twiddle_h_rsc_0_7_i_biwt(twiddle_h_rsc_0_7_i_biwt),
      .twiddle_h_rsc_0_7_i_bdwt(twiddle_h_rsc_0_7_i_bdwt),
      .twiddle_h_rsc_0_7_i_bcwt(twiddle_h_rsc_0_7_i_bcwt),
      .twiddle_h_rsc_0_7_i_s_raddr(twiddle_h_rsc_0_7_i_s_raddr),
      .twiddle_h_rsc_0_7_i_s_raddr_core_sct(twiddle_h_rsc_0_7_i_s_re_core_sct),
      .twiddle_h_rsc_0_7_i_s_din(twiddle_h_rsc_0_7_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_6_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_6_i (
  clk, rst, twiddle_h_rsc_0_6_s_tdone, twiddle_h_rsc_0_6_tr_write_done, twiddle_h_rsc_0_6_RREADY,
      twiddle_h_rsc_0_6_RVALID, twiddle_h_rsc_0_6_RUSER, twiddle_h_rsc_0_6_RLAST,
      twiddle_h_rsc_0_6_RRESP, twiddle_h_rsc_0_6_RDATA, twiddle_h_rsc_0_6_RID, twiddle_h_rsc_0_6_ARREADY,
      twiddle_h_rsc_0_6_ARVALID, twiddle_h_rsc_0_6_ARUSER, twiddle_h_rsc_0_6_ARREGION,
      twiddle_h_rsc_0_6_ARQOS, twiddle_h_rsc_0_6_ARPROT, twiddle_h_rsc_0_6_ARCACHE,
      twiddle_h_rsc_0_6_ARLOCK, twiddle_h_rsc_0_6_ARBURST, twiddle_h_rsc_0_6_ARSIZE,
      twiddle_h_rsc_0_6_ARLEN, twiddle_h_rsc_0_6_ARADDR, twiddle_h_rsc_0_6_ARID,
      twiddle_h_rsc_0_6_BREADY, twiddle_h_rsc_0_6_BVALID, twiddle_h_rsc_0_6_BUSER,
      twiddle_h_rsc_0_6_BRESP, twiddle_h_rsc_0_6_BID, twiddle_h_rsc_0_6_WREADY, twiddle_h_rsc_0_6_WVALID,
      twiddle_h_rsc_0_6_WUSER, twiddle_h_rsc_0_6_WLAST, twiddle_h_rsc_0_6_WSTRB,
      twiddle_h_rsc_0_6_WDATA, twiddle_h_rsc_0_6_AWREADY, twiddle_h_rsc_0_6_AWVALID,
      twiddle_h_rsc_0_6_AWUSER, twiddle_h_rsc_0_6_AWREGION, twiddle_h_rsc_0_6_AWQOS,
      twiddle_h_rsc_0_6_AWPROT, twiddle_h_rsc_0_6_AWCACHE, twiddle_h_rsc_0_6_AWLOCK,
      twiddle_h_rsc_0_6_AWBURST, twiddle_h_rsc_0_6_AWSIZE, twiddle_h_rsc_0_6_AWLEN,
      twiddle_h_rsc_0_6_AWADDR, twiddle_h_rsc_0_6_AWID, core_wen, twiddle_h_rsc_0_6_i_oswt,
      twiddle_h_rsc_0_6_i_wen_comp, twiddle_h_rsc_0_6_i_s_raddr_core, twiddle_h_rsc_0_6_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_6_s_tdone;
  input twiddle_h_rsc_0_6_tr_write_done;
  input twiddle_h_rsc_0_6_RREADY;
  output twiddle_h_rsc_0_6_RVALID;
  output twiddle_h_rsc_0_6_RUSER;
  output twiddle_h_rsc_0_6_RLAST;
  output [1:0] twiddle_h_rsc_0_6_RRESP;
  output [31:0] twiddle_h_rsc_0_6_RDATA;
  output twiddle_h_rsc_0_6_RID;
  output twiddle_h_rsc_0_6_ARREADY;
  input twiddle_h_rsc_0_6_ARVALID;
  input twiddle_h_rsc_0_6_ARUSER;
  input [3:0] twiddle_h_rsc_0_6_ARREGION;
  input [3:0] twiddle_h_rsc_0_6_ARQOS;
  input [2:0] twiddle_h_rsc_0_6_ARPROT;
  input [3:0] twiddle_h_rsc_0_6_ARCACHE;
  input twiddle_h_rsc_0_6_ARLOCK;
  input [1:0] twiddle_h_rsc_0_6_ARBURST;
  input [2:0] twiddle_h_rsc_0_6_ARSIZE;
  input [7:0] twiddle_h_rsc_0_6_ARLEN;
  input [11:0] twiddle_h_rsc_0_6_ARADDR;
  input twiddle_h_rsc_0_6_ARID;
  input twiddle_h_rsc_0_6_BREADY;
  output twiddle_h_rsc_0_6_BVALID;
  output twiddle_h_rsc_0_6_BUSER;
  output [1:0] twiddle_h_rsc_0_6_BRESP;
  output twiddle_h_rsc_0_6_BID;
  output twiddle_h_rsc_0_6_WREADY;
  input twiddle_h_rsc_0_6_WVALID;
  input twiddle_h_rsc_0_6_WUSER;
  input twiddle_h_rsc_0_6_WLAST;
  input [3:0] twiddle_h_rsc_0_6_WSTRB;
  input [31:0] twiddle_h_rsc_0_6_WDATA;
  output twiddle_h_rsc_0_6_AWREADY;
  input twiddle_h_rsc_0_6_AWVALID;
  input twiddle_h_rsc_0_6_AWUSER;
  input [3:0] twiddle_h_rsc_0_6_AWREGION;
  input [3:0] twiddle_h_rsc_0_6_AWQOS;
  input [2:0] twiddle_h_rsc_0_6_AWPROT;
  input [3:0] twiddle_h_rsc_0_6_AWCACHE;
  input twiddle_h_rsc_0_6_AWLOCK;
  input [1:0] twiddle_h_rsc_0_6_AWBURST;
  input [2:0] twiddle_h_rsc_0_6_AWSIZE;
  input [7:0] twiddle_h_rsc_0_6_AWLEN;
  input [11:0] twiddle_h_rsc_0_6_AWADDR;
  input twiddle_h_rsc_0_6_AWID;
  input core_wen;
  input twiddle_h_rsc_0_6_i_oswt;
  output twiddle_h_rsc_0_6_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_6_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_6_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_6_i_biwt;
  wire twiddle_h_rsc_0_6_i_bdwt;
  wire twiddle_h_rsc_0_6_i_bcwt;
  wire twiddle_h_rsc_0_6_i_s_re_core_sct;
  wire [5:0] twiddle_h_rsc_0_6_i_s_raddr;
  wire [31:0] twiddle_h_rsc_0_6_i_s_din;
  wire twiddle_h_rsc_0_6_i_s_rrdy;
  wire twiddle_h_rsc_0_6_i_s_wrdy;
  wire twiddle_h_rsc_0_6_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_6_i_twiddle_h_rsc_0_6_wait_dp_inst_twiddle_h_rsc_0_6_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_6_i_twiddle_h_rsc_0_6_wait_dp_inst_twiddle_h_rsc_0_6_i_s_raddr_core
      = {1'b0 , (twiddle_h_rsc_0_6_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_h_rsc_0_6_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_h_rsc_0_6_AWID),
      .AWADDR(twiddle_h_rsc_0_6_AWADDR),
      .AWLEN(twiddle_h_rsc_0_6_AWLEN),
      .AWSIZE(twiddle_h_rsc_0_6_AWSIZE),
      .AWBURST(twiddle_h_rsc_0_6_AWBURST),
      .AWLOCK(twiddle_h_rsc_0_6_AWLOCK),
      .AWCACHE(twiddle_h_rsc_0_6_AWCACHE),
      .AWPROT(twiddle_h_rsc_0_6_AWPROT),
      .AWQOS(twiddle_h_rsc_0_6_AWQOS),
      .AWREGION(twiddle_h_rsc_0_6_AWREGION),
      .AWUSER(twiddle_h_rsc_0_6_AWUSER),
      .AWVALID(twiddle_h_rsc_0_6_AWVALID),
      .AWREADY(twiddle_h_rsc_0_6_AWREADY),
      .WDATA(twiddle_h_rsc_0_6_WDATA),
      .WSTRB(twiddle_h_rsc_0_6_WSTRB),
      .WLAST(twiddle_h_rsc_0_6_WLAST),
      .WUSER(twiddle_h_rsc_0_6_WUSER),
      .WVALID(twiddle_h_rsc_0_6_WVALID),
      .WREADY(twiddle_h_rsc_0_6_WREADY),
      .BID(twiddle_h_rsc_0_6_BID),
      .BRESP(twiddle_h_rsc_0_6_BRESP),
      .BUSER(twiddle_h_rsc_0_6_BUSER),
      .BVALID(twiddle_h_rsc_0_6_BVALID),
      .BREADY(twiddle_h_rsc_0_6_BREADY),
      .ARID(twiddle_h_rsc_0_6_ARID),
      .ARADDR(twiddle_h_rsc_0_6_ARADDR),
      .ARLEN(twiddle_h_rsc_0_6_ARLEN),
      .ARSIZE(twiddle_h_rsc_0_6_ARSIZE),
      .ARBURST(twiddle_h_rsc_0_6_ARBURST),
      .ARLOCK(twiddle_h_rsc_0_6_ARLOCK),
      .ARCACHE(twiddle_h_rsc_0_6_ARCACHE),
      .ARPROT(twiddle_h_rsc_0_6_ARPROT),
      .ARQOS(twiddle_h_rsc_0_6_ARQOS),
      .ARREGION(twiddle_h_rsc_0_6_ARREGION),
      .ARUSER(twiddle_h_rsc_0_6_ARUSER),
      .ARVALID(twiddle_h_rsc_0_6_ARVALID),
      .ARREADY(twiddle_h_rsc_0_6_ARREADY),
      .RID(twiddle_h_rsc_0_6_RID),
      .RDATA(twiddle_h_rsc_0_6_RDATA),
      .RRESP(twiddle_h_rsc_0_6_RRESP),
      .RLAST(twiddle_h_rsc_0_6_RLAST),
      .RUSER(twiddle_h_rsc_0_6_RUSER),
      .RVALID(twiddle_h_rsc_0_6_RVALID),
      .RREADY(twiddle_h_rsc_0_6_RREADY),
      .s_re(twiddle_h_rsc_0_6_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_h_rsc_0_6_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_h_rsc_0_6_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_h_rsc_0_6_i_s_rrdy),
      .s_wrdy(twiddle_h_rsc_0_6_i_s_wrdy),
      .is_idle(twiddle_h_rsc_0_6_is_idle),
      .tr_write_done(twiddle_h_rsc_0_6_tr_write_done),
      .s_tdone(twiddle_h_rsc_0_6_s_tdone)
    );
  peaseNTT_core_twiddle_h_rsc_0_6_i_twiddle_h_rsc_0_6_wait_ctrl peaseNTT_core_twiddle_h_rsc_0_6_i_twiddle_h_rsc_0_6_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_h_rsc_0_6_i_oswt(twiddle_h_rsc_0_6_i_oswt),
      .twiddle_h_rsc_0_6_i_biwt(twiddle_h_rsc_0_6_i_biwt),
      .twiddle_h_rsc_0_6_i_bdwt(twiddle_h_rsc_0_6_i_bdwt),
      .twiddle_h_rsc_0_6_i_bcwt(twiddle_h_rsc_0_6_i_bcwt),
      .twiddle_h_rsc_0_6_i_s_re_core_sct(twiddle_h_rsc_0_6_i_s_re_core_sct),
      .twiddle_h_rsc_0_6_i_s_rrdy(twiddle_h_rsc_0_6_i_s_rrdy)
    );
  peaseNTT_core_twiddle_h_rsc_0_6_i_twiddle_h_rsc_0_6_wait_dp peaseNTT_core_twiddle_h_rsc_0_6_i_twiddle_h_rsc_0_6_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_6_i_oswt(twiddle_h_rsc_0_6_i_oswt),
      .twiddle_h_rsc_0_6_i_wen_comp(twiddle_h_rsc_0_6_i_wen_comp),
      .twiddle_h_rsc_0_6_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_6_i_twiddle_h_rsc_0_6_wait_dp_inst_twiddle_h_rsc_0_6_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_6_i_s_din_mxwt(twiddle_h_rsc_0_6_i_s_din_mxwt),
      .twiddle_h_rsc_0_6_i_biwt(twiddle_h_rsc_0_6_i_biwt),
      .twiddle_h_rsc_0_6_i_bdwt(twiddle_h_rsc_0_6_i_bdwt),
      .twiddle_h_rsc_0_6_i_bcwt(twiddle_h_rsc_0_6_i_bcwt),
      .twiddle_h_rsc_0_6_i_s_raddr(twiddle_h_rsc_0_6_i_s_raddr),
      .twiddle_h_rsc_0_6_i_s_raddr_core_sct(twiddle_h_rsc_0_6_i_s_re_core_sct),
      .twiddle_h_rsc_0_6_i_s_din(twiddle_h_rsc_0_6_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_5_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_5_i (
  clk, rst, twiddle_h_rsc_0_5_s_tdone, twiddle_h_rsc_0_5_tr_write_done, twiddle_h_rsc_0_5_RREADY,
      twiddle_h_rsc_0_5_RVALID, twiddle_h_rsc_0_5_RUSER, twiddle_h_rsc_0_5_RLAST,
      twiddle_h_rsc_0_5_RRESP, twiddle_h_rsc_0_5_RDATA, twiddle_h_rsc_0_5_RID, twiddle_h_rsc_0_5_ARREADY,
      twiddle_h_rsc_0_5_ARVALID, twiddle_h_rsc_0_5_ARUSER, twiddle_h_rsc_0_5_ARREGION,
      twiddle_h_rsc_0_5_ARQOS, twiddle_h_rsc_0_5_ARPROT, twiddle_h_rsc_0_5_ARCACHE,
      twiddle_h_rsc_0_5_ARLOCK, twiddle_h_rsc_0_5_ARBURST, twiddle_h_rsc_0_5_ARSIZE,
      twiddle_h_rsc_0_5_ARLEN, twiddle_h_rsc_0_5_ARADDR, twiddle_h_rsc_0_5_ARID,
      twiddle_h_rsc_0_5_BREADY, twiddle_h_rsc_0_5_BVALID, twiddle_h_rsc_0_5_BUSER,
      twiddle_h_rsc_0_5_BRESP, twiddle_h_rsc_0_5_BID, twiddle_h_rsc_0_5_WREADY, twiddle_h_rsc_0_5_WVALID,
      twiddle_h_rsc_0_5_WUSER, twiddle_h_rsc_0_5_WLAST, twiddle_h_rsc_0_5_WSTRB,
      twiddle_h_rsc_0_5_WDATA, twiddle_h_rsc_0_5_AWREADY, twiddle_h_rsc_0_5_AWVALID,
      twiddle_h_rsc_0_5_AWUSER, twiddle_h_rsc_0_5_AWREGION, twiddle_h_rsc_0_5_AWQOS,
      twiddle_h_rsc_0_5_AWPROT, twiddle_h_rsc_0_5_AWCACHE, twiddle_h_rsc_0_5_AWLOCK,
      twiddle_h_rsc_0_5_AWBURST, twiddle_h_rsc_0_5_AWSIZE, twiddle_h_rsc_0_5_AWLEN,
      twiddle_h_rsc_0_5_AWADDR, twiddle_h_rsc_0_5_AWID, core_wen, twiddle_h_rsc_0_5_i_oswt,
      twiddle_h_rsc_0_5_i_wen_comp, twiddle_h_rsc_0_5_i_s_raddr_core, twiddle_h_rsc_0_5_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_5_s_tdone;
  input twiddle_h_rsc_0_5_tr_write_done;
  input twiddle_h_rsc_0_5_RREADY;
  output twiddle_h_rsc_0_5_RVALID;
  output twiddle_h_rsc_0_5_RUSER;
  output twiddle_h_rsc_0_5_RLAST;
  output [1:0] twiddle_h_rsc_0_5_RRESP;
  output [31:0] twiddle_h_rsc_0_5_RDATA;
  output twiddle_h_rsc_0_5_RID;
  output twiddle_h_rsc_0_5_ARREADY;
  input twiddle_h_rsc_0_5_ARVALID;
  input twiddle_h_rsc_0_5_ARUSER;
  input [3:0] twiddle_h_rsc_0_5_ARREGION;
  input [3:0] twiddle_h_rsc_0_5_ARQOS;
  input [2:0] twiddle_h_rsc_0_5_ARPROT;
  input [3:0] twiddle_h_rsc_0_5_ARCACHE;
  input twiddle_h_rsc_0_5_ARLOCK;
  input [1:0] twiddle_h_rsc_0_5_ARBURST;
  input [2:0] twiddle_h_rsc_0_5_ARSIZE;
  input [7:0] twiddle_h_rsc_0_5_ARLEN;
  input [11:0] twiddle_h_rsc_0_5_ARADDR;
  input twiddle_h_rsc_0_5_ARID;
  input twiddle_h_rsc_0_5_BREADY;
  output twiddle_h_rsc_0_5_BVALID;
  output twiddle_h_rsc_0_5_BUSER;
  output [1:0] twiddle_h_rsc_0_5_BRESP;
  output twiddle_h_rsc_0_5_BID;
  output twiddle_h_rsc_0_5_WREADY;
  input twiddle_h_rsc_0_5_WVALID;
  input twiddle_h_rsc_0_5_WUSER;
  input twiddle_h_rsc_0_5_WLAST;
  input [3:0] twiddle_h_rsc_0_5_WSTRB;
  input [31:0] twiddle_h_rsc_0_5_WDATA;
  output twiddle_h_rsc_0_5_AWREADY;
  input twiddle_h_rsc_0_5_AWVALID;
  input twiddle_h_rsc_0_5_AWUSER;
  input [3:0] twiddle_h_rsc_0_5_AWREGION;
  input [3:0] twiddle_h_rsc_0_5_AWQOS;
  input [2:0] twiddle_h_rsc_0_5_AWPROT;
  input [3:0] twiddle_h_rsc_0_5_AWCACHE;
  input twiddle_h_rsc_0_5_AWLOCK;
  input [1:0] twiddle_h_rsc_0_5_AWBURST;
  input [2:0] twiddle_h_rsc_0_5_AWSIZE;
  input [7:0] twiddle_h_rsc_0_5_AWLEN;
  input [11:0] twiddle_h_rsc_0_5_AWADDR;
  input twiddle_h_rsc_0_5_AWID;
  input core_wen;
  input twiddle_h_rsc_0_5_i_oswt;
  output twiddle_h_rsc_0_5_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_5_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_5_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_5_i_biwt;
  wire twiddle_h_rsc_0_5_i_bdwt;
  wire twiddle_h_rsc_0_5_i_bcwt;
  wire twiddle_h_rsc_0_5_i_s_re_core_sct;
  wire [5:0] twiddle_h_rsc_0_5_i_s_raddr;
  wire [31:0] twiddle_h_rsc_0_5_i_s_din;
  wire twiddle_h_rsc_0_5_i_s_rrdy;
  wire twiddle_h_rsc_0_5_i_s_wrdy;
  wire twiddle_h_rsc_0_5_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_5_i_twiddle_h_rsc_0_5_wait_dp_inst_twiddle_h_rsc_0_5_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_5_i_twiddle_h_rsc_0_5_wait_dp_inst_twiddle_h_rsc_0_5_i_s_raddr_core
      = {1'b0 , (twiddle_h_rsc_0_5_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_h_rsc_0_5_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_h_rsc_0_5_AWID),
      .AWADDR(twiddle_h_rsc_0_5_AWADDR),
      .AWLEN(twiddle_h_rsc_0_5_AWLEN),
      .AWSIZE(twiddle_h_rsc_0_5_AWSIZE),
      .AWBURST(twiddle_h_rsc_0_5_AWBURST),
      .AWLOCK(twiddle_h_rsc_0_5_AWLOCK),
      .AWCACHE(twiddle_h_rsc_0_5_AWCACHE),
      .AWPROT(twiddle_h_rsc_0_5_AWPROT),
      .AWQOS(twiddle_h_rsc_0_5_AWQOS),
      .AWREGION(twiddle_h_rsc_0_5_AWREGION),
      .AWUSER(twiddle_h_rsc_0_5_AWUSER),
      .AWVALID(twiddle_h_rsc_0_5_AWVALID),
      .AWREADY(twiddle_h_rsc_0_5_AWREADY),
      .WDATA(twiddle_h_rsc_0_5_WDATA),
      .WSTRB(twiddle_h_rsc_0_5_WSTRB),
      .WLAST(twiddle_h_rsc_0_5_WLAST),
      .WUSER(twiddle_h_rsc_0_5_WUSER),
      .WVALID(twiddle_h_rsc_0_5_WVALID),
      .WREADY(twiddle_h_rsc_0_5_WREADY),
      .BID(twiddle_h_rsc_0_5_BID),
      .BRESP(twiddle_h_rsc_0_5_BRESP),
      .BUSER(twiddle_h_rsc_0_5_BUSER),
      .BVALID(twiddle_h_rsc_0_5_BVALID),
      .BREADY(twiddle_h_rsc_0_5_BREADY),
      .ARID(twiddle_h_rsc_0_5_ARID),
      .ARADDR(twiddle_h_rsc_0_5_ARADDR),
      .ARLEN(twiddle_h_rsc_0_5_ARLEN),
      .ARSIZE(twiddle_h_rsc_0_5_ARSIZE),
      .ARBURST(twiddle_h_rsc_0_5_ARBURST),
      .ARLOCK(twiddle_h_rsc_0_5_ARLOCK),
      .ARCACHE(twiddle_h_rsc_0_5_ARCACHE),
      .ARPROT(twiddle_h_rsc_0_5_ARPROT),
      .ARQOS(twiddle_h_rsc_0_5_ARQOS),
      .ARREGION(twiddle_h_rsc_0_5_ARREGION),
      .ARUSER(twiddle_h_rsc_0_5_ARUSER),
      .ARVALID(twiddle_h_rsc_0_5_ARVALID),
      .ARREADY(twiddle_h_rsc_0_5_ARREADY),
      .RID(twiddle_h_rsc_0_5_RID),
      .RDATA(twiddle_h_rsc_0_5_RDATA),
      .RRESP(twiddle_h_rsc_0_5_RRESP),
      .RLAST(twiddle_h_rsc_0_5_RLAST),
      .RUSER(twiddle_h_rsc_0_5_RUSER),
      .RVALID(twiddle_h_rsc_0_5_RVALID),
      .RREADY(twiddle_h_rsc_0_5_RREADY),
      .s_re(twiddle_h_rsc_0_5_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_h_rsc_0_5_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_h_rsc_0_5_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_h_rsc_0_5_i_s_rrdy),
      .s_wrdy(twiddle_h_rsc_0_5_i_s_wrdy),
      .is_idle(twiddle_h_rsc_0_5_is_idle),
      .tr_write_done(twiddle_h_rsc_0_5_tr_write_done),
      .s_tdone(twiddle_h_rsc_0_5_s_tdone)
    );
  peaseNTT_core_twiddle_h_rsc_0_5_i_twiddle_h_rsc_0_5_wait_ctrl peaseNTT_core_twiddle_h_rsc_0_5_i_twiddle_h_rsc_0_5_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_h_rsc_0_5_i_oswt(twiddle_h_rsc_0_5_i_oswt),
      .twiddle_h_rsc_0_5_i_biwt(twiddle_h_rsc_0_5_i_biwt),
      .twiddle_h_rsc_0_5_i_bdwt(twiddle_h_rsc_0_5_i_bdwt),
      .twiddle_h_rsc_0_5_i_bcwt(twiddle_h_rsc_0_5_i_bcwt),
      .twiddle_h_rsc_0_5_i_s_re_core_sct(twiddle_h_rsc_0_5_i_s_re_core_sct),
      .twiddle_h_rsc_0_5_i_s_rrdy(twiddle_h_rsc_0_5_i_s_rrdy)
    );
  peaseNTT_core_twiddle_h_rsc_0_5_i_twiddle_h_rsc_0_5_wait_dp peaseNTT_core_twiddle_h_rsc_0_5_i_twiddle_h_rsc_0_5_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_5_i_oswt(twiddle_h_rsc_0_5_i_oswt),
      .twiddle_h_rsc_0_5_i_wen_comp(twiddle_h_rsc_0_5_i_wen_comp),
      .twiddle_h_rsc_0_5_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_5_i_twiddle_h_rsc_0_5_wait_dp_inst_twiddle_h_rsc_0_5_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_5_i_s_din_mxwt(twiddle_h_rsc_0_5_i_s_din_mxwt),
      .twiddle_h_rsc_0_5_i_biwt(twiddle_h_rsc_0_5_i_biwt),
      .twiddle_h_rsc_0_5_i_bdwt(twiddle_h_rsc_0_5_i_bdwt),
      .twiddle_h_rsc_0_5_i_bcwt(twiddle_h_rsc_0_5_i_bcwt),
      .twiddle_h_rsc_0_5_i_s_raddr(twiddle_h_rsc_0_5_i_s_raddr),
      .twiddle_h_rsc_0_5_i_s_raddr_core_sct(twiddle_h_rsc_0_5_i_s_re_core_sct),
      .twiddle_h_rsc_0_5_i_s_din(twiddle_h_rsc_0_5_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_4_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_4_i (
  clk, rst, twiddle_h_rsc_0_4_s_tdone, twiddle_h_rsc_0_4_tr_write_done, twiddle_h_rsc_0_4_RREADY,
      twiddle_h_rsc_0_4_RVALID, twiddle_h_rsc_0_4_RUSER, twiddle_h_rsc_0_4_RLAST,
      twiddle_h_rsc_0_4_RRESP, twiddle_h_rsc_0_4_RDATA, twiddle_h_rsc_0_4_RID, twiddle_h_rsc_0_4_ARREADY,
      twiddle_h_rsc_0_4_ARVALID, twiddle_h_rsc_0_4_ARUSER, twiddle_h_rsc_0_4_ARREGION,
      twiddle_h_rsc_0_4_ARQOS, twiddle_h_rsc_0_4_ARPROT, twiddle_h_rsc_0_4_ARCACHE,
      twiddle_h_rsc_0_4_ARLOCK, twiddle_h_rsc_0_4_ARBURST, twiddle_h_rsc_0_4_ARSIZE,
      twiddle_h_rsc_0_4_ARLEN, twiddle_h_rsc_0_4_ARADDR, twiddle_h_rsc_0_4_ARID,
      twiddle_h_rsc_0_4_BREADY, twiddle_h_rsc_0_4_BVALID, twiddle_h_rsc_0_4_BUSER,
      twiddle_h_rsc_0_4_BRESP, twiddle_h_rsc_0_4_BID, twiddle_h_rsc_0_4_WREADY, twiddle_h_rsc_0_4_WVALID,
      twiddle_h_rsc_0_4_WUSER, twiddle_h_rsc_0_4_WLAST, twiddle_h_rsc_0_4_WSTRB,
      twiddle_h_rsc_0_4_WDATA, twiddle_h_rsc_0_4_AWREADY, twiddle_h_rsc_0_4_AWVALID,
      twiddle_h_rsc_0_4_AWUSER, twiddle_h_rsc_0_4_AWREGION, twiddle_h_rsc_0_4_AWQOS,
      twiddle_h_rsc_0_4_AWPROT, twiddle_h_rsc_0_4_AWCACHE, twiddle_h_rsc_0_4_AWLOCK,
      twiddle_h_rsc_0_4_AWBURST, twiddle_h_rsc_0_4_AWSIZE, twiddle_h_rsc_0_4_AWLEN,
      twiddle_h_rsc_0_4_AWADDR, twiddle_h_rsc_0_4_AWID, core_wen, twiddle_h_rsc_0_4_i_oswt,
      twiddle_h_rsc_0_4_i_wen_comp, twiddle_h_rsc_0_4_i_s_raddr_core, twiddle_h_rsc_0_4_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_4_s_tdone;
  input twiddle_h_rsc_0_4_tr_write_done;
  input twiddle_h_rsc_0_4_RREADY;
  output twiddle_h_rsc_0_4_RVALID;
  output twiddle_h_rsc_0_4_RUSER;
  output twiddle_h_rsc_0_4_RLAST;
  output [1:0] twiddle_h_rsc_0_4_RRESP;
  output [31:0] twiddle_h_rsc_0_4_RDATA;
  output twiddle_h_rsc_0_4_RID;
  output twiddle_h_rsc_0_4_ARREADY;
  input twiddle_h_rsc_0_4_ARVALID;
  input twiddle_h_rsc_0_4_ARUSER;
  input [3:0] twiddle_h_rsc_0_4_ARREGION;
  input [3:0] twiddle_h_rsc_0_4_ARQOS;
  input [2:0] twiddle_h_rsc_0_4_ARPROT;
  input [3:0] twiddle_h_rsc_0_4_ARCACHE;
  input twiddle_h_rsc_0_4_ARLOCK;
  input [1:0] twiddle_h_rsc_0_4_ARBURST;
  input [2:0] twiddle_h_rsc_0_4_ARSIZE;
  input [7:0] twiddle_h_rsc_0_4_ARLEN;
  input [11:0] twiddle_h_rsc_0_4_ARADDR;
  input twiddle_h_rsc_0_4_ARID;
  input twiddle_h_rsc_0_4_BREADY;
  output twiddle_h_rsc_0_4_BVALID;
  output twiddle_h_rsc_0_4_BUSER;
  output [1:0] twiddle_h_rsc_0_4_BRESP;
  output twiddle_h_rsc_0_4_BID;
  output twiddle_h_rsc_0_4_WREADY;
  input twiddle_h_rsc_0_4_WVALID;
  input twiddle_h_rsc_0_4_WUSER;
  input twiddle_h_rsc_0_4_WLAST;
  input [3:0] twiddle_h_rsc_0_4_WSTRB;
  input [31:0] twiddle_h_rsc_0_4_WDATA;
  output twiddle_h_rsc_0_4_AWREADY;
  input twiddle_h_rsc_0_4_AWVALID;
  input twiddle_h_rsc_0_4_AWUSER;
  input [3:0] twiddle_h_rsc_0_4_AWREGION;
  input [3:0] twiddle_h_rsc_0_4_AWQOS;
  input [2:0] twiddle_h_rsc_0_4_AWPROT;
  input [3:0] twiddle_h_rsc_0_4_AWCACHE;
  input twiddle_h_rsc_0_4_AWLOCK;
  input [1:0] twiddle_h_rsc_0_4_AWBURST;
  input [2:0] twiddle_h_rsc_0_4_AWSIZE;
  input [7:0] twiddle_h_rsc_0_4_AWLEN;
  input [11:0] twiddle_h_rsc_0_4_AWADDR;
  input twiddle_h_rsc_0_4_AWID;
  input core_wen;
  input twiddle_h_rsc_0_4_i_oswt;
  output twiddle_h_rsc_0_4_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_4_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_4_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_4_i_biwt;
  wire twiddle_h_rsc_0_4_i_bdwt;
  wire twiddle_h_rsc_0_4_i_bcwt;
  wire twiddle_h_rsc_0_4_i_s_re_core_sct;
  wire [5:0] twiddle_h_rsc_0_4_i_s_raddr;
  wire [31:0] twiddle_h_rsc_0_4_i_s_din;
  wire twiddle_h_rsc_0_4_i_s_rrdy;
  wire twiddle_h_rsc_0_4_i_s_wrdy;
  wire twiddle_h_rsc_0_4_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_4_i_twiddle_h_rsc_0_4_wait_dp_inst_twiddle_h_rsc_0_4_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_4_i_twiddle_h_rsc_0_4_wait_dp_inst_twiddle_h_rsc_0_4_i_s_raddr_core
      = {1'b0 , (twiddle_h_rsc_0_4_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_h_rsc_0_4_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_h_rsc_0_4_AWID),
      .AWADDR(twiddle_h_rsc_0_4_AWADDR),
      .AWLEN(twiddle_h_rsc_0_4_AWLEN),
      .AWSIZE(twiddle_h_rsc_0_4_AWSIZE),
      .AWBURST(twiddle_h_rsc_0_4_AWBURST),
      .AWLOCK(twiddle_h_rsc_0_4_AWLOCK),
      .AWCACHE(twiddle_h_rsc_0_4_AWCACHE),
      .AWPROT(twiddle_h_rsc_0_4_AWPROT),
      .AWQOS(twiddle_h_rsc_0_4_AWQOS),
      .AWREGION(twiddle_h_rsc_0_4_AWREGION),
      .AWUSER(twiddle_h_rsc_0_4_AWUSER),
      .AWVALID(twiddle_h_rsc_0_4_AWVALID),
      .AWREADY(twiddle_h_rsc_0_4_AWREADY),
      .WDATA(twiddle_h_rsc_0_4_WDATA),
      .WSTRB(twiddle_h_rsc_0_4_WSTRB),
      .WLAST(twiddle_h_rsc_0_4_WLAST),
      .WUSER(twiddle_h_rsc_0_4_WUSER),
      .WVALID(twiddle_h_rsc_0_4_WVALID),
      .WREADY(twiddle_h_rsc_0_4_WREADY),
      .BID(twiddle_h_rsc_0_4_BID),
      .BRESP(twiddle_h_rsc_0_4_BRESP),
      .BUSER(twiddle_h_rsc_0_4_BUSER),
      .BVALID(twiddle_h_rsc_0_4_BVALID),
      .BREADY(twiddle_h_rsc_0_4_BREADY),
      .ARID(twiddle_h_rsc_0_4_ARID),
      .ARADDR(twiddle_h_rsc_0_4_ARADDR),
      .ARLEN(twiddle_h_rsc_0_4_ARLEN),
      .ARSIZE(twiddle_h_rsc_0_4_ARSIZE),
      .ARBURST(twiddle_h_rsc_0_4_ARBURST),
      .ARLOCK(twiddle_h_rsc_0_4_ARLOCK),
      .ARCACHE(twiddle_h_rsc_0_4_ARCACHE),
      .ARPROT(twiddle_h_rsc_0_4_ARPROT),
      .ARQOS(twiddle_h_rsc_0_4_ARQOS),
      .ARREGION(twiddle_h_rsc_0_4_ARREGION),
      .ARUSER(twiddle_h_rsc_0_4_ARUSER),
      .ARVALID(twiddle_h_rsc_0_4_ARVALID),
      .ARREADY(twiddle_h_rsc_0_4_ARREADY),
      .RID(twiddle_h_rsc_0_4_RID),
      .RDATA(twiddle_h_rsc_0_4_RDATA),
      .RRESP(twiddle_h_rsc_0_4_RRESP),
      .RLAST(twiddle_h_rsc_0_4_RLAST),
      .RUSER(twiddle_h_rsc_0_4_RUSER),
      .RVALID(twiddle_h_rsc_0_4_RVALID),
      .RREADY(twiddle_h_rsc_0_4_RREADY),
      .s_re(twiddle_h_rsc_0_4_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_h_rsc_0_4_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_h_rsc_0_4_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_h_rsc_0_4_i_s_rrdy),
      .s_wrdy(twiddle_h_rsc_0_4_i_s_wrdy),
      .is_idle(twiddle_h_rsc_0_4_is_idle),
      .tr_write_done(twiddle_h_rsc_0_4_tr_write_done),
      .s_tdone(twiddle_h_rsc_0_4_s_tdone)
    );
  peaseNTT_core_twiddle_h_rsc_0_4_i_twiddle_h_rsc_0_4_wait_ctrl peaseNTT_core_twiddle_h_rsc_0_4_i_twiddle_h_rsc_0_4_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_h_rsc_0_4_i_oswt(twiddle_h_rsc_0_4_i_oswt),
      .twiddle_h_rsc_0_4_i_biwt(twiddle_h_rsc_0_4_i_biwt),
      .twiddle_h_rsc_0_4_i_bdwt(twiddle_h_rsc_0_4_i_bdwt),
      .twiddle_h_rsc_0_4_i_bcwt(twiddle_h_rsc_0_4_i_bcwt),
      .twiddle_h_rsc_0_4_i_s_re_core_sct(twiddle_h_rsc_0_4_i_s_re_core_sct),
      .twiddle_h_rsc_0_4_i_s_rrdy(twiddle_h_rsc_0_4_i_s_rrdy)
    );
  peaseNTT_core_twiddle_h_rsc_0_4_i_twiddle_h_rsc_0_4_wait_dp peaseNTT_core_twiddle_h_rsc_0_4_i_twiddle_h_rsc_0_4_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_4_i_oswt(twiddle_h_rsc_0_4_i_oswt),
      .twiddle_h_rsc_0_4_i_wen_comp(twiddle_h_rsc_0_4_i_wen_comp),
      .twiddle_h_rsc_0_4_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_4_i_twiddle_h_rsc_0_4_wait_dp_inst_twiddle_h_rsc_0_4_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_4_i_s_din_mxwt(twiddle_h_rsc_0_4_i_s_din_mxwt),
      .twiddle_h_rsc_0_4_i_biwt(twiddle_h_rsc_0_4_i_biwt),
      .twiddle_h_rsc_0_4_i_bdwt(twiddle_h_rsc_0_4_i_bdwt),
      .twiddle_h_rsc_0_4_i_bcwt(twiddle_h_rsc_0_4_i_bcwt),
      .twiddle_h_rsc_0_4_i_s_raddr(twiddle_h_rsc_0_4_i_s_raddr),
      .twiddle_h_rsc_0_4_i_s_raddr_core_sct(twiddle_h_rsc_0_4_i_s_re_core_sct),
      .twiddle_h_rsc_0_4_i_s_din(twiddle_h_rsc_0_4_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_3_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_3_i (
  clk, rst, twiddle_h_rsc_0_3_s_tdone, twiddle_h_rsc_0_3_tr_write_done, twiddle_h_rsc_0_3_RREADY,
      twiddle_h_rsc_0_3_RVALID, twiddle_h_rsc_0_3_RUSER, twiddle_h_rsc_0_3_RLAST,
      twiddle_h_rsc_0_3_RRESP, twiddle_h_rsc_0_3_RDATA, twiddle_h_rsc_0_3_RID, twiddle_h_rsc_0_3_ARREADY,
      twiddle_h_rsc_0_3_ARVALID, twiddle_h_rsc_0_3_ARUSER, twiddle_h_rsc_0_3_ARREGION,
      twiddle_h_rsc_0_3_ARQOS, twiddle_h_rsc_0_3_ARPROT, twiddle_h_rsc_0_3_ARCACHE,
      twiddle_h_rsc_0_3_ARLOCK, twiddle_h_rsc_0_3_ARBURST, twiddle_h_rsc_0_3_ARSIZE,
      twiddle_h_rsc_0_3_ARLEN, twiddle_h_rsc_0_3_ARADDR, twiddle_h_rsc_0_3_ARID,
      twiddle_h_rsc_0_3_BREADY, twiddle_h_rsc_0_3_BVALID, twiddle_h_rsc_0_3_BUSER,
      twiddle_h_rsc_0_3_BRESP, twiddle_h_rsc_0_3_BID, twiddle_h_rsc_0_3_WREADY, twiddle_h_rsc_0_3_WVALID,
      twiddle_h_rsc_0_3_WUSER, twiddle_h_rsc_0_3_WLAST, twiddle_h_rsc_0_3_WSTRB,
      twiddle_h_rsc_0_3_WDATA, twiddle_h_rsc_0_3_AWREADY, twiddle_h_rsc_0_3_AWVALID,
      twiddle_h_rsc_0_3_AWUSER, twiddle_h_rsc_0_3_AWREGION, twiddle_h_rsc_0_3_AWQOS,
      twiddle_h_rsc_0_3_AWPROT, twiddle_h_rsc_0_3_AWCACHE, twiddle_h_rsc_0_3_AWLOCK,
      twiddle_h_rsc_0_3_AWBURST, twiddle_h_rsc_0_3_AWSIZE, twiddle_h_rsc_0_3_AWLEN,
      twiddle_h_rsc_0_3_AWADDR, twiddle_h_rsc_0_3_AWID, core_wen, twiddle_h_rsc_0_3_i_oswt,
      twiddle_h_rsc_0_3_i_wen_comp, twiddle_h_rsc_0_3_i_s_raddr_core, twiddle_h_rsc_0_3_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_3_s_tdone;
  input twiddle_h_rsc_0_3_tr_write_done;
  input twiddle_h_rsc_0_3_RREADY;
  output twiddle_h_rsc_0_3_RVALID;
  output twiddle_h_rsc_0_3_RUSER;
  output twiddle_h_rsc_0_3_RLAST;
  output [1:0] twiddle_h_rsc_0_3_RRESP;
  output [31:0] twiddle_h_rsc_0_3_RDATA;
  output twiddle_h_rsc_0_3_RID;
  output twiddle_h_rsc_0_3_ARREADY;
  input twiddle_h_rsc_0_3_ARVALID;
  input twiddle_h_rsc_0_3_ARUSER;
  input [3:0] twiddle_h_rsc_0_3_ARREGION;
  input [3:0] twiddle_h_rsc_0_3_ARQOS;
  input [2:0] twiddle_h_rsc_0_3_ARPROT;
  input [3:0] twiddle_h_rsc_0_3_ARCACHE;
  input twiddle_h_rsc_0_3_ARLOCK;
  input [1:0] twiddle_h_rsc_0_3_ARBURST;
  input [2:0] twiddle_h_rsc_0_3_ARSIZE;
  input [7:0] twiddle_h_rsc_0_3_ARLEN;
  input [11:0] twiddle_h_rsc_0_3_ARADDR;
  input twiddle_h_rsc_0_3_ARID;
  input twiddle_h_rsc_0_3_BREADY;
  output twiddle_h_rsc_0_3_BVALID;
  output twiddle_h_rsc_0_3_BUSER;
  output [1:0] twiddle_h_rsc_0_3_BRESP;
  output twiddle_h_rsc_0_3_BID;
  output twiddle_h_rsc_0_3_WREADY;
  input twiddle_h_rsc_0_3_WVALID;
  input twiddle_h_rsc_0_3_WUSER;
  input twiddle_h_rsc_0_3_WLAST;
  input [3:0] twiddle_h_rsc_0_3_WSTRB;
  input [31:0] twiddle_h_rsc_0_3_WDATA;
  output twiddle_h_rsc_0_3_AWREADY;
  input twiddle_h_rsc_0_3_AWVALID;
  input twiddle_h_rsc_0_3_AWUSER;
  input [3:0] twiddle_h_rsc_0_3_AWREGION;
  input [3:0] twiddle_h_rsc_0_3_AWQOS;
  input [2:0] twiddle_h_rsc_0_3_AWPROT;
  input [3:0] twiddle_h_rsc_0_3_AWCACHE;
  input twiddle_h_rsc_0_3_AWLOCK;
  input [1:0] twiddle_h_rsc_0_3_AWBURST;
  input [2:0] twiddle_h_rsc_0_3_AWSIZE;
  input [7:0] twiddle_h_rsc_0_3_AWLEN;
  input [11:0] twiddle_h_rsc_0_3_AWADDR;
  input twiddle_h_rsc_0_3_AWID;
  input core_wen;
  input twiddle_h_rsc_0_3_i_oswt;
  output twiddle_h_rsc_0_3_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_3_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_3_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_3_i_biwt;
  wire twiddle_h_rsc_0_3_i_bdwt;
  wire twiddle_h_rsc_0_3_i_bcwt;
  wire twiddle_h_rsc_0_3_i_s_re_core_sct;
  wire [5:0] twiddle_h_rsc_0_3_i_s_raddr;
  wire [31:0] twiddle_h_rsc_0_3_i_s_din;
  wire twiddle_h_rsc_0_3_i_s_rrdy;
  wire twiddle_h_rsc_0_3_i_s_wrdy;
  wire twiddle_h_rsc_0_3_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_3_i_twiddle_h_rsc_0_3_wait_dp_inst_twiddle_h_rsc_0_3_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_3_i_twiddle_h_rsc_0_3_wait_dp_inst_twiddle_h_rsc_0_3_i_s_raddr_core
      = {1'b0 , (twiddle_h_rsc_0_3_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_h_rsc_0_3_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_h_rsc_0_3_AWID),
      .AWADDR(twiddle_h_rsc_0_3_AWADDR),
      .AWLEN(twiddle_h_rsc_0_3_AWLEN),
      .AWSIZE(twiddle_h_rsc_0_3_AWSIZE),
      .AWBURST(twiddle_h_rsc_0_3_AWBURST),
      .AWLOCK(twiddle_h_rsc_0_3_AWLOCK),
      .AWCACHE(twiddle_h_rsc_0_3_AWCACHE),
      .AWPROT(twiddle_h_rsc_0_3_AWPROT),
      .AWQOS(twiddle_h_rsc_0_3_AWQOS),
      .AWREGION(twiddle_h_rsc_0_3_AWREGION),
      .AWUSER(twiddle_h_rsc_0_3_AWUSER),
      .AWVALID(twiddle_h_rsc_0_3_AWVALID),
      .AWREADY(twiddle_h_rsc_0_3_AWREADY),
      .WDATA(twiddle_h_rsc_0_3_WDATA),
      .WSTRB(twiddle_h_rsc_0_3_WSTRB),
      .WLAST(twiddle_h_rsc_0_3_WLAST),
      .WUSER(twiddle_h_rsc_0_3_WUSER),
      .WVALID(twiddle_h_rsc_0_3_WVALID),
      .WREADY(twiddle_h_rsc_0_3_WREADY),
      .BID(twiddle_h_rsc_0_3_BID),
      .BRESP(twiddle_h_rsc_0_3_BRESP),
      .BUSER(twiddle_h_rsc_0_3_BUSER),
      .BVALID(twiddle_h_rsc_0_3_BVALID),
      .BREADY(twiddle_h_rsc_0_3_BREADY),
      .ARID(twiddle_h_rsc_0_3_ARID),
      .ARADDR(twiddle_h_rsc_0_3_ARADDR),
      .ARLEN(twiddle_h_rsc_0_3_ARLEN),
      .ARSIZE(twiddle_h_rsc_0_3_ARSIZE),
      .ARBURST(twiddle_h_rsc_0_3_ARBURST),
      .ARLOCK(twiddle_h_rsc_0_3_ARLOCK),
      .ARCACHE(twiddle_h_rsc_0_3_ARCACHE),
      .ARPROT(twiddle_h_rsc_0_3_ARPROT),
      .ARQOS(twiddle_h_rsc_0_3_ARQOS),
      .ARREGION(twiddle_h_rsc_0_3_ARREGION),
      .ARUSER(twiddle_h_rsc_0_3_ARUSER),
      .ARVALID(twiddle_h_rsc_0_3_ARVALID),
      .ARREADY(twiddle_h_rsc_0_3_ARREADY),
      .RID(twiddle_h_rsc_0_3_RID),
      .RDATA(twiddle_h_rsc_0_3_RDATA),
      .RRESP(twiddle_h_rsc_0_3_RRESP),
      .RLAST(twiddle_h_rsc_0_3_RLAST),
      .RUSER(twiddle_h_rsc_0_3_RUSER),
      .RVALID(twiddle_h_rsc_0_3_RVALID),
      .RREADY(twiddle_h_rsc_0_3_RREADY),
      .s_re(twiddle_h_rsc_0_3_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_h_rsc_0_3_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_h_rsc_0_3_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_h_rsc_0_3_i_s_rrdy),
      .s_wrdy(twiddle_h_rsc_0_3_i_s_wrdy),
      .is_idle(twiddle_h_rsc_0_3_is_idle),
      .tr_write_done(twiddle_h_rsc_0_3_tr_write_done),
      .s_tdone(twiddle_h_rsc_0_3_s_tdone)
    );
  peaseNTT_core_twiddle_h_rsc_0_3_i_twiddle_h_rsc_0_3_wait_ctrl peaseNTT_core_twiddle_h_rsc_0_3_i_twiddle_h_rsc_0_3_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_h_rsc_0_3_i_oswt(twiddle_h_rsc_0_3_i_oswt),
      .twiddle_h_rsc_0_3_i_biwt(twiddle_h_rsc_0_3_i_biwt),
      .twiddle_h_rsc_0_3_i_bdwt(twiddle_h_rsc_0_3_i_bdwt),
      .twiddle_h_rsc_0_3_i_bcwt(twiddle_h_rsc_0_3_i_bcwt),
      .twiddle_h_rsc_0_3_i_s_re_core_sct(twiddle_h_rsc_0_3_i_s_re_core_sct),
      .twiddle_h_rsc_0_3_i_s_rrdy(twiddle_h_rsc_0_3_i_s_rrdy)
    );
  peaseNTT_core_twiddle_h_rsc_0_3_i_twiddle_h_rsc_0_3_wait_dp peaseNTT_core_twiddle_h_rsc_0_3_i_twiddle_h_rsc_0_3_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_3_i_oswt(twiddle_h_rsc_0_3_i_oswt),
      .twiddle_h_rsc_0_3_i_wen_comp(twiddle_h_rsc_0_3_i_wen_comp),
      .twiddle_h_rsc_0_3_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_3_i_twiddle_h_rsc_0_3_wait_dp_inst_twiddle_h_rsc_0_3_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_3_i_s_din_mxwt(twiddle_h_rsc_0_3_i_s_din_mxwt),
      .twiddle_h_rsc_0_3_i_biwt(twiddle_h_rsc_0_3_i_biwt),
      .twiddle_h_rsc_0_3_i_bdwt(twiddle_h_rsc_0_3_i_bdwt),
      .twiddle_h_rsc_0_3_i_bcwt(twiddle_h_rsc_0_3_i_bcwt),
      .twiddle_h_rsc_0_3_i_s_raddr(twiddle_h_rsc_0_3_i_s_raddr),
      .twiddle_h_rsc_0_3_i_s_raddr_core_sct(twiddle_h_rsc_0_3_i_s_re_core_sct),
      .twiddle_h_rsc_0_3_i_s_din(twiddle_h_rsc_0_3_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_2_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_2_i (
  clk, rst, twiddle_h_rsc_0_2_s_tdone, twiddle_h_rsc_0_2_tr_write_done, twiddle_h_rsc_0_2_RREADY,
      twiddle_h_rsc_0_2_RVALID, twiddle_h_rsc_0_2_RUSER, twiddle_h_rsc_0_2_RLAST,
      twiddle_h_rsc_0_2_RRESP, twiddle_h_rsc_0_2_RDATA, twiddle_h_rsc_0_2_RID, twiddle_h_rsc_0_2_ARREADY,
      twiddle_h_rsc_0_2_ARVALID, twiddle_h_rsc_0_2_ARUSER, twiddle_h_rsc_0_2_ARREGION,
      twiddle_h_rsc_0_2_ARQOS, twiddle_h_rsc_0_2_ARPROT, twiddle_h_rsc_0_2_ARCACHE,
      twiddle_h_rsc_0_2_ARLOCK, twiddle_h_rsc_0_2_ARBURST, twiddle_h_rsc_0_2_ARSIZE,
      twiddle_h_rsc_0_2_ARLEN, twiddle_h_rsc_0_2_ARADDR, twiddle_h_rsc_0_2_ARID,
      twiddle_h_rsc_0_2_BREADY, twiddle_h_rsc_0_2_BVALID, twiddle_h_rsc_0_2_BUSER,
      twiddle_h_rsc_0_2_BRESP, twiddle_h_rsc_0_2_BID, twiddle_h_rsc_0_2_WREADY, twiddle_h_rsc_0_2_WVALID,
      twiddle_h_rsc_0_2_WUSER, twiddle_h_rsc_0_2_WLAST, twiddle_h_rsc_0_2_WSTRB,
      twiddle_h_rsc_0_2_WDATA, twiddle_h_rsc_0_2_AWREADY, twiddle_h_rsc_0_2_AWVALID,
      twiddle_h_rsc_0_2_AWUSER, twiddle_h_rsc_0_2_AWREGION, twiddle_h_rsc_0_2_AWQOS,
      twiddle_h_rsc_0_2_AWPROT, twiddle_h_rsc_0_2_AWCACHE, twiddle_h_rsc_0_2_AWLOCK,
      twiddle_h_rsc_0_2_AWBURST, twiddle_h_rsc_0_2_AWSIZE, twiddle_h_rsc_0_2_AWLEN,
      twiddle_h_rsc_0_2_AWADDR, twiddle_h_rsc_0_2_AWID, core_wen, twiddle_h_rsc_0_2_i_oswt,
      twiddle_h_rsc_0_2_i_wen_comp, twiddle_h_rsc_0_2_i_s_raddr_core, twiddle_h_rsc_0_2_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_2_s_tdone;
  input twiddle_h_rsc_0_2_tr_write_done;
  input twiddle_h_rsc_0_2_RREADY;
  output twiddle_h_rsc_0_2_RVALID;
  output twiddle_h_rsc_0_2_RUSER;
  output twiddle_h_rsc_0_2_RLAST;
  output [1:0] twiddle_h_rsc_0_2_RRESP;
  output [31:0] twiddle_h_rsc_0_2_RDATA;
  output twiddle_h_rsc_0_2_RID;
  output twiddle_h_rsc_0_2_ARREADY;
  input twiddle_h_rsc_0_2_ARVALID;
  input twiddle_h_rsc_0_2_ARUSER;
  input [3:0] twiddle_h_rsc_0_2_ARREGION;
  input [3:0] twiddle_h_rsc_0_2_ARQOS;
  input [2:0] twiddle_h_rsc_0_2_ARPROT;
  input [3:0] twiddle_h_rsc_0_2_ARCACHE;
  input twiddle_h_rsc_0_2_ARLOCK;
  input [1:0] twiddle_h_rsc_0_2_ARBURST;
  input [2:0] twiddle_h_rsc_0_2_ARSIZE;
  input [7:0] twiddle_h_rsc_0_2_ARLEN;
  input [11:0] twiddle_h_rsc_0_2_ARADDR;
  input twiddle_h_rsc_0_2_ARID;
  input twiddle_h_rsc_0_2_BREADY;
  output twiddle_h_rsc_0_2_BVALID;
  output twiddle_h_rsc_0_2_BUSER;
  output [1:0] twiddle_h_rsc_0_2_BRESP;
  output twiddle_h_rsc_0_2_BID;
  output twiddle_h_rsc_0_2_WREADY;
  input twiddle_h_rsc_0_2_WVALID;
  input twiddle_h_rsc_0_2_WUSER;
  input twiddle_h_rsc_0_2_WLAST;
  input [3:0] twiddle_h_rsc_0_2_WSTRB;
  input [31:0] twiddle_h_rsc_0_2_WDATA;
  output twiddle_h_rsc_0_2_AWREADY;
  input twiddle_h_rsc_0_2_AWVALID;
  input twiddle_h_rsc_0_2_AWUSER;
  input [3:0] twiddle_h_rsc_0_2_AWREGION;
  input [3:0] twiddle_h_rsc_0_2_AWQOS;
  input [2:0] twiddle_h_rsc_0_2_AWPROT;
  input [3:0] twiddle_h_rsc_0_2_AWCACHE;
  input twiddle_h_rsc_0_2_AWLOCK;
  input [1:0] twiddle_h_rsc_0_2_AWBURST;
  input [2:0] twiddle_h_rsc_0_2_AWSIZE;
  input [7:0] twiddle_h_rsc_0_2_AWLEN;
  input [11:0] twiddle_h_rsc_0_2_AWADDR;
  input twiddle_h_rsc_0_2_AWID;
  input core_wen;
  input twiddle_h_rsc_0_2_i_oswt;
  output twiddle_h_rsc_0_2_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_2_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_2_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_2_i_biwt;
  wire twiddle_h_rsc_0_2_i_bdwt;
  wire twiddle_h_rsc_0_2_i_bcwt;
  wire twiddle_h_rsc_0_2_i_s_re_core_sct;
  wire [5:0] twiddle_h_rsc_0_2_i_s_raddr;
  wire [31:0] twiddle_h_rsc_0_2_i_s_din;
  wire twiddle_h_rsc_0_2_i_s_rrdy;
  wire twiddle_h_rsc_0_2_i_s_wrdy;
  wire twiddle_h_rsc_0_2_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_2_i_twiddle_h_rsc_0_2_wait_dp_inst_twiddle_h_rsc_0_2_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_2_i_twiddle_h_rsc_0_2_wait_dp_inst_twiddle_h_rsc_0_2_i_s_raddr_core
      = {1'b0 , (twiddle_h_rsc_0_2_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_h_rsc_0_2_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_h_rsc_0_2_AWID),
      .AWADDR(twiddle_h_rsc_0_2_AWADDR),
      .AWLEN(twiddle_h_rsc_0_2_AWLEN),
      .AWSIZE(twiddle_h_rsc_0_2_AWSIZE),
      .AWBURST(twiddle_h_rsc_0_2_AWBURST),
      .AWLOCK(twiddle_h_rsc_0_2_AWLOCK),
      .AWCACHE(twiddle_h_rsc_0_2_AWCACHE),
      .AWPROT(twiddle_h_rsc_0_2_AWPROT),
      .AWQOS(twiddle_h_rsc_0_2_AWQOS),
      .AWREGION(twiddle_h_rsc_0_2_AWREGION),
      .AWUSER(twiddle_h_rsc_0_2_AWUSER),
      .AWVALID(twiddle_h_rsc_0_2_AWVALID),
      .AWREADY(twiddle_h_rsc_0_2_AWREADY),
      .WDATA(twiddle_h_rsc_0_2_WDATA),
      .WSTRB(twiddle_h_rsc_0_2_WSTRB),
      .WLAST(twiddle_h_rsc_0_2_WLAST),
      .WUSER(twiddle_h_rsc_0_2_WUSER),
      .WVALID(twiddle_h_rsc_0_2_WVALID),
      .WREADY(twiddle_h_rsc_0_2_WREADY),
      .BID(twiddle_h_rsc_0_2_BID),
      .BRESP(twiddle_h_rsc_0_2_BRESP),
      .BUSER(twiddle_h_rsc_0_2_BUSER),
      .BVALID(twiddle_h_rsc_0_2_BVALID),
      .BREADY(twiddle_h_rsc_0_2_BREADY),
      .ARID(twiddle_h_rsc_0_2_ARID),
      .ARADDR(twiddle_h_rsc_0_2_ARADDR),
      .ARLEN(twiddle_h_rsc_0_2_ARLEN),
      .ARSIZE(twiddle_h_rsc_0_2_ARSIZE),
      .ARBURST(twiddle_h_rsc_0_2_ARBURST),
      .ARLOCK(twiddle_h_rsc_0_2_ARLOCK),
      .ARCACHE(twiddle_h_rsc_0_2_ARCACHE),
      .ARPROT(twiddle_h_rsc_0_2_ARPROT),
      .ARQOS(twiddle_h_rsc_0_2_ARQOS),
      .ARREGION(twiddle_h_rsc_0_2_ARREGION),
      .ARUSER(twiddle_h_rsc_0_2_ARUSER),
      .ARVALID(twiddle_h_rsc_0_2_ARVALID),
      .ARREADY(twiddle_h_rsc_0_2_ARREADY),
      .RID(twiddle_h_rsc_0_2_RID),
      .RDATA(twiddle_h_rsc_0_2_RDATA),
      .RRESP(twiddle_h_rsc_0_2_RRESP),
      .RLAST(twiddle_h_rsc_0_2_RLAST),
      .RUSER(twiddle_h_rsc_0_2_RUSER),
      .RVALID(twiddle_h_rsc_0_2_RVALID),
      .RREADY(twiddle_h_rsc_0_2_RREADY),
      .s_re(twiddle_h_rsc_0_2_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_h_rsc_0_2_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_h_rsc_0_2_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_h_rsc_0_2_i_s_rrdy),
      .s_wrdy(twiddle_h_rsc_0_2_i_s_wrdy),
      .is_idle(twiddle_h_rsc_0_2_is_idle),
      .tr_write_done(twiddle_h_rsc_0_2_tr_write_done),
      .s_tdone(twiddle_h_rsc_0_2_s_tdone)
    );
  peaseNTT_core_twiddle_h_rsc_0_2_i_twiddle_h_rsc_0_2_wait_ctrl peaseNTT_core_twiddle_h_rsc_0_2_i_twiddle_h_rsc_0_2_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_h_rsc_0_2_i_oswt(twiddle_h_rsc_0_2_i_oswt),
      .twiddle_h_rsc_0_2_i_biwt(twiddle_h_rsc_0_2_i_biwt),
      .twiddle_h_rsc_0_2_i_bdwt(twiddle_h_rsc_0_2_i_bdwt),
      .twiddle_h_rsc_0_2_i_bcwt(twiddle_h_rsc_0_2_i_bcwt),
      .twiddle_h_rsc_0_2_i_s_re_core_sct(twiddle_h_rsc_0_2_i_s_re_core_sct),
      .twiddle_h_rsc_0_2_i_s_rrdy(twiddle_h_rsc_0_2_i_s_rrdy)
    );
  peaseNTT_core_twiddle_h_rsc_0_2_i_twiddle_h_rsc_0_2_wait_dp peaseNTT_core_twiddle_h_rsc_0_2_i_twiddle_h_rsc_0_2_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_2_i_oswt(twiddle_h_rsc_0_2_i_oswt),
      .twiddle_h_rsc_0_2_i_wen_comp(twiddle_h_rsc_0_2_i_wen_comp),
      .twiddle_h_rsc_0_2_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_2_i_twiddle_h_rsc_0_2_wait_dp_inst_twiddle_h_rsc_0_2_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_2_i_s_din_mxwt(twiddle_h_rsc_0_2_i_s_din_mxwt),
      .twiddle_h_rsc_0_2_i_biwt(twiddle_h_rsc_0_2_i_biwt),
      .twiddle_h_rsc_0_2_i_bdwt(twiddle_h_rsc_0_2_i_bdwt),
      .twiddle_h_rsc_0_2_i_bcwt(twiddle_h_rsc_0_2_i_bcwt),
      .twiddle_h_rsc_0_2_i_s_raddr(twiddle_h_rsc_0_2_i_s_raddr),
      .twiddle_h_rsc_0_2_i_s_raddr_core_sct(twiddle_h_rsc_0_2_i_s_re_core_sct),
      .twiddle_h_rsc_0_2_i_s_din(twiddle_h_rsc_0_2_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_1_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_1_i (
  clk, rst, twiddle_h_rsc_0_1_s_tdone, twiddle_h_rsc_0_1_tr_write_done, twiddle_h_rsc_0_1_RREADY,
      twiddle_h_rsc_0_1_RVALID, twiddle_h_rsc_0_1_RUSER, twiddle_h_rsc_0_1_RLAST,
      twiddle_h_rsc_0_1_RRESP, twiddle_h_rsc_0_1_RDATA, twiddle_h_rsc_0_1_RID, twiddle_h_rsc_0_1_ARREADY,
      twiddle_h_rsc_0_1_ARVALID, twiddle_h_rsc_0_1_ARUSER, twiddle_h_rsc_0_1_ARREGION,
      twiddle_h_rsc_0_1_ARQOS, twiddle_h_rsc_0_1_ARPROT, twiddle_h_rsc_0_1_ARCACHE,
      twiddle_h_rsc_0_1_ARLOCK, twiddle_h_rsc_0_1_ARBURST, twiddle_h_rsc_0_1_ARSIZE,
      twiddle_h_rsc_0_1_ARLEN, twiddle_h_rsc_0_1_ARADDR, twiddle_h_rsc_0_1_ARID,
      twiddle_h_rsc_0_1_BREADY, twiddle_h_rsc_0_1_BVALID, twiddle_h_rsc_0_1_BUSER,
      twiddle_h_rsc_0_1_BRESP, twiddle_h_rsc_0_1_BID, twiddle_h_rsc_0_1_WREADY, twiddle_h_rsc_0_1_WVALID,
      twiddle_h_rsc_0_1_WUSER, twiddle_h_rsc_0_1_WLAST, twiddle_h_rsc_0_1_WSTRB,
      twiddle_h_rsc_0_1_WDATA, twiddle_h_rsc_0_1_AWREADY, twiddle_h_rsc_0_1_AWVALID,
      twiddle_h_rsc_0_1_AWUSER, twiddle_h_rsc_0_1_AWREGION, twiddle_h_rsc_0_1_AWQOS,
      twiddle_h_rsc_0_1_AWPROT, twiddle_h_rsc_0_1_AWCACHE, twiddle_h_rsc_0_1_AWLOCK,
      twiddle_h_rsc_0_1_AWBURST, twiddle_h_rsc_0_1_AWSIZE, twiddle_h_rsc_0_1_AWLEN,
      twiddle_h_rsc_0_1_AWADDR, twiddle_h_rsc_0_1_AWID, core_wen, twiddle_h_rsc_0_1_i_oswt,
      twiddle_h_rsc_0_1_i_wen_comp, twiddle_h_rsc_0_1_i_s_raddr_core, twiddle_h_rsc_0_1_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_1_s_tdone;
  input twiddle_h_rsc_0_1_tr_write_done;
  input twiddle_h_rsc_0_1_RREADY;
  output twiddle_h_rsc_0_1_RVALID;
  output twiddle_h_rsc_0_1_RUSER;
  output twiddle_h_rsc_0_1_RLAST;
  output [1:0] twiddle_h_rsc_0_1_RRESP;
  output [31:0] twiddle_h_rsc_0_1_RDATA;
  output twiddle_h_rsc_0_1_RID;
  output twiddle_h_rsc_0_1_ARREADY;
  input twiddle_h_rsc_0_1_ARVALID;
  input twiddle_h_rsc_0_1_ARUSER;
  input [3:0] twiddle_h_rsc_0_1_ARREGION;
  input [3:0] twiddle_h_rsc_0_1_ARQOS;
  input [2:0] twiddle_h_rsc_0_1_ARPROT;
  input [3:0] twiddle_h_rsc_0_1_ARCACHE;
  input twiddle_h_rsc_0_1_ARLOCK;
  input [1:0] twiddle_h_rsc_0_1_ARBURST;
  input [2:0] twiddle_h_rsc_0_1_ARSIZE;
  input [7:0] twiddle_h_rsc_0_1_ARLEN;
  input [11:0] twiddle_h_rsc_0_1_ARADDR;
  input twiddle_h_rsc_0_1_ARID;
  input twiddle_h_rsc_0_1_BREADY;
  output twiddle_h_rsc_0_1_BVALID;
  output twiddle_h_rsc_0_1_BUSER;
  output [1:0] twiddle_h_rsc_0_1_BRESP;
  output twiddle_h_rsc_0_1_BID;
  output twiddle_h_rsc_0_1_WREADY;
  input twiddle_h_rsc_0_1_WVALID;
  input twiddle_h_rsc_0_1_WUSER;
  input twiddle_h_rsc_0_1_WLAST;
  input [3:0] twiddle_h_rsc_0_1_WSTRB;
  input [31:0] twiddle_h_rsc_0_1_WDATA;
  output twiddle_h_rsc_0_1_AWREADY;
  input twiddle_h_rsc_0_1_AWVALID;
  input twiddle_h_rsc_0_1_AWUSER;
  input [3:0] twiddle_h_rsc_0_1_AWREGION;
  input [3:0] twiddle_h_rsc_0_1_AWQOS;
  input [2:0] twiddle_h_rsc_0_1_AWPROT;
  input [3:0] twiddle_h_rsc_0_1_AWCACHE;
  input twiddle_h_rsc_0_1_AWLOCK;
  input [1:0] twiddle_h_rsc_0_1_AWBURST;
  input [2:0] twiddle_h_rsc_0_1_AWSIZE;
  input [7:0] twiddle_h_rsc_0_1_AWLEN;
  input [11:0] twiddle_h_rsc_0_1_AWADDR;
  input twiddle_h_rsc_0_1_AWID;
  input core_wen;
  input twiddle_h_rsc_0_1_i_oswt;
  output twiddle_h_rsc_0_1_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_1_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_1_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_1_i_biwt;
  wire twiddle_h_rsc_0_1_i_bdwt;
  wire twiddle_h_rsc_0_1_i_bcwt;
  wire twiddle_h_rsc_0_1_i_s_re_core_sct;
  wire [5:0] twiddle_h_rsc_0_1_i_s_raddr;
  wire [31:0] twiddle_h_rsc_0_1_i_s_din;
  wire twiddle_h_rsc_0_1_i_s_rrdy;
  wire twiddle_h_rsc_0_1_i_s_wrdy;
  wire twiddle_h_rsc_0_1_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_1_i_twiddle_h_rsc_0_1_wait_dp_inst_twiddle_h_rsc_0_1_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_1_i_twiddle_h_rsc_0_1_wait_dp_inst_twiddle_h_rsc_0_1_i_s_raddr_core
      = {1'b0 , (twiddle_h_rsc_0_1_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_h_rsc_0_1_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_h_rsc_0_1_AWID),
      .AWADDR(twiddle_h_rsc_0_1_AWADDR),
      .AWLEN(twiddle_h_rsc_0_1_AWLEN),
      .AWSIZE(twiddle_h_rsc_0_1_AWSIZE),
      .AWBURST(twiddle_h_rsc_0_1_AWBURST),
      .AWLOCK(twiddle_h_rsc_0_1_AWLOCK),
      .AWCACHE(twiddle_h_rsc_0_1_AWCACHE),
      .AWPROT(twiddle_h_rsc_0_1_AWPROT),
      .AWQOS(twiddle_h_rsc_0_1_AWQOS),
      .AWREGION(twiddle_h_rsc_0_1_AWREGION),
      .AWUSER(twiddle_h_rsc_0_1_AWUSER),
      .AWVALID(twiddle_h_rsc_0_1_AWVALID),
      .AWREADY(twiddle_h_rsc_0_1_AWREADY),
      .WDATA(twiddle_h_rsc_0_1_WDATA),
      .WSTRB(twiddle_h_rsc_0_1_WSTRB),
      .WLAST(twiddle_h_rsc_0_1_WLAST),
      .WUSER(twiddle_h_rsc_0_1_WUSER),
      .WVALID(twiddle_h_rsc_0_1_WVALID),
      .WREADY(twiddle_h_rsc_0_1_WREADY),
      .BID(twiddle_h_rsc_0_1_BID),
      .BRESP(twiddle_h_rsc_0_1_BRESP),
      .BUSER(twiddle_h_rsc_0_1_BUSER),
      .BVALID(twiddle_h_rsc_0_1_BVALID),
      .BREADY(twiddle_h_rsc_0_1_BREADY),
      .ARID(twiddle_h_rsc_0_1_ARID),
      .ARADDR(twiddle_h_rsc_0_1_ARADDR),
      .ARLEN(twiddle_h_rsc_0_1_ARLEN),
      .ARSIZE(twiddle_h_rsc_0_1_ARSIZE),
      .ARBURST(twiddle_h_rsc_0_1_ARBURST),
      .ARLOCK(twiddle_h_rsc_0_1_ARLOCK),
      .ARCACHE(twiddle_h_rsc_0_1_ARCACHE),
      .ARPROT(twiddle_h_rsc_0_1_ARPROT),
      .ARQOS(twiddle_h_rsc_0_1_ARQOS),
      .ARREGION(twiddle_h_rsc_0_1_ARREGION),
      .ARUSER(twiddle_h_rsc_0_1_ARUSER),
      .ARVALID(twiddle_h_rsc_0_1_ARVALID),
      .ARREADY(twiddle_h_rsc_0_1_ARREADY),
      .RID(twiddle_h_rsc_0_1_RID),
      .RDATA(twiddle_h_rsc_0_1_RDATA),
      .RRESP(twiddle_h_rsc_0_1_RRESP),
      .RLAST(twiddle_h_rsc_0_1_RLAST),
      .RUSER(twiddle_h_rsc_0_1_RUSER),
      .RVALID(twiddle_h_rsc_0_1_RVALID),
      .RREADY(twiddle_h_rsc_0_1_RREADY),
      .s_re(twiddle_h_rsc_0_1_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_h_rsc_0_1_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_h_rsc_0_1_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_h_rsc_0_1_i_s_rrdy),
      .s_wrdy(twiddle_h_rsc_0_1_i_s_wrdy),
      .is_idle(twiddle_h_rsc_0_1_is_idle),
      .tr_write_done(twiddle_h_rsc_0_1_tr_write_done),
      .s_tdone(twiddle_h_rsc_0_1_s_tdone)
    );
  peaseNTT_core_twiddle_h_rsc_0_1_i_twiddle_h_rsc_0_1_wait_ctrl peaseNTT_core_twiddle_h_rsc_0_1_i_twiddle_h_rsc_0_1_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_h_rsc_0_1_i_oswt(twiddle_h_rsc_0_1_i_oswt),
      .twiddle_h_rsc_0_1_i_biwt(twiddle_h_rsc_0_1_i_biwt),
      .twiddle_h_rsc_0_1_i_bdwt(twiddle_h_rsc_0_1_i_bdwt),
      .twiddle_h_rsc_0_1_i_bcwt(twiddle_h_rsc_0_1_i_bcwt),
      .twiddle_h_rsc_0_1_i_s_re_core_sct(twiddle_h_rsc_0_1_i_s_re_core_sct),
      .twiddle_h_rsc_0_1_i_s_rrdy(twiddle_h_rsc_0_1_i_s_rrdy)
    );
  peaseNTT_core_twiddle_h_rsc_0_1_i_twiddle_h_rsc_0_1_wait_dp peaseNTT_core_twiddle_h_rsc_0_1_i_twiddle_h_rsc_0_1_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_1_i_oswt(twiddle_h_rsc_0_1_i_oswt),
      .twiddle_h_rsc_0_1_i_wen_comp(twiddle_h_rsc_0_1_i_wen_comp),
      .twiddle_h_rsc_0_1_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_1_i_twiddle_h_rsc_0_1_wait_dp_inst_twiddle_h_rsc_0_1_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_1_i_s_din_mxwt(twiddle_h_rsc_0_1_i_s_din_mxwt),
      .twiddle_h_rsc_0_1_i_biwt(twiddle_h_rsc_0_1_i_biwt),
      .twiddle_h_rsc_0_1_i_bdwt(twiddle_h_rsc_0_1_i_bdwt),
      .twiddle_h_rsc_0_1_i_bcwt(twiddle_h_rsc_0_1_i_bcwt),
      .twiddle_h_rsc_0_1_i_s_raddr(twiddle_h_rsc_0_1_i_s_raddr),
      .twiddle_h_rsc_0_1_i_s_raddr_core_sct(twiddle_h_rsc_0_1_i_s_re_core_sct),
      .twiddle_h_rsc_0_1_i_s_din(twiddle_h_rsc_0_1_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_h_rsc_0_0_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_h_rsc_0_0_i (
  clk, rst, twiddle_h_rsc_0_0_s_tdone, twiddle_h_rsc_0_0_tr_write_done, twiddle_h_rsc_0_0_RREADY,
      twiddle_h_rsc_0_0_RVALID, twiddle_h_rsc_0_0_RUSER, twiddle_h_rsc_0_0_RLAST,
      twiddle_h_rsc_0_0_RRESP, twiddle_h_rsc_0_0_RDATA, twiddle_h_rsc_0_0_RID, twiddle_h_rsc_0_0_ARREADY,
      twiddle_h_rsc_0_0_ARVALID, twiddle_h_rsc_0_0_ARUSER, twiddle_h_rsc_0_0_ARREGION,
      twiddle_h_rsc_0_0_ARQOS, twiddle_h_rsc_0_0_ARPROT, twiddle_h_rsc_0_0_ARCACHE,
      twiddle_h_rsc_0_0_ARLOCK, twiddle_h_rsc_0_0_ARBURST, twiddle_h_rsc_0_0_ARSIZE,
      twiddle_h_rsc_0_0_ARLEN, twiddle_h_rsc_0_0_ARADDR, twiddle_h_rsc_0_0_ARID,
      twiddle_h_rsc_0_0_BREADY, twiddle_h_rsc_0_0_BVALID, twiddle_h_rsc_0_0_BUSER,
      twiddle_h_rsc_0_0_BRESP, twiddle_h_rsc_0_0_BID, twiddle_h_rsc_0_0_WREADY, twiddle_h_rsc_0_0_WVALID,
      twiddle_h_rsc_0_0_WUSER, twiddle_h_rsc_0_0_WLAST, twiddle_h_rsc_0_0_WSTRB,
      twiddle_h_rsc_0_0_WDATA, twiddle_h_rsc_0_0_AWREADY, twiddle_h_rsc_0_0_AWVALID,
      twiddle_h_rsc_0_0_AWUSER, twiddle_h_rsc_0_0_AWREGION, twiddle_h_rsc_0_0_AWQOS,
      twiddle_h_rsc_0_0_AWPROT, twiddle_h_rsc_0_0_AWCACHE, twiddle_h_rsc_0_0_AWLOCK,
      twiddle_h_rsc_0_0_AWBURST, twiddle_h_rsc_0_0_AWSIZE, twiddle_h_rsc_0_0_AWLEN,
      twiddle_h_rsc_0_0_AWADDR, twiddle_h_rsc_0_0_AWID, core_wen, twiddle_h_rsc_0_0_i_oswt,
      twiddle_h_rsc_0_0_i_wen_comp, twiddle_h_rsc_0_0_i_s_raddr_core, twiddle_h_rsc_0_0_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_h_rsc_0_0_s_tdone;
  input twiddle_h_rsc_0_0_tr_write_done;
  input twiddle_h_rsc_0_0_RREADY;
  output twiddle_h_rsc_0_0_RVALID;
  output twiddle_h_rsc_0_0_RUSER;
  output twiddle_h_rsc_0_0_RLAST;
  output [1:0] twiddle_h_rsc_0_0_RRESP;
  output [31:0] twiddle_h_rsc_0_0_RDATA;
  output twiddle_h_rsc_0_0_RID;
  output twiddle_h_rsc_0_0_ARREADY;
  input twiddle_h_rsc_0_0_ARVALID;
  input twiddle_h_rsc_0_0_ARUSER;
  input [3:0] twiddle_h_rsc_0_0_ARREGION;
  input [3:0] twiddle_h_rsc_0_0_ARQOS;
  input [2:0] twiddle_h_rsc_0_0_ARPROT;
  input [3:0] twiddle_h_rsc_0_0_ARCACHE;
  input twiddle_h_rsc_0_0_ARLOCK;
  input [1:0] twiddle_h_rsc_0_0_ARBURST;
  input [2:0] twiddle_h_rsc_0_0_ARSIZE;
  input [7:0] twiddle_h_rsc_0_0_ARLEN;
  input [11:0] twiddle_h_rsc_0_0_ARADDR;
  input twiddle_h_rsc_0_0_ARID;
  input twiddle_h_rsc_0_0_BREADY;
  output twiddle_h_rsc_0_0_BVALID;
  output twiddle_h_rsc_0_0_BUSER;
  output [1:0] twiddle_h_rsc_0_0_BRESP;
  output twiddle_h_rsc_0_0_BID;
  output twiddle_h_rsc_0_0_WREADY;
  input twiddle_h_rsc_0_0_WVALID;
  input twiddle_h_rsc_0_0_WUSER;
  input twiddle_h_rsc_0_0_WLAST;
  input [3:0] twiddle_h_rsc_0_0_WSTRB;
  input [31:0] twiddle_h_rsc_0_0_WDATA;
  output twiddle_h_rsc_0_0_AWREADY;
  input twiddle_h_rsc_0_0_AWVALID;
  input twiddle_h_rsc_0_0_AWUSER;
  input [3:0] twiddle_h_rsc_0_0_AWREGION;
  input [3:0] twiddle_h_rsc_0_0_AWQOS;
  input [2:0] twiddle_h_rsc_0_0_AWPROT;
  input [3:0] twiddle_h_rsc_0_0_AWCACHE;
  input twiddle_h_rsc_0_0_AWLOCK;
  input [1:0] twiddle_h_rsc_0_0_AWBURST;
  input [2:0] twiddle_h_rsc_0_0_AWSIZE;
  input [7:0] twiddle_h_rsc_0_0_AWLEN;
  input [11:0] twiddle_h_rsc_0_0_AWADDR;
  input twiddle_h_rsc_0_0_AWID;
  input core_wen;
  input twiddle_h_rsc_0_0_i_oswt;
  output twiddle_h_rsc_0_0_i_wen_comp;
  input [5:0] twiddle_h_rsc_0_0_i_s_raddr_core;
  output [31:0] twiddle_h_rsc_0_0_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_h_rsc_0_0_i_biwt;
  wire twiddle_h_rsc_0_0_i_bdwt;
  wire twiddle_h_rsc_0_0_i_bcwt;
  wire twiddle_h_rsc_0_0_i_s_re_core_sct;
  wire [5:0] twiddle_h_rsc_0_0_i_s_raddr;
  wire [31:0] twiddle_h_rsc_0_0_i_s_din;
  wire twiddle_h_rsc_0_0_i_s_rrdy;
  wire twiddle_h_rsc_0_0_i_s_wrdy;
  wire twiddle_h_rsc_0_0_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_0_i_twiddle_h_rsc_0_0_wait_dp_inst_twiddle_h_rsc_0_0_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_0_i_twiddle_h_rsc_0_0_wait_dp_inst_twiddle_h_rsc_0_0_i_s_raddr_core
      = {1'b0 , (twiddle_h_rsc_0_0_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_h_rsc_0_0_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_h_rsc_0_0_AWID),
      .AWADDR(twiddle_h_rsc_0_0_AWADDR),
      .AWLEN(twiddle_h_rsc_0_0_AWLEN),
      .AWSIZE(twiddle_h_rsc_0_0_AWSIZE),
      .AWBURST(twiddle_h_rsc_0_0_AWBURST),
      .AWLOCK(twiddle_h_rsc_0_0_AWLOCK),
      .AWCACHE(twiddle_h_rsc_0_0_AWCACHE),
      .AWPROT(twiddle_h_rsc_0_0_AWPROT),
      .AWQOS(twiddle_h_rsc_0_0_AWQOS),
      .AWREGION(twiddle_h_rsc_0_0_AWREGION),
      .AWUSER(twiddle_h_rsc_0_0_AWUSER),
      .AWVALID(twiddle_h_rsc_0_0_AWVALID),
      .AWREADY(twiddle_h_rsc_0_0_AWREADY),
      .WDATA(twiddle_h_rsc_0_0_WDATA),
      .WSTRB(twiddle_h_rsc_0_0_WSTRB),
      .WLAST(twiddle_h_rsc_0_0_WLAST),
      .WUSER(twiddle_h_rsc_0_0_WUSER),
      .WVALID(twiddle_h_rsc_0_0_WVALID),
      .WREADY(twiddle_h_rsc_0_0_WREADY),
      .BID(twiddle_h_rsc_0_0_BID),
      .BRESP(twiddle_h_rsc_0_0_BRESP),
      .BUSER(twiddle_h_rsc_0_0_BUSER),
      .BVALID(twiddle_h_rsc_0_0_BVALID),
      .BREADY(twiddle_h_rsc_0_0_BREADY),
      .ARID(twiddle_h_rsc_0_0_ARID),
      .ARADDR(twiddle_h_rsc_0_0_ARADDR),
      .ARLEN(twiddle_h_rsc_0_0_ARLEN),
      .ARSIZE(twiddle_h_rsc_0_0_ARSIZE),
      .ARBURST(twiddle_h_rsc_0_0_ARBURST),
      .ARLOCK(twiddle_h_rsc_0_0_ARLOCK),
      .ARCACHE(twiddle_h_rsc_0_0_ARCACHE),
      .ARPROT(twiddle_h_rsc_0_0_ARPROT),
      .ARQOS(twiddle_h_rsc_0_0_ARQOS),
      .ARREGION(twiddle_h_rsc_0_0_ARREGION),
      .ARUSER(twiddle_h_rsc_0_0_ARUSER),
      .ARVALID(twiddle_h_rsc_0_0_ARVALID),
      .ARREADY(twiddle_h_rsc_0_0_ARREADY),
      .RID(twiddle_h_rsc_0_0_RID),
      .RDATA(twiddle_h_rsc_0_0_RDATA),
      .RRESP(twiddle_h_rsc_0_0_RRESP),
      .RLAST(twiddle_h_rsc_0_0_RLAST),
      .RUSER(twiddle_h_rsc_0_0_RUSER),
      .RVALID(twiddle_h_rsc_0_0_RVALID),
      .RREADY(twiddle_h_rsc_0_0_RREADY),
      .s_re(twiddle_h_rsc_0_0_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_h_rsc_0_0_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_h_rsc_0_0_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_h_rsc_0_0_i_s_rrdy),
      .s_wrdy(twiddle_h_rsc_0_0_i_s_wrdy),
      .is_idle(twiddle_h_rsc_0_0_is_idle),
      .tr_write_done(twiddle_h_rsc_0_0_tr_write_done),
      .s_tdone(twiddle_h_rsc_0_0_s_tdone)
    );
  peaseNTT_core_twiddle_h_rsc_0_0_i_twiddle_h_rsc_0_0_wait_ctrl peaseNTT_core_twiddle_h_rsc_0_0_i_twiddle_h_rsc_0_0_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_h_rsc_0_0_i_oswt(twiddle_h_rsc_0_0_i_oswt),
      .twiddle_h_rsc_0_0_i_biwt(twiddle_h_rsc_0_0_i_biwt),
      .twiddle_h_rsc_0_0_i_bdwt(twiddle_h_rsc_0_0_i_bdwt),
      .twiddle_h_rsc_0_0_i_bcwt(twiddle_h_rsc_0_0_i_bcwt),
      .twiddle_h_rsc_0_0_i_s_re_core_sct(twiddle_h_rsc_0_0_i_s_re_core_sct),
      .twiddle_h_rsc_0_0_i_s_rrdy(twiddle_h_rsc_0_0_i_s_rrdy)
    );
  peaseNTT_core_twiddle_h_rsc_0_0_i_twiddle_h_rsc_0_0_wait_dp peaseNTT_core_twiddle_h_rsc_0_0_i_twiddle_h_rsc_0_0_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_0_i_oswt(twiddle_h_rsc_0_0_i_oswt),
      .twiddle_h_rsc_0_0_i_wen_comp(twiddle_h_rsc_0_0_i_wen_comp),
      .twiddle_h_rsc_0_0_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_0_i_twiddle_h_rsc_0_0_wait_dp_inst_twiddle_h_rsc_0_0_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_0_i_s_din_mxwt(twiddle_h_rsc_0_0_i_s_din_mxwt),
      .twiddle_h_rsc_0_0_i_biwt(twiddle_h_rsc_0_0_i_biwt),
      .twiddle_h_rsc_0_0_i_bdwt(twiddle_h_rsc_0_0_i_bdwt),
      .twiddle_h_rsc_0_0_i_bcwt(twiddle_h_rsc_0_0_i_bcwt),
      .twiddle_h_rsc_0_0_i_s_raddr(twiddle_h_rsc_0_0_i_s_raddr),
      .twiddle_h_rsc_0_0_i_s_raddr_core_sct(twiddle_h_rsc_0_0_i_s_re_core_sct),
      .twiddle_h_rsc_0_0_i_s_din(twiddle_h_rsc_0_0_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_15_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_15_i (
  clk, rst, twiddle_rsc_0_15_s_tdone, twiddle_rsc_0_15_tr_write_done, twiddle_rsc_0_15_RREADY,
      twiddle_rsc_0_15_RVALID, twiddle_rsc_0_15_RUSER, twiddle_rsc_0_15_RLAST, twiddle_rsc_0_15_RRESP,
      twiddle_rsc_0_15_RDATA, twiddle_rsc_0_15_RID, twiddle_rsc_0_15_ARREADY, twiddle_rsc_0_15_ARVALID,
      twiddle_rsc_0_15_ARUSER, twiddle_rsc_0_15_ARREGION, twiddle_rsc_0_15_ARQOS,
      twiddle_rsc_0_15_ARPROT, twiddle_rsc_0_15_ARCACHE, twiddle_rsc_0_15_ARLOCK,
      twiddle_rsc_0_15_ARBURST, twiddle_rsc_0_15_ARSIZE, twiddle_rsc_0_15_ARLEN,
      twiddle_rsc_0_15_ARADDR, twiddle_rsc_0_15_ARID, twiddle_rsc_0_15_BREADY, twiddle_rsc_0_15_BVALID,
      twiddle_rsc_0_15_BUSER, twiddle_rsc_0_15_BRESP, twiddle_rsc_0_15_BID, twiddle_rsc_0_15_WREADY,
      twiddle_rsc_0_15_WVALID, twiddle_rsc_0_15_WUSER, twiddle_rsc_0_15_WLAST, twiddle_rsc_0_15_WSTRB,
      twiddle_rsc_0_15_WDATA, twiddle_rsc_0_15_AWREADY, twiddle_rsc_0_15_AWVALID,
      twiddle_rsc_0_15_AWUSER, twiddle_rsc_0_15_AWREGION, twiddle_rsc_0_15_AWQOS,
      twiddle_rsc_0_15_AWPROT, twiddle_rsc_0_15_AWCACHE, twiddle_rsc_0_15_AWLOCK,
      twiddle_rsc_0_15_AWBURST, twiddle_rsc_0_15_AWSIZE, twiddle_rsc_0_15_AWLEN,
      twiddle_rsc_0_15_AWADDR, twiddle_rsc_0_15_AWID, core_wen, twiddle_rsc_0_15_i_oswt,
      twiddle_rsc_0_15_i_wen_comp, twiddle_rsc_0_15_i_s_raddr_core, twiddle_rsc_0_15_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_rsc_0_15_s_tdone;
  input twiddle_rsc_0_15_tr_write_done;
  input twiddle_rsc_0_15_RREADY;
  output twiddle_rsc_0_15_RVALID;
  output twiddle_rsc_0_15_RUSER;
  output twiddle_rsc_0_15_RLAST;
  output [1:0] twiddle_rsc_0_15_RRESP;
  output [31:0] twiddle_rsc_0_15_RDATA;
  output twiddle_rsc_0_15_RID;
  output twiddle_rsc_0_15_ARREADY;
  input twiddle_rsc_0_15_ARVALID;
  input twiddle_rsc_0_15_ARUSER;
  input [3:0] twiddle_rsc_0_15_ARREGION;
  input [3:0] twiddle_rsc_0_15_ARQOS;
  input [2:0] twiddle_rsc_0_15_ARPROT;
  input [3:0] twiddle_rsc_0_15_ARCACHE;
  input twiddle_rsc_0_15_ARLOCK;
  input [1:0] twiddle_rsc_0_15_ARBURST;
  input [2:0] twiddle_rsc_0_15_ARSIZE;
  input [7:0] twiddle_rsc_0_15_ARLEN;
  input [11:0] twiddle_rsc_0_15_ARADDR;
  input twiddle_rsc_0_15_ARID;
  input twiddle_rsc_0_15_BREADY;
  output twiddle_rsc_0_15_BVALID;
  output twiddle_rsc_0_15_BUSER;
  output [1:0] twiddle_rsc_0_15_BRESP;
  output twiddle_rsc_0_15_BID;
  output twiddle_rsc_0_15_WREADY;
  input twiddle_rsc_0_15_WVALID;
  input twiddle_rsc_0_15_WUSER;
  input twiddle_rsc_0_15_WLAST;
  input [3:0] twiddle_rsc_0_15_WSTRB;
  input [31:0] twiddle_rsc_0_15_WDATA;
  output twiddle_rsc_0_15_AWREADY;
  input twiddle_rsc_0_15_AWVALID;
  input twiddle_rsc_0_15_AWUSER;
  input [3:0] twiddle_rsc_0_15_AWREGION;
  input [3:0] twiddle_rsc_0_15_AWQOS;
  input [2:0] twiddle_rsc_0_15_AWPROT;
  input [3:0] twiddle_rsc_0_15_AWCACHE;
  input twiddle_rsc_0_15_AWLOCK;
  input [1:0] twiddle_rsc_0_15_AWBURST;
  input [2:0] twiddle_rsc_0_15_AWSIZE;
  input [7:0] twiddle_rsc_0_15_AWLEN;
  input [11:0] twiddle_rsc_0_15_AWADDR;
  input twiddle_rsc_0_15_AWID;
  input core_wen;
  input twiddle_rsc_0_15_i_oswt;
  output twiddle_rsc_0_15_i_wen_comp;
  input [5:0] twiddle_rsc_0_15_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_15_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_rsc_0_15_i_biwt;
  wire twiddle_rsc_0_15_i_bdwt;
  wire twiddle_rsc_0_15_i_bcwt;
  wire twiddle_rsc_0_15_i_s_re_core_sct;
  wire [5:0] twiddle_rsc_0_15_i_s_raddr;
  wire [31:0] twiddle_rsc_0_15_i_s_din;
  wire twiddle_rsc_0_15_i_s_rrdy;
  wire twiddle_rsc_0_15_i_s_wrdy;
  wire twiddle_rsc_0_15_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_15_i_twiddle_rsc_0_15_wait_dp_inst_twiddle_rsc_0_15_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_15_i_twiddle_rsc_0_15_wait_dp_inst_twiddle_rsc_0_15_i_s_raddr_core
      = {1'b0 , (twiddle_rsc_0_15_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_rsc_0_15_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_rsc_0_15_AWID),
      .AWADDR(twiddle_rsc_0_15_AWADDR),
      .AWLEN(twiddle_rsc_0_15_AWLEN),
      .AWSIZE(twiddle_rsc_0_15_AWSIZE),
      .AWBURST(twiddle_rsc_0_15_AWBURST),
      .AWLOCK(twiddle_rsc_0_15_AWLOCK),
      .AWCACHE(twiddle_rsc_0_15_AWCACHE),
      .AWPROT(twiddle_rsc_0_15_AWPROT),
      .AWQOS(twiddle_rsc_0_15_AWQOS),
      .AWREGION(twiddle_rsc_0_15_AWREGION),
      .AWUSER(twiddle_rsc_0_15_AWUSER),
      .AWVALID(twiddle_rsc_0_15_AWVALID),
      .AWREADY(twiddle_rsc_0_15_AWREADY),
      .WDATA(twiddle_rsc_0_15_WDATA),
      .WSTRB(twiddle_rsc_0_15_WSTRB),
      .WLAST(twiddle_rsc_0_15_WLAST),
      .WUSER(twiddle_rsc_0_15_WUSER),
      .WVALID(twiddle_rsc_0_15_WVALID),
      .WREADY(twiddle_rsc_0_15_WREADY),
      .BID(twiddle_rsc_0_15_BID),
      .BRESP(twiddle_rsc_0_15_BRESP),
      .BUSER(twiddle_rsc_0_15_BUSER),
      .BVALID(twiddle_rsc_0_15_BVALID),
      .BREADY(twiddle_rsc_0_15_BREADY),
      .ARID(twiddle_rsc_0_15_ARID),
      .ARADDR(twiddle_rsc_0_15_ARADDR),
      .ARLEN(twiddle_rsc_0_15_ARLEN),
      .ARSIZE(twiddle_rsc_0_15_ARSIZE),
      .ARBURST(twiddle_rsc_0_15_ARBURST),
      .ARLOCK(twiddle_rsc_0_15_ARLOCK),
      .ARCACHE(twiddle_rsc_0_15_ARCACHE),
      .ARPROT(twiddle_rsc_0_15_ARPROT),
      .ARQOS(twiddle_rsc_0_15_ARQOS),
      .ARREGION(twiddle_rsc_0_15_ARREGION),
      .ARUSER(twiddle_rsc_0_15_ARUSER),
      .ARVALID(twiddle_rsc_0_15_ARVALID),
      .ARREADY(twiddle_rsc_0_15_ARREADY),
      .RID(twiddle_rsc_0_15_RID),
      .RDATA(twiddle_rsc_0_15_RDATA),
      .RRESP(twiddle_rsc_0_15_RRESP),
      .RLAST(twiddle_rsc_0_15_RLAST),
      .RUSER(twiddle_rsc_0_15_RUSER),
      .RVALID(twiddle_rsc_0_15_RVALID),
      .RREADY(twiddle_rsc_0_15_RREADY),
      .s_re(twiddle_rsc_0_15_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_rsc_0_15_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_rsc_0_15_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_rsc_0_15_i_s_rrdy),
      .s_wrdy(twiddle_rsc_0_15_i_s_wrdy),
      .is_idle(twiddle_rsc_0_15_is_idle),
      .tr_write_done(twiddle_rsc_0_15_tr_write_done),
      .s_tdone(twiddle_rsc_0_15_s_tdone)
    );
  peaseNTT_core_twiddle_rsc_0_15_i_twiddle_rsc_0_15_wait_ctrl peaseNTT_core_twiddle_rsc_0_15_i_twiddle_rsc_0_15_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_rsc_0_15_i_oswt(twiddle_rsc_0_15_i_oswt),
      .twiddle_rsc_0_15_i_biwt(twiddle_rsc_0_15_i_biwt),
      .twiddle_rsc_0_15_i_bdwt(twiddle_rsc_0_15_i_bdwt),
      .twiddle_rsc_0_15_i_bcwt(twiddle_rsc_0_15_i_bcwt),
      .twiddle_rsc_0_15_i_s_re_core_sct(twiddle_rsc_0_15_i_s_re_core_sct),
      .twiddle_rsc_0_15_i_s_rrdy(twiddle_rsc_0_15_i_s_rrdy)
    );
  peaseNTT_core_twiddle_rsc_0_15_i_twiddle_rsc_0_15_wait_dp peaseNTT_core_twiddle_rsc_0_15_i_twiddle_rsc_0_15_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_15_i_oswt(twiddle_rsc_0_15_i_oswt),
      .twiddle_rsc_0_15_i_wen_comp(twiddle_rsc_0_15_i_wen_comp),
      .twiddle_rsc_0_15_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_15_i_twiddle_rsc_0_15_wait_dp_inst_twiddle_rsc_0_15_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_15_i_s_din_mxwt(twiddle_rsc_0_15_i_s_din_mxwt),
      .twiddle_rsc_0_15_i_biwt(twiddle_rsc_0_15_i_biwt),
      .twiddle_rsc_0_15_i_bdwt(twiddle_rsc_0_15_i_bdwt),
      .twiddle_rsc_0_15_i_bcwt(twiddle_rsc_0_15_i_bcwt),
      .twiddle_rsc_0_15_i_s_raddr(twiddle_rsc_0_15_i_s_raddr),
      .twiddle_rsc_0_15_i_s_raddr_core_sct(twiddle_rsc_0_15_i_s_re_core_sct),
      .twiddle_rsc_0_15_i_s_din(twiddle_rsc_0_15_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_14_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_14_i (
  clk, rst, twiddle_rsc_0_14_s_tdone, twiddle_rsc_0_14_tr_write_done, twiddle_rsc_0_14_RREADY,
      twiddle_rsc_0_14_RVALID, twiddle_rsc_0_14_RUSER, twiddle_rsc_0_14_RLAST, twiddle_rsc_0_14_RRESP,
      twiddle_rsc_0_14_RDATA, twiddle_rsc_0_14_RID, twiddle_rsc_0_14_ARREADY, twiddle_rsc_0_14_ARVALID,
      twiddle_rsc_0_14_ARUSER, twiddle_rsc_0_14_ARREGION, twiddle_rsc_0_14_ARQOS,
      twiddle_rsc_0_14_ARPROT, twiddle_rsc_0_14_ARCACHE, twiddle_rsc_0_14_ARLOCK,
      twiddle_rsc_0_14_ARBURST, twiddle_rsc_0_14_ARSIZE, twiddle_rsc_0_14_ARLEN,
      twiddle_rsc_0_14_ARADDR, twiddle_rsc_0_14_ARID, twiddle_rsc_0_14_BREADY, twiddle_rsc_0_14_BVALID,
      twiddle_rsc_0_14_BUSER, twiddle_rsc_0_14_BRESP, twiddle_rsc_0_14_BID, twiddle_rsc_0_14_WREADY,
      twiddle_rsc_0_14_WVALID, twiddle_rsc_0_14_WUSER, twiddle_rsc_0_14_WLAST, twiddle_rsc_0_14_WSTRB,
      twiddle_rsc_0_14_WDATA, twiddle_rsc_0_14_AWREADY, twiddle_rsc_0_14_AWVALID,
      twiddle_rsc_0_14_AWUSER, twiddle_rsc_0_14_AWREGION, twiddle_rsc_0_14_AWQOS,
      twiddle_rsc_0_14_AWPROT, twiddle_rsc_0_14_AWCACHE, twiddle_rsc_0_14_AWLOCK,
      twiddle_rsc_0_14_AWBURST, twiddle_rsc_0_14_AWSIZE, twiddle_rsc_0_14_AWLEN,
      twiddle_rsc_0_14_AWADDR, twiddle_rsc_0_14_AWID, core_wen, twiddle_rsc_0_14_i_oswt,
      twiddle_rsc_0_14_i_wen_comp, twiddle_rsc_0_14_i_s_raddr_core, twiddle_rsc_0_14_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_rsc_0_14_s_tdone;
  input twiddle_rsc_0_14_tr_write_done;
  input twiddle_rsc_0_14_RREADY;
  output twiddle_rsc_0_14_RVALID;
  output twiddle_rsc_0_14_RUSER;
  output twiddle_rsc_0_14_RLAST;
  output [1:0] twiddle_rsc_0_14_RRESP;
  output [31:0] twiddle_rsc_0_14_RDATA;
  output twiddle_rsc_0_14_RID;
  output twiddle_rsc_0_14_ARREADY;
  input twiddle_rsc_0_14_ARVALID;
  input twiddle_rsc_0_14_ARUSER;
  input [3:0] twiddle_rsc_0_14_ARREGION;
  input [3:0] twiddle_rsc_0_14_ARQOS;
  input [2:0] twiddle_rsc_0_14_ARPROT;
  input [3:0] twiddle_rsc_0_14_ARCACHE;
  input twiddle_rsc_0_14_ARLOCK;
  input [1:0] twiddle_rsc_0_14_ARBURST;
  input [2:0] twiddle_rsc_0_14_ARSIZE;
  input [7:0] twiddle_rsc_0_14_ARLEN;
  input [11:0] twiddle_rsc_0_14_ARADDR;
  input twiddle_rsc_0_14_ARID;
  input twiddle_rsc_0_14_BREADY;
  output twiddle_rsc_0_14_BVALID;
  output twiddle_rsc_0_14_BUSER;
  output [1:0] twiddle_rsc_0_14_BRESP;
  output twiddle_rsc_0_14_BID;
  output twiddle_rsc_0_14_WREADY;
  input twiddle_rsc_0_14_WVALID;
  input twiddle_rsc_0_14_WUSER;
  input twiddle_rsc_0_14_WLAST;
  input [3:0] twiddle_rsc_0_14_WSTRB;
  input [31:0] twiddle_rsc_0_14_WDATA;
  output twiddle_rsc_0_14_AWREADY;
  input twiddle_rsc_0_14_AWVALID;
  input twiddle_rsc_0_14_AWUSER;
  input [3:0] twiddle_rsc_0_14_AWREGION;
  input [3:0] twiddle_rsc_0_14_AWQOS;
  input [2:0] twiddle_rsc_0_14_AWPROT;
  input [3:0] twiddle_rsc_0_14_AWCACHE;
  input twiddle_rsc_0_14_AWLOCK;
  input [1:0] twiddle_rsc_0_14_AWBURST;
  input [2:0] twiddle_rsc_0_14_AWSIZE;
  input [7:0] twiddle_rsc_0_14_AWLEN;
  input [11:0] twiddle_rsc_0_14_AWADDR;
  input twiddle_rsc_0_14_AWID;
  input core_wen;
  input twiddle_rsc_0_14_i_oswt;
  output twiddle_rsc_0_14_i_wen_comp;
  input [5:0] twiddle_rsc_0_14_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_14_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_rsc_0_14_i_biwt;
  wire twiddle_rsc_0_14_i_bdwt;
  wire twiddle_rsc_0_14_i_bcwt;
  wire twiddle_rsc_0_14_i_s_re_core_sct;
  wire [5:0] twiddle_rsc_0_14_i_s_raddr;
  wire [31:0] twiddle_rsc_0_14_i_s_din;
  wire twiddle_rsc_0_14_i_s_rrdy;
  wire twiddle_rsc_0_14_i_s_wrdy;
  wire twiddle_rsc_0_14_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_14_i_twiddle_rsc_0_14_wait_dp_inst_twiddle_rsc_0_14_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_14_i_twiddle_rsc_0_14_wait_dp_inst_twiddle_rsc_0_14_i_s_raddr_core
      = {1'b0 , (twiddle_rsc_0_14_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_rsc_0_14_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_rsc_0_14_AWID),
      .AWADDR(twiddle_rsc_0_14_AWADDR),
      .AWLEN(twiddle_rsc_0_14_AWLEN),
      .AWSIZE(twiddle_rsc_0_14_AWSIZE),
      .AWBURST(twiddle_rsc_0_14_AWBURST),
      .AWLOCK(twiddle_rsc_0_14_AWLOCK),
      .AWCACHE(twiddle_rsc_0_14_AWCACHE),
      .AWPROT(twiddle_rsc_0_14_AWPROT),
      .AWQOS(twiddle_rsc_0_14_AWQOS),
      .AWREGION(twiddle_rsc_0_14_AWREGION),
      .AWUSER(twiddle_rsc_0_14_AWUSER),
      .AWVALID(twiddle_rsc_0_14_AWVALID),
      .AWREADY(twiddle_rsc_0_14_AWREADY),
      .WDATA(twiddle_rsc_0_14_WDATA),
      .WSTRB(twiddle_rsc_0_14_WSTRB),
      .WLAST(twiddle_rsc_0_14_WLAST),
      .WUSER(twiddle_rsc_0_14_WUSER),
      .WVALID(twiddle_rsc_0_14_WVALID),
      .WREADY(twiddle_rsc_0_14_WREADY),
      .BID(twiddle_rsc_0_14_BID),
      .BRESP(twiddle_rsc_0_14_BRESP),
      .BUSER(twiddle_rsc_0_14_BUSER),
      .BVALID(twiddle_rsc_0_14_BVALID),
      .BREADY(twiddle_rsc_0_14_BREADY),
      .ARID(twiddle_rsc_0_14_ARID),
      .ARADDR(twiddle_rsc_0_14_ARADDR),
      .ARLEN(twiddle_rsc_0_14_ARLEN),
      .ARSIZE(twiddle_rsc_0_14_ARSIZE),
      .ARBURST(twiddle_rsc_0_14_ARBURST),
      .ARLOCK(twiddle_rsc_0_14_ARLOCK),
      .ARCACHE(twiddle_rsc_0_14_ARCACHE),
      .ARPROT(twiddle_rsc_0_14_ARPROT),
      .ARQOS(twiddle_rsc_0_14_ARQOS),
      .ARREGION(twiddle_rsc_0_14_ARREGION),
      .ARUSER(twiddle_rsc_0_14_ARUSER),
      .ARVALID(twiddle_rsc_0_14_ARVALID),
      .ARREADY(twiddle_rsc_0_14_ARREADY),
      .RID(twiddle_rsc_0_14_RID),
      .RDATA(twiddle_rsc_0_14_RDATA),
      .RRESP(twiddle_rsc_0_14_RRESP),
      .RLAST(twiddle_rsc_0_14_RLAST),
      .RUSER(twiddle_rsc_0_14_RUSER),
      .RVALID(twiddle_rsc_0_14_RVALID),
      .RREADY(twiddle_rsc_0_14_RREADY),
      .s_re(twiddle_rsc_0_14_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_rsc_0_14_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_rsc_0_14_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_rsc_0_14_i_s_rrdy),
      .s_wrdy(twiddle_rsc_0_14_i_s_wrdy),
      .is_idle(twiddle_rsc_0_14_is_idle),
      .tr_write_done(twiddle_rsc_0_14_tr_write_done),
      .s_tdone(twiddle_rsc_0_14_s_tdone)
    );
  peaseNTT_core_twiddle_rsc_0_14_i_twiddle_rsc_0_14_wait_ctrl peaseNTT_core_twiddle_rsc_0_14_i_twiddle_rsc_0_14_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_rsc_0_14_i_oswt(twiddle_rsc_0_14_i_oswt),
      .twiddle_rsc_0_14_i_biwt(twiddle_rsc_0_14_i_biwt),
      .twiddle_rsc_0_14_i_bdwt(twiddle_rsc_0_14_i_bdwt),
      .twiddle_rsc_0_14_i_bcwt(twiddle_rsc_0_14_i_bcwt),
      .twiddle_rsc_0_14_i_s_re_core_sct(twiddle_rsc_0_14_i_s_re_core_sct),
      .twiddle_rsc_0_14_i_s_rrdy(twiddle_rsc_0_14_i_s_rrdy)
    );
  peaseNTT_core_twiddle_rsc_0_14_i_twiddle_rsc_0_14_wait_dp peaseNTT_core_twiddle_rsc_0_14_i_twiddle_rsc_0_14_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_14_i_oswt(twiddle_rsc_0_14_i_oswt),
      .twiddle_rsc_0_14_i_wen_comp(twiddle_rsc_0_14_i_wen_comp),
      .twiddle_rsc_0_14_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_14_i_twiddle_rsc_0_14_wait_dp_inst_twiddle_rsc_0_14_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_14_i_s_din_mxwt(twiddle_rsc_0_14_i_s_din_mxwt),
      .twiddle_rsc_0_14_i_biwt(twiddle_rsc_0_14_i_biwt),
      .twiddle_rsc_0_14_i_bdwt(twiddle_rsc_0_14_i_bdwt),
      .twiddle_rsc_0_14_i_bcwt(twiddle_rsc_0_14_i_bcwt),
      .twiddle_rsc_0_14_i_s_raddr(twiddle_rsc_0_14_i_s_raddr),
      .twiddle_rsc_0_14_i_s_raddr_core_sct(twiddle_rsc_0_14_i_s_re_core_sct),
      .twiddle_rsc_0_14_i_s_din(twiddle_rsc_0_14_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_13_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_13_i (
  clk, rst, twiddle_rsc_0_13_s_tdone, twiddle_rsc_0_13_tr_write_done, twiddle_rsc_0_13_RREADY,
      twiddle_rsc_0_13_RVALID, twiddle_rsc_0_13_RUSER, twiddle_rsc_0_13_RLAST, twiddle_rsc_0_13_RRESP,
      twiddle_rsc_0_13_RDATA, twiddle_rsc_0_13_RID, twiddle_rsc_0_13_ARREADY, twiddle_rsc_0_13_ARVALID,
      twiddle_rsc_0_13_ARUSER, twiddle_rsc_0_13_ARREGION, twiddle_rsc_0_13_ARQOS,
      twiddle_rsc_0_13_ARPROT, twiddle_rsc_0_13_ARCACHE, twiddle_rsc_0_13_ARLOCK,
      twiddle_rsc_0_13_ARBURST, twiddle_rsc_0_13_ARSIZE, twiddle_rsc_0_13_ARLEN,
      twiddle_rsc_0_13_ARADDR, twiddle_rsc_0_13_ARID, twiddle_rsc_0_13_BREADY, twiddle_rsc_0_13_BVALID,
      twiddle_rsc_0_13_BUSER, twiddle_rsc_0_13_BRESP, twiddle_rsc_0_13_BID, twiddle_rsc_0_13_WREADY,
      twiddle_rsc_0_13_WVALID, twiddle_rsc_0_13_WUSER, twiddle_rsc_0_13_WLAST, twiddle_rsc_0_13_WSTRB,
      twiddle_rsc_0_13_WDATA, twiddle_rsc_0_13_AWREADY, twiddle_rsc_0_13_AWVALID,
      twiddle_rsc_0_13_AWUSER, twiddle_rsc_0_13_AWREGION, twiddle_rsc_0_13_AWQOS,
      twiddle_rsc_0_13_AWPROT, twiddle_rsc_0_13_AWCACHE, twiddle_rsc_0_13_AWLOCK,
      twiddle_rsc_0_13_AWBURST, twiddle_rsc_0_13_AWSIZE, twiddle_rsc_0_13_AWLEN,
      twiddle_rsc_0_13_AWADDR, twiddle_rsc_0_13_AWID, core_wen, twiddle_rsc_0_13_i_oswt,
      twiddle_rsc_0_13_i_wen_comp, twiddle_rsc_0_13_i_s_raddr_core, twiddle_rsc_0_13_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_rsc_0_13_s_tdone;
  input twiddle_rsc_0_13_tr_write_done;
  input twiddle_rsc_0_13_RREADY;
  output twiddle_rsc_0_13_RVALID;
  output twiddle_rsc_0_13_RUSER;
  output twiddle_rsc_0_13_RLAST;
  output [1:0] twiddle_rsc_0_13_RRESP;
  output [31:0] twiddle_rsc_0_13_RDATA;
  output twiddle_rsc_0_13_RID;
  output twiddle_rsc_0_13_ARREADY;
  input twiddle_rsc_0_13_ARVALID;
  input twiddle_rsc_0_13_ARUSER;
  input [3:0] twiddle_rsc_0_13_ARREGION;
  input [3:0] twiddle_rsc_0_13_ARQOS;
  input [2:0] twiddle_rsc_0_13_ARPROT;
  input [3:0] twiddle_rsc_0_13_ARCACHE;
  input twiddle_rsc_0_13_ARLOCK;
  input [1:0] twiddle_rsc_0_13_ARBURST;
  input [2:0] twiddle_rsc_0_13_ARSIZE;
  input [7:0] twiddle_rsc_0_13_ARLEN;
  input [11:0] twiddle_rsc_0_13_ARADDR;
  input twiddle_rsc_0_13_ARID;
  input twiddle_rsc_0_13_BREADY;
  output twiddle_rsc_0_13_BVALID;
  output twiddle_rsc_0_13_BUSER;
  output [1:0] twiddle_rsc_0_13_BRESP;
  output twiddle_rsc_0_13_BID;
  output twiddle_rsc_0_13_WREADY;
  input twiddle_rsc_0_13_WVALID;
  input twiddle_rsc_0_13_WUSER;
  input twiddle_rsc_0_13_WLAST;
  input [3:0] twiddle_rsc_0_13_WSTRB;
  input [31:0] twiddle_rsc_0_13_WDATA;
  output twiddle_rsc_0_13_AWREADY;
  input twiddle_rsc_0_13_AWVALID;
  input twiddle_rsc_0_13_AWUSER;
  input [3:0] twiddle_rsc_0_13_AWREGION;
  input [3:0] twiddle_rsc_0_13_AWQOS;
  input [2:0] twiddle_rsc_0_13_AWPROT;
  input [3:0] twiddle_rsc_0_13_AWCACHE;
  input twiddle_rsc_0_13_AWLOCK;
  input [1:0] twiddle_rsc_0_13_AWBURST;
  input [2:0] twiddle_rsc_0_13_AWSIZE;
  input [7:0] twiddle_rsc_0_13_AWLEN;
  input [11:0] twiddle_rsc_0_13_AWADDR;
  input twiddle_rsc_0_13_AWID;
  input core_wen;
  input twiddle_rsc_0_13_i_oswt;
  output twiddle_rsc_0_13_i_wen_comp;
  input [5:0] twiddle_rsc_0_13_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_13_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_rsc_0_13_i_biwt;
  wire twiddle_rsc_0_13_i_bdwt;
  wire twiddle_rsc_0_13_i_bcwt;
  wire twiddle_rsc_0_13_i_s_re_core_sct;
  wire [5:0] twiddle_rsc_0_13_i_s_raddr;
  wire [31:0] twiddle_rsc_0_13_i_s_din;
  wire twiddle_rsc_0_13_i_s_rrdy;
  wire twiddle_rsc_0_13_i_s_wrdy;
  wire twiddle_rsc_0_13_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_13_i_twiddle_rsc_0_13_wait_dp_inst_twiddle_rsc_0_13_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_13_i_twiddle_rsc_0_13_wait_dp_inst_twiddle_rsc_0_13_i_s_raddr_core
      = {1'b0 , (twiddle_rsc_0_13_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_rsc_0_13_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_rsc_0_13_AWID),
      .AWADDR(twiddle_rsc_0_13_AWADDR),
      .AWLEN(twiddle_rsc_0_13_AWLEN),
      .AWSIZE(twiddle_rsc_0_13_AWSIZE),
      .AWBURST(twiddle_rsc_0_13_AWBURST),
      .AWLOCK(twiddle_rsc_0_13_AWLOCK),
      .AWCACHE(twiddle_rsc_0_13_AWCACHE),
      .AWPROT(twiddle_rsc_0_13_AWPROT),
      .AWQOS(twiddle_rsc_0_13_AWQOS),
      .AWREGION(twiddle_rsc_0_13_AWREGION),
      .AWUSER(twiddle_rsc_0_13_AWUSER),
      .AWVALID(twiddle_rsc_0_13_AWVALID),
      .AWREADY(twiddle_rsc_0_13_AWREADY),
      .WDATA(twiddle_rsc_0_13_WDATA),
      .WSTRB(twiddle_rsc_0_13_WSTRB),
      .WLAST(twiddle_rsc_0_13_WLAST),
      .WUSER(twiddle_rsc_0_13_WUSER),
      .WVALID(twiddle_rsc_0_13_WVALID),
      .WREADY(twiddle_rsc_0_13_WREADY),
      .BID(twiddle_rsc_0_13_BID),
      .BRESP(twiddle_rsc_0_13_BRESP),
      .BUSER(twiddle_rsc_0_13_BUSER),
      .BVALID(twiddle_rsc_0_13_BVALID),
      .BREADY(twiddle_rsc_0_13_BREADY),
      .ARID(twiddle_rsc_0_13_ARID),
      .ARADDR(twiddle_rsc_0_13_ARADDR),
      .ARLEN(twiddle_rsc_0_13_ARLEN),
      .ARSIZE(twiddle_rsc_0_13_ARSIZE),
      .ARBURST(twiddle_rsc_0_13_ARBURST),
      .ARLOCK(twiddle_rsc_0_13_ARLOCK),
      .ARCACHE(twiddle_rsc_0_13_ARCACHE),
      .ARPROT(twiddle_rsc_0_13_ARPROT),
      .ARQOS(twiddle_rsc_0_13_ARQOS),
      .ARREGION(twiddle_rsc_0_13_ARREGION),
      .ARUSER(twiddle_rsc_0_13_ARUSER),
      .ARVALID(twiddle_rsc_0_13_ARVALID),
      .ARREADY(twiddle_rsc_0_13_ARREADY),
      .RID(twiddle_rsc_0_13_RID),
      .RDATA(twiddle_rsc_0_13_RDATA),
      .RRESP(twiddle_rsc_0_13_RRESP),
      .RLAST(twiddle_rsc_0_13_RLAST),
      .RUSER(twiddle_rsc_0_13_RUSER),
      .RVALID(twiddle_rsc_0_13_RVALID),
      .RREADY(twiddle_rsc_0_13_RREADY),
      .s_re(twiddle_rsc_0_13_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_rsc_0_13_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_rsc_0_13_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_rsc_0_13_i_s_rrdy),
      .s_wrdy(twiddle_rsc_0_13_i_s_wrdy),
      .is_idle(twiddle_rsc_0_13_is_idle),
      .tr_write_done(twiddle_rsc_0_13_tr_write_done),
      .s_tdone(twiddle_rsc_0_13_s_tdone)
    );
  peaseNTT_core_twiddle_rsc_0_13_i_twiddle_rsc_0_13_wait_ctrl peaseNTT_core_twiddle_rsc_0_13_i_twiddle_rsc_0_13_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_rsc_0_13_i_oswt(twiddle_rsc_0_13_i_oswt),
      .twiddle_rsc_0_13_i_biwt(twiddle_rsc_0_13_i_biwt),
      .twiddle_rsc_0_13_i_bdwt(twiddle_rsc_0_13_i_bdwt),
      .twiddle_rsc_0_13_i_bcwt(twiddle_rsc_0_13_i_bcwt),
      .twiddle_rsc_0_13_i_s_re_core_sct(twiddle_rsc_0_13_i_s_re_core_sct),
      .twiddle_rsc_0_13_i_s_rrdy(twiddle_rsc_0_13_i_s_rrdy)
    );
  peaseNTT_core_twiddle_rsc_0_13_i_twiddle_rsc_0_13_wait_dp peaseNTT_core_twiddle_rsc_0_13_i_twiddle_rsc_0_13_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_13_i_oswt(twiddle_rsc_0_13_i_oswt),
      .twiddle_rsc_0_13_i_wen_comp(twiddle_rsc_0_13_i_wen_comp),
      .twiddle_rsc_0_13_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_13_i_twiddle_rsc_0_13_wait_dp_inst_twiddle_rsc_0_13_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_13_i_s_din_mxwt(twiddle_rsc_0_13_i_s_din_mxwt),
      .twiddle_rsc_0_13_i_biwt(twiddle_rsc_0_13_i_biwt),
      .twiddle_rsc_0_13_i_bdwt(twiddle_rsc_0_13_i_bdwt),
      .twiddle_rsc_0_13_i_bcwt(twiddle_rsc_0_13_i_bcwt),
      .twiddle_rsc_0_13_i_s_raddr(twiddle_rsc_0_13_i_s_raddr),
      .twiddle_rsc_0_13_i_s_raddr_core_sct(twiddle_rsc_0_13_i_s_re_core_sct),
      .twiddle_rsc_0_13_i_s_din(twiddle_rsc_0_13_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_12_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_12_i (
  clk, rst, twiddle_rsc_0_12_s_tdone, twiddle_rsc_0_12_tr_write_done, twiddle_rsc_0_12_RREADY,
      twiddle_rsc_0_12_RVALID, twiddle_rsc_0_12_RUSER, twiddle_rsc_0_12_RLAST, twiddle_rsc_0_12_RRESP,
      twiddle_rsc_0_12_RDATA, twiddle_rsc_0_12_RID, twiddle_rsc_0_12_ARREADY, twiddle_rsc_0_12_ARVALID,
      twiddle_rsc_0_12_ARUSER, twiddle_rsc_0_12_ARREGION, twiddle_rsc_0_12_ARQOS,
      twiddle_rsc_0_12_ARPROT, twiddle_rsc_0_12_ARCACHE, twiddle_rsc_0_12_ARLOCK,
      twiddle_rsc_0_12_ARBURST, twiddle_rsc_0_12_ARSIZE, twiddle_rsc_0_12_ARLEN,
      twiddle_rsc_0_12_ARADDR, twiddle_rsc_0_12_ARID, twiddle_rsc_0_12_BREADY, twiddle_rsc_0_12_BVALID,
      twiddle_rsc_0_12_BUSER, twiddle_rsc_0_12_BRESP, twiddle_rsc_0_12_BID, twiddle_rsc_0_12_WREADY,
      twiddle_rsc_0_12_WVALID, twiddle_rsc_0_12_WUSER, twiddle_rsc_0_12_WLAST, twiddle_rsc_0_12_WSTRB,
      twiddle_rsc_0_12_WDATA, twiddle_rsc_0_12_AWREADY, twiddle_rsc_0_12_AWVALID,
      twiddle_rsc_0_12_AWUSER, twiddle_rsc_0_12_AWREGION, twiddle_rsc_0_12_AWQOS,
      twiddle_rsc_0_12_AWPROT, twiddle_rsc_0_12_AWCACHE, twiddle_rsc_0_12_AWLOCK,
      twiddle_rsc_0_12_AWBURST, twiddle_rsc_0_12_AWSIZE, twiddle_rsc_0_12_AWLEN,
      twiddle_rsc_0_12_AWADDR, twiddle_rsc_0_12_AWID, core_wen, twiddle_rsc_0_12_i_oswt,
      twiddle_rsc_0_12_i_wen_comp, twiddle_rsc_0_12_i_s_raddr_core, twiddle_rsc_0_12_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_rsc_0_12_s_tdone;
  input twiddle_rsc_0_12_tr_write_done;
  input twiddle_rsc_0_12_RREADY;
  output twiddle_rsc_0_12_RVALID;
  output twiddle_rsc_0_12_RUSER;
  output twiddle_rsc_0_12_RLAST;
  output [1:0] twiddle_rsc_0_12_RRESP;
  output [31:0] twiddle_rsc_0_12_RDATA;
  output twiddle_rsc_0_12_RID;
  output twiddle_rsc_0_12_ARREADY;
  input twiddle_rsc_0_12_ARVALID;
  input twiddle_rsc_0_12_ARUSER;
  input [3:0] twiddle_rsc_0_12_ARREGION;
  input [3:0] twiddle_rsc_0_12_ARQOS;
  input [2:0] twiddle_rsc_0_12_ARPROT;
  input [3:0] twiddle_rsc_0_12_ARCACHE;
  input twiddle_rsc_0_12_ARLOCK;
  input [1:0] twiddle_rsc_0_12_ARBURST;
  input [2:0] twiddle_rsc_0_12_ARSIZE;
  input [7:0] twiddle_rsc_0_12_ARLEN;
  input [11:0] twiddle_rsc_0_12_ARADDR;
  input twiddle_rsc_0_12_ARID;
  input twiddle_rsc_0_12_BREADY;
  output twiddle_rsc_0_12_BVALID;
  output twiddle_rsc_0_12_BUSER;
  output [1:0] twiddle_rsc_0_12_BRESP;
  output twiddle_rsc_0_12_BID;
  output twiddle_rsc_0_12_WREADY;
  input twiddle_rsc_0_12_WVALID;
  input twiddle_rsc_0_12_WUSER;
  input twiddle_rsc_0_12_WLAST;
  input [3:0] twiddle_rsc_0_12_WSTRB;
  input [31:0] twiddle_rsc_0_12_WDATA;
  output twiddle_rsc_0_12_AWREADY;
  input twiddle_rsc_0_12_AWVALID;
  input twiddle_rsc_0_12_AWUSER;
  input [3:0] twiddle_rsc_0_12_AWREGION;
  input [3:0] twiddle_rsc_0_12_AWQOS;
  input [2:0] twiddle_rsc_0_12_AWPROT;
  input [3:0] twiddle_rsc_0_12_AWCACHE;
  input twiddle_rsc_0_12_AWLOCK;
  input [1:0] twiddle_rsc_0_12_AWBURST;
  input [2:0] twiddle_rsc_0_12_AWSIZE;
  input [7:0] twiddle_rsc_0_12_AWLEN;
  input [11:0] twiddle_rsc_0_12_AWADDR;
  input twiddle_rsc_0_12_AWID;
  input core_wen;
  input twiddle_rsc_0_12_i_oswt;
  output twiddle_rsc_0_12_i_wen_comp;
  input [5:0] twiddle_rsc_0_12_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_12_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_rsc_0_12_i_biwt;
  wire twiddle_rsc_0_12_i_bdwt;
  wire twiddle_rsc_0_12_i_bcwt;
  wire twiddle_rsc_0_12_i_s_re_core_sct;
  wire [5:0] twiddle_rsc_0_12_i_s_raddr;
  wire [31:0] twiddle_rsc_0_12_i_s_din;
  wire twiddle_rsc_0_12_i_s_rrdy;
  wire twiddle_rsc_0_12_i_s_wrdy;
  wire twiddle_rsc_0_12_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_12_i_twiddle_rsc_0_12_wait_dp_inst_twiddle_rsc_0_12_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_12_i_twiddle_rsc_0_12_wait_dp_inst_twiddle_rsc_0_12_i_s_raddr_core
      = {1'b0 , (twiddle_rsc_0_12_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_rsc_0_12_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_rsc_0_12_AWID),
      .AWADDR(twiddle_rsc_0_12_AWADDR),
      .AWLEN(twiddle_rsc_0_12_AWLEN),
      .AWSIZE(twiddle_rsc_0_12_AWSIZE),
      .AWBURST(twiddle_rsc_0_12_AWBURST),
      .AWLOCK(twiddle_rsc_0_12_AWLOCK),
      .AWCACHE(twiddle_rsc_0_12_AWCACHE),
      .AWPROT(twiddle_rsc_0_12_AWPROT),
      .AWQOS(twiddle_rsc_0_12_AWQOS),
      .AWREGION(twiddle_rsc_0_12_AWREGION),
      .AWUSER(twiddle_rsc_0_12_AWUSER),
      .AWVALID(twiddle_rsc_0_12_AWVALID),
      .AWREADY(twiddle_rsc_0_12_AWREADY),
      .WDATA(twiddle_rsc_0_12_WDATA),
      .WSTRB(twiddle_rsc_0_12_WSTRB),
      .WLAST(twiddle_rsc_0_12_WLAST),
      .WUSER(twiddle_rsc_0_12_WUSER),
      .WVALID(twiddle_rsc_0_12_WVALID),
      .WREADY(twiddle_rsc_0_12_WREADY),
      .BID(twiddle_rsc_0_12_BID),
      .BRESP(twiddle_rsc_0_12_BRESP),
      .BUSER(twiddle_rsc_0_12_BUSER),
      .BVALID(twiddle_rsc_0_12_BVALID),
      .BREADY(twiddle_rsc_0_12_BREADY),
      .ARID(twiddle_rsc_0_12_ARID),
      .ARADDR(twiddle_rsc_0_12_ARADDR),
      .ARLEN(twiddle_rsc_0_12_ARLEN),
      .ARSIZE(twiddle_rsc_0_12_ARSIZE),
      .ARBURST(twiddle_rsc_0_12_ARBURST),
      .ARLOCK(twiddle_rsc_0_12_ARLOCK),
      .ARCACHE(twiddle_rsc_0_12_ARCACHE),
      .ARPROT(twiddle_rsc_0_12_ARPROT),
      .ARQOS(twiddle_rsc_0_12_ARQOS),
      .ARREGION(twiddle_rsc_0_12_ARREGION),
      .ARUSER(twiddle_rsc_0_12_ARUSER),
      .ARVALID(twiddle_rsc_0_12_ARVALID),
      .ARREADY(twiddle_rsc_0_12_ARREADY),
      .RID(twiddle_rsc_0_12_RID),
      .RDATA(twiddle_rsc_0_12_RDATA),
      .RRESP(twiddle_rsc_0_12_RRESP),
      .RLAST(twiddle_rsc_0_12_RLAST),
      .RUSER(twiddle_rsc_0_12_RUSER),
      .RVALID(twiddle_rsc_0_12_RVALID),
      .RREADY(twiddle_rsc_0_12_RREADY),
      .s_re(twiddle_rsc_0_12_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_rsc_0_12_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_rsc_0_12_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_rsc_0_12_i_s_rrdy),
      .s_wrdy(twiddle_rsc_0_12_i_s_wrdy),
      .is_idle(twiddle_rsc_0_12_is_idle),
      .tr_write_done(twiddle_rsc_0_12_tr_write_done),
      .s_tdone(twiddle_rsc_0_12_s_tdone)
    );
  peaseNTT_core_twiddle_rsc_0_12_i_twiddle_rsc_0_12_wait_ctrl peaseNTT_core_twiddle_rsc_0_12_i_twiddle_rsc_0_12_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_rsc_0_12_i_oswt(twiddle_rsc_0_12_i_oswt),
      .twiddle_rsc_0_12_i_biwt(twiddle_rsc_0_12_i_biwt),
      .twiddle_rsc_0_12_i_bdwt(twiddle_rsc_0_12_i_bdwt),
      .twiddle_rsc_0_12_i_bcwt(twiddle_rsc_0_12_i_bcwt),
      .twiddle_rsc_0_12_i_s_re_core_sct(twiddle_rsc_0_12_i_s_re_core_sct),
      .twiddle_rsc_0_12_i_s_rrdy(twiddle_rsc_0_12_i_s_rrdy)
    );
  peaseNTT_core_twiddle_rsc_0_12_i_twiddle_rsc_0_12_wait_dp peaseNTT_core_twiddle_rsc_0_12_i_twiddle_rsc_0_12_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_12_i_oswt(twiddle_rsc_0_12_i_oswt),
      .twiddle_rsc_0_12_i_wen_comp(twiddle_rsc_0_12_i_wen_comp),
      .twiddle_rsc_0_12_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_12_i_twiddle_rsc_0_12_wait_dp_inst_twiddle_rsc_0_12_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_12_i_s_din_mxwt(twiddle_rsc_0_12_i_s_din_mxwt),
      .twiddle_rsc_0_12_i_biwt(twiddle_rsc_0_12_i_biwt),
      .twiddle_rsc_0_12_i_bdwt(twiddle_rsc_0_12_i_bdwt),
      .twiddle_rsc_0_12_i_bcwt(twiddle_rsc_0_12_i_bcwt),
      .twiddle_rsc_0_12_i_s_raddr(twiddle_rsc_0_12_i_s_raddr),
      .twiddle_rsc_0_12_i_s_raddr_core_sct(twiddle_rsc_0_12_i_s_re_core_sct),
      .twiddle_rsc_0_12_i_s_din(twiddle_rsc_0_12_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_11_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_11_i (
  clk, rst, twiddle_rsc_0_11_s_tdone, twiddle_rsc_0_11_tr_write_done, twiddle_rsc_0_11_RREADY,
      twiddle_rsc_0_11_RVALID, twiddle_rsc_0_11_RUSER, twiddle_rsc_0_11_RLAST, twiddle_rsc_0_11_RRESP,
      twiddle_rsc_0_11_RDATA, twiddle_rsc_0_11_RID, twiddle_rsc_0_11_ARREADY, twiddle_rsc_0_11_ARVALID,
      twiddle_rsc_0_11_ARUSER, twiddle_rsc_0_11_ARREGION, twiddle_rsc_0_11_ARQOS,
      twiddle_rsc_0_11_ARPROT, twiddle_rsc_0_11_ARCACHE, twiddle_rsc_0_11_ARLOCK,
      twiddle_rsc_0_11_ARBURST, twiddle_rsc_0_11_ARSIZE, twiddle_rsc_0_11_ARLEN,
      twiddle_rsc_0_11_ARADDR, twiddle_rsc_0_11_ARID, twiddle_rsc_0_11_BREADY, twiddle_rsc_0_11_BVALID,
      twiddle_rsc_0_11_BUSER, twiddle_rsc_0_11_BRESP, twiddle_rsc_0_11_BID, twiddle_rsc_0_11_WREADY,
      twiddle_rsc_0_11_WVALID, twiddle_rsc_0_11_WUSER, twiddle_rsc_0_11_WLAST, twiddle_rsc_0_11_WSTRB,
      twiddle_rsc_0_11_WDATA, twiddle_rsc_0_11_AWREADY, twiddle_rsc_0_11_AWVALID,
      twiddle_rsc_0_11_AWUSER, twiddle_rsc_0_11_AWREGION, twiddle_rsc_0_11_AWQOS,
      twiddle_rsc_0_11_AWPROT, twiddle_rsc_0_11_AWCACHE, twiddle_rsc_0_11_AWLOCK,
      twiddle_rsc_0_11_AWBURST, twiddle_rsc_0_11_AWSIZE, twiddle_rsc_0_11_AWLEN,
      twiddle_rsc_0_11_AWADDR, twiddle_rsc_0_11_AWID, core_wen, twiddle_rsc_0_11_i_oswt,
      twiddle_rsc_0_11_i_wen_comp, twiddle_rsc_0_11_i_s_raddr_core, twiddle_rsc_0_11_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_rsc_0_11_s_tdone;
  input twiddle_rsc_0_11_tr_write_done;
  input twiddle_rsc_0_11_RREADY;
  output twiddle_rsc_0_11_RVALID;
  output twiddle_rsc_0_11_RUSER;
  output twiddle_rsc_0_11_RLAST;
  output [1:0] twiddle_rsc_0_11_RRESP;
  output [31:0] twiddle_rsc_0_11_RDATA;
  output twiddle_rsc_0_11_RID;
  output twiddle_rsc_0_11_ARREADY;
  input twiddle_rsc_0_11_ARVALID;
  input twiddle_rsc_0_11_ARUSER;
  input [3:0] twiddle_rsc_0_11_ARREGION;
  input [3:0] twiddle_rsc_0_11_ARQOS;
  input [2:0] twiddle_rsc_0_11_ARPROT;
  input [3:0] twiddle_rsc_0_11_ARCACHE;
  input twiddle_rsc_0_11_ARLOCK;
  input [1:0] twiddle_rsc_0_11_ARBURST;
  input [2:0] twiddle_rsc_0_11_ARSIZE;
  input [7:0] twiddle_rsc_0_11_ARLEN;
  input [11:0] twiddle_rsc_0_11_ARADDR;
  input twiddle_rsc_0_11_ARID;
  input twiddle_rsc_0_11_BREADY;
  output twiddle_rsc_0_11_BVALID;
  output twiddle_rsc_0_11_BUSER;
  output [1:0] twiddle_rsc_0_11_BRESP;
  output twiddle_rsc_0_11_BID;
  output twiddle_rsc_0_11_WREADY;
  input twiddle_rsc_0_11_WVALID;
  input twiddle_rsc_0_11_WUSER;
  input twiddle_rsc_0_11_WLAST;
  input [3:0] twiddle_rsc_0_11_WSTRB;
  input [31:0] twiddle_rsc_0_11_WDATA;
  output twiddle_rsc_0_11_AWREADY;
  input twiddle_rsc_0_11_AWVALID;
  input twiddle_rsc_0_11_AWUSER;
  input [3:0] twiddle_rsc_0_11_AWREGION;
  input [3:0] twiddle_rsc_0_11_AWQOS;
  input [2:0] twiddle_rsc_0_11_AWPROT;
  input [3:0] twiddle_rsc_0_11_AWCACHE;
  input twiddle_rsc_0_11_AWLOCK;
  input [1:0] twiddle_rsc_0_11_AWBURST;
  input [2:0] twiddle_rsc_0_11_AWSIZE;
  input [7:0] twiddle_rsc_0_11_AWLEN;
  input [11:0] twiddle_rsc_0_11_AWADDR;
  input twiddle_rsc_0_11_AWID;
  input core_wen;
  input twiddle_rsc_0_11_i_oswt;
  output twiddle_rsc_0_11_i_wen_comp;
  input [5:0] twiddle_rsc_0_11_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_11_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_rsc_0_11_i_biwt;
  wire twiddle_rsc_0_11_i_bdwt;
  wire twiddle_rsc_0_11_i_bcwt;
  wire twiddle_rsc_0_11_i_s_re_core_sct;
  wire [5:0] twiddle_rsc_0_11_i_s_raddr;
  wire [31:0] twiddle_rsc_0_11_i_s_din;
  wire twiddle_rsc_0_11_i_s_rrdy;
  wire twiddle_rsc_0_11_i_s_wrdy;
  wire twiddle_rsc_0_11_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_11_i_twiddle_rsc_0_11_wait_dp_inst_twiddle_rsc_0_11_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_11_i_twiddle_rsc_0_11_wait_dp_inst_twiddle_rsc_0_11_i_s_raddr_core
      = {1'b0 , (twiddle_rsc_0_11_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_rsc_0_11_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_rsc_0_11_AWID),
      .AWADDR(twiddle_rsc_0_11_AWADDR),
      .AWLEN(twiddle_rsc_0_11_AWLEN),
      .AWSIZE(twiddle_rsc_0_11_AWSIZE),
      .AWBURST(twiddle_rsc_0_11_AWBURST),
      .AWLOCK(twiddle_rsc_0_11_AWLOCK),
      .AWCACHE(twiddle_rsc_0_11_AWCACHE),
      .AWPROT(twiddle_rsc_0_11_AWPROT),
      .AWQOS(twiddle_rsc_0_11_AWQOS),
      .AWREGION(twiddle_rsc_0_11_AWREGION),
      .AWUSER(twiddle_rsc_0_11_AWUSER),
      .AWVALID(twiddle_rsc_0_11_AWVALID),
      .AWREADY(twiddle_rsc_0_11_AWREADY),
      .WDATA(twiddle_rsc_0_11_WDATA),
      .WSTRB(twiddle_rsc_0_11_WSTRB),
      .WLAST(twiddle_rsc_0_11_WLAST),
      .WUSER(twiddle_rsc_0_11_WUSER),
      .WVALID(twiddle_rsc_0_11_WVALID),
      .WREADY(twiddle_rsc_0_11_WREADY),
      .BID(twiddle_rsc_0_11_BID),
      .BRESP(twiddle_rsc_0_11_BRESP),
      .BUSER(twiddle_rsc_0_11_BUSER),
      .BVALID(twiddle_rsc_0_11_BVALID),
      .BREADY(twiddle_rsc_0_11_BREADY),
      .ARID(twiddle_rsc_0_11_ARID),
      .ARADDR(twiddle_rsc_0_11_ARADDR),
      .ARLEN(twiddle_rsc_0_11_ARLEN),
      .ARSIZE(twiddle_rsc_0_11_ARSIZE),
      .ARBURST(twiddle_rsc_0_11_ARBURST),
      .ARLOCK(twiddle_rsc_0_11_ARLOCK),
      .ARCACHE(twiddle_rsc_0_11_ARCACHE),
      .ARPROT(twiddle_rsc_0_11_ARPROT),
      .ARQOS(twiddle_rsc_0_11_ARQOS),
      .ARREGION(twiddle_rsc_0_11_ARREGION),
      .ARUSER(twiddle_rsc_0_11_ARUSER),
      .ARVALID(twiddle_rsc_0_11_ARVALID),
      .ARREADY(twiddle_rsc_0_11_ARREADY),
      .RID(twiddle_rsc_0_11_RID),
      .RDATA(twiddle_rsc_0_11_RDATA),
      .RRESP(twiddle_rsc_0_11_RRESP),
      .RLAST(twiddle_rsc_0_11_RLAST),
      .RUSER(twiddle_rsc_0_11_RUSER),
      .RVALID(twiddle_rsc_0_11_RVALID),
      .RREADY(twiddle_rsc_0_11_RREADY),
      .s_re(twiddle_rsc_0_11_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_rsc_0_11_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_rsc_0_11_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_rsc_0_11_i_s_rrdy),
      .s_wrdy(twiddle_rsc_0_11_i_s_wrdy),
      .is_idle(twiddle_rsc_0_11_is_idle),
      .tr_write_done(twiddle_rsc_0_11_tr_write_done),
      .s_tdone(twiddle_rsc_0_11_s_tdone)
    );
  peaseNTT_core_twiddle_rsc_0_11_i_twiddle_rsc_0_11_wait_ctrl peaseNTT_core_twiddle_rsc_0_11_i_twiddle_rsc_0_11_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_rsc_0_11_i_oswt(twiddle_rsc_0_11_i_oswt),
      .twiddle_rsc_0_11_i_biwt(twiddle_rsc_0_11_i_biwt),
      .twiddle_rsc_0_11_i_bdwt(twiddle_rsc_0_11_i_bdwt),
      .twiddle_rsc_0_11_i_bcwt(twiddle_rsc_0_11_i_bcwt),
      .twiddle_rsc_0_11_i_s_re_core_sct(twiddle_rsc_0_11_i_s_re_core_sct),
      .twiddle_rsc_0_11_i_s_rrdy(twiddle_rsc_0_11_i_s_rrdy)
    );
  peaseNTT_core_twiddle_rsc_0_11_i_twiddle_rsc_0_11_wait_dp peaseNTT_core_twiddle_rsc_0_11_i_twiddle_rsc_0_11_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_11_i_oswt(twiddle_rsc_0_11_i_oswt),
      .twiddle_rsc_0_11_i_wen_comp(twiddle_rsc_0_11_i_wen_comp),
      .twiddle_rsc_0_11_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_11_i_twiddle_rsc_0_11_wait_dp_inst_twiddle_rsc_0_11_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_11_i_s_din_mxwt(twiddle_rsc_0_11_i_s_din_mxwt),
      .twiddle_rsc_0_11_i_biwt(twiddle_rsc_0_11_i_biwt),
      .twiddle_rsc_0_11_i_bdwt(twiddle_rsc_0_11_i_bdwt),
      .twiddle_rsc_0_11_i_bcwt(twiddle_rsc_0_11_i_bcwt),
      .twiddle_rsc_0_11_i_s_raddr(twiddle_rsc_0_11_i_s_raddr),
      .twiddle_rsc_0_11_i_s_raddr_core_sct(twiddle_rsc_0_11_i_s_re_core_sct),
      .twiddle_rsc_0_11_i_s_din(twiddle_rsc_0_11_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_10_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_10_i (
  clk, rst, twiddle_rsc_0_10_s_tdone, twiddle_rsc_0_10_tr_write_done, twiddle_rsc_0_10_RREADY,
      twiddle_rsc_0_10_RVALID, twiddle_rsc_0_10_RUSER, twiddle_rsc_0_10_RLAST, twiddle_rsc_0_10_RRESP,
      twiddle_rsc_0_10_RDATA, twiddle_rsc_0_10_RID, twiddle_rsc_0_10_ARREADY, twiddle_rsc_0_10_ARVALID,
      twiddle_rsc_0_10_ARUSER, twiddle_rsc_0_10_ARREGION, twiddle_rsc_0_10_ARQOS,
      twiddle_rsc_0_10_ARPROT, twiddle_rsc_0_10_ARCACHE, twiddle_rsc_0_10_ARLOCK,
      twiddle_rsc_0_10_ARBURST, twiddle_rsc_0_10_ARSIZE, twiddle_rsc_0_10_ARLEN,
      twiddle_rsc_0_10_ARADDR, twiddle_rsc_0_10_ARID, twiddle_rsc_0_10_BREADY, twiddle_rsc_0_10_BVALID,
      twiddle_rsc_0_10_BUSER, twiddle_rsc_0_10_BRESP, twiddle_rsc_0_10_BID, twiddle_rsc_0_10_WREADY,
      twiddle_rsc_0_10_WVALID, twiddle_rsc_0_10_WUSER, twiddle_rsc_0_10_WLAST, twiddle_rsc_0_10_WSTRB,
      twiddle_rsc_0_10_WDATA, twiddle_rsc_0_10_AWREADY, twiddle_rsc_0_10_AWVALID,
      twiddle_rsc_0_10_AWUSER, twiddle_rsc_0_10_AWREGION, twiddle_rsc_0_10_AWQOS,
      twiddle_rsc_0_10_AWPROT, twiddle_rsc_0_10_AWCACHE, twiddle_rsc_0_10_AWLOCK,
      twiddle_rsc_0_10_AWBURST, twiddle_rsc_0_10_AWSIZE, twiddle_rsc_0_10_AWLEN,
      twiddle_rsc_0_10_AWADDR, twiddle_rsc_0_10_AWID, core_wen, twiddle_rsc_0_10_i_oswt,
      twiddle_rsc_0_10_i_wen_comp, twiddle_rsc_0_10_i_s_raddr_core, twiddle_rsc_0_10_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_rsc_0_10_s_tdone;
  input twiddle_rsc_0_10_tr_write_done;
  input twiddle_rsc_0_10_RREADY;
  output twiddle_rsc_0_10_RVALID;
  output twiddle_rsc_0_10_RUSER;
  output twiddle_rsc_0_10_RLAST;
  output [1:0] twiddle_rsc_0_10_RRESP;
  output [31:0] twiddle_rsc_0_10_RDATA;
  output twiddle_rsc_0_10_RID;
  output twiddle_rsc_0_10_ARREADY;
  input twiddle_rsc_0_10_ARVALID;
  input twiddle_rsc_0_10_ARUSER;
  input [3:0] twiddle_rsc_0_10_ARREGION;
  input [3:0] twiddle_rsc_0_10_ARQOS;
  input [2:0] twiddle_rsc_0_10_ARPROT;
  input [3:0] twiddle_rsc_0_10_ARCACHE;
  input twiddle_rsc_0_10_ARLOCK;
  input [1:0] twiddle_rsc_0_10_ARBURST;
  input [2:0] twiddle_rsc_0_10_ARSIZE;
  input [7:0] twiddle_rsc_0_10_ARLEN;
  input [11:0] twiddle_rsc_0_10_ARADDR;
  input twiddle_rsc_0_10_ARID;
  input twiddle_rsc_0_10_BREADY;
  output twiddle_rsc_0_10_BVALID;
  output twiddle_rsc_0_10_BUSER;
  output [1:0] twiddle_rsc_0_10_BRESP;
  output twiddle_rsc_0_10_BID;
  output twiddle_rsc_0_10_WREADY;
  input twiddle_rsc_0_10_WVALID;
  input twiddle_rsc_0_10_WUSER;
  input twiddle_rsc_0_10_WLAST;
  input [3:0] twiddle_rsc_0_10_WSTRB;
  input [31:0] twiddle_rsc_0_10_WDATA;
  output twiddle_rsc_0_10_AWREADY;
  input twiddle_rsc_0_10_AWVALID;
  input twiddle_rsc_0_10_AWUSER;
  input [3:0] twiddle_rsc_0_10_AWREGION;
  input [3:0] twiddle_rsc_0_10_AWQOS;
  input [2:0] twiddle_rsc_0_10_AWPROT;
  input [3:0] twiddle_rsc_0_10_AWCACHE;
  input twiddle_rsc_0_10_AWLOCK;
  input [1:0] twiddle_rsc_0_10_AWBURST;
  input [2:0] twiddle_rsc_0_10_AWSIZE;
  input [7:0] twiddle_rsc_0_10_AWLEN;
  input [11:0] twiddle_rsc_0_10_AWADDR;
  input twiddle_rsc_0_10_AWID;
  input core_wen;
  input twiddle_rsc_0_10_i_oswt;
  output twiddle_rsc_0_10_i_wen_comp;
  input [5:0] twiddle_rsc_0_10_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_10_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_rsc_0_10_i_biwt;
  wire twiddle_rsc_0_10_i_bdwt;
  wire twiddle_rsc_0_10_i_bcwt;
  wire twiddle_rsc_0_10_i_s_re_core_sct;
  wire [5:0] twiddle_rsc_0_10_i_s_raddr;
  wire [31:0] twiddle_rsc_0_10_i_s_din;
  wire twiddle_rsc_0_10_i_s_rrdy;
  wire twiddle_rsc_0_10_i_s_wrdy;
  wire twiddle_rsc_0_10_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_10_i_twiddle_rsc_0_10_wait_dp_inst_twiddle_rsc_0_10_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_10_i_twiddle_rsc_0_10_wait_dp_inst_twiddle_rsc_0_10_i_s_raddr_core
      = {1'b0 , (twiddle_rsc_0_10_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_rsc_0_10_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_rsc_0_10_AWID),
      .AWADDR(twiddle_rsc_0_10_AWADDR),
      .AWLEN(twiddle_rsc_0_10_AWLEN),
      .AWSIZE(twiddle_rsc_0_10_AWSIZE),
      .AWBURST(twiddle_rsc_0_10_AWBURST),
      .AWLOCK(twiddle_rsc_0_10_AWLOCK),
      .AWCACHE(twiddle_rsc_0_10_AWCACHE),
      .AWPROT(twiddle_rsc_0_10_AWPROT),
      .AWQOS(twiddle_rsc_0_10_AWQOS),
      .AWREGION(twiddle_rsc_0_10_AWREGION),
      .AWUSER(twiddle_rsc_0_10_AWUSER),
      .AWVALID(twiddle_rsc_0_10_AWVALID),
      .AWREADY(twiddle_rsc_0_10_AWREADY),
      .WDATA(twiddle_rsc_0_10_WDATA),
      .WSTRB(twiddle_rsc_0_10_WSTRB),
      .WLAST(twiddle_rsc_0_10_WLAST),
      .WUSER(twiddle_rsc_0_10_WUSER),
      .WVALID(twiddle_rsc_0_10_WVALID),
      .WREADY(twiddle_rsc_0_10_WREADY),
      .BID(twiddle_rsc_0_10_BID),
      .BRESP(twiddle_rsc_0_10_BRESP),
      .BUSER(twiddle_rsc_0_10_BUSER),
      .BVALID(twiddle_rsc_0_10_BVALID),
      .BREADY(twiddle_rsc_0_10_BREADY),
      .ARID(twiddle_rsc_0_10_ARID),
      .ARADDR(twiddle_rsc_0_10_ARADDR),
      .ARLEN(twiddle_rsc_0_10_ARLEN),
      .ARSIZE(twiddle_rsc_0_10_ARSIZE),
      .ARBURST(twiddle_rsc_0_10_ARBURST),
      .ARLOCK(twiddle_rsc_0_10_ARLOCK),
      .ARCACHE(twiddle_rsc_0_10_ARCACHE),
      .ARPROT(twiddle_rsc_0_10_ARPROT),
      .ARQOS(twiddle_rsc_0_10_ARQOS),
      .ARREGION(twiddle_rsc_0_10_ARREGION),
      .ARUSER(twiddle_rsc_0_10_ARUSER),
      .ARVALID(twiddle_rsc_0_10_ARVALID),
      .ARREADY(twiddle_rsc_0_10_ARREADY),
      .RID(twiddle_rsc_0_10_RID),
      .RDATA(twiddle_rsc_0_10_RDATA),
      .RRESP(twiddle_rsc_0_10_RRESP),
      .RLAST(twiddle_rsc_0_10_RLAST),
      .RUSER(twiddle_rsc_0_10_RUSER),
      .RVALID(twiddle_rsc_0_10_RVALID),
      .RREADY(twiddle_rsc_0_10_RREADY),
      .s_re(twiddle_rsc_0_10_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_rsc_0_10_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_rsc_0_10_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_rsc_0_10_i_s_rrdy),
      .s_wrdy(twiddle_rsc_0_10_i_s_wrdy),
      .is_idle(twiddle_rsc_0_10_is_idle),
      .tr_write_done(twiddle_rsc_0_10_tr_write_done),
      .s_tdone(twiddle_rsc_0_10_s_tdone)
    );
  peaseNTT_core_twiddle_rsc_0_10_i_twiddle_rsc_0_10_wait_ctrl peaseNTT_core_twiddle_rsc_0_10_i_twiddle_rsc_0_10_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_rsc_0_10_i_oswt(twiddle_rsc_0_10_i_oswt),
      .twiddle_rsc_0_10_i_biwt(twiddle_rsc_0_10_i_biwt),
      .twiddle_rsc_0_10_i_bdwt(twiddle_rsc_0_10_i_bdwt),
      .twiddle_rsc_0_10_i_bcwt(twiddle_rsc_0_10_i_bcwt),
      .twiddle_rsc_0_10_i_s_re_core_sct(twiddle_rsc_0_10_i_s_re_core_sct),
      .twiddle_rsc_0_10_i_s_rrdy(twiddle_rsc_0_10_i_s_rrdy)
    );
  peaseNTT_core_twiddle_rsc_0_10_i_twiddle_rsc_0_10_wait_dp peaseNTT_core_twiddle_rsc_0_10_i_twiddle_rsc_0_10_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_10_i_oswt(twiddle_rsc_0_10_i_oswt),
      .twiddle_rsc_0_10_i_wen_comp(twiddle_rsc_0_10_i_wen_comp),
      .twiddle_rsc_0_10_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_10_i_twiddle_rsc_0_10_wait_dp_inst_twiddle_rsc_0_10_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_10_i_s_din_mxwt(twiddle_rsc_0_10_i_s_din_mxwt),
      .twiddle_rsc_0_10_i_biwt(twiddle_rsc_0_10_i_biwt),
      .twiddle_rsc_0_10_i_bdwt(twiddle_rsc_0_10_i_bdwt),
      .twiddle_rsc_0_10_i_bcwt(twiddle_rsc_0_10_i_bcwt),
      .twiddle_rsc_0_10_i_s_raddr(twiddle_rsc_0_10_i_s_raddr),
      .twiddle_rsc_0_10_i_s_raddr_core_sct(twiddle_rsc_0_10_i_s_re_core_sct),
      .twiddle_rsc_0_10_i_s_din(twiddle_rsc_0_10_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_9_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_9_i (
  clk, rst, twiddle_rsc_0_9_s_tdone, twiddle_rsc_0_9_tr_write_done, twiddle_rsc_0_9_RREADY,
      twiddle_rsc_0_9_RVALID, twiddle_rsc_0_9_RUSER, twiddle_rsc_0_9_RLAST, twiddle_rsc_0_9_RRESP,
      twiddle_rsc_0_9_RDATA, twiddle_rsc_0_9_RID, twiddle_rsc_0_9_ARREADY, twiddle_rsc_0_9_ARVALID,
      twiddle_rsc_0_9_ARUSER, twiddle_rsc_0_9_ARREGION, twiddle_rsc_0_9_ARQOS, twiddle_rsc_0_9_ARPROT,
      twiddle_rsc_0_9_ARCACHE, twiddle_rsc_0_9_ARLOCK, twiddle_rsc_0_9_ARBURST, twiddle_rsc_0_9_ARSIZE,
      twiddle_rsc_0_9_ARLEN, twiddle_rsc_0_9_ARADDR, twiddle_rsc_0_9_ARID, twiddle_rsc_0_9_BREADY,
      twiddle_rsc_0_9_BVALID, twiddle_rsc_0_9_BUSER, twiddle_rsc_0_9_BRESP, twiddle_rsc_0_9_BID,
      twiddle_rsc_0_9_WREADY, twiddle_rsc_0_9_WVALID, twiddle_rsc_0_9_WUSER, twiddle_rsc_0_9_WLAST,
      twiddle_rsc_0_9_WSTRB, twiddle_rsc_0_9_WDATA, twiddle_rsc_0_9_AWREADY, twiddle_rsc_0_9_AWVALID,
      twiddle_rsc_0_9_AWUSER, twiddle_rsc_0_9_AWREGION, twiddle_rsc_0_9_AWQOS, twiddle_rsc_0_9_AWPROT,
      twiddle_rsc_0_9_AWCACHE, twiddle_rsc_0_9_AWLOCK, twiddle_rsc_0_9_AWBURST, twiddle_rsc_0_9_AWSIZE,
      twiddle_rsc_0_9_AWLEN, twiddle_rsc_0_9_AWADDR, twiddle_rsc_0_9_AWID, core_wen,
      twiddle_rsc_0_9_i_oswt, twiddle_rsc_0_9_i_wen_comp, twiddle_rsc_0_9_i_s_raddr_core,
      twiddle_rsc_0_9_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_rsc_0_9_s_tdone;
  input twiddle_rsc_0_9_tr_write_done;
  input twiddle_rsc_0_9_RREADY;
  output twiddle_rsc_0_9_RVALID;
  output twiddle_rsc_0_9_RUSER;
  output twiddle_rsc_0_9_RLAST;
  output [1:0] twiddle_rsc_0_9_RRESP;
  output [31:0] twiddle_rsc_0_9_RDATA;
  output twiddle_rsc_0_9_RID;
  output twiddle_rsc_0_9_ARREADY;
  input twiddle_rsc_0_9_ARVALID;
  input twiddle_rsc_0_9_ARUSER;
  input [3:0] twiddle_rsc_0_9_ARREGION;
  input [3:0] twiddle_rsc_0_9_ARQOS;
  input [2:0] twiddle_rsc_0_9_ARPROT;
  input [3:0] twiddle_rsc_0_9_ARCACHE;
  input twiddle_rsc_0_9_ARLOCK;
  input [1:0] twiddle_rsc_0_9_ARBURST;
  input [2:0] twiddle_rsc_0_9_ARSIZE;
  input [7:0] twiddle_rsc_0_9_ARLEN;
  input [11:0] twiddle_rsc_0_9_ARADDR;
  input twiddle_rsc_0_9_ARID;
  input twiddle_rsc_0_9_BREADY;
  output twiddle_rsc_0_9_BVALID;
  output twiddle_rsc_0_9_BUSER;
  output [1:0] twiddle_rsc_0_9_BRESP;
  output twiddle_rsc_0_9_BID;
  output twiddle_rsc_0_9_WREADY;
  input twiddle_rsc_0_9_WVALID;
  input twiddle_rsc_0_9_WUSER;
  input twiddle_rsc_0_9_WLAST;
  input [3:0] twiddle_rsc_0_9_WSTRB;
  input [31:0] twiddle_rsc_0_9_WDATA;
  output twiddle_rsc_0_9_AWREADY;
  input twiddle_rsc_0_9_AWVALID;
  input twiddle_rsc_0_9_AWUSER;
  input [3:0] twiddle_rsc_0_9_AWREGION;
  input [3:0] twiddle_rsc_0_9_AWQOS;
  input [2:0] twiddle_rsc_0_9_AWPROT;
  input [3:0] twiddle_rsc_0_9_AWCACHE;
  input twiddle_rsc_0_9_AWLOCK;
  input [1:0] twiddle_rsc_0_9_AWBURST;
  input [2:0] twiddle_rsc_0_9_AWSIZE;
  input [7:0] twiddle_rsc_0_9_AWLEN;
  input [11:0] twiddle_rsc_0_9_AWADDR;
  input twiddle_rsc_0_9_AWID;
  input core_wen;
  input twiddle_rsc_0_9_i_oswt;
  output twiddle_rsc_0_9_i_wen_comp;
  input [5:0] twiddle_rsc_0_9_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_9_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_rsc_0_9_i_biwt;
  wire twiddle_rsc_0_9_i_bdwt;
  wire twiddle_rsc_0_9_i_bcwt;
  wire twiddle_rsc_0_9_i_s_re_core_sct;
  wire [5:0] twiddle_rsc_0_9_i_s_raddr;
  wire [31:0] twiddle_rsc_0_9_i_s_din;
  wire twiddle_rsc_0_9_i_s_rrdy;
  wire twiddle_rsc_0_9_i_s_wrdy;
  wire twiddle_rsc_0_9_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_9_i_twiddle_rsc_0_9_wait_dp_inst_twiddle_rsc_0_9_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_9_i_twiddle_rsc_0_9_wait_dp_inst_twiddle_rsc_0_9_i_s_raddr_core
      = {1'b0 , (twiddle_rsc_0_9_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_rsc_0_9_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_rsc_0_9_AWID),
      .AWADDR(twiddle_rsc_0_9_AWADDR),
      .AWLEN(twiddle_rsc_0_9_AWLEN),
      .AWSIZE(twiddle_rsc_0_9_AWSIZE),
      .AWBURST(twiddle_rsc_0_9_AWBURST),
      .AWLOCK(twiddle_rsc_0_9_AWLOCK),
      .AWCACHE(twiddle_rsc_0_9_AWCACHE),
      .AWPROT(twiddle_rsc_0_9_AWPROT),
      .AWQOS(twiddle_rsc_0_9_AWQOS),
      .AWREGION(twiddle_rsc_0_9_AWREGION),
      .AWUSER(twiddle_rsc_0_9_AWUSER),
      .AWVALID(twiddle_rsc_0_9_AWVALID),
      .AWREADY(twiddle_rsc_0_9_AWREADY),
      .WDATA(twiddle_rsc_0_9_WDATA),
      .WSTRB(twiddle_rsc_0_9_WSTRB),
      .WLAST(twiddle_rsc_0_9_WLAST),
      .WUSER(twiddle_rsc_0_9_WUSER),
      .WVALID(twiddle_rsc_0_9_WVALID),
      .WREADY(twiddle_rsc_0_9_WREADY),
      .BID(twiddle_rsc_0_9_BID),
      .BRESP(twiddle_rsc_0_9_BRESP),
      .BUSER(twiddle_rsc_0_9_BUSER),
      .BVALID(twiddle_rsc_0_9_BVALID),
      .BREADY(twiddle_rsc_0_9_BREADY),
      .ARID(twiddle_rsc_0_9_ARID),
      .ARADDR(twiddle_rsc_0_9_ARADDR),
      .ARLEN(twiddle_rsc_0_9_ARLEN),
      .ARSIZE(twiddle_rsc_0_9_ARSIZE),
      .ARBURST(twiddle_rsc_0_9_ARBURST),
      .ARLOCK(twiddle_rsc_0_9_ARLOCK),
      .ARCACHE(twiddle_rsc_0_9_ARCACHE),
      .ARPROT(twiddle_rsc_0_9_ARPROT),
      .ARQOS(twiddle_rsc_0_9_ARQOS),
      .ARREGION(twiddle_rsc_0_9_ARREGION),
      .ARUSER(twiddle_rsc_0_9_ARUSER),
      .ARVALID(twiddle_rsc_0_9_ARVALID),
      .ARREADY(twiddle_rsc_0_9_ARREADY),
      .RID(twiddle_rsc_0_9_RID),
      .RDATA(twiddle_rsc_0_9_RDATA),
      .RRESP(twiddle_rsc_0_9_RRESP),
      .RLAST(twiddle_rsc_0_9_RLAST),
      .RUSER(twiddle_rsc_0_9_RUSER),
      .RVALID(twiddle_rsc_0_9_RVALID),
      .RREADY(twiddle_rsc_0_9_RREADY),
      .s_re(twiddle_rsc_0_9_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_rsc_0_9_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_rsc_0_9_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_rsc_0_9_i_s_rrdy),
      .s_wrdy(twiddle_rsc_0_9_i_s_wrdy),
      .is_idle(twiddle_rsc_0_9_is_idle),
      .tr_write_done(twiddle_rsc_0_9_tr_write_done),
      .s_tdone(twiddle_rsc_0_9_s_tdone)
    );
  peaseNTT_core_twiddle_rsc_0_9_i_twiddle_rsc_0_9_wait_ctrl peaseNTT_core_twiddle_rsc_0_9_i_twiddle_rsc_0_9_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_rsc_0_9_i_oswt(twiddle_rsc_0_9_i_oswt),
      .twiddle_rsc_0_9_i_biwt(twiddle_rsc_0_9_i_biwt),
      .twiddle_rsc_0_9_i_bdwt(twiddle_rsc_0_9_i_bdwt),
      .twiddle_rsc_0_9_i_bcwt(twiddle_rsc_0_9_i_bcwt),
      .twiddle_rsc_0_9_i_s_re_core_sct(twiddle_rsc_0_9_i_s_re_core_sct),
      .twiddle_rsc_0_9_i_s_rrdy(twiddle_rsc_0_9_i_s_rrdy)
    );
  peaseNTT_core_twiddle_rsc_0_9_i_twiddle_rsc_0_9_wait_dp peaseNTT_core_twiddle_rsc_0_9_i_twiddle_rsc_0_9_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_9_i_oswt(twiddle_rsc_0_9_i_oswt),
      .twiddle_rsc_0_9_i_wen_comp(twiddle_rsc_0_9_i_wen_comp),
      .twiddle_rsc_0_9_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_9_i_twiddle_rsc_0_9_wait_dp_inst_twiddle_rsc_0_9_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_9_i_s_din_mxwt(twiddle_rsc_0_9_i_s_din_mxwt),
      .twiddle_rsc_0_9_i_biwt(twiddle_rsc_0_9_i_biwt),
      .twiddle_rsc_0_9_i_bdwt(twiddle_rsc_0_9_i_bdwt),
      .twiddle_rsc_0_9_i_bcwt(twiddle_rsc_0_9_i_bcwt),
      .twiddle_rsc_0_9_i_s_raddr(twiddle_rsc_0_9_i_s_raddr),
      .twiddle_rsc_0_9_i_s_raddr_core_sct(twiddle_rsc_0_9_i_s_re_core_sct),
      .twiddle_rsc_0_9_i_s_din(twiddle_rsc_0_9_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_8_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_8_i (
  clk, rst, twiddle_rsc_0_8_s_tdone, twiddle_rsc_0_8_tr_write_done, twiddle_rsc_0_8_RREADY,
      twiddle_rsc_0_8_RVALID, twiddle_rsc_0_8_RUSER, twiddle_rsc_0_8_RLAST, twiddle_rsc_0_8_RRESP,
      twiddle_rsc_0_8_RDATA, twiddle_rsc_0_8_RID, twiddle_rsc_0_8_ARREADY, twiddle_rsc_0_8_ARVALID,
      twiddle_rsc_0_8_ARUSER, twiddle_rsc_0_8_ARREGION, twiddle_rsc_0_8_ARQOS, twiddle_rsc_0_8_ARPROT,
      twiddle_rsc_0_8_ARCACHE, twiddle_rsc_0_8_ARLOCK, twiddle_rsc_0_8_ARBURST, twiddle_rsc_0_8_ARSIZE,
      twiddle_rsc_0_8_ARLEN, twiddle_rsc_0_8_ARADDR, twiddle_rsc_0_8_ARID, twiddle_rsc_0_8_BREADY,
      twiddle_rsc_0_8_BVALID, twiddle_rsc_0_8_BUSER, twiddle_rsc_0_8_BRESP, twiddle_rsc_0_8_BID,
      twiddle_rsc_0_8_WREADY, twiddle_rsc_0_8_WVALID, twiddle_rsc_0_8_WUSER, twiddle_rsc_0_8_WLAST,
      twiddle_rsc_0_8_WSTRB, twiddle_rsc_0_8_WDATA, twiddle_rsc_0_8_AWREADY, twiddle_rsc_0_8_AWVALID,
      twiddle_rsc_0_8_AWUSER, twiddle_rsc_0_8_AWREGION, twiddle_rsc_0_8_AWQOS, twiddle_rsc_0_8_AWPROT,
      twiddle_rsc_0_8_AWCACHE, twiddle_rsc_0_8_AWLOCK, twiddle_rsc_0_8_AWBURST, twiddle_rsc_0_8_AWSIZE,
      twiddle_rsc_0_8_AWLEN, twiddle_rsc_0_8_AWADDR, twiddle_rsc_0_8_AWID, core_wen,
      twiddle_rsc_0_8_i_oswt, twiddle_rsc_0_8_i_wen_comp, twiddle_rsc_0_8_i_s_raddr_core,
      twiddle_rsc_0_8_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_rsc_0_8_s_tdone;
  input twiddle_rsc_0_8_tr_write_done;
  input twiddle_rsc_0_8_RREADY;
  output twiddle_rsc_0_8_RVALID;
  output twiddle_rsc_0_8_RUSER;
  output twiddle_rsc_0_8_RLAST;
  output [1:0] twiddle_rsc_0_8_RRESP;
  output [31:0] twiddle_rsc_0_8_RDATA;
  output twiddle_rsc_0_8_RID;
  output twiddle_rsc_0_8_ARREADY;
  input twiddle_rsc_0_8_ARVALID;
  input twiddle_rsc_0_8_ARUSER;
  input [3:0] twiddle_rsc_0_8_ARREGION;
  input [3:0] twiddle_rsc_0_8_ARQOS;
  input [2:0] twiddle_rsc_0_8_ARPROT;
  input [3:0] twiddle_rsc_0_8_ARCACHE;
  input twiddle_rsc_0_8_ARLOCK;
  input [1:0] twiddle_rsc_0_8_ARBURST;
  input [2:0] twiddle_rsc_0_8_ARSIZE;
  input [7:0] twiddle_rsc_0_8_ARLEN;
  input [11:0] twiddle_rsc_0_8_ARADDR;
  input twiddle_rsc_0_8_ARID;
  input twiddle_rsc_0_8_BREADY;
  output twiddle_rsc_0_8_BVALID;
  output twiddle_rsc_0_8_BUSER;
  output [1:0] twiddle_rsc_0_8_BRESP;
  output twiddle_rsc_0_8_BID;
  output twiddle_rsc_0_8_WREADY;
  input twiddle_rsc_0_8_WVALID;
  input twiddle_rsc_0_8_WUSER;
  input twiddle_rsc_0_8_WLAST;
  input [3:0] twiddle_rsc_0_8_WSTRB;
  input [31:0] twiddle_rsc_0_8_WDATA;
  output twiddle_rsc_0_8_AWREADY;
  input twiddle_rsc_0_8_AWVALID;
  input twiddle_rsc_0_8_AWUSER;
  input [3:0] twiddle_rsc_0_8_AWREGION;
  input [3:0] twiddle_rsc_0_8_AWQOS;
  input [2:0] twiddle_rsc_0_8_AWPROT;
  input [3:0] twiddle_rsc_0_8_AWCACHE;
  input twiddle_rsc_0_8_AWLOCK;
  input [1:0] twiddle_rsc_0_8_AWBURST;
  input [2:0] twiddle_rsc_0_8_AWSIZE;
  input [7:0] twiddle_rsc_0_8_AWLEN;
  input [11:0] twiddle_rsc_0_8_AWADDR;
  input twiddle_rsc_0_8_AWID;
  input core_wen;
  input twiddle_rsc_0_8_i_oswt;
  output twiddle_rsc_0_8_i_wen_comp;
  input [5:0] twiddle_rsc_0_8_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_8_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_rsc_0_8_i_biwt;
  wire twiddle_rsc_0_8_i_bdwt;
  wire twiddle_rsc_0_8_i_bcwt;
  wire twiddle_rsc_0_8_i_s_re_core_sct;
  wire [5:0] twiddle_rsc_0_8_i_s_raddr;
  wire [31:0] twiddle_rsc_0_8_i_s_din;
  wire twiddle_rsc_0_8_i_s_rrdy;
  wire twiddle_rsc_0_8_i_s_wrdy;
  wire twiddle_rsc_0_8_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_8_i_twiddle_rsc_0_8_wait_dp_inst_twiddle_rsc_0_8_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_8_i_twiddle_rsc_0_8_wait_dp_inst_twiddle_rsc_0_8_i_s_raddr_core
      = {1'b0 , (twiddle_rsc_0_8_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_rsc_0_8_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_rsc_0_8_AWID),
      .AWADDR(twiddle_rsc_0_8_AWADDR),
      .AWLEN(twiddle_rsc_0_8_AWLEN),
      .AWSIZE(twiddle_rsc_0_8_AWSIZE),
      .AWBURST(twiddle_rsc_0_8_AWBURST),
      .AWLOCK(twiddle_rsc_0_8_AWLOCK),
      .AWCACHE(twiddle_rsc_0_8_AWCACHE),
      .AWPROT(twiddle_rsc_0_8_AWPROT),
      .AWQOS(twiddle_rsc_0_8_AWQOS),
      .AWREGION(twiddle_rsc_0_8_AWREGION),
      .AWUSER(twiddle_rsc_0_8_AWUSER),
      .AWVALID(twiddle_rsc_0_8_AWVALID),
      .AWREADY(twiddle_rsc_0_8_AWREADY),
      .WDATA(twiddle_rsc_0_8_WDATA),
      .WSTRB(twiddle_rsc_0_8_WSTRB),
      .WLAST(twiddle_rsc_0_8_WLAST),
      .WUSER(twiddle_rsc_0_8_WUSER),
      .WVALID(twiddle_rsc_0_8_WVALID),
      .WREADY(twiddle_rsc_0_8_WREADY),
      .BID(twiddle_rsc_0_8_BID),
      .BRESP(twiddle_rsc_0_8_BRESP),
      .BUSER(twiddle_rsc_0_8_BUSER),
      .BVALID(twiddle_rsc_0_8_BVALID),
      .BREADY(twiddle_rsc_0_8_BREADY),
      .ARID(twiddle_rsc_0_8_ARID),
      .ARADDR(twiddle_rsc_0_8_ARADDR),
      .ARLEN(twiddle_rsc_0_8_ARLEN),
      .ARSIZE(twiddle_rsc_0_8_ARSIZE),
      .ARBURST(twiddle_rsc_0_8_ARBURST),
      .ARLOCK(twiddle_rsc_0_8_ARLOCK),
      .ARCACHE(twiddle_rsc_0_8_ARCACHE),
      .ARPROT(twiddle_rsc_0_8_ARPROT),
      .ARQOS(twiddle_rsc_0_8_ARQOS),
      .ARREGION(twiddle_rsc_0_8_ARREGION),
      .ARUSER(twiddle_rsc_0_8_ARUSER),
      .ARVALID(twiddle_rsc_0_8_ARVALID),
      .ARREADY(twiddle_rsc_0_8_ARREADY),
      .RID(twiddle_rsc_0_8_RID),
      .RDATA(twiddle_rsc_0_8_RDATA),
      .RRESP(twiddle_rsc_0_8_RRESP),
      .RLAST(twiddle_rsc_0_8_RLAST),
      .RUSER(twiddle_rsc_0_8_RUSER),
      .RVALID(twiddle_rsc_0_8_RVALID),
      .RREADY(twiddle_rsc_0_8_RREADY),
      .s_re(twiddle_rsc_0_8_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_rsc_0_8_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_rsc_0_8_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_rsc_0_8_i_s_rrdy),
      .s_wrdy(twiddle_rsc_0_8_i_s_wrdy),
      .is_idle(twiddle_rsc_0_8_is_idle),
      .tr_write_done(twiddle_rsc_0_8_tr_write_done),
      .s_tdone(twiddle_rsc_0_8_s_tdone)
    );
  peaseNTT_core_twiddle_rsc_0_8_i_twiddle_rsc_0_8_wait_ctrl peaseNTT_core_twiddle_rsc_0_8_i_twiddle_rsc_0_8_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_rsc_0_8_i_oswt(twiddle_rsc_0_8_i_oswt),
      .twiddle_rsc_0_8_i_biwt(twiddle_rsc_0_8_i_biwt),
      .twiddle_rsc_0_8_i_bdwt(twiddle_rsc_0_8_i_bdwt),
      .twiddle_rsc_0_8_i_bcwt(twiddle_rsc_0_8_i_bcwt),
      .twiddle_rsc_0_8_i_s_re_core_sct(twiddle_rsc_0_8_i_s_re_core_sct),
      .twiddle_rsc_0_8_i_s_rrdy(twiddle_rsc_0_8_i_s_rrdy)
    );
  peaseNTT_core_twiddle_rsc_0_8_i_twiddle_rsc_0_8_wait_dp peaseNTT_core_twiddle_rsc_0_8_i_twiddle_rsc_0_8_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_8_i_oswt(twiddle_rsc_0_8_i_oswt),
      .twiddle_rsc_0_8_i_wen_comp(twiddle_rsc_0_8_i_wen_comp),
      .twiddle_rsc_0_8_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_8_i_twiddle_rsc_0_8_wait_dp_inst_twiddle_rsc_0_8_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_8_i_s_din_mxwt(twiddle_rsc_0_8_i_s_din_mxwt),
      .twiddle_rsc_0_8_i_biwt(twiddle_rsc_0_8_i_biwt),
      .twiddle_rsc_0_8_i_bdwt(twiddle_rsc_0_8_i_bdwt),
      .twiddle_rsc_0_8_i_bcwt(twiddle_rsc_0_8_i_bcwt),
      .twiddle_rsc_0_8_i_s_raddr(twiddle_rsc_0_8_i_s_raddr),
      .twiddle_rsc_0_8_i_s_raddr_core_sct(twiddle_rsc_0_8_i_s_re_core_sct),
      .twiddle_rsc_0_8_i_s_din(twiddle_rsc_0_8_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_7_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_7_i (
  clk, rst, twiddle_rsc_0_7_s_tdone, twiddle_rsc_0_7_tr_write_done, twiddle_rsc_0_7_RREADY,
      twiddle_rsc_0_7_RVALID, twiddle_rsc_0_7_RUSER, twiddle_rsc_0_7_RLAST, twiddle_rsc_0_7_RRESP,
      twiddle_rsc_0_7_RDATA, twiddle_rsc_0_7_RID, twiddle_rsc_0_7_ARREADY, twiddle_rsc_0_7_ARVALID,
      twiddle_rsc_0_7_ARUSER, twiddle_rsc_0_7_ARREGION, twiddle_rsc_0_7_ARQOS, twiddle_rsc_0_7_ARPROT,
      twiddle_rsc_0_7_ARCACHE, twiddle_rsc_0_7_ARLOCK, twiddle_rsc_0_7_ARBURST, twiddle_rsc_0_7_ARSIZE,
      twiddle_rsc_0_7_ARLEN, twiddle_rsc_0_7_ARADDR, twiddle_rsc_0_7_ARID, twiddle_rsc_0_7_BREADY,
      twiddle_rsc_0_7_BVALID, twiddle_rsc_0_7_BUSER, twiddle_rsc_0_7_BRESP, twiddle_rsc_0_7_BID,
      twiddle_rsc_0_7_WREADY, twiddle_rsc_0_7_WVALID, twiddle_rsc_0_7_WUSER, twiddle_rsc_0_7_WLAST,
      twiddle_rsc_0_7_WSTRB, twiddle_rsc_0_7_WDATA, twiddle_rsc_0_7_AWREADY, twiddle_rsc_0_7_AWVALID,
      twiddle_rsc_0_7_AWUSER, twiddle_rsc_0_7_AWREGION, twiddle_rsc_0_7_AWQOS, twiddle_rsc_0_7_AWPROT,
      twiddle_rsc_0_7_AWCACHE, twiddle_rsc_0_7_AWLOCK, twiddle_rsc_0_7_AWBURST, twiddle_rsc_0_7_AWSIZE,
      twiddle_rsc_0_7_AWLEN, twiddle_rsc_0_7_AWADDR, twiddle_rsc_0_7_AWID, core_wen,
      twiddle_rsc_0_7_i_oswt, twiddle_rsc_0_7_i_wen_comp, twiddle_rsc_0_7_i_s_raddr_core,
      twiddle_rsc_0_7_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_rsc_0_7_s_tdone;
  input twiddle_rsc_0_7_tr_write_done;
  input twiddle_rsc_0_7_RREADY;
  output twiddle_rsc_0_7_RVALID;
  output twiddle_rsc_0_7_RUSER;
  output twiddle_rsc_0_7_RLAST;
  output [1:0] twiddle_rsc_0_7_RRESP;
  output [31:0] twiddle_rsc_0_7_RDATA;
  output twiddle_rsc_0_7_RID;
  output twiddle_rsc_0_7_ARREADY;
  input twiddle_rsc_0_7_ARVALID;
  input twiddle_rsc_0_7_ARUSER;
  input [3:0] twiddle_rsc_0_7_ARREGION;
  input [3:0] twiddle_rsc_0_7_ARQOS;
  input [2:0] twiddle_rsc_0_7_ARPROT;
  input [3:0] twiddle_rsc_0_7_ARCACHE;
  input twiddle_rsc_0_7_ARLOCK;
  input [1:0] twiddle_rsc_0_7_ARBURST;
  input [2:0] twiddle_rsc_0_7_ARSIZE;
  input [7:0] twiddle_rsc_0_7_ARLEN;
  input [11:0] twiddle_rsc_0_7_ARADDR;
  input twiddle_rsc_0_7_ARID;
  input twiddle_rsc_0_7_BREADY;
  output twiddle_rsc_0_7_BVALID;
  output twiddle_rsc_0_7_BUSER;
  output [1:0] twiddle_rsc_0_7_BRESP;
  output twiddle_rsc_0_7_BID;
  output twiddle_rsc_0_7_WREADY;
  input twiddle_rsc_0_7_WVALID;
  input twiddle_rsc_0_7_WUSER;
  input twiddle_rsc_0_7_WLAST;
  input [3:0] twiddle_rsc_0_7_WSTRB;
  input [31:0] twiddle_rsc_0_7_WDATA;
  output twiddle_rsc_0_7_AWREADY;
  input twiddle_rsc_0_7_AWVALID;
  input twiddle_rsc_0_7_AWUSER;
  input [3:0] twiddle_rsc_0_7_AWREGION;
  input [3:0] twiddle_rsc_0_7_AWQOS;
  input [2:0] twiddle_rsc_0_7_AWPROT;
  input [3:0] twiddle_rsc_0_7_AWCACHE;
  input twiddle_rsc_0_7_AWLOCK;
  input [1:0] twiddle_rsc_0_7_AWBURST;
  input [2:0] twiddle_rsc_0_7_AWSIZE;
  input [7:0] twiddle_rsc_0_7_AWLEN;
  input [11:0] twiddle_rsc_0_7_AWADDR;
  input twiddle_rsc_0_7_AWID;
  input core_wen;
  input twiddle_rsc_0_7_i_oswt;
  output twiddle_rsc_0_7_i_wen_comp;
  input [5:0] twiddle_rsc_0_7_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_7_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_rsc_0_7_i_biwt;
  wire twiddle_rsc_0_7_i_bdwt;
  wire twiddle_rsc_0_7_i_bcwt;
  wire twiddle_rsc_0_7_i_s_re_core_sct;
  wire [5:0] twiddle_rsc_0_7_i_s_raddr;
  wire [31:0] twiddle_rsc_0_7_i_s_din;
  wire twiddle_rsc_0_7_i_s_rrdy;
  wire twiddle_rsc_0_7_i_s_wrdy;
  wire twiddle_rsc_0_7_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_7_i_twiddle_rsc_0_7_wait_dp_inst_twiddle_rsc_0_7_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_7_i_twiddle_rsc_0_7_wait_dp_inst_twiddle_rsc_0_7_i_s_raddr_core
      = {1'b0 , (twiddle_rsc_0_7_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_rsc_0_7_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_rsc_0_7_AWID),
      .AWADDR(twiddle_rsc_0_7_AWADDR),
      .AWLEN(twiddle_rsc_0_7_AWLEN),
      .AWSIZE(twiddle_rsc_0_7_AWSIZE),
      .AWBURST(twiddle_rsc_0_7_AWBURST),
      .AWLOCK(twiddle_rsc_0_7_AWLOCK),
      .AWCACHE(twiddle_rsc_0_7_AWCACHE),
      .AWPROT(twiddle_rsc_0_7_AWPROT),
      .AWQOS(twiddle_rsc_0_7_AWQOS),
      .AWREGION(twiddle_rsc_0_7_AWREGION),
      .AWUSER(twiddle_rsc_0_7_AWUSER),
      .AWVALID(twiddle_rsc_0_7_AWVALID),
      .AWREADY(twiddle_rsc_0_7_AWREADY),
      .WDATA(twiddle_rsc_0_7_WDATA),
      .WSTRB(twiddle_rsc_0_7_WSTRB),
      .WLAST(twiddle_rsc_0_7_WLAST),
      .WUSER(twiddle_rsc_0_7_WUSER),
      .WVALID(twiddle_rsc_0_7_WVALID),
      .WREADY(twiddle_rsc_0_7_WREADY),
      .BID(twiddle_rsc_0_7_BID),
      .BRESP(twiddle_rsc_0_7_BRESP),
      .BUSER(twiddle_rsc_0_7_BUSER),
      .BVALID(twiddle_rsc_0_7_BVALID),
      .BREADY(twiddle_rsc_0_7_BREADY),
      .ARID(twiddle_rsc_0_7_ARID),
      .ARADDR(twiddle_rsc_0_7_ARADDR),
      .ARLEN(twiddle_rsc_0_7_ARLEN),
      .ARSIZE(twiddle_rsc_0_7_ARSIZE),
      .ARBURST(twiddle_rsc_0_7_ARBURST),
      .ARLOCK(twiddle_rsc_0_7_ARLOCK),
      .ARCACHE(twiddle_rsc_0_7_ARCACHE),
      .ARPROT(twiddle_rsc_0_7_ARPROT),
      .ARQOS(twiddle_rsc_0_7_ARQOS),
      .ARREGION(twiddle_rsc_0_7_ARREGION),
      .ARUSER(twiddle_rsc_0_7_ARUSER),
      .ARVALID(twiddle_rsc_0_7_ARVALID),
      .ARREADY(twiddle_rsc_0_7_ARREADY),
      .RID(twiddle_rsc_0_7_RID),
      .RDATA(twiddle_rsc_0_7_RDATA),
      .RRESP(twiddle_rsc_0_7_RRESP),
      .RLAST(twiddle_rsc_0_7_RLAST),
      .RUSER(twiddle_rsc_0_7_RUSER),
      .RVALID(twiddle_rsc_0_7_RVALID),
      .RREADY(twiddle_rsc_0_7_RREADY),
      .s_re(twiddle_rsc_0_7_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_rsc_0_7_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_rsc_0_7_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_rsc_0_7_i_s_rrdy),
      .s_wrdy(twiddle_rsc_0_7_i_s_wrdy),
      .is_idle(twiddle_rsc_0_7_is_idle),
      .tr_write_done(twiddle_rsc_0_7_tr_write_done),
      .s_tdone(twiddle_rsc_0_7_s_tdone)
    );
  peaseNTT_core_twiddle_rsc_0_7_i_twiddle_rsc_0_7_wait_ctrl peaseNTT_core_twiddle_rsc_0_7_i_twiddle_rsc_0_7_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_rsc_0_7_i_oswt(twiddle_rsc_0_7_i_oswt),
      .twiddle_rsc_0_7_i_biwt(twiddle_rsc_0_7_i_biwt),
      .twiddle_rsc_0_7_i_bdwt(twiddle_rsc_0_7_i_bdwt),
      .twiddle_rsc_0_7_i_bcwt(twiddle_rsc_0_7_i_bcwt),
      .twiddle_rsc_0_7_i_s_re_core_sct(twiddle_rsc_0_7_i_s_re_core_sct),
      .twiddle_rsc_0_7_i_s_rrdy(twiddle_rsc_0_7_i_s_rrdy)
    );
  peaseNTT_core_twiddle_rsc_0_7_i_twiddle_rsc_0_7_wait_dp peaseNTT_core_twiddle_rsc_0_7_i_twiddle_rsc_0_7_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_7_i_oswt(twiddle_rsc_0_7_i_oswt),
      .twiddle_rsc_0_7_i_wen_comp(twiddle_rsc_0_7_i_wen_comp),
      .twiddle_rsc_0_7_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_7_i_twiddle_rsc_0_7_wait_dp_inst_twiddle_rsc_0_7_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_7_i_s_din_mxwt(twiddle_rsc_0_7_i_s_din_mxwt),
      .twiddle_rsc_0_7_i_biwt(twiddle_rsc_0_7_i_biwt),
      .twiddle_rsc_0_7_i_bdwt(twiddle_rsc_0_7_i_bdwt),
      .twiddle_rsc_0_7_i_bcwt(twiddle_rsc_0_7_i_bcwt),
      .twiddle_rsc_0_7_i_s_raddr(twiddle_rsc_0_7_i_s_raddr),
      .twiddle_rsc_0_7_i_s_raddr_core_sct(twiddle_rsc_0_7_i_s_re_core_sct),
      .twiddle_rsc_0_7_i_s_din(twiddle_rsc_0_7_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_6_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_6_i (
  clk, rst, twiddle_rsc_0_6_s_tdone, twiddle_rsc_0_6_tr_write_done, twiddle_rsc_0_6_RREADY,
      twiddle_rsc_0_6_RVALID, twiddle_rsc_0_6_RUSER, twiddle_rsc_0_6_RLAST, twiddle_rsc_0_6_RRESP,
      twiddle_rsc_0_6_RDATA, twiddle_rsc_0_6_RID, twiddle_rsc_0_6_ARREADY, twiddle_rsc_0_6_ARVALID,
      twiddle_rsc_0_6_ARUSER, twiddle_rsc_0_6_ARREGION, twiddle_rsc_0_6_ARQOS, twiddle_rsc_0_6_ARPROT,
      twiddle_rsc_0_6_ARCACHE, twiddle_rsc_0_6_ARLOCK, twiddle_rsc_0_6_ARBURST, twiddle_rsc_0_6_ARSIZE,
      twiddle_rsc_0_6_ARLEN, twiddle_rsc_0_6_ARADDR, twiddle_rsc_0_6_ARID, twiddle_rsc_0_6_BREADY,
      twiddle_rsc_0_6_BVALID, twiddle_rsc_0_6_BUSER, twiddle_rsc_0_6_BRESP, twiddle_rsc_0_6_BID,
      twiddle_rsc_0_6_WREADY, twiddle_rsc_0_6_WVALID, twiddle_rsc_0_6_WUSER, twiddle_rsc_0_6_WLAST,
      twiddle_rsc_0_6_WSTRB, twiddle_rsc_0_6_WDATA, twiddle_rsc_0_6_AWREADY, twiddle_rsc_0_6_AWVALID,
      twiddle_rsc_0_6_AWUSER, twiddle_rsc_0_6_AWREGION, twiddle_rsc_0_6_AWQOS, twiddle_rsc_0_6_AWPROT,
      twiddle_rsc_0_6_AWCACHE, twiddle_rsc_0_6_AWLOCK, twiddle_rsc_0_6_AWBURST, twiddle_rsc_0_6_AWSIZE,
      twiddle_rsc_0_6_AWLEN, twiddle_rsc_0_6_AWADDR, twiddle_rsc_0_6_AWID, core_wen,
      twiddle_rsc_0_6_i_oswt, twiddle_rsc_0_6_i_wen_comp, twiddle_rsc_0_6_i_s_raddr_core,
      twiddle_rsc_0_6_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_rsc_0_6_s_tdone;
  input twiddle_rsc_0_6_tr_write_done;
  input twiddle_rsc_0_6_RREADY;
  output twiddle_rsc_0_6_RVALID;
  output twiddle_rsc_0_6_RUSER;
  output twiddle_rsc_0_6_RLAST;
  output [1:0] twiddle_rsc_0_6_RRESP;
  output [31:0] twiddle_rsc_0_6_RDATA;
  output twiddle_rsc_0_6_RID;
  output twiddle_rsc_0_6_ARREADY;
  input twiddle_rsc_0_6_ARVALID;
  input twiddle_rsc_0_6_ARUSER;
  input [3:0] twiddle_rsc_0_6_ARREGION;
  input [3:0] twiddle_rsc_0_6_ARQOS;
  input [2:0] twiddle_rsc_0_6_ARPROT;
  input [3:0] twiddle_rsc_0_6_ARCACHE;
  input twiddle_rsc_0_6_ARLOCK;
  input [1:0] twiddle_rsc_0_6_ARBURST;
  input [2:0] twiddle_rsc_0_6_ARSIZE;
  input [7:0] twiddle_rsc_0_6_ARLEN;
  input [11:0] twiddle_rsc_0_6_ARADDR;
  input twiddle_rsc_0_6_ARID;
  input twiddle_rsc_0_6_BREADY;
  output twiddle_rsc_0_6_BVALID;
  output twiddle_rsc_0_6_BUSER;
  output [1:0] twiddle_rsc_0_6_BRESP;
  output twiddle_rsc_0_6_BID;
  output twiddle_rsc_0_6_WREADY;
  input twiddle_rsc_0_6_WVALID;
  input twiddle_rsc_0_6_WUSER;
  input twiddle_rsc_0_6_WLAST;
  input [3:0] twiddle_rsc_0_6_WSTRB;
  input [31:0] twiddle_rsc_0_6_WDATA;
  output twiddle_rsc_0_6_AWREADY;
  input twiddle_rsc_0_6_AWVALID;
  input twiddle_rsc_0_6_AWUSER;
  input [3:0] twiddle_rsc_0_6_AWREGION;
  input [3:0] twiddle_rsc_0_6_AWQOS;
  input [2:0] twiddle_rsc_0_6_AWPROT;
  input [3:0] twiddle_rsc_0_6_AWCACHE;
  input twiddle_rsc_0_6_AWLOCK;
  input [1:0] twiddle_rsc_0_6_AWBURST;
  input [2:0] twiddle_rsc_0_6_AWSIZE;
  input [7:0] twiddle_rsc_0_6_AWLEN;
  input [11:0] twiddle_rsc_0_6_AWADDR;
  input twiddle_rsc_0_6_AWID;
  input core_wen;
  input twiddle_rsc_0_6_i_oswt;
  output twiddle_rsc_0_6_i_wen_comp;
  input [5:0] twiddle_rsc_0_6_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_6_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_rsc_0_6_i_biwt;
  wire twiddle_rsc_0_6_i_bdwt;
  wire twiddle_rsc_0_6_i_bcwt;
  wire twiddle_rsc_0_6_i_s_re_core_sct;
  wire [5:0] twiddle_rsc_0_6_i_s_raddr;
  wire [31:0] twiddle_rsc_0_6_i_s_din;
  wire twiddle_rsc_0_6_i_s_rrdy;
  wire twiddle_rsc_0_6_i_s_wrdy;
  wire twiddle_rsc_0_6_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_6_i_twiddle_rsc_0_6_wait_dp_inst_twiddle_rsc_0_6_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_6_i_twiddle_rsc_0_6_wait_dp_inst_twiddle_rsc_0_6_i_s_raddr_core
      = {1'b0 , (twiddle_rsc_0_6_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_rsc_0_6_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_rsc_0_6_AWID),
      .AWADDR(twiddle_rsc_0_6_AWADDR),
      .AWLEN(twiddle_rsc_0_6_AWLEN),
      .AWSIZE(twiddle_rsc_0_6_AWSIZE),
      .AWBURST(twiddle_rsc_0_6_AWBURST),
      .AWLOCK(twiddle_rsc_0_6_AWLOCK),
      .AWCACHE(twiddle_rsc_0_6_AWCACHE),
      .AWPROT(twiddle_rsc_0_6_AWPROT),
      .AWQOS(twiddle_rsc_0_6_AWQOS),
      .AWREGION(twiddle_rsc_0_6_AWREGION),
      .AWUSER(twiddle_rsc_0_6_AWUSER),
      .AWVALID(twiddle_rsc_0_6_AWVALID),
      .AWREADY(twiddle_rsc_0_6_AWREADY),
      .WDATA(twiddle_rsc_0_6_WDATA),
      .WSTRB(twiddle_rsc_0_6_WSTRB),
      .WLAST(twiddle_rsc_0_6_WLAST),
      .WUSER(twiddle_rsc_0_6_WUSER),
      .WVALID(twiddle_rsc_0_6_WVALID),
      .WREADY(twiddle_rsc_0_6_WREADY),
      .BID(twiddle_rsc_0_6_BID),
      .BRESP(twiddle_rsc_0_6_BRESP),
      .BUSER(twiddle_rsc_0_6_BUSER),
      .BVALID(twiddle_rsc_0_6_BVALID),
      .BREADY(twiddle_rsc_0_6_BREADY),
      .ARID(twiddle_rsc_0_6_ARID),
      .ARADDR(twiddle_rsc_0_6_ARADDR),
      .ARLEN(twiddle_rsc_0_6_ARLEN),
      .ARSIZE(twiddle_rsc_0_6_ARSIZE),
      .ARBURST(twiddle_rsc_0_6_ARBURST),
      .ARLOCK(twiddle_rsc_0_6_ARLOCK),
      .ARCACHE(twiddle_rsc_0_6_ARCACHE),
      .ARPROT(twiddle_rsc_0_6_ARPROT),
      .ARQOS(twiddle_rsc_0_6_ARQOS),
      .ARREGION(twiddle_rsc_0_6_ARREGION),
      .ARUSER(twiddle_rsc_0_6_ARUSER),
      .ARVALID(twiddle_rsc_0_6_ARVALID),
      .ARREADY(twiddle_rsc_0_6_ARREADY),
      .RID(twiddle_rsc_0_6_RID),
      .RDATA(twiddle_rsc_0_6_RDATA),
      .RRESP(twiddle_rsc_0_6_RRESP),
      .RLAST(twiddle_rsc_0_6_RLAST),
      .RUSER(twiddle_rsc_0_6_RUSER),
      .RVALID(twiddle_rsc_0_6_RVALID),
      .RREADY(twiddle_rsc_0_6_RREADY),
      .s_re(twiddle_rsc_0_6_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_rsc_0_6_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_rsc_0_6_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_rsc_0_6_i_s_rrdy),
      .s_wrdy(twiddle_rsc_0_6_i_s_wrdy),
      .is_idle(twiddle_rsc_0_6_is_idle),
      .tr_write_done(twiddle_rsc_0_6_tr_write_done),
      .s_tdone(twiddle_rsc_0_6_s_tdone)
    );
  peaseNTT_core_twiddle_rsc_0_6_i_twiddle_rsc_0_6_wait_ctrl peaseNTT_core_twiddle_rsc_0_6_i_twiddle_rsc_0_6_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_rsc_0_6_i_oswt(twiddle_rsc_0_6_i_oswt),
      .twiddle_rsc_0_6_i_biwt(twiddle_rsc_0_6_i_biwt),
      .twiddle_rsc_0_6_i_bdwt(twiddle_rsc_0_6_i_bdwt),
      .twiddle_rsc_0_6_i_bcwt(twiddle_rsc_0_6_i_bcwt),
      .twiddle_rsc_0_6_i_s_re_core_sct(twiddle_rsc_0_6_i_s_re_core_sct),
      .twiddle_rsc_0_6_i_s_rrdy(twiddle_rsc_0_6_i_s_rrdy)
    );
  peaseNTT_core_twiddle_rsc_0_6_i_twiddle_rsc_0_6_wait_dp peaseNTT_core_twiddle_rsc_0_6_i_twiddle_rsc_0_6_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_6_i_oswt(twiddle_rsc_0_6_i_oswt),
      .twiddle_rsc_0_6_i_wen_comp(twiddle_rsc_0_6_i_wen_comp),
      .twiddle_rsc_0_6_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_6_i_twiddle_rsc_0_6_wait_dp_inst_twiddle_rsc_0_6_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_6_i_s_din_mxwt(twiddle_rsc_0_6_i_s_din_mxwt),
      .twiddle_rsc_0_6_i_biwt(twiddle_rsc_0_6_i_biwt),
      .twiddle_rsc_0_6_i_bdwt(twiddle_rsc_0_6_i_bdwt),
      .twiddle_rsc_0_6_i_bcwt(twiddle_rsc_0_6_i_bcwt),
      .twiddle_rsc_0_6_i_s_raddr(twiddle_rsc_0_6_i_s_raddr),
      .twiddle_rsc_0_6_i_s_raddr_core_sct(twiddle_rsc_0_6_i_s_re_core_sct),
      .twiddle_rsc_0_6_i_s_din(twiddle_rsc_0_6_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_5_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_5_i (
  clk, rst, twiddle_rsc_0_5_s_tdone, twiddle_rsc_0_5_tr_write_done, twiddle_rsc_0_5_RREADY,
      twiddle_rsc_0_5_RVALID, twiddle_rsc_0_5_RUSER, twiddle_rsc_0_5_RLAST, twiddle_rsc_0_5_RRESP,
      twiddle_rsc_0_5_RDATA, twiddle_rsc_0_5_RID, twiddle_rsc_0_5_ARREADY, twiddle_rsc_0_5_ARVALID,
      twiddle_rsc_0_5_ARUSER, twiddle_rsc_0_5_ARREGION, twiddle_rsc_0_5_ARQOS, twiddle_rsc_0_5_ARPROT,
      twiddle_rsc_0_5_ARCACHE, twiddle_rsc_0_5_ARLOCK, twiddle_rsc_0_5_ARBURST, twiddle_rsc_0_5_ARSIZE,
      twiddle_rsc_0_5_ARLEN, twiddle_rsc_0_5_ARADDR, twiddle_rsc_0_5_ARID, twiddle_rsc_0_5_BREADY,
      twiddle_rsc_0_5_BVALID, twiddle_rsc_0_5_BUSER, twiddle_rsc_0_5_BRESP, twiddle_rsc_0_5_BID,
      twiddle_rsc_0_5_WREADY, twiddle_rsc_0_5_WVALID, twiddle_rsc_0_5_WUSER, twiddle_rsc_0_5_WLAST,
      twiddle_rsc_0_5_WSTRB, twiddle_rsc_0_5_WDATA, twiddle_rsc_0_5_AWREADY, twiddle_rsc_0_5_AWVALID,
      twiddle_rsc_0_5_AWUSER, twiddle_rsc_0_5_AWREGION, twiddle_rsc_0_5_AWQOS, twiddle_rsc_0_5_AWPROT,
      twiddle_rsc_0_5_AWCACHE, twiddle_rsc_0_5_AWLOCK, twiddle_rsc_0_5_AWBURST, twiddle_rsc_0_5_AWSIZE,
      twiddle_rsc_0_5_AWLEN, twiddle_rsc_0_5_AWADDR, twiddle_rsc_0_5_AWID, core_wen,
      twiddle_rsc_0_5_i_oswt, twiddle_rsc_0_5_i_wen_comp, twiddle_rsc_0_5_i_s_raddr_core,
      twiddle_rsc_0_5_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_rsc_0_5_s_tdone;
  input twiddle_rsc_0_5_tr_write_done;
  input twiddle_rsc_0_5_RREADY;
  output twiddle_rsc_0_5_RVALID;
  output twiddle_rsc_0_5_RUSER;
  output twiddle_rsc_0_5_RLAST;
  output [1:0] twiddle_rsc_0_5_RRESP;
  output [31:0] twiddle_rsc_0_5_RDATA;
  output twiddle_rsc_0_5_RID;
  output twiddle_rsc_0_5_ARREADY;
  input twiddle_rsc_0_5_ARVALID;
  input twiddle_rsc_0_5_ARUSER;
  input [3:0] twiddle_rsc_0_5_ARREGION;
  input [3:0] twiddle_rsc_0_5_ARQOS;
  input [2:0] twiddle_rsc_0_5_ARPROT;
  input [3:0] twiddle_rsc_0_5_ARCACHE;
  input twiddle_rsc_0_5_ARLOCK;
  input [1:0] twiddle_rsc_0_5_ARBURST;
  input [2:0] twiddle_rsc_0_5_ARSIZE;
  input [7:0] twiddle_rsc_0_5_ARLEN;
  input [11:0] twiddle_rsc_0_5_ARADDR;
  input twiddle_rsc_0_5_ARID;
  input twiddle_rsc_0_5_BREADY;
  output twiddle_rsc_0_5_BVALID;
  output twiddle_rsc_0_5_BUSER;
  output [1:0] twiddle_rsc_0_5_BRESP;
  output twiddle_rsc_0_5_BID;
  output twiddle_rsc_0_5_WREADY;
  input twiddle_rsc_0_5_WVALID;
  input twiddle_rsc_0_5_WUSER;
  input twiddle_rsc_0_5_WLAST;
  input [3:0] twiddle_rsc_0_5_WSTRB;
  input [31:0] twiddle_rsc_0_5_WDATA;
  output twiddle_rsc_0_5_AWREADY;
  input twiddle_rsc_0_5_AWVALID;
  input twiddle_rsc_0_5_AWUSER;
  input [3:0] twiddle_rsc_0_5_AWREGION;
  input [3:0] twiddle_rsc_0_5_AWQOS;
  input [2:0] twiddle_rsc_0_5_AWPROT;
  input [3:0] twiddle_rsc_0_5_AWCACHE;
  input twiddle_rsc_0_5_AWLOCK;
  input [1:0] twiddle_rsc_0_5_AWBURST;
  input [2:0] twiddle_rsc_0_5_AWSIZE;
  input [7:0] twiddle_rsc_0_5_AWLEN;
  input [11:0] twiddle_rsc_0_5_AWADDR;
  input twiddle_rsc_0_5_AWID;
  input core_wen;
  input twiddle_rsc_0_5_i_oswt;
  output twiddle_rsc_0_5_i_wen_comp;
  input [5:0] twiddle_rsc_0_5_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_5_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_rsc_0_5_i_biwt;
  wire twiddle_rsc_0_5_i_bdwt;
  wire twiddle_rsc_0_5_i_bcwt;
  wire twiddle_rsc_0_5_i_s_re_core_sct;
  wire [5:0] twiddle_rsc_0_5_i_s_raddr;
  wire [31:0] twiddle_rsc_0_5_i_s_din;
  wire twiddle_rsc_0_5_i_s_rrdy;
  wire twiddle_rsc_0_5_i_s_wrdy;
  wire twiddle_rsc_0_5_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_5_i_twiddle_rsc_0_5_wait_dp_inst_twiddle_rsc_0_5_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_5_i_twiddle_rsc_0_5_wait_dp_inst_twiddle_rsc_0_5_i_s_raddr_core
      = {1'b0 , (twiddle_rsc_0_5_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_rsc_0_5_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_rsc_0_5_AWID),
      .AWADDR(twiddle_rsc_0_5_AWADDR),
      .AWLEN(twiddle_rsc_0_5_AWLEN),
      .AWSIZE(twiddle_rsc_0_5_AWSIZE),
      .AWBURST(twiddle_rsc_0_5_AWBURST),
      .AWLOCK(twiddle_rsc_0_5_AWLOCK),
      .AWCACHE(twiddle_rsc_0_5_AWCACHE),
      .AWPROT(twiddle_rsc_0_5_AWPROT),
      .AWQOS(twiddle_rsc_0_5_AWQOS),
      .AWREGION(twiddle_rsc_0_5_AWREGION),
      .AWUSER(twiddle_rsc_0_5_AWUSER),
      .AWVALID(twiddle_rsc_0_5_AWVALID),
      .AWREADY(twiddle_rsc_0_5_AWREADY),
      .WDATA(twiddle_rsc_0_5_WDATA),
      .WSTRB(twiddle_rsc_0_5_WSTRB),
      .WLAST(twiddle_rsc_0_5_WLAST),
      .WUSER(twiddle_rsc_0_5_WUSER),
      .WVALID(twiddle_rsc_0_5_WVALID),
      .WREADY(twiddle_rsc_0_5_WREADY),
      .BID(twiddle_rsc_0_5_BID),
      .BRESP(twiddle_rsc_0_5_BRESP),
      .BUSER(twiddle_rsc_0_5_BUSER),
      .BVALID(twiddle_rsc_0_5_BVALID),
      .BREADY(twiddle_rsc_0_5_BREADY),
      .ARID(twiddle_rsc_0_5_ARID),
      .ARADDR(twiddle_rsc_0_5_ARADDR),
      .ARLEN(twiddle_rsc_0_5_ARLEN),
      .ARSIZE(twiddle_rsc_0_5_ARSIZE),
      .ARBURST(twiddle_rsc_0_5_ARBURST),
      .ARLOCK(twiddle_rsc_0_5_ARLOCK),
      .ARCACHE(twiddle_rsc_0_5_ARCACHE),
      .ARPROT(twiddle_rsc_0_5_ARPROT),
      .ARQOS(twiddle_rsc_0_5_ARQOS),
      .ARREGION(twiddle_rsc_0_5_ARREGION),
      .ARUSER(twiddle_rsc_0_5_ARUSER),
      .ARVALID(twiddle_rsc_0_5_ARVALID),
      .ARREADY(twiddle_rsc_0_5_ARREADY),
      .RID(twiddle_rsc_0_5_RID),
      .RDATA(twiddle_rsc_0_5_RDATA),
      .RRESP(twiddle_rsc_0_5_RRESP),
      .RLAST(twiddle_rsc_0_5_RLAST),
      .RUSER(twiddle_rsc_0_5_RUSER),
      .RVALID(twiddle_rsc_0_5_RVALID),
      .RREADY(twiddle_rsc_0_5_RREADY),
      .s_re(twiddle_rsc_0_5_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_rsc_0_5_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_rsc_0_5_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_rsc_0_5_i_s_rrdy),
      .s_wrdy(twiddle_rsc_0_5_i_s_wrdy),
      .is_idle(twiddle_rsc_0_5_is_idle),
      .tr_write_done(twiddle_rsc_0_5_tr_write_done),
      .s_tdone(twiddle_rsc_0_5_s_tdone)
    );
  peaseNTT_core_twiddle_rsc_0_5_i_twiddle_rsc_0_5_wait_ctrl peaseNTT_core_twiddle_rsc_0_5_i_twiddle_rsc_0_5_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_rsc_0_5_i_oswt(twiddle_rsc_0_5_i_oswt),
      .twiddle_rsc_0_5_i_biwt(twiddle_rsc_0_5_i_biwt),
      .twiddle_rsc_0_5_i_bdwt(twiddle_rsc_0_5_i_bdwt),
      .twiddle_rsc_0_5_i_bcwt(twiddle_rsc_0_5_i_bcwt),
      .twiddle_rsc_0_5_i_s_re_core_sct(twiddle_rsc_0_5_i_s_re_core_sct),
      .twiddle_rsc_0_5_i_s_rrdy(twiddle_rsc_0_5_i_s_rrdy)
    );
  peaseNTT_core_twiddle_rsc_0_5_i_twiddle_rsc_0_5_wait_dp peaseNTT_core_twiddle_rsc_0_5_i_twiddle_rsc_0_5_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_5_i_oswt(twiddle_rsc_0_5_i_oswt),
      .twiddle_rsc_0_5_i_wen_comp(twiddle_rsc_0_5_i_wen_comp),
      .twiddle_rsc_0_5_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_5_i_twiddle_rsc_0_5_wait_dp_inst_twiddle_rsc_0_5_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_5_i_s_din_mxwt(twiddle_rsc_0_5_i_s_din_mxwt),
      .twiddle_rsc_0_5_i_biwt(twiddle_rsc_0_5_i_biwt),
      .twiddle_rsc_0_5_i_bdwt(twiddle_rsc_0_5_i_bdwt),
      .twiddle_rsc_0_5_i_bcwt(twiddle_rsc_0_5_i_bcwt),
      .twiddle_rsc_0_5_i_s_raddr(twiddle_rsc_0_5_i_s_raddr),
      .twiddle_rsc_0_5_i_s_raddr_core_sct(twiddle_rsc_0_5_i_s_re_core_sct),
      .twiddle_rsc_0_5_i_s_din(twiddle_rsc_0_5_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_4_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_4_i (
  clk, rst, twiddle_rsc_0_4_s_tdone, twiddle_rsc_0_4_tr_write_done, twiddle_rsc_0_4_RREADY,
      twiddle_rsc_0_4_RVALID, twiddle_rsc_0_4_RUSER, twiddle_rsc_0_4_RLAST, twiddle_rsc_0_4_RRESP,
      twiddle_rsc_0_4_RDATA, twiddle_rsc_0_4_RID, twiddle_rsc_0_4_ARREADY, twiddle_rsc_0_4_ARVALID,
      twiddle_rsc_0_4_ARUSER, twiddle_rsc_0_4_ARREGION, twiddle_rsc_0_4_ARQOS, twiddle_rsc_0_4_ARPROT,
      twiddle_rsc_0_4_ARCACHE, twiddle_rsc_0_4_ARLOCK, twiddle_rsc_0_4_ARBURST, twiddle_rsc_0_4_ARSIZE,
      twiddle_rsc_0_4_ARLEN, twiddle_rsc_0_4_ARADDR, twiddle_rsc_0_4_ARID, twiddle_rsc_0_4_BREADY,
      twiddle_rsc_0_4_BVALID, twiddle_rsc_0_4_BUSER, twiddle_rsc_0_4_BRESP, twiddle_rsc_0_4_BID,
      twiddle_rsc_0_4_WREADY, twiddle_rsc_0_4_WVALID, twiddle_rsc_0_4_WUSER, twiddle_rsc_0_4_WLAST,
      twiddle_rsc_0_4_WSTRB, twiddle_rsc_0_4_WDATA, twiddle_rsc_0_4_AWREADY, twiddle_rsc_0_4_AWVALID,
      twiddle_rsc_0_4_AWUSER, twiddle_rsc_0_4_AWREGION, twiddle_rsc_0_4_AWQOS, twiddle_rsc_0_4_AWPROT,
      twiddle_rsc_0_4_AWCACHE, twiddle_rsc_0_4_AWLOCK, twiddle_rsc_0_4_AWBURST, twiddle_rsc_0_4_AWSIZE,
      twiddle_rsc_0_4_AWLEN, twiddle_rsc_0_4_AWADDR, twiddle_rsc_0_4_AWID, core_wen,
      twiddle_rsc_0_4_i_oswt, twiddle_rsc_0_4_i_wen_comp, twiddle_rsc_0_4_i_s_raddr_core,
      twiddle_rsc_0_4_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_rsc_0_4_s_tdone;
  input twiddle_rsc_0_4_tr_write_done;
  input twiddle_rsc_0_4_RREADY;
  output twiddle_rsc_0_4_RVALID;
  output twiddle_rsc_0_4_RUSER;
  output twiddle_rsc_0_4_RLAST;
  output [1:0] twiddle_rsc_0_4_RRESP;
  output [31:0] twiddle_rsc_0_4_RDATA;
  output twiddle_rsc_0_4_RID;
  output twiddle_rsc_0_4_ARREADY;
  input twiddle_rsc_0_4_ARVALID;
  input twiddle_rsc_0_4_ARUSER;
  input [3:0] twiddle_rsc_0_4_ARREGION;
  input [3:0] twiddle_rsc_0_4_ARQOS;
  input [2:0] twiddle_rsc_0_4_ARPROT;
  input [3:0] twiddle_rsc_0_4_ARCACHE;
  input twiddle_rsc_0_4_ARLOCK;
  input [1:0] twiddle_rsc_0_4_ARBURST;
  input [2:0] twiddle_rsc_0_4_ARSIZE;
  input [7:0] twiddle_rsc_0_4_ARLEN;
  input [11:0] twiddle_rsc_0_4_ARADDR;
  input twiddle_rsc_0_4_ARID;
  input twiddle_rsc_0_4_BREADY;
  output twiddle_rsc_0_4_BVALID;
  output twiddle_rsc_0_4_BUSER;
  output [1:0] twiddle_rsc_0_4_BRESP;
  output twiddle_rsc_0_4_BID;
  output twiddle_rsc_0_4_WREADY;
  input twiddle_rsc_0_4_WVALID;
  input twiddle_rsc_0_4_WUSER;
  input twiddle_rsc_0_4_WLAST;
  input [3:0] twiddle_rsc_0_4_WSTRB;
  input [31:0] twiddle_rsc_0_4_WDATA;
  output twiddle_rsc_0_4_AWREADY;
  input twiddle_rsc_0_4_AWVALID;
  input twiddle_rsc_0_4_AWUSER;
  input [3:0] twiddle_rsc_0_4_AWREGION;
  input [3:0] twiddle_rsc_0_4_AWQOS;
  input [2:0] twiddle_rsc_0_4_AWPROT;
  input [3:0] twiddle_rsc_0_4_AWCACHE;
  input twiddle_rsc_0_4_AWLOCK;
  input [1:0] twiddle_rsc_0_4_AWBURST;
  input [2:0] twiddle_rsc_0_4_AWSIZE;
  input [7:0] twiddle_rsc_0_4_AWLEN;
  input [11:0] twiddle_rsc_0_4_AWADDR;
  input twiddle_rsc_0_4_AWID;
  input core_wen;
  input twiddle_rsc_0_4_i_oswt;
  output twiddle_rsc_0_4_i_wen_comp;
  input [5:0] twiddle_rsc_0_4_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_4_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_rsc_0_4_i_biwt;
  wire twiddle_rsc_0_4_i_bdwt;
  wire twiddle_rsc_0_4_i_bcwt;
  wire twiddle_rsc_0_4_i_s_re_core_sct;
  wire [5:0] twiddle_rsc_0_4_i_s_raddr;
  wire [31:0] twiddle_rsc_0_4_i_s_din;
  wire twiddle_rsc_0_4_i_s_rrdy;
  wire twiddle_rsc_0_4_i_s_wrdy;
  wire twiddle_rsc_0_4_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_4_i_twiddle_rsc_0_4_wait_dp_inst_twiddle_rsc_0_4_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_4_i_twiddle_rsc_0_4_wait_dp_inst_twiddle_rsc_0_4_i_s_raddr_core
      = {1'b0 , (twiddle_rsc_0_4_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_rsc_0_4_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_rsc_0_4_AWID),
      .AWADDR(twiddle_rsc_0_4_AWADDR),
      .AWLEN(twiddle_rsc_0_4_AWLEN),
      .AWSIZE(twiddle_rsc_0_4_AWSIZE),
      .AWBURST(twiddle_rsc_0_4_AWBURST),
      .AWLOCK(twiddle_rsc_0_4_AWLOCK),
      .AWCACHE(twiddle_rsc_0_4_AWCACHE),
      .AWPROT(twiddle_rsc_0_4_AWPROT),
      .AWQOS(twiddle_rsc_0_4_AWQOS),
      .AWREGION(twiddle_rsc_0_4_AWREGION),
      .AWUSER(twiddle_rsc_0_4_AWUSER),
      .AWVALID(twiddle_rsc_0_4_AWVALID),
      .AWREADY(twiddle_rsc_0_4_AWREADY),
      .WDATA(twiddle_rsc_0_4_WDATA),
      .WSTRB(twiddle_rsc_0_4_WSTRB),
      .WLAST(twiddle_rsc_0_4_WLAST),
      .WUSER(twiddle_rsc_0_4_WUSER),
      .WVALID(twiddle_rsc_0_4_WVALID),
      .WREADY(twiddle_rsc_0_4_WREADY),
      .BID(twiddle_rsc_0_4_BID),
      .BRESP(twiddle_rsc_0_4_BRESP),
      .BUSER(twiddle_rsc_0_4_BUSER),
      .BVALID(twiddle_rsc_0_4_BVALID),
      .BREADY(twiddle_rsc_0_4_BREADY),
      .ARID(twiddle_rsc_0_4_ARID),
      .ARADDR(twiddle_rsc_0_4_ARADDR),
      .ARLEN(twiddle_rsc_0_4_ARLEN),
      .ARSIZE(twiddle_rsc_0_4_ARSIZE),
      .ARBURST(twiddle_rsc_0_4_ARBURST),
      .ARLOCK(twiddle_rsc_0_4_ARLOCK),
      .ARCACHE(twiddle_rsc_0_4_ARCACHE),
      .ARPROT(twiddle_rsc_0_4_ARPROT),
      .ARQOS(twiddle_rsc_0_4_ARQOS),
      .ARREGION(twiddle_rsc_0_4_ARREGION),
      .ARUSER(twiddle_rsc_0_4_ARUSER),
      .ARVALID(twiddle_rsc_0_4_ARVALID),
      .ARREADY(twiddle_rsc_0_4_ARREADY),
      .RID(twiddle_rsc_0_4_RID),
      .RDATA(twiddle_rsc_0_4_RDATA),
      .RRESP(twiddle_rsc_0_4_RRESP),
      .RLAST(twiddle_rsc_0_4_RLAST),
      .RUSER(twiddle_rsc_0_4_RUSER),
      .RVALID(twiddle_rsc_0_4_RVALID),
      .RREADY(twiddle_rsc_0_4_RREADY),
      .s_re(twiddle_rsc_0_4_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_rsc_0_4_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_rsc_0_4_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_rsc_0_4_i_s_rrdy),
      .s_wrdy(twiddle_rsc_0_4_i_s_wrdy),
      .is_idle(twiddle_rsc_0_4_is_idle),
      .tr_write_done(twiddle_rsc_0_4_tr_write_done),
      .s_tdone(twiddle_rsc_0_4_s_tdone)
    );
  peaseNTT_core_twiddle_rsc_0_4_i_twiddle_rsc_0_4_wait_ctrl peaseNTT_core_twiddle_rsc_0_4_i_twiddle_rsc_0_4_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_rsc_0_4_i_oswt(twiddle_rsc_0_4_i_oswt),
      .twiddle_rsc_0_4_i_biwt(twiddle_rsc_0_4_i_biwt),
      .twiddle_rsc_0_4_i_bdwt(twiddle_rsc_0_4_i_bdwt),
      .twiddle_rsc_0_4_i_bcwt(twiddle_rsc_0_4_i_bcwt),
      .twiddle_rsc_0_4_i_s_re_core_sct(twiddle_rsc_0_4_i_s_re_core_sct),
      .twiddle_rsc_0_4_i_s_rrdy(twiddle_rsc_0_4_i_s_rrdy)
    );
  peaseNTT_core_twiddle_rsc_0_4_i_twiddle_rsc_0_4_wait_dp peaseNTT_core_twiddle_rsc_0_4_i_twiddle_rsc_0_4_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_4_i_oswt(twiddle_rsc_0_4_i_oswt),
      .twiddle_rsc_0_4_i_wen_comp(twiddle_rsc_0_4_i_wen_comp),
      .twiddle_rsc_0_4_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_4_i_twiddle_rsc_0_4_wait_dp_inst_twiddle_rsc_0_4_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_4_i_s_din_mxwt(twiddle_rsc_0_4_i_s_din_mxwt),
      .twiddle_rsc_0_4_i_biwt(twiddle_rsc_0_4_i_biwt),
      .twiddle_rsc_0_4_i_bdwt(twiddle_rsc_0_4_i_bdwt),
      .twiddle_rsc_0_4_i_bcwt(twiddle_rsc_0_4_i_bcwt),
      .twiddle_rsc_0_4_i_s_raddr(twiddle_rsc_0_4_i_s_raddr),
      .twiddle_rsc_0_4_i_s_raddr_core_sct(twiddle_rsc_0_4_i_s_re_core_sct),
      .twiddle_rsc_0_4_i_s_din(twiddle_rsc_0_4_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_3_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_3_i (
  clk, rst, twiddle_rsc_0_3_s_tdone, twiddle_rsc_0_3_tr_write_done, twiddle_rsc_0_3_RREADY,
      twiddle_rsc_0_3_RVALID, twiddle_rsc_0_3_RUSER, twiddle_rsc_0_3_RLAST, twiddle_rsc_0_3_RRESP,
      twiddle_rsc_0_3_RDATA, twiddle_rsc_0_3_RID, twiddle_rsc_0_3_ARREADY, twiddle_rsc_0_3_ARVALID,
      twiddle_rsc_0_3_ARUSER, twiddle_rsc_0_3_ARREGION, twiddle_rsc_0_3_ARQOS, twiddle_rsc_0_3_ARPROT,
      twiddle_rsc_0_3_ARCACHE, twiddle_rsc_0_3_ARLOCK, twiddle_rsc_0_3_ARBURST, twiddle_rsc_0_3_ARSIZE,
      twiddle_rsc_0_3_ARLEN, twiddle_rsc_0_3_ARADDR, twiddle_rsc_0_3_ARID, twiddle_rsc_0_3_BREADY,
      twiddle_rsc_0_3_BVALID, twiddle_rsc_0_3_BUSER, twiddle_rsc_0_3_BRESP, twiddle_rsc_0_3_BID,
      twiddle_rsc_0_3_WREADY, twiddle_rsc_0_3_WVALID, twiddle_rsc_0_3_WUSER, twiddle_rsc_0_3_WLAST,
      twiddle_rsc_0_3_WSTRB, twiddle_rsc_0_3_WDATA, twiddle_rsc_0_3_AWREADY, twiddle_rsc_0_3_AWVALID,
      twiddle_rsc_0_3_AWUSER, twiddle_rsc_0_3_AWREGION, twiddle_rsc_0_3_AWQOS, twiddle_rsc_0_3_AWPROT,
      twiddle_rsc_0_3_AWCACHE, twiddle_rsc_0_3_AWLOCK, twiddle_rsc_0_3_AWBURST, twiddle_rsc_0_3_AWSIZE,
      twiddle_rsc_0_3_AWLEN, twiddle_rsc_0_3_AWADDR, twiddle_rsc_0_3_AWID, core_wen,
      twiddle_rsc_0_3_i_oswt, twiddle_rsc_0_3_i_wen_comp, twiddle_rsc_0_3_i_s_raddr_core,
      twiddle_rsc_0_3_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_rsc_0_3_s_tdone;
  input twiddle_rsc_0_3_tr_write_done;
  input twiddle_rsc_0_3_RREADY;
  output twiddle_rsc_0_3_RVALID;
  output twiddle_rsc_0_3_RUSER;
  output twiddle_rsc_0_3_RLAST;
  output [1:0] twiddle_rsc_0_3_RRESP;
  output [31:0] twiddle_rsc_0_3_RDATA;
  output twiddle_rsc_0_3_RID;
  output twiddle_rsc_0_3_ARREADY;
  input twiddle_rsc_0_3_ARVALID;
  input twiddle_rsc_0_3_ARUSER;
  input [3:0] twiddle_rsc_0_3_ARREGION;
  input [3:0] twiddle_rsc_0_3_ARQOS;
  input [2:0] twiddle_rsc_0_3_ARPROT;
  input [3:0] twiddle_rsc_0_3_ARCACHE;
  input twiddle_rsc_0_3_ARLOCK;
  input [1:0] twiddle_rsc_0_3_ARBURST;
  input [2:0] twiddle_rsc_0_3_ARSIZE;
  input [7:0] twiddle_rsc_0_3_ARLEN;
  input [11:0] twiddle_rsc_0_3_ARADDR;
  input twiddle_rsc_0_3_ARID;
  input twiddle_rsc_0_3_BREADY;
  output twiddle_rsc_0_3_BVALID;
  output twiddle_rsc_0_3_BUSER;
  output [1:0] twiddle_rsc_0_3_BRESP;
  output twiddle_rsc_0_3_BID;
  output twiddle_rsc_0_3_WREADY;
  input twiddle_rsc_0_3_WVALID;
  input twiddle_rsc_0_3_WUSER;
  input twiddle_rsc_0_3_WLAST;
  input [3:0] twiddle_rsc_0_3_WSTRB;
  input [31:0] twiddle_rsc_0_3_WDATA;
  output twiddle_rsc_0_3_AWREADY;
  input twiddle_rsc_0_3_AWVALID;
  input twiddle_rsc_0_3_AWUSER;
  input [3:0] twiddle_rsc_0_3_AWREGION;
  input [3:0] twiddle_rsc_0_3_AWQOS;
  input [2:0] twiddle_rsc_0_3_AWPROT;
  input [3:0] twiddle_rsc_0_3_AWCACHE;
  input twiddle_rsc_0_3_AWLOCK;
  input [1:0] twiddle_rsc_0_3_AWBURST;
  input [2:0] twiddle_rsc_0_3_AWSIZE;
  input [7:0] twiddle_rsc_0_3_AWLEN;
  input [11:0] twiddle_rsc_0_3_AWADDR;
  input twiddle_rsc_0_3_AWID;
  input core_wen;
  input twiddle_rsc_0_3_i_oswt;
  output twiddle_rsc_0_3_i_wen_comp;
  input [5:0] twiddle_rsc_0_3_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_3_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_rsc_0_3_i_biwt;
  wire twiddle_rsc_0_3_i_bdwt;
  wire twiddle_rsc_0_3_i_bcwt;
  wire twiddle_rsc_0_3_i_s_re_core_sct;
  wire [5:0] twiddle_rsc_0_3_i_s_raddr;
  wire [31:0] twiddle_rsc_0_3_i_s_din;
  wire twiddle_rsc_0_3_i_s_rrdy;
  wire twiddle_rsc_0_3_i_s_wrdy;
  wire twiddle_rsc_0_3_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_3_i_twiddle_rsc_0_3_wait_dp_inst_twiddle_rsc_0_3_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_3_i_twiddle_rsc_0_3_wait_dp_inst_twiddle_rsc_0_3_i_s_raddr_core
      = {1'b0 , (twiddle_rsc_0_3_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_rsc_0_3_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_rsc_0_3_AWID),
      .AWADDR(twiddle_rsc_0_3_AWADDR),
      .AWLEN(twiddle_rsc_0_3_AWLEN),
      .AWSIZE(twiddle_rsc_0_3_AWSIZE),
      .AWBURST(twiddle_rsc_0_3_AWBURST),
      .AWLOCK(twiddle_rsc_0_3_AWLOCK),
      .AWCACHE(twiddle_rsc_0_3_AWCACHE),
      .AWPROT(twiddle_rsc_0_3_AWPROT),
      .AWQOS(twiddle_rsc_0_3_AWQOS),
      .AWREGION(twiddle_rsc_0_3_AWREGION),
      .AWUSER(twiddle_rsc_0_3_AWUSER),
      .AWVALID(twiddle_rsc_0_3_AWVALID),
      .AWREADY(twiddle_rsc_0_3_AWREADY),
      .WDATA(twiddle_rsc_0_3_WDATA),
      .WSTRB(twiddle_rsc_0_3_WSTRB),
      .WLAST(twiddle_rsc_0_3_WLAST),
      .WUSER(twiddle_rsc_0_3_WUSER),
      .WVALID(twiddle_rsc_0_3_WVALID),
      .WREADY(twiddle_rsc_0_3_WREADY),
      .BID(twiddle_rsc_0_3_BID),
      .BRESP(twiddle_rsc_0_3_BRESP),
      .BUSER(twiddle_rsc_0_3_BUSER),
      .BVALID(twiddle_rsc_0_3_BVALID),
      .BREADY(twiddle_rsc_0_3_BREADY),
      .ARID(twiddle_rsc_0_3_ARID),
      .ARADDR(twiddle_rsc_0_3_ARADDR),
      .ARLEN(twiddle_rsc_0_3_ARLEN),
      .ARSIZE(twiddle_rsc_0_3_ARSIZE),
      .ARBURST(twiddle_rsc_0_3_ARBURST),
      .ARLOCK(twiddle_rsc_0_3_ARLOCK),
      .ARCACHE(twiddle_rsc_0_3_ARCACHE),
      .ARPROT(twiddle_rsc_0_3_ARPROT),
      .ARQOS(twiddle_rsc_0_3_ARQOS),
      .ARREGION(twiddle_rsc_0_3_ARREGION),
      .ARUSER(twiddle_rsc_0_3_ARUSER),
      .ARVALID(twiddle_rsc_0_3_ARVALID),
      .ARREADY(twiddle_rsc_0_3_ARREADY),
      .RID(twiddle_rsc_0_3_RID),
      .RDATA(twiddle_rsc_0_3_RDATA),
      .RRESP(twiddle_rsc_0_3_RRESP),
      .RLAST(twiddle_rsc_0_3_RLAST),
      .RUSER(twiddle_rsc_0_3_RUSER),
      .RVALID(twiddle_rsc_0_3_RVALID),
      .RREADY(twiddle_rsc_0_3_RREADY),
      .s_re(twiddle_rsc_0_3_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_rsc_0_3_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_rsc_0_3_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_rsc_0_3_i_s_rrdy),
      .s_wrdy(twiddle_rsc_0_3_i_s_wrdy),
      .is_idle(twiddle_rsc_0_3_is_idle),
      .tr_write_done(twiddle_rsc_0_3_tr_write_done),
      .s_tdone(twiddle_rsc_0_3_s_tdone)
    );
  peaseNTT_core_twiddle_rsc_0_3_i_twiddle_rsc_0_3_wait_ctrl peaseNTT_core_twiddle_rsc_0_3_i_twiddle_rsc_0_3_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_rsc_0_3_i_oswt(twiddle_rsc_0_3_i_oswt),
      .twiddle_rsc_0_3_i_biwt(twiddle_rsc_0_3_i_biwt),
      .twiddle_rsc_0_3_i_bdwt(twiddle_rsc_0_3_i_bdwt),
      .twiddle_rsc_0_3_i_bcwt(twiddle_rsc_0_3_i_bcwt),
      .twiddle_rsc_0_3_i_s_re_core_sct(twiddle_rsc_0_3_i_s_re_core_sct),
      .twiddle_rsc_0_3_i_s_rrdy(twiddle_rsc_0_3_i_s_rrdy)
    );
  peaseNTT_core_twiddle_rsc_0_3_i_twiddle_rsc_0_3_wait_dp peaseNTT_core_twiddle_rsc_0_3_i_twiddle_rsc_0_3_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_3_i_oswt(twiddle_rsc_0_3_i_oswt),
      .twiddle_rsc_0_3_i_wen_comp(twiddle_rsc_0_3_i_wen_comp),
      .twiddle_rsc_0_3_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_3_i_twiddle_rsc_0_3_wait_dp_inst_twiddle_rsc_0_3_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_3_i_s_din_mxwt(twiddle_rsc_0_3_i_s_din_mxwt),
      .twiddle_rsc_0_3_i_biwt(twiddle_rsc_0_3_i_biwt),
      .twiddle_rsc_0_3_i_bdwt(twiddle_rsc_0_3_i_bdwt),
      .twiddle_rsc_0_3_i_bcwt(twiddle_rsc_0_3_i_bcwt),
      .twiddle_rsc_0_3_i_s_raddr(twiddle_rsc_0_3_i_s_raddr),
      .twiddle_rsc_0_3_i_s_raddr_core_sct(twiddle_rsc_0_3_i_s_re_core_sct),
      .twiddle_rsc_0_3_i_s_din(twiddle_rsc_0_3_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_2_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_2_i (
  clk, rst, twiddle_rsc_0_2_s_tdone, twiddle_rsc_0_2_tr_write_done, twiddle_rsc_0_2_RREADY,
      twiddle_rsc_0_2_RVALID, twiddle_rsc_0_2_RUSER, twiddle_rsc_0_2_RLAST, twiddle_rsc_0_2_RRESP,
      twiddle_rsc_0_2_RDATA, twiddle_rsc_0_2_RID, twiddle_rsc_0_2_ARREADY, twiddle_rsc_0_2_ARVALID,
      twiddle_rsc_0_2_ARUSER, twiddle_rsc_0_2_ARREGION, twiddle_rsc_0_2_ARQOS, twiddle_rsc_0_2_ARPROT,
      twiddle_rsc_0_2_ARCACHE, twiddle_rsc_0_2_ARLOCK, twiddle_rsc_0_2_ARBURST, twiddle_rsc_0_2_ARSIZE,
      twiddle_rsc_0_2_ARLEN, twiddle_rsc_0_2_ARADDR, twiddle_rsc_0_2_ARID, twiddle_rsc_0_2_BREADY,
      twiddle_rsc_0_2_BVALID, twiddle_rsc_0_2_BUSER, twiddle_rsc_0_2_BRESP, twiddle_rsc_0_2_BID,
      twiddle_rsc_0_2_WREADY, twiddle_rsc_0_2_WVALID, twiddle_rsc_0_2_WUSER, twiddle_rsc_0_2_WLAST,
      twiddle_rsc_0_2_WSTRB, twiddle_rsc_0_2_WDATA, twiddle_rsc_0_2_AWREADY, twiddle_rsc_0_2_AWVALID,
      twiddle_rsc_0_2_AWUSER, twiddle_rsc_0_2_AWREGION, twiddle_rsc_0_2_AWQOS, twiddle_rsc_0_2_AWPROT,
      twiddle_rsc_0_2_AWCACHE, twiddle_rsc_0_2_AWLOCK, twiddle_rsc_0_2_AWBURST, twiddle_rsc_0_2_AWSIZE,
      twiddle_rsc_0_2_AWLEN, twiddle_rsc_0_2_AWADDR, twiddle_rsc_0_2_AWID, core_wen,
      twiddle_rsc_0_2_i_oswt, twiddle_rsc_0_2_i_wen_comp, twiddle_rsc_0_2_i_s_raddr_core,
      twiddle_rsc_0_2_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_rsc_0_2_s_tdone;
  input twiddle_rsc_0_2_tr_write_done;
  input twiddle_rsc_0_2_RREADY;
  output twiddle_rsc_0_2_RVALID;
  output twiddle_rsc_0_2_RUSER;
  output twiddle_rsc_0_2_RLAST;
  output [1:0] twiddle_rsc_0_2_RRESP;
  output [31:0] twiddle_rsc_0_2_RDATA;
  output twiddle_rsc_0_2_RID;
  output twiddle_rsc_0_2_ARREADY;
  input twiddle_rsc_0_2_ARVALID;
  input twiddle_rsc_0_2_ARUSER;
  input [3:0] twiddle_rsc_0_2_ARREGION;
  input [3:0] twiddle_rsc_0_2_ARQOS;
  input [2:0] twiddle_rsc_0_2_ARPROT;
  input [3:0] twiddle_rsc_0_2_ARCACHE;
  input twiddle_rsc_0_2_ARLOCK;
  input [1:0] twiddle_rsc_0_2_ARBURST;
  input [2:0] twiddle_rsc_0_2_ARSIZE;
  input [7:0] twiddle_rsc_0_2_ARLEN;
  input [11:0] twiddle_rsc_0_2_ARADDR;
  input twiddle_rsc_0_2_ARID;
  input twiddle_rsc_0_2_BREADY;
  output twiddle_rsc_0_2_BVALID;
  output twiddle_rsc_0_2_BUSER;
  output [1:0] twiddle_rsc_0_2_BRESP;
  output twiddle_rsc_0_2_BID;
  output twiddle_rsc_0_2_WREADY;
  input twiddle_rsc_0_2_WVALID;
  input twiddle_rsc_0_2_WUSER;
  input twiddle_rsc_0_2_WLAST;
  input [3:0] twiddle_rsc_0_2_WSTRB;
  input [31:0] twiddle_rsc_0_2_WDATA;
  output twiddle_rsc_0_2_AWREADY;
  input twiddle_rsc_0_2_AWVALID;
  input twiddle_rsc_0_2_AWUSER;
  input [3:0] twiddle_rsc_0_2_AWREGION;
  input [3:0] twiddle_rsc_0_2_AWQOS;
  input [2:0] twiddle_rsc_0_2_AWPROT;
  input [3:0] twiddle_rsc_0_2_AWCACHE;
  input twiddle_rsc_0_2_AWLOCK;
  input [1:0] twiddle_rsc_0_2_AWBURST;
  input [2:0] twiddle_rsc_0_2_AWSIZE;
  input [7:0] twiddle_rsc_0_2_AWLEN;
  input [11:0] twiddle_rsc_0_2_AWADDR;
  input twiddle_rsc_0_2_AWID;
  input core_wen;
  input twiddle_rsc_0_2_i_oswt;
  output twiddle_rsc_0_2_i_wen_comp;
  input [5:0] twiddle_rsc_0_2_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_2_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_rsc_0_2_i_biwt;
  wire twiddle_rsc_0_2_i_bdwt;
  wire twiddle_rsc_0_2_i_bcwt;
  wire twiddle_rsc_0_2_i_s_re_core_sct;
  wire [5:0] twiddle_rsc_0_2_i_s_raddr;
  wire [31:0] twiddle_rsc_0_2_i_s_din;
  wire twiddle_rsc_0_2_i_s_rrdy;
  wire twiddle_rsc_0_2_i_s_wrdy;
  wire twiddle_rsc_0_2_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_2_i_twiddle_rsc_0_2_wait_dp_inst_twiddle_rsc_0_2_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_2_i_twiddle_rsc_0_2_wait_dp_inst_twiddle_rsc_0_2_i_s_raddr_core
      = {1'b0 , (twiddle_rsc_0_2_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_rsc_0_2_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_rsc_0_2_AWID),
      .AWADDR(twiddle_rsc_0_2_AWADDR),
      .AWLEN(twiddle_rsc_0_2_AWLEN),
      .AWSIZE(twiddle_rsc_0_2_AWSIZE),
      .AWBURST(twiddle_rsc_0_2_AWBURST),
      .AWLOCK(twiddle_rsc_0_2_AWLOCK),
      .AWCACHE(twiddle_rsc_0_2_AWCACHE),
      .AWPROT(twiddle_rsc_0_2_AWPROT),
      .AWQOS(twiddle_rsc_0_2_AWQOS),
      .AWREGION(twiddle_rsc_0_2_AWREGION),
      .AWUSER(twiddle_rsc_0_2_AWUSER),
      .AWVALID(twiddle_rsc_0_2_AWVALID),
      .AWREADY(twiddle_rsc_0_2_AWREADY),
      .WDATA(twiddle_rsc_0_2_WDATA),
      .WSTRB(twiddle_rsc_0_2_WSTRB),
      .WLAST(twiddle_rsc_0_2_WLAST),
      .WUSER(twiddle_rsc_0_2_WUSER),
      .WVALID(twiddle_rsc_0_2_WVALID),
      .WREADY(twiddle_rsc_0_2_WREADY),
      .BID(twiddle_rsc_0_2_BID),
      .BRESP(twiddle_rsc_0_2_BRESP),
      .BUSER(twiddle_rsc_0_2_BUSER),
      .BVALID(twiddle_rsc_0_2_BVALID),
      .BREADY(twiddle_rsc_0_2_BREADY),
      .ARID(twiddle_rsc_0_2_ARID),
      .ARADDR(twiddle_rsc_0_2_ARADDR),
      .ARLEN(twiddle_rsc_0_2_ARLEN),
      .ARSIZE(twiddle_rsc_0_2_ARSIZE),
      .ARBURST(twiddle_rsc_0_2_ARBURST),
      .ARLOCK(twiddle_rsc_0_2_ARLOCK),
      .ARCACHE(twiddle_rsc_0_2_ARCACHE),
      .ARPROT(twiddle_rsc_0_2_ARPROT),
      .ARQOS(twiddle_rsc_0_2_ARQOS),
      .ARREGION(twiddle_rsc_0_2_ARREGION),
      .ARUSER(twiddle_rsc_0_2_ARUSER),
      .ARVALID(twiddle_rsc_0_2_ARVALID),
      .ARREADY(twiddle_rsc_0_2_ARREADY),
      .RID(twiddle_rsc_0_2_RID),
      .RDATA(twiddle_rsc_0_2_RDATA),
      .RRESP(twiddle_rsc_0_2_RRESP),
      .RLAST(twiddle_rsc_0_2_RLAST),
      .RUSER(twiddle_rsc_0_2_RUSER),
      .RVALID(twiddle_rsc_0_2_RVALID),
      .RREADY(twiddle_rsc_0_2_RREADY),
      .s_re(twiddle_rsc_0_2_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_rsc_0_2_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_rsc_0_2_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_rsc_0_2_i_s_rrdy),
      .s_wrdy(twiddle_rsc_0_2_i_s_wrdy),
      .is_idle(twiddle_rsc_0_2_is_idle),
      .tr_write_done(twiddle_rsc_0_2_tr_write_done),
      .s_tdone(twiddle_rsc_0_2_s_tdone)
    );
  peaseNTT_core_twiddle_rsc_0_2_i_twiddle_rsc_0_2_wait_ctrl peaseNTT_core_twiddle_rsc_0_2_i_twiddle_rsc_0_2_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_rsc_0_2_i_oswt(twiddle_rsc_0_2_i_oswt),
      .twiddle_rsc_0_2_i_biwt(twiddle_rsc_0_2_i_biwt),
      .twiddle_rsc_0_2_i_bdwt(twiddle_rsc_0_2_i_bdwt),
      .twiddle_rsc_0_2_i_bcwt(twiddle_rsc_0_2_i_bcwt),
      .twiddle_rsc_0_2_i_s_re_core_sct(twiddle_rsc_0_2_i_s_re_core_sct),
      .twiddle_rsc_0_2_i_s_rrdy(twiddle_rsc_0_2_i_s_rrdy)
    );
  peaseNTT_core_twiddle_rsc_0_2_i_twiddle_rsc_0_2_wait_dp peaseNTT_core_twiddle_rsc_0_2_i_twiddle_rsc_0_2_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_2_i_oswt(twiddle_rsc_0_2_i_oswt),
      .twiddle_rsc_0_2_i_wen_comp(twiddle_rsc_0_2_i_wen_comp),
      .twiddle_rsc_0_2_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_2_i_twiddle_rsc_0_2_wait_dp_inst_twiddle_rsc_0_2_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_2_i_s_din_mxwt(twiddle_rsc_0_2_i_s_din_mxwt),
      .twiddle_rsc_0_2_i_biwt(twiddle_rsc_0_2_i_biwt),
      .twiddle_rsc_0_2_i_bdwt(twiddle_rsc_0_2_i_bdwt),
      .twiddle_rsc_0_2_i_bcwt(twiddle_rsc_0_2_i_bcwt),
      .twiddle_rsc_0_2_i_s_raddr(twiddle_rsc_0_2_i_s_raddr),
      .twiddle_rsc_0_2_i_s_raddr_core_sct(twiddle_rsc_0_2_i_s_re_core_sct),
      .twiddle_rsc_0_2_i_s_din(twiddle_rsc_0_2_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_1_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_1_i (
  clk, rst, twiddle_rsc_0_1_s_tdone, twiddle_rsc_0_1_tr_write_done, twiddle_rsc_0_1_RREADY,
      twiddle_rsc_0_1_RVALID, twiddle_rsc_0_1_RUSER, twiddle_rsc_0_1_RLAST, twiddle_rsc_0_1_RRESP,
      twiddle_rsc_0_1_RDATA, twiddle_rsc_0_1_RID, twiddle_rsc_0_1_ARREADY, twiddle_rsc_0_1_ARVALID,
      twiddle_rsc_0_1_ARUSER, twiddle_rsc_0_1_ARREGION, twiddle_rsc_0_1_ARQOS, twiddle_rsc_0_1_ARPROT,
      twiddle_rsc_0_1_ARCACHE, twiddle_rsc_0_1_ARLOCK, twiddle_rsc_0_1_ARBURST, twiddle_rsc_0_1_ARSIZE,
      twiddle_rsc_0_1_ARLEN, twiddle_rsc_0_1_ARADDR, twiddle_rsc_0_1_ARID, twiddle_rsc_0_1_BREADY,
      twiddle_rsc_0_1_BVALID, twiddle_rsc_0_1_BUSER, twiddle_rsc_0_1_BRESP, twiddle_rsc_0_1_BID,
      twiddle_rsc_0_1_WREADY, twiddle_rsc_0_1_WVALID, twiddle_rsc_0_1_WUSER, twiddle_rsc_0_1_WLAST,
      twiddle_rsc_0_1_WSTRB, twiddle_rsc_0_1_WDATA, twiddle_rsc_0_1_AWREADY, twiddle_rsc_0_1_AWVALID,
      twiddle_rsc_0_1_AWUSER, twiddle_rsc_0_1_AWREGION, twiddle_rsc_0_1_AWQOS, twiddle_rsc_0_1_AWPROT,
      twiddle_rsc_0_1_AWCACHE, twiddle_rsc_0_1_AWLOCK, twiddle_rsc_0_1_AWBURST, twiddle_rsc_0_1_AWSIZE,
      twiddle_rsc_0_1_AWLEN, twiddle_rsc_0_1_AWADDR, twiddle_rsc_0_1_AWID, core_wen,
      twiddle_rsc_0_1_i_oswt, twiddle_rsc_0_1_i_wen_comp, twiddle_rsc_0_1_i_s_raddr_core,
      twiddle_rsc_0_1_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_rsc_0_1_s_tdone;
  input twiddle_rsc_0_1_tr_write_done;
  input twiddle_rsc_0_1_RREADY;
  output twiddle_rsc_0_1_RVALID;
  output twiddle_rsc_0_1_RUSER;
  output twiddle_rsc_0_1_RLAST;
  output [1:0] twiddle_rsc_0_1_RRESP;
  output [31:0] twiddle_rsc_0_1_RDATA;
  output twiddle_rsc_0_1_RID;
  output twiddle_rsc_0_1_ARREADY;
  input twiddle_rsc_0_1_ARVALID;
  input twiddle_rsc_0_1_ARUSER;
  input [3:0] twiddle_rsc_0_1_ARREGION;
  input [3:0] twiddle_rsc_0_1_ARQOS;
  input [2:0] twiddle_rsc_0_1_ARPROT;
  input [3:0] twiddle_rsc_0_1_ARCACHE;
  input twiddle_rsc_0_1_ARLOCK;
  input [1:0] twiddle_rsc_0_1_ARBURST;
  input [2:0] twiddle_rsc_0_1_ARSIZE;
  input [7:0] twiddle_rsc_0_1_ARLEN;
  input [11:0] twiddle_rsc_0_1_ARADDR;
  input twiddle_rsc_0_1_ARID;
  input twiddle_rsc_0_1_BREADY;
  output twiddle_rsc_0_1_BVALID;
  output twiddle_rsc_0_1_BUSER;
  output [1:0] twiddle_rsc_0_1_BRESP;
  output twiddle_rsc_0_1_BID;
  output twiddle_rsc_0_1_WREADY;
  input twiddle_rsc_0_1_WVALID;
  input twiddle_rsc_0_1_WUSER;
  input twiddle_rsc_0_1_WLAST;
  input [3:0] twiddle_rsc_0_1_WSTRB;
  input [31:0] twiddle_rsc_0_1_WDATA;
  output twiddle_rsc_0_1_AWREADY;
  input twiddle_rsc_0_1_AWVALID;
  input twiddle_rsc_0_1_AWUSER;
  input [3:0] twiddle_rsc_0_1_AWREGION;
  input [3:0] twiddle_rsc_0_1_AWQOS;
  input [2:0] twiddle_rsc_0_1_AWPROT;
  input [3:0] twiddle_rsc_0_1_AWCACHE;
  input twiddle_rsc_0_1_AWLOCK;
  input [1:0] twiddle_rsc_0_1_AWBURST;
  input [2:0] twiddle_rsc_0_1_AWSIZE;
  input [7:0] twiddle_rsc_0_1_AWLEN;
  input [11:0] twiddle_rsc_0_1_AWADDR;
  input twiddle_rsc_0_1_AWID;
  input core_wen;
  input twiddle_rsc_0_1_i_oswt;
  output twiddle_rsc_0_1_i_wen_comp;
  input [5:0] twiddle_rsc_0_1_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_1_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_rsc_0_1_i_biwt;
  wire twiddle_rsc_0_1_i_bdwt;
  wire twiddle_rsc_0_1_i_bcwt;
  wire twiddle_rsc_0_1_i_s_re_core_sct;
  wire [5:0] twiddle_rsc_0_1_i_s_raddr;
  wire [31:0] twiddle_rsc_0_1_i_s_din;
  wire twiddle_rsc_0_1_i_s_rrdy;
  wire twiddle_rsc_0_1_i_s_wrdy;
  wire twiddle_rsc_0_1_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp_inst_twiddle_rsc_0_1_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp_inst_twiddle_rsc_0_1_i_s_raddr_core
      = {1'b0 , (twiddle_rsc_0_1_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_rsc_0_1_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_rsc_0_1_AWID),
      .AWADDR(twiddle_rsc_0_1_AWADDR),
      .AWLEN(twiddle_rsc_0_1_AWLEN),
      .AWSIZE(twiddle_rsc_0_1_AWSIZE),
      .AWBURST(twiddle_rsc_0_1_AWBURST),
      .AWLOCK(twiddle_rsc_0_1_AWLOCK),
      .AWCACHE(twiddle_rsc_0_1_AWCACHE),
      .AWPROT(twiddle_rsc_0_1_AWPROT),
      .AWQOS(twiddle_rsc_0_1_AWQOS),
      .AWREGION(twiddle_rsc_0_1_AWREGION),
      .AWUSER(twiddle_rsc_0_1_AWUSER),
      .AWVALID(twiddle_rsc_0_1_AWVALID),
      .AWREADY(twiddle_rsc_0_1_AWREADY),
      .WDATA(twiddle_rsc_0_1_WDATA),
      .WSTRB(twiddle_rsc_0_1_WSTRB),
      .WLAST(twiddle_rsc_0_1_WLAST),
      .WUSER(twiddle_rsc_0_1_WUSER),
      .WVALID(twiddle_rsc_0_1_WVALID),
      .WREADY(twiddle_rsc_0_1_WREADY),
      .BID(twiddle_rsc_0_1_BID),
      .BRESP(twiddle_rsc_0_1_BRESP),
      .BUSER(twiddle_rsc_0_1_BUSER),
      .BVALID(twiddle_rsc_0_1_BVALID),
      .BREADY(twiddle_rsc_0_1_BREADY),
      .ARID(twiddle_rsc_0_1_ARID),
      .ARADDR(twiddle_rsc_0_1_ARADDR),
      .ARLEN(twiddle_rsc_0_1_ARLEN),
      .ARSIZE(twiddle_rsc_0_1_ARSIZE),
      .ARBURST(twiddle_rsc_0_1_ARBURST),
      .ARLOCK(twiddle_rsc_0_1_ARLOCK),
      .ARCACHE(twiddle_rsc_0_1_ARCACHE),
      .ARPROT(twiddle_rsc_0_1_ARPROT),
      .ARQOS(twiddle_rsc_0_1_ARQOS),
      .ARREGION(twiddle_rsc_0_1_ARREGION),
      .ARUSER(twiddle_rsc_0_1_ARUSER),
      .ARVALID(twiddle_rsc_0_1_ARVALID),
      .ARREADY(twiddle_rsc_0_1_ARREADY),
      .RID(twiddle_rsc_0_1_RID),
      .RDATA(twiddle_rsc_0_1_RDATA),
      .RRESP(twiddle_rsc_0_1_RRESP),
      .RLAST(twiddle_rsc_0_1_RLAST),
      .RUSER(twiddle_rsc_0_1_RUSER),
      .RVALID(twiddle_rsc_0_1_RVALID),
      .RREADY(twiddle_rsc_0_1_RREADY),
      .s_re(twiddle_rsc_0_1_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_rsc_0_1_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_rsc_0_1_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_rsc_0_1_i_s_rrdy),
      .s_wrdy(twiddle_rsc_0_1_i_s_wrdy),
      .is_idle(twiddle_rsc_0_1_is_idle),
      .tr_write_done(twiddle_rsc_0_1_tr_write_done),
      .s_tdone(twiddle_rsc_0_1_s_tdone)
    );
  peaseNTT_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_ctrl peaseNTT_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_rsc_0_1_i_oswt(twiddle_rsc_0_1_i_oswt),
      .twiddle_rsc_0_1_i_biwt(twiddle_rsc_0_1_i_biwt),
      .twiddle_rsc_0_1_i_bdwt(twiddle_rsc_0_1_i_bdwt),
      .twiddle_rsc_0_1_i_bcwt(twiddle_rsc_0_1_i_bcwt),
      .twiddle_rsc_0_1_i_s_re_core_sct(twiddle_rsc_0_1_i_s_re_core_sct),
      .twiddle_rsc_0_1_i_s_rrdy(twiddle_rsc_0_1_i_s_rrdy)
    );
  peaseNTT_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp peaseNTT_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_1_i_oswt(twiddle_rsc_0_1_i_oswt),
      .twiddle_rsc_0_1_i_wen_comp(twiddle_rsc_0_1_i_wen_comp),
      .twiddle_rsc_0_1_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp_inst_twiddle_rsc_0_1_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_1_i_s_din_mxwt(twiddle_rsc_0_1_i_s_din_mxwt),
      .twiddle_rsc_0_1_i_biwt(twiddle_rsc_0_1_i_biwt),
      .twiddle_rsc_0_1_i_bdwt(twiddle_rsc_0_1_i_bdwt),
      .twiddle_rsc_0_1_i_bcwt(twiddle_rsc_0_1_i_bcwt),
      .twiddle_rsc_0_1_i_s_raddr(twiddle_rsc_0_1_i_s_raddr),
      .twiddle_rsc_0_1_i_s_raddr_core_sct(twiddle_rsc_0_1_i_s_re_core_sct),
      .twiddle_rsc_0_1_i_s_din(twiddle_rsc_0_1_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_twiddle_rsc_0_0_i
// ------------------------------------------------------------------


module peaseNTT_core_twiddle_rsc_0_0_i (
  clk, rst, twiddle_rsc_0_0_s_tdone, twiddle_rsc_0_0_tr_write_done, twiddle_rsc_0_0_RREADY,
      twiddle_rsc_0_0_RVALID, twiddle_rsc_0_0_RUSER, twiddle_rsc_0_0_RLAST, twiddle_rsc_0_0_RRESP,
      twiddle_rsc_0_0_RDATA, twiddle_rsc_0_0_RID, twiddle_rsc_0_0_ARREADY, twiddle_rsc_0_0_ARVALID,
      twiddle_rsc_0_0_ARUSER, twiddle_rsc_0_0_ARREGION, twiddle_rsc_0_0_ARQOS, twiddle_rsc_0_0_ARPROT,
      twiddle_rsc_0_0_ARCACHE, twiddle_rsc_0_0_ARLOCK, twiddle_rsc_0_0_ARBURST, twiddle_rsc_0_0_ARSIZE,
      twiddle_rsc_0_0_ARLEN, twiddle_rsc_0_0_ARADDR, twiddle_rsc_0_0_ARID, twiddle_rsc_0_0_BREADY,
      twiddle_rsc_0_0_BVALID, twiddle_rsc_0_0_BUSER, twiddle_rsc_0_0_BRESP, twiddle_rsc_0_0_BID,
      twiddle_rsc_0_0_WREADY, twiddle_rsc_0_0_WVALID, twiddle_rsc_0_0_WUSER, twiddle_rsc_0_0_WLAST,
      twiddle_rsc_0_0_WSTRB, twiddle_rsc_0_0_WDATA, twiddle_rsc_0_0_AWREADY, twiddle_rsc_0_0_AWVALID,
      twiddle_rsc_0_0_AWUSER, twiddle_rsc_0_0_AWREGION, twiddle_rsc_0_0_AWQOS, twiddle_rsc_0_0_AWPROT,
      twiddle_rsc_0_0_AWCACHE, twiddle_rsc_0_0_AWLOCK, twiddle_rsc_0_0_AWBURST, twiddle_rsc_0_0_AWSIZE,
      twiddle_rsc_0_0_AWLEN, twiddle_rsc_0_0_AWADDR, twiddle_rsc_0_0_AWID, core_wen,
      twiddle_rsc_0_0_i_oswt, twiddle_rsc_0_0_i_wen_comp, twiddle_rsc_0_0_i_s_raddr_core,
      twiddle_rsc_0_0_i_s_din_mxwt
);
  input clk;
  input rst;
  input twiddle_rsc_0_0_s_tdone;
  input twiddle_rsc_0_0_tr_write_done;
  input twiddle_rsc_0_0_RREADY;
  output twiddle_rsc_0_0_RVALID;
  output twiddle_rsc_0_0_RUSER;
  output twiddle_rsc_0_0_RLAST;
  output [1:0] twiddle_rsc_0_0_RRESP;
  output [31:0] twiddle_rsc_0_0_RDATA;
  output twiddle_rsc_0_0_RID;
  output twiddle_rsc_0_0_ARREADY;
  input twiddle_rsc_0_0_ARVALID;
  input twiddle_rsc_0_0_ARUSER;
  input [3:0] twiddle_rsc_0_0_ARREGION;
  input [3:0] twiddle_rsc_0_0_ARQOS;
  input [2:0] twiddle_rsc_0_0_ARPROT;
  input [3:0] twiddle_rsc_0_0_ARCACHE;
  input twiddle_rsc_0_0_ARLOCK;
  input [1:0] twiddle_rsc_0_0_ARBURST;
  input [2:0] twiddle_rsc_0_0_ARSIZE;
  input [7:0] twiddle_rsc_0_0_ARLEN;
  input [11:0] twiddle_rsc_0_0_ARADDR;
  input twiddle_rsc_0_0_ARID;
  input twiddle_rsc_0_0_BREADY;
  output twiddle_rsc_0_0_BVALID;
  output twiddle_rsc_0_0_BUSER;
  output [1:0] twiddle_rsc_0_0_BRESP;
  output twiddle_rsc_0_0_BID;
  output twiddle_rsc_0_0_WREADY;
  input twiddle_rsc_0_0_WVALID;
  input twiddle_rsc_0_0_WUSER;
  input twiddle_rsc_0_0_WLAST;
  input [3:0] twiddle_rsc_0_0_WSTRB;
  input [31:0] twiddle_rsc_0_0_WDATA;
  output twiddle_rsc_0_0_AWREADY;
  input twiddle_rsc_0_0_AWVALID;
  input twiddle_rsc_0_0_AWUSER;
  input [3:0] twiddle_rsc_0_0_AWREGION;
  input [3:0] twiddle_rsc_0_0_AWQOS;
  input [2:0] twiddle_rsc_0_0_AWPROT;
  input [3:0] twiddle_rsc_0_0_AWCACHE;
  input twiddle_rsc_0_0_AWLOCK;
  input [1:0] twiddle_rsc_0_0_AWBURST;
  input [2:0] twiddle_rsc_0_0_AWSIZE;
  input [7:0] twiddle_rsc_0_0_AWLEN;
  input [11:0] twiddle_rsc_0_0_AWADDR;
  input twiddle_rsc_0_0_AWID;
  input core_wen;
  input twiddle_rsc_0_0_i_oswt;
  output twiddle_rsc_0_0_i_wen_comp;
  input [5:0] twiddle_rsc_0_0_i_s_raddr_core;
  output [31:0] twiddle_rsc_0_0_i_s_din_mxwt;


  // Interconnect Declarations
  wire twiddle_rsc_0_0_i_biwt;
  wire twiddle_rsc_0_0_i_bdwt;
  wire twiddle_rsc_0_0_i_bcwt;
  wire twiddle_rsc_0_0_i_s_re_core_sct;
  wire [5:0] twiddle_rsc_0_0_i_s_raddr;
  wire [31:0] twiddle_rsc_0_0_i_s_din;
  wire twiddle_rsc_0_0_i_s_rrdy;
  wire twiddle_rsc_0_0_i_s_wrdy;
  wire twiddle_rsc_0_0_is_idle;


  // Interconnect Declarations for Component Instantiations 
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp_inst_twiddle_rsc_0_0_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp_inst_twiddle_rsc_0_0_i_s_raddr_core
      = {1'b0 , (twiddle_rsc_0_0_i_s_raddr_core[4:0])};
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd64),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd6),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) twiddle_rsc_0_0_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(twiddle_rsc_0_0_AWID),
      .AWADDR(twiddle_rsc_0_0_AWADDR),
      .AWLEN(twiddle_rsc_0_0_AWLEN),
      .AWSIZE(twiddle_rsc_0_0_AWSIZE),
      .AWBURST(twiddle_rsc_0_0_AWBURST),
      .AWLOCK(twiddle_rsc_0_0_AWLOCK),
      .AWCACHE(twiddle_rsc_0_0_AWCACHE),
      .AWPROT(twiddle_rsc_0_0_AWPROT),
      .AWQOS(twiddle_rsc_0_0_AWQOS),
      .AWREGION(twiddle_rsc_0_0_AWREGION),
      .AWUSER(twiddle_rsc_0_0_AWUSER),
      .AWVALID(twiddle_rsc_0_0_AWVALID),
      .AWREADY(twiddle_rsc_0_0_AWREADY),
      .WDATA(twiddle_rsc_0_0_WDATA),
      .WSTRB(twiddle_rsc_0_0_WSTRB),
      .WLAST(twiddle_rsc_0_0_WLAST),
      .WUSER(twiddle_rsc_0_0_WUSER),
      .WVALID(twiddle_rsc_0_0_WVALID),
      .WREADY(twiddle_rsc_0_0_WREADY),
      .BID(twiddle_rsc_0_0_BID),
      .BRESP(twiddle_rsc_0_0_BRESP),
      .BUSER(twiddle_rsc_0_0_BUSER),
      .BVALID(twiddle_rsc_0_0_BVALID),
      .BREADY(twiddle_rsc_0_0_BREADY),
      .ARID(twiddle_rsc_0_0_ARID),
      .ARADDR(twiddle_rsc_0_0_ARADDR),
      .ARLEN(twiddle_rsc_0_0_ARLEN),
      .ARSIZE(twiddle_rsc_0_0_ARSIZE),
      .ARBURST(twiddle_rsc_0_0_ARBURST),
      .ARLOCK(twiddle_rsc_0_0_ARLOCK),
      .ARCACHE(twiddle_rsc_0_0_ARCACHE),
      .ARPROT(twiddle_rsc_0_0_ARPROT),
      .ARQOS(twiddle_rsc_0_0_ARQOS),
      .ARREGION(twiddle_rsc_0_0_ARREGION),
      .ARUSER(twiddle_rsc_0_0_ARUSER),
      .ARVALID(twiddle_rsc_0_0_ARVALID),
      .ARREADY(twiddle_rsc_0_0_ARREADY),
      .RID(twiddle_rsc_0_0_RID),
      .RDATA(twiddle_rsc_0_0_RDATA),
      .RRESP(twiddle_rsc_0_0_RRESP),
      .RLAST(twiddle_rsc_0_0_RLAST),
      .RUSER(twiddle_rsc_0_0_RUSER),
      .RVALID(twiddle_rsc_0_0_RVALID),
      .RREADY(twiddle_rsc_0_0_RREADY),
      .s_re(twiddle_rsc_0_0_i_s_re_core_sct),
      .s_we(1'b0),
      .s_raddr(twiddle_rsc_0_0_i_s_raddr),
      .s_waddr(6'b000000),
      .s_din(twiddle_rsc_0_0_i_s_din),
      .s_dout(32'b00000000000000000000000000000000),
      .s_rrdy(twiddle_rsc_0_0_i_s_rrdy),
      .s_wrdy(twiddle_rsc_0_0_i_s_wrdy),
      .is_idle(twiddle_rsc_0_0_is_idle),
      .tr_write_done(twiddle_rsc_0_0_tr_write_done),
      .s_tdone(twiddle_rsc_0_0_s_tdone)
    );
  peaseNTT_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_ctrl peaseNTT_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .twiddle_rsc_0_0_i_oswt(twiddle_rsc_0_0_i_oswt),
      .twiddle_rsc_0_0_i_biwt(twiddle_rsc_0_0_i_biwt),
      .twiddle_rsc_0_0_i_bdwt(twiddle_rsc_0_0_i_bdwt),
      .twiddle_rsc_0_0_i_bcwt(twiddle_rsc_0_0_i_bcwt),
      .twiddle_rsc_0_0_i_s_re_core_sct(twiddle_rsc_0_0_i_s_re_core_sct),
      .twiddle_rsc_0_0_i_s_rrdy(twiddle_rsc_0_0_i_s_rrdy)
    );
  peaseNTT_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp peaseNTT_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_0_i_oswt(twiddle_rsc_0_0_i_oswt),
      .twiddle_rsc_0_0_i_wen_comp(twiddle_rsc_0_0_i_wen_comp),
      .twiddle_rsc_0_0_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp_inst_twiddle_rsc_0_0_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_0_i_s_din_mxwt(twiddle_rsc_0_0_i_s_din_mxwt),
      .twiddle_rsc_0_0_i_biwt(twiddle_rsc_0_0_i_biwt),
      .twiddle_rsc_0_0_i_bdwt(twiddle_rsc_0_0_i_bdwt),
      .twiddle_rsc_0_0_i_bcwt(twiddle_rsc_0_0_i_bcwt),
      .twiddle_rsc_0_0_i_s_raddr(twiddle_rsc_0_0_i_s_raddr),
      .twiddle_rsc_0_0_i_s_raddr_core_sct(twiddle_rsc_0_0_i_s_re_core_sct),
      .twiddle_rsc_0_0_i_s_din(twiddle_rsc_0_0_i_s_din)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_31_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_31_i (
  clk, rst, xt_rsc_1_31_s_tdone, xt_rsc_1_31_tr_write_done, xt_rsc_1_31_RREADY, xt_rsc_1_31_RVALID,
      xt_rsc_1_31_RUSER, xt_rsc_1_31_RLAST, xt_rsc_1_31_RRESP, xt_rsc_1_31_RDATA,
      xt_rsc_1_31_RID, xt_rsc_1_31_ARREADY, xt_rsc_1_31_ARVALID, xt_rsc_1_31_ARUSER,
      xt_rsc_1_31_ARREGION, xt_rsc_1_31_ARQOS, xt_rsc_1_31_ARPROT, xt_rsc_1_31_ARCACHE,
      xt_rsc_1_31_ARLOCK, xt_rsc_1_31_ARBURST, xt_rsc_1_31_ARSIZE, xt_rsc_1_31_ARLEN,
      xt_rsc_1_31_ARADDR, xt_rsc_1_31_ARID, xt_rsc_1_31_BREADY, xt_rsc_1_31_BVALID,
      xt_rsc_1_31_BUSER, xt_rsc_1_31_BRESP, xt_rsc_1_31_BID, xt_rsc_1_31_WREADY,
      xt_rsc_1_31_WVALID, xt_rsc_1_31_WUSER, xt_rsc_1_31_WLAST, xt_rsc_1_31_WSTRB,
      xt_rsc_1_31_WDATA, xt_rsc_1_31_AWREADY, xt_rsc_1_31_AWVALID, xt_rsc_1_31_AWUSER,
      xt_rsc_1_31_AWREGION, xt_rsc_1_31_AWQOS, xt_rsc_1_31_AWPROT, xt_rsc_1_31_AWCACHE,
      xt_rsc_1_31_AWLOCK, xt_rsc_1_31_AWBURST, xt_rsc_1_31_AWSIZE, xt_rsc_1_31_AWLEN,
      xt_rsc_1_31_AWADDR, xt_rsc_1_31_AWID, core_wen, xt_rsc_1_31_i_oswt, xt_rsc_1_31_i_wen_comp,
      xt_rsc_1_31_i_oswt_1, xt_rsc_1_31_i_wen_comp_1, xt_rsc_1_31_i_s_raddr_core,
      xt_rsc_1_31_i_s_waddr_core, xt_rsc_1_31_i_s_din_mxwt, xt_rsc_1_31_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_31_s_tdone;
  input xt_rsc_1_31_tr_write_done;
  input xt_rsc_1_31_RREADY;
  output xt_rsc_1_31_RVALID;
  output xt_rsc_1_31_RUSER;
  output xt_rsc_1_31_RLAST;
  output [1:0] xt_rsc_1_31_RRESP;
  output [31:0] xt_rsc_1_31_RDATA;
  output xt_rsc_1_31_RID;
  output xt_rsc_1_31_ARREADY;
  input xt_rsc_1_31_ARVALID;
  input xt_rsc_1_31_ARUSER;
  input [3:0] xt_rsc_1_31_ARREGION;
  input [3:0] xt_rsc_1_31_ARQOS;
  input [2:0] xt_rsc_1_31_ARPROT;
  input [3:0] xt_rsc_1_31_ARCACHE;
  input xt_rsc_1_31_ARLOCK;
  input [1:0] xt_rsc_1_31_ARBURST;
  input [2:0] xt_rsc_1_31_ARSIZE;
  input [7:0] xt_rsc_1_31_ARLEN;
  input [11:0] xt_rsc_1_31_ARADDR;
  input xt_rsc_1_31_ARID;
  input xt_rsc_1_31_BREADY;
  output xt_rsc_1_31_BVALID;
  output xt_rsc_1_31_BUSER;
  output [1:0] xt_rsc_1_31_BRESP;
  output xt_rsc_1_31_BID;
  output xt_rsc_1_31_WREADY;
  input xt_rsc_1_31_WVALID;
  input xt_rsc_1_31_WUSER;
  input xt_rsc_1_31_WLAST;
  input [3:0] xt_rsc_1_31_WSTRB;
  input [31:0] xt_rsc_1_31_WDATA;
  output xt_rsc_1_31_AWREADY;
  input xt_rsc_1_31_AWVALID;
  input xt_rsc_1_31_AWUSER;
  input [3:0] xt_rsc_1_31_AWREGION;
  input [3:0] xt_rsc_1_31_AWQOS;
  input [2:0] xt_rsc_1_31_AWPROT;
  input [3:0] xt_rsc_1_31_AWCACHE;
  input xt_rsc_1_31_AWLOCK;
  input [1:0] xt_rsc_1_31_AWBURST;
  input [2:0] xt_rsc_1_31_AWSIZE;
  input [7:0] xt_rsc_1_31_AWLEN;
  input [11:0] xt_rsc_1_31_AWADDR;
  input xt_rsc_1_31_AWID;
  input core_wen;
  input xt_rsc_1_31_i_oswt;
  output xt_rsc_1_31_i_wen_comp;
  input xt_rsc_1_31_i_oswt_1;
  output xt_rsc_1_31_i_wen_comp_1;
  input [3:0] xt_rsc_1_31_i_s_raddr_core;
  input [3:0] xt_rsc_1_31_i_s_waddr_core;
  output [31:0] xt_rsc_1_31_i_s_din_mxwt;
  input [31:0] xt_rsc_1_31_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_31_i_biwt;
  wire xt_rsc_1_31_i_bdwt;
  wire xt_rsc_1_31_i_bcwt;
  wire xt_rsc_1_31_i_s_re_core_sct;
  wire xt_rsc_1_31_i_biwt_1;
  wire xt_rsc_1_31_i_bdwt_2;
  wire xt_rsc_1_31_i_bcwt_1;
  wire xt_rsc_1_31_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_31_i_s_raddr;
  wire [3:0] xt_rsc_1_31_i_s_waddr;
  wire [31:0] xt_rsc_1_31_i_s_din;
  wire [31:0] xt_rsc_1_31_i_s_dout;
  wire xt_rsc_1_31_i_s_rrdy;
  wire xt_rsc_1_31_i_s_wrdy;
  wire xt_rsc_1_31_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_31_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_31_AWID),
      .AWADDR(xt_rsc_1_31_AWADDR),
      .AWLEN(xt_rsc_1_31_AWLEN),
      .AWSIZE(xt_rsc_1_31_AWSIZE),
      .AWBURST(xt_rsc_1_31_AWBURST),
      .AWLOCK(xt_rsc_1_31_AWLOCK),
      .AWCACHE(xt_rsc_1_31_AWCACHE),
      .AWPROT(xt_rsc_1_31_AWPROT),
      .AWQOS(xt_rsc_1_31_AWQOS),
      .AWREGION(xt_rsc_1_31_AWREGION),
      .AWUSER(xt_rsc_1_31_AWUSER),
      .AWVALID(xt_rsc_1_31_AWVALID),
      .AWREADY(xt_rsc_1_31_AWREADY),
      .WDATA(xt_rsc_1_31_WDATA),
      .WSTRB(xt_rsc_1_31_WSTRB),
      .WLAST(xt_rsc_1_31_WLAST),
      .WUSER(xt_rsc_1_31_WUSER),
      .WVALID(xt_rsc_1_31_WVALID),
      .WREADY(xt_rsc_1_31_WREADY),
      .BID(xt_rsc_1_31_BID),
      .BRESP(xt_rsc_1_31_BRESP),
      .BUSER(xt_rsc_1_31_BUSER),
      .BVALID(xt_rsc_1_31_BVALID),
      .BREADY(xt_rsc_1_31_BREADY),
      .ARID(xt_rsc_1_31_ARID),
      .ARADDR(xt_rsc_1_31_ARADDR),
      .ARLEN(xt_rsc_1_31_ARLEN),
      .ARSIZE(xt_rsc_1_31_ARSIZE),
      .ARBURST(xt_rsc_1_31_ARBURST),
      .ARLOCK(xt_rsc_1_31_ARLOCK),
      .ARCACHE(xt_rsc_1_31_ARCACHE),
      .ARPROT(xt_rsc_1_31_ARPROT),
      .ARQOS(xt_rsc_1_31_ARQOS),
      .ARREGION(xt_rsc_1_31_ARREGION),
      .ARUSER(xt_rsc_1_31_ARUSER),
      .ARVALID(xt_rsc_1_31_ARVALID),
      .ARREADY(xt_rsc_1_31_ARREADY),
      .RID(xt_rsc_1_31_RID),
      .RDATA(xt_rsc_1_31_RDATA),
      .RRESP(xt_rsc_1_31_RRESP),
      .RLAST(xt_rsc_1_31_RLAST),
      .RUSER(xt_rsc_1_31_RUSER),
      .RVALID(xt_rsc_1_31_RVALID),
      .RREADY(xt_rsc_1_31_RREADY),
      .s_re(xt_rsc_1_31_i_s_re_core_sct),
      .s_we(xt_rsc_1_31_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_31_i_s_raddr),
      .s_waddr(xt_rsc_1_31_i_s_waddr),
      .s_din(xt_rsc_1_31_i_s_din),
      .s_dout(xt_rsc_1_31_i_s_dout),
      .s_rrdy(xt_rsc_1_31_i_s_rrdy),
      .s_wrdy(xt_rsc_1_31_i_s_wrdy),
      .is_idle(xt_rsc_1_31_is_idle_1),
      .tr_write_done(xt_rsc_1_31_tr_write_done),
      .s_tdone(xt_rsc_1_31_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_31_i_xt_rsc_1_31_wait_ctrl peaseNTT_core_xt_rsc_1_31_i_xt_rsc_1_31_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_31_i_oswt(xt_rsc_1_31_i_oswt),
      .xt_rsc_1_31_i_oswt_1(xt_rsc_1_31_i_oswt_1),
      .xt_rsc_1_31_i_biwt(xt_rsc_1_31_i_biwt),
      .xt_rsc_1_31_i_bdwt(xt_rsc_1_31_i_bdwt),
      .xt_rsc_1_31_i_bcwt(xt_rsc_1_31_i_bcwt),
      .xt_rsc_1_31_i_s_re_core_sct(xt_rsc_1_31_i_s_re_core_sct),
      .xt_rsc_1_31_i_biwt_1(xt_rsc_1_31_i_biwt_1),
      .xt_rsc_1_31_i_bdwt_2(xt_rsc_1_31_i_bdwt_2),
      .xt_rsc_1_31_i_bcwt_1(xt_rsc_1_31_i_bcwt_1),
      .xt_rsc_1_31_i_s_we_core_sct(xt_rsc_1_31_i_s_we_core_sct),
      .xt_rsc_1_31_i_s_rrdy(xt_rsc_1_31_i_s_rrdy),
      .xt_rsc_1_31_i_s_wrdy(xt_rsc_1_31_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_31_i_xt_rsc_1_31_wait_dp peaseNTT_core_xt_rsc_1_31_i_xt_rsc_1_31_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_31_i_oswt(xt_rsc_1_31_i_oswt),
      .xt_rsc_1_31_i_wen_comp(xt_rsc_1_31_i_wen_comp),
      .xt_rsc_1_31_i_oswt_1(xt_rsc_1_31_i_oswt_1),
      .xt_rsc_1_31_i_wen_comp_1(xt_rsc_1_31_i_wen_comp_1),
      .xt_rsc_1_31_i_s_raddr_core(xt_rsc_1_31_i_s_raddr_core),
      .xt_rsc_1_31_i_s_waddr_core(xt_rsc_1_31_i_s_waddr_core),
      .xt_rsc_1_31_i_s_din_mxwt(xt_rsc_1_31_i_s_din_mxwt),
      .xt_rsc_1_31_i_s_dout_core(xt_rsc_1_31_i_s_dout_core),
      .xt_rsc_1_31_i_biwt(xt_rsc_1_31_i_biwt),
      .xt_rsc_1_31_i_bdwt(xt_rsc_1_31_i_bdwt),
      .xt_rsc_1_31_i_bcwt(xt_rsc_1_31_i_bcwt),
      .xt_rsc_1_31_i_biwt_1(xt_rsc_1_31_i_biwt_1),
      .xt_rsc_1_31_i_bdwt_2(xt_rsc_1_31_i_bdwt_2),
      .xt_rsc_1_31_i_bcwt_1(xt_rsc_1_31_i_bcwt_1),
      .xt_rsc_1_31_i_s_raddr(xt_rsc_1_31_i_s_raddr),
      .xt_rsc_1_31_i_s_raddr_core_sct(xt_rsc_1_31_i_s_re_core_sct),
      .xt_rsc_1_31_i_s_waddr(xt_rsc_1_31_i_s_waddr),
      .xt_rsc_1_31_i_s_waddr_core_sct(xt_rsc_1_31_i_s_we_core_sct),
      .xt_rsc_1_31_i_s_din(xt_rsc_1_31_i_s_din),
      .xt_rsc_1_31_i_s_dout(xt_rsc_1_31_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_30_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_30_i (
  clk, rst, xt_rsc_1_30_s_tdone, xt_rsc_1_30_tr_write_done, xt_rsc_1_30_RREADY, xt_rsc_1_30_RVALID,
      xt_rsc_1_30_RUSER, xt_rsc_1_30_RLAST, xt_rsc_1_30_RRESP, xt_rsc_1_30_RDATA,
      xt_rsc_1_30_RID, xt_rsc_1_30_ARREADY, xt_rsc_1_30_ARVALID, xt_rsc_1_30_ARUSER,
      xt_rsc_1_30_ARREGION, xt_rsc_1_30_ARQOS, xt_rsc_1_30_ARPROT, xt_rsc_1_30_ARCACHE,
      xt_rsc_1_30_ARLOCK, xt_rsc_1_30_ARBURST, xt_rsc_1_30_ARSIZE, xt_rsc_1_30_ARLEN,
      xt_rsc_1_30_ARADDR, xt_rsc_1_30_ARID, xt_rsc_1_30_BREADY, xt_rsc_1_30_BVALID,
      xt_rsc_1_30_BUSER, xt_rsc_1_30_BRESP, xt_rsc_1_30_BID, xt_rsc_1_30_WREADY,
      xt_rsc_1_30_WVALID, xt_rsc_1_30_WUSER, xt_rsc_1_30_WLAST, xt_rsc_1_30_WSTRB,
      xt_rsc_1_30_WDATA, xt_rsc_1_30_AWREADY, xt_rsc_1_30_AWVALID, xt_rsc_1_30_AWUSER,
      xt_rsc_1_30_AWREGION, xt_rsc_1_30_AWQOS, xt_rsc_1_30_AWPROT, xt_rsc_1_30_AWCACHE,
      xt_rsc_1_30_AWLOCK, xt_rsc_1_30_AWBURST, xt_rsc_1_30_AWSIZE, xt_rsc_1_30_AWLEN,
      xt_rsc_1_30_AWADDR, xt_rsc_1_30_AWID, core_wen, xt_rsc_1_30_i_oswt, xt_rsc_1_30_i_wen_comp,
      xt_rsc_1_30_i_oswt_1, xt_rsc_1_30_i_wen_comp_1, xt_rsc_1_30_i_s_raddr_core,
      xt_rsc_1_30_i_s_waddr_core, xt_rsc_1_30_i_s_din_mxwt, xt_rsc_1_30_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_30_s_tdone;
  input xt_rsc_1_30_tr_write_done;
  input xt_rsc_1_30_RREADY;
  output xt_rsc_1_30_RVALID;
  output xt_rsc_1_30_RUSER;
  output xt_rsc_1_30_RLAST;
  output [1:0] xt_rsc_1_30_RRESP;
  output [31:0] xt_rsc_1_30_RDATA;
  output xt_rsc_1_30_RID;
  output xt_rsc_1_30_ARREADY;
  input xt_rsc_1_30_ARVALID;
  input xt_rsc_1_30_ARUSER;
  input [3:0] xt_rsc_1_30_ARREGION;
  input [3:0] xt_rsc_1_30_ARQOS;
  input [2:0] xt_rsc_1_30_ARPROT;
  input [3:0] xt_rsc_1_30_ARCACHE;
  input xt_rsc_1_30_ARLOCK;
  input [1:0] xt_rsc_1_30_ARBURST;
  input [2:0] xt_rsc_1_30_ARSIZE;
  input [7:0] xt_rsc_1_30_ARLEN;
  input [11:0] xt_rsc_1_30_ARADDR;
  input xt_rsc_1_30_ARID;
  input xt_rsc_1_30_BREADY;
  output xt_rsc_1_30_BVALID;
  output xt_rsc_1_30_BUSER;
  output [1:0] xt_rsc_1_30_BRESP;
  output xt_rsc_1_30_BID;
  output xt_rsc_1_30_WREADY;
  input xt_rsc_1_30_WVALID;
  input xt_rsc_1_30_WUSER;
  input xt_rsc_1_30_WLAST;
  input [3:0] xt_rsc_1_30_WSTRB;
  input [31:0] xt_rsc_1_30_WDATA;
  output xt_rsc_1_30_AWREADY;
  input xt_rsc_1_30_AWVALID;
  input xt_rsc_1_30_AWUSER;
  input [3:0] xt_rsc_1_30_AWREGION;
  input [3:0] xt_rsc_1_30_AWQOS;
  input [2:0] xt_rsc_1_30_AWPROT;
  input [3:0] xt_rsc_1_30_AWCACHE;
  input xt_rsc_1_30_AWLOCK;
  input [1:0] xt_rsc_1_30_AWBURST;
  input [2:0] xt_rsc_1_30_AWSIZE;
  input [7:0] xt_rsc_1_30_AWLEN;
  input [11:0] xt_rsc_1_30_AWADDR;
  input xt_rsc_1_30_AWID;
  input core_wen;
  input xt_rsc_1_30_i_oswt;
  output xt_rsc_1_30_i_wen_comp;
  input xt_rsc_1_30_i_oswt_1;
  output xt_rsc_1_30_i_wen_comp_1;
  input [3:0] xt_rsc_1_30_i_s_raddr_core;
  input [3:0] xt_rsc_1_30_i_s_waddr_core;
  output [31:0] xt_rsc_1_30_i_s_din_mxwt;
  input [31:0] xt_rsc_1_30_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_30_i_biwt;
  wire xt_rsc_1_30_i_bdwt;
  wire xt_rsc_1_30_i_bcwt;
  wire xt_rsc_1_30_i_s_re_core_sct;
  wire xt_rsc_1_30_i_biwt_1;
  wire xt_rsc_1_30_i_bdwt_2;
  wire xt_rsc_1_30_i_bcwt_1;
  wire xt_rsc_1_30_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_30_i_s_raddr;
  wire [3:0] xt_rsc_1_30_i_s_waddr;
  wire [31:0] xt_rsc_1_30_i_s_din;
  wire [31:0] xt_rsc_1_30_i_s_dout;
  wire xt_rsc_1_30_i_s_rrdy;
  wire xt_rsc_1_30_i_s_wrdy;
  wire xt_rsc_1_30_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_30_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_30_AWID),
      .AWADDR(xt_rsc_1_30_AWADDR),
      .AWLEN(xt_rsc_1_30_AWLEN),
      .AWSIZE(xt_rsc_1_30_AWSIZE),
      .AWBURST(xt_rsc_1_30_AWBURST),
      .AWLOCK(xt_rsc_1_30_AWLOCK),
      .AWCACHE(xt_rsc_1_30_AWCACHE),
      .AWPROT(xt_rsc_1_30_AWPROT),
      .AWQOS(xt_rsc_1_30_AWQOS),
      .AWREGION(xt_rsc_1_30_AWREGION),
      .AWUSER(xt_rsc_1_30_AWUSER),
      .AWVALID(xt_rsc_1_30_AWVALID),
      .AWREADY(xt_rsc_1_30_AWREADY),
      .WDATA(xt_rsc_1_30_WDATA),
      .WSTRB(xt_rsc_1_30_WSTRB),
      .WLAST(xt_rsc_1_30_WLAST),
      .WUSER(xt_rsc_1_30_WUSER),
      .WVALID(xt_rsc_1_30_WVALID),
      .WREADY(xt_rsc_1_30_WREADY),
      .BID(xt_rsc_1_30_BID),
      .BRESP(xt_rsc_1_30_BRESP),
      .BUSER(xt_rsc_1_30_BUSER),
      .BVALID(xt_rsc_1_30_BVALID),
      .BREADY(xt_rsc_1_30_BREADY),
      .ARID(xt_rsc_1_30_ARID),
      .ARADDR(xt_rsc_1_30_ARADDR),
      .ARLEN(xt_rsc_1_30_ARLEN),
      .ARSIZE(xt_rsc_1_30_ARSIZE),
      .ARBURST(xt_rsc_1_30_ARBURST),
      .ARLOCK(xt_rsc_1_30_ARLOCK),
      .ARCACHE(xt_rsc_1_30_ARCACHE),
      .ARPROT(xt_rsc_1_30_ARPROT),
      .ARQOS(xt_rsc_1_30_ARQOS),
      .ARREGION(xt_rsc_1_30_ARREGION),
      .ARUSER(xt_rsc_1_30_ARUSER),
      .ARVALID(xt_rsc_1_30_ARVALID),
      .ARREADY(xt_rsc_1_30_ARREADY),
      .RID(xt_rsc_1_30_RID),
      .RDATA(xt_rsc_1_30_RDATA),
      .RRESP(xt_rsc_1_30_RRESP),
      .RLAST(xt_rsc_1_30_RLAST),
      .RUSER(xt_rsc_1_30_RUSER),
      .RVALID(xt_rsc_1_30_RVALID),
      .RREADY(xt_rsc_1_30_RREADY),
      .s_re(xt_rsc_1_30_i_s_re_core_sct),
      .s_we(xt_rsc_1_30_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_30_i_s_raddr),
      .s_waddr(xt_rsc_1_30_i_s_waddr),
      .s_din(xt_rsc_1_30_i_s_din),
      .s_dout(xt_rsc_1_30_i_s_dout),
      .s_rrdy(xt_rsc_1_30_i_s_rrdy),
      .s_wrdy(xt_rsc_1_30_i_s_wrdy),
      .is_idle(xt_rsc_1_30_is_idle_1),
      .tr_write_done(xt_rsc_1_30_tr_write_done),
      .s_tdone(xt_rsc_1_30_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_30_i_xt_rsc_1_30_wait_ctrl peaseNTT_core_xt_rsc_1_30_i_xt_rsc_1_30_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_30_i_oswt(xt_rsc_1_30_i_oswt),
      .xt_rsc_1_30_i_oswt_1(xt_rsc_1_30_i_oswt_1),
      .xt_rsc_1_30_i_biwt(xt_rsc_1_30_i_biwt),
      .xt_rsc_1_30_i_bdwt(xt_rsc_1_30_i_bdwt),
      .xt_rsc_1_30_i_bcwt(xt_rsc_1_30_i_bcwt),
      .xt_rsc_1_30_i_s_re_core_sct(xt_rsc_1_30_i_s_re_core_sct),
      .xt_rsc_1_30_i_biwt_1(xt_rsc_1_30_i_biwt_1),
      .xt_rsc_1_30_i_bdwt_2(xt_rsc_1_30_i_bdwt_2),
      .xt_rsc_1_30_i_bcwt_1(xt_rsc_1_30_i_bcwt_1),
      .xt_rsc_1_30_i_s_we_core_sct(xt_rsc_1_30_i_s_we_core_sct),
      .xt_rsc_1_30_i_s_rrdy(xt_rsc_1_30_i_s_rrdy),
      .xt_rsc_1_30_i_s_wrdy(xt_rsc_1_30_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_30_i_xt_rsc_1_30_wait_dp peaseNTT_core_xt_rsc_1_30_i_xt_rsc_1_30_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_30_i_oswt(xt_rsc_1_30_i_oswt),
      .xt_rsc_1_30_i_wen_comp(xt_rsc_1_30_i_wen_comp),
      .xt_rsc_1_30_i_oswt_1(xt_rsc_1_30_i_oswt_1),
      .xt_rsc_1_30_i_wen_comp_1(xt_rsc_1_30_i_wen_comp_1),
      .xt_rsc_1_30_i_s_raddr_core(xt_rsc_1_30_i_s_raddr_core),
      .xt_rsc_1_30_i_s_waddr_core(xt_rsc_1_30_i_s_waddr_core),
      .xt_rsc_1_30_i_s_din_mxwt(xt_rsc_1_30_i_s_din_mxwt),
      .xt_rsc_1_30_i_s_dout_core(xt_rsc_1_30_i_s_dout_core),
      .xt_rsc_1_30_i_biwt(xt_rsc_1_30_i_biwt),
      .xt_rsc_1_30_i_bdwt(xt_rsc_1_30_i_bdwt),
      .xt_rsc_1_30_i_bcwt(xt_rsc_1_30_i_bcwt),
      .xt_rsc_1_30_i_biwt_1(xt_rsc_1_30_i_biwt_1),
      .xt_rsc_1_30_i_bdwt_2(xt_rsc_1_30_i_bdwt_2),
      .xt_rsc_1_30_i_bcwt_1(xt_rsc_1_30_i_bcwt_1),
      .xt_rsc_1_30_i_s_raddr(xt_rsc_1_30_i_s_raddr),
      .xt_rsc_1_30_i_s_raddr_core_sct(xt_rsc_1_30_i_s_re_core_sct),
      .xt_rsc_1_30_i_s_waddr(xt_rsc_1_30_i_s_waddr),
      .xt_rsc_1_30_i_s_waddr_core_sct(xt_rsc_1_30_i_s_we_core_sct),
      .xt_rsc_1_30_i_s_din(xt_rsc_1_30_i_s_din),
      .xt_rsc_1_30_i_s_dout(xt_rsc_1_30_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_29_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_29_i (
  clk, rst, xt_rsc_1_29_s_tdone, xt_rsc_1_29_tr_write_done, xt_rsc_1_29_RREADY, xt_rsc_1_29_RVALID,
      xt_rsc_1_29_RUSER, xt_rsc_1_29_RLAST, xt_rsc_1_29_RRESP, xt_rsc_1_29_RDATA,
      xt_rsc_1_29_RID, xt_rsc_1_29_ARREADY, xt_rsc_1_29_ARVALID, xt_rsc_1_29_ARUSER,
      xt_rsc_1_29_ARREGION, xt_rsc_1_29_ARQOS, xt_rsc_1_29_ARPROT, xt_rsc_1_29_ARCACHE,
      xt_rsc_1_29_ARLOCK, xt_rsc_1_29_ARBURST, xt_rsc_1_29_ARSIZE, xt_rsc_1_29_ARLEN,
      xt_rsc_1_29_ARADDR, xt_rsc_1_29_ARID, xt_rsc_1_29_BREADY, xt_rsc_1_29_BVALID,
      xt_rsc_1_29_BUSER, xt_rsc_1_29_BRESP, xt_rsc_1_29_BID, xt_rsc_1_29_WREADY,
      xt_rsc_1_29_WVALID, xt_rsc_1_29_WUSER, xt_rsc_1_29_WLAST, xt_rsc_1_29_WSTRB,
      xt_rsc_1_29_WDATA, xt_rsc_1_29_AWREADY, xt_rsc_1_29_AWVALID, xt_rsc_1_29_AWUSER,
      xt_rsc_1_29_AWREGION, xt_rsc_1_29_AWQOS, xt_rsc_1_29_AWPROT, xt_rsc_1_29_AWCACHE,
      xt_rsc_1_29_AWLOCK, xt_rsc_1_29_AWBURST, xt_rsc_1_29_AWSIZE, xt_rsc_1_29_AWLEN,
      xt_rsc_1_29_AWADDR, xt_rsc_1_29_AWID, core_wen, xt_rsc_1_29_i_oswt, xt_rsc_1_29_i_wen_comp,
      xt_rsc_1_29_i_oswt_1, xt_rsc_1_29_i_wen_comp_1, xt_rsc_1_29_i_s_raddr_core,
      xt_rsc_1_29_i_s_waddr_core, xt_rsc_1_29_i_s_din_mxwt, xt_rsc_1_29_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_29_s_tdone;
  input xt_rsc_1_29_tr_write_done;
  input xt_rsc_1_29_RREADY;
  output xt_rsc_1_29_RVALID;
  output xt_rsc_1_29_RUSER;
  output xt_rsc_1_29_RLAST;
  output [1:0] xt_rsc_1_29_RRESP;
  output [31:0] xt_rsc_1_29_RDATA;
  output xt_rsc_1_29_RID;
  output xt_rsc_1_29_ARREADY;
  input xt_rsc_1_29_ARVALID;
  input xt_rsc_1_29_ARUSER;
  input [3:0] xt_rsc_1_29_ARREGION;
  input [3:0] xt_rsc_1_29_ARQOS;
  input [2:0] xt_rsc_1_29_ARPROT;
  input [3:0] xt_rsc_1_29_ARCACHE;
  input xt_rsc_1_29_ARLOCK;
  input [1:0] xt_rsc_1_29_ARBURST;
  input [2:0] xt_rsc_1_29_ARSIZE;
  input [7:0] xt_rsc_1_29_ARLEN;
  input [11:0] xt_rsc_1_29_ARADDR;
  input xt_rsc_1_29_ARID;
  input xt_rsc_1_29_BREADY;
  output xt_rsc_1_29_BVALID;
  output xt_rsc_1_29_BUSER;
  output [1:0] xt_rsc_1_29_BRESP;
  output xt_rsc_1_29_BID;
  output xt_rsc_1_29_WREADY;
  input xt_rsc_1_29_WVALID;
  input xt_rsc_1_29_WUSER;
  input xt_rsc_1_29_WLAST;
  input [3:0] xt_rsc_1_29_WSTRB;
  input [31:0] xt_rsc_1_29_WDATA;
  output xt_rsc_1_29_AWREADY;
  input xt_rsc_1_29_AWVALID;
  input xt_rsc_1_29_AWUSER;
  input [3:0] xt_rsc_1_29_AWREGION;
  input [3:0] xt_rsc_1_29_AWQOS;
  input [2:0] xt_rsc_1_29_AWPROT;
  input [3:0] xt_rsc_1_29_AWCACHE;
  input xt_rsc_1_29_AWLOCK;
  input [1:0] xt_rsc_1_29_AWBURST;
  input [2:0] xt_rsc_1_29_AWSIZE;
  input [7:0] xt_rsc_1_29_AWLEN;
  input [11:0] xt_rsc_1_29_AWADDR;
  input xt_rsc_1_29_AWID;
  input core_wen;
  input xt_rsc_1_29_i_oswt;
  output xt_rsc_1_29_i_wen_comp;
  input xt_rsc_1_29_i_oswt_1;
  output xt_rsc_1_29_i_wen_comp_1;
  input [3:0] xt_rsc_1_29_i_s_raddr_core;
  input [3:0] xt_rsc_1_29_i_s_waddr_core;
  output [31:0] xt_rsc_1_29_i_s_din_mxwt;
  input [31:0] xt_rsc_1_29_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_29_i_biwt;
  wire xt_rsc_1_29_i_bdwt;
  wire xt_rsc_1_29_i_bcwt;
  wire xt_rsc_1_29_i_s_re_core_sct;
  wire xt_rsc_1_29_i_biwt_1;
  wire xt_rsc_1_29_i_bdwt_2;
  wire xt_rsc_1_29_i_bcwt_1;
  wire xt_rsc_1_29_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_29_i_s_raddr;
  wire [3:0] xt_rsc_1_29_i_s_waddr;
  wire [31:0] xt_rsc_1_29_i_s_din;
  wire [31:0] xt_rsc_1_29_i_s_dout;
  wire xt_rsc_1_29_i_s_rrdy;
  wire xt_rsc_1_29_i_s_wrdy;
  wire xt_rsc_1_29_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_29_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_29_AWID),
      .AWADDR(xt_rsc_1_29_AWADDR),
      .AWLEN(xt_rsc_1_29_AWLEN),
      .AWSIZE(xt_rsc_1_29_AWSIZE),
      .AWBURST(xt_rsc_1_29_AWBURST),
      .AWLOCK(xt_rsc_1_29_AWLOCK),
      .AWCACHE(xt_rsc_1_29_AWCACHE),
      .AWPROT(xt_rsc_1_29_AWPROT),
      .AWQOS(xt_rsc_1_29_AWQOS),
      .AWREGION(xt_rsc_1_29_AWREGION),
      .AWUSER(xt_rsc_1_29_AWUSER),
      .AWVALID(xt_rsc_1_29_AWVALID),
      .AWREADY(xt_rsc_1_29_AWREADY),
      .WDATA(xt_rsc_1_29_WDATA),
      .WSTRB(xt_rsc_1_29_WSTRB),
      .WLAST(xt_rsc_1_29_WLAST),
      .WUSER(xt_rsc_1_29_WUSER),
      .WVALID(xt_rsc_1_29_WVALID),
      .WREADY(xt_rsc_1_29_WREADY),
      .BID(xt_rsc_1_29_BID),
      .BRESP(xt_rsc_1_29_BRESP),
      .BUSER(xt_rsc_1_29_BUSER),
      .BVALID(xt_rsc_1_29_BVALID),
      .BREADY(xt_rsc_1_29_BREADY),
      .ARID(xt_rsc_1_29_ARID),
      .ARADDR(xt_rsc_1_29_ARADDR),
      .ARLEN(xt_rsc_1_29_ARLEN),
      .ARSIZE(xt_rsc_1_29_ARSIZE),
      .ARBURST(xt_rsc_1_29_ARBURST),
      .ARLOCK(xt_rsc_1_29_ARLOCK),
      .ARCACHE(xt_rsc_1_29_ARCACHE),
      .ARPROT(xt_rsc_1_29_ARPROT),
      .ARQOS(xt_rsc_1_29_ARQOS),
      .ARREGION(xt_rsc_1_29_ARREGION),
      .ARUSER(xt_rsc_1_29_ARUSER),
      .ARVALID(xt_rsc_1_29_ARVALID),
      .ARREADY(xt_rsc_1_29_ARREADY),
      .RID(xt_rsc_1_29_RID),
      .RDATA(xt_rsc_1_29_RDATA),
      .RRESP(xt_rsc_1_29_RRESP),
      .RLAST(xt_rsc_1_29_RLAST),
      .RUSER(xt_rsc_1_29_RUSER),
      .RVALID(xt_rsc_1_29_RVALID),
      .RREADY(xt_rsc_1_29_RREADY),
      .s_re(xt_rsc_1_29_i_s_re_core_sct),
      .s_we(xt_rsc_1_29_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_29_i_s_raddr),
      .s_waddr(xt_rsc_1_29_i_s_waddr),
      .s_din(xt_rsc_1_29_i_s_din),
      .s_dout(xt_rsc_1_29_i_s_dout),
      .s_rrdy(xt_rsc_1_29_i_s_rrdy),
      .s_wrdy(xt_rsc_1_29_i_s_wrdy),
      .is_idle(xt_rsc_1_29_is_idle_1),
      .tr_write_done(xt_rsc_1_29_tr_write_done),
      .s_tdone(xt_rsc_1_29_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_29_i_xt_rsc_1_29_wait_ctrl peaseNTT_core_xt_rsc_1_29_i_xt_rsc_1_29_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_29_i_oswt(xt_rsc_1_29_i_oswt),
      .xt_rsc_1_29_i_oswt_1(xt_rsc_1_29_i_oswt_1),
      .xt_rsc_1_29_i_biwt(xt_rsc_1_29_i_biwt),
      .xt_rsc_1_29_i_bdwt(xt_rsc_1_29_i_bdwt),
      .xt_rsc_1_29_i_bcwt(xt_rsc_1_29_i_bcwt),
      .xt_rsc_1_29_i_s_re_core_sct(xt_rsc_1_29_i_s_re_core_sct),
      .xt_rsc_1_29_i_biwt_1(xt_rsc_1_29_i_biwt_1),
      .xt_rsc_1_29_i_bdwt_2(xt_rsc_1_29_i_bdwt_2),
      .xt_rsc_1_29_i_bcwt_1(xt_rsc_1_29_i_bcwt_1),
      .xt_rsc_1_29_i_s_we_core_sct(xt_rsc_1_29_i_s_we_core_sct),
      .xt_rsc_1_29_i_s_rrdy(xt_rsc_1_29_i_s_rrdy),
      .xt_rsc_1_29_i_s_wrdy(xt_rsc_1_29_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_29_i_xt_rsc_1_29_wait_dp peaseNTT_core_xt_rsc_1_29_i_xt_rsc_1_29_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_29_i_oswt(xt_rsc_1_29_i_oswt),
      .xt_rsc_1_29_i_wen_comp(xt_rsc_1_29_i_wen_comp),
      .xt_rsc_1_29_i_oswt_1(xt_rsc_1_29_i_oswt_1),
      .xt_rsc_1_29_i_wen_comp_1(xt_rsc_1_29_i_wen_comp_1),
      .xt_rsc_1_29_i_s_raddr_core(xt_rsc_1_29_i_s_raddr_core),
      .xt_rsc_1_29_i_s_waddr_core(xt_rsc_1_29_i_s_waddr_core),
      .xt_rsc_1_29_i_s_din_mxwt(xt_rsc_1_29_i_s_din_mxwt),
      .xt_rsc_1_29_i_s_dout_core(xt_rsc_1_29_i_s_dout_core),
      .xt_rsc_1_29_i_biwt(xt_rsc_1_29_i_biwt),
      .xt_rsc_1_29_i_bdwt(xt_rsc_1_29_i_bdwt),
      .xt_rsc_1_29_i_bcwt(xt_rsc_1_29_i_bcwt),
      .xt_rsc_1_29_i_biwt_1(xt_rsc_1_29_i_biwt_1),
      .xt_rsc_1_29_i_bdwt_2(xt_rsc_1_29_i_bdwt_2),
      .xt_rsc_1_29_i_bcwt_1(xt_rsc_1_29_i_bcwt_1),
      .xt_rsc_1_29_i_s_raddr(xt_rsc_1_29_i_s_raddr),
      .xt_rsc_1_29_i_s_raddr_core_sct(xt_rsc_1_29_i_s_re_core_sct),
      .xt_rsc_1_29_i_s_waddr(xt_rsc_1_29_i_s_waddr),
      .xt_rsc_1_29_i_s_waddr_core_sct(xt_rsc_1_29_i_s_we_core_sct),
      .xt_rsc_1_29_i_s_din(xt_rsc_1_29_i_s_din),
      .xt_rsc_1_29_i_s_dout(xt_rsc_1_29_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_28_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_28_i (
  clk, rst, xt_rsc_1_28_s_tdone, xt_rsc_1_28_tr_write_done, xt_rsc_1_28_RREADY, xt_rsc_1_28_RVALID,
      xt_rsc_1_28_RUSER, xt_rsc_1_28_RLAST, xt_rsc_1_28_RRESP, xt_rsc_1_28_RDATA,
      xt_rsc_1_28_RID, xt_rsc_1_28_ARREADY, xt_rsc_1_28_ARVALID, xt_rsc_1_28_ARUSER,
      xt_rsc_1_28_ARREGION, xt_rsc_1_28_ARQOS, xt_rsc_1_28_ARPROT, xt_rsc_1_28_ARCACHE,
      xt_rsc_1_28_ARLOCK, xt_rsc_1_28_ARBURST, xt_rsc_1_28_ARSIZE, xt_rsc_1_28_ARLEN,
      xt_rsc_1_28_ARADDR, xt_rsc_1_28_ARID, xt_rsc_1_28_BREADY, xt_rsc_1_28_BVALID,
      xt_rsc_1_28_BUSER, xt_rsc_1_28_BRESP, xt_rsc_1_28_BID, xt_rsc_1_28_WREADY,
      xt_rsc_1_28_WVALID, xt_rsc_1_28_WUSER, xt_rsc_1_28_WLAST, xt_rsc_1_28_WSTRB,
      xt_rsc_1_28_WDATA, xt_rsc_1_28_AWREADY, xt_rsc_1_28_AWVALID, xt_rsc_1_28_AWUSER,
      xt_rsc_1_28_AWREGION, xt_rsc_1_28_AWQOS, xt_rsc_1_28_AWPROT, xt_rsc_1_28_AWCACHE,
      xt_rsc_1_28_AWLOCK, xt_rsc_1_28_AWBURST, xt_rsc_1_28_AWSIZE, xt_rsc_1_28_AWLEN,
      xt_rsc_1_28_AWADDR, xt_rsc_1_28_AWID, core_wen, xt_rsc_1_28_i_oswt, xt_rsc_1_28_i_wen_comp,
      xt_rsc_1_28_i_oswt_1, xt_rsc_1_28_i_wen_comp_1, xt_rsc_1_28_i_s_raddr_core,
      xt_rsc_1_28_i_s_waddr_core, xt_rsc_1_28_i_s_din_mxwt, xt_rsc_1_28_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_28_s_tdone;
  input xt_rsc_1_28_tr_write_done;
  input xt_rsc_1_28_RREADY;
  output xt_rsc_1_28_RVALID;
  output xt_rsc_1_28_RUSER;
  output xt_rsc_1_28_RLAST;
  output [1:0] xt_rsc_1_28_RRESP;
  output [31:0] xt_rsc_1_28_RDATA;
  output xt_rsc_1_28_RID;
  output xt_rsc_1_28_ARREADY;
  input xt_rsc_1_28_ARVALID;
  input xt_rsc_1_28_ARUSER;
  input [3:0] xt_rsc_1_28_ARREGION;
  input [3:0] xt_rsc_1_28_ARQOS;
  input [2:0] xt_rsc_1_28_ARPROT;
  input [3:0] xt_rsc_1_28_ARCACHE;
  input xt_rsc_1_28_ARLOCK;
  input [1:0] xt_rsc_1_28_ARBURST;
  input [2:0] xt_rsc_1_28_ARSIZE;
  input [7:0] xt_rsc_1_28_ARLEN;
  input [11:0] xt_rsc_1_28_ARADDR;
  input xt_rsc_1_28_ARID;
  input xt_rsc_1_28_BREADY;
  output xt_rsc_1_28_BVALID;
  output xt_rsc_1_28_BUSER;
  output [1:0] xt_rsc_1_28_BRESP;
  output xt_rsc_1_28_BID;
  output xt_rsc_1_28_WREADY;
  input xt_rsc_1_28_WVALID;
  input xt_rsc_1_28_WUSER;
  input xt_rsc_1_28_WLAST;
  input [3:0] xt_rsc_1_28_WSTRB;
  input [31:0] xt_rsc_1_28_WDATA;
  output xt_rsc_1_28_AWREADY;
  input xt_rsc_1_28_AWVALID;
  input xt_rsc_1_28_AWUSER;
  input [3:0] xt_rsc_1_28_AWREGION;
  input [3:0] xt_rsc_1_28_AWQOS;
  input [2:0] xt_rsc_1_28_AWPROT;
  input [3:0] xt_rsc_1_28_AWCACHE;
  input xt_rsc_1_28_AWLOCK;
  input [1:0] xt_rsc_1_28_AWBURST;
  input [2:0] xt_rsc_1_28_AWSIZE;
  input [7:0] xt_rsc_1_28_AWLEN;
  input [11:0] xt_rsc_1_28_AWADDR;
  input xt_rsc_1_28_AWID;
  input core_wen;
  input xt_rsc_1_28_i_oswt;
  output xt_rsc_1_28_i_wen_comp;
  input xt_rsc_1_28_i_oswt_1;
  output xt_rsc_1_28_i_wen_comp_1;
  input [3:0] xt_rsc_1_28_i_s_raddr_core;
  input [3:0] xt_rsc_1_28_i_s_waddr_core;
  output [31:0] xt_rsc_1_28_i_s_din_mxwt;
  input [31:0] xt_rsc_1_28_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_28_i_biwt;
  wire xt_rsc_1_28_i_bdwt;
  wire xt_rsc_1_28_i_bcwt;
  wire xt_rsc_1_28_i_s_re_core_sct;
  wire xt_rsc_1_28_i_biwt_1;
  wire xt_rsc_1_28_i_bdwt_2;
  wire xt_rsc_1_28_i_bcwt_1;
  wire xt_rsc_1_28_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_28_i_s_raddr;
  wire [3:0] xt_rsc_1_28_i_s_waddr;
  wire [31:0] xt_rsc_1_28_i_s_din;
  wire [31:0] xt_rsc_1_28_i_s_dout;
  wire xt_rsc_1_28_i_s_rrdy;
  wire xt_rsc_1_28_i_s_wrdy;
  wire xt_rsc_1_28_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_28_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_28_AWID),
      .AWADDR(xt_rsc_1_28_AWADDR),
      .AWLEN(xt_rsc_1_28_AWLEN),
      .AWSIZE(xt_rsc_1_28_AWSIZE),
      .AWBURST(xt_rsc_1_28_AWBURST),
      .AWLOCK(xt_rsc_1_28_AWLOCK),
      .AWCACHE(xt_rsc_1_28_AWCACHE),
      .AWPROT(xt_rsc_1_28_AWPROT),
      .AWQOS(xt_rsc_1_28_AWQOS),
      .AWREGION(xt_rsc_1_28_AWREGION),
      .AWUSER(xt_rsc_1_28_AWUSER),
      .AWVALID(xt_rsc_1_28_AWVALID),
      .AWREADY(xt_rsc_1_28_AWREADY),
      .WDATA(xt_rsc_1_28_WDATA),
      .WSTRB(xt_rsc_1_28_WSTRB),
      .WLAST(xt_rsc_1_28_WLAST),
      .WUSER(xt_rsc_1_28_WUSER),
      .WVALID(xt_rsc_1_28_WVALID),
      .WREADY(xt_rsc_1_28_WREADY),
      .BID(xt_rsc_1_28_BID),
      .BRESP(xt_rsc_1_28_BRESP),
      .BUSER(xt_rsc_1_28_BUSER),
      .BVALID(xt_rsc_1_28_BVALID),
      .BREADY(xt_rsc_1_28_BREADY),
      .ARID(xt_rsc_1_28_ARID),
      .ARADDR(xt_rsc_1_28_ARADDR),
      .ARLEN(xt_rsc_1_28_ARLEN),
      .ARSIZE(xt_rsc_1_28_ARSIZE),
      .ARBURST(xt_rsc_1_28_ARBURST),
      .ARLOCK(xt_rsc_1_28_ARLOCK),
      .ARCACHE(xt_rsc_1_28_ARCACHE),
      .ARPROT(xt_rsc_1_28_ARPROT),
      .ARQOS(xt_rsc_1_28_ARQOS),
      .ARREGION(xt_rsc_1_28_ARREGION),
      .ARUSER(xt_rsc_1_28_ARUSER),
      .ARVALID(xt_rsc_1_28_ARVALID),
      .ARREADY(xt_rsc_1_28_ARREADY),
      .RID(xt_rsc_1_28_RID),
      .RDATA(xt_rsc_1_28_RDATA),
      .RRESP(xt_rsc_1_28_RRESP),
      .RLAST(xt_rsc_1_28_RLAST),
      .RUSER(xt_rsc_1_28_RUSER),
      .RVALID(xt_rsc_1_28_RVALID),
      .RREADY(xt_rsc_1_28_RREADY),
      .s_re(xt_rsc_1_28_i_s_re_core_sct),
      .s_we(xt_rsc_1_28_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_28_i_s_raddr),
      .s_waddr(xt_rsc_1_28_i_s_waddr),
      .s_din(xt_rsc_1_28_i_s_din),
      .s_dout(xt_rsc_1_28_i_s_dout),
      .s_rrdy(xt_rsc_1_28_i_s_rrdy),
      .s_wrdy(xt_rsc_1_28_i_s_wrdy),
      .is_idle(xt_rsc_1_28_is_idle_1),
      .tr_write_done(xt_rsc_1_28_tr_write_done),
      .s_tdone(xt_rsc_1_28_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_28_i_xt_rsc_1_28_wait_ctrl peaseNTT_core_xt_rsc_1_28_i_xt_rsc_1_28_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_28_i_oswt(xt_rsc_1_28_i_oswt),
      .xt_rsc_1_28_i_oswt_1(xt_rsc_1_28_i_oswt_1),
      .xt_rsc_1_28_i_biwt(xt_rsc_1_28_i_biwt),
      .xt_rsc_1_28_i_bdwt(xt_rsc_1_28_i_bdwt),
      .xt_rsc_1_28_i_bcwt(xt_rsc_1_28_i_bcwt),
      .xt_rsc_1_28_i_s_re_core_sct(xt_rsc_1_28_i_s_re_core_sct),
      .xt_rsc_1_28_i_biwt_1(xt_rsc_1_28_i_biwt_1),
      .xt_rsc_1_28_i_bdwt_2(xt_rsc_1_28_i_bdwt_2),
      .xt_rsc_1_28_i_bcwt_1(xt_rsc_1_28_i_bcwt_1),
      .xt_rsc_1_28_i_s_we_core_sct(xt_rsc_1_28_i_s_we_core_sct),
      .xt_rsc_1_28_i_s_rrdy(xt_rsc_1_28_i_s_rrdy),
      .xt_rsc_1_28_i_s_wrdy(xt_rsc_1_28_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_28_i_xt_rsc_1_28_wait_dp peaseNTT_core_xt_rsc_1_28_i_xt_rsc_1_28_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_28_i_oswt(xt_rsc_1_28_i_oswt),
      .xt_rsc_1_28_i_wen_comp(xt_rsc_1_28_i_wen_comp),
      .xt_rsc_1_28_i_oswt_1(xt_rsc_1_28_i_oswt_1),
      .xt_rsc_1_28_i_wen_comp_1(xt_rsc_1_28_i_wen_comp_1),
      .xt_rsc_1_28_i_s_raddr_core(xt_rsc_1_28_i_s_raddr_core),
      .xt_rsc_1_28_i_s_waddr_core(xt_rsc_1_28_i_s_waddr_core),
      .xt_rsc_1_28_i_s_din_mxwt(xt_rsc_1_28_i_s_din_mxwt),
      .xt_rsc_1_28_i_s_dout_core(xt_rsc_1_28_i_s_dout_core),
      .xt_rsc_1_28_i_biwt(xt_rsc_1_28_i_biwt),
      .xt_rsc_1_28_i_bdwt(xt_rsc_1_28_i_bdwt),
      .xt_rsc_1_28_i_bcwt(xt_rsc_1_28_i_bcwt),
      .xt_rsc_1_28_i_biwt_1(xt_rsc_1_28_i_biwt_1),
      .xt_rsc_1_28_i_bdwt_2(xt_rsc_1_28_i_bdwt_2),
      .xt_rsc_1_28_i_bcwt_1(xt_rsc_1_28_i_bcwt_1),
      .xt_rsc_1_28_i_s_raddr(xt_rsc_1_28_i_s_raddr),
      .xt_rsc_1_28_i_s_raddr_core_sct(xt_rsc_1_28_i_s_re_core_sct),
      .xt_rsc_1_28_i_s_waddr(xt_rsc_1_28_i_s_waddr),
      .xt_rsc_1_28_i_s_waddr_core_sct(xt_rsc_1_28_i_s_we_core_sct),
      .xt_rsc_1_28_i_s_din(xt_rsc_1_28_i_s_din),
      .xt_rsc_1_28_i_s_dout(xt_rsc_1_28_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_27_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_27_i (
  clk, rst, xt_rsc_1_27_s_tdone, xt_rsc_1_27_tr_write_done, xt_rsc_1_27_RREADY, xt_rsc_1_27_RVALID,
      xt_rsc_1_27_RUSER, xt_rsc_1_27_RLAST, xt_rsc_1_27_RRESP, xt_rsc_1_27_RDATA,
      xt_rsc_1_27_RID, xt_rsc_1_27_ARREADY, xt_rsc_1_27_ARVALID, xt_rsc_1_27_ARUSER,
      xt_rsc_1_27_ARREGION, xt_rsc_1_27_ARQOS, xt_rsc_1_27_ARPROT, xt_rsc_1_27_ARCACHE,
      xt_rsc_1_27_ARLOCK, xt_rsc_1_27_ARBURST, xt_rsc_1_27_ARSIZE, xt_rsc_1_27_ARLEN,
      xt_rsc_1_27_ARADDR, xt_rsc_1_27_ARID, xt_rsc_1_27_BREADY, xt_rsc_1_27_BVALID,
      xt_rsc_1_27_BUSER, xt_rsc_1_27_BRESP, xt_rsc_1_27_BID, xt_rsc_1_27_WREADY,
      xt_rsc_1_27_WVALID, xt_rsc_1_27_WUSER, xt_rsc_1_27_WLAST, xt_rsc_1_27_WSTRB,
      xt_rsc_1_27_WDATA, xt_rsc_1_27_AWREADY, xt_rsc_1_27_AWVALID, xt_rsc_1_27_AWUSER,
      xt_rsc_1_27_AWREGION, xt_rsc_1_27_AWQOS, xt_rsc_1_27_AWPROT, xt_rsc_1_27_AWCACHE,
      xt_rsc_1_27_AWLOCK, xt_rsc_1_27_AWBURST, xt_rsc_1_27_AWSIZE, xt_rsc_1_27_AWLEN,
      xt_rsc_1_27_AWADDR, xt_rsc_1_27_AWID, core_wen, xt_rsc_1_27_i_oswt, xt_rsc_1_27_i_wen_comp,
      xt_rsc_1_27_i_oswt_1, xt_rsc_1_27_i_wen_comp_1, xt_rsc_1_27_i_s_raddr_core,
      xt_rsc_1_27_i_s_waddr_core, xt_rsc_1_27_i_s_din_mxwt, xt_rsc_1_27_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_27_s_tdone;
  input xt_rsc_1_27_tr_write_done;
  input xt_rsc_1_27_RREADY;
  output xt_rsc_1_27_RVALID;
  output xt_rsc_1_27_RUSER;
  output xt_rsc_1_27_RLAST;
  output [1:0] xt_rsc_1_27_RRESP;
  output [31:0] xt_rsc_1_27_RDATA;
  output xt_rsc_1_27_RID;
  output xt_rsc_1_27_ARREADY;
  input xt_rsc_1_27_ARVALID;
  input xt_rsc_1_27_ARUSER;
  input [3:0] xt_rsc_1_27_ARREGION;
  input [3:0] xt_rsc_1_27_ARQOS;
  input [2:0] xt_rsc_1_27_ARPROT;
  input [3:0] xt_rsc_1_27_ARCACHE;
  input xt_rsc_1_27_ARLOCK;
  input [1:0] xt_rsc_1_27_ARBURST;
  input [2:0] xt_rsc_1_27_ARSIZE;
  input [7:0] xt_rsc_1_27_ARLEN;
  input [11:0] xt_rsc_1_27_ARADDR;
  input xt_rsc_1_27_ARID;
  input xt_rsc_1_27_BREADY;
  output xt_rsc_1_27_BVALID;
  output xt_rsc_1_27_BUSER;
  output [1:0] xt_rsc_1_27_BRESP;
  output xt_rsc_1_27_BID;
  output xt_rsc_1_27_WREADY;
  input xt_rsc_1_27_WVALID;
  input xt_rsc_1_27_WUSER;
  input xt_rsc_1_27_WLAST;
  input [3:0] xt_rsc_1_27_WSTRB;
  input [31:0] xt_rsc_1_27_WDATA;
  output xt_rsc_1_27_AWREADY;
  input xt_rsc_1_27_AWVALID;
  input xt_rsc_1_27_AWUSER;
  input [3:0] xt_rsc_1_27_AWREGION;
  input [3:0] xt_rsc_1_27_AWQOS;
  input [2:0] xt_rsc_1_27_AWPROT;
  input [3:0] xt_rsc_1_27_AWCACHE;
  input xt_rsc_1_27_AWLOCK;
  input [1:0] xt_rsc_1_27_AWBURST;
  input [2:0] xt_rsc_1_27_AWSIZE;
  input [7:0] xt_rsc_1_27_AWLEN;
  input [11:0] xt_rsc_1_27_AWADDR;
  input xt_rsc_1_27_AWID;
  input core_wen;
  input xt_rsc_1_27_i_oswt;
  output xt_rsc_1_27_i_wen_comp;
  input xt_rsc_1_27_i_oswt_1;
  output xt_rsc_1_27_i_wen_comp_1;
  input [3:0] xt_rsc_1_27_i_s_raddr_core;
  input [3:0] xt_rsc_1_27_i_s_waddr_core;
  output [31:0] xt_rsc_1_27_i_s_din_mxwt;
  input [31:0] xt_rsc_1_27_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_27_i_biwt;
  wire xt_rsc_1_27_i_bdwt;
  wire xt_rsc_1_27_i_bcwt;
  wire xt_rsc_1_27_i_s_re_core_sct;
  wire xt_rsc_1_27_i_biwt_1;
  wire xt_rsc_1_27_i_bdwt_2;
  wire xt_rsc_1_27_i_bcwt_1;
  wire xt_rsc_1_27_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_27_i_s_raddr;
  wire [3:0] xt_rsc_1_27_i_s_waddr;
  wire [31:0] xt_rsc_1_27_i_s_din;
  wire [31:0] xt_rsc_1_27_i_s_dout;
  wire xt_rsc_1_27_i_s_rrdy;
  wire xt_rsc_1_27_i_s_wrdy;
  wire xt_rsc_1_27_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_27_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_27_AWID),
      .AWADDR(xt_rsc_1_27_AWADDR),
      .AWLEN(xt_rsc_1_27_AWLEN),
      .AWSIZE(xt_rsc_1_27_AWSIZE),
      .AWBURST(xt_rsc_1_27_AWBURST),
      .AWLOCK(xt_rsc_1_27_AWLOCK),
      .AWCACHE(xt_rsc_1_27_AWCACHE),
      .AWPROT(xt_rsc_1_27_AWPROT),
      .AWQOS(xt_rsc_1_27_AWQOS),
      .AWREGION(xt_rsc_1_27_AWREGION),
      .AWUSER(xt_rsc_1_27_AWUSER),
      .AWVALID(xt_rsc_1_27_AWVALID),
      .AWREADY(xt_rsc_1_27_AWREADY),
      .WDATA(xt_rsc_1_27_WDATA),
      .WSTRB(xt_rsc_1_27_WSTRB),
      .WLAST(xt_rsc_1_27_WLAST),
      .WUSER(xt_rsc_1_27_WUSER),
      .WVALID(xt_rsc_1_27_WVALID),
      .WREADY(xt_rsc_1_27_WREADY),
      .BID(xt_rsc_1_27_BID),
      .BRESP(xt_rsc_1_27_BRESP),
      .BUSER(xt_rsc_1_27_BUSER),
      .BVALID(xt_rsc_1_27_BVALID),
      .BREADY(xt_rsc_1_27_BREADY),
      .ARID(xt_rsc_1_27_ARID),
      .ARADDR(xt_rsc_1_27_ARADDR),
      .ARLEN(xt_rsc_1_27_ARLEN),
      .ARSIZE(xt_rsc_1_27_ARSIZE),
      .ARBURST(xt_rsc_1_27_ARBURST),
      .ARLOCK(xt_rsc_1_27_ARLOCK),
      .ARCACHE(xt_rsc_1_27_ARCACHE),
      .ARPROT(xt_rsc_1_27_ARPROT),
      .ARQOS(xt_rsc_1_27_ARQOS),
      .ARREGION(xt_rsc_1_27_ARREGION),
      .ARUSER(xt_rsc_1_27_ARUSER),
      .ARVALID(xt_rsc_1_27_ARVALID),
      .ARREADY(xt_rsc_1_27_ARREADY),
      .RID(xt_rsc_1_27_RID),
      .RDATA(xt_rsc_1_27_RDATA),
      .RRESP(xt_rsc_1_27_RRESP),
      .RLAST(xt_rsc_1_27_RLAST),
      .RUSER(xt_rsc_1_27_RUSER),
      .RVALID(xt_rsc_1_27_RVALID),
      .RREADY(xt_rsc_1_27_RREADY),
      .s_re(xt_rsc_1_27_i_s_re_core_sct),
      .s_we(xt_rsc_1_27_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_27_i_s_raddr),
      .s_waddr(xt_rsc_1_27_i_s_waddr),
      .s_din(xt_rsc_1_27_i_s_din),
      .s_dout(xt_rsc_1_27_i_s_dout),
      .s_rrdy(xt_rsc_1_27_i_s_rrdy),
      .s_wrdy(xt_rsc_1_27_i_s_wrdy),
      .is_idle(xt_rsc_1_27_is_idle_1),
      .tr_write_done(xt_rsc_1_27_tr_write_done),
      .s_tdone(xt_rsc_1_27_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_27_i_xt_rsc_1_27_wait_ctrl peaseNTT_core_xt_rsc_1_27_i_xt_rsc_1_27_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_27_i_oswt(xt_rsc_1_27_i_oswt),
      .xt_rsc_1_27_i_oswt_1(xt_rsc_1_27_i_oswt_1),
      .xt_rsc_1_27_i_biwt(xt_rsc_1_27_i_biwt),
      .xt_rsc_1_27_i_bdwt(xt_rsc_1_27_i_bdwt),
      .xt_rsc_1_27_i_bcwt(xt_rsc_1_27_i_bcwt),
      .xt_rsc_1_27_i_s_re_core_sct(xt_rsc_1_27_i_s_re_core_sct),
      .xt_rsc_1_27_i_biwt_1(xt_rsc_1_27_i_biwt_1),
      .xt_rsc_1_27_i_bdwt_2(xt_rsc_1_27_i_bdwt_2),
      .xt_rsc_1_27_i_bcwt_1(xt_rsc_1_27_i_bcwt_1),
      .xt_rsc_1_27_i_s_we_core_sct(xt_rsc_1_27_i_s_we_core_sct),
      .xt_rsc_1_27_i_s_rrdy(xt_rsc_1_27_i_s_rrdy),
      .xt_rsc_1_27_i_s_wrdy(xt_rsc_1_27_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_27_i_xt_rsc_1_27_wait_dp peaseNTT_core_xt_rsc_1_27_i_xt_rsc_1_27_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_27_i_oswt(xt_rsc_1_27_i_oswt),
      .xt_rsc_1_27_i_wen_comp(xt_rsc_1_27_i_wen_comp),
      .xt_rsc_1_27_i_oswt_1(xt_rsc_1_27_i_oswt_1),
      .xt_rsc_1_27_i_wen_comp_1(xt_rsc_1_27_i_wen_comp_1),
      .xt_rsc_1_27_i_s_raddr_core(xt_rsc_1_27_i_s_raddr_core),
      .xt_rsc_1_27_i_s_waddr_core(xt_rsc_1_27_i_s_waddr_core),
      .xt_rsc_1_27_i_s_din_mxwt(xt_rsc_1_27_i_s_din_mxwt),
      .xt_rsc_1_27_i_s_dout_core(xt_rsc_1_27_i_s_dout_core),
      .xt_rsc_1_27_i_biwt(xt_rsc_1_27_i_biwt),
      .xt_rsc_1_27_i_bdwt(xt_rsc_1_27_i_bdwt),
      .xt_rsc_1_27_i_bcwt(xt_rsc_1_27_i_bcwt),
      .xt_rsc_1_27_i_biwt_1(xt_rsc_1_27_i_biwt_1),
      .xt_rsc_1_27_i_bdwt_2(xt_rsc_1_27_i_bdwt_2),
      .xt_rsc_1_27_i_bcwt_1(xt_rsc_1_27_i_bcwt_1),
      .xt_rsc_1_27_i_s_raddr(xt_rsc_1_27_i_s_raddr),
      .xt_rsc_1_27_i_s_raddr_core_sct(xt_rsc_1_27_i_s_re_core_sct),
      .xt_rsc_1_27_i_s_waddr(xt_rsc_1_27_i_s_waddr),
      .xt_rsc_1_27_i_s_waddr_core_sct(xt_rsc_1_27_i_s_we_core_sct),
      .xt_rsc_1_27_i_s_din(xt_rsc_1_27_i_s_din),
      .xt_rsc_1_27_i_s_dout(xt_rsc_1_27_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_26_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_26_i (
  clk, rst, xt_rsc_1_26_s_tdone, xt_rsc_1_26_tr_write_done, xt_rsc_1_26_RREADY, xt_rsc_1_26_RVALID,
      xt_rsc_1_26_RUSER, xt_rsc_1_26_RLAST, xt_rsc_1_26_RRESP, xt_rsc_1_26_RDATA,
      xt_rsc_1_26_RID, xt_rsc_1_26_ARREADY, xt_rsc_1_26_ARVALID, xt_rsc_1_26_ARUSER,
      xt_rsc_1_26_ARREGION, xt_rsc_1_26_ARQOS, xt_rsc_1_26_ARPROT, xt_rsc_1_26_ARCACHE,
      xt_rsc_1_26_ARLOCK, xt_rsc_1_26_ARBURST, xt_rsc_1_26_ARSIZE, xt_rsc_1_26_ARLEN,
      xt_rsc_1_26_ARADDR, xt_rsc_1_26_ARID, xt_rsc_1_26_BREADY, xt_rsc_1_26_BVALID,
      xt_rsc_1_26_BUSER, xt_rsc_1_26_BRESP, xt_rsc_1_26_BID, xt_rsc_1_26_WREADY,
      xt_rsc_1_26_WVALID, xt_rsc_1_26_WUSER, xt_rsc_1_26_WLAST, xt_rsc_1_26_WSTRB,
      xt_rsc_1_26_WDATA, xt_rsc_1_26_AWREADY, xt_rsc_1_26_AWVALID, xt_rsc_1_26_AWUSER,
      xt_rsc_1_26_AWREGION, xt_rsc_1_26_AWQOS, xt_rsc_1_26_AWPROT, xt_rsc_1_26_AWCACHE,
      xt_rsc_1_26_AWLOCK, xt_rsc_1_26_AWBURST, xt_rsc_1_26_AWSIZE, xt_rsc_1_26_AWLEN,
      xt_rsc_1_26_AWADDR, xt_rsc_1_26_AWID, core_wen, xt_rsc_1_26_i_oswt, xt_rsc_1_26_i_wen_comp,
      xt_rsc_1_26_i_oswt_1, xt_rsc_1_26_i_wen_comp_1, xt_rsc_1_26_i_s_raddr_core,
      xt_rsc_1_26_i_s_waddr_core, xt_rsc_1_26_i_s_din_mxwt, xt_rsc_1_26_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_26_s_tdone;
  input xt_rsc_1_26_tr_write_done;
  input xt_rsc_1_26_RREADY;
  output xt_rsc_1_26_RVALID;
  output xt_rsc_1_26_RUSER;
  output xt_rsc_1_26_RLAST;
  output [1:0] xt_rsc_1_26_RRESP;
  output [31:0] xt_rsc_1_26_RDATA;
  output xt_rsc_1_26_RID;
  output xt_rsc_1_26_ARREADY;
  input xt_rsc_1_26_ARVALID;
  input xt_rsc_1_26_ARUSER;
  input [3:0] xt_rsc_1_26_ARREGION;
  input [3:0] xt_rsc_1_26_ARQOS;
  input [2:0] xt_rsc_1_26_ARPROT;
  input [3:0] xt_rsc_1_26_ARCACHE;
  input xt_rsc_1_26_ARLOCK;
  input [1:0] xt_rsc_1_26_ARBURST;
  input [2:0] xt_rsc_1_26_ARSIZE;
  input [7:0] xt_rsc_1_26_ARLEN;
  input [11:0] xt_rsc_1_26_ARADDR;
  input xt_rsc_1_26_ARID;
  input xt_rsc_1_26_BREADY;
  output xt_rsc_1_26_BVALID;
  output xt_rsc_1_26_BUSER;
  output [1:0] xt_rsc_1_26_BRESP;
  output xt_rsc_1_26_BID;
  output xt_rsc_1_26_WREADY;
  input xt_rsc_1_26_WVALID;
  input xt_rsc_1_26_WUSER;
  input xt_rsc_1_26_WLAST;
  input [3:0] xt_rsc_1_26_WSTRB;
  input [31:0] xt_rsc_1_26_WDATA;
  output xt_rsc_1_26_AWREADY;
  input xt_rsc_1_26_AWVALID;
  input xt_rsc_1_26_AWUSER;
  input [3:0] xt_rsc_1_26_AWREGION;
  input [3:0] xt_rsc_1_26_AWQOS;
  input [2:0] xt_rsc_1_26_AWPROT;
  input [3:0] xt_rsc_1_26_AWCACHE;
  input xt_rsc_1_26_AWLOCK;
  input [1:0] xt_rsc_1_26_AWBURST;
  input [2:0] xt_rsc_1_26_AWSIZE;
  input [7:0] xt_rsc_1_26_AWLEN;
  input [11:0] xt_rsc_1_26_AWADDR;
  input xt_rsc_1_26_AWID;
  input core_wen;
  input xt_rsc_1_26_i_oswt;
  output xt_rsc_1_26_i_wen_comp;
  input xt_rsc_1_26_i_oswt_1;
  output xt_rsc_1_26_i_wen_comp_1;
  input [3:0] xt_rsc_1_26_i_s_raddr_core;
  input [3:0] xt_rsc_1_26_i_s_waddr_core;
  output [31:0] xt_rsc_1_26_i_s_din_mxwt;
  input [31:0] xt_rsc_1_26_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_26_i_biwt;
  wire xt_rsc_1_26_i_bdwt;
  wire xt_rsc_1_26_i_bcwt;
  wire xt_rsc_1_26_i_s_re_core_sct;
  wire xt_rsc_1_26_i_biwt_1;
  wire xt_rsc_1_26_i_bdwt_2;
  wire xt_rsc_1_26_i_bcwt_1;
  wire xt_rsc_1_26_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_26_i_s_raddr;
  wire [3:0] xt_rsc_1_26_i_s_waddr;
  wire [31:0] xt_rsc_1_26_i_s_din;
  wire [31:0] xt_rsc_1_26_i_s_dout;
  wire xt_rsc_1_26_i_s_rrdy;
  wire xt_rsc_1_26_i_s_wrdy;
  wire xt_rsc_1_26_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_26_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_26_AWID),
      .AWADDR(xt_rsc_1_26_AWADDR),
      .AWLEN(xt_rsc_1_26_AWLEN),
      .AWSIZE(xt_rsc_1_26_AWSIZE),
      .AWBURST(xt_rsc_1_26_AWBURST),
      .AWLOCK(xt_rsc_1_26_AWLOCK),
      .AWCACHE(xt_rsc_1_26_AWCACHE),
      .AWPROT(xt_rsc_1_26_AWPROT),
      .AWQOS(xt_rsc_1_26_AWQOS),
      .AWREGION(xt_rsc_1_26_AWREGION),
      .AWUSER(xt_rsc_1_26_AWUSER),
      .AWVALID(xt_rsc_1_26_AWVALID),
      .AWREADY(xt_rsc_1_26_AWREADY),
      .WDATA(xt_rsc_1_26_WDATA),
      .WSTRB(xt_rsc_1_26_WSTRB),
      .WLAST(xt_rsc_1_26_WLAST),
      .WUSER(xt_rsc_1_26_WUSER),
      .WVALID(xt_rsc_1_26_WVALID),
      .WREADY(xt_rsc_1_26_WREADY),
      .BID(xt_rsc_1_26_BID),
      .BRESP(xt_rsc_1_26_BRESP),
      .BUSER(xt_rsc_1_26_BUSER),
      .BVALID(xt_rsc_1_26_BVALID),
      .BREADY(xt_rsc_1_26_BREADY),
      .ARID(xt_rsc_1_26_ARID),
      .ARADDR(xt_rsc_1_26_ARADDR),
      .ARLEN(xt_rsc_1_26_ARLEN),
      .ARSIZE(xt_rsc_1_26_ARSIZE),
      .ARBURST(xt_rsc_1_26_ARBURST),
      .ARLOCK(xt_rsc_1_26_ARLOCK),
      .ARCACHE(xt_rsc_1_26_ARCACHE),
      .ARPROT(xt_rsc_1_26_ARPROT),
      .ARQOS(xt_rsc_1_26_ARQOS),
      .ARREGION(xt_rsc_1_26_ARREGION),
      .ARUSER(xt_rsc_1_26_ARUSER),
      .ARVALID(xt_rsc_1_26_ARVALID),
      .ARREADY(xt_rsc_1_26_ARREADY),
      .RID(xt_rsc_1_26_RID),
      .RDATA(xt_rsc_1_26_RDATA),
      .RRESP(xt_rsc_1_26_RRESP),
      .RLAST(xt_rsc_1_26_RLAST),
      .RUSER(xt_rsc_1_26_RUSER),
      .RVALID(xt_rsc_1_26_RVALID),
      .RREADY(xt_rsc_1_26_RREADY),
      .s_re(xt_rsc_1_26_i_s_re_core_sct),
      .s_we(xt_rsc_1_26_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_26_i_s_raddr),
      .s_waddr(xt_rsc_1_26_i_s_waddr),
      .s_din(xt_rsc_1_26_i_s_din),
      .s_dout(xt_rsc_1_26_i_s_dout),
      .s_rrdy(xt_rsc_1_26_i_s_rrdy),
      .s_wrdy(xt_rsc_1_26_i_s_wrdy),
      .is_idle(xt_rsc_1_26_is_idle_1),
      .tr_write_done(xt_rsc_1_26_tr_write_done),
      .s_tdone(xt_rsc_1_26_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_26_i_xt_rsc_1_26_wait_ctrl peaseNTT_core_xt_rsc_1_26_i_xt_rsc_1_26_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_26_i_oswt(xt_rsc_1_26_i_oswt),
      .xt_rsc_1_26_i_oswt_1(xt_rsc_1_26_i_oswt_1),
      .xt_rsc_1_26_i_biwt(xt_rsc_1_26_i_biwt),
      .xt_rsc_1_26_i_bdwt(xt_rsc_1_26_i_bdwt),
      .xt_rsc_1_26_i_bcwt(xt_rsc_1_26_i_bcwt),
      .xt_rsc_1_26_i_s_re_core_sct(xt_rsc_1_26_i_s_re_core_sct),
      .xt_rsc_1_26_i_biwt_1(xt_rsc_1_26_i_biwt_1),
      .xt_rsc_1_26_i_bdwt_2(xt_rsc_1_26_i_bdwt_2),
      .xt_rsc_1_26_i_bcwt_1(xt_rsc_1_26_i_bcwt_1),
      .xt_rsc_1_26_i_s_we_core_sct(xt_rsc_1_26_i_s_we_core_sct),
      .xt_rsc_1_26_i_s_rrdy(xt_rsc_1_26_i_s_rrdy),
      .xt_rsc_1_26_i_s_wrdy(xt_rsc_1_26_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_26_i_xt_rsc_1_26_wait_dp peaseNTT_core_xt_rsc_1_26_i_xt_rsc_1_26_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_26_i_oswt(xt_rsc_1_26_i_oswt),
      .xt_rsc_1_26_i_wen_comp(xt_rsc_1_26_i_wen_comp),
      .xt_rsc_1_26_i_oswt_1(xt_rsc_1_26_i_oswt_1),
      .xt_rsc_1_26_i_wen_comp_1(xt_rsc_1_26_i_wen_comp_1),
      .xt_rsc_1_26_i_s_raddr_core(xt_rsc_1_26_i_s_raddr_core),
      .xt_rsc_1_26_i_s_waddr_core(xt_rsc_1_26_i_s_waddr_core),
      .xt_rsc_1_26_i_s_din_mxwt(xt_rsc_1_26_i_s_din_mxwt),
      .xt_rsc_1_26_i_s_dout_core(xt_rsc_1_26_i_s_dout_core),
      .xt_rsc_1_26_i_biwt(xt_rsc_1_26_i_biwt),
      .xt_rsc_1_26_i_bdwt(xt_rsc_1_26_i_bdwt),
      .xt_rsc_1_26_i_bcwt(xt_rsc_1_26_i_bcwt),
      .xt_rsc_1_26_i_biwt_1(xt_rsc_1_26_i_biwt_1),
      .xt_rsc_1_26_i_bdwt_2(xt_rsc_1_26_i_bdwt_2),
      .xt_rsc_1_26_i_bcwt_1(xt_rsc_1_26_i_bcwt_1),
      .xt_rsc_1_26_i_s_raddr(xt_rsc_1_26_i_s_raddr),
      .xt_rsc_1_26_i_s_raddr_core_sct(xt_rsc_1_26_i_s_re_core_sct),
      .xt_rsc_1_26_i_s_waddr(xt_rsc_1_26_i_s_waddr),
      .xt_rsc_1_26_i_s_waddr_core_sct(xt_rsc_1_26_i_s_we_core_sct),
      .xt_rsc_1_26_i_s_din(xt_rsc_1_26_i_s_din),
      .xt_rsc_1_26_i_s_dout(xt_rsc_1_26_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_25_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_25_i (
  clk, rst, xt_rsc_1_25_s_tdone, xt_rsc_1_25_tr_write_done, xt_rsc_1_25_RREADY, xt_rsc_1_25_RVALID,
      xt_rsc_1_25_RUSER, xt_rsc_1_25_RLAST, xt_rsc_1_25_RRESP, xt_rsc_1_25_RDATA,
      xt_rsc_1_25_RID, xt_rsc_1_25_ARREADY, xt_rsc_1_25_ARVALID, xt_rsc_1_25_ARUSER,
      xt_rsc_1_25_ARREGION, xt_rsc_1_25_ARQOS, xt_rsc_1_25_ARPROT, xt_rsc_1_25_ARCACHE,
      xt_rsc_1_25_ARLOCK, xt_rsc_1_25_ARBURST, xt_rsc_1_25_ARSIZE, xt_rsc_1_25_ARLEN,
      xt_rsc_1_25_ARADDR, xt_rsc_1_25_ARID, xt_rsc_1_25_BREADY, xt_rsc_1_25_BVALID,
      xt_rsc_1_25_BUSER, xt_rsc_1_25_BRESP, xt_rsc_1_25_BID, xt_rsc_1_25_WREADY,
      xt_rsc_1_25_WVALID, xt_rsc_1_25_WUSER, xt_rsc_1_25_WLAST, xt_rsc_1_25_WSTRB,
      xt_rsc_1_25_WDATA, xt_rsc_1_25_AWREADY, xt_rsc_1_25_AWVALID, xt_rsc_1_25_AWUSER,
      xt_rsc_1_25_AWREGION, xt_rsc_1_25_AWQOS, xt_rsc_1_25_AWPROT, xt_rsc_1_25_AWCACHE,
      xt_rsc_1_25_AWLOCK, xt_rsc_1_25_AWBURST, xt_rsc_1_25_AWSIZE, xt_rsc_1_25_AWLEN,
      xt_rsc_1_25_AWADDR, xt_rsc_1_25_AWID, core_wen, xt_rsc_1_25_i_oswt, xt_rsc_1_25_i_wen_comp,
      xt_rsc_1_25_i_oswt_1, xt_rsc_1_25_i_wen_comp_1, xt_rsc_1_25_i_s_raddr_core,
      xt_rsc_1_25_i_s_waddr_core, xt_rsc_1_25_i_s_din_mxwt, xt_rsc_1_25_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_25_s_tdone;
  input xt_rsc_1_25_tr_write_done;
  input xt_rsc_1_25_RREADY;
  output xt_rsc_1_25_RVALID;
  output xt_rsc_1_25_RUSER;
  output xt_rsc_1_25_RLAST;
  output [1:0] xt_rsc_1_25_RRESP;
  output [31:0] xt_rsc_1_25_RDATA;
  output xt_rsc_1_25_RID;
  output xt_rsc_1_25_ARREADY;
  input xt_rsc_1_25_ARVALID;
  input xt_rsc_1_25_ARUSER;
  input [3:0] xt_rsc_1_25_ARREGION;
  input [3:0] xt_rsc_1_25_ARQOS;
  input [2:0] xt_rsc_1_25_ARPROT;
  input [3:0] xt_rsc_1_25_ARCACHE;
  input xt_rsc_1_25_ARLOCK;
  input [1:0] xt_rsc_1_25_ARBURST;
  input [2:0] xt_rsc_1_25_ARSIZE;
  input [7:0] xt_rsc_1_25_ARLEN;
  input [11:0] xt_rsc_1_25_ARADDR;
  input xt_rsc_1_25_ARID;
  input xt_rsc_1_25_BREADY;
  output xt_rsc_1_25_BVALID;
  output xt_rsc_1_25_BUSER;
  output [1:0] xt_rsc_1_25_BRESP;
  output xt_rsc_1_25_BID;
  output xt_rsc_1_25_WREADY;
  input xt_rsc_1_25_WVALID;
  input xt_rsc_1_25_WUSER;
  input xt_rsc_1_25_WLAST;
  input [3:0] xt_rsc_1_25_WSTRB;
  input [31:0] xt_rsc_1_25_WDATA;
  output xt_rsc_1_25_AWREADY;
  input xt_rsc_1_25_AWVALID;
  input xt_rsc_1_25_AWUSER;
  input [3:0] xt_rsc_1_25_AWREGION;
  input [3:0] xt_rsc_1_25_AWQOS;
  input [2:0] xt_rsc_1_25_AWPROT;
  input [3:0] xt_rsc_1_25_AWCACHE;
  input xt_rsc_1_25_AWLOCK;
  input [1:0] xt_rsc_1_25_AWBURST;
  input [2:0] xt_rsc_1_25_AWSIZE;
  input [7:0] xt_rsc_1_25_AWLEN;
  input [11:0] xt_rsc_1_25_AWADDR;
  input xt_rsc_1_25_AWID;
  input core_wen;
  input xt_rsc_1_25_i_oswt;
  output xt_rsc_1_25_i_wen_comp;
  input xt_rsc_1_25_i_oswt_1;
  output xt_rsc_1_25_i_wen_comp_1;
  input [3:0] xt_rsc_1_25_i_s_raddr_core;
  input [3:0] xt_rsc_1_25_i_s_waddr_core;
  output [31:0] xt_rsc_1_25_i_s_din_mxwt;
  input [31:0] xt_rsc_1_25_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_25_i_biwt;
  wire xt_rsc_1_25_i_bdwt;
  wire xt_rsc_1_25_i_bcwt;
  wire xt_rsc_1_25_i_s_re_core_sct;
  wire xt_rsc_1_25_i_biwt_1;
  wire xt_rsc_1_25_i_bdwt_2;
  wire xt_rsc_1_25_i_bcwt_1;
  wire xt_rsc_1_25_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_25_i_s_raddr;
  wire [3:0] xt_rsc_1_25_i_s_waddr;
  wire [31:0] xt_rsc_1_25_i_s_din;
  wire [31:0] xt_rsc_1_25_i_s_dout;
  wire xt_rsc_1_25_i_s_rrdy;
  wire xt_rsc_1_25_i_s_wrdy;
  wire xt_rsc_1_25_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_25_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_25_AWID),
      .AWADDR(xt_rsc_1_25_AWADDR),
      .AWLEN(xt_rsc_1_25_AWLEN),
      .AWSIZE(xt_rsc_1_25_AWSIZE),
      .AWBURST(xt_rsc_1_25_AWBURST),
      .AWLOCK(xt_rsc_1_25_AWLOCK),
      .AWCACHE(xt_rsc_1_25_AWCACHE),
      .AWPROT(xt_rsc_1_25_AWPROT),
      .AWQOS(xt_rsc_1_25_AWQOS),
      .AWREGION(xt_rsc_1_25_AWREGION),
      .AWUSER(xt_rsc_1_25_AWUSER),
      .AWVALID(xt_rsc_1_25_AWVALID),
      .AWREADY(xt_rsc_1_25_AWREADY),
      .WDATA(xt_rsc_1_25_WDATA),
      .WSTRB(xt_rsc_1_25_WSTRB),
      .WLAST(xt_rsc_1_25_WLAST),
      .WUSER(xt_rsc_1_25_WUSER),
      .WVALID(xt_rsc_1_25_WVALID),
      .WREADY(xt_rsc_1_25_WREADY),
      .BID(xt_rsc_1_25_BID),
      .BRESP(xt_rsc_1_25_BRESP),
      .BUSER(xt_rsc_1_25_BUSER),
      .BVALID(xt_rsc_1_25_BVALID),
      .BREADY(xt_rsc_1_25_BREADY),
      .ARID(xt_rsc_1_25_ARID),
      .ARADDR(xt_rsc_1_25_ARADDR),
      .ARLEN(xt_rsc_1_25_ARLEN),
      .ARSIZE(xt_rsc_1_25_ARSIZE),
      .ARBURST(xt_rsc_1_25_ARBURST),
      .ARLOCK(xt_rsc_1_25_ARLOCK),
      .ARCACHE(xt_rsc_1_25_ARCACHE),
      .ARPROT(xt_rsc_1_25_ARPROT),
      .ARQOS(xt_rsc_1_25_ARQOS),
      .ARREGION(xt_rsc_1_25_ARREGION),
      .ARUSER(xt_rsc_1_25_ARUSER),
      .ARVALID(xt_rsc_1_25_ARVALID),
      .ARREADY(xt_rsc_1_25_ARREADY),
      .RID(xt_rsc_1_25_RID),
      .RDATA(xt_rsc_1_25_RDATA),
      .RRESP(xt_rsc_1_25_RRESP),
      .RLAST(xt_rsc_1_25_RLAST),
      .RUSER(xt_rsc_1_25_RUSER),
      .RVALID(xt_rsc_1_25_RVALID),
      .RREADY(xt_rsc_1_25_RREADY),
      .s_re(xt_rsc_1_25_i_s_re_core_sct),
      .s_we(xt_rsc_1_25_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_25_i_s_raddr),
      .s_waddr(xt_rsc_1_25_i_s_waddr),
      .s_din(xt_rsc_1_25_i_s_din),
      .s_dout(xt_rsc_1_25_i_s_dout),
      .s_rrdy(xt_rsc_1_25_i_s_rrdy),
      .s_wrdy(xt_rsc_1_25_i_s_wrdy),
      .is_idle(xt_rsc_1_25_is_idle_1),
      .tr_write_done(xt_rsc_1_25_tr_write_done),
      .s_tdone(xt_rsc_1_25_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_25_i_xt_rsc_1_25_wait_ctrl peaseNTT_core_xt_rsc_1_25_i_xt_rsc_1_25_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_25_i_oswt(xt_rsc_1_25_i_oswt),
      .xt_rsc_1_25_i_oswt_1(xt_rsc_1_25_i_oswt_1),
      .xt_rsc_1_25_i_biwt(xt_rsc_1_25_i_biwt),
      .xt_rsc_1_25_i_bdwt(xt_rsc_1_25_i_bdwt),
      .xt_rsc_1_25_i_bcwt(xt_rsc_1_25_i_bcwt),
      .xt_rsc_1_25_i_s_re_core_sct(xt_rsc_1_25_i_s_re_core_sct),
      .xt_rsc_1_25_i_biwt_1(xt_rsc_1_25_i_biwt_1),
      .xt_rsc_1_25_i_bdwt_2(xt_rsc_1_25_i_bdwt_2),
      .xt_rsc_1_25_i_bcwt_1(xt_rsc_1_25_i_bcwt_1),
      .xt_rsc_1_25_i_s_we_core_sct(xt_rsc_1_25_i_s_we_core_sct),
      .xt_rsc_1_25_i_s_rrdy(xt_rsc_1_25_i_s_rrdy),
      .xt_rsc_1_25_i_s_wrdy(xt_rsc_1_25_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_25_i_xt_rsc_1_25_wait_dp peaseNTT_core_xt_rsc_1_25_i_xt_rsc_1_25_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_25_i_oswt(xt_rsc_1_25_i_oswt),
      .xt_rsc_1_25_i_wen_comp(xt_rsc_1_25_i_wen_comp),
      .xt_rsc_1_25_i_oswt_1(xt_rsc_1_25_i_oswt_1),
      .xt_rsc_1_25_i_wen_comp_1(xt_rsc_1_25_i_wen_comp_1),
      .xt_rsc_1_25_i_s_raddr_core(xt_rsc_1_25_i_s_raddr_core),
      .xt_rsc_1_25_i_s_waddr_core(xt_rsc_1_25_i_s_waddr_core),
      .xt_rsc_1_25_i_s_din_mxwt(xt_rsc_1_25_i_s_din_mxwt),
      .xt_rsc_1_25_i_s_dout_core(xt_rsc_1_25_i_s_dout_core),
      .xt_rsc_1_25_i_biwt(xt_rsc_1_25_i_biwt),
      .xt_rsc_1_25_i_bdwt(xt_rsc_1_25_i_bdwt),
      .xt_rsc_1_25_i_bcwt(xt_rsc_1_25_i_bcwt),
      .xt_rsc_1_25_i_biwt_1(xt_rsc_1_25_i_biwt_1),
      .xt_rsc_1_25_i_bdwt_2(xt_rsc_1_25_i_bdwt_2),
      .xt_rsc_1_25_i_bcwt_1(xt_rsc_1_25_i_bcwt_1),
      .xt_rsc_1_25_i_s_raddr(xt_rsc_1_25_i_s_raddr),
      .xt_rsc_1_25_i_s_raddr_core_sct(xt_rsc_1_25_i_s_re_core_sct),
      .xt_rsc_1_25_i_s_waddr(xt_rsc_1_25_i_s_waddr),
      .xt_rsc_1_25_i_s_waddr_core_sct(xt_rsc_1_25_i_s_we_core_sct),
      .xt_rsc_1_25_i_s_din(xt_rsc_1_25_i_s_din),
      .xt_rsc_1_25_i_s_dout(xt_rsc_1_25_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_24_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_24_i (
  clk, rst, xt_rsc_1_24_s_tdone, xt_rsc_1_24_tr_write_done, xt_rsc_1_24_RREADY, xt_rsc_1_24_RVALID,
      xt_rsc_1_24_RUSER, xt_rsc_1_24_RLAST, xt_rsc_1_24_RRESP, xt_rsc_1_24_RDATA,
      xt_rsc_1_24_RID, xt_rsc_1_24_ARREADY, xt_rsc_1_24_ARVALID, xt_rsc_1_24_ARUSER,
      xt_rsc_1_24_ARREGION, xt_rsc_1_24_ARQOS, xt_rsc_1_24_ARPROT, xt_rsc_1_24_ARCACHE,
      xt_rsc_1_24_ARLOCK, xt_rsc_1_24_ARBURST, xt_rsc_1_24_ARSIZE, xt_rsc_1_24_ARLEN,
      xt_rsc_1_24_ARADDR, xt_rsc_1_24_ARID, xt_rsc_1_24_BREADY, xt_rsc_1_24_BVALID,
      xt_rsc_1_24_BUSER, xt_rsc_1_24_BRESP, xt_rsc_1_24_BID, xt_rsc_1_24_WREADY,
      xt_rsc_1_24_WVALID, xt_rsc_1_24_WUSER, xt_rsc_1_24_WLAST, xt_rsc_1_24_WSTRB,
      xt_rsc_1_24_WDATA, xt_rsc_1_24_AWREADY, xt_rsc_1_24_AWVALID, xt_rsc_1_24_AWUSER,
      xt_rsc_1_24_AWREGION, xt_rsc_1_24_AWQOS, xt_rsc_1_24_AWPROT, xt_rsc_1_24_AWCACHE,
      xt_rsc_1_24_AWLOCK, xt_rsc_1_24_AWBURST, xt_rsc_1_24_AWSIZE, xt_rsc_1_24_AWLEN,
      xt_rsc_1_24_AWADDR, xt_rsc_1_24_AWID, core_wen, xt_rsc_1_24_i_oswt, xt_rsc_1_24_i_wen_comp,
      xt_rsc_1_24_i_oswt_1, xt_rsc_1_24_i_wen_comp_1, xt_rsc_1_24_i_s_raddr_core,
      xt_rsc_1_24_i_s_waddr_core, xt_rsc_1_24_i_s_din_mxwt, xt_rsc_1_24_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_24_s_tdone;
  input xt_rsc_1_24_tr_write_done;
  input xt_rsc_1_24_RREADY;
  output xt_rsc_1_24_RVALID;
  output xt_rsc_1_24_RUSER;
  output xt_rsc_1_24_RLAST;
  output [1:0] xt_rsc_1_24_RRESP;
  output [31:0] xt_rsc_1_24_RDATA;
  output xt_rsc_1_24_RID;
  output xt_rsc_1_24_ARREADY;
  input xt_rsc_1_24_ARVALID;
  input xt_rsc_1_24_ARUSER;
  input [3:0] xt_rsc_1_24_ARREGION;
  input [3:0] xt_rsc_1_24_ARQOS;
  input [2:0] xt_rsc_1_24_ARPROT;
  input [3:0] xt_rsc_1_24_ARCACHE;
  input xt_rsc_1_24_ARLOCK;
  input [1:0] xt_rsc_1_24_ARBURST;
  input [2:0] xt_rsc_1_24_ARSIZE;
  input [7:0] xt_rsc_1_24_ARLEN;
  input [11:0] xt_rsc_1_24_ARADDR;
  input xt_rsc_1_24_ARID;
  input xt_rsc_1_24_BREADY;
  output xt_rsc_1_24_BVALID;
  output xt_rsc_1_24_BUSER;
  output [1:0] xt_rsc_1_24_BRESP;
  output xt_rsc_1_24_BID;
  output xt_rsc_1_24_WREADY;
  input xt_rsc_1_24_WVALID;
  input xt_rsc_1_24_WUSER;
  input xt_rsc_1_24_WLAST;
  input [3:0] xt_rsc_1_24_WSTRB;
  input [31:0] xt_rsc_1_24_WDATA;
  output xt_rsc_1_24_AWREADY;
  input xt_rsc_1_24_AWVALID;
  input xt_rsc_1_24_AWUSER;
  input [3:0] xt_rsc_1_24_AWREGION;
  input [3:0] xt_rsc_1_24_AWQOS;
  input [2:0] xt_rsc_1_24_AWPROT;
  input [3:0] xt_rsc_1_24_AWCACHE;
  input xt_rsc_1_24_AWLOCK;
  input [1:0] xt_rsc_1_24_AWBURST;
  input [2:0] xt_rsc_1_24_AWSIZE;
  input [7:0] xt_rsc_1_24_AWLEN;
  input [11:0] xt_rsc_1_24_AWADDR;
  input xt_rsc_1_24_AWID;
  input core_wen;
  input xt_rsc_1_24_i_oswt;
  output xt_rsc_1_24_i_wen_comp;
  input xt_rsc_1_24_i_oswt_1;
  output xt_rsc_1_24_i_wen_comp_1;
  input [3:0] xt_rsc_1_24_i_s_raddr_core;
  input [3:0] xt_rsc_1_24_i_s_waddr_core;
  output [31:0] xt_rsc_1_24_i_s_din_mxwt;
  input [31:0] xt_rsc_1_24_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_24_i_biwt;
  wire xt_rsc_1_24_i_bdwt;
  wire xt_rsc_1_24_i_bcwt;
  wire xt_rsc_1_24_i_s_re_core_sct;
  wire xt_rsc_1_24_i_biwt_1;
  wire xt_rsc_1_24_i_bdwt_2;
  wire xt_rsc_1_24_i_bcwt_1;
  wire xt_rsc_1_24_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_24_i_s_raddr;
  wire [3:0] xt_rsc_1_24_i_s_waddr;
  wire [31:0] xt_rsc_1_24_i_s_din;
  wire [31:0] xt_rsc_1_24_i_s_dout;
  wire xt_rsc_1_24_i_s_rrdy;
  wire xt_rsc_1_24_i_s_wrdy;
  wire xt_rsc_1_24_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_24_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_24_AWID),
      .AWADDR(xt_rsc_1_24_AWADDR),
      .AWLEN(xt_rsc_1_24_AWLEN),
      .AWSIZE(xt_rsc_1_24_AWSIZE),
      .AWBURST(xt_rsc_1_24_AWBURST),
      .AWLOCK(xt_rsc_1_24_AWLOCK),
      .AWCACHE(xt_rsc_1_24_AWCACHE),
      .AWPROT(xt_rsc_1_24_AWPROT),
      .AWQOS(xt_rsc_1_24_AWQOS),
      .AWREGION(xt_rsc_1_24_AWREGION),
      .AWUSER(xt_rsc_1_24_AWUSER),
      .AWVALID(xt_rsc_1_24_AWVALID),
      .AWREADY(xt_rsc_1_24_AWREADY),
      .WDATA(xt_rsc_1_24_WDATA),
      .WSTRB(xt_rsc_1_24_WSTRB),
      .WLAST(xt_rsc_1_24_WLAST),
      .WUSER(xt_rsc_1_24_WUSER),
      .WVALID(xt_rsc_1_24_WVALID),
      .WREADY(xt_rsc_1_24_WREADY),
      .BID(xt_rsc_1_24_BID),
      .BRESP(xt_rsc_1_24_BRESP),
      .BUSER(xt_rsc_1_24_BUSER),
      .BVALID(xt_rsc_1_24_BVALID),
      .BREADY(xt_rsc_1_24_BREADY),
      .ARID(xt_rsc_1_24_ARID),
      .ARADDR(xt_rsc_1_24_ARADDR),
      .ARLEN(xt_rsc_1_24_ARLEN),
      .ARSIZE(xt_rsc_1_24_ARSIZE),
      .ARBURST(xt_rsc_1_24_ARBURST),
      .ARLOCK(xt_rsc_1_24_ARLOCK),
      .ARCACHE(xt_rsc_1_24_ARCACHE),
      .ARPROT(xt_rsc_1_24_ARPROT),
      .ARQOS(xt_rsc_1_24_ARQOS),
      .ARREGION(xt_rsc_1_24_ARREGION),
      .ARUSER(xt_rsc_1_24_ARUSER),
      .ARVALID(xt_rsc_1_24_ARVALID),
      .ARREADY(xt_rsc_1_24_ARREADY),
      .RID(xt_rsc_1_24_RID),
      .RDATA(xt_rsc_1_24_RDATA),
      .RRESP(xt_rsc_1_24_RRESP),
      .RLAST(xt_rsc_1_24_RLAST),
      .RUSER(xt_rsc_1_24_RUSER),
      .RVALID(xt_rsc_1_24_RVALID),
      .RREADY(xt_rsc_1_24_RREADY),
      .s_re(xt_rsc_1_24_i_s_re_core_sct),
      .s_we(xt_rsc_1_24_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_24_i_s_raddr),
      .s_waddr(xt_rsc_1_24_i_s_waddr),
      .s_din(xt_rsc_1_24_i_s_din),
      .s_dout(xt_rsc_1_24_i_s_dout),
      .s_rrdy(xt_rsc_1_24_i_s_rrdy),
      .s_wrdy(xt_rsc_1_24_i_s_wrdy),
      .is_idle(xt_rsc_1_24_is_idle_1),
      .tr_write_done(xt_rsc_1_24_tr_write_done),
      .s_tdone(xt_rsc_1_24_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_24_i_xt_rsc_1_24_wait_ctrl peaseNTT_core_xt_rsc_1_24_i_xt_rsc_1_24_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_24_i_oswt(xt_rsc_1_24_i_oswt),
      .xt_rsc_1_24_i_oswt_1(xt_rsc_1_24_i_oswt_1),
      .xt_rsc_1_24_i_biwt(xt_rsc_1_24_i_biwt),
      .xt_rsc_1_24_i_bdwt(xt_rsc_1_24_i_bdwt),
      .xt_rsc_1_24_i_bcwt(xt_rsc_1_24_i_bcwt),
      .xt_rsc_1_24_i_s_re_core_sct(xt_rsc_1_24_i_s_re_core_sct),
      .xt_rsc_1_24_i_biwt_1(xt_rsc_1_24_i_biwt_1),
      .xt_rsc_1_24_i_bdwt_2(xt_rsc_1_24_i_bdwt_2),
      .xt_rsc_1_24_i_bcwt_1(xt_rsc_1_24_i_bcwt_1),
      .xt_rsc_1_24_i_s_we_core_sct(xt_rsc_1_24_i_s_we_core_sct),
      .xt_rsc_1_24_i_s_rrdy(xt_rsc_1_24_i_s_rrdy),
      .xt_rsc_1_24_i_s_wrdy(xt_rsc_1_24_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_24_i_xt_rsc_1_24_wait_dp peaseNTT_core_xt_rsc_1_24_i_xt_rsc_1_24_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_24_i_oswt(xt_rsc_1_24_i_oswt),
      .xt_rsc_1_24_i_wen_comp(xt_rsc_1_24_i_wen_comp),
      .xt_rsc_1_24_i_oswt_1(xt_rsc_1_24_i_oswt_1),
      .xt_rsc_1_24_i_wen_comp_1(xt_rsc_1_24_i_wen_comp_1),
      .xt_rsc_1_24_i_s_raddr_core(xt_rsc_1_24_i_s_raddr_core),
      .xt_rsc_1_24_i_s_waddr_core(xt_rsc_1_24_i_s_waddr_core),
      .xt_rsc_1_24_i_s_din_mxwt(xt_rsc_1_24_i_s_din_mxwt),
      .xt_rsc_1_24_i_s_dout_core(xt_rsc_1_24_i_s_dout_core),
      .xt_rsc_1_24_i_biwt(xt_rsc_1_24_i_biwt),
      .xt_rsc_1_24_i_bdwt(xt_rsc_1_24_i_bdwt),
      .xt_rsc_1_24_i_bcwt(xt_rsc_1_24_i_bcwt),
      .xt_rsc_1_24_i_biwt_1(xt_rsc_1_24_i_biwt_1),
      .xt_rsc_1_24_i_bdwt_2(xt_rsc_1_24_i_bdwt_2),
      .xt_rsc_1_24_i_bcwt_1(xt_rsc_1_24_i_bcwt_1),
      .xt_rsc_1_24_i_s_raddr(xt_rsc_1_24_i_s_raddr),
      .xt_rsc_1_24_i_s_raddr_core_sct(xt_rsc_1_24_i_s_re_core_sct),
      .xt_rsc_1_24_i_s_waddr(xt_rsc_1_24_i_s_waddr),
      .xt_rsc_1_24_i_s_waddr_core_sct(xt_rsc_1_24_i_s_we_core_sct),
      .xt_rsc_1_24_i_s_din(xt_rsc_1_24_i_s_din),
      .xt_rsc_1_24_i_s_dout(xt_rsc_1_24_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_23_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_23_i (
  clk, rst, xt_rsc_1_23_s_tdone, xt_rsc_1_23_tr_write_done, xt_rsc_1_23_RREADY, xt_rsc_1_23_RVALID,
      xt_rsc_1_23_RUSER, xt_rsc_1_23_RLAST, xt_rsc_1_23_RRESP, xt_rsc_1_23_RDATA,
      xt_rsc_1_23_RID, xt_rsc_1_23_ARREADY, xt_rsc_1_23_ARVALID, xt_rsc_1_23_ARUSER,
      xt_rsc_1_23_ARREGION, xt_rsc_1_23_ARQOS, xt_rsc_1_23_ARPROT, xt_rsc_1_23_ARCACHE,
      xt_rsc_1_23_ARLOCK, xt_rsc_1_23_ARBURST, xt_rsc_1_23_ARSIZE, xt_rsc_1_23_ARLEN,
      xt_rsc_1_23_ARADDR, xt_rsc_1_23_ARID, xt_rsc_1_23_BREADY, xt_rsc_1_23_BVALID,
      xt_rsc_1_23_BUSER, xt_rsc_1_23_BRESP, xt_rsc_1_23_BID, xt_rsc_1_23_WREADY,
      xt_rsc_1_23_WVALID, xt_rsc_1_23_WUSER, xt_rsc_1_23_WLAST, xt_rsc_1_23_WSTRB,
      xt_rsc_1_23_WDATA, xt_rsc_1_23_AWREADY, xt_rsc_1_23_AWVALID, xt_rsc_1_23_AWUSER,
      xt_rsc_1_23_AWREGION, xt_rsc_1_23_AWQOS, xt_rsc_1_23_AWPROT, xt_rsc_1_23_AWCACHE,
      xt_rsc_1_23_AWLOCK, xt_rsc_1_23_AWBURST, xt_rsc_1_23_AWSIZE, xt_rsc_1_23_AWLEN,
      xt_rsc_1_23_AWADDR, xt_rsc_1_23_AWID, core_wen, xt_rsc_1_23_i_oswt, xt_rsc_1_23_i_wen_comp,
      xt_rsc_1_23_i_oswt_1, xt_rsc_1_23_i_wen_comp_1, xt_rsc_1_23_i_s_raddr_core,
      xt_rsc_1_23_i_s_waddr_core, xt_rsc_1_23_i_s_din_mxwt, xt_rsc_1_23_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_23_s_tdone;
  input xt_rsc_1_23_tr_write_done;
  input xt_rsc_1_23_RREADY;
  output xt_rsc_1_23_RVALID;
  output xt_rsc_1_23_RUSER;
  output xt_rsc_1_23_RLAST;
  output [1:0] xt_rsc_1_23_RRESP;
  output [31:0] xt_rsc_1_23_RDATA;
  output xt_rsc_1_23_RID;
  output xt_rsc_1_23_ARREADY;
  input xt_rsc_1_23_ARVALID;
  input xt_rsc_1_23_ARUSER;
  input [3:0] xt_rsc_1_23_ARREGION;
  input [3:0] xt_rsc_1_23_ARQOS;
  input [2:0] xt_rsc_1_23_ARPROT;
  input [3:0] xt_rsc_1_23_ARCACHE;
  input xt_rsc_1_23_ARLOCK;
  input [1:0] xt_rsc_1_23_ARBURST;
  input [2:0] xt_rsc_1_23_ARSIZE;
  input [7:0] xt_rsc_1_23_ARLEN;
  input [11:0] xt_rsc_1_23_ARADDR;
  input xt_rsc_1_23_ARID;
  input xt_rsc_1_23_BREADY;
  output xt_rsc_1_23_BVALID;
  output xt_rsc_1_23_BUSER;
  output [1:0] xt_rsc_1_23_BRESP;
  output xt_rsc_1_23_BID;
  output xt_rsc_1_23_WREADY;
  input xt_rsc_1_23_WVALID;
  input xt_rsc_1_23_WUSER;
  input xt_rsc_1_23_WLAST;
  input [3:0] xt_rsc_1_23_WSTRB;
  input [31:0] xt_rsc_1_23_WDATA;
  output xt_rsc_1_23_AWREADY;
  input xt_rsc_1_23_AWVALID;
  input xt_rsc_1_23_AWUSER;
  input [3:0] xt_rsc_1_23_AWREGION;
  input [3:0] xt_rsc_1_23_AWQOS;
  input [2:0] xt_rsc_1_23_AWPROT;
  input [3:0] xt_rsc_1_23_AWCACHE;
  input xt_rsc_1_23_AWLOCK;
  input [1:0] xt_rsc_1_23_AWBURST;
  input [2:0] xt_rsc_1_23_AWSIZE;
  input [7:0] xt_rsc_1_23_AWLEN;
  input [11:0] xt_rsc_1_23_AWADDR;
  input xt_rsc_1_23_AWID;
  input core_wen;
  input xt_rsc_1_23_i_oswt;
  output xt_rsc_1_23_i_wen_comp;
  input xt_rsc_1_23_i_oswt_1;
  output xt_rsc_1_23_i_wen_comp_1;
  input [3:0] xt_rsc_1_23_i_s_raddr_core;
  input [3:0] xt_rsc_1_23_i_s_waddr_core;
  output [31:0] xt_rsc_1_23_i_s_din_mxwt;
  input [31:0] xt_rsc_1_23_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_23_i_biwt;
  wire xt_rsc_1_23_i_bdwt;
  wire xt_rsc_1_23_i_bcwt;
  wire xt_rsc_1_23_i_s_re_core_sct;
  wire xt_rsc_1_23_i_biwt_1;
  wire xt_rsc_1_23_i_bdwt_2;
  wire xt_rsc_1_23_i_bcwt_1;
  wire xt_rsc_1_23_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_23_i_s_raddr;
  wire [3:0] xt_rsc_1_23_i_s_waddr;
  wire [31:0] xt_rsc_1_23_i_s_din;
  wire [31:0] xt_rsc_1_23_i_s_dout;
  wire xt_rsc_1_23_i_s_rrdy;
  wire xt_rsc_1_23_i_s_wrdy;
  wire xt_rsc_1_23_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_23_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_23_AWID),
      .AWADDR(xt_rsc_1_23_AWADDR),
      .AWLEN(xt_rsc_1_23_AWLEN),
      .AWSIZE(xt_rsc_1_23_AWSIZE),
      .AWBURST(xt_rsc_1_23_AWBURST),
      .AWLOCK(xt_rsc_1_23_AWLOCK),
      .AWCACHE(xt_rsc_1_23_AWCACHE),
      .AWPROT(xt_rsc_1_23_AWPROT),
      .AWQOS(xt_rsc_1_23_AWQOS),
      .AWREGION(xt_rsc_1_23_AWREGION),
      .AWUSER(xt_rsc_1_23_AWUSER),
      .AWVALID(xt_rsc_1_23_AWVALID),
      .AWREADY(xt_rsc_1_23_AWREADY),
      .WDATA(xt_rsc_1_23_WDATA),
      .WSTRB(xt_rsc_1_23_WSTRB),
      .WLAST(xt_rsc_1_23_WLAST),
      .WUSER(xt_rsc_1_23_WUSER),
      .WVALID(xt_rsc_1_23_WVALID),
      .WREADY(xt_rsc_1_23_WREADY),
      .BID(xt_rsc_1_23_BID),
      .BRESP(xt_rsc_1_23_BRESP),
      .BUSER(xt_rsc_1_23_BUSER),
      .BVALID(xt_rsc_1_23_BVALID),
      .BREADY(xt_rsc_1_23_BREADY),
      .ARID(xt_rsc_1_23_ARID),
      .ARADDR(xt_rsc_1_23_ARADDR),
      .ARLEN(xt_rsc_1_23_ARLEN),
      .ARSIZE(xt_rsc_1_23_ARSIZE),
      .ARBURST(xt_rsc_1_23_ARBURST),
      .ARLOCK(xt_rsc_1_23_ARLOCK),
      .ARCACHE(xt_rsc_1_23_ARCACHE),
      .ARPROT(xt_rsc_1_23_ARPROT),
      .ARQOS(xt_rsc_1_23_ARQOS),
      .ARREGION(xt_rsc_1_23_ARREGION),
      .ARUSER(xt_rsc_1_23_ARUSER),
      .ARVALID(xt_rsc_1_23_ARVALID),
      .ARREADY(xt_rsc_1_23_ARREADY),
      .RID(xt_rsc_1_23_RID),
      .RDATA(xt_rsc_1_23_RDATA),
      .RRESP(xt_rsc_1_23_RRESP),
      .RLAST(xt_rsc_1_23_RLAST),
      .RUSER(xt_rsc_1_23_RUSER),
      .RVALID(xt_rsc_1_23_RVALID),
      .RREADY(xt_rsc_1_23_RREADY),
      .s_re(xt_rsc_1_23_i_s_re_core_sct),
      .s_we(xt_rsc_1_23_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_23_i_s_raddr),
      .s_waddr(xt_rsc_1_23_i_s_waddr),
      .s_din(xt_rsc_1_23_i_s_din),
      .s_dout(xt_rsc_1_23_i_s_dout),
      .s_rrdy(xt_rsc_1_23_i_s_rrdy),
      .s_wrdy(xt_rsc_1_23_i_s_wrdy),
      .is_idle(xt_rsc_1_23_is_idle_1),
      .tr_write_done(xt_rsc_1_23_tr_write_done),
      .s_tdone(xt_rsc_1_23_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_23_i_xt_rsc_1_23_wait_ctrl peaseNTT_core_xt_rsc_1_23_i_xt_rsc_1_23_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_23_i_oswt(xt_rsc_1_23_i_oswt),
      .xt_rsc_1_23_i_oswt_1(xt_rsc_1_23_i_oswt_1),
      .xt_rsc_1_23_i_biwt(xt_rsc_1_23_i_biwt),
      .xt_rsc_1_23_i_bdwt(xt_rsc_1_23_i_bdwt),
      .xt_rsc_1_23_i_bcwt(xt_rsc_1_23_i_bcwt),
      .xt_rsc_1_23_i_s_re_core_sct(xt_rsc_1_23_i_s_re_core_sct),
      .xt_rsc_1_23_i_biwt_1(xt_rsc_1_23_i_biwt_1),
      .xt_rsc_1_23_i_bdwt_2(xt_rsc_1_23_i_bdwt_2),
      .xt_rsc_1_23_i_bcwt_1(xt_rsc_1_23_i_bcwt_1),
      .xt_rsc_1_23_i_s_we_core_sct(xt_rsc_1_23_i_s_we_core_sct),
      .xt_rsc_1_23_i_s_rrdy(xt_rsc_1_23_i_s_rrdy),
      .xt_rsc_1_23_i_s_wrdy(xt_rsc_1_23_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_23_i_xt_rsc_1_23_wait_dp peaseNTT_core_xt_rsc_1_23_i_xt_rsc_1_23_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_23_i_oswt(xt_rsc_1_23_i_oswt),
      .xt_rsc_1_23_i_wen_comp(xt_rsc_1_23_i_wen_comp),
      .xt_rsc_1_23_i_oswt_1(xt_rsc_1_23_i_oswt_1),
      .xt_rsc_1_23_i_wen_comp_1(xt_rsc_1_23_i_wen_comp_1),
      .xt_rsc_1_23_i_s_raddr_core(xt_rsc_1_23_i_s_raddr_core),
      .xt_rsc_1_23_i_s_waddr_core(xt_rsc_1_23_i_s_waddr_core),
      .xt_rsc_1_23_i_s_din_mxwt(xt_rsc_1_23_i_s_din_mxwt),
      .xt_rsc_1_23_i_s_dout_core(xt_rsc_1_23_i_s_dout_core),
      .xt_rsc_1_23_i_biwt(xt_rsc_1_23_i_biwt),
      .xt_rsc_1_23_i_bdwt(xt_rsc_1_23_i_bdwt),
      .xt_rsc_1_23_i_bcwt(xt_rsc_1_23_i_bcwt),
      .xt_rsc_1_23_i_biwt_1(xt_rsc_1_23_i_biwt_1),
      .xt_rsc_1_23_i_bdwt_2(xt_rsc_1_23_i_bdwt_2),
      .xt_rsc_1_23_i_bcwt_1(xt_rsc_1_23_i_bcwt_1),
      .xt_rsc_1_23_i_s_raddr(xt_rsc_1_23_i_s_raddr),
      .xt_rsc_1_23_i_s_raddr_core_sct(xt_rsc_1_23_i_s_re_core_sct),
      .xt_rsc_1_23_i_s_waddr(xt_rsc_1_23_i_s_waddr),
      .xt_rsc_1_23_i_s_waddr_core_sct(xt_rsc_1_23_i_s_we_core_sct),
      .xt_rsc_1_23_i_s_din(xt_rsc_1_23_i_s_din),
      .xt_rsc_1_23_i_s_dout(xt_rsc_1_23_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_22_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_22_i (
  clk, rst, xt_rsc_1_22_s_tdone, xt_rsc_1_22_tr_write_done, xt_rsc_1_22_RREADY, xt_rsc_1_22_RVALID,
      xt_rsc_1_22_RUSER, xt_rsc_1_22_RLAST, xt_rsc_1_22_RRESP, xt_rsc_1_22_RDATA,
      xt_rsc_1_22_RID, xt_rsc_1_22_ARREADY, xt_rsc_1_22_ARVALID, xt_rsc_1_22_ARUSER,
      xt_rsc_1_22_ARREGION, xt_rsc_1_22_ARQOS, xt_rsc_1_22_ARPROT, xt_rsc_1_22_ARCACHE,
      xt_rsc_1_22_ARLOCK, xt_rsc_1_22_ARBURST, xt_rsc_1_22_ARSIZE, xt_rsc_1_22_ARLEN,
      xt_rsc_1_22_ARADDR, xt_rsc_1_22_ARID, xt_rsc_1_22_BREADY, xt_rsc_1_22_BVALID,
      xt_rsc_1_22_BUSER, xt_rsc_1_22_BRESP, xt_rsc_1_22_BID, xt_rsc_1_22_WREADY,
      xt_rsc_1_22_WVALID, xt_rsc_1_22_WUSER, xt_rsc_1_22_WLAST, xt_rsc_1_22_WSTRB,
      xt_rsc_1_22_WDATA, xt_rsc_1_22_AWREADY, xt_rsc_1_22_AWVALID, xt_rsc_1_22_AWUSER,
      xt_rsc_1_22_AWREGION, xt_rsc_1_22_AWQOS, xt_rsc_1_22_AWPROT, xt_rsc_1_22_AWCACHE,
      xt_rsc_1_22_AWLOCK, xt_rsc_1_22_AWBURST, xt_rsc_1_22_AWSIZE, xt_rsc_1_22_AWLEN,
      xt_rsc_1_22_AWADDR, xt_rsc_1_22_AWID, core_wen, xt_rsc_1_22_i_oswt, xt_rsc_1_22_i_wen_comp,
      xt_rsc_1_22_i_oswt_1, xt_rsc_1_22_i_wen_comp_1, xt_rsc_1_22_i_s_raddr_core,
      xt_rsc_1_22_i_s_waddr_core, xt_rsc_1_22_i_s_din_mxwt, xt_rsc_1_22_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_22_s_tdone;
  input xt_rsc_1_22_tr_write_done;
  input xt_rsc_1_22_RREADY;
  output xt_rsc_1_22_RVALID;
  output xt_rsc_1_22_RUSER;
  output xt_rsc_1_22_RLAST;
  output [1:0] xt_rsc_1_22_RRESP;
  output [31:0] xt_rsc_1_22_RDATA;
  output xt_rsc_1_22_RID;
  output xt_rsc_1_22_ARREADY;
  input xt_rsc_1_22_ARVALID;
  input xt_rsc_1_22_ARUSER;
  input [3:0] xt_rsc_1_22_ARREGION;
  input [3:0] xt_rsc_1_22_ARQOS;
  input [2:0] xt_rsc_1_22_ARPROT;
  input [3:0] xt_rsc_1_22_ARCACHE;
  input xt_rsc_1_22_ARLOCK;
  input [1:0] xt_rsc_1_22_ARBURST;
  input [2:0] xt_rsc_1_22_ARSIZE;
  input [7:0] xt_rsc_1_22_ARLEN;
  input [11:0] xt_rsc_1_22_ARADDR;
  input xt_rsc_1_22_ARID;
  input xt_rsc_1_22_BREADY;
  output xt_rsc_1_22_BVALID;
  output xt_rsc_1_22_BUSER;
  output [1:0] xt_rsc_1_22_BRESP;
  output xt_rsc_1_22_BID;
  output xt_rsc_1_22_WREADY;
  input xt_rsc_1_22_WVALID;
  input xt_rsc_1_22_WUSER;
  input xt_rsc_1_22_WLAST;
  input [3:0] xt_rsc_1_22_WSTRB;
  input [31:0] xt_rsc_1_22_WDATA;
  output xt_rsc_1_22_AWREADY;
  input xt_rsc_1_22_AWVALID;
  input xt_rsc_1_22_AWUSER;
  input [3:0] xt_rsc_1_22_AWREGION;
  input [3:0] xt_rsc_1_22_AWQOS;
  input [2:0] xt_rsc_1_22_AWPROT;
  input [3:0] xt_rsc_1_22_AWCACHE;
  input xt_rsc_1_22_AWLOCK;
  input [1:0] xt_rsc_1_22_AWBURST;
  input [2:0] xt_rsc_1_22_AWSIZE;
  input [7:0] xt_rsc_1_22_AWLEN;
  input [11:0] xt_rsc_1_22_AWADDR;
  input xt_rsc_1_22_AWID;
  input core_wen;
  input xt_rsc_1_22_i_oswt;
  output xt_rsc_1_22_i_wen_comp;
  input xt_rsc_1_22_i_oswt_1;
  output xt_rsc_1_22_i_wen_comp_1;
  input [3:0] xt_rsc_1_22_i_s_raddr_core;
  input [3:0] xt_rsc_1_22_i_s_waddr_core;
  output [31:0] xt_rsc_1_22_i_s_din_mxwt;
  input [31:0] xt_rsc_1_22_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_22_i_biwt;
  wire xt_rsc_1_22_i_bdwt;
  wire xt_rsc_1_22_i_bcwt;
  wire xt_rsc_1_22_i_s_re_core_sct;
  wire xt_rsc_1_22_i_biwt_1;
  wire xt_rsc_1_22_i_bdwt_2;
  wire xt_rsc_1_22_i_bcwt_1;
  wire xt_rsc_1_22_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_22_i_s_raddr;
  wire [3:0] xt_rsc_1_22_i_s_waddr;
  wire [31:0] xt_rsc_1_22_i_s_din;
  wire [31:0] xt_rsc_1_22_i_s_dout;
  wire xt_rsc_1_22_i_s_rrdy;
  wire xt_rsc_1_22_i_s_wrdy;
  wire xt_rsc_1_22_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_22_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_22_AWID),
      .AWADDR(xt_rsc_1_22_AWADDR),
      .AWLEN(xt_rsc_1_22_AWLEN),
      .AWSIZE(xt_rsc_1_22_AWSIZE),
      .AWBURST(xt_rsc_1_22_AWBURST),
      .AWLOCK(xt_rsc_1_22_AWLOCK),
      .AWCACHE(xt_rsc_1_22_AWCACHE),
      .AWPROT(xt_rsc_1_22_AWPROT),
      .AWQOS(xt_rsc_1_22_AWQOS),
      .AWREGION(xt_rsc_1_22_AWREGION),
      .AWUSER(xt_rsc_1_22_AWUSER),
      .AWVALID(xt_rsc_1_22_AWVALID),
      .AWREADY(xt_rsc_1_22_AWREADY),
      .WDATA(xt_rsc_1_22_WDATA),
      .WSTRB(xt_rsc_1_22_WSTRB),
      .WLAST(xt_rsc_1_22_WLAST),
      .WUSER(xt_rsc_1_22_WUSER),
      .WVALID(xt_rsc_1_22_WVALID),
      .WREADY(xt_rsc_1_22_WREADY),
      .BID(xt_rsc_1_22_BID),
      .BRESP(xt_rsc_1_22_BRESP),
      .BUSER(xt_rsc_1_22_BUSER),
      .BVALID(xt_rsc_1_22_BVALID),
      .BREADY(xt_rsc_1_22_BREADY),
      .ARID(xt_rsc_1_22_ARID),
      .ARADDR(xt_rsc_1_22_ARADDR),
      .ARLEN(xt_rsc_1_22_ARLEN),
      .ARSIZE(xt_rsc_1_22_ARSIZE),
      .ARBURST(xt_rsc_1_22_ARBURST),
      .ARLOCK(xt_rsc_1_22_ARLOCK),
      .ARCACHE(xt_rsc_1_22_ARCACHE),
      .ARPROT(xt_rsc_1_22_ARPROT),
      .ARQOS(xt_rsc_1_22_ARQOS),
      .ARREGION(xt_rsc_1_22_ARREGION),
      .ARUSER(xt_rsc_1_22_ARUSER),
      .ARVALID(xt_rsc_1_22_ARVALID),
      .ARREADY(xt_rsc_1_22_ARREADY),
      .RID(xt_rsc_1_22_RID),
      .RDATA(xt_rsc_1_22_RDATA),
      .RRESP(xt_rsc_1_22_RRESP),
      .RLAST(xt_rsc_1_22_RLAST),
      .RUSER(xt_rsc_1_22_RUSER),
      .RVALID(xt_rsc_1_22_RVALID),
      .RREADY(xt_rsc_1_22_RREADY),
      .s_re(xt_rsc_1_22_i_s_re_core_sct),
      .s_we(xt_rsc_1_22_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_22_i_s_raddr),
      .s_waddr(xt_rsc_1_22_i_s_waddr),
      .s_din(xt_rsc_1_22_i_s_din),
      .s_dout(xt_rsc_1_22_i_s_dout),
      .s_rrdy(xt_rsc_1_22_i_s_rrdy),
      .s_wrdy(xt_rsc_1_22_i_s_wrdy),
      .is_idle(xt_rsc_1_22_is_idle_1),
      .tr_write_done(xt_rsc_1_22_tr_write_done),
      .s_tdone(xt_rsc_1_22_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_22_i_xt_rsc_1_22_wait_ctrl peaseNTT_core_xt_rsc_1_22_i_xt_rsc_1_22_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_22_i_oswt(xt_rsc_1_22_i_oswt),
      .xt_rsc_1_22_i_oswt_1(xt_rsc_1_22_i_oswt_1),
      .xt_rsc_1_22_i_biwt(xt_rsc_1_22_i_biwt),
      .xt_rsc_1_22_i_bdwt(xt_rsc_1_22_i_bdwt),
      .xt_rsc_1_22_i_bcwt(xt_rsc_1_22_i_bcwt),
      .xt_rsc_1_22_i_s_re_core_sct(xt_rsc_1_22_i_s_re_core_sct),
      .xt_rsc_1_22_i_biwt_1(xt_rsc_1_22_i_biwt_1),
      .xt_rsc_1_22_i_bdwt_2(xt_rsc_1_22_i_bdwt_2),
      .xt_rsc_1_22_i_bcwt_1(xt_rsc_1_22_i_bcwt_1),
      .xt_rsc_1_22_i_s_we_core_sct(xt_rsc_1_22_i_s_we_core_sct),
      .xt_rsc_1_22_i_s_rrdy(xt_rsc_1_22_i_s_rrdy),
      .xt_rsc_1_22_i_s_wrdy(xt_rsc_1_22_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_22_i_xt_rsc_1_22_wait_dp peaseNTT_core_xt_rsc_1_22_i_xt_rsc_1_22_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_22_i_oswt(xt_rsc_1_22_i_oswt),
      .xt_rsc_1_22_i_wen_comp(xt_rsc_1_22_i_wen_comp),
      .xt_rsc_1_22_i_oswt_1(xt_rsc_1_22_i_oswt_1),
      .xt_rsc_1_22_i_wen_comp_1(xt_rsc_1_22_i_wen_comp_1),
      .xt_rsc_1_22_i_s_raddr_core(xt_rsc_1_22_i_s_raddr_core),
      .xt_rsc_1_22_i_s_waddr_core(xt_rsc_1_22_i_s_waddr_core),
      .xt_rsc_1_22_i_s_din_mxwt(xt_rsc_1_22_i_s_din_mxwt),
      .xt_rsc_1_22_i_s_dout_core(xt_rsc_1_22_i_s_dout_core),
      .xt_rsc_1_22_i_biwt(xt_rsc_1_22_i_biwt),
      .xt_rsc_1_22_i_bdwt(xt_rsc_1_22_i_bdwt),
      .xt_rsc_1_22_i_bcwt(xt_rsc_1_22_i_bcwt),
      .xt_rsc_1_22_i_biwt_1(xt_rsc_1_22_i_biwt_1),
      .xt_rsc_1_22_i_bdwt_2(xt_rsc_1_22_i_bdwt_2),
      .xt_rsc_1_22_i_bcwt_1(xt_rsc_1_22_i_bcwt_1),
      .xt_rsc_1_22_i_s_raddr(xt_rsc_1_22_i_s_raddr),
      .xt_rsc_1_22_i_s_raddr_core_sct(xt_rsc_1_22_i_s_re_core_sct),
      .xt_rsc_1_22_i_s_waddr(xt_rsc_1_22_i_s_waddr),
      .xt_rsc_1_22_i_s_waddr_core_sct(xt_rsc_1_22_i_s_we_core_sct),
      .xt_rsc_1_22_i_s_din(xt_rsc_1_22_i_s_din),
      .xt_rsc_1_22_i_s_dout(xt_rsc_1_22_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_21_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_21_i (
  clk, rst, xt_rsc_1_21_s_tdone, xt_rsc_1_21_tr_write_done, xt_rsc_1_21_RREADY, xt_rsc_1_21_RVALID,
      xt_rsc_1_21_RUSER, xt_rsc_1_21_RLAST, xt_rsc_1_21_RRESP, xt_rsc_1_21_RDATA,
      xt_rsc_1_21_RID, xt_rsc_1_21_ARREADY, xt_rsc_1_21_ARVALID, xt_rsc_1_21_ARUSER,
      xt_rsc_1_21_ARREGION, xt_rsc_1_21_ARQOS, xt_rsc_1_21_ARPROT, xt_rsc_1_21_ARCACHE,
      xt_rsc_1_21_ARLOCK, xt_rsc_1_21_ARBURST, xt_rsc_1_21_ARSIZE, xt_rsc_1_21_ARLEN,
      xt_rsc_1_21_ARADDR, xt_rsc_1_21_ARID, xt_rsc_1_21_BREADY, xt_rsc_1_21_BVALID,
      xt_rsc_1_21_BUSER, xt_rsc_1_21_BRESP, xt_rsc_1_21_BID, xt_rsc_1_21_WREADY,
      xt_rsc_1_21_WVALID, xt_rsc_1_21_WUSER, xt_rsc_1_21_WLAST, xt_rsc_1_21_WSTRB,
      xt_rsc_1_21_WDATA, xt_rsc_1_21_AWREADY, xt_rsc_1_21_AWVALID, xt_rsc_1_21_AWUSER,
      xt_rsc_1_21_AWREGION, xt_rsc_1_21_AWQOS, xt_rsc_1_21_AWPROT, xt_rsc_1_21_AWCACHE,
      xt_rsc_1_21_AWLOCK, xt_rsc_1_21_AWBURST, xt_rsc_1_21_AWSIZE, xt_rsc_1_21_AWLEN,
      xt_rsc_1_21_AWADDR, xt_rsc_1_21_AWID, core_wen, xt_rsc_1_21_i_oswt, xt_rsc_1_21_i_wen_comp,
      xt_rsc_1_21_i_oswt_1, xt_rsc_1_21_i_wen_comp_1, xt_rsc_1_21_i_s_raddr_core,
      xt_rsc_1_21_i_s_waddr_core, xt_rsc_1_21_i_s_din_mxwt, xt_rsc_1_21_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_21_s_tdone;
  input xt_rsc_1_21_tr_write_done;
  input xt_rsc_1_21_RREADY;
  output xt_rsc_1_21_RVALID;
  output xt_rsc_1_21_RUSER;
  output xt_rsc_1_21_RLAST;
  output [1:0] xt_rsc_1_21_RRESP;
  output [31:0] xt_rsc_1_21_RDATA;
  output xt_rsc_1_21_RID;
  output xt_rsc_1_21_ARREADY;
  input xt_rsc_1_21_ARVALID;
  input xt_rsc_1_21_ARUSER;
  input [3:0] xt_rsc_1_21_ARREGION;
  input [3:0] xt_rsc_1_21_ARQOS;
  input [2:0] xt_rsc_1_21_ARPROT;
  input [3:0] xt_rsc_1_21_ARCACHE;
  input xt_rsc_1_21_ARLOCK;
  input [1:0] xt_rsc_1_21_ARBURST;
  input [2:0] xt_rsc_1_21_ARSIZE;
  input [7:0] xt_rsc_1_21_ARLEN;
  input [11:0] xt_rsc_1_21_ARADDR;
  input xt_rsc_1_21_ARID;
  input xt_rsc_1_21_BREADY;
  output xt_rsc_1_21_BVALID;
  output xt_rsc_1_21_BUSER;
  output [1:0] xt_rsc_1_21_BRESP;
  output xt_rsc_1_21_BID;
  output xt_rsc_1_21_WREADY;
  input xt_rsc_1_21_WVALID;
  input xt_rsc_1_21_WUSER;
  input xt_rsc_1_21_WLAST;
  input [3:0] xt_rsc_1_21_WSTRB;
  input [31:0] xt_rsc_1_21_WDATA;
  output xt_rsc_1_21_AWREADY;
  input xt_rsc_1_21_AWVALID;
  input xt_rsc_1_21_AWUSER;
  input [3:0] xt_rsc_1_21_AWREGION;
  input [3:0] xt_rsc_1_21_AWQOS;
  input [2:0] xt_rsc_1_21_AWPROT;
  input [3:0] xt_rsc_1_21_AWCACHE;
  input xt_rsc_1_21_AWLOCK;
  input [1:0] xt_rsc_1_21_AWBURST;
  input [2:0] xt_rsc_1_21_AWSIZE;
  input [7:0] xt_rsc_1_21_AWLEN;
  input [11:0] xt_rsc_1_21_AWADDR;
  input xt_rsc_1_21_AWID;
  input core_wen;
  input xt_rsc_1_21_i_oswt;
  output xt_rsc_1_21_i_wen_comp;
  input xt_rsc_1_21_i_oswt_1;
  output xt_rsc_1_21_i_wen_comp_1;
  input [3:0] xt_rsc_1_21_i_s_raddr_core;
  input [3:0] xt_rsc_1_21_i_s_waddr_core;
  output [31:0] xt_rsc_1_21_i_s_din_mxwt;
  input [31:0] xt_rsc_1_21_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_21_i_biwt;
  wire xt_rsc_1_21_i_bdwt;
  wire xt_rsc_1_21_i_bcwt;
  wire xt_rsc_1_21_i_s_re_core_sct;
  wire xt_rsc_1_21_i_biwt_1;
  wire xt_rsc_1_21_i_bdwt_2;
  wire xt_rsc_1_21_i_bcwt_1;
  wire xt_rsc_1_21_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_21_i_s_raddr;
  wire [3:0] xt_rsc_1_21_i_s_waddr;
  wire [31:0] xt_rsc_1_21_i_s_din;
  wire [31:0] xt_rsc_1_21_i_s_dout;
  wire xt_rsc_1_21_i_s_rrdy;
  wire xt_rsc_1_21_i_s_wrdy;
  wire xt_rsc_1_21_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_21_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_21_AWID),
      .AWADDR(xt_rsc_1_21_AWADDR),
      .AWLEN(xt_rsc_1_21_AWLEN),
      .AWSIZE(xt_rsc_1_21_AWSIZE),
      .AWBURST(xt_rsc_1_21_AWBURST),
      .AWLOCK(xt_rsc_1_21_AWLOCK),
      .AWCACHE(xt_rsc_1_21_AWCACHE),
      .AWPROT(xt_rsc_1_21_AWPROT),
      .AWQOS(xt_rsc_1_21_AWQOS),
      .AWREGION(xt_rsc_1_21_AWREGION),
      .AWUSER(xt_rsc_1_21_AWUSER),
      .AWVALID(xt_rsc_1_21_AWVALID),
      .AWREADY(xt_rsc_1_21_AWREADY),
      .WDATA(xt_rsc_1_21_WDATA),
      .WSTRB(xt_rsc_1_21_WSTRB),
      .WLAST(xt_rsc_1_21_WLAST),
      .WUSER(xt_rsc_1_21_WUSER),
      .WVALID(xt_rsc_1_21_WVALID),
      .WREADY(xt_rsc_1_21_WREADY),
      .BID(xt_rsc_1_21_BID),
      .BRESP(xt_rsc_1_21_BRESP),
      .BUSER(xt_rsc_1_21_BUSER),
      .BVALID(xt_rsc_1_21_BVALID),
      .BREADY(xt_rsc_1_21_BREADY),
      .ARID(xt_rsc_1_21_ARID),
      .ARADDR(xt_rsc_1_21_ARADDR),
      .ARLEN(xt_rsc_1_21_ARLEN),
      .ARSIZE(xt_rsc_1_21_ARSIZE),
      .ARBURST(xt_rsc_1_21_ARBURST),
      .ARLOCK(xt_rsc_1_21_ARLOCK),
      .ARCACHE(xt_rsc_1_21_ARCACHE),
      .ARPROT(xt_rsc_1_21_ARPROT),
      .ARQOS(xt_rsc_1_21_ARQOS),
      .ARREGION(xt_rsc_1_21_ARREGION),
      .ARUSER(xt_rsc_1_21_ARUSER),
      .ARVALID(xt_rsc_1_21_ARVALID),
      .ARREADY(xt_rsc_1_21_ARREADY),
      .RID(xt_rsc_1_21_RID),
      .RDATA(xt_rsc_1_21_RDATA),
      .RRESP(xt_rsc_1_21_RRESP),
      .RLAST(xt_rsc_1_21_RLAST),
      .RUSER(xt_rsc_1_21_RUSER),
      .RVALID(xt_rsc_1_21_RVALID),
      .RREADY(xt_rsc_1_21_RREADY),
      .s_re(xt_rsc_1_21_i_s_re_core_sct),
      .s_we(xt_rsc_1_21_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_21_i_s_raddr),
      .s_waddr(xt_rsc_1_21_i_s_waddr),
      .s_din(xt_rsc_1_21_i_s_din),
      .s_dout(xt_rsc_1_21_i_s_dout),
      .s_rrdy(xt_rsc_1_21_i_s_rrdy),
      .s_wrdy(xt_rsc_1_21_i_s_wrdy),
      .is_idle(xt_rsc_1_21_is_idle_1),
      .tr_write_done(xt_rsc_1_21_tr_write_done),
      .s_tdone(xt_rsc_1_21_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_21_i_xt_rsc_1_21_wait_ctrl peaseNTT_core_xt_rsc_1_21_i_xt_rsc_1_21_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_21_i_oswt(xt_rsc_1_21_i_oswt),
      .xt_rsc_1_21_i_oswt_1(xt_rsc_1_21_i_oswt_1),
      .xt_rsc_1_21_i_biwt(xt_rsc_1_21_i_biwt),
      .xt_rsc_1_21_i_bdwt(xt_rsc_1_21_i_bdwt),
      .xt_rsc_1_21_i_bcwt(xt_rsc_1_21_i_bcwt),
      .xt_rsc_1_21_i_s_re_core_sct(xt_rsc_1_21_i_s_re_core_sct),
      .xt_rsc_1_21_i_biwt_1(xt_rsc_1_21_i_biwt_1),
      .xt_rsc_1_21_i_bdwt_2(xt_rsc_1_21_i_bdwt_2),
      .xt_rsc_1_21_i_bcwt_1(xt_rsc_1_21_i_bcwt_1),
      .xt_rsc_1_21_i_s_we_core_sct(xt_rsc_1_21_i_s_we_core_sct),
      .xt_rsc_1_21_i_s_rrdy(xt_rsc_1_21_i_s_rrdy),
      .xt_rsc_1_21_i_s_wrdy(xt_rsc_1_21_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_21_i_xt_rsc_1_21_wait_dp peaseNTT_core_xt_rsc_1_21_i_xt_rsc_1_21_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_21_i_oswt(xt_rsc_1_21_i_oswt),
      .xt_rsc_1_21_i_wen_comp(xt_rsc_1_21_i_wen_comp),
      .xt_rsc_1_21_i_oswt_1(xt_rsc_1_21_i_oswt_1),
      .xt_rsc_1_21_i_wen_comp_1(xt_rsc_1_21_i_wen_comp_1),
      .xt_rsc_1_21_i_s_raddr_core(xt_rsc_1_21_i_s_raddr_core),
      .xt_rsc_1_21_i_s_waddr_core(xt_rsc_1_21_i_s_waddr_core),
      .xt_rsc_1_21_i_s_din_mxwt(xt_rsc_1_21_i_s_din_mxwt),
      .xt_rsc_1_21_i_s_dout_core(xt_rsc_1_21_i_s_dout_core),
      .xt_rsc_1_21_i_biwt(xt_rsc_1_21_i_biwt),
      .xt_rsc_1_21_i_bdwt(xt_rsc_1_21_i_bdwt),
      .xt_rsc_1_21_i_bcwt(xt_rsc_1_21_i_bcwt),
      .xt_rsc_1_21_i_biwt_1(xt_rsc_1_21_i_biwt_1),
      .xt_rsc_1_21_i_bdwt_2(xt_rsc_1_21_i_bdwt_2),
      .xt_rsc_1_21_i_bcwt_1(xt_rsc_1_21_i_bcwt_1),
      .xt_rsc_1_21_i_s_raddr(xt_rsc_1_21_i_s_raddr),
      .xt_rsc_1_21_i_s_raddr_core_sct(xt_rsc_1_21_i_s_re_core_sct),
      .xt_rsc_1_21_i_s_waddr(xt_rsc_1_21_i_s_waddr),
      .xt_rsc_1_21_i_s_waddr_core_sct(xt_rsc_1_21_i_s_we_core_sct),
      .xt_rsc_1_21_i_s_din(xt_rsc_1_21_i_s_din),
      .xt_rsc_1_21_i_s_dout(xt_rsc_1_21_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_20_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_20_i (
  clk, rst, xt_rsc_1_20_s_tdone, xt_rsc_1_20_tr_write_done, xt_rsc_1_20_RREADY, xt_rsc_1_20_RVALID,
      xt_rsc_1_20_RUSER, xt_rsc_1_20_RLAST, xt_rsc_1_20_RRESP, xt_rsc_1_20_RDATA,
      xt_rsc_1_20_RID, xt_rsc_1_20_ARREADY, xt_rsc_1_20_ARVALID, xt_rsc_1_20_ARUSER,
      xt_rsc_1_20_ARREGION, xt_rsc_1_20_ARQOS, xt_rsc_1_20_ARPROT, xt_rsc_1_20_ARCACHE,
      xt_rsc_1_20_ARLOCK, xt_rsc_1_20_ARBURST, xt_rsc_1_20_ARSIZE, xt_rsc_1_20_ARLEN,
      xt_rsc_1_20_ARADDR, xt_rsc_1_20_ARID, xt_rsc_1_20_BREADY, xt_rsc_1_20_BVALID,
      xt_rsc_1_20_BUSER, xt_rsc_1_20_BRESP, xt_rsc_1_20_BID, xt_rsc_1_20_WREADY,
      xt_rsc_1_20_WVALID, xt_rsc_1_20_WUSER, xt_rsc_1_20_WLAST, xt_rsc_1_20_WSTRB,
      xt_rsc_1_20_WDATA, xt_rsc_1_20_AWREADY, xt_rsc_1_20_AWVALID, xt_rsc_1_20_AWUSER,
      xt_rsc_1_20_AWREGION, xt_rsc_1_20_AWQOS, xt_rsc_1_20_AWPROT, xt_rsc_1_20_AWCACHE,
      xt_rsc_1_20_AWLOCK, xt_rsc_1_20_AWBURST, xt_rsc_1_20_AWSIZE, xt_rsc_1_20_AWLEN,
      xt_rsc_1_20_AWADDR, xt_rsc_1_20_AWID, core_wen, xt_rsc_1_20_i_oswt, xt_rsc_1_20_i_wen_comp,
      xt_rsc_1_20_i_oswt_1, xt_rsc_1_20_i_wen_comp_1, xt_rsc_1_20_i_s_raddr_core,
      xt_rsc_1_20_i_s_waddr_core, xt_rsc_1_20_i_s_din_mxwt, xt_rsc_1_20_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_20_s_tdone;
  input xt_rsc_1_20_tr_write_done;
  input xt_rsc_1_20_RREADY;
  output xt_rsc_1_20_RVALID;
  output xt_rsc_1_20_RUSER;
  output xt_rsc_1_20_RLAST;
  output [1:0] xt_rsc_1_20_RRESP;
  output [31:0] xt_rsc_1_20_RDATA;
  output xt_rsc_1_20_RID;
  output xt_rsc_1_20_ARREADY;
  input xt_rsc_1_20_ARVALID;
  input xt_rsc_1_20_ARUSER;
  input [3:0] xt_rsc_1_20_ARREGION;
  input [3:0] xt_rsc_1_20_ARQOS;
  input [2:0] xt_rsc_1_20_ARPROT;
  input [3:0] xt_rsc_1_20_ARCACHE;
  input xt_rsc_1_20_ARLOCK;
  input [1:0] xt_rsc_1_20_ARBURST;
  input [2:0] xt_rsc_1_20_ARSIZE;
  input [7:0] xt_rsc_1_20_ARLEN;
  input [11:0] xt_rsc_1_20_ARADDR;
  input xt_rsc_1_20_ARID;
  input xt_rsc_1_20_BREADY;
  output xt_rsc_1_20_BVALID;
  output xt_rsc_1_20_BUSER;
  output [1:0] xt_rsc_1_20_BRESP;
  output xt_rsc_1_20_BID;
  output xt_rsc_1_20_WREADY;
  input xt_rsc_1_20_WVALID;
  input xt_rsc_1_20_WUSER;
  input xt_rsc_1_20_WLAST;
  input [3:0] xt_rsc_1_20_WSTRB;
  input [31:0] xt_rsc_1_20_WDATA;
  output xt_rsc_1_20_AWREADY;
  input xt_rsc_1_20_AWVALID;
  input xt_rsc_1_20_AWUSER;
  input [3:0] xt_rsc_1_20_AWREGION;
  input [3:0] xt_rsc_1_20_AWQOS;
  input [2:0] xt_rsc_1_20_AWPROT;
  input [3:0] xt_rsc_1_20_AWCACHE;
  input xt_rsc_1_20_AWLOCK;
  input [1:0] xt_rsc_1_20_AWBURST;
  input [2:0] xt_rsc_1_20_AWSIZE;
  input [7:0] xt_rsc_1_20_AWLEN;
  input [11:0] xt_rsc_1_20_AWADDR;
  input xt_rsc_1_20_AWID;
  input core_wen;
  input xt_rsc_1_20_i_oswt;
  output xt_rsc_1_20_i_wen_comp;
  input xt_rsc_1_20_i_oswt_1;
  output xt_rsc_1_20_i_wen_comp_1;
  input [3:0] xt_rsc_1_20_i_s_raddr_core;
  input [3:0] xt_rsc_1_20_i_s_waddr_core;
  output [31:0] xt_rsc_1_20_i_s_din_mxwt;
  input [31:0] xt_rsc_1_20_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_20_i_biwt;
  wire xt_rsc_1_20_i_bdwt;
  wire xt_rsc_1_20_i_bcwt;
  wire xt_rsc_1_20_i_s_re_core_sct;
  wire xt_rsc_1_20_i_biwt_1;
  wire xt_rsc_1_20_i_bdwt_2;
  wire xt_rsc_1_20_i_bcwt_1;
  wire xt_rsc_1_20_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_20_i_s_raddr;
  wire [3:0] xt_rsc_1_20_i_s_waddr;
  wire [31:0] xt_rsc_1_20_i_s_din;
  wire [31:0] xt_rsc_1_20_i_s_dout;
  wire xt_rsc_1_20_i_s_rrdy;
  wire xt_rsc_1_20_i_s_wrdy;
  wire xt_rsc_1_20_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_20_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_20_AWID),
      .AWADDR(xt_rsc_1_20_AWADDR),
      .AWLEN(xt_rsc_1_20_AWLEN),
      .AWSIZE(xt_rsc_1_20_AWSIZE),
      .AWBURST(xt_rsc_1_20_AWBURST),
      .AWLOCK(xt_rsc_1_20_AWLOCK),
      .AWCACHE(xt_rsc_1_20_AWCACHE),
      .AWPROT(xt_rsc_1_20_AWPROT),
      .AWQOS(xt_rsc_1_20_AWQOS),
      .AWREGION(xt_rsc_1_20_AWREGION),
      .AWUSER(xt_rsc_1_20_AWUSER),
      .AWVALID(xt_rsc_1_20_AWVALID),
      .AWREADY(xt_rsc_1_20_AWREADY),
      .WDATA(xt_rsc_1_20_WDATA),
      .WSTRB(xt_rsc_1_20_WSTRB),
      .WLAST(xt_rsc_1_20_WLAST),
      .WUSER(xt_rsc_1_20_WUSER),
      .WVALID(xt_rsc_1_20_WVALID),
      .WREADY(xt_rsc_1_20_WREADY),
      .BID(xt_rsc_1_20_BID),
      .BRESP(xt_rsc_1_20_BRESP),
      .BUSER(xt_rsc_1_20_BUSER),
      .BVALID(xt_rsc_1_20_BVALID),
      .BREADY(xt_rsc_1_20_BREADY),
      .ARID(xt_rsc_1_20_ARID),
      .ARADDR(xt_rsc_1_20_ARADDR),
      .ARLEN(xt_rsc_1_20_ARLEN),
      .ARSIZE(xt_rsc_1_20_ARSIZE),
      .ARBURST(xt_rsc_1_20_ARBURST),
      .ARLOCK(xt_rsc_1_20_ARLOCK),
      .ARCACHE(xt_rsc_1_20_ARCACHE),
      .ARPROT(xt_rsc_1_20_ARPROT),
      .ARQOS(xt_rsc_1_20_ARQOS),
      .ARREGION(xt_rsc_1_20_ARREGION),
      .ARUSER(xt_rsc_1_20_ARUSER),
      .ARVALID(xt_rsc_1_20_ARVALID),
      .ARREADY(xt_rsc_1_20_ARREADY),
      .RID(xt_rsc_1_20_RID),
      .RDATA(xt_rsc_1_20_RDATA),
      .RRESP(xt_rsc_1_20_RRESP),
      .RLAST(xt_rsc_1_20_RLAST),
      .RUSER(xt_rsc_1_20_RUSER),
      .RVALID(xt_rsc_1_20_RVALID),
      .RREADY(xt_rsc_1_20_RREADY),
      .s_re(xt_rsc_1_20_i_s_re_core_sct),
      .s_we(xt_rsc_1_20_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_20_i_s_raddr),
      .s_waddr(xt_rsc_1_20_i_s_waddr),
      .s_din(xt_rsc_1_20_i_s_din),
      .s_dout(xt_rsc_1_20_i_s_dout),
      .s_rrdy(xt_rsc_1_20_i_s_rrdy),
      .s_wrdy(xt_rsc_1_20_i_s_wrdy),
      .is_idle(xt_rsc_1_20_is_idle_1),
      .tr_write_done(xt_rsc_1_20_tr_write_done),
      .s_tdone(xt_rsc_1_20_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_20_i_xt_rsc_1_20_wait_ctrl peaseNTT_core_xt_rsc_1_20_i_xt_rsc_1_20_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_20_i_oswt(xt_rsc_1_20_i_oswt),
      .xt_rsc_1_20_i_oswt_1(xt_rsc_1_20_i_oswt_1),
      .xt_rsc_1_20_i_biwt(xt_rsc_1_20_i_biwt),
      .xt_rsc_1_20_i_bdwt(xt_rsc_1_20_i_bdwt),
      .xt_rsc_1_20_i_bcwt(xt_rsc_1_20_i_bcwt),
      .xt_rsc_1_20_i_s_re_core_sct(xt_rsc_1_20_i_s_re_core_sct),
      .xt_rsc_1_20_i_biwt_1(xt_rsc_1_20_i_biwt_1),
      .xt_rsc_1_20_i_bdwt_2(xt_rsc_1_20_i_bdwt_2),
      .xt_rsc_1_20_i_bcwt_1(xt_rsc_1_20_i_bcwt_1),
      .xt_rsc_1_20_i_s_we_core_sct(xt_rsc_1_20_i_s_we_core_sct),
      .xt_rsc_1_20_i_s_rrdy(xt_rsc_1_20_i_s_rrdy),
      .xt_rsc_1_20_i_s_wrdy(xt_rsc_1_20_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_20_i_xt_rsc_1_20_wait_dp peaseNTT_core_xt_rsc_1_20_i_xt_rsc_1_20_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_20_i_oswt(xt_rsc_1_20_i_oswt),
      .xt_rsc_1_20_i_wen_comp(xt_rsc_1_20_i_wen_comp),
      .xt_rsc_1_20_i_oswt_1(xt_rsc_1_20_i_oswt_1),
      .xt_rsc_1_20_i_wen_comp_1(xt_rsc_1_20_i_wen_comp_1),
      .xt_rsc_1_20_i_s_raddr_core(xt_rsc_1_20_i_s_raddr_core),
      .xt_rsc_1_20_i_s_waddr_core(xt_rsc_1_20_i_s_waddr_core),
      .xt_rsc_1_20_i_s_din_mxwt(xt_rsc_1_20_i_s_din_mxwt),
      .xt_rsc_1_20_i_s_dout_core(xt_rsc_1_20_i_s_dout_core),
      .xt_rsc_1_20_i_biwt(xt_rsc_1_20_i_biwt),
      .xt_rsc_1_20_i_bdwt(xt_rsc_1_20_i_bdwt),
      .xt_rsc_1_20_i_bcwt(xt_rsc_1_20_i_bcwt),
      .xt_rsc_1_20_i_biwt_1(xt_rsc_1_20_i_biwt_1),
      .xt_rsc_1_20_i_bdwt_2(xt_rsc_1_20_i_bdwt_2),
      .xt_rsc_1_20_i_bcwt_1(xt_rsc_1_20_i_bcwt_1),
      .xt_rsc_1_20_i_s_raddr(xt_rsc_1_20_i_s_raddr),
      .xt_rsc_1_20_i_s_raddr_core_sct(xt_rsc_1_20_i_s_re_core_sct),
      .xt_rsc_1_20_i_s_waddr(xt_rsc_1_20_i_s_waddr),
      .xt_rsc_1_20_i_s_waddr_core_sct(xt_rsc_1_20_i_s_we_core_sct),
      .xt_rsc_1_20_i_s_din(xt_rsc_1_20_i_s_din),
      .xt_rsc_1_20_i_s_dout(xt_rsc_1_20_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_19_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_19_i (
  clk, rst, xt_rsc_1_19_s_tdone, xt_rsc_1_19_tr_write_done, xt_rsc_1_19_RREADY, xt_rsc_1_19_RVALID,
      xt_rsc_1_19_RUSER, xt_rsc_1_19_RLAST, xt_rsc_1_19_RRESP, xt_rsc_1_19_RDATA,
      xt_rsc_1_19_RID, xt_rsc_1_19_ARREADY, xt_rsc_1_19_ARVALID, xt_rsc_1_19_ARUSER,
      xt_rsc_1_19_ARREGION, xt_rsc_1_19_ARQOS, xt_rsc_1_19_ARPROT, xt_rsc_1_19_ARCACHE,
      xt_rsc_1_19_ARLOCK, xt_rsc_1_19_ARBURST, xt_rsc_1_19_ARSIZE, xt_rsc_1_19_ARLEN,
      xt_rsc_1_19_ARADDR, xt_rsc_1_19_ARID, xt_rsc_1_19_BREADY, xt_rsc_1_19_BVALID,
      xt_rsc_1_19_BUSER, xt_rsc_1_19_BRESP, xt_rsc_1_19_BID, xt_rsc_1_19_WREADY,
      xt_rsc_1_19_WVALID, xt_rsc_1_19_WUSER, xt_rsc_1_19_WLAST, xt_rsc_1_19_WSTRB,
      xt_rsc_1_19_WDATA, xt_rsc_1_19_AWREADY, xt_rsc_1_19_AWVALID, xt_rsc_1_19_AWUSER,
      xt_rsc_1_19_AWREGION, xt_rsc_1_19_AWQOS, xt_rsc_1_19_AWPROT, xt_rsc_1_19_AWCACHE,
      xt_rsc_1_19_AWLOCK, xt_rsc_1_19_AWBURST, xt_rsc_1_19_AWSIZE, xt_rsc_1_19_AWLEN,
      xt_rsc_1_19_AWADDR, xt_rsc_1_19_AWID, core_wen, xt_rsc_1_19_i_oswt, xt_rsc_1_19_i_wen_comp,
      xt_rsc_1_19_i_oswt_1, xt_rsc_1_19_i_wen_comp_1, xt_rsc_1_19_i_s_raddr_core,
      xt_rsc_1_19_i_s_waddr_core, xt_rsc_1_19_i_s_din_mxwt, xt_rsc_1_19_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_19_s_tdone;
  input xt_rsc_1_19_tr_write_done;
  input xt_rsc_1_19_RREADY;
  output xt_rsc_1_19_RVALID;
  output xt_rsc_1_19_RUSER;
  output xt_rsc_1_19_RLAST;
  output [1:0] xt_rsc_1_19_RRESP;
  output [31:0] xt_rsc_1_19_RDATA;
  output xt_rsc_1_19_RID;
  output xt_rsc_1_19_ARREADY;
  input xt_rsc_1_19_ARVALID;
  input xt_rsc_1_19_ARUSER;
  input [3:0] xt_rsc_1_19_ARREGION;
  input [3:0] xt_rsc_1_19_ARQOS;
  input [2:0] xt_rsc_1_19_ARPROT;
  input [3:0] xt_rsc_1_19_ARCACHE;
  input xt_rsc_1_19_ARLOCK;
  input [1:0] xt_rsc_1_19_ARBURST;
  input [2:0] xt_rsc_1_19_ARSIZE;
  input [7:0] xt_rsc_1_19_ARLEN;
  input [11:0] xt_rsc_1_19_ARADDR;
  input xt_rsc_1_19_ARID;
  input xt_rsc_1_19_BREADY;
  output xt_rsc_1_19_BVALID;
  output xt_rsc_1_19_BUSER;
  output [1:0] xt_rsc_1_19_BRESP;
  output xt_rsc_1_19_BID;
  output xt_rsc_1_19_WREADY;
  input xt_rsc_1_19_WVALID;
  input xt_rsc_1_19_WUSER;
  input xt_rsc_1_19_WLAST;
  input [3:0] xt_rsc_1_19_WSTRB;
  input [31:0] xt_rsc_1_19_WDATA;
  output xt_rsc_1_19_AWREADY;
  input xt_rsc_1_19_AWVALID;
  input xt_rsc_1_19_AWUSER;
  input [3:0] xt_rsc_1_19_AWREGION;
  input [3:0] xt_rsc_1_19_AWQOS;
  input [2:0] xt_rsc_1_19_AWPROT;
  input [3:0] xt_rsc_1_19_AWCACHE;
  input xt_rsc_1_19_AWLOCK;
  input [1:0] xt_rsc_1_19_AWBURST;
  input [2:0] xt_rsc_1_19_AWSIZE;
  input [7:0] xt_rsc_1_19_AWLEN;
  input [11:0] xt_rsc_1_19_AWADDR;
  input xt_rsc_1_19_AWID;
  input core_wen;
  input xt_rsc_1_19_i_oswt;
  output xt_rsc_1_19_i_wen_comp;
  input xt_rsc_1_19_i_oswt_1;
  output xt_rsc_1_19_i_wen_comp_1;
  input [3:0] xt_rsc_1_19_i_s_raddr_core;
  input [3:0] xt_rsc_1_19_i_s_waddr_core;
  output [31:0] xt_rsc_1_19_i_s_din_mxwt;
  input [31:0] xt_rsc_1_19_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_19_i_biwt;
  wire xt_rsc_1_19_i_bdwt;
  wire xt_rsc_1_19_i_bcwt;
  wire xt_rsc_1_19_i_s_re_core_sct;
  wire xt_rsc_1_19_i_biwt_1;
  wire xt_rsc_1_19_i_bdwt_2;
  wire xt_rsc_1_19_i_bcwt_1;
  wire xt_rsc_1_19_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_19_i_s_raddr;
  wire [3:0] xt_rsc_1_19_i_s_waddr;
  wire [31:0] xt_rsc_1_19_i_s_din;
  wire [31:0] xt_rsc_1_19_i_s_dout;
  wire xt_rsc_1_19_i_s_rrdy;
  wire xt_rsc_1_19_i_s_wrdy;
  wire xt_rsc_1_19_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_19_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_19_AWID),
      .AWADDR(xt_rsc_1_19_AWADDR),
      .AWLEN(xt_rsc_1_19_AWLEN),
      .AWSIZE(xt_rsc_1_19_AWSIZE),
      .AWBURST(xt_rsc_1_19_AWBURST),
      .AWLOCK(xt_rsc_1_19_AWLOCK),
      .AWCACHE(xt_rsc_1_19_AWCACHE),
      .AWPROT(xt_rsc_1_19_AWPROT),
      .AWQOS(xt_rsc_1_19_AWQOS),
      .AWREGION(xt_rsc_1_19_AWREGION),
      .AWUSER(xt_rsc_1_19_AWUSER),
      .AWVALID(xt_rsc_1_19_AWVALID),
      .AWREADY(xt_rsc_1_19_AWREADY),
      .WDATA(xt_rsc_1_19_WDATA),
      .WSTRB(xt_rsc_1_19_WSTRB),
      .WLAST(xt_rsc_1_19_WLAST),
      .WUSER(xt_rsc_1_19_WUSER),
      .WVALID(xt_rsc_1_19_WVALID),
      .WREADY(xt_rsc_1_19_WREADY),
      .BID(xt_rsc_1_19_BID),
      .BRESP(xt_rsc_1_19_BRESP),
      .BUSER(xt_rsc_1_19_BUSER),
      .BVALID(xt_rsc_1_19_BVALID),
      .BREADY(xt_rsc_1_19_BREADY),
      .ARID(xt_rsc_1_19_ARID),
      .ARADDR(xt_rsc_1_19_ARADDR),
      .ARLEN(xt_rsc_1_19_ARLEN),
      .ARSIZE(xt_rsc_1_19_ARSIZE),
      .ARBURST(xt_rsc_1_19_ARBURST),
      .ARLOCK(xt_rsc_1_19_ARLOCK),
      .ARCACHE(xt_rsc_1_19_ARCACHE),
      .ARPROT(xt_rsc_1_19_ARPROT),
      .ARQOS(xt_rsc_1_19_ARQOS),
      .ARREGION(xt_rsc_1_19_ARREGION),
      .ARUSER(xt_rsc_1_19_ARUSER),
      .ARVALID(xt_rsc_1_19_ARVALID),
      .ARREADY(xt_rsc_1_19_ARREADY),
      .RID(xt_rsc_1_19_RID),
      .RDATA(xt_rsc_1_19_RDATA),
      .RRESP(xt_rsc_1_19_RRESP),
      .RLAST(xt_rsc_1_19_RLAST),
      .RUSER(xt_rsc_1_19_RUSER),
      .RVALID(xt_rsc_1_19_RVALID),
      .RREADY(xt_rsc_1_19_RREADY),
      .s_re(xt_rsc_1_19_i_s_re_core_sct),
      .s_we(xt_rsc_1_19_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_19_i_s_raddr),
      .s_waddr(xt_rsc_1_19_i_s_waddr),
      .s_din(xt_rsc_1_19_i_s_din),
      .s_dout(xt_rsc_1_19_i_s_dout),
      .s_rrdy(xt_rsc_1_19_i_s_rrdy),
      .s_wrdy(xt_rsc_1_19_i_s_wrdy),
      .is_idle(xt_rsc_1_19_is_idle_1),
      .tr_write_done(xt_rsc_1_19_tr_write_done),
      .s_tdone(xt_rsc_1_19_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_19_i_xt_rsc_1_19_wait_ctrl peaseNTT_core_xt_rsc_1_19_i_xt_rsc_1_19_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_19_i_oswt(xt_rsc_1_19_i_oswt),
      .xt_rsc_1_19_i_oswt_1(xt_rsc_1_19_i_oswt_1),
      .xt_rsc_1_19_i_biwt(xt_rsc_1_19_i_biwt),
      .xt_rsc_1_19_i_bdwt(xt_rsc_1_19_i_bdwt),
      .xt_rsc_1_19_i_bcwt(xt_rsc_1_19_i_bcwt),
      .xt_rsc_1_19_i_s_re_core_sct(xt_rsc_1_19_i_s_re_core_sct),
      .xt_rsc_1_19_i_biwt_1(xt_rsc_1_19_i_biwt_1),
      .xt_rsc_1_19_i_bdwt_2(xt_rsc_1_19_i_bdwt_2),
      .xt_rsc_1_19_i_bcwt_1(xt_rsc_1_19_i_bcwt_1),
      .xt_rsc_1_19_i_s_we_core_sct(xt_rsc_1_19_i_s_we_core_sct),
      .xt_rsc_1_19_i_s_rrdy(xt_rsc_1_19_i_s_rrdy),
      .xt_rsc_1_19_i_s_wrdy(xt_rsc_1_19_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_19_i_xt_rsc_1_19_wait_dp peaseNTT_core_xt_rsc_1_19_i_xt_rsc_1_19_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_19_i_oswt(xt_rsc_1_19_i_oswt),
      .xt_rsc_1_19_i_wen_comp(xt_rsc_1_19_i_wen_comp),
      .xt_rsc_1_19_i_oswt_1(xt_rsc_1_19_i_oswt_1),
      .xt_rsc_1_19_i_wen_comp_1(xt_rsc_1_19_i_wen_comp_1),
      .xt_rsc_1_19_i_s_raddr_core(xt_rsc_1_19_i_s_raddr_core),
      .xt_rsc_1_19_i_s_waddr_core(xt_rsc_1_19_i_s_waddr_core),
      .xt_rsc_1_19_i_s_din_mxwt(xt_rsc_1_19_i_s_din_mxwt),
      .xt_rsc_1_19_i_s_dout_core(xt_rsc_1_19_i_s_dout_core),
      .xt_rsc_1_19_i_biwt(xt_rsc_1_19_i_biwt),
      .xt_rsc_1_19_i_bdwt(xt_rsc_1_19_i_bdwt),
      .xt_rsc_1_19_i_bcwt(xt_rsc_1_19_i_bcwt),
      .xt_rsc_1_19_i_biwt_1(xt_rsc_1_19_i_biwt_1),
      .xt_rsc_1_19_i_bdwt_2(xt_rsc_1_19_i_bdwt_2),
      .xt_rsc_1_19_i_bcwt_1(xt_rsc_1_19_i_bcwt_1),
      .xt_rsc_1_19_i_s_raddr(xt_rsc_1_19_i_s_raddr),
      .xt_rsc_1_19_i_s_raddr_core_sct(xt_rsc_1_19_i_s_re_core_sct),
      .xt_rsc_1_19_i_s_waddr(xt_rsc_1_19_i_s_waddr),
      .xt_rsc_1_19_i_s_waddr_core_sct(xt_rsc_1_19_i_s_we_core_sct),
      .xt_rsc_1_19_i_s_din(xt_rsc_1_19_i_s_din),
      .xt_rsc_1_19_i_s_dout(xt_rsc_1_19_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_18_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_18_i (
  clk, rst, xt_rsc_1_18_s_tdone, xt_rsc_1_18_tr_write_done, xt_rsc_1_18_RREADY, xt_rsc_1_18_RVALID,
      xt_rsc_1_18_RUSER, xt_rsc_1_18_RLAST, xt_rsc_1_18_RRESP, xt_rsc_1_18_RDATA,
      xt_rsc_1_18_RID, xt_rsc_1_18_ARREADY, xt_rsc_1_18_ARVALID, xt_rsc_1_18_ARUSER,
      xt_rsc_1_18_ARREGION, xt_rsc_1_18_ARQOS, xt_rsc_1_18_ARPROT, xt_rsc_1_18_ARCACHE,
      xt_rsc_1_18_ARLOCK, xt_rsc_1_18_ARBURST, xt_rsc_1_18_ARSIZE, xt_rsc_1_18_ARLEN,
      xt_rsc_1_18_ARADDR, xt_rsc_1_18_ARID, xt_rsc_1_18_BREADY, xt_rsc_1_18_BVALID,
      xt_rsc_1_18_BUSER, xt_rsc_1_18_BRESP, xt_rsc_1_18_BID, xt_rsc_1_18_WREADY,
      xt_rsc_1_18_WVALID, xt_rsc_1_18_WUSER, xt_rsc_1_18_WLAST, xt_rsc_1_18_WSTRB,
      xt_rsc_1_18_WDATA, xt_rsc_1_18_AWREADY, xt_rsc_1_18_AWVALID, xt_rsc_1_18_AWUSER,
      xt_rsc_1_18_AWREGION, xt_rsc_1_18_AWQOS, xt_rsc_1_18_AWPROT, xt_rsc_1_18_AWCACHE,
      xt_rsc_1_18_AWLOCK, xt_rsc_1_18_AWBURST, xt_rsc_1_18_AWSIZE, xt_rsc_1_18_AWLEN,
      xt_rsc_1_18_AWADDR, xt_rsc_1_18_AWID, core_wen, xt_rsc_1_18_i_oswt, xt_rsc_1_18_i_wen_comp,
      xt_rsc_1_18_i_oswt_1, xt_rsc_1_18_i_wen_comp_1, xt_rsc_1_18_i_s_raddr_core,
      xt_rsc_1_18_i_s_waddr_core, xt_rsc_1_18_i_s_din_mxwt, xt_rsc_1_18_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_18_s_tdone;
  input xt_rsc_1_18_tr_write_done;
  input xt_rsc_1_18_RREADY;
  output xt_rsc_1_18_RVALID;
  output xt_rsc_1_18_RUSER;
  output xt_rsc_1_18_RLAST;
  output [1:0] xt_rsc_1_18_RRESP;
  output [31:0] xt_rsc_1_18_RDATA;
  output xt_rsc_1_18_RID;
  output xt_rsc_1_18_ARREADY;
  input xt_rsc_1_18_ARVALID;
  input xt_rsc_1_18_ARUSER;
  input [3:0] xt_rsc_1_18_ARREGION;
  input [3:0] xt_rsc_1_18_ARQOS;
  input [2:0] xt_rsc_1_18_ARPROT;
  input [3:0] xt_rsc_1_18_ARCACHE;
  input xt_rsc_1_18_ARLOCK;
  input [1:0] xt_rsc_1_18_ARBURST;
  input [2:0] xt_rsc_1_18_ARSIZE;
  input [7:0] xt_rsc_1_18_ARLEN;
  input [11:0] xt_rsc_1_18_ARADDR;
  input xt_rsc_1_18_ARID;
  input xt_rsc_1_18_BREADY;
  output xt_rsc_1_18_BVALID;
  output xt_rsc_1_18_BUSER;
  output [1:0] xt_rsc_1_18_BRESP;
  output xt_rsc_1_18_BID;
  output xt_rsc_1_18_WREADY;
  input xt_rsc_1_18_WVALID;
  input xt_rsc_1_18_WUSER;
  input xt_rsc_1_18_WLAST;
  input [3:0] xt_rsc_1_18_WSTRB;
  input [31:0] xt_rsc_1_18_WDATA;
  output xt_rsc_1_18_AWREADY;
  input xt_rsc_1_18_AWVALID;
  input xt_rsc_1_18_AWUSER;
  input [3:0] xt_rsc_1_18_AWREGION;
  input [3:0] xt_rsc_1_18_AWQOS;
  input [2:0] xt_rsc_1_18_AWPROT;
  input [3:0] xt_rsc_1_18_AWCACHE;
  input xt_rsc_1_18_AWLOCK;
  input [1:0] xt_rsc_1_18_AWBURST;
  input [2:0] xt_rsc_1_18_AWSIZE;
  input [7:0] xt_rsc_1_18_AWLEN;
  input [11:0] xt_rsc_1_18_AWADDR;
  input xt_rsc_1_18_AWID;
  input core_wen;
  input xt_rsc_1_18_i_oswt;
  output xt_rsc_1_18_i_wen_comp;
  input xt_rsc_1_18_i_oswt_1;
  output xt_rsc_1_18_i_wen_comp_1;
  input [3:0] xt_rsc_1_18_i_s_raddr_core;
  input [3:0] xt_rsc_1_18_i_s_waddr_core;
  output [31:0] xt_rsc_1_18_i_s_din_mxwt;
  input [31:0] xt_rsc_1_18_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_18_i_biwt;
  wire xt_rsc_1_18_i_bdwt;
  wire xt_rsc_1_18_i_bcwt;
  wire xt_rsc_1_18_i_s_re_core_sct;
  wire xt_rsc_1_18_i_biwt_1;
  wire xt_rsc_1_18_i_bdwt_2;
  wire xt_rsc_1_18_i_bcwt_1;
  wire xt_rsc_1_18_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_18_i_s_raddr;
  wire [3:0] xt_rsc_1_18_i_s_waddr;
  wire [31:0] xt_rsc_1_18_i_s_din;
  wire [31:0] xt_rsc_1_18_i_s_dout;
  wire xt_rsc_1_18_i_s_rrdy;
  wire xt_rsc_1_18_i_s_wrdy;
  wire xt_rsc_1_18_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_18_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_18_AWID),
      .AWADDR(xt_rsc_1_18_AWADDR),
      .AWLEN(xt_rsc_1_18_AWLEN),
      .AWSIZE(xt_rsc_1_18_AWSIZE),
      .AWBURST(xt_rsc_1_18_AWBURST),
      .AWLOCK(xt_rsc_1_18_AWLOCK),
      .AWCACHE(xt_rsc_1_18_AWCACHE),
      .AWPROT(xt_rsc_1_18_AWPROT),
      .AWQOS(xt_rsc_1_18_AWQOS),
      .AWREGION(xt_rsc_1_18_AWREGION),
      .AWUSER(xt_rsc_1_18_AWUSER),
      .AWVALID(xt_rsc_1_18_AWVALID),
      .AWREADY(xt_rsc_1_18_AWREADY),
      .WDATA(xt_rsc_1_18_WDATA),
      .WSTRB(xt_rsc_1_18_WSTRB),
      .WLAST(xt_rsc_1_18_WLAST),
      .WUSER(xt_rsc_1_18_WUSER),
      .WVALID(xt_rsc_1_18_WVALID),
      .WREADY(xt_rsc_1_18_WREADY),
      .BID(xt_rsc_1_18_BID),
      .BRESP(xt_rsc_1_18_BRESP),
      .BUSER(xt_rsc_1_18_BUSER),
      .BVALID(xt_rsc_1_18_BVALID),
      .BREADY(xt_rsc_1_18_BREADY),
      .ARID(xt_rsc_1_18_ARID),
      .ARADDR(xt_rsc_1_18_ARADDR),
      .ARLEN(xt_rsc_1_18_ARLEN),
      .ARSIZE(xt_rsc_1_18_ARSIZE),
      .ARBURST(xt_rsc_1_18_ARBURST),
      .ARLOCK(xt_rsc_1_18_ARLOCK),
      .ARCACHE(xt_rsc_1_18_ARCACHE),
      .ARPROT(xt_rsc_1_18_ARPROT),
      .ARQOS(xt_rsc_1_18_ARQOS),
      .ARREGION(xt_rsc_1_18_ARREGION),
      .ARUSER(xt_rsc_1_18_ARUSER),
      .ARVALID(xt_rsc_1_18_ARVALID),
      .ARREADY(xt_rsc_1_18_ARREADY),
      .RID(xt_rsc_1_18_RID),
      .RDATA(xt_rsc_1_18_RDATA),
      .RRESP(xt_rsc_1_18_RRESP),
      .RLAST(xt_rsc_1_18_RLAST),
      .RUSER(xt_rsc_1_18_RUSER),
      .RVALID(xt_rsc_1_18_RVALID),
      .RREADY(xt_rsc_1_18_RREADY),
      .s_re(xt_rsc_1_18_i_s_re_core_sct),
      .s_we(xt_rsc_1_18_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_18_i_s_raddr),
      .s_waddr(xt_rsc_1_18_i_s_waddr),
      .s_din(xt_rsc_1_18_i_s_din),
      .s_dout(xt_rsc_1_18_i_s_dout),
      .s_rrdy(xt_rsc_1_18_i_s_rrdy),
      .s_wrdy(xt_rsc_1_18_i_s_wrdy),
      .is_idle(xt_rsc_1_18_is_idle_1),
      .tr_write_done(xt_rsc_1_18_tr_write_done),
      .s_tdone(xt_rsc_1_18_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_18_i_xt_rsc_1_18_wait_ctrl peaseNTT_core_xt_rsc_1_18_i_xt_rsc_1_18_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_18_i_oswt(xt_rsc_1_18_i_oswt),
      .xt_rsc_1_18_i_oswt_1(xt_rsc_1_18_i_oswt_1),
      .xt_rsc_1_18_i_biwt(xt_rsc_1_18_i_biwt),
      .xt_rsc_1_18_i_bdwt(xt_rsc_1_18_i_bdwt),
      .xt_rsc_1_18_i_bcwt(xt_rsc_1_18_i_bcwt),
      .xt_rsc_1_18_i_s_re_core_sct(xt_rsc_1_18_i_s_re_core_sct),
      .xt_rsc_1_18_i_biwt_1(xt_rsc_1_18_i_biwt_1),
      .xt_rsc_1_18_i_bdwt_2(xt_rsc_1_18_i_bdwt_2),
      .xt_rsc_1_18_i_bcwt_1(xt_rsc_1_18_i_bcwt_1),
      .xt_rsc_1_18_i_s_we_core_sct(xt_rsc_1_18_i_s_we_core_sct),
      .xt_rsc_1_18_i_s_rrdy(xt_rsc_1_18_i_s_rrdy),
      .xt_rsc_1_18_i_s_wrdy(xt_rsc_1_18_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_18_i_xt_rsc_1_18_wait_dp peaseNTT_core_xt_rsc_1_18_i_xt_rsc_1_18_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_18_i_oswt(xt_rsc_1_18_i_oswt),
      .xt_rsc_1_18_i_wen_comp(xt_rsc_1_18_i_wen_comp),
      .xt_rsc_1_18_i_oswt_1(xt_rsc_1_18_i_oswt_1),
      .xt_rsc_1_18_i_wen_comp_1(xt_rsc_1_18_i_wen_comp_1),
      .xt_rsc_1_18_i_s_raddr_core(xt_rsc_1_18_i_s_raddr_core),
      .xt_rsc_1_18_i_s_waddr_core(xt_rsc_1_18_i_s_waddr_core),
      .xt_rsc_1_18_i_s_din_mxwt(xt_rsc_1_18_i_s_din_mxwt),
      .xt_rsc_1_18_i_s_dout_core(xt_rsc_1_18_i_s_dout_core),
      .xt_rsc_1_18_i_biwt(xt_rsc_1_18_i_biwt),
      .xt_rsc_1_18_i_bdwt(xt_rsc_1_18_i_bdwt),
      .xt_rsc_1_18_i_bcwt(xt_rsc_1_18_i_bcwt),
      .xt_rsc_1_18_i_biwt_1(xt_rsc_1_18_i_biwt_1),
      .xt_rsc_1_18_i_bdwt_2(xt_rsc_1_18_i_bdwt_2),
      .xt_rsc_1_18_i_bcwt_1(xt_rsc_1_18_i_bcwt_1),
      .xt_rsc_1_18_i_s_raddr(xt_rsc_1_18_i_s_raddr),
      .xt_rsc_1_18_i_s_raddr_core_sct(xt_rsc_1_18_i_s_re_core_sct),
      .xt_rsc_1_18_i_s_waddr(xt_rsc_1_18_i_s_waddr),
      .xt_rsc_1_18_i_s_waddr_core_sct(xt_rsc_1_18_i_s_we_core_sct),
      .xt_rsc_1_18_i_s_din(xt_rsc_1_18_i_s_din),
      .xt_rsc_1_18_i_s_dout(xt_rsc_1_18_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_17_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_17_i (
  clk, rst, xt_rsc_1_17_s_tdone, xt_rsc_1_17_tr_write_done, xt_rsc_1_17_RREADY, xt_rsc_1_17_RVALID,
      xt_rsc_1_17_RUSER, xt_rsc_1_17_RLAST, xt_rsc_1_17_RRESP, xt_rsc_1_17_RDATA,
      xt_rsc_1_17_RID, xt_rsc_1_17_ARREADY, xt_rsc_1_17_ARVALID, xt_rsc_1_17_ARUSER,
      xt_rsc_1_17_ARREGION, xt_rsc_1_17_ARQOS, xt_rsc_1_17_ARPROT, xt_rsc_1_17_ARCACHE,
      xt_rsc_1_17_ARLOCK, xt_rsc_1_17_ARBURST, xt_rsc_1_17_ARSIZE, xt_rsc_1_17_ARLEN,
      xt_rsc_1_17_ARADDR, xt_rsc_1_17_ARID, xt_rsc_1_17_BREADY, xt_rsc_1_17_BVALID,
      xt_rsc_1_17_BUSER, xt_rsc_1_17_BRESP, xt_rsc_1_17_BID, xt_rsc_1_17_WREADY,
      xt_rsc_1_17_WVALID, xt_rsc_1_17_WUSER, xt_rsc_1_17_WLAST, xt_rsc_1_17_WSTRB,
      xt_rsc_1_17_WDATA, xt_rsc_1_17_AWREADY, xt_rsc_1_17_AWVALID, xt_rsc_1_17_AWUSER,
      xt_rsc_1_17_AWREGION, xt_rsc_1_17_AWQOS, xt_rsc_1_17_AWPROT, xt_rsc_1_17_AWCACHE,
      xt_rsc_1_17_AWLOCK, xt_rsc_1_17_AWBURST, xt_rsc_1_17_AWSIZE, xt_rsc_1_17_AWLEN,
      xt_rsc_1_17_AWADDR, xt_rsc_1_17_AWID, core_wen, xt_rsc_1_17_i_oswt, xt_rsc_1_17_i_wen_comp,
      xt_rsc_1_17_i_oswt_1, xt_rsc_1_17_i_wen_comp_1, xt_rsc_1_17_i_s_raddr_core,
      xt_rsc_1_17_i_s_waddr_core, xt_rsc_1_17_i_s_din_mxwt, xt_rsc_1_17_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_17_s_tdone;
  input xt_rsc_1_17_tr_write_done;
  input xt_rsc_1_17_RREADY;
  output xt_rsc_1_17_RVALID;
  output xt_rsc_1_17_RUSER;
  output xt_rsc_1_17_RLAST;
  output [1:0] xt_rsc_1_17_RRESP;
  output [31:0] xt_rsc_1_17_RDATA;
  output xt_rsc_1_17_RID;
  output xt_rsc_1_17_ARREADY;
  input xt_rsc_1_17_ARVALID;
  input xt_rsc_1_17_ARUSER;
  input [3:0] xt_rsc_1_17_ARREGION;
  input [3:0] xt_rsc_1_17_ARQOS;
  input [2:0] xt_rsc_1_17_ARPROT;
  input [3:0] xt_rsc_1_17_ARCACHE;
  input xt_rsc_1_17_ARLOCK;
  input [1:0] xt_rsc_1_17_ARBURST;
  input [2:0] xt_rsc_1_17_ARSIZE;
  input [7:0] xt_rsc_1_17_ARLEN;
  input [11:0] xt_rsc_1_17_ARADDR;
  input xt_rsc_1_17_ARID;
  input xt_rsc_1_17_BREADY;
  output xt_rsc_1_17_BVALID;
  output xt_rsc_1_17_BUSER;
  output [1:0] xt_rsc_1_17_BRESP;
  output xt_rsc_1_17_BID;
  output xt_rsc_1_17_WREADY;
  input xt_rsc_1_17_WVALID;
  input xt_rsc_1_17_WUSER;
  input xt_rsc_1_17_WLAST;
  input [3:0] xt_rsc_1_17_WSTRB;
  input [31:0] xt_rsc_1_17_WDATA;
  output xt_rsc_1_17_AWREADY;
  input xt_rsc_1_17_AWVALID;
  input xt_rsc_1_17_AWUSER;
  input [3:0] xt_rsc_1_17_AWREGION;
  input [3:0] xt_rsc_1_17_AWQOS;
  input [2:0] xt_rsc_1_17_AWPROT;
  input [3:0] xt_rsc_1_17_AWCACHE;
  input xt_rsc_1_17_AWLOCK;
  input [1:0] xt_rsc_1_17_AWBURST;
  input [2:0] xt_rsc_1_17_AWSIZE;
  input [7:0] xt_rsc_1_17_AWLEN;
  input [11:0] xt_rsc_1_17_AWADDR;
  input xt_rsc_1_17_AWID;
  input core_wen;
  input xt_rsc_1_17_i_oswt;
  output xt_rsc_1_17_i_wen_comp;
  input xt_rsc_1_17_i_oswt_1;
  output xt_rsc_1_17_i_wen_comp_1;
  input [3:0] xt_rsc_1_17_i_s_raddr_core;
  input [3:0] xt_rsc_1_17_i_s_waddr_core;
  output [31:0] xt_rsc_1_17_i_s_din_mxwt;
  input [31:0] xt_rsc_1_17_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_17_i_biwt;
  wire xt_rsc_1_17_i_bdwt;
  wire xt_rsc_1_17_i_bcwt;
  wire xt_rsc_1_17_i_s_re_core_sct;
  wire xt_rsc_1_17_i_biwt_1;
  wire xt_rsc_1_17_i_bdwt_2;
  wire xt_rsc_1_17_i_bcwt_1;
  wire xt_rsc_1_17_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_17_i_s_raddr;
  wire [3:0] xt_rsc_1_17_i_s_waddr;
  wire [31:0] xt_rsc_1_17_i_s_din;
  wire [31:0] xt_rsc_1_17_i_s_dout;
  wire xt_rsc_1_17_i_s_rrdy;
  wire xt_rsc_1_17_i_s_wrdy;
  wire xt_rsc_1_17_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_17_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_17_AWID),
      .AWADDR(xt_rsc_1_17_AWADDR),
      .AWLEN(xt_rsc_1_17_AWLEN),
      .AWSIZE(xt_rsc_1_17_AWSIZE),
      .AWBURST(xt_rsc_1_17_AWBURST),
      .AWLOCK(xt_rsc_1_17_AWLOCK),
      .AWCACHE(xt_rsc_1_17_AWCACHE),
      .AWPROT(xt_rsc_1_17_AWPROT),
      .AWQOS(xt_rsc_1_17_AWQOS),
      .AWREGION(xt_rsc_1_17_AWREGION),
      .AWUSER(xt_rsc_1_17_AWUSER),
      .AWVALID(xt_rsc_1_17_AWVALID),
      .AWREADY(xt_rsc_1_17_AWREADY),
      .WDATA(xt_rsc_1_17_WDATA),
      .WSTRB(xt_rsc_1_17_WSTRB),
      .WLAST(xt_rsc_1_17_WLAST),
      .WUSER(xt_rsc_1_17_WUSER),
      .WVALID(xt_rsc_1_17_WVALID),
      .WREADY(xt_rsc_1_17_WREADY),
      .BID(xt_rsc_1_17_BID),
      .BRESP(xt_rsc_1_17_BRESP),
      .BUSER(xt_rsc_1_17_BUSER),
      .BVALID(xt_rsc_1_17_BVALID),
      .BREADY(xt_rsc_1_17_BREADY),
      .ARID(xt_rsc_1_17_ARID),
      .ARADDR(xt_rsc_1_17_ARADDR),
      .ARLEN(xt_rsc_1_17_ARLEN),
      .ARSIZE(xt_rsc_1_17_ARSIZE),
      .ARBURST(xt_rsc_1_17_ARBURST),
      .ARLOCK(xt_rsc_1_17_ARLOCK),
      .ARCACHE(xt_rsc_1_17_ARCACHE),
      .ARPROT(xt_rsc_1_17_ARPROT),
      .ARQOS(xt_rsc_1_17_ARQOS),
      .ARREGION(xt_rsc_1_17_ARREGION),
      .ARUSER(xt_rsc_1_17_ARUSER),
      .ARVALID(xt_rsc_1_17_ARVALID),
      .ARREADY(xt_rsc_1_17_ARREADY),
      .RID(xt_rsc_1_17_RID),
      .RDATA(xt_rsc_1_17_RDATA),
      .RRESP(xt_rsc_1_17_RRESP),
      .RLAST(xt_rsc_1_17_RLAST),
      .RUSER(xt_rsc_1_17_RUSER),
      .RVALID(xt_rsc_1_17_RVALID),
      .RREADY(xt_rsc_1_17_RREADY),
      .s_re(xt_rsc_1_17_i_s_re_core_sct),
      .s_we(xt_rsc_1_17_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_17_i_s_raddr),
      .s_waddr(xt_rsc_1_17_i_s_waddr),
      .s_din(xt_rsc_1_17_i_s_din),
      .s_dout(xt_rsc_1_17_i_s_dout),
      .s_rrdy(xt_rsc_1_17_i_s_rrdy),
      .s_wrdy(xt_rsc_1_17_i_s_wrdy),
      .is_idle(xt_rsc_1_17_is_idle_1),
      .tr_write_done(xt_rsc_1_17_tr_write_done),
      .s_tdone(xt_rsc_1_17_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_17_i_xt_rsc_1_17_wait_ctrl peaseNTT_core_xt_rsc_1_17_i_xt_rsc_1_17_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_17_i_oswt(xt_rsc_1_17_i_oswt),
      .xt_rsc_1_17_i_oswt_1(xt_rsc_1_17_i_oswt_1),
      .xt_rsc_1_17_i_biwt(xt_rsc_1_17_i_biwt),
      .xt_rsc_1_17_i_bdwt(xt_rsc_1_17_i_bdwt),
      .xt_rsc_1_17_i_bcwt(xt_rsc_1_17_i_bcwt),
      .xt_rsc_1_17_i_s_re_core_sct(xt_rsc_1_17_i_s_re_core_sct),
      .xt_rsc_1_17_i_biwt_1(xt_rsc_1_17_i_biwt_1),
      .xt_rsc_1_17_i_bdwt_2(xt_rsc_1_17_i_bdwt_2),
      .xt_rsc_1_17_i_bcwt_1(xt_rsc_1_17_i_bcwt_1),
      .xt_rsc_1_17_i_s_we_core_sct(xt_rsc_1_17_i_s_we_core_sct),
      .xt_rsc_1_17_i_s_rrdy(xt_rsc_1_17_i_s_rrdy),
      .xt_rsc_1_17_i_s_wrdy(xt_rsc_1_17_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_17_i_xt_rsc_1_17_wait_dp peaseNTT_core_xt_rsc_1_17_i_xt_rsc_1_17_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_17_i_oswt(xt_rsc_1_17_i_oswt),
      .xt_rsc_1_17_i_wen_comp(xt_rsc_1_17_i_wen_comp),
      .xt_rsc_1_17_i_oswt_1(xt_rsc_1_17_i_oswt_1),
      .xt_rsc_1_17_i_wen_comp_1(xt_rsc_1_17_i_wen_comp_1),
      .xt_rsc_1_17_i_s_raddr_core(xt_rsc_1_17_i_s_raddr_core),
      .xt_rsc_1_17_i_s_waddr_core(xt_rsc_1_17_i_s_waddr_core),
      .xt_rsc_1_17_i_s_din_mxwt(xt_rsc_1_17_i_s_din_mxwt),
      .xt_rsc_1_17_i_s_dout_core(xt_rsc_1_17_i_s_dout_core),
      .xt_rsc_1_17_i_biwt(xt_rsc_1_17_i_biwt),
      .xt_rsc_1_17_i_bdwt(xt_rsc_1_17_i_bdwt),
      .xt_rsc_1_17_i_bcwt(xt_rsc_1_17_i_bcwt),
      .xt_rsc_1_17_i_biwt_1(xt_rsc_1_17_i_biwt_1),
      .xt_rsc_1_17_i_bdwt_2(xt_rsc_1_17_i_bdwt_2),
      .xt_rsc_1_17_i_bcwt_1(xt_rsc_1_17_i_bcwt_1),
      .xt_rsc_1_17_i_s_raddr(xt_rsc_1_17_i_s_raddr),
      .xt_rsc_1_17_i_s_raddr_core_sct(xt_rsc_1_17_i_s_re_core_sct),
      .xt_rsc_1_17_i_s_waddr(xt_rsc_1_17_i_s_waddr),
      .xt_rsc_1_17_i_s_waddr_core_sct(xt_rsc_1_17_i_s_we_core_sct),
      .xt_rsc_1_17_i_s_din(xt_rsc_1_17_i_s_din),
      .xt_rsc_1_17_i_s_dout(xt_rsc_1_17_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_16_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_16_i (
  clk, rst, xt_rsc_1_16_s_tdone, xt_rsc_1_16_tr_write_done, xt_rsc_1_16_RREADY, xt_rsc_1_16_RVALID,
      xt_rsc_1_16_RUSER, xt_rsc_1_16_RLAST, xt_rsc_1_16_RRESP, xt_rsc_1_16_RDATA,
      xt_rsc_1_16_RID, xt_rsc_1_16_ARREADY, xt_rsc_1_16_ARVALID, xt_rsc_1_16_ARUSER,
      xt_rsc_1_16_ARREGION, xt_rsc_1_16_ARQOS, xt_rsc_1_16_ARPROT, xt_rsc_1_16_ARCACHE,
      xt_rsc_1_16_ARLOCK, xt_rsc_1_16_ARBURST, xt_rsc_1_16_ARSIZE, xt_rsc_1_16_ARLEN,
      xt_rsc_1_16_ARADDR, xt_rsc_1_16_ARID, xt_rsc_1_16_BREADY, xt_rsc_1_16_BVALID,
      xt_rsc_1_16_BUSER, xt_rsc_1_16_BRESP, xt_rsc_1_16_BID, xt_rsc_1_16_WREADY,
      xt_rsc_1_16_WVALID, xt_rsc_1_16_WUSER, xt_rsc_1_16_WLAST, xt_rsc_1_16_WSTRB,
      xt_rsc_1_16_WDATA, xt_rsc_1_16_AWREADY, xt_rsc_1_16_AWVALID, xt_rsc_1_16_AWUSER,
      xt_rsc_1_16_AWREGION, xt_rsc_1_16_AWQOS, xt_rsc_1_16_AWPROT, xt_rsc_1_16_AWCACHE,
      xt_rsc_1_16_AWLOCK, xt_rsc_1_16_AWBURST, xt_rsc_1_16_AWSIZE, xt_rsc_1_16_AWLEN,
      xt_rsc_1_16_AWADDR, xt_rsc_1_16_AWID, core_wen, xt_rsc_1_16_i_oswt, xt_rsc_1_16_i_wen_comp,
      xt_rsc_1_16_i_oswt_1, xt_rsc_1_16_i_wen_comp_1, xt_rsc_1_16_i_s_raddr_core,
      xt_rsc_1_16_i_s_waddr_core, xt_rsc_1_16_i_s_din_mxwt, xt_rsc_1_16_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_16_s_tdone;
  input xt_rsc_1_16_tr_write_done;
  input xt_rsc_1_16_RREADY;
  output xt_rsc_1_16_RVALID;
  output xt_rsc_1_16_RUSER;
  output xt_rsc_1_16_RLAST;
  output [1:0] xt_rsc_1_16_RRESP;
  output [31:0] xt_rsc_1_16_RDATA;
  output xt_rsc_1_16_RID;
  output xt_rsc_1_16_ARREADY;
  input xt_rsc_1_16_ARVALID;
  input xt_rsc_1_16_ARUSER;
  input [3:0] xt_rsc_1_16_ARREGION;
  input [3:0] xt_rsc_1_16_ARQOS;
  input [2:0] xt_rsc_1_16_ARPROT;
  input [3:0] xt_rsc_1_16_ARCACHE;
  input xt_rsc_1_16_ARLOCK;
  input [1:0] xt_rsc_1_16_ARBURST;
  input [2:0] xt_rsc_1_16_ARSIZE;
  input [7:0] xt_rsc_1_16_ARLEN;
  input [11:0] xt_rsc_1_16_ARADDR;
  input xt_rsc_1_16_ARID;
  input xt_rsc_1_16_BREADY;
  output xt_rsc_1_16_BVALID;
  output xt_rsc_1_16_BUSER;
  output [1:0] xt_rsc_1_16_BRESP;
  output xt_rsc_1_16_BID;
  output xt_rsc_1_16_WREADY;
  input xt_rsc_1_16_WVALID;
  input xt_rsc_1_16_WUSER;
  input xt_rsc_1_16_WLAST;
  input [3:0] xt_rsc_1_16_WSTRB;
  input [31:0] xt_rsc_1_16_WDATA;
  output xt_rsc_1_16_AWREADY;
  input xt_rsc_1_16_AWVALID;
  input xt_rsc_1_16_AWUSER;
  input [3:0] xt_rsc_1_16_AWREGION;
  input [3:0] xt_rsc_1_16_AWQOS;
  input [2:0] xt_rsc_1_16_AWPROT;
  input [3:0] xt_rsc_1_16_AWCACHE;
  input xt_rsc_1_16_AWLOCK;
  input [1:0] xt_rsc_1_16_AWBURST;
  input [2:0] xt_rsc_1_16_AWSIZE;
  input [7:0] xt_rsc_1_16_AWLEN;
  input [11:0] xt_rsc_1_16_AWADDR;
  input xt_rsc_1_16_AWID;
  input core_wen;
  input xt_rsc_1_16_i_oswt;
  output xt_rsc_1_16_i_wen_comp;
  input xt_rsc_1_16_i_oswt_1;
  output xt_rsc_1_16_i_wen_comp_1;
  input [3:0] xt_rsc_1_16_i_s_raddr_core;
  input [3:0] xt_rsc_1_16_i_s_waddr_core;
  output [31:0] xt_rsc_1_16_i_s_din_mxwt;
  input [31:0] xt_rsc_1_16_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_16_i_biwt;
  wire xt_rsc_1_16_i_bdwt;
  wire xt_rsc_1_16_i_bcwt;
  wire xt_rsc_1_16_i_s_re_core_sct;
  wire xt_rsc_1_16_i_biwt_1;
  wire xt_rsc_1_16_i_bdwt_2;
  wire xt_rsc_1_16_i_bcwt_1;
  wire xt_rsc_1_16_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_16_i_s_raddr;
  wire [3:0] xt_rsc_1_16_i_s_waddr;
  wire [31:0] xt_rsc_1_16_i_s_din;
  wire [31:0] xt_rsc_1_16_i_s_dout;
  wire xt_rsc_1_16_i_s_rrdy;
  wire xt_rsc_1_16_i_s_wrdy;
  wire xt_rsc_1_16_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_16_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_16_AWID),
      .AWADDR(xt_rsc_1_16_AWADDR),
      .AWLEN(xt_rsc_1_16_AWLEN),
      .AWSIZE(xt_rsc_1_16_AWSIZE),
      .AWBURST(xt_rsc_1_16_AWBURST),
      .AWLOCK(xt_rsc_1_16_AWLOCK),
      .AWCACHE(xt_rsc_1_16_AWCACHE),
      .AWPROT(xt_rsc_1_16_AWPROT),
      .AWQOS(xt_rsc_1_16_AWQOS),
      .AWREGION(xt_rsc_1_16_AWREGION),
      .AWUSER(xt_rsc_1_16_AWUSER),
      .AWVALID(xt_rsc_1_16_AWVALID),
      .AWREADY(xt_rsc_1_16_AWREADY),
      .WDATA(xt_rsc_1_16_WDATA),
      .WSTRB(xt_rsc_1_16_WSTRB),
      .WLAST(xt_rsc_1_16_WLAST),
      .WUSER(xt_rsc_1_16_WUSER),
      .WVALID(xt_rsc_1_16_WVALID),
      .WREADY(xt_rsc_1_16_WREADY),
      .BID(xt_rsc_1_16_BID),
      .BRESP(xt_rsc_1_16_BRESP),
      .BUSER(xt_rsc_1_16_BUSER),
      .BVALID(xt_rsc_1_16_BVALID),
      .BREADY(xt_rsc_1_16_BREADY),
      .ARID(xt_rsc_1_16_ARID),
      .ARADDR(xt_rsc_1_16_ARADDR),
      .ARLEN(xt_rsc_1_16_ARLEN),
      .ARSIZE(xt_rsc_1_16_ARSIZE),
      .ARBURST(xt_rsc_1_16_ARBURST),
      .ARLOCK(xt_rsc_1_16_ARLOCK),
      .ARCACHE(xt_rsc_1_16_ARCACHE),
      .ARPROT(xt_rsc_1_16_ARPROT),
      .ARQOS(xt_rsc_1_16_ARQOS),
      .ARREGION(xt_rsc_1_16_ARREGION),
      .ARUSER(xt_rsc_1_16_ARUSER),
      .ARVALID(xt_rsc_1_16_ARVALID),
      .ARREADY(xt_rsc_1_16_ARREADY),
      .RID(xt_rsc_1_16_RID),
      .RDATA(xt_rsc_1_16_RDATA),
      .RRESP(xt_rsc_1_16_RRESP),
      .RLAST(xt_rsc_1_16_RLAST),
      .RUSER(xt_rsc_1_16_RUSER),
      .RVALID(xt_rsc_1_16_RVALID),
      .RREADY(xt_rsc_1_16_RREADY),
      .s_re(xt_rsc_1_16_i_s_re_core_sct),
      .s_we(xt_rsc_1_16_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_16_i_s_raddr),
      .s_waddr(xt_rsc_1_16_i_s_waddr),
      .s_din(xt_rsc_1_16_i_s_din),
      .s_dout(xt_rsc_1_16_i_s_dout),
      .s_rrdy(xt_rsc_1_16_i_s_rrdy),
      .s_wrdy(xt_rsc_1_16_i_s_wrdy),
      .is_idle(xt_rsc_1_16_is_idle_1),
      .tr_write_done(xt_rsc_1_16_tr_write_done),
      .s_tdone(xt_rsc_1_16_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_16_i_xt_rsc_1_16_wait_ctrl peaseNTT_core_xt_rsc_1_16_i_xt_rsc_1_16_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_16_i_oswt(xt_rsc_1_16_i_oswt),
      .xt_rsc_1_16_i_oswt_1(xt_rsc_1_16_i_oswt_1),
      .xt_rsc_1_16_i_biwt(xt_rsc_1_16_i_biwt),
      .xt_rsc_1_16_i_bdwt(xt_rsc_1_16_i_bdwt),
      .xt_rsc_1_16_i_bcwt(xt_rsc_1_16_i_bcwt),
      .xt_rsc_1_16_i_s_re_core_sct(xt_rsc_1_16_i_s_re_core_sct),
      .xt_rsc_1_16_i_biwt_1(xt_rsc_1_16_i_biwt_1),
      .xt_rsc_1_16_i_bdwt_2(xt_rsc_1_16_i_bdwt_2),
      .xt_rsc_1_16_i_bcwt_1(xt_rsc_1_16_i_bcwt_1),
      .xt_rsc_1_16_i_s_we_core_sct(xt_rsc_1_16_i_s_we_core_sct),
      .xt_rsc_1_16_i_s_rrdy(xt_rsc_1_16_i_s_rrdy),
      .xt_rsc_1_16_i_s_wrdy(xt_rsc_1_16_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_16_i_xt_rsc_1_16_wait_dp peaseNTT_core_xt_rsc_1_16_i_xt_rsc_1_16_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_16_i_oswt(xt_rsc_1_16_i_oswt),
      .xt_rsc_1_16_i_wen_comp(xt_rsc_1_16_i_wen_comp),
      .xt_rsc_1_16_i_oswt_1(xt_rsc_1_16_i_oswt_1),
      .xt_rsc_1_16_i_wen_comp_1(xt_rsc_1_16_i_wen_comp_1),
      .xt_rsc_1_16_i_s_raddr_core(xt_rsc_1_16_i_s_raddr_core),
      .xt_rsc_1_16_i_s_waddr_core(xt_rsc_1_16_i_s_waddr_core),
      .xt_rsc_1_16_i_s_din_mxwt(xt_rsc_1_16_i_s_din_mxwt),
      .xt_rsc_1_16_i_s_dout_core(xt_rsc_1_16_i_s_dout_core),
      .xt_rsc_1_16_i_biwt(xt_rsc_1_16_i_biwt),
      .xt_rsc_1_16_i_bdwt(xt_rsc_1_16_i_bdwt),
      .xt_rsc_1_16_i_bcwt(xt_rsc_1_16_i_bcwt),
      .xt_rsc_1_16_i_biwt_1(xt_rsc_1_16_i_biwt_1),
      .xt_rsc_1_16_i_bdwt_2(xt_rsc_1_16_i_bdwt_2),
      .xt_rsc_1_16_i_bcwt_1(xt_rsc_1_16_i_bcwt_1),
      .xt_rsc_1_16_i_s_raddr(xt_rsc_1_16_i_s_raddr),
      .xt_rsc_1_16_i_s_raddr_core_sct(xt_rsc_1_16_i_s_re_core_sct),
      .xt_rsc_1_16_i_s_waddr(xt_rsc_1_16_i_s_waddr),
      .xt_rsc_1_16_i_s_waddr_core_sct(xt_rsc_1_16_i_s_we_core_sct),
      .xt_rsc_1_16_i_s_din(xt_rsc_1_16_i_s_din),
      .xt_rsc_1_16_i_s_dout(xt_rsc_1_16_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_15_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_15_i (
  clk, rst, xt_rsc_1_15_s_tdone, xt_rsc_1_15_tr_write_done, xt_rsc_1_15_RREADY, xt_rsc_1_15_RVALID,
      xt_rsc_1_15_RUSER, xt_rsc_1_15_RLAST, xt_rsc_1_15_RRESP, xt_rsc_1_15_RDATA,
      xt_rsc_1_15_RID, xt_rsc_1_15_ARREADY, xt_rsc_1_15_ARVALID, xt_rsc_1_15_ARUSER,
      xt_rsc_1_15_ARREGION, xt_rsc_1_15_ARQOS, xt_rsc_1_15_ARPROT, xt_rsc_1_15_ARCACHE,
      xt_rsc_1_15_ARLOCK, xt_rsc_1_15_ARBURST, xt_rsc_1_15_ARSIZE, xt_rsc_1_15_ARLEN,
      xt_rsc_1_15_ARADDR, xt_rsc_1_15_ARID, xt_rsc_1_15_BREADY, xt_rsc_1_15_BVALID,
      xt_rsc_1_15_BUSER, xt_rsc_1_15_BRESP, xt_rsc_1_15_BID, xt_rsc_1_15_WREADY,
      xt_rsc_1_15_WVALID, xt_rsc_1_15_WUSER, xt_rsc_1_15_WLAST, xt_rsc_1_15_WSTRB,
      xt_rsc_1_15_WDATA, xt_rsc_1_15_AWREADY, xt_rsc_1_15_AWVALID, xt_rsc_1_15_AWUSER,
      xt_rsc_1_15_AWREGION, xt_rsc_1_15_AWQOS, xt_rsc_1_15_AWPROT, xt_rsc_1_15_AWCACHE,
      xt_rsc_1_15_AWLOCK, xt_rsc_1_15_AWBURST, xt_rsc_1_15_AWSIZE, xt_rsc_1_15_AWLEN,
      xt_rsc_1_15_AWADDR, xt_rsc_1_15_AWID, core_wen, xt_rsc_1_15_i_oswt, xt_rsc_1_15_i_wen_comp,
      xt_rsc_1_15_i_oswt_1, xt_rsc_1_15_i_wen_comp_1, xt_rsc_1_15_i_s_raddr_core,
      xt_rsc_1_15_i_s_waddr_core, xt_rsc_1_15_i_s_din_mxwt, xt_rsc_1_15_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_15_s_tdone;
  input xt_rsc_1_15_tr_write_done;
  input xt_rsc_1_15_RREADY;
  output xt_rsc_1_15_RVALID;
  output xt_rsc_1_15_RUSER;
  output xt_rsc_1_15_RLAST;
  output [1:0] xt_rsc_1_15_RRESP;
  output [31:0] xt_rsc_1_15_RDATA;
  output xt_rsc_1_15_RID;
  output xt_rsc_1_15_ARREADY;
  input xt_rsc_1_15_ARVALID;
  input xt_rsc_1_15_ARUSER;
  input [3:0] xt_rsc_1_15_ARREGION;
  input [3:0] xt_rsc_1_15_ARQOS;
  input [2:0] xt_rsc_1_15_ARPROT;
  input [3:0] xt_rsc_1_15_ARCACHE;
  input xt_rsc_1_15_ARLOCK;
  input [1:0] xt_rsc_1_15_ARBURST;
  input [2:0] xt_rsc_1_15_ARSIZE;
  input [7:0] xt_rsc_1_15_ARLEN;
  input [11:0] xt_rsc_1_15_ARADDR;
  input xt_rsc_1_15_ARID;
  input xt_rsc_1_15_BREADY;
  output xt_rsc_1_15_BVALID;
  output xt_rsc_1_15_BUSER;
  output [1:0] xt_rsc_1_15_BRESP;
  output xt_rsc_1_15_BID;
  output xt_rsc_1_15_WREADY;
  input xt_rsc_1_15_WVALID;
  input xt_rsc_1_15_WUSER;
  input xt_rsc_1_15_WLAST;
  input [3:0] xt_rsc_1_15_WSTRB;
  input [31:0] xt_rsc_1_15_WDATA;
  output xt_rsc_1_15_AWREADY;
  input xt_rsc_1_15_AWVALID;
  input xt_rsc_1_15_AWUSER;
  input [3:0] xt_rsc_1_15_AWREGION;
  input [3:0] xt_rsc_1_15_AWQOS;
  input [2:0] xt_rsc_1_15_AWPROT;
  input [3:0] xt_rsc_1_15_AWCACHE;
  input xt_rsc_1_15_AWLOCK;
  input [1:0] xt_rsc_1_15_AWBURST;
  input [2:0] xt_rsc_1_15_AWSIZE;
  input [7:0] xt_rsc_1_15_AWLEN;
  input [11:0] xt_rsc_1_15_AWADDR;
  input xt_rsc_1_15_AWID;
  input core_wen;
  input xt_rsc_1_15_i_oswt;
  output xt_rsc_1_15_i_wen_comp;
  input xt_rsc_1_15_i_oswt_1;
  output xt_rsc_1_15_i_wen_comp_1;
  input [3:0] xt_rsc_1_15_i_s_raddr_core;
  input [3:0] xt_rsc_1_15_i_s_waddr_core;
  output [31:0] xt_rsc_1_15_i_s_din_mxwt;
  input [31:0] xt_rsc_1_15_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_15_i_biwt;
  wire xt_rsc_1_15_i_bdwt;
  wire xt_rsc_1_15_i_bcwt;
  wire xt_rsc_1_15_i_s_re_core_sct;
  wire xt_rsc_1_15_i_biwt_1;
  wire xt_rsc_1_15_i_bdwt_2;
  wire xt_rsc_1_15_i_bcwt_1;
  wire xt_rsc_1_15_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_15_i_s_raddr;
  wire [3:0] xt_rsc_1_15_i_s_waddr;
  wire [31:0] xt_rsc_1_15_i_s_din;
  wire [31:0] xt_rsc_1_15_i_s_dout;
  wire xt_rsc_1_15_i_s_rrdy;
  wire xt_rsc_1_15_i_s_wrdy;
  wire xt_rsc_1_15_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_15_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_15_AWID),
      .AWADDR(xt_rsc_1_15_AWADDR),
      .AWLEN(xt_rsc_1_15_AWLEN),
      .AWSIZE(xt_rsc_1_15_AWSIZE),
      .AWBURST(xt_rsc_1_15_AWBURST),
      .AWLOCK(xt_rsc_1_15_AWLOCK),
      .AWCACHE(xt_rsc_1_15_AWCACHE),
      .AWPROT(xt_rsc_1_15_AWPROT),
      .AWQOS(xt_rsc_1_15_AWQOS),
      .AWREGION(xt_rsc_1_15_AWREGION),
      .AWUSER(xt_rsc_1_15_AWUSER),
      .AWVALID(xt_rsc_1_15_AWVALID),
      .AWREADY(xt_rsc_1_15_AWREADY),
      .WDATA(xt_rsc_1_15_WDATA),
      .WSTRB(xt_rsc_1_15_WSTRB),
      .WLAST(xt_rsc_1_15_WLAST),
      .WUSER(xt_rsc_1_15_WUSER),
      .WVALID(xt_rsc_1_15_WVALID),
      .WREADY(xt_rsc_1_15_WREADY),
      .BID(xt_rsc_1_15_BID),
      .BRESP(xt_rsc_1_15_BRESP),
      .BUSER(xt_rsc_1_15_BUSER),
      .BVALID(xt_rsc_1_15_BVALID),
      .BREADY(xt_rsc_1_15_BREADY),
      .ARID(xt_rsc_1_15_ARID),
      .ARADDR(xt_rsc_1_15_ARADDR),
      .ARLEN(xt_rsc_1_15_ARLEN),
      .ARSIZE(xt_rsc_1_15_ARSIZE),
      .ARBURST(xt_rsc_1_15_ARBURST),
      .ARLOCK(xt_rsc_1_15_ARLOCK),
      .ARCACHE(xt_rsc_1_15_ARCACHE),
      .ARPROT(xt_rsc_1_15_ARPROT),
      .ARQOS(xt_rsc_1_15_ARQOS),
      .ARREGION(xt_rsc_1_15_ARREGION),
      .ARUSER(xt_rsc_1_15_ARUSER),
      .ARVALID(xt_rsc_1_15_ARVALID),
      .ARREADY(xt_rsc_1_15_ARREADY),
      .RID(xt_rsc_1_15_RID),
      .RDATA(xt_rsc_1_15_RDATA),
      .RRESP(xt_rsc_1_15_RRESP),
      .RLAST(xt_rsc_1_15_RLAST),
      .RUSER(xt_rsc_1_15_RUSER),
      .RVALID(xt_rsc_1_15_RVALID),
      .RREADY(xt_rsc_1_15_RREADY),
      .s_re(xt_rsc_1_15_i_s_re_core_sct),
      .s_we(xt_rsc_1_15_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_15_i_s_raddr),
      .s_waddr(xt_rsc_1_15_i_s_waddr),
      .s_din(xt_rsc_1_15_i_s_din),
      .s_dout(xt_rsc_1_15_i_s_dout),
      .s_rrdy(xt_rsc_1_15_i_s_rrdy),
      .s_wrdy(xt_rsc_1_15_i_s_wrdy),
      .is_idle(xt_rsc_1_15_is_idle_1),
      .tr_write_done(xt_rsc_1_15_tr_write_done),
      .s_tdone(xt_rsc_1_15_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_15_i_xt_rsc_1_15_wait_ctrl peaseNTT_core_xt_rsc_1_15_i_xt_rsc_1_15_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_15_i_oswt(xt_rsc_1_15_i_oswt),
      .xt_rsc_1_15_i_oswt_1(xt_rsc_1_15_i_oswt_1),
      .xt_rsc_1_15_i_biwt(xt_rsc_1_15_i_biwt),
      .xt_rsc_1_15_i_bdwt(xt_rsc_1_15_i_bdwt),
      .xt_rsc_1_15_i_bcwt(xt_rsc_1_15_i_bcwt),
      .xt_rsc_1_15_i_s_re_core_sct(xt_rsc_1_15_i_s_re_core_sct),
      .xt_rsc_1_15_i_biwt_1(xt_rsc_1_15_i_biwt_1),
      .xt_rsc_1_15_i_bdwt_2(xt_rsc_1_15_i_bdwt_2),
      .xt_rsc_1_15_i_bcwt_1(xt_rsc_1_15_i_bcwt_1),
      .xt_rsc_1_15_i_s_we_core_sct(xt_rsc_1_15_i_s_we_core_sct),
      .xt_rsc_1_15_i_s_rrdy(xt_rsc_1_15_i_s_rrdy),
      .xt_rsc_1_15_i_s_wrdy(xt_rsc_1_15_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_15_i_xt_rsc_1_15_wait_dp peaseNTT_core_xt_rsc_1_15_i_xt_rsc_1_15_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_15_i_oswt(xt_rsc_1_15_i_oswt),
      .xt_rsc_1_15_i_wen_comp(xt_rsc_1_15_i_wen_comp),
      .xt_rsc_1_15_i_oswt_1(xt_rsc_1_15_i_oswt_1),
      .xt_rsc_1_15_i_wen_comp_1(xt_rsc_1_15_i_wen_comp_1),
      .xt_rsc_1_15_i_s_raddr_core(xt_rsc_1_15_i_s_raddr_core),
      .xt_rsc_1_15_i_s_waddr_core(xt_rsc_1_15_i_s_waddr_core),
      .xt_rsc_1_15_i_s_din_mxwt(xt_rsc_1_15_i_s_din_mxwt),
      .xt_rsc_1_15_i_s_dout_core(xt_rsc_1_15_i_s_dout_core),
      .xt_rsc_1_15_i_biwt(xt_rsc_1_15_i_biwt),
      .xt_rsc_1_15_i_bdwt(xt_rsc_1_15_i_bdwt),
      .xt_rsc_1_15_i_bcwt(xt_rsc_1_15_i_bcwt),
      .xt_rsc_1_15_i_biwt_1(xt_rsc_1_15_i_biwt_1),
      .xt_rsc_1_15_i_bdwt_2(xt_rsc_1_15_i_bdwt_2),
      .xt_rsc_1_15_i_bcwt_1(xt_rsc_1_15_i_bcwt_1),
      .xt_rsc_1_15_i_s_raddr(xt_rsc_1_15_i_s_raddr),
      .xt_rsc_1_15_i_s_raddr_core_sct(xt_rsc_1_15_i_s_re_core_sct),
      .xt_rsc_1_15_i_s_waddr(xt_rsc_1_15_i_s_waddr),
      .xt_rsc_1_15_i_s_waddr_core_sct(xt_rsc_1_15_i_s_we_core_sct),
      .xt_rsc_1_15_i_s_din(xt_rsc_1_15_i_s_din),
      .xt_rsc_1_15_i_s_dout(xt_rsc_1_15_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_14_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_14_i (
  clk, rst, xt_rsc_1_14_s_tdone, xt_rsc_1_14_tr_write_done, xt_rsc_1_14_RREADY, xt_rsc_1_14_RVALID,
      xt_rsc_1_14_RUSER, xt_rsc_1_14_RLAST, xt_rsc_1_14_RRESP, xt_rsc_1_14_RDATA,
      xt_rsc_1_14_RID, xt_rsc_1_14_ARREADY, xt_rsc_1_14_ARVALID, xt_rsc_1_14_ARUSER,
      xt_rsc_1_14_ARREGION, xt_rsc_1_14_ARQOS, xt_rsc_1_14_ARPROT, xt_rsc_1_14_ARCACHE,
      xt_rsc_1_14_ARLOCK, xt_rsc_1_14_ARBURST, xt_rsc_1_14_ARSIZE, xt_rsc_1_14_ARLEN,
      xt_rsc_1_14_ARADDR, xt_rsc_1_14_ARID, xt_rsc_1_14_BREADY, xt_rsc_1_14_BVALID,
      xt_rsc_1_14_BUSER, xt_rsc_1_14_BRESP, xt_rsc_1_14_BID, xt_rsc_1_14_WREADY,
      xt_rsc_1_14_WVALID, xt_rsc_1_14_WUSER, xt_rsc_1_14_WLAST, xt_rsc_1_14_WSTRB,
      xt_rsc_1_14_WDATA, xt_rsc_1_14_AWREADY, xt_rsc_1_14_AWVALID, xt_rsc_1_14_AWUSER,
      xt_rsc_1_14_AWREGION, xt_rsc_1_14_AWQOS, xt_rsc_1_14_AWPROT, xt_rsc_1_14_AWCACHE,
      xt_rsc_1_14_AWLOCK, xt_rsc_1_14_AWBURST, xt_rsc_1_14_AWSIZE, xt_rsc_1_14_AWLEN,
      xt_rsc_1_14_AWADDR, xt_rsc_1_14_AWID, core_wen, xt_rsc_1_14_i_oswt, xt_rsc_1_14_i_wen_comp,
      xt_rsc_1_14_i_oswt_1, xt_rsc_1_14_i_wen_comp_1, xt_rsc_1_14_i_s_raddr_core,
      xt_rsc_1_14_i_s_waddr_core, xt_rsc_1_14_i_s_din_mxwt, xt_rsc_1_14_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_14_s_tdone;
  input xt_rsc_1_14_tr_write_done;
  input xt_rsc_1_14_RREADY;
  output xt_rsc_1_14_RVALID;
  output xt_rsc_1_14_RUSER;
  output xt_rsc_1_14_RLAST;
  output [1:0] xt_rsc_1_14_RRESP;
  output [31:0] xt_rsc_1_14_RDATA;
  output xt_rsc_1_14_RID;
  output xt_rsc_1_14_ARREADY;
  input xt_rsc_1_14_ARVALID;
  input xt_rsc_1_14_ARUSER;
  input [3:0] xt_rsc_1_14_ARREGION;
  input [3:0] xt_rsc_1_14_ARQOS;
  input [2:0] xt_rsc_1_14_ARPROT;
  input [3:0] xt_rsc_1_14_ARCACHE;
  input xt_rsc_1_14_ARLOCK;
  input [1:0] xt_rsc_1_14_ARBURST;
  input [2:0] xt_rsc_1_14_ARSIZE;
  input [7:0] xt_rsc_1_14_ARLEN;
  input [11:0] xt_rsc_1_14_ARADDR;
  input xt_rsc_1_14_ARID;
  input xt_rsc_1_14_BREADY;
  output xt_rsc_1_14_BVALID;
  output xt_rsc_1_14_BUSER;
  output [1:0] xt_rsc_1_14_BRESP;
  output xt_rsc_1_14_BID;
  output xt_rsc_1_14_WREADY;
  input xt_rsc_1_14_WVALID;
  input xt_rsc_1_14_WUSER;
  input xt_rsc_1_14_WLAST;
  input [3:0] xt_rsc_1_14_WSTRB;
  input [31:0] xt_rsc_1_14_WDATA;
  output xt_rsc_1_14_AWREADY;
  input xt_rsc_1_14_AWVALID;
  input xt_rsc_1_14_AWUSER;
  input [3:0] xt_rsc_1_14_AWREGION;
  input [3:0] xt_rsc_1_14_AWQOS;
  input [2:0] xt_rsc_1_14_AWPROT;
  input [3:0] xt_rsc_1_14_AWCACHE;
  input xt_rsc_1_14_AWLOCK;
  input [1:0] xt_rsc_1_14_AWBURST;
  input [2:0] xt_rsc_1_14_AWSIZE;
  input [7:0] xt_rsc_1_14_AWLEN;
  input [11:0] xt_rsc_1_14_AWADDR;
  input xt_rsc_1_14_AWID;
  input core_wen;
  input xt_rsc_1_14_i_oswt;
  output xt_rsc_1_14_i_wen_comp;
  input xt_rsc_1_14_i_oswt_1;
  output xt_rsc_1_14_i_wen_comp_1;
  input [3:0] xt_rsc_1_14_i_s_raddr_core;
  input [3:0] xt_rsc_1_14_i_s_waddr_core;
  output [31:0] xt_rsc_1_14_i_s_din_mxwt;
  input [31:0] xt_rsc_1_14_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_14_i_biwt;
  wire xt_rsc_1_14_i_bdwt;
  wire xt_rsc_1_14_i_bcwt;
  wire xt_rsc_1_14_i_s_re_core_sct;
  wire xt_rsc_1_14_i_biwt_1;
  wire xt_rsc_1_14_i_bdwt_2;
  wire xt_rsc_1_14_i_bcwt_1;
  wire xt_rsc_1_14_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_14_i_s_raddr;
  wire [3:0] xt_rsc_1_14_i_s_waddr;
  wire [31:0] xt_rsc_1_14_i_s_din;
  wire [31:0] xt_rsc_1_14_i_s_dout;
  wire xt_rsc_1_14_i_s_rrdy;
  wire xt_rsc_1_14_i_s_wrdy;
  wire xt_rsc_1_14_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_14_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_14_AWID),
      .AWADDR(xt_rsc_1_14_AWADDR),
      .AWLEN(xt_rsc_1_14_AWLEN),
      .AWSIZE(xt_rsc_1_14_AWSIZE),
      .AWBURST(xt_rsc_1_14_AWBURST),
      .AWLOCK(xt_rsc_1_14_AWLOCK),
      .AWCACHE(xt_rsc_1_14_AWCACHE),
      .AWPROT(xt_rsc_1_14_AWPROT),
      .AWQOS(xt_rsc_1_14_AWQOS),
      .AWREGION(xt_rsc_1_14_AWREGION),
      .AWUSER(xt_rsc_1_14_AWUSER),
      .AWVALID(xt_rsc_1_14_AWVALID),
      .AWREADY(xt_rsc_1_14_AWREADY),
      .WDATA(xt_rsc_1_14_WDATA),
      .WSTRB(xt_rsc_1_14_WSTRB),
      .WLAST(xt_rsc_1_14_WLAST),
      .WUSER(xt_rsc_1_14_WUSER),
      .WVALID(xt_rsc_1_14_WVALID),
      .WREADY(xt_rsc_1_14_WREADY),
      .BID(xt_rsc_1_14_BID),
      .BRESP(xt_rsc_1_14_BRESP),
      .BUSER(xt_rsc_1_14_BUSER),
      .BVALID(xt_rsc_1_14_BVALID),
      .BREADY(xt_rsc_1_14_BREADY),
      .ARID(xt_rsc_1_14_ARID),
      .ARADDR(xt_rsc_1_14_ARADDR),
      .ARLEN(xt_rsc_1_14_ARLEN),
      .ARSIZE(xt_rsc_1_14_ARSIZE),
      .ARBURST(xt_rsc_1_14_ARBURST),
      .ARLOCK(xt_rsc_1_14_ARLOCK),
      .ARCACHE(xt_rsc_1_14_ARCACHE),
      .ARPROT(xt_rsc_1_14_ARPROT),
      .ARQOS(xt_rsc_1_14_ARQOS),
      .ARREGION(xt_rsc_1_14_ARREGION),
      .ARUSER(xt_rsc_1_14_ARUSER),
      .ARVALID(xt_rsc_1_14_ARVALID),
      .ARREADY(xt_rsc_1_14_ARREADY),
      .RID(xt_rsc_1_14_RID),
      .RDATA(xt_rsc_1_14_RDATA),
      .RRESP(xt_rsc_1_14_RRESP),
      .RLAST(xt_rsc_1_14_RLAST),
      .RUSER(xt_rsc_1_14_RUSER),
      .RVALID(xt_rsc_1_14_RVALID),
      .RREADY(xt_rsc_1_14_RREADY),
      .s_re(xt_rsc_1_14_i_s_re_core_sct),
      .s_we(xt_rsc_1_14_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_14_i_s_raddr),
      .s_waddr(xt_rsc_1_14_i_s_waddr),
      .s_din(xt_rsc_1_14_i_s_din),
      .s_dout(xt_rsc_1_14_i_s_dout),
      .s_rrdy(xt_rsc_1_14_i_s_rrdy),
      .s_wrdy(xt_rsc_1_14_i_s_wrdy),
      .is_idle(xt_rsc_1_14_is_idle_1),
      .tr_write_done(xt_rsc_1_14_tr_write_done),
      .s_tdone(xt_rsc_1_14_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_14_i_xt_rsc_1_14_wait_ctrl peaseNTT_core_xt_rsc_1_14_i_xt_rsc_1_14_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_14_i_oswt(xt_rsc_1_14_i_oswt),
      .xt_rsc_1_14_i_oswt_1(xt_rsc_1_14_i_oswt_1),
      .xt_rsc_1_14_i_biwt(xt_rsc_1_14_i_biwt),
      .xt_rsc_1_14_i_bdwt(xt_rsc_1_14_i_bdwt),
      .xt_rsc_1_14_i_bcwt(xt_rsc_1_14_i_bcwt),
      .xt_rsc_1_14_i_s_re_core_sct(xt_rsc_1_14_i_s_re_core_sct),
      .xt_rsc_1_14_i_biwt_1(xt_rsc_1_14_i_biwt_1),
      .xt_rsc_1_14_i_bdwt_2(xt_rsc_1_14_i_bdwt_2),
      .xt_rsc_1_14_i_bcwt_1(xt_rsc_1_14_i_bcwt_1),
      .xt_rsc_1_14_i_s_we_core_sct(xt_rsc_1_14_i_s_we_core_sct),
      .xt_rsc_1_14_i_s_rrdy(xt_rsc_1_14_i_s_rrdy),
      .xt_rsc_1_14_i_s_wrdy(xt_rsc_1_14_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_14_i_xt_rsc_1_14_wait_dp peaseNTT_core_xt_rsc_1_14_i_xt_rsc_1_14_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_14_i_oswt(xt_rsc_1_14_i_oswt),
      .xt_rsc_1_14_i_wen_comp(xt_rsc_1_14_i_wen_comp),
      .xt_rsc_1_14_i_oswt_1(xt_rsc_1_14_i_oswt_1),
      .xt_rsc_1_14_i_wen_comp_1(xt_rsc_1_14_i_wen_comp_1),
      .xt_rsc_1_14_i_s_raddr_core(xt_rsc_1_14_i_s_raddr_core),
      .xt_rsc_1_14_i_s_waddr_core(xt_rsc_1_14_i_s_waddr_core),
      .xt_rsc_1_14_i_s_din_mxwt(xt_rsc_1_14_i_s_din_mxwt),
      .xt_rsc_1_14_i_s_dout_core(xt_rsc_1_14_i_s_dout_core),
      .xt_rsc_1_14_i_biwt(xt_rsc_1_14_i_biwt),
      .xt_rsc_1_14_i_bdwt(xt_rsc_1_14_i_bdwt),
      .xt_rsc_1_14_i_bcwt(xt_rsc_1_14_i_bcwt),
      .xt_rsc_1_14_i_biwt_1(xt_rsc_1_14_i_biwt_1),
      .xt_rsc_1_14_i_bdwt_2(xt_rsc_1_14_i_bdwt_2),
      .xt_rsc_1_14_i_bcwt_1(xt_rsc_1_14_i_bcwt_1),
      .xt_rsc_1_14_i_s_raddr(xt_rsc_1_14_i_s_raddr),
      .xt_rsc_1_14_i_s_raddr_core_sct(xt_rsc_1_14_i_s_re_core_sct),
      .xt_rsc_1_14_i_s_waddr(xt_rsc_1_14_i_s_waddr),
      .xt_rsc_1_14_i_s_waddr_core_sct(xt_rsc_1_14_i_s_we_core_sct),
      .xt_rsc_1_14_i_s_din(xt_rsc_1_14_i_s_din),
      .xt_rsc_1_14_i_s_dout(xt_rsc_1_14_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_13_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_13_i (
  clk, rst, xt_rsc_1_13_s_tdone, xt_rsc_1_13_tr_write_done, xt_rsc_1_13_RREADY, xt_rsc_1_13_RVALID,
      xt_rsc_1_13_RUSER, xt_rsc_1_13_RLAST, xt_rsc_1_13_RRESP, xt_rsc_1_13_RDATA,
      xt_rsc_1_13_RID, xt_rsc_1_13_ARREADY, xt_rsc_1_13_ARVALID, xt_rsc_1_13_ARUSER,
      xt_rsc_1_13_ARREGION, xt_rsc_1_13_ARQOS, xt_rsc_1_13_ARPROT, xt_rsc_1_13_ARCACHE,
      xt_rsc_1_13_ARLOCK, xt_rsc_1_13_ARBURST, xt_rsc_1_13_ARSIZE, xt_rsc_1_13_ARLEN,
      xt_rsc_1_13_ARADDR, xt_rsc_1_13_ARID, xt_rsc_1_13_BREADY, xt_rsc_1_13_BVALID,
      xt_rsc_1_13_BUSER, xt_rsc_1_13_BRESP, xt_rsc_1_13_BID, xt_rsc_1_13_WREADY,
      xt_rsc_1_13_WVALID, xt_rsc_1_13_WUSER, xt_rsc_1_13_WLAST, xt_rsc_1_13_WSTRB,
      xt_rsc_1_13_WDATA, xt_rsc_1_13_AWREADY, xt_rsc_1_13_AWVALID, xt_rsc_1_13_AWUSER,
      xt_rsc_1_13_AWREGION, xt_rsc_1_13_AWQOS, xt_rsc_1_13_AWPROT, xt_rsc_1_13_AWCACHE,
      xt_rsc_1_13_AWLOCK, xt_rsc_1_13_AWBURST, xt_rsc_1_13_AWSIZE, xt_rsc_1_13_AWLEN,
      xt_rsc_1_13_AWADDR, xt_rsc_1_13_AWID, core_wen, xt_rsc_1_13_i_oswt, xt_rsc_1_13_i_wen_comp,
      xt_rsc_1_13_i_oswt_1, xt_rsc_1_13_i_wen_comp_1, xt_rsc_1_13_i_s_raddr_core,
      xt_rsc_1_13_i_s_waddr_core, xt_rsc_1_13_i_s_din_mxwt, xt_rsc_1_13_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_13_s_tdone;
  input xt_rsc_1_13_tr_write_done;
  input xt_rsc_1_13_RREADY;
  output xt_rsc_1_13_RVALID;
  output xt_rsc_1_13_RUSER;
  output xt_rsc_1_13_RLAST;
  output [1:0] xt_rsc_1_13_RRESP;
  output [31:0] xt_rsc_1_13_RDATA;
  output xt_rsc_1_13_RID;
  output xt_rsc_1_13_ARREADY;
  input xt_rsc_1_13_ARVALID;
  input xt_rsc_1_13_ARUSER;
  input [3:0] xt_rsc_1_13_ARREGION;
  input [3:0] xt_rsc_1_13_ARQOS;
  input [2:0] xt_rsc_1_13_ARPROT;
  input [3:0] xt_rsc_1_13_ARCACHE;
  input xt_rsc_1_13_ARLOCK;
  input [1:0] xt_rsc_1_13_ARBURST;
  input [2:0] xt_rsc_1_13_ARSIZE;
  input [7:0] xt_rsc_1_13_ARLEN;
  input [11:0] xt_rsc_1_13_ARADDR;
  input xt_rsc_1_13_ARID;
  input xt_rsc_1_13_BREADY;
  output xt_rsc_1_13_BVALID;
  output xt_rsc_1_13_BUSER;
  output [1:0] xt_rsc_1_13_BRESP;
  output xt_rsc_1_13_BID;
  output xt_rsc_1_13_WREADY;
  input xt_rsc_1_13_WVALID;
  input xt_rsc_1_13_WUSER;
  input xt_rsc_1_13_WLAST;
  input [3:0] xt_rsc_1_13_WSTRB;
  input [31:0] xt_rsc_1_13_WDATA;
  output xt_rsc_1_13_AWREADY;
  input xt_rsc_1_13_AWVALID;
  input xt_rsc_1_13_AWUSER;
  input [3:0] xt_rsc_1_13_AWREGION;
  input [3:0] xt_rsc_1_13_AWQOS;
  input [2:0] xt_rsc_1_13_AWPROT;
  input [3:0] xt_rsc_1_13_AWCACHE;
  input xt_rsc_1_13_AWLOCK;
  input [1:0] xt_rsc_1_13_AWBURST;
  input [2:0] xt_rsc_1_13_AWSIZE;
  input [7:0] xt_rsc_1_13_AWLEN;
  input [11:0] xt_rsc_1_13_AWADDR;
  input xt_rsc_1_13_AWID;
  input core_wen;
  input xt_rsc_1_13_i_oswt;
  output xt_rsc_1_13_i_wen_comp;
  input xt_rsc_1_13_i_oswt_1;
  output xt_rsc_1_13_i_wen_comp_1;
  input [3:0] xt_rsc_1_13_i_s_raddr_core;
  input [3:0] xt_rsc_1_13_i_s_waddr_core;
  output [31:0] xt_rsc_1_13_i_s_din_mxwt;
  input [31:0] xt_rsc_1_13_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_13_i_biwt;
  wire xt_rsc_1_13_i_bdwt;
  wire xt_rsc_1_13_i_bcwt;
  wire xt_rsc_1_13_i_s_re_core_sct;
  wire xt_rsc_1_13_i_biwt_1;
  wire xt_rsc_1_13_i_bdwt_2;
  wire xt_rsc_1_13_i_bcwt_1;
  wire xt_rsc_1_13_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_13_i_s_raddr;
  wire [3:0] xt_rsc_1_13_i_s_waddr;
  wire [31:0] xt_rsc_1_13_i_s_din;
  wire [31:0] xt_rsc_1_13_i_s_dout;
  wire xt_rsc_1_13_i_s_rrdy;
  wire xt_rsc_1_13_i_s_wrdy;
  wire xt_rsc_1_13_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_13_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_13_AWID),
      .AWADDR(xt_rsc_1_13_AWADDR),
      .AWLEN(xt_rsc_1_13_AWLEN),
      .AWSIZE(xt_rsc_1_13_AWSIZE),
      .AWBURST(xt_rsc_1_13_AWBURST),
      .AWLOCK(xt_rsc_1_13_AWLOCK),
      .AWCACHE(xt_rsc_1_13_AWCACHE),
      .AWPROT(xt_rsc_1_13_AWPROT),
      .AWQOS(xt_rsc_1_13_AWQOS),
      .AWREGION(xt_rsc_1_13_AWREGION),
      .AWUSER(xt_rsc_1_13_AWUSER),
      .AWVALID(xt_rsc_1_13_AWVALID),
      .AWREADY(xt_rsc_1_13_AWREADY),
      .WDATA(xt_rsc_1_13_WDATA),
      .WSTRB(xt_rsc_1_13_WSTRB),
      .WLAST(xt_rsc_1_13_WLAST),
      .WUSER(xt_rsc_1_13_WUSER),
      .WVALID(xt_rsc_1_13_WVALID),
      .WREADY(xt_rsc_1_13_WREADY),
      .BID(xt_rsc_1_13_BID),
      .BRESP(xt_rsc_1_13_BRESP),
      .BUSER(xt_rsc_1_13_BUSER),
      .BVALID(xt_rsc_1_13_BVALID),
      .BREADY(xt_rsc_1_13_BREADY),
      .ARID(xt_rsc_1_13_ARID),
      .ARADDR(xt_rsc_1_13_ARADDR),
      .ARLEN(xt_rsc_1_13_ARLEN),
      .ARSIZE(xt_rsc_1_13_ARSIZE),
      .ARBURST(xt_rsc_1_13_ARBURST),
      .ARLOCK(xt_rsc_1_13_ARLOCK),
      .ARCACHE(xt_rsc_1_13_ARCACHE),
      .ARPROT(xt_rsc_1_13_ARPROT),
      .ARQOS(xt_rsc_1_13_ARQOS),
      .ARREGION(xt_rsc_1_13_ARREGION),
      .ARUSER(xt_rsc_1_13_ARUSER),
      .ARVALID(xt_rsc_1_13_ARVALID),
      .ARREADY(xt_rsc_1_13_ARREADY),
      .RID(xt_rsc_1_13_RID),
      .RDATA(xt_rsc_1_13_RDATA),
      .RRESP(xt_rsc_1_13_RRESP),
      .RLAST(xt_rsc_1_13_RLAST),
      .RUSER(xt_rsc_1_13_RUSER),
      .RVALID(xt_rsc_1_13_RVALID),
      .RREADY(xt_rsc_1_13_RREADY),
      .s_re(xt_rsc_1_13_i_s_re_core_sct),
      .s_we(xt_rsc_1_13_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_13_i_s_raddr),
      .s_waddr(xt_rsc_1_13_i_s_waddr),
      .s_din(xt_rsc_1_13_i_s_din),
      .s_dout(xt_rsc_1_13_i_s_dout),
      .s_rrdy(xt_rsc_1_13_i_s_rrdy),
      .s_wrdy(xt_rsc_1_13_i_s_wrdy),
      .is_idle(xt_rsc_1_13_is_idle_1),
      .tr_write_done(xt_rsc_1_13_tr_write_done),
      .s_tdone(xt_rsc_1_13_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_13_i_xt_rsc_1_13_wait_ctrl peaseNTT_core_xt_rsc_1_13_i_xt_rsc_1_13_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_13_i_oswt(xt_rsc_1_13_i_oswt),
      .xt_rsc_1_13_i_oswt_1(xt_rsc_1_13_i_oswt_1),
      .xt_rsc_1_13_i_biwt(xt_rsc_1_13_i_biwt),
      .xt_rsc_1_13_i_bdwt(xt_rsc_1_13_i_bdwt),
      .xt_rsc_1_13_i_bcwt(xt_rsc_1_13_i_bcwt),
      .xt_rsc_1_13_i_s_re_core_sct(xt_rsc_1_13_i_s_re_core_sct),
      .xt_rsc_1_13_i_biwt_1(xt_rsc_1_13_i_biwt_1),
      .xt_rsc_1_13_i_bdwt_2(xt_rsc_1_13_i_bdwt_2),
      .xt_rsc_1_13_i_bcwt_1(xt_rsc_1_13_i_bcwt_1),
      .xt_rsc_1_13_i_s_we_core_sct(xt_rsc_1_13_i_s_we_core_sct),
      .xt_rsc_1_13_i_s_rrdy(xt_rsc_1_13_i_s_rrdy),
      .xt_rsc_1_13_i_s_wrdy(xt_rsc_1_13_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_13_i_xt_rsc_1_13_wait_dp peaseNTT_core_xt_rsc_1_13_i_xt_rsc_1_13_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_13_i_oswt(xt_rsc_1_13_i_oswt),
      .xt_rsc_1_13_i_wen_comp(xt_rsc_1_13_i_wen_comp),
      .xt_rsc_1_13_i_oswt_1(xt_rsc_1_13_i_oswt_1),
      .xt_rsc_1_13_i_wen_comp_1(xt_rsc_1_13_i_wen_comp_1),
      .xt_rsc_1_13_i_s_raddr_core(xt_rsc_1_13_i_s_raddr_core),
      .xt_rsc_1_13_i_s_waddr_core(xt_rsc_1_13_i_s_waddr_core),
      .xt_rsc_1_13_i_s_din_mxwt(xt_rsc_1_13_i_s_din_mxwt),
      .xt_rsc_1_13_i_s_dout_core(xt_rsc_1_13_i_s_dout_core),
      .xt_rsc_1_13_i_biwt(xt_rsc_1_13_i_biwt),
      .xt_rsc_1_13_i_bdwt(xt_rsc_1_13_i_bdwt),
      .xt_rsc_1_13_i_bcwt(xt_rsc_1_13_i_bcwt),
      .xt_rsc_1_13_i_biwt_1(xt_rsc_1_13_i_biwt_1),
      .xt_rsc_1_13_i_bdwt_2(xt_rsc_1_13_i_bdwt_2),
      .xt_rsc_1_13_i_bcwt_1(xt_rsc_1_13_i_bcwt_1),
      .xt_rsc_1_13_i_s_raddr(xt_rsc_1_13_i_s_raddr),
      .xt_rsc_1_13_i_s_raddr_core_sct(xt_rsc_1_13_i_s_re_core_sct),
      .xt_rsc_1_13_i_s_waddr(xt_rsc_1_13_i_s_waddr),
      .xt_rsc_1_13_i_s_waddr_core_sct(xt_rsc_1_13_i_s_we_core_sct),
      .xt_rsc_1_13_i_s_din(xt_rsc_1_13_i_s_din),
      .xt_rsc_1_13_i_s_dout(xt_rsc_1_13_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_12_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_12_i (
  clk, rst, xt_rsc_1_12_s_tdone, xt_rsc_1_12_tr_write_done, xt_rsc_1_12_RREADY, xt_rsc_1_12_RVALID,
      xt_rsc_1_12_RUSER, xt_rsc_1_12_RLAST, xt_rsc_1_12_RRESP, xt_rsc_1_12_RDATA,
      xt_rsc_1_12_RID, xt_rsc_1_12_ARREADY, xt_rsc_1_12_ARVALID, xt_rsc_1_12_ARUSER,
      xt_rsc_1_12_ARREGION, xt_rsc_1_12_ARQOS, xt_rsc_1_12_ARPROT, xt_rsc_1_12_ARCACHE,
      xt_rsc_1_12_ARLOCK, xt_rsc_1_12_ARBURST, xt_rsc_1_12_ARSIZE, xt_rsc_1_12_ARLEN,
      xt_rsc_1_12_ARADDR, xt_rsc_1_12_ARID, xt_rsc_1_12_BREADY, xt_rsc_1_12_BVALID,
      xt_rsc_1_12_BUSER, xt_rsc_1_12_BRESP, xt_rsc_1_12_BID, xt_rsc_1_12_WREADY,
      xt_rsc_1_12_WVALID, xt_rsc_1_12_WUSER, xt_rsc_1_12_WLAST, xt_rsc_1_12_WSTRB,
      xt_rsc_1_12_WDATA, xt_rsc_1_12_AWREADY, xt_rsc_1_12_AWVALID, xt_rsc_1_12_AWUSER,
      xt_rsc_1_12_AWREGION, xt_rsc_1_12_AWQOS, xt_rsc_1_12_AWPROT, xt_rsc_1_12_AWCACHE,
      xt_rsc_1_12_AWLOCK, xt_rsc_1_12_AWBURST, xt_rsc_1_12_AWSIZE, xt_rsc_1_12_AWLEN,
      xt_rsc_1_12_AWADDR, xt_rsc_1_12_AWID, core_wen, xt_rsc_1_12_i_oswt, xt_rsc_1_12_i_wen_comp,
      xt_rsc_1_12_i_oswt_1, xt_rsc_1_12_i_wen_comp_1, xt_rsc_1_12_i_s_raddr_core,
      xt_rsc_1_12_i_s_waddr_core, xt_rsc_1_12_i_s_din_mxwt, xt_rsc_1_12_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_12_s_tdone;
  input xt_rsc_1_12_tr_write_done;
  input xt_rsc_1_12_RREADY;
  output xt_rsc_1_12_RVALID;
  output xt_rsc_1_12_RUSER;
  output xt_rsc_1_12_RLAST;
  output [1:0] xt_rsc_1_12_RRESP;
  output [31:0] xt_rsc_1_12_RDATA;
  output xt_rsc_1_12_RID;
  output xt_rsc_1_12_ARREADY;
  input xt_rsc_1_12_ARVALID;
  input xt_rsc_1_12_ARUSER;
  input [3:0] xt_rsc_1_12_ARREGION;
  input [3:0] xt_rsc_1_12_ARQOS;
  input [2:0] xt_rsc_1_12_ARPROT;
  input [3:0] xt_rsc_1_12_ARCACHE;
  input xt_rsc_1_12_ARLOCK;
  input [1:0] xt_rsc_1_12_ARBURST;
  input [2:0] xt_rsc_1_12_ARSIZE;
  input [7:0] xt_rsc_1_12_ARLEN;
  input [11:0] xt_rsc_1_12_ARADDR;
  input xt_rsc_1_12_ARID;
  input xt_rsc_1_12_BREADY;
  output xt_rsc_1_12_BVALID;
  output xt_rsc_1_12_BUSER;
  output [1:0] xt_rsc_1_12_BRESP;
  output xt_rsc_1_12_BID;
  output xt_rsc_1_12_WREADY;
  input xt_rsc_1_12_WVALID;
  input xt_rsc_1_12_WUSER;
  input xt_rsc_1_12_WLAST;
  input [3:0] xt_rsc_1_12_WSTRB;
  input [31:0] xt_rsc_1_12_WDATA;
  output xt_rsc_1_12_AWREADY;
  input xt_rsc_1_12_AWVALID;
  input xt_rsc_1_12_AWUSER;
  input [3:0] xt_rsc_1_12_AWREGION;
  input [3:0] xt_rsc_1_12_AWQOS;
  input [2:0] xt_rsc_1_12_AWPROT;
  input [3:0] xt_rsc_1_12_AWCACHE;
  input xt_rsc_1_12_AWLOCK;
  input [1:0] xt_rsc_1_12_AWBURST;
  input [2:0] xt_rsc_1_12_AWSIZE;
  input [7:0] xt_rsc_1_12_AWLEN;
  input [11:0] xt_rsc_1_12_AWADDR;
  input xt_rsc_1_12_AWID;
  input core_wen;
  input xt_rsc_1_12_i_oswt;
  output xt_rsc_1_12_i_wen_comp;
  input xt_rsc_1_12_i_oswt_1;
  output xt_rsc_1_12_i_wen_comp_1;
  input [3:0] xt_rsc_1_12_i_s_raddr_core;
  input [3:0] xt_rsc_1_12_i_s_waddr_core;
  output [31:0] xt_rsc_1_12_i_s_din_mxwt;
  input [31:0] xt_rsc_1_12_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_12_i_biwt;
  wire xt_rsc_1_12_i_bdwt;
  wire xt_rsc_1_12_i_bcwt;
  wire xt_rsc_1_12_i_s_re_core_sct;
  wire xt_rsc_1_12_i_biwt_1;
  wire xt_rsc_1_12_i_bdwt_2;
  wire xt_rsc_1_12_i_bcwt_1;
  wire xt_rsc_1_12_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_12_i_s_raddr;
  wire [3:0] xt_rsc_1_12_i_s_waddr;
  wire [31:0] xt_rsc_1_12_i_s_din;
  wire [31:0] xt_rsc_1_12_i_s_dout;
  wire xt_rsc_1_12_i_s_rrdy;
  wire xt_rsc_1_12_i_s_wrdy;
  wire xt_rsc_1_12_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_12_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_12_AWID),
      .AWADDR(xt_rsc_1_12_AWADDR),
      .AWLEN(xt_rsc_1_12_AWLEN),
      .AWSIZE(xt_rsc_1_12_AWSIZE),
      .AWBURST(xt_rsc_1_12_AWBURST),
      .AWLOCK(xt_rsc_1_12_AWLOCK),
      .AWCACHE(xt_rsc_1_12_AWCACHE),
      .AWPROT(xt_rsc_1_12_AWPROT),
      .AWQOS(xt_rsc_1_12_AWQOS),
      .AWREGION(xt_rsc_1_12_AWREGION),
      .AWUSER(xt_rsc_1_12_AWUSER),
      .AWVALID(xt_rsc_1_12_AWVALID),
      .AWREADY(xt_rsc_1_12_AWREADY),
      .WDATA(xt_rsc_1_12_WDATA),
      .WSTRB(xt_rsc_1_12_WSTRB),
      .WLAST(xt_rsc_1_12_WLAST),
      .WUSER(xt_rsc_1_12_WUSER),
      .WVALID(xt_rsc_1_12_WVALID),
      .WREADY(xt_rsc_1_12_WREADY),
      .BID(xt_rsc_1_12_BID),
      .BRESP(xt_rsc_1_12_BRESP),
      .BUSER(xt_rsc_1_12_BUSER),
      .BVALID(xt_rsc_1_12_BVALID),
      .BREADY(xt_rsc_1_12_BREADY),
      .ARID(xt_rsc_1_12_ARID),
      .ARADDR(xt_rsc_1_12_ARADDR),
      .ARLEN(xt_rsc_1_12_ARLEN),
      .ARSIZE(xt_rsc_1_12_ARSIZE),
      .ARBURST(xt_rsc_1_12_ARBURST),
      .ARLOCK(xt_rsc_1_12_ARLOCK),
      .ARCACHE(xt_rsc_1_12_ARCACHE),
      .ARPROT(xt_rsc_1_12_ARPROT),
      .ARQOS(xt_rsc_1_12_ARQOS),
      .ARREGION(xt_rsc_1_12_ARREGION),
      .ARUSER(xt_rsc_1_12_ARUSER),
      .ARVALID(xt_rsc_1_12_ARVALID),
      .ARREADY(xt_rsc_1_12_ARREADY),
      .RID(xt_rsc_1_12_RID),
      .RDATA(xt_rsc_1_12_RDATA),
      .RRESP(xt_rsc_1_12_RRESP),
      .RLAST(xt_rsc_1_12_RLAST),
      .RUSER(xt_rsc_1_12_RUSER),
      .RVALID(xt_rsc_1_12_RVALID),
      .RREADY(xt_rsc_1_12_RREADY),
      .s_re(xt_rsc_1_12_i_s_re_core_sct),
      .s_we(xt_rsc_1_12_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_12_i_s_raddr),
      .s_waddr(xt_rsc_1_12_i_s_waddr),
      .s_din(xt_rsc_1_12_i_s_din),
      .s_dout(xt_rsc_1_12_i_s_dout),
      .s_rrdy(xt_rsc_1_12_i_s_rrdy),
      .s_wrdy(xt_rsc_1_12_i_s_wrdy),
      .is_idle(xt_rsc_1_12_is_idle_1),
      .tr_write_done(xt_rsc_1_12_tr_write_done),
      .s_tdone(xt_rsc_1_12_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_12_i_xt_rsc_1_12_wait_ctrl peaseNTT_core_xt_rsc_1_12_i_xt_rsc_1_12_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_12_i_oswt(xt_rsc_1_12_i_oswt),
      .xt_rsc_1_12_i_oswt_1(xt_rsc_1_12_i_oswt_1),
      .xt_rsc_1_12_i_biwt(xt_rsc_1_12_i_biwt),
      .xt_rsc_1_12_i_bdwt(xt_rsc_1_12_i_bdwt),
      .xt_rsc_1_12_i_bcwt(xt_rsc_1_12_i_bcwt),
      .xt_rsc_1_12_i_s_re_core_sct(xt_rsc_1_12_i_s_re_core_sct),
      .xt_rsc_1_12_i_biwt_1(xt_rsc_1_12_i_biwt_1),
      .xt_rsc_1_12_i_bdwt_2(xt_rsc_1_12_i_bdwt_2),
      .xt_rsc_1_12_i_bcwt_1(xt_rsc_1_12_i_bcwt_1),
      .xt_rsc_1_12_i_s_we_core_sct(xt_rsc_1_12_i_s_we_core_sct),
      .xt_rsc_1_12_i_s_rrdy(xt_rsc_1_12_i_s_rrdy),
      .xt_rsc_1_12_i_s_wrdy(xt_rsc_1_12_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_12_i_xt_rsc_1_12_wait_dp peaseNTT_core_xt_rsc_1_12_i_xt_rsc_1_12_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_12_i_oswt(xt_rsc_1_12_i_oswt),
      .xt_rsc_1_12_i_wen_comp(xt_rsc_1_12_i_wen_comp),
      .xt_rsc_1_12_i_oswt_1(xt_rsc_1_12_i_oswt_1),
      .xt_rsc_1_12_i_wen_comp_1(xt_rsc_1_12_i_wen_comp_1),
      .xt_rsc_1_12_i_s_raddr_core(xt_rsc_1_12_i_s_raddr_core),
      .xt_rsc_1_12_i_s_waddr_core(xt_rsc_1_12_i_s_waddr_core),
      .xt_rsc_1_12_i_s_din_mxwt(xt_rsc_1_12_i_s_din_mxwt),
      .xt_rsc_1_12_i_s_dout_core(xt_rsc_1_12_i_s_dout_core),
      .xt_rsc_1_12_i_biwt(xt_rsc_1_12_i_biwt),
      .xt_rsc_1_12_i_bdwt(xt_rsc_1_12_i_bdwt),
      .xt_rsc_1_12_i_bcwt(xt_rsc_1_12_i_bcwt),
      .xt_rsc_1_12_i_biwt_1(xt_rsc_1_12_i_biwt_1),
      .xt_rsc_1_12_i_bdwt_2(xt_rsc_1_12_i_bdwt_2),
      .xt_rsc_1_12_i_bcwt_1(xt_rsc_1_12_i_bcwt_1),
      .xt_rsc_1_12_i_s_raddr(xt_rsc_1_12_i_s_raddr),
      .xt_rsc_1_12_i_s_raddr_core_sct(xt_rsc_1_12_i_s_re_core_sct),
      .xt_rsc_1_12_i_s_waddr(xt_rsc_1_12_i_s_waddr),
      .xt_rsc_1_12_i_s_waddr_core_sct(xt_rsc_1_12_i_s_we_core_sct),
      .xt_rsc_1_12_i_s_din(xt_rsc_1_12_i_s_din),
      .xt_rsc_1_12_i_s_dout(xt_rsc_1_12_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_11_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_11_i (
  clk, rst, xt_rsc_1_11_s_tdone, xt_rsc_1_11_tr_write_done, xt_rsc_1_11_RREADY, xt_rsc_1_11_RVALID,
      xt_rsc_1_11_RUSER, xt_rsc_1_11_RLAST, xt_rsc_1_11_RRESP, xt_rsc_1_11_RDATA,
      xt_rsc_1_11_RID, xt_rsc_1_11_ARREADY, xt_rsc_1_11_ARVALID, xt_rsc_1_11_ARUSER,
      xt_rsc_1_11_ARREGION, xt_rsc_1_11_ARQOS, xt_rsc_1_11_ARPROT, xt_rsc_1_11_ARCACHE,
      xt_rsc_1_11_ARLOCK, xt_rsc_1_11_ARBURST, xt_rsc_1_11_ARSIZE, xt_rsc_1_11_ARLEN,
      xt_rsc_1_11_ARADDR, xt_rsc_1_11_ARID, xt_rsc_1_11_BREADY, xt_rsc_1_11_BVALID,
      xt_rsc_1_11_BUSER, xt_rsc_1_11_BRESP, xt_rsc_1_11_BID, xt_rsc_1_11_WREADY,
      xt_rsc_1_11_WVALID, xt_rsc_1_11_WUSER, xt_rsc_1_11_WLAST, xt_rsc_1_11_WSTRB,
      xt_rsc_1_11_WDATA, xt_rsc_1_11_AWREADY, xt_rsc_1_11_AWVALID, xt_rsc_1_11_AWUSER,
      xt_rsc_1_11_AWREGION, xt_rsc_1_11_AWQOS, xt_rsc_1_11_AWPROT, xt_rsc_1_11_AWCACHE,
      xt_rsc_1_11_AWLOCK, xt_rsc_1_11_AWBURST, xt_rsc_1_11_AWSIZE, xt_rsc_1_11_AWLEN,
      xt_rsc_1_11_AWADDR, xt_rsc_1_11_AWID, core_wen, xt_rsc_1_11_i_oswt, xt_rsc_1_11_i_wen_comp,
      xt_rsc_1_11_i_oswt_1, xt_rsc_1_11_i_wen_comp_1, xt_rsc_1_11_i_s_raddr_core,
      xt_rsc_1_11_i_s_waddr_core, xt_rsc_1_11_i_s_din_mxwt, xt_rsc_1_11_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_11_s_tdone;
  input xt_rsc_1_11_tr_write_done;
  input xt_rsc_1_11_RREADY;
  output xt_rsc_1_11_RVALID;
  output xt_rsc_1_11_RUSER;
  output xt_rsc_1_11_RLAST;
  output [1:0] xt_rsc_1_11_RRESP;
  output [31:0] xt_rsc_1_11_RDATA;
  output xt_rsc_1_11_RID;
  output xt_rsc_1_11_ARREADY;
  input xt_rsc_1_11_ARVALID;
  input xt_rsc_1_11_ARUSER;
  input [3:0] xt_rsc_1_11_ARREGION;
  input [3:0] xt_rsc_1_11_ARQOS;
  input [2:0] xt_rsc_1_11_ARPROT;
  input [3:0] xt_rsc_1_11_ARCACHE;
  input xt_rsc_1_11_ARLOCK;
  input [1:0] xt_rsc_1_11_ARBURST;
  input [2:0] xt_rsc_1_11_ARSIZE;
  input [7:0] xt_rsc_1_11_ARLEN;
  input [11:0] xt_rsc_1_11_ARADDR;
  input xt_rsc_1_11_ARID;
  input xt_rsc_1_11_BREADY;
  output xt_rsc_1_11_BVALID;
  output xt_rsc_1_11_BUSER;
  output [1:0] xt_rsc_1_11_BRESP;
  output xt_rsc_1_11_BID;
  output xt_rsc_1_11_WREADY;
  input xt_rsc_1_11_WVALID;
  input xt_rsc_1_11_WUSER;
  input xt_rsc_1_11_WLAST;
  input [3:0] xt_rsc_1_11_WSTRB;
  input [31:0] xt_rsc_1_11_WDATA;
  output xt_rsc_1_11_AWREADY;
  input xt_rsc_1_11_AWVALID;
  input xt_rsc_1_11_AWUSER;
  input [3:0] xt_rsc_1_11_AWREGION;
  input [3:0] xt_rsc_1_11_AWQOS;
  input [2:0] xt_rsc_1_11_AWPROT;
  input [3:0] xt_rsc_1_11_AWCACHE;
  input xt_rsc_1_11_AWLOCK;
  input [1:0] xt_rsc_1_11_AWBURST;
  input [2:0] xt_rsc_1_11_AWSIZE;
  input [7:0] xt_rsc_1_11_AWLEN;
  input [11:0] xt_rsc_1_11_AWADDR;
  input xt_rsc_1_11_AWID;
  input core_wen;
  input xt_rsc_1_11_i_oswt;
  output xt_rsc_1_11_i_wen_comp;
  input xt_rsc_1_11_i_oswt_1;
  output xt_rsc_1_11_i_wen_comp_1;
  input [3:0] xt_rsc_1_11_i_s_raddr_core;
  input [3:0] xt_rsc_1_11_i_s_waddr_core;
  output [31:0] xt_rsc_1_11_i_s_din_mxwt;
  input [31:0] xt_rsc_1_11_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_11_i_biwt;
  wire xt_rsc_1_11_i_bdwt;
  wire xt_rsc_1_11_i_bcwt;
  wire xt_rsc_1_11_i_s_re_core_sct;
  wire xt_rsc_1_11_i_biwt_1;
  wire xt_rsc_1_11_i_bdwt_2;
  wire xt_rsc_1_11_i_bcwt_1;
  wire xt_rsc_1_11_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_11_i_s_raddr;
  wire [3:0] xt_rsc_1_11_i_s_waddr;
  wire [31:0] xt_rsc_1_11_i_s_din;
  wire [31:0] xt_rsc_1_11_i_s_dout;
  wire xt_rsc_1_11_i_s_rrdy;
  wire xt_rsc_1_11_i_s_wrdy;
  wire xt_rsc_1_11_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_11_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_11_AWID),
      .AWADDR(xt_rsc_1_11_AWADDR),
      .AWLEN(xt_rsc_1_11_AWLEN),
      .AWSIZE(xt_rsc_1_11_AWSIZE),
      .AWBURST(xt_rsc_1_11_AWBURST),
      .AWLOCK(xt_rsc_1_11_AWLOCK),
      .AWCACHE(xt_rsc_1_11_AWCACHE),
      .AWPROT(xt_rsc_1_11_AWPROT),
      .AWQOS(xt_rsc_1_11_AWQOS),
      .AWREGION(xt_rsc_1_11_AWREGION),
      .AWUSER(xt_rsc_1_11_AWUSER),
      .AWVALID(xt_rsc_1_11_AWVALID),
      .AWREADY(xt_rsc_1_11_AWREADY),
      .WDATA(xt_rsc_1_11_WDATA),
      .WSTRB(xt_rsc_1_11_WSTRB),
      .WLAST(xt_rsc_1_11_WLAST),
      .WUSER(xt_rsc_1_11_WUSER),
      .WVALID(xt_rsc_1_11_WVALID),
      .WREADY(xt_rsc_1_11_WREADY),
      .BID(xt_rsc_1_11_BID),
      .BRESP(xt_rsc_1_11_BRESP),
      .BUSER(xt_rsc_1_11_BUSER),
      .BVALID(xt_rsc_1_11_BVALID),
      .BREADY(xt_rsc_1_11_BREADY),
      .ARID(xt_rsc_1_11_ARID),
      .ARADDR(xt_rsc_1_11_ARADDR),
      .ARLEN(xt_rsc_1_11_ARLEN),
      .ARSIZE(xt_rsc_1_11_ARSIZE),
      .ARBURST(xt_rsc_1_11_ARBURST),
      .ARLOCK(xt_rsc_1_11_ARLOCK),
      .ARCACHE(xt_rsc_1_11_ARCACHE),
      .ARPROT(xt_rsc_1_11_ARPROT),
      .ARQOS(xt_rsc_1_11_ARQOS),
      .ARREGION(xt_rsc_1_11_ARREGION),
      .ARUSER(xt_rsc_1_11_ARUSER),
      .ARVALID(xt_rsc_1_11_ARVALID),
      .ARREADY(xt_rsc_1_11_ARREADY),
      .RID(xt_rsc_1_11_RID),
      .RDATA(xt_rsc_1_11_RDATA),
      .RRESP(xt_rsc_1_11_RRESP),
      .RLAST(xt_rsc_1_11_RLAST),
      .RUSER(xt_rsc_1_11_RUSER),
      .RVALID(xt_rsc_1_11_RVALID),
      .RREADY(xt_rsc_1_11_RREADY),
      .s_re(xt_rsc_1_11_i_s_re_core_sct),
      .s_we(xt_rsc_1_11_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_11_i_s_raddr),
      .s_waddr(xt_rsc_1_11_i_s_waddr),
      .s_din(xt_rsc_1_11_i_s_din),
      .s_dout(xt_rsc_1_11_i_s_dout),
      .s_rrdy(xt_rsc_1_11_i_s_rrdy),
      .s_wrdy(xt_rsc_1_11_i_s_wrdy),
      .is_idle(xt_rsc_1_11_is_idle_1),
      .tr_write_done(xt_rsc_1_11_tr_write_done),
      .s_tdone(xt_rsc_1_11_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_11_i_xt_rsc_1_11_wait_ctrl peaseNTT_core_xt_rsc_1_11_i_xt_rsc_1_11_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_11_i_oswt(xt_rsc_1_11_i_oswt),
      .xt_rsc_1_11_i_oswt_1(xt_rsc_1_11_i_oswt_1),
      .xt_rsc_1_11_i_biwt(xt_rsc_1_11_i_biwt),
      .xt_rsc_1_11_i_bdwt(xt_rsc_1_11_i_bdwt),
      .xt_rsc_1_11_i_bcwt(xt_rsc_1_11_i_bcwt),
      .xt_rsc_1_11_i_s_re_core_sct(xt_rsc_1_11_i_s_re_core_sct),
      .xt_rsc_1_11_i_biwt_1(xt_rsc_1_11_i_biwt_1),
      .xt_rsc_1_11_i_bdwt_2(xt_rsc_1_11_i_bdwt_2),
      .xt_rsc_1_11_i_bcwt_1(xt_rsc_1_11_i_bcwt_1),
      .xt_rsc_1_11_i_s_we_core_sct(xt_rsc_1_11_i_s_we_core_sct),
      .xt_rsc_1_11_i_s_rrdy(xt_rsc_1_11_i_s_rrdy),
      .xt_rsc_1_11_i_s_wrdy(xt_rsc_1_11_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_11_i_xt_rsc_1_11_wait_dp peaseNTT_core_xt_rsc_1_11_i_xt_rsc_1_11_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_11_i_oswt(xt_rsc_1_11_i_oswt),
      .xt_rsc_1_11_i_wen_comp(xt_rsc_1_11_i_wen_comp),
      .xt_rsc_1_11_i_oswt_1(xt_rsc_1_11_i_oswt_1),
      .xt_rsc_1_11_i_wen_comp_1(xt_rsc_1_11_i_wen_comp_1),
      .xt_rsc_1_11_i_s_raddr_core(xt_rsc_1_11_i_s_raddr_core),
      .xt_rsc_1_11_i_s_waddr_core(xt_rsc_1_11_i_s_waddr_core),
      .xt_rsc_1_11_i_s_din_mxwt(xt_rsc_1_11_i_s_din_mxwt),
      .xt_rsc_1_11_i_s_dout_core(xt_rsc_1_11_i_s_dout_core),
      .xt_rsc_1_11_i_biwt(xt_rsc_1_11_i_biwt),
      .xt_rsc_1_11_i_bdwt(xt_rsc_1_11_i_bdwt),
      .xt_rsc_1_11_i_bcwt(xt_rsc_1_11_i_bcwt),
      .xt_rsc_1_11_i_biwt_1(xt_rsc_1_11_i_biwt_1),
      .xt_rsc_1_11_i_bdwt_2(xt_rsc_1_11_i_bdwt_2),
      .xt_rsc_1_11_i_bcwt_1(xt_rsc_1_11_i_bcwt_1),
      .xt_rsc_1_11_i_s_raddr(xt_rsc_1_11_i_s_raddr),
      .xt_rsc_1_11_i_s_raddr_core_sct(xt_rsc_1_11_i_s_re_core_sct),
      .xt_rsc_1_11_i_s_waddr(xt_rsc_1_11_i_s_waddr),
      .xt_rsc_1_11_i_s_waddr_core_sct(xt_rsc_1_11_i_s_we_core_sct),
      .xt_rsc_1_11_i_s_din(xt_rsc_1_11_i_s_din),
      .xt_rsc_1_11_i_s_dout(xt_rsc_1_11_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_10_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_10_i (
  clk, rst, xt_rsc_1_10_s_tdone, xt_rsc_1_10_tr_write_done, xt_rsc_1_10_RREADY, xt_rsc_1_10_RVALID,
      xt_rsc_1_10_RUSER, xt_rsc_1_10_RLAST, xt_rsc_1_10_RRESP, xt_rsc_1_10_RDATA,
      xt_rsc_1_10_RID, xt_rsc_1_10_ARREADY, xt_rsc_1_10_ARVALID, xt_rsc_1_10_ARUSER,
      xt_rsc_1_10_ARREGION, xt_rsc_1_10_ARQOS, xt_rsc_1_10_ARPROT, xt_rsc_1_10_ARCACHE,
      xt_rsc_1_10_ARLOCK, xt_rsc_1_10_ARBURST, xt_rsc_1_10_ARSIZE, xt_rsc_1_10_ARLEN,
      xt_rsc_1_10_ARADDR, xt_rsc_1_10_ARID, xt_rsc_1_10_BREADY, xt_rsc_1_10_BVALID,
      xt_rsc_1_10_BUSER, xt_rsc_1_10_BRESP, xt_rsc_1_10_BID, xt_rsc_1_10_WREADY,
      xt_rsc_1_10_WVALID, xt_rsc_1_10_WUSER, xt_rsc_1_10_WLAST, xt_rsc_1_10_WSTRB,
      xt_rsc_1_10_WDATA, xt_rsc_1_10_AWREADY, xt_rsc_1_10_AWVALID, xt_rsc_1_10_AWUSER,
      xt_rsc_1_10_AWREGION, xt_rsc_1_10_AWQOS, xt_rsc_1_10_AWPROT, xt_rsc_1_10_AWCACHE,
      xt_rsc_1_10_AWLOCK, xt_rsc_1_10_AWBURST, xt_rsc_1_10_AWSIZE, xt_rsc_1_10_AWLEN,
      xt_rsc_1_10_AWADDR, xt_rsc_1_10_AWID, core_wen, xt_rsc_1_10_i_oswt, xt_rsc_1_10_i_wen_comp,
      xt_rsc_1_10_i_oswt_1, xt_rsc_1_10_i_wen_comp_1, xt_rsc_1_10_i_s_raddr_core,
      xt_rsc_1_10_i_s_waddr_core, xt_rsc_1_10_i_s_din_mxwt, xt_rsc_1_10_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_10_s_tdone;
  input xt_rsc_1_10_tr_write_done;
  input xt_rsc_1_10_RREADY;
  output xt_rsc_1_10_RVALID;
  output xt_rsc_1_10_RUSER;
  output xt_rsc_1_10_RLAST;
  output [1:0] xt_rsc_1_10_RRESP;
  output [31:0] xt_rsc_1_10_RDATA;
  output xt_rsc_1_10_RID;
  output xt_rsc_1_10_ARREADY;
  input xt_rsc_1_10_ARVALID;
  input xt_rsc_1_10_ARUSER;
  input [3:0] xt_rsc_1_10_ARREGION;
  input [3:0] xt_rsc_1_10_ARQOS;
  input [2:0] xt_rsc_1_10_ARPROT;
  input [3:0] xt_rsc_1_10_ARCACHE;
  input xt_rsc_1_10_ARLOCK;
  input [1:0] xt_rsc_1_10_ARBURST;
  input [2:0] xt_rsc_1_10_ARSIZE;
  input [7:0] xt_rsc_1_10_ARLEN;
  input [11:0] xt_rsc_1_10_ARADDR;
  input xt_rsc_1_10_ARID;
  input xt_rsc_1_10_BREADY;
  output xt_rsc_1_10_BVALID;
  output xt_rsc_1_10_BUSER;
  output [1:0] xt_rsc_1_10_BRESP;
  output xt_rsc_1_10_BID;
  output xt_rsc_1_10_WREADY;
  input xt_rsc_1_10_WVALID;
  input xt_rsc_1_10_WUSER;
  input xt_rsc_1_10_WLAST;
  input [3:0] xt_rsc_1_10_WSTRB;
  input [31:0] xt_rsc_1_10_WDATA;
  output xt_rsc_1_10_AWREADY;
  input xt_rsc_1_10_AWVALID;
  input xt_rsc_1_10_AWUSER;
  input [3:0] xt_rsc_1_10_AWREGION;
  input [3:0] xt_rsc_1_10_AWQOS;
  input [2:0] xt_rsc_1_10_AWPROT;
  input [3:0] xt_rsc_1_10_AWCACHE;
  input xt_rsc_1_10_AWLOCK;
  input [1:0] xt_rsc_1_10_AWBURST;
  input [2:0] xt_rsc_1_10_AWSIZE;
  input [7:0] xt_rsc_1_10_AWLEN;
  input [11:0] xt_rsc_1_10_AWADDR;
  input xt_rsc_1_10_AWID;
  input core_wen;
  input xt_rsc_1_10_i_oswt;
  output xt_rsc_1_10_i_wen_comp;
  input xt_rsc_1_10_i_oswt_1;
  output xt_rsc_1_10_i_wen_comp_1;
  input [3:0] xt_rsc_1_10_i_s_raddr_core;
  input [3:0] xt_rsc_1_10_i_s_waddr_core;
  output [31:0] xt_rsc_1_10_i_s_din_mxwt;
  input [31:0] xt_rsc_1_10_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_10_i_biwt;
  wire xt_rsc_1_10_i_bdwt;
  wire xt_rsc_1_10_i_bcwt;
  wire xt_rsc_1_10_i_s_re_core_sct;
  wire xt_rsc_1_10_i_biwt_1;
  wire xt_rsc_1_10_i_bdwt_2;
  wire xt_rsc_1_10_i_bcwt_1;
  wire xt_rsc_1_10_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_10_i_s_raddr;
  wire [3:0] xt_rsc_1_10_i_s_waddr;
  wire [31:0] xt_rsc_1_10_i_s_din;
  wire [31:0] xt_rsc_1_10_i_s_dout;
  wire xt_rsc_1_10_i_s_rrdy;
  wire xt_rsc_1_10_i_s_wrdy;
  wire xt_rsc_1_10_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_10_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_10_AWID),
      .AWADDR(xt_rsc_1_10_AWADDR),
      .AWLEN(xt_rsc_1_10_AWLEN),
      .AWSIZE(xt_rsc_1_10_AWSIZE),
      .AWBURST(xt_rsc_1_10_AWBURST),
      .AWLOCK(xt_rsc_1_10_AWLOCK),
      .AWCACHE(xt_rsc_1_10_AWCACHE),
      .AWPROT(xt_rsc_1_10_AWPROT),
      .AWQOS(xt_rsc_1_10_AWQOS),
      .AWREGION(xt_rsc_1_10_AWREGION),
      .AWUSER(xt_rsc_1_10_AWUSER),
      .AWVALID(xt_rsc_1_10_AWVALID),
      .AWREADY(xt_rsc_1_10_AWREADY),
      .WDATA(xt_rsc_1_10_WDATA),
      .WSTRB(xt_rsc_1_10_WSTRB),
      .WLAST(xt_rsc_1_10_WLAST),
      .WUSER(xt_rsc_1_10_WUSER),
      .WVALID(xt_rsc_1_10_WVALID),
      .WREADY(xt_rsc_1_10_WREADY),
      .BID(xt_rsc_1_10_BID),
      .BRESP(xt_rsc_1_10_BRESP),
      .BUSER(xt_rsc_1_10_BUSER),
      .BVALID(xt_rsc_1_10_BVALID),
      .BREADY(xt_rsc_1_10_BREADY),
      .ARID(xt_rsc_1_10_ARID),
      .ARADDR(xt_rsc_1_10_ARADDR),
      .ARLEN(xt_rsc_1_10_ARLEN),
      .ARSIZE(xt_rsc_1_10_ARSIZE),
      .ARBURST(xt_rsc_1_10_ARBURST),
      .ARLOCK(xt_rsc_1_10_ARLOCK),
      .ARCACHE(xt_rsc_1_10_ARCACHE),
      .ARPROT(xt_rsc_1_10_ARPROT),
      .ARQOS(xt_rsc_1_10_ARQOS),
      .ARREGION(xt_rsc_1_10_ARREGION),
      .ARUSER(xt_rsc_1_10_ARUSER),
      .ARVALID(xt_rsc_1_10_ARVALID),
      .ARREADY(xt_rsc_1_10_ARREADY),
      .RID(xt_rsc_1_10_RID),
      .RDATA(xt_rsc_1_10_RDATA),
      .RRESP(xt_rsc_1_10_RRESP),
      .RLAST(xt_rsc_1_10_RLAST),
      .RUSER(xt_rsc_1_10_RUSER),
      .RVALID(xt_rsc_1_10_RVALID),
      .RREADY(xt_rsc_1_10_RREADY),
      .s_re(xt_rsc_1_10_i_s_re_core_sct),
      .s_we(xt_rsc_1_10_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_10_i_s_raddr),
      .s_waddr(xt_rsc_1_10_i_s_waddr),
      .s_din(xt_rsc_1_10_i_s_din),
      .s_dout(xt_rsc_1_10_i_s_dout),
      .s_rrdy(xt_rsc_1_10_i_s_rrdy),
      .s_wrdy(xt_rsc_1_10_i_s_wrdy),
      .is_idle(xt_rsc_1_10_is_idle_1),
      .tr_write_done(xt_rsc_1_10_tr_write_done),
      .s_tdone(xt_rsc_1_10_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_10_i_xt_rsc_1_10_wait_ctrl peaseNTT_core_xt_rsc_1_10_i_xt_rsc_1_10_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_10_i_oswt(xt_rsc_1_10_i_oswt),
      .xt_rsc_1_10_i_oswt_1(xt_rsc_1_10_i_oswt_1),
      .xt_rsc_1_10_i_biwt(xt_rsc_1_10_i_biwt),
      .xt_rsc_1_10_i_bdwt(xt_rsc_1_10_i_bdwt),
      .xt_rsc_1_10_i_bcwt(xt_rsc_1_10_i_bcwt),
      .xt_rsc_1_10_i_s_re_core_sct(xt_rsc_1_10_i_s_re_core_sct),
      .xt_rsc_1_10_i_biwt_1(xt_rsc_1_10_i_biwt_1),
      .xt_rsc_1_10_i_bdwt_2(xt_rsc_1_10_i_bdwt_2),
      .xt_rsc_1_10_i_bcwt_1(xt_rsc_1_10_i_bcwt_1),
      .xt_rsc_1_10_i_s_we_core_sct(xt_rsc_1_10_i_s_we_core_sct),
      .xt_rsc_1_10_i_s_rrdy(xt_rsc_1_10_i_s_rrdy),
      .xt_rsc_1_10_i_s_wrdy(xt_rsc_1_10_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_10_i_xt_rsc_1_10_wait_dp peaseNTT_core_xt_rsc_1_10_i_xt_rsc_1_10_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_10_i_oswt(xt_rsc_1_10_i_oswt),
      .xt_rsc_1_10_i_wen_comp(xt_rsc_1_10_i_wen_comp),
      .xt_rsc_1_10_i_oswt_1(xt_rsc_1_10_i_oswt_1),
      .xt_rsc_1_10_i_wen_comp_1(xt_rsc_1_10_i_wen_comp_1),
      .xt_rsc_1_10_i_s_raddr_core(xt_rsc_1_10_i_s_raddr_core),
      .xt_rsc_1_10_i_s_waddr_core(xt_rsc_1_10_i_s_waddr_core),
      .xt_rsc_1_10_i_s_din_mxwt(xt_rsc_1_10_i_s_din_mxwt),
      .xt_rsc_1_10_i_s_dout_core(xt_rsc_1_10_i_s_dout_core),
      .xt_rsc_1_10_i_biwt(xt_rsc_1_10_i_biwt),
      .xt_rsc_1_10_i_bdwt(xt_rsc_1_10_i_bdwt),
      .xt_rsc_1_10_i_bcwt(xt_rsc_1_10_i_bcwt),
      .xt_rsc_1_10_i_biwt_1(xt_rsc_1_10_i_biwt_1),
      .xt_rsc_1_10_i_bdwt_2(xt_rsc_1_10_i_bdwt_2),
      .xt_rsc_1_10_i_bcwt_1(xt_rsc_1_10_i_bcwt_1),
      .xt_rsc_1_10_i_s_raddr(xt_rsc_1_10_i_s_raddr),
      .xt_rsc_1_10_i_s_raddr_core_sct(xt_rsc_1_10_i_s_re_core_sct),
      .xt_rsc_1_10_i_s_waddr(xt_rsc_1_10_i_s_waddr),
      .xt_rsc_1_10_i_s_waddr_core_sct(xt_rsc_1_10_i_s_we_core_sct),
      .xt_rsc_1_10_i_s_din(xt_rsc_1_10_i_s_din),
      .xt_rsc_1_10_i_s_dout(xt_rsc_1_10_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_9_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_9_i (
  clk, rst, xt_rsc_1_9_s_tdone, xt_rsc_1_9_tr_write_done, xt_rsc_1_9_RREADY, xt_rsc_1_9_RVALID,
      xt_rsc_1_9_RUSER, xt_rsc_1_9_RLAST, xt_rsc_1_9_RRESP, xt_rsc_1_9_RDATA, xt_rsc_1_9_RID,
      xt_rsc_1_9_ARREADY, xt_rsc_1_9_ARVALID, xt_rsc_1_9_ARUSER, xt_rsc_1_9_ARREGION,
      xt_rsc_1_9_ARQOS, xt_rsc_1_9_ARPROT, xt_rsc_1_9_ARCACHE, xt_rsc_1_9_ARLOCK,
      xt_rsc_1_9_ARBURST, xt_rsc_1_9_ARSIZE, xt_rsc_1_9_ARLEN, xt_rsc_1_9_ARADDR,
      xt_rsc_1_9_ARID, xt_rsc_1_9_BREADY, xt_rsc_1_9_BVALID, xt_rsc_1_9_BUSER, xt_rsc_1_9_BRESP,
      xt_rsc_1_9_BID, xt_rsc_1_9_WREADY, xt_rsc_1_9_WVALID, xt_rsc_1_9_WUSER, xt_rsc_1_9_WLAST,
      xt_rsc_1_9_WSTRB, xt_rsc_1_9_WDATA, xt_rsc_1_9_AWREADY, xt_rsc_1_9_AWVALID,
      xt_rsc_1_9_AWUSER, xt_rsc_1_9_AWREGION, xt_rsc_1_9_AWQOS, xt_rsc_1_9_AWPROT,
      xt_rsc_1_9_AWCACHE, xt_rsc_1_9_AWLOCK, xt_rsc_1_9_AWBURST, xt_rsc_1_9_AWSIZE,
      xt_rsc_1_9_AWLEN, xt_rsc_1_9_AWADDR, xt_rsc_1_9_AWID, core_wen, xt_rsc_1_9_i_oswt,
      xt_rsc_1_9_i_wen_comp, xt_rsc_1_9_i_oswt_1, xt_rsc_1_9_i_wen_comp_1, xt_rsc_1_9_i_s_raddr_core,
      xt_rsc_1_9_i_s_waddr_core, xt_rsc_1_9_i_s_din_mxwt, xt_rsc_1_9_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_9_s_tdone;
  input xt_rsc_1_9_tr_write_done;
  input xt_rsc_1_9_RREADY;
  output xt_rsc_1_9_RVALID;
  output xt_rsc_1_9_RUSER;
  output xt_rsc_1_9_RLAST;
  output [1:0] xt_rsc_1_9_RRESP;
  output [31:0] xt_rsc_1_9_RDATA;
  output xt_rsc_1_9_RID;
  output xt_rsc_1_9_ARREADY;
  input xt_rsc_1_9_ARVALID;
  input xt_rsc_1_9_ARUSER;
  input [3:0] xt_rsc_1_9_ARREGION;
  input [3:0] xt_rsc_1_9_ARQOS;
  input [2:0] xt_rsc_1_9_ARPROT;
  input [3:0] xt_rsc_1_9_ARCACHE;
  input xt_rsc_1_9_ARLOCK;
  input [1:0] xt_rsc_1_9_ARBURST;
  input [2:0] xt_rsc_1_9_ARSIZE;
  input [7:0] xt_rsc_1_9_ARLEN;
  input [11:0] xt_rsc_1_9_ARADDR;
  input xt_rsc_1_9_ARID;
  input xt_rsc_1_9_BREADY;
  output xt_rsc_1_9_BVALID;
  output xt_rsc_1_9_BUSER;
  output [1:0] xt_rsc_1_9_BRESP;
  output xt_rsc_1_9_BID;
  output xt_rsc_1_9_WREADY;
  input xt_rsc_1_9_WVALID;
  input xt_rsc_1_9_WUSER;
  input xt_rsc_1_9_WLAST;
  input [3:0] xt_rsc_1_9_WSTRB;
  input [31:0] xt_rsc_1_9_WDATA;
  output xt_rsc_1_9_AWREADY;
  input xt_rsc_1_9_AWVALID;
  input xt_rsc_1_9_AWUSER;
  input [3:0] xt_rsc_1_9_AWREGION;
  input [3:0] xt_rsc_1_9_AWQOS;
  input [2:0] xt_rsc_1_9_AWPROT;
  input [3:0] xt_rsc_1_9_AWCACHE;
  input xt_rsc_1_9_AWLOCK;
  input [1:0] xt_rsc_1_9_AWBURST;
  input [2:0] xt_rsc_1_9_AWSIZE;
  input [7:0] xt_rsc_1_9_AWLEN;
  input [11:0] xt_rsc_1_9_AWADDR;
  input xt_rsc_1_9_AWID;
  input core_wen;
  input xt_rsc_1_9_i_oswt;
  output xt_rsc_1_9_i_wen_comp;
  input xt_rsc_1_9_i_oswt_1;
  output xt_rsc_1_9_i_wen_comp_1;
  input [3:0] xt_rsc_1_9_i_s_raddr_core;
  input [3:0] xt_rsc_1_9_i_s_waddr_core;
  output [31:0] xt_rsc_1_9_i_s_din_mxwt;
  input [31:0] xt_rsc_1_9_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_9_i_biwt;
  wire xt_rsc_1_9_i_bdwt;
  wire xt_rsc_1_9_i_bcwt;
  wire xt_rsc_1_9_i_s_re_core_sct;
  wire xt_rsc_1_9_i_biwt_1;
  wire xt_rsc_1_9_i_bdwt_2;
  wire xt_rsc_1_9_i_bcwt_1;
  wire xt_rsc_1_9_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_9_i_s_raddr;
  wire [3:0] xt_rsc_1_9_i_s_waddr;
  wire [31:0] xt_rsc_1_9_i_s_din;
  wire [31:0] xt_rsc_1_9_i_s_dout;
  wire xt_rsc_1_9_i_s_rrdy;
  wire xt_rsc_1_9_i_s_wrdy;
  wire xt_rsc_1_9_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_9_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_9_AWID),
      .AWADDR(xt_rsc_1_9_AWADDR),
      .AWLEN(xt_rsc_1_9_AWLEN),
      .AWSIZE(xt_rsc_1_9_AWSIZE),
      .AWBURST(xt_rsc_1_9_AWBURST),
      .AWLOCK(xt_rsc_1_9_AWLOCK),
      .AWCACHE(xt_rsc_1_9_AWCACHE),
      .AWPROT(xt_rsc_1_9_AWPROT),
      .AWQOS(xt_rsc_1_9_AWQOS),
      .AWREGION(xt_rsc_1_9_AWREGION),
      .AWUSER(xt_rsc_1_9_AWUSER),
      .AWVALID(xt_rsc_1_9_AWVALID),
      .AWREADY(xt_rsc_1_9_AWREADY),
      .WDATA(xt_rsc_1_9_WDATA),
      .WSTRB(xt_rsc_1_9_WSTRB),
      .WLAST(xt_rsc_1_9_WLAST),
      .WUSER(xt_rsc_1_9_WUSER),
      .WVALID(xt_rsc_1_9_WVALID),
      .WREADY(xt_rsc_1_9_WREADY),
      .BID(xt_rsc_1_9_BID),
      .BRESP(xt_rsc_1_9_BRESP),
      .BUSER(xt_rsc_1_9_BUSER),
      .BVALID(xt_rsc_1_9_BVALID),
      .BREADY(xt_rsc_1_9_BREADY),
      .ARID(xt_rsc_1_9_ARID),
      .ARADDR(xt_rsc_1_9_ARADDR),
      .ARLEN(xt_rsc_1_9_ARLEN),
      .ARSIZE(xt_rsc_1_9_ARSIZE),
      .ARBURST(xt_rsc_1_9_ARBURST),
      .ARLOCK(xt_rsc_1_9_ARLOCK),
      .ARCACHE(xt_rsc_1_9_ARCACHE),
      .ARPROT(xt_rsc_1_9_ARPROT),
      .ARQOS(xt_rsc_1_9_ARQOS),
      .ARREGION(xt_rsc_1_9_ARREGION),
      .ARUSER(xt_rsc_1_9_ARUSER),
      .ARVALID(xt_rsc_1_9_ARVALID),
      .ARREADY(xt_rsc_1_9_ARREADY),
      .RID(xt_rsc_1_9_RID),
      .RDATA(xt_rsc_1_9_RDATA),
      .RRESP(xt_rsc_1_9_RRESP),
      .RLAST(xt_rsc_1_9_RLAST),
      .RUSER(xt_rsc_1_9_RUSER),
      .RVALID(xt_rsc_1_9_RVALID),
      .RREADY(xt_rsc_1_9_RREADY),
      .s_re(xt_rsc_1_9_i_s_re_core_sct),
      .s_we(xt_rsc_1_9_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_9_i_s_raddr),
      .s_waddr(xt_rsc_1_9_i_s_waddr),
      .s_din(xt_rsc_1_9_i_s_din),
      .s_dout(xt_rsc_1_9_i_s_dout),
      .s_rrdy(xt_rsc_1_9_i_s_rrdy),
      .s_wrdy(xt_rsc_1_9_i_s_wrdy),
      .is_idle(xt_rsc_1_9_is_idle_1),
      .tr_write_done(xt_rsc_1_9_tr_write_done),
      .s_tdone(xt_rsc_1_9_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_9_i_xt_rsc_1_9_wait_ctrl peaseNTT_core_xt_rsc_1_9_i_xt_rsc_1_9_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_9_i_oswt(xt_rsc_1_9_i_oswt),
      .xt_rsc_1_9_i_oswt_1(xt_rsc_1_9_i_oswt_1),
      .xt_rsc_1_9_i_biwt(xt_rsc_1_9_i_biwt),
      .xt_rsc_1_9_i_bdwt(xt_rsc_1_9_i_bdwt),
      .xt_rsc_1_9_i_bcwt(xt_rsc_1_9_i_bcwt),
      .xt_rsc_1_9_i_s_re_core_sct(xt_rsc_1_9_i_s_re_core_sct),
      .xt_rsc_1_9_i_biwt_1(xt_rsc_1_9_i_biwt_1),
      .xt_rsc_1_9_i_bdwt_2(xt_rsc_1_9_i_bdwt_2),
      .xt_rsc_1_9_i_bcwt_1(xt_rsc_1_9_i_bcwt_1),
      .xt_rsc_1_9_i_s_we_core_sct(xt_rsc_1_9_i_s_we_core_sct),
      .xt_rsc_1_9_i_s_rrdy(xt_rsc_1_9_i_s_rrdy),
      .xt_rsc_1_9_i_s_wrdy(xt_rsc_1_9_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_9_i_xt_rsc_1_9_wait_dp peaseNTT_core_xt_rsc_1_9_i_xt_rsc_1_9_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_9_i_oswt(xt_rsc_1_9_i_oswt),
      .xt_rsc_1_9_i_wen_comp(xt_rsc_1_9_i_wen_comp),
      .xt_rsc_1_9_i_oswt_1(xt_rsc_1_9_i_oswt_1),
      .xt_rsc_1_9_i_wen_comp_1(xt_rsc_1_9_i_wen_comp_1),
      .xt_rsc_1_9_i_s_raddr_core(xt_rsc_1_9_i_s_raddr_core),
      .xt_rsc_1_9_i_s_waddr_core(xt_rsc_1_9_i_s_waddr_core),
      .xt_rsc_1_9_i_s_din_mxwt(xt_rsc_1_9_i_s_din_mxwt),
      .xt_rsc_1_9_i_s_dout_core(xt_rsc_1_9_i_s_dout_core),
      .xt_rsc_1_9_i_biwt(xt_rsc_1_9_i_biwt),
      .xt_rsc_1_9_i_bdwt(xt_rsc_1_9_i_bdwt),
      .xt_rsc_1_9_i_bcwt(xt_rsc_1_9_i_bcwt),
      .xt_rsc_1_9_i_biwt_1(xt_rsc_1_9_i_biwt_1),
      .xt_rsc_1_9_i_bdwt_2(xt_rsc_1_9_i_bdwt_2),
      .xt_rsc_1_9_i_bcwt_1(xt_rsc_1_9_i_bcwt_1),
      .xt_rsc_1_9_i_s_raddr(xt_rsc_1_9_i_s_raddr),
      .xt_rsc_1_9_i_s_raddr_core_sct(xt_rsc_1_9_i_s_re_core_sct),
      .xt_rsc_1_9_i_s_waddr(xt_rsc_1_9_i_s_waddr),
      .xt_rsc_1_9_i_s_waddr_core_sct(xt_rsc_1_9_i_s_we_core_sct),
      .xt_rsc_1_9_i_s_din(xt_rsc_1_9_i_s_din),
      .xt_rsc_1_9_i_s_dout(xt_rsc_1_9_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_8_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_8_i (
  clk, rst, xt_rsc_1_8_s_tdone, xt_rsc_1_8_tr_write_done, xt_rsc_1_8_RREADY, xt_rsc_1_8_RVALID,
      xt_rsc_1_8_RUSER, xt_rsc_1_8_RLAST, xt_rsc_1_8_RRESP, xt_rsc_1_8_RDATA, xt_rsc_1_8_RID,
      xt_rsc_1_8_ARREADY, xt_rsc_1_8_ARVALID, xt_rsc_1_8_ARUSER, xt_rsc_1_8_ARREGION,
      xt_rsc_1_8_ARQOS, xt_rsc_1_8_ARPROT, xt_rsc_1_8_ARCACHE, xt_rsc_1_8_ARLOCK,
      xt_rsc_1_8_ARBURST, xt_rsc_1_8_ARSIZE, xt_rsc_1_8_ARLEN, xt_rsc_1_8_ARADDR,
      xt_rsc_1_8_ARID, xt_rsc_1_8_BREADY, xt_rsc_1_8_BVALID, xt_rsc_1_8_BUSER, xt_rsc_1_8_BRESP,
      xt_rsc_1_8_BID, xt_rsc_1_8_WREADY, xt_rsc_1_8_WVALID, xt_rsc_1_8_WUSER, xt_rsc_1_8_WLAST,
      xt_rsc_1_8_WSTRB, xt_rsc_1_8_WDATA, xt_rsc_1_8_AWREADY, xt_rsc_1_8_AWVALID,
      xt_rsc_1_8_AWUSER, xt_rsc_1_8_AWREGION, xt_rsc_1_8_AWQOS, xt_rsc_1_8_AWPROT,
      xt_rsc_1_8_AWCACHE, xt_rsc_1_8_AWLOCK, xt_rsc_1_8_AWBURST, xt_rsc_1_8_AWSIZE,
      xt_rsc_1_8_AWLEN, xt_rsc_1_8_AWADDR, xt_rsc_1_8_AWID, core_wen, xt_rsc_1_8_i_oswt,
      xt_rsc_1_8_i_wen_comp, xt_rsc_1_8_i_oswt_1, xt_rsc_1_8_i_wen_comp_1, xt_rsc_1_8_i_s_raddr_core,
      xt_rsc_1_8_i_s_waddr_core, xt_rsc_1_8_i_s_din_mxwt, xt_rsc_1_8_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_8_s_tdone;
  input xt_rsc_1_8_tr_write_done;
  input xt_rsc_1_8_RREADY;
  output xt_rsc_1_8_RVALID;
  output xt_rsc_1_8_RUSER;
  output xt_rsc_1_8_RLAST;
  output [1:0] xt_rsc_1_8_RRESP;
  output [31:0] xt_rsc_1_8_RDATA;
  output xt_rsc_1_8_RID;
  output xt_rsc_1_8_ARREADY;
  input xt_rsc_1_8_ARVALID;
  input xt_rsc_1_8_ARUSER;
  input [3:0] xt_rsc_1_8_ARREGION;
  input [3:0] xt_rsc_1_8_ARQOS;
  input [2:0] xt_rsc_1_8_ARPROT;
  input [3:0] xt_rsc_1_8_ARCACHE;
  input xt_rsc_1_8_ARLOCK;
  input [1:0] xt_rsc_1_8_ARBURST;
  input [2:0] xt_rsc_1_8_ARSIZE;
  input [7:0] xt_rsc_1_8_ARLEN;
  input [11:0] xt_rsc_1_8_ARADDR;
  input xt_rsc_1_8_ARID;
  input xt_rsc_1_8_BREADY;
  output xt_rsc_1_8_BVALID;
  output xt_rsc_1_8_BUSER;
  output [1:0] xt_rsc_1_8_BRESP;
  output xt_rsc_1_8_BID;
  output xt_rsc_1_8_WREADY;
  input xt_rsc_1_8_WVALID;
  input xt_rsc_1_8_WUSER;
  input xt_rsc_1_8_WLAST;
  input [3:0] xt_rsc_1_8_WSTRB;
  input [31:0] xt_rsc_1_8_WDATA;
  output xt_rsc_1_8_AWREADY;
  input xt_rsc_1_8_AWVALID;
  input xt_rsc_1_8_AWUSER;
  input [3:0] xt_rsc_1_8_AWREGION;
  input [3:0] xt_rsc_1_8_AWQOS;
  input [2:0] xt_rsc_1_8_AWPROT;
  input [3:0] xt_rsc_1_8_AWCACHE;
  input xt_rsc_1_8_AWLOCK;
  input [1:0] xt_rsc_1_8_AWBURST;
  input [2:0] xt_rsc_1_8_AWSIZE;
  input [7:0] xt_rsc_1_8_AWLEN;
  input [11:0] xt_rsc_1_8_AWADDR;
  input xt_rsc_1_8_AWID;
  input core_wen;
  input xt_rsc_1_8_i_oswt;
  output xt_rsc_1_8_i_wen_comp;
  input xt_rsc_1_8_i_oswt_1;
  output xt_rsc_1_8_i_wen_comp_1;
  input [3:0] xt_rsc_1_8_i_s_raddr_core;
  input [3:0] xt_rsc_1_8_i_s_waddr_core;
  output [31:0] xt_rsc_1_8_i_s_din_mxwt;
  input [31:0] xt_rsc_1_8_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_8_i_biwt;
  wire xt_rsc_1_8_i_bdwt;
  wire xt_rsc_1_8_i_bcwt;
  wire xt_rsc_1_8_i_s_re_core_sct;
  wire xt_rsc_1_8_i_biwt_1;
  wire xt_rsc_1_8_i_bdwt_2;
  wire xt_rsc_1_8_i_bcwt_1;
  wire xt_rsc_1_8_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_8_i_s_raddr;
  wire [3:0] xt_rsc_1_8_i_s_waddr;
  wire [31:0] xt_rsc_1_8_i_s_din;
  wire [31:0] xt_rsc_1_8_i_s_dout;
  wire xt_rsc_1_8_i_s_rrdy;
  wire xt_rsc_1_8_i_s_wrdy;
  wire xt_rsc_1_8_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_8_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_8_AWID),
      .AWADDR(xt_rsc_1_8_AWADDR),
      .AWLEN(xt_rsc_1_8_AWLEN),
      .AWSIZE(xt_rsc_1_8_AWSIZE),
      .AWBURST(xt_rsc_1_8_AWBURST),
      .AWLOCK(xt_rsc_1_8_AWLOCK),
      .AWCACHE(xt_rsc_1_8_AWCACHE),
      .AWPROT(xt_rsc_1_8_AWPROT),
      .AWQOS(xt_rsc_1_8_AWQOS),
      .AWREGION(xt_rsc_1_8_AWREGION),
      .AWUSER(xt_rsc_1_8_AWUSER),
      .AWVALID(xt_rsc_1_8_AWVALID),
      .AWREADY(xt_rsc_1_8_AWREADY),
      .WDATA(xt_rsc_1_8_WDATA),
      .WSTRB(xt_rsc_1_8_WSTRB),
      .WLAST(xt_rsc_1_8_WLAST),
      .WUSER(xt_rsc_1_8_WUSER),
      .WVALID(xt_rsc_1_8_WVALID),
      .WREADY(xt_rsc_1_8_WREADY),
      .BID(xt_rsc_1_8_BID),
      .BRESP(xt_rsc_1_8_BRESP),
      .BUSER(xt_rsc_1_8_BUSER),
      .BVALID(xt_rsc_1_8_BVALID),
      .BREADY(xt_rsc_1_8_BREADY),
      .ARID(xt_rsc_1_8_ARID),
      .ARADDR(xt_rsc_1_8_ARADDR),
      .ARLEN(xt_rsc_1_8_ARLEN),
      .ARSIZE(xt_rsc_1_8_ARSIZE),
      .ARBURST(xt_rsc_1_8_ARBURST),
      .ARLOCK(xt_rsc_1_8_ARLOCK),
      .ARCACHE(xt_rsc_1_8_ARCACHE),
      .ARPROT(xt_rsc_1_8_ARPROT),
      .ARQOS(xt_rsc_1_8_ARQOS),
      .ARREGION(xt_rsc_1_8_ARREGION),
      .ARUSER(xt_rsc_1_8_ARUSER),
      .ARVALID(xt_rsc_1_8_ARVALID),
      .ARREADY(xt_rsc_1_8_ARREADY),
      .RID(xt_rsc_1_8_RID),
      .RDATA(xt_rsc_1_8_RDATA),
      .RRESP(xt_rsc_1_8_RRESP),
      .RLAST(xt_rsc_1_8_RLAST),
      .RUSER(xt_rsc_1_8_RUSER),
      .RVALID(xt_rsc_1_8_RVALID),
      .RREADY(xt_rsc_1_8_RREADY),
      .s_re(xt_rsc_1_8_i_s_re_core_sct),
      .s_we(xt_rsc_1_8_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_8_i_s_raddr),
      .s_waddr(xt_rsc_1_8_i_s_waddr),
      .s_din(xt_rsc_1_8_i_s_din),
      .s_dout(xt_rsc_1_8_i_s_dout),
      .s_rrdy(xt_rsc_1_8_i_s_rrdy),
      .s_wrdy(xt_rsc_1_8_i_s_wrdy),
      .is_idle(xt_rsc_1_8_is_idle_1),
      .tr_write_done(xt_rsc_1_8_tr_write_done),
      .s_tdone(xt_rsc_1_8_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_8_i_xt_rsc_1_8_wait_ctrl peaseNTT_core_xt_rsc_1_8_i_xt_rsc_1_8_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_8_i_oswt(xt_rsc_1_8_i_oswt),
      .xt_rsc_1_8_i_oswt_1(xt_rsc_1_8_i_oswt_1),
      .xt_rsc_1_8_i_biwt(xt_rsc_1_8_i_biwt),
      .xt_rsc_1_8_i_bdwt(xt_rsc_1_8_i_bdwt),
      .xt_rsc_1_8_i_bcwt(xt_rsc_1_8_i_bcwt),
      .xt_rsc_1_8_i_s_re_core_sct(xt_rsc_1_8_i_s_re_core_sct),
      .xt_rsc_1_8_i_biwt_1(xt_rsc_1_8_i_biwt_1),
      .xt_rsc_1_8_i_bdwt_2(xt_rsc_1_8_i_bdwt_2),
      .xt_rsc_1_8_i_bcwt_1(xt_rsc_1_8_i_bcwt_1),
      .xt_rsc_1_8_i_s_we_core_sct(xt_rsc_1_8_i_s_we_core_sct),
      .xt_rsc_1_8_i_s_rrdy(xt_rsc_1_8_i_s_rrdy),
      .xt_rsc_1_8_i_s_wrdy(xt_rsc_1_8_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_8_i_xt_rsc_1_8_wait_dp peaseNTT_core_xt_rsc_1_8_i_xt_rsc_1_8_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_8_i_oswt(xt_rsc_1_8_i_oswt),
      .xt_rsc_1_8_i_wen_comp(xt_rsc_1_8_i_wen_comp),
      .xt_rsc_1_8_i_oswt_1(xt_rsc_1_8_i_oswt_1),
      .xt_rsc_1_8_i_wen_comp_1(xt_rsc_1_8_i_wen_comp_1),
      .xt_rsc_1_8_i_s_raddr_core(xt_rsc_1_8_i_s_raddr_core),
      .xt_rsc_1_8_i_s_waddr_core(xt_rsc_1_8_i_s_waddr_core),
      .xt_rsc_1_8_i_s_din_mxwt(xt_rsc_1_8_i_s_din_mxwt),
      .xt_rsc_1_8_i_s_dout_core(xt_rsc_1_8_i_s_dout_core),
      .xt_rsc_1_8_i_biwt(xt_rsc_1_8_i_biwt),
      .xt_rsc_1_8_i_bdwt(xt_rsc_1_8_i_bdwt),
      .xt_rsc_1_8_i_bcwt(xt_rsc_1_8_i_bcwt),
      .xt_rsc_1_8_i_biwt_1(xt_rsc_1_8_i_biwt_1),
      .xt_rsc_1_8_i_bdwt_2(xt_rsc_1_8_i_bdwt_2),
      .xt_rsc_1_8_i_bcwt_1(xt_rsc_1_8_i_bcwt_1),
      .xt_rsc_1_8_i_s_raddr(xt_rsc_1_8_i_s_raddr),
      .xt_rsc_1_8_i_s_raddr_core_sct(xt_rsc_1_8_i_s_re_core_sct),
      .xt_rsc_1_8_i_s_waddr(xt_rsc_1_8_i_s_waddr),
      .xt_rsc_1_8_i_s_waddr_core_sct(xt_rsc_1_8_i_s_we_core_sct),
      .xt_rsc_1_8_i_s_din(xt_rsc_1_8_i_s_din),
      .xt_rsc_1_8_i_s_dout(xt_rsc_1_8_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_7_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_7_i (
  clk, rst, xt_rsc_1_7_s_tdone, xt_rsc_1_7_tr_write_done, xt_rsc_1_7_RREADY, xt_rsc_1_7_RVALID,
      xt_rsc_1_7_RUSER, xt_rsc_1_7_RLAST, xt_rsc_1_7_RRESP, xt_rsc_1_7_RDATA, xt_rsc_1_7_RID,
      xt_rsc_1_7_ARREADY, xt_rsc_1_7_ARVALID, xt_rsc_1_7_ARUSER, xt_rsc_1_7_ARREGION,
      xt_rsc_1_7_ARQOS, xt_rsc_1_7_ARPROT, xt_rsc_1_7_ARCACHE, xt_rsc_1_7_ARLOCK,
      xt_rsc_1_7_ARBURST, xt_rsc_1_7_ARSIZE, xt_rsc_1_7_ARLEN, xt_rsc_1_7_ARADDR,
      xt_rsc_1_7_ARID, xt_rsc_1_7_BREADY, xt_rsc_1_7_BVALID, xt_rsc_1_7_BUSER, xt_rsc_1_7_BRESP,
      xt_rsc_1_7_BID, xt_rsc_1_7_WREADY, xt_rsc_1_7_WVALID, xt_rsc_1_7_WUSER, xt_rsc_1_7_WLAST,
      xt_rsc_1_7_WSTRB, xt_rsc_1_7_WDATA, xt_rsc_1_7_AWREADY, xt_rsc_1_7_AWVALID,
      xt_rsc_1_7_AWUSER, xt_rsc_1_7_AWREGION, xt_rsc_1_7_AWQOS, xt_rsc_1_7_AWPROT,
      xt_rsc_1_7_AWCACHE, xt_rsc_1_7_AWLOCK, xt_rsc_1_7_AWBURST, xt_rsc_1_7_AWSIZE,
      xt_rsc_1_7_AWLEN, xt_rsc_1_7_AWADDR, xt_rsc_1_7_AWID, core_wen, xt_rsc_1_7_i_oswt,
      xt_rsc_1_7_i_wen_comp, xt_rsc_1_7_i_oswt_1, xt_rsc_1_7_i_wen_comp_1, xt_rsc_1_7_i_s_raddr_core,
      xt_rsc_1_7_i_s_waddr_core, xt_rsc_1_7_i_s_din_mxwt, xt_rsc_1_7_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_7_s_tdone;
  input xt_rsc_1_7_tr_write_done;
  input xt_rsc_1_7_RREADY;
  output xt_rsc_1_7_RVALID;
  output xt_rsc_1_7_RUSER;
  output xt_rsc_1_7_RLAST;
  output [1:0] xt_rsc_1_7_RRESP;
  output [31:0] xt_rsc_1_7_RDATA;
  output xt_rsc_1_7_RID;
  output xt_rsc_1_7_ARREADY;
  input xt_rsc_1_7_ARVALID;
  input xt_rsc_1_7_ARUSER;
  input [3:0] xt_rsc_1_7_ARREGION;
  input [3:0] xt_rsc_1_7_ARQOS;
  input [2:0] xt_rsc_1_7_ARPROT;
  input [3:0] xt_rsc_1_7_ARCACHE;
  input xt_rsc_1_7_ARLOCK;
  input [1:0] xt_rsc_1_7_ARBURST;
  input [2:0] xt_rsc_1_7_ARSIZE;
  input [7:0] xt_rsc_1_7_ARLEN;
  input [11:0] xt_rsc_1_7_ARADDR;
  input xt_rsc_1_7_ARID;
  input xt_rsc_1_7_BREADY;
  output xt_rsc_1_7_BVALID;
  output xt_rsc_1_7_BUSER;
  output [1:0] xt_rsc_1_7_BRESP;
  output xt_rsc_1_7_BID;
  output xt_rsc_1_7_WREADY;
  input xt_rsc_1_7_WVALID;
  input xt_rsc_1_7_WUSER;
  input xt_rsc_1_7_WLAST;
  input [3:0] xt_rsc_1_7_WSTRB;
  input [31:0] xt_rsc_1_7_WDATA;
  output xt_rsc_1_7_AWREADY;
  input xt_rsc_1_7_AWVALID;
  input xt_rsc_1_7_AWUSER;
  input [3:0] xt_rsc_1_7_AWREGION;
  input [3:0] xt_rsc_1_7_AWQOS;
  input [2:0] xt_rsc_1_7_AWPROT;
  input [3:0] xt_rsc_1_7_AWCACHE;
  input xt_rsc_1_7_AWLOCK;
  input [1:0] xt_rsc_1_7_AWBURST;
  input [2:0] xt_rsc_1_7_AWSIZE;
  input [7:0] xt_rsc_1_7_AWLEN;
  input [11:0] xt_rsc_1_7_AWADDR;
  input xt_rsc_1_7_AWID;
  input core_wen;
  input xt_rsc_1_7_i_oswt;
  output xt_rsc_1_7_i_wen_comp;
  input xt_rsc_1_7_i_oswt_1;
  output xt_rsc_1_7_i_wen_comp_1;
  input [3:0] xt_rsc_1_7_i_s_raddr_core;
  input [3:0] xt_rsc_1_7_i_s_waddr_core;
  output [31:0] xt_rsc_1_7_i_s_din_mxwt;
  input [31:0] xt_rsc_1_7_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_7_i_biwt;
  wire xt_rsc_1_7_i_bdwt;
  wire xt_rsc_1_7_i_bcwt;
  wire xt_rsc_1_7_i_s_re_core_sct;
  wire xt_rsc_1_7_i_biwt_1;
  wire xt_rsc_1_7_i_bdwt_2;
  wire xt_rsc_1_7_i_bcwt_1;
  wire xt_rsc_1_7_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_7_i_s_raddr;
  wire [3:0] xt_rsc_1_7_i_s_waddr;
  wire [31:0] xt_rsc_1_7_i_s_din;
  wire [31:0] xt_rsc_1_7_i_s_dout;
  wire xt_rsc_1_7_i_s_rrdy;
  wire xt_rsc_1_7_i_s_wrdy;
  wire xt_rsc_1_7_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_7_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_7_AWID),
      .AWADDR(xt_rsc_1_7_AWADDR),
      .AWLEN(xt_rsc_1_7_AWLEN),
      .AWSIZE(xt_rsc_1_7_AWSIZE),
      .AWBURST(xt_rsc_1_7_AWBURST),
      .AWLOCK(xt_rsc_1_7_AWLOCK),
      .AWCACHE(xt_rsc_1_7_AWCACHE),
      .AWPROT(xt_rsc_1_7_AWPROT),
      .AWQOS(xt_rsc_1_7_AWQOS),
      .AWREGION(xt_rsc_1_7_AWREGION),
      .AWUSER(xt_rsc_1_7_AWUSER),
      .AWVALID(xt_rsc_1_7_AWVALID),
      .AWREADY(xt_rsc_1_7_AWREADY),
      .WDATA(xt_rsc_1_7_WDATA),
      .WSTRB(xt_rsc_1_7_WSTRB),
      .WLAST(xt_rsc_1_7_WLAST),
      .WUSER(xt_rsc_1_7_WUSER),
      .WVALID(xt_rsc_1_7_WVALID),
      .WREADY(xt_rsc_1_7_WREADY),
      .BID(xt_rsc_1_7_BID),
      .BRESP(xt_rsc_1_7_BRESP),
      .BUSER(xt_rsc_1_7_BUSER),
      .BVALID(xt_rsc_1_7_BVALID),
      .BREADY(xt_rsc_1_7_BREADY),
      .ARID(xt_rsc_1_7_ARID),
      .ARADDR(xt_rsc_1_7_ARADDR),
      .ARLEN(xt_rsc_1_7_ARLEN),
      .ARSIZE(xt_rsc_1_7_ARSIZE),
      .ARBURST(xt_rsc_1_7_ARBURST),
      .ARLOCK(xt_rsc_1_7_ARLOCK),
      .ARCACHE(xt_rsc_1_7_ARCACHE),
      .ARPROT(xt_rsc_1_7_ARPROT),
      .ARQOS(xt_rsc_1_7_ARQOS),
      .ARREGION(xt_rsc_1_7_ARREGION),
      .ARUSER(xt_rsc_1_7_ARUSER),
      .ARVALID(xt_rsc_1_7_ARVALID),
      .ARREADY(xt_rsc_1_7_ARREADY),
      .RID(xt_rsc_1_7_RID),
      .RDATA(xt_rsc_1_7_RDATA),
      .RRESP(xt_rsc_1_7_RRESP),
      .RLAST(xt_rsc_1_7_RLAST),
      .RUSER(xt_rsc_1_7_RUSER),
      .RVALID(xt_rsc_1_7_RVALID),
      .RREADY(xt_rsc_1_7_RREADY),
      .s_re(xt_rsc_1_7_i_s_re_core_sct),
      .s_we(xt_rsc_1_7_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_7_i_s_raddr),
      .s_waddr(xt_rsc_1_7_i_s_waddr),
      .s_din(xt_rsc_1_7_i_s_din),
      .s_dout(xt_rsc_1_7_i_s_dout),
      .s_rrdy(xt_rsc_1_7_i_s_rrdy),
      .s_wrdy(xt_rsc_1_7_i_s_wrdy),
      .is_idle(xt_rsc_1_7_is_idle_1),
      .tr_write_done(xt_rsc_1_7_tr_write_done),
      .s_tdone(xt_rsc_1_7_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_7_i_xt_rsc_1_7_wait_ctrl peaseNTT_core_xt_rsc_1_7_i_xt_rsc_1_7_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_7_i_oswt(xt_rsc_1_7_i_oswt),
      .xt_rsc_1_7_i_oswt_1(xt_rsc_1_7_i_oswt_1),
      .xt_rsc_1_7_i_biwt(xt_rsc_1_7_i_biwt),
      .xt_rsc_1_7_i_bdwt(xt_rsc_1_7_i_bdwt),
      .xt_rsc_1_7_i_bcwt(xt_rsc_1_7_i_bcwt),
      .xt_rsc_1_7_i_s_re_core_sct(xt_rsc_1_7_i_s_re_core_sct),
      .xt_rsc_1_7_i_biwt_1(xt_rsc_1_7_i_biwt_1),
      .xt_rsc_1_7_i_bdwt_2(xt_rsc_1_7_i_bdwt_2),
      .xt_rsc_1_7_i_bcwt_1(xt_rsc_1_7_i_bcwt_1),
      .xt_rsc_1_7_i_s_we_core_sct(xt_rsc_1_7_i_s_we_core_sct),
      .xt_rsc_1_7_i_s_rrdy(xt_rsc_1_7_i_s_rrdy),
      .xt_rsc_1_7_i_s_wrdy(xt_rsc_1_7_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_7_i_xt_rsc_1_7_wait_dp peaseNTT_core_xt_rsc_1_7_i_xt_rsc_1_7_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_7_i_oswt(xt_rsc_1_7_i_oswt),
      .xt_rsc_1_7_i_wen_comp(xt_rsc_1_7_i_wen_comp),
      .xt_rsc_1_7_i_oswt_1(xt_rsc_1_7_i_oswt_1),
      .xt_rsc_1_7_i_wen_comp_1(xt_rsc_1_7_i_wen_comp_1),
      .xt_rsc_1_7_i_s_raddr_core(xt_rsc_1_7_i_s_raddr_core),
      .xt_rsc_1_7_i_s_waddr_core(xt_rsc_1_7_i_s_waddr_core),
      .xt_rsc_1_7_i_s_din_mxwt(xt_rsc_1_7_i_s_din_mxwt),
      .xt_rsc_1_7_i_s_dout_core(xt_rsc_1_7_i_s_dout_core),
      .xt_rsc_1_7_i_biwt(xt_rsc_1_7_i_biwt),
      .xt_rsc_1_7_i_bdwt(xt_rsc_1_7_i_bdwt),
      .xt_rsc_1_7_i_bcwt(xt_rsc_1_7_i_bcwt),
      .xt_rsc_1_7_i_biwt_1(xt_rsc_1_7_i_biwt_1),
      .xt_rsc_1_7_i_bdwt_2(xt_rsc_1_7_i_bdwt_2),
      .xt_rsc_1_7_i_bcwt_1(xt_rsc_1_7_i_bcwt_1),
      .xt_rsc_1_7_i_s_raddr(xt_rsc_1_7_i_s_raddr),
      .xt_rsc_1_7_i_s_raddr_core_sct(xt_rsc_1_7_i_s_re_core_sct),
      .xt_rsc_1_7_i_s_waddr(xt_rsc_1_7_i_s_waddr),
      .xt_rsc_1_7_i_s_waddr_core_sct(xt_rsc_1_7_i_s_we_core_sct),
      .xt_rsc_1_7_i_s_din(xt_rsc_1_7_i_s_din),
      .xt_rsc_1_7_i_s_dout(xt_rsc_1_7_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_6_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_6_i (
  clk, rst, xt_rsc_1_6_s_tdone, xt_rsc_1_6_tr_write_done, xt_rsc_1_6_RREADY, xt_rsc_1_6_RVALID,
      xt_rsc_1_6_RUSER, xt_rsc_1_6_RLAST, xt_rsc_1_6_RRESP, xt_rsc_1_6_RDATA, xt_rsc_1_6_RID,
      xt_rsc_1_6_ARREADY, xt_rsc_1_6_ARVALID, xt_rsc_1_6_ARUSER, xt_rsc_1_6_ARREGION,
      xt_rsc_1_6_ARQOS, xt_rsc_1_6_ARPROT, xt_rsc_1_6_ARCACHE, xt_rsc_1_6_ARLOCK,
      xt_rsc_1_6_ARBURST, xt_rsc_1_6_ARSIZE, xt_rsc_1_6_ARLEN, xt_rsc_1_6_ARADDR,
      xt_rsc_1_6_ARID, xt_rsc_1_6_BREADY, xt_rsc_1_6_BVALID, xt_rsc_1_6_BUSER, xt_rsc_1_6_BRESP,
      xt_rsc_1_6_BID, xt_rsc_1_6_WREADY, xt_rsc_1_6_WVALID, xt_rsc_1_6_WUSER, xt_rsc_1_6_WLAST,
      xt_rsc_1_6_WSTRB, xt_rsc_1_6_WDATA, xt_rsc_1_6_AWREADY, xt_rsc_1_6_AWVALID,
      xt_rsc_1_6_AWUSER, xt_rsc_1_6_AWREGION, xt_rsc_1_6_AWQOS, xt_rsc_1_6_AWPROT,
      xt_rsc_1_6_AWCACHE, xt_rsc_1_6_AWLOCK, xt_rsc_1_6_AWBURST, xt_rsc_1_6_AWSIZE,
      xt_rsc_1_6_AWLEN, xt_rsc_1_6_AWADDR, xt_rsc_1_6_AWID, core_wen, xt_rsc_1_6_i_oswt,
      xt_rsc_1_6_i_wen_comp, xt_rsc_1_6_i_oswt_1, xt_rsc_1_6_i_wen_comp_1, xt_rsc_1_6_i_s_raddr_core,
      xt_rsc_1_6_i_s_waddr_core, xt_rsc_1_6_i_s_din_mxwt, xt_rsc_1_6_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_6_s_tdone;
  input xt_rsc_1_6_tr_write_done;
  input xt_rsc_1_6_RREADY;
  output xt_rsc_1_6_RVALID;
  output xt_rsc_1_6_RUSER;
  output xt_rsc_1_6_RLAST;
  output [1:0] xt_rsc_1_6_RRESP;
  output [31:0] xt_rsc_1_6_RDATA;
  output xt_rsc_1_6_RID;
  output xt_rsc_1_6_ARREADY;
  input xt_rsc_1_6_ARVALID;
  input xt_rsc_1_6_ARUSER;
  input [3:0] xt_rsc_1_6_ARREGION;
  input [3:0] xt_rsc_1_6_ARQOS;
  input [2:0] xt_rsc_1_6_ARPROT;
  input [3:0] xt_rsc_1_6_ARCACHE;
  input xt_rsc_1_6_ARLOCK;
  input [1:0] xt_rsc_1_6_ARBURST;
  input [2:0] xt_rsc_1_6_ARSIZE;
  input [7:0] xt_rsc_1_6_ARLEN;
  input [11:0] xt_rsc_1_6_ARADDR;
  input xt_rsc_1_6_ARID;
  input xt_rsc_1_6_BREADY;
  output xt_rsc_1_6_BVALID;
  output xt_rsc_1_6_BUSER;
  output [1:0] xt_rsc_1_6_BRESP;
  output xt_rsc_1_6_BID;
  output xt_rsc_1_6_WREADY;
  input xt_rsc_1_6_WVALID;
  input xt_rsc_1_6_WUSER;
  input xt_rsc_1_6_WLAST;
  input [3:0] xt_rsc_1_6_WSTRB;
  input [31:0] xt_rsc_1_6_WDATA;
  output xt_rsc_1_6_AWREADY;
  input xt_rsc_1_6_AWVALID;
  input xt_rsc_1_6_AWUSER;
  input [3:0] xt_rsc_1_6_AWREGION;
  input [3:0] xt_rsc_1_6_AWQOS;
  input [2:0] xt_rsc_1_6_AWPROT;
  input [3:0] xt_rsc_1_6_AWCACHE;
  input xt_rsc_1_6_AWLOCK;
  input [1:0] xt_rsc_1_6_AWBURST;
  input [2:0] xt_rsc_1_6_AWSIZE;
  input [7:0] xt_rsc_1_6_AWLEN;
  input [11:0] xt_rsc_1_6_AWADDR;
  input xt_rsc_1_6_AWID;
  input core_wen;
  input xt_rsc_1_6_i_oswt;
  output xt_rsc_1_6_i_wen_comp;
  input xt_rsc_1_6_i_oswt_1;
  output xt_rsc_1_6_i_wen_comp_1;
  input [3:0] xt_rsc_1_6_i_s_raddr_core;
  input [3:0] xt_rsc_1_6_i_s_waddr_core;
  output [31:0] xt_rsc_1_6_i_s_din_mxwt;
  input [31:0] xt_rsc_1_6_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_6_i_biwt;
  wire xt_rsc_1_6_i_bdwt;
  wire xt_rsc_1_6_i_bcwt;
  wire xt_rsc_1_6_i_s_re_core_sct;
  wire xt_rsc_1_6_i_biwt_1;
  wire xt_rsc_1_6_i_bdwt_2;
  wire xt_rsc_1_6_i_bcwt_1;
  wire xt_rsc_1_6_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_6_i_s_raddr;
  wire [3:0] xt_rsc_1_6_i_s_waddr;
  wire [31:0] xt_rsc_1_6_i_s_din;
  wire [31:0] xt_rsc_1_6_i_s_dout;
  wire xt_rsc_1_6_i_s_rrdy;
  wire xt_rsc_1_6_i_s_wrdy;
  wire xt_rsc_1_6_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_6_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_6_AWID),
      .AWADDR(xt_rsc_1_6_AWADDR),
      .AWLEN(xt_rsc_1_6_AWLEN),
      .AWSIZE(xt_rsc_1_6_AWSIZE),
      .AWBURST(xt_rsc_1_6_AWBURST),
      .AWLOCK(xt_rsc_1_6_AWLOCK),
      .AWCACHE(xt_rsc_1_6_AWCACHE),
      .AWPROT(xt_rsc_1_6_AWPROT),
      .AWQOS(xt_rsc_1_6_AWQOS),
      .AWREGION(xt_rsc_1_6_AWREGION),
      .AWUSER(xt_rsc_1_6_AWUSER),
      .AWVALID(xt_rsc_1_6_AWVALID),
      .AWREADY(xt_rsc_1_6_AWREADY),
      .WDATA(xt_rsc_1_6_WDATA),
      .WSTRB(xt_rsc_1_6_WSTRB),
      .WLAST(xt_rsc_1_6_WLAST),
      .WUSER(xt_rsc_1_6_WUSER),
      .WVALID(xt_rsc_1_6_WVALID),
      .WREADY(xt_rsc_1_6_WREADY),
      .BID(xt_rsc_1_6_BID),
      .BRESP(xt_rsc_1_6_BRESP),
      .BUSER(xt_rsc_1_6_BUSER),
      .BVALID(xt_rsc_1_6_BVALID),
      .BREADY(xt_rsc_1_6_BREADY),
      .ARID(xt_rsc_1_6_ARID),
      .ARADDR(xt_rsc_1_6_ARADDR),
      .ARLEN(xt_rsc_1_6_ARLEN),
      .ARSIZE(xt_rsc_1_6_ARSIZE),
      .ARBURST(xt_rsc_1_6_ARBURST),
      .ARLOCK(xt_rsc_1_6_ARLOCK),
      .ARCACHE(xt_rsc_1_6_ARCACHE),
      .ARPROT(xt_rsc_1_6_ARPROT),
      .ARQOS(xt_rsc_1_6_ARQOS),
      .ARREGION(xt_rsc_1_6_ARREGION),
      .ARUSER(xt_rsc_1_6_ARUSER),
      .ARVALID(xt_rsc_1_6_ARVALID),
      .ARREADY(xt_rsc_1_6_ARREADY),
      .RID(xt_rsc_1_6_RID),
      .RDATA(xt_rsc_1_6_RDATA),
      .RRESP(xt_rsc_1_6_RRESP),
      .RLAST(xt_rsc_1_6_RLAST),
      .RUSER(xt_rsc_1_6_RUSER),
      .RVALID(xt_rsc_1_6_RVALID),
      .RREADY(xt_rsc_1_6_RREADY),
      .s_re(xt_rsc_1_6_i_s_re_core_sct),
      .s_we(xt_rsc_1_6_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_6_i_s_raddr),
      .s_waddr(xt_rsc_1_6_i_s_waddr),
      .s_din(xt_rsc_1_6_i_s_din),
      .s_dout(xt_rsc_1_6_i_s_dout),
      .s_rrdy(xt_rsc_1_6_i_s_rrdy),
      .s_wrdy(xt_rsc_1_6_i_s_wrdy),
      .is_idle(xt_rsc_1_6_is_idle_1),
      .tr_write_done(xt_rsc_1_6_tr_write_done),
      .s_tdone(xt_rsc_1_6_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_6_i_xt_rsc_1_6_wait_ctrl peaseNTT_core_xt_rsc_1_6_i_xt_rsc_1_6_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_6_i_oswt(xt_rsc_1_6_i_oswt),
      .xt_rsc_1_6_i_oswt_1(xt_rsc_1_6_i_oswt_1),
      .xt_rsc_1_6_i_biwt(xt_rsc_1_6_i_biwt),
      .xt_rsc_1_6_i_bdwt(xt_rsc_1_6_i_bdwt),
      .xt_rsc_1_6_i_bcwt(xt_rsc_1_6_i_bcwt),
      .xt_rsc_1_6_i_s_re_core_sct(xt_rsc_1_6_i_s_re_core_sct),
      .xt_rsc_1_6_i_biwt_1(xt_rsc_1_6_i_biwt_1),
      .xt_rsc_1_6_i_bdwt_2(xt_rsc_1_6_i_bdwt_2),
      .xt_rsc_1_6_i_bcwt_1(xt_rsc_1_6_i_bcwt_1),
      .xt_rsc_1_6_i_s_we_core_sct(xt_rsc_1_6_i_s_we_core_sct),
      .xt_rsc_1_6_i_s_rrdy(xt_rsc_1_6_i_s_rrdy),
      .xt_rsc_1_6_i_s_wrdy(xt_rsc_1_6_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_6_i_xt_rsc_1_6_wait_dp peaseNTT_core_xt_rsc_1_6_i_xt_rsc_1_6_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_6_i_oswt(xt_rsc_1_6_i_oswt),
      .xt_rsc_1_6_i_wen_comp(xt_rsc_1_6_i_wen_comp),
      .xt_rsc_1_6_i_oswt_1(xt_rsc_1_6_i_oswt_1),
      .xt_rsc_1_6_i_wen_comp_1(xt_rsc_1_6_i_wen_comp_1),
      .xt_rsc_1_6_i_s_raddr_core(xt_rsc_1_6_i_s_raddr_core),
      .xt_rsc_1_6_i_s_waddr_core(xt_rsc_1_6_i_s_waddr_core),
      .xt_rsc_1_6_i_s_din_mxwt(xt_rsc_1_6_i_s_din_mxwt),
      .xt_rsc_1_6_i_s_dout_core(xt_rsc_1_6_i_s_dout_core),
      .xt_rsc_1_6_i_biwt(xt_rsc_1_6_i_biwt),
      .xt_rsc_1_6_i_bdwt(xt_rsc_1_6_i_bdwt),
      .xt_rsc_1_6_i_bcwt(xt_rsc_1_6_i_bcwt),
      .xt_rsc_1_6_i_biwt_1(xt_rsc_1_6_i_biwt_1),
      .xt_rsc_1_6_i_bdwt_2(xt_rsc_1_6_i_bdwt_2),
      .xt_rsc_1_6_i_bcwt_1(xt_rsc_1_6_i_bcwt_1),
      .xt_rsc_1_6_i_s_raddr(xt_rsc_1_6_i_s_raddr),
      .xt_rsc_1_6_i_s_raddr_core_sct(xt_rsc_1_6_i_s_re_core_sct),
      .xt_rsc_1_6_i_s_waddr(xt_rsc_1_6_i_s_waddr),
      .xt_rsc_1_6_i_s_waddr_core_sct(xt_rsc_1_6_i_s_we_core_sct),
      .xt_rsc_1_6_i_s_din(xt_rsc_1_6_i_s_din),
      .xt_rsc_1_6_i_s_dout(xt_rsc_1_6_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_5_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_5_i (
  clk, rst, xt_rsc_1_5_s_tdone, xt_rsc_1_5_tr_write_done, xt_rsc_1_5_RREADY, xt_rsc_1_5_RVALID,
      xt_rsc_1_5_RUSER, xt_rsc_1_5_RLAST, xt_rsc_1_5_RRESP, xt_rsc_1_5_RDATA, xt_rsc_1_5_RID,
      xt_rsc_1_5_ARREADY, xt_rsc_1_5_ARVALID, xt_rsc_1_5_ARUSER, xt_rsc_1_5_ARREGION,
      xt_rsc_1_5_ARQOS, xt_rsc_1_5_ARPROT, xt_rsc_1_5_ARCACHE, xt_rsc_1_5_ARLOCK,
      xt_rsc_1_5_ARBURST, xt_rsc_1_5_ARSIZE, xt_rsc_1_5_ARLEN, xt_rsc_1_5_ARADDR,
      xt_rsc_1_5_ARID, xt_rsc_1_5_BREADY, xt_rsc_1_5_BVALID, xt_rsc_1_5_BUSER, xt_rsc_1_5_BRESP,
      xt_rsc_1_5_BID, xt_rsc_1_5_WREADY, xt_rsc_1_5_WVALID, xt_rsc_1_5_WUSER, xt_rsc_1_5_WLAST,
      xt_rsc_1_5_WSTRB, xt_rsc_1_5_WDATA, xt_rsc_1_5_AWREADY, xt_rsc_1_5_AWVALID,
      xt_rsc_1_5_AWUSER, xt_rsc_1_5_AWREGION, xt_rsc_1_5_AWQOS, xt_rsc_1_5_AWPROT,
      xt_rsc_1_5_AWCACHE, xt_rsc_1_5_AWLOCK, xt_rsc_1_5_AWBURST, xt_rsc_1_5_AWSIZE,
      xt_rsc_1_5_AWLEN, xt_rsc_1_5_AWADDR, xt_rsc_1_5_AWID, core_wen, xt_rsc_1_5_i_oswt,
      xt_rsc_1_5_i_wen_comp, xt_rsc_1_5_i_oswt_1, xt_rsc_1_5_i_wen_comp_1, xt_rsc_1_5_i_s_raddr_core,
      xt_rsc_1_5_i_s_waddr_core, xt_rsc_1_5_i_s_din_mxwt, xt_rsc_1_5_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_5_s_tdone;
  input xt_rsc_1_5_tr_write_done;
  input xt_rsc_1_5_RREADY;
  output xt_rsc_1_5_RVALID;
  output xt_rsc_1_5_RUSER;
  output xt_rsc_1_5_RLAST;
  output [1:0] xt_rsc_1_5_RRESP;
  output [31:0] xt_rsc_1_5_RDATA;
  output xt_rsc_1_5_RID;
  output xt_rsc_1_5_ARREADY;
  input xt_rsc_1_5_ARVALID;
  input xt_rsc_1_5_ARUSER;
  input [3:0] xt_rsc_1_5_ARREGION;
  input [3:0] xt_rsc_1_5_ARQOS;
  input [2:0] xt_rsc_1_5_ARPROT;
  input [3:0] xt_rsc_1_5_ARCACHE;
  input xt_rsc_1_5_ARLOCK;
  input [1:0] xt_rsc_1_5_ARBURST;
  input [2:0] xt_rsc_1_5_ARSIZE;
  input [7:0] xt_rsc_1_5_ARLEN;
  input [11:0] xt_rsc_1_5_ARADDR;
  input xt_rsc_1_5_ARID;
  input xt_rsc_1_5_BREADY;
  output xt_rsc_1_5_BVALID;
  output xt_rsc_1_5_BUSER;
  output [1:0] xt_rsc_1_5_BRESP;
  output xt_rsc_1_5_BID;
  output xt_rsc_1_5_WREADY;
  input xt_rsc_1_5_WVALID;
  input xt_rsc_1_5_WUSER;
  input xt_rsc_1_5_WLAST;
  input [3:0] xt_rsc_1_5_WSTRB;
  input [31:0] xt_rsc_1_5_WDATA;
  output xt_rsc_1_5_AWREADY;
  input xt_rsc_1_5_AWVALID;
  input xt_rsc_1_5_AWUSER;
  input [3:0] xt_rsc_1_5_AWREGION;
  input [3:0] xt_rsc_1_5_AWQOS;
  input [2:0] xt_rsc_1_5_AWPROT;
  input [3:0] xt_rsc_1_5_AWCACHE;
  input xt_rsc_1_5_AWLOCK;
  input [1:0] xt_rsc_1_5_AWBURST;
  input [2:0] xt_rsc_1_5_AWSIZE;
  input [7:0] xt_rsc_1_5_AWLEN;
  input [11:0] xt_rsc_1_5_AWADDR;
  input xt_rsc_1_5_AWID;
  input core_wen;
  input xt_rsc_1_5_i_oswt;
  output xt_rsc_1_5_i_wen_comp;
  input xt_rsc_1_5_i_oswt_1;
  output xt_rsc_1_5_i_wen_comp_1;
  input [3:0] xt_rsc_1_5_i_s_raddr_core;
  input [3:0] xt_rsc_1_5_i_s_waddr_core;
  output [31:0] xt_rsc_1_5_i_s_din_mxwt;
  input [31:0] xt_rsc_1_5_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_5_i_biwt;
  wire xt_rsc_1_5_i_bdwt;
  wire xt_rsc_1_5_i_bcwt;
  wire xt_rsc_1_5_i_s_re_core_sct;
  wire xt_rsc_1_5_i_biwt_1;
  wire xt_rsc_1_5_i_bdwt_2;
  wire xt_rsc_1_5_i_bcwt_1;
  wire xt_rsc_1_5_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_5_i_s_raddr;
  wire [3:0] xt_rsc_1_5_i_s_waddr;
  wire [31:0] xt_rsc_1_5_i_s_din;
  wire [31:0] xt_rsc_1_5_i_s_dout;
  wire xt_rsc_1_5_i_s_rrdy;
  wire xt_rsc_1_5_i_s_wrdy;
  wire xt_rsc_1_5_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_5_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_5_AWID),
      .AWADDR(xt_rsc_1_5_AWADDR),
      .AWLEN(xt_rsc_1_5_AWLEN),
      .AWSIZE(xt_rsc_1_5_AWSIZE),
      .AWBURST(xt_rsc_1_5_AWBURST),
      .AWLOCK(xt_rsc_1_5_AWLOCK),
      .AWCACHE(xt_rsc_1_5_AWCACHE),
      .AWPROT(xt_rsc_1_5_AWPROT),
      .AWQOS(xt_rsc_1_5_AWQOS),
      .AWREGION(xt_rsc_1_5_AWREGION),
      .AWUSER(xt_rsc_1_5_AWUSER),
      .AWVALID(xt_rsc_1_5_AWVALID),
      .AWREADY(xt_rsc_1_5_AWREADY),
      .WDATA(xt_rsc_1_5_WDATA),
      .WSTRB(xt_rsc_1_5_WSTRB),
      .WLAST(xt_rsc_1_5_WLAST),
      .WUSER(xt_rsc_1_5_WUSER),
      .WVALID(xt_rsc_1_5_WVALID),
      .WREADY(xt_rsc_1_5_WREADY),
      .BID(xt_rsc_1_5_BID),
      .BRESP(xt_rsc_1_5_BRESP),
      .BUSER(xt_rsc_1_5_BUSER),
      .BVALID(xt_rsc_1_5_BVALID),
      .BREADY(xt_rsc_1_5_BREADY),
      .ARID(xt_rsc_1_5_ARID),
      .ARADDR(xt_rsc_1_5_ARADDR),
      .ARLEN(xt_rsc_1_5_ARLEN),
      .ARSIZE(xt_rsc_1_5_ARSIZE),
      .ARBURST(xt_rsc_1_5_ARBURST),
      .ARLOCK(xt_rsc_1_5_ARLOCK),
      .ARCACHE(xt_rsc_1_5_ARCACHE),
      .ARPROT(xt_rsc_1_5_ARPROT),
      .ARQOS(xt_rsc_1_5_ARQOS),
      .ARREGION(xt_rsc_1_5_ARREGION),
      .ARUSER(xt_rsc_1_5_ARUSER),
      .ARVALID(xt_rsc_1_5_ARVALID),
      .ARREADY(xt_rsc_1_5_ARREADY),
      .RID(xt_rsc_1_5_RID),
      .RDATA(xt_rsc_1_5_RDATA),
      .RRESP(xt_rsc_1_5_RRESP),
      .RLAST(xt_rsc_1_5_RLAST),
      .RUSER(xt_rsc_1_5_RUSER),
      .RVALID(xt_rsc_1_5_RVALID),
      .RREADY(xt_rsc_1_5_RREADY),
      .s_re(xt_rsc_1_5_i_s_re_core_sct),
      .s_we(xt_rsc_1_5_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_5_i_s_raddr),
      .s_waddr(xt_rsc_1_5_i_s_waddr),
      .s_din(xt_rsc_1_5_i_s_din),
      .s_dout(xt_rsc_1_5_i_s_dout),
      .s_rrdy(xt_rsc_1_5_i_s_rrdy),
      .s_wrdy(xt_rsc_1_5_i_s_wrdy),
      .is_idle(xt_rsc_1_5_is_idle_1),
      .tr_write_done(xt_rsc_1_5_tr_write_done),
      .s_tdone(xt_rsc_1_5_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_5_i_xt_rsc_1_5_wait_ctrl peaseNTT_core_xt_rsc_1_5_i_xt_rsc_1_5_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_5_i_oswt(xt_rsc_1_5_i_oswt),
      .xt_rsc_1_5_i_oswt_1(xt_rsc_1_5_i_oswt_1),
      .xt_rsc_1_5_i_biwt(xt_rsc_1_5_i_biwt),
      .xt_rsc_1_5_i_bdwt(xt_rsc_1_5_i_bdwt),
      .xt_rsc_1_5_i_bcwt(xt_rsc_1_5_i_bcwt),
      .xt_rsc_1_5_i_s_re_core_sct(xt_rsc_1_5_i_s_re_core_sct),
      .xt_rsc_1_5_i_biwt_1(xt_rsc_1_5_i_biwt_1),
      .xt_rsc_1_5_i_bdwt_2(xt_rsc_1_5_i_bdwt_2),
      .xt_rsc_1_5_i_bcwt_1(xt_rsc_1_5_i_bcwt_1),
      .xt_rsc_1_5_i_s_we_core_sct(xt_rsc_1_5_i_s_we_core_sct),
      .xt_rsc_1_5_i_s_rrdy(xt_rsc_1_5_i_s_rrdy),
      .xt_rsc_1_5_i_s_wrdy(xt_rsc_1_5_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_5_i_xt_rsc_1_5_wait_dp peaseNTT_core_xt_rsc_1_5_i_xt_rsc_1_5_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_5_i_oswt(xt_rsc_1_5_i_oswt),
      .xt_rsc_1_5_i_wen_comp(xt_rsc_1_5_i_wen_comp),
      .xt_rsc_1_5_i_oswt_1(xt_rsc_1_5_i_oswt_1),
      .xt_rsc_1_5_i_wen_comp_1(xt_rsc_1_5_i_wen_comp_1),
      .xt_rsc_1_5_i_s_raddr_core(xt_rsc_1_5_i_s_raddr_core),
      .xt_rsc_1_5_i_s_waddr_core(xt_rsc_1_5_i_s_waddr_core),
      .xt_rsc_1_5_i_s_din_mxwt(xt_rsc_1_5_i_s_din_mxwt),
      .xt_rsc_1_5_i_s_dout_core(xt_rsc_1_5_i_s_dout_core),
      .xt_rsc_1_5_i_biwt(xt_rsc_1_5_i_biwt),
      .xt_rsc_1_5_i_bdwt(xt_rsc_1_5_i_bdwt),
      .xt_rsc_1_5_i_bcwt(xt_rsc_1_5_i_bcwt),
      .xt_rsc_1_5_i_biwt_1(xt_rsc_1_5_i_biwt_1),
      .xt_rsc_1_5_i_bdwt_2(xt_rsc_1_5_i_bdwt_2),
      .xt_rsc_1_5_i_bcwt_1(xt_rsc_1_5_i_bcwt_1),
      .xt_rsc_1_5_i_s_raddr(xt_rsc_1_5_i_s_raddr),
      .xt_rsc_1_5_i_s_raddr_core_sct(xt_rsc_1_5_i_s_re_core_sct),
      .xt_rsc_1_5_i_s_waddr(xt_rsc_1_5_i_s_waddr),
      .xt_rsc_1_5_i_s_waddr_core_sct(xt_rsc_1_5_i_s_we_core_sct),
      .xt_rsc_1_5_i_s_din(xt_rsc_1_5_i_s_din),
      .xt_rsc_1_5_i_s_dout(xt_rsc_1_5_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_4_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_4_i (
  clk, rst, xt_rsc_1_4_s_tdone, xt_rsc_1_4_tr_write_done, xt_rsc_1_4_RREADY, xt_rsc_1_4_RVALID,
      xt_rsc_1_4_RUSER, xt_rsc_1_4_RLAST, xt_rsc_1_4_RRESP, xt_rsc_1_4_RDATA, xt_rsc_1_4_RID,
      xt_rsc_1_4_ARREADY, xt_rsc_1_4_ARVALID, xt_rsc_1_4_ARUSER, xt_rsc_1_4_ARREGION,
      xt_rsc_1_4_ARQOS, xt_rsc_1_4_ARPROT, xt_rsc_1_4_ARCACHE, xt_rsc_1_4_ARLOCK,
      xt_rsc_1_4_ARBURST, xt_rsc_1_4_ARSIZE, xt_rsc_1_4_ARLEN, xt_rsc_1_4_ARADDR,
      xt_rsc_1_4_ARID, xt_rsc_1_4_BREADY, xt_rsc_1_4_BVALID, xt_rsc_1_4_BUSER, xt_rsc_1_4_BRESP,
      xt_rsc_1_4_BID, xt_rsc_1_4_WREADY, xt_rsc_1_4_WVALID, xt_rsc_1_4_WUSER, xt_rsc_1_4_WLAST,
      xt_rsc_1_4_WSTRB, xt_rsc_1_4_WDATA, xt_rsc_1_4_AWREADY, xt_rsc_1_4_AWVALID,
      xt_rsc_1_4_AWUSER, xt_rsc_1_4_AWREGION, xt_rsc_1_4_AWQOS, xt_rsc_1_4_AWPROT,
      xt_rsc_1_4_AWCACHE, xt_rsc_1_4_AWLOCK, xt_rsc_1_4_AWBURST, xt_rsc_1_4_AWSIZE,
      xt_rsc_1_4_AWLEN, xt_rsc_1_4_AWADDR, xt_rsc_1_4_AWID, core_wen, xt_rsc_1_4_i_oswt,
      xt_rsc_1_4_i_wen_comp, xt_rsc_1_4_i_oswt_1, xt_rsc_1_4_i_wen_comp_1, xt_rsc_1_4_i_s_raddr_core,
      xt_rsc_1_4_i_s_waddr_core, xt_rsc_1_4_i_s_din_mxwt, xt_rsc_1_4_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_4_s_tdone;
  input xt_rsc_1_4_tr_write_done;
  input xt_rsc_1_4_RREADY;
  output xt_rsc_1_4_RVALID;
  output xt_rsc_1_4_RUSER;
  output xt_rsc_1_4_RLAST;
  output [1:0] xt_rsc_1_4_RRESP;
  output [31:0] xt_rsc_1_4_RDATA;
  output xt_rsc_1_4_RID;
  output xt_rsc_1_4_ARREADY;
  input xt_rsc_1_4_ARVALID;
  input xt_rsc_1_4_ARUSER;
  input [3:0] xt_rsc_1_4_ARREGION;
  input [3:0] xt_rsc_1_4_ARQOS;
  input [2:0] xt_rsc_1_4_ARPROT;
  input [3:0] xt_rsc_1_4_ARCACHE;
  input xt_rsc_1_4_ARLOCK;
  input [1:0] xt_rsc_1_4_ARBURST;
  input [2:0] xt_rsc_1_4_ARSIZE;
  input [7:0] xt_rsc_1_4_ARLEN;
  input [11:0] xt_rsc_1_4_ARADDR;
  input xt_rsc_1_4_ARID;
  input xt_rsc_1_4_BREADY;
  output xt_rsc_1_4_BVALID;
  output xt_rsc_1_4_BUSER;
  output [1:0] xt_rsc_1_4_BRESP;
  output xt_rsc_1_4_BID;
  output xt_rsc_1_4_WREADY;
  input xt_rsc_1_4_WVALID;
  input xt_rsc_1_4_WUSER;
  input xt_rsc_1_4_WLAST;
  input [3:0] xt_rsc_1_4_WSTRB;
  input [31:0] xt_rsc_1_4_WDATA;
  output xt_rsc_1_4_AWREADY;
  input xt_rsc_1_4_AWVALID;
  input xt_rsc_1_4_AWUSER;
  input [3:0] xt_rsc_1_4_AWREGION;
  input [3:0] xt_rsc_1_4_AWQOS;
  input [2:0] xt_rsc_1_4_AWPROT;
  input [3:0] xt_rsc_1_4_AWCACHE;
  input xt_rsc_1_4_AWLOCK;
  input [1:0] xt_rsc_1_4_AWBURST;
  input [2:0] xt_rsc_1_4_AWSIZE;
  input [7:0] xt_rsc_1_4_AWLEN;
  input [11:0] xt_rsc_1_4_AWADDR;
  input xt_rsc_1_4_AWID;
  input core_wen;
  input xt_rsc_1_4_i_oswt;
  output xt_rsc_1_4_i_wen_comp;
  input xt_rsc_1_4_i_oswt_1;
  output xt_rsc_1_4_i_wen_comp_1;
  input [3:0] xt_rsc_1_4_i_s_raddr_core;
  input [3:0] xt_rsc_1_4_i_s_waddr_core;
  output [31:0] xt_rsc_1_4_i_s_din_mxwt;
  input [31:0] xt_rsc_1_4_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_4_i_biwt;
  wire xt_rsc_1_4_i_bdwt;
  wire xt_rsc_1_4_i_bcwt;
  wire xt_rsc_1_4_i_s_re_core_sct;
  wire xt_rsc_1_4_i_biwt_1;
  wire xt_rsc_1_4_i_bdwt_2;
  wire xt_rsc_1_4_i_bcwt_1;
  wire xt_rsc_1_4_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_4_i_s_raddr;
  wire [3:0] xt_rsc_1_4_i_s_waddr;
  wire [31:0] xt_rsc_1_4_i_s_din;
  wire [31:0] xt_rsc_1_4_i_s_dout;
  wire xt_rsc_1_4_i_s_rrdy;
  wire xt_rsc_1_4_i_s_wrdy;
  wire xt_rsc_1_4_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_4_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_4_AWID),
      .AWADDR(xt_rsc_1_4_AWADDR),
      .AWLEN(xt_rsc_1_4_AWLEN),
      .AWSIZE(xt_rsc_1_4_AWSIZE),
      .AWBURST(xt_rsc_1_4_AWBURST),
      .AWLOCK(xt_rsc_1_4_AWLOCK),
      .AWCACHE(xt_rsc_1_4_AWCACHE),
      .AWPROT(xt_rsc_1_4_AWPROT),
      .AWQOS(xt_rsc_1_4_AWQOS),
      .AWREGION(xt_rsc_1_4_AWREGION),
      .AWUSER(xt_rsc_1_4_AWUSER),
      .AWVALID(xt_rsc_1_4_AWVALID),
      .AWREADY(xt_rsc_1_4_AWREADY),
      .WDATA(xt_rsc_1_4_WDATA),
      .WSTRB(xt_rsc_1_4_WSTRB),
      .WLAST(xt_rsc_1_4_WLAST),
      .WUSER(xt_rsc_1_4_WUSER),
      .WVALID(xt_rsc_1_4_WVALID),
      .WREADY(xt_rsc_1_4_WREADY),
      .BID(xt_rsc_1_4_BID),
      .BRESP(xt_rsc_1_4_BRESP),
      .BUSER(xt_rsc_1_4_BUSER),
      .BVALID(xt_rsc_1_4_BVALID),
      .BREADY(xt_rsc_1_4_BREADY),
      .ARID(xt_rsc_1_4_ARID),
      .ARADDR(xt_rsc_1_4_ARADDR),
      .ARLEN(xt_rsc_1_4_ARLEN),
      .ARSIZE(xt_rsc_1_4_ARSIZE),
      .ARBURST(xt_rsc_1_4_ARBURST),
      .ARLOCK(xt_rsc_1_4_ARLOCK),
      .ARCACHE(xt_rsc_1_4_ARCACHE),
      .ARPROT(xt_rsc_1_4_ARPROT),
      .ARQOS(xt_rsc_1_4_ARQOS),
      .ARREGION(xt_rsc_1_4_ARREGION),
      .ARUSER(xt_rsc_1_4_ARUSER),
      .ARVALID(xt_rsc_1_4_ARVALID),
      .ARREADY(xt_rsc_1_4_ARREADY),
      .RID(xt_rsc_1_4_RID),
      .RDATA(xt_rsc_1_4_RDATA),
      .RRESP(xt_rsc_1_4_RRESP),
      .RLAST(xt_rsc_1_4_RLAST),
      .RUSER(xt_rsc_1_4_RUSER),
      .RVALID(xt_rsc_1_4_RVALID),
      .RREADY(xt_rsc_1_4_RREADY),
      .s_re(xt_rsc_1_4_i_s_re_core_sct),
      .s_we(xt_rsc_1_4_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_4_i_s_raddr),
      .s_waddr(xt_rsc_1_4_i_s_waddr),
      .s_din(xt_rsc_1_4_i_s_din),
      .s_dout(xt_rsc_1_4_i_s_dout),
      .s_rrdy(xt_rsc_1_4_i_s_rrdy),
      .s_wrdy(xt_rsc_1_4_i_s_wrdy),
      .is_idle(xt_rsc_1_4_is_idle_1),
      .tr_write_done(xt_rsc_1_4_tr_write_done),
      .s_tdone(xt_rsc_1_4_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_4_i_xt_rsc_1_4_wait_ctrl peaseNTT_core_xt_rsc_1_4_i_xt_rsc_1_4_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_4_i_oswt(xt_rsc_1_4_i_oswt),
      .xt_rsc_1_4_i_oswt_1(xt_rsc_1_4_i_oswt_1),
      .xt_rsc_1_4_i_biwt(xt_rsc_1_4_i_biwt),
      .xt_rsc_1_4_i_bdwt(xt_rsc_1_4_i_bdwt),
      .xt_rsc_1_4_i_bcwt(xt_rsc_1_4_i_bcwt),
      .xt_rsc_1_4_i_s_re_core_sct(xt_rsc_1_4_i_s_re_core_sct),
      .xt_rsc_1_4_i_biwt_1(xt_rsc_1_4_i_biwt_1),
      .xt_rsc_1_4_i_bdwt_2(xt_rsc_1_4_i_bdwt_2),
      .xt_rsc_1_4_i_bcwt_1(xt_rsc_1_4_i_bcwt_1),
      .xt_rsc_1_4_i_s_we_core_sct(xt_rsc_1_4_i_s_we_core_sct),
      .xt_rsc_1_4_i_s_rrdy(xt_rsc_1_4_i_s_rrdy),
      .xt_rsc_1_4_i_s_wrdy(xt_rsc_1_4_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_4_i_xt_rsc_1_4_wait_dp peaseNTT_core_xt_rsc_1_4_i_xt_rsc_1_4_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_4_i_oswt(xt_rsc_1_4_i_oswt),
      .xt_rsc_1_4_i_wen_comp(xt_rsc_1_4_i_wen_comp),
      .xt_rsc_1_4_i_oswt_1(xt_rsc_1_4_i_oswt_1),
      .xt_rsc_1_4_i_wen_comp_1(xt_rsc_1_4_i_wen_comp_1),
      .xt_rsc_1_4_i_s_raddr_core(xt_rsc_1_4_i_s_raddr_core),
      .xt_rsc_1_4_i_s_waddr_core(xt_rsc_1_4_i_s_waddr_core),
      .xt_rsc_1_4_i_s_din_mxwt(xt_rsc_1_4_i_s_din_mxwt),
      .xt_rsc_1_4_i_s_dout_core(xt_rsc_1_4_i_s_dout_core),
      .xt_rsc_1_4_i_biwt(xt_rsc_1_4_i_biwt),
      .xt_rsc_1_4_i_bdwt(xt_rsc_1_4_i_bdwt),
      .xt_rsc_1_4_i_bcwt(xt_rsc_1_4_i_bcwt),
      .xt_rsc_1_4_i_biwt_1(xt_rsc_1_4_i_biwt_1),
      .xt_rsc_1_4_i_bdwt_2(xt_rsc_1_4_i_bdwt_2),
      .xt_rsc_1_4_i_bcwt_1(xt_rsc_1_4_i_bcwt_1),
      .xt_rsc_1_4_i_s_raddr(xt_rsc_1_4_i_s_raddr),
      .xt_rsc_1_4_i_s_raddr_core_sct(xt_rsc_1_4_i_s_re_core_sct),
      .xt_rsc_1_4_i_s_waddr(xt_rsc_1_4_i_s_waddr),
      .xt_rsc_1_4_i_s_waddr_core_sct(xt_rsc_1_4_i_s_we_core_sct),
      .xt_rsc_1_4_i_s_din(xt_rsc_1_4_i_s_din),
      .xt_rsc_1_4_i_s_dout(xt_rsc_1_4_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_3_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_3_i (
  clk, rst, xt_rsc_1_3_s_tdone, xt_rsc_1_3_tr_write_done, xt_rsc_1_3_RREADY, xt_rsc_1_3_RVALID,
      xt_rsc_1_3_RUSER, xt_rsc_1_3_RLAST, xt_rsc_1_3_RRESP, xt_rsc_1_3_RDATA, xt_rsc_1_3_RID,
      xt_rsc_1_3_ARREADY, xt_rsc_1_3_ARVALID, xt_rsc_1_3_ARUSER, xt_rsc_1_3_ARREGION,
      xt_rsc_1_3_ARQOS, xt_rsc_1_3_ARPROT, xt_rsc_1_3_ARCACHE, xt_rsc_1_3_ARLOCK,
      xt_rsc_1_3_ARBURST, xt_rsc_1_3_ARSIZE, xt_rsc_1_3_ARLEN, xt_rsc_1_3_ARADDR,
      xt_rsc_1_3_ARID, xt_rsc_1_3_BREADY, xt_rsc_1_3_BVALID, xt_rsc_1_3_BUSER, xt_rsc_1_3_BRESP,
      xt_rsc_1_3_BID, xt_rsc_1_3_WREADY, xt_rsc_1_3_WVALID, xt_rsc_1_3_WUSER, xt_rsc_1_3_WLAST,
      xt_rsc_1_3_WSTRB, xt_rsc_1_3_WDATA, xt_rsc_1_3_AWREADY, xt_rsc_1_3_AWVALID,
      xt_rsc_1_3_AWUSER, xt_rsc_1_3_AWREGION, xt_rsc_1_3_AWQOS, xt_rsc_1_3_AWPROT,
      xt_rsc_1_3_AWCACHE, xt_rsc_1_3_AWLOCK, xt_rsc_1_3_AWBURST, xt_rsc_1_3_AWSIZE,
      xt_rsc_1_3_AWLEN, xt_rsc_1_3_AWADDR, xt_rsc_1_3_AWID, core_wen, xt_rsc_1_3_i_oswt,
      xt_rsc_1_3_i_wen_comp, xt_rsc_1_3_i_oswt_1, xt_rsc_1_3_i_wen_comp_1, xt_rsc_1_3_i_s_raddr_core,
      xt_rsc_1_3_i_s_waddr_core, xt_rsc_1_3_i_s_din_mxwt, xt_rsc_1_3_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_3_s_tdone;
  input xt_rsc_1_3_tr_write_done;
  input xt_rsc_1_3_RREADY;
  output xt_rsc_1_3_RVALID;
  output xt_rsc_1_3_RUSER;
  output xt_rsc_1_3_RLAST;
  output [1:0] xt_rsc_1_3_RRESP;
  output [31:0] xt_rsc_1_3_RDATA;
  output xt_rsc_1_3_RID;
  output xt_rsc_1_3_ARREADY;
  input xt_rsc_1_3_ARVALID;
  input xt_rsc_1_3_ARUSER;
  input [3:0] xt_rsc_1_3_ARREGION;
  input [3:0] xt_rsc_1_3_ARQOS;
  input [2:0] xt_rsc_1_3_ARPROT;
  input [3:0] xt_rsc_1_3_ARCACHE;
  input xt_rsc_1_3_ARLOCK;
  input [1:0] xt_rsc_1_3_ARBURST;
  input [2:0] xt_rsc_1_3_ARSIZE;
  input [7:0] xt_rsc_1_3_ARLEN;
  input [11:0] xt_rsc_1_3_ARADDR;
  input xt_rsc_1_3_ARID;
  input xt_rsc_1_3_BREADY;
  output xt_rsc_1_3_BVALID;
  output xt_rsc_1_3_BUSER;
  output [1:0] xt_rsc_1_3_BRESP;
  output xt_rsc_1_3_BID;
  output xt_rsc_1_3_WREADY;
  input xt_rsc_1_3_WVALID;
  input xt_rsc_1_3_WUSER;
  input xt_rsc_1_3_WLAST;
  input [3:0] xt_rsc_1_3_WSTRB;
  input [31:0] xt_rsc_1_3_WDATA;
  output xt_rsc_1_3_AWREADY;
  input xt_rsc_1_3_AWVALID;
  input xt_rsc_1_3_AWUSER;
  input [3:0] xt_rsc_1_3_AWREGION;
  input [3:0] xt_rsc_1_3_AWQOS;
  input [2:0] xt_rsc_1_3_AWPROT;
  input [3:0] xt_rsc_1_3_AWCACHE;
  input xt_rsc_1_3_AWLOCK;
  input [1:0] xt_rsc_1_3_AWBURST;
  input [2:0] xt_rsc_1_3_AWSIZE;
  input [7:0] xt_rsc_1_3_AWLEN;
  input [11:0] xt_rsc_1_3_AWADDR;
  input xt_rsc_1_3_AWID;
  input core_wen;
  input xt_rsc_1_3_i_oswt;
  output xt_rsc_1_3_i_wen_comp;
  input xt_rsc_1_3_i_oswt_1;
  output xt_rsc_1_3_i_wen_comp_1;
  input [3:0] xt_rsc_1_3_i_s_raddr_core;
  input [3:0] xt_rsc_1_3_i_s_waddr_core;
  output [31:0] xt_rsc_1_3_i_s_din_mxwt;
  input [31:0] xt_rsc_1_3_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_3_i_biwt;
  wire xt_rsc_1_3_i_bdwt;
  wire xt_rsc_1_3_i_bcwt;
  wire xt_rsc_1_3_i_s_re_core_sct;
  wire xt_rsc_1_3_i_biwt_1;
  wire xt_rsc_1_3_i_bdwt_2;
  wire xt_rsc_1_3_i_bcwt_1;
  wire xt_rsc_1_3_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_3_i_s_raddr;
  wire [3:0] xt_rsc_1_3_i_s_waddr;
  wire [31:0] xt_rsc_1_3_i_s_din;
  wire [31:0] xt_rsc_1_3_i_s_dout;
  wire xt_rsc_1_3_i_s_rrdy;
  wire xt_rsc_1_3_i_s_wrdy;
  wire xt_rsc_1_3_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_3_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_3_AWID),
      .AWADDR(xt_rsc_1_3_AWADDR),
      .AWLEN(xt_rsc_1_3_AWLEN),
      .AWSIZE(xt_rsc_1_3_AWSIZE),
      .AWBURST(xt_rsc_1_3_AWBURST),
      .AWLOCK(xt_rsc_1_3_AWLOCK),
      .AWCACHE(xt_rsc_1_3_AWCACHE),
      .AWPROT(xt_rsc_1_3_AWPROT),
      .AWQOS(xt_rsc_1_3_AWQOS),
      .AWREGION(xt_rsc_1_3_AWREGION),
      .AWUSER(xt_rsc_1_3_AWUSER),
      .AWVALID(xt_rsc_1_3_AWVALID),
      .AWREADY(xt_rsc_1_3_AWREADY),
      .WDATA(xt_rsc_1_3_WDATA),
      .WSTRB(xt_rsc_1_3_WSTRB),
      .WLAST(xt_rsc_1_3_WLAST),
      .WUSER(xt_rsc_1_3_WUSER),
      .WVALID(xt_rsc_1_3_WVALID),
      .WREADY(xt_rsc_1_3_WREADY),
      .BID(xt_rsc_1_3_BID),
      .BRESP(xt_rsc_1_3_BRESP),
      .BUSER(xt_rsc_1_3_BUSER),
      .BVALID(xt_rsc_1_3_BVALID),
      .BREADY(xt_rsc_1_3_BREADY),
      .ARID(xt_rsc_1_3_ARID),
      .ARADDR(xt_rsc_1_3_ARADDR),
      .ARLEN(xt_rsc_1_3_ARLEN),
      .ARSIZE(xt_rsc_1_3_ARSIZE),
      .ARBURST(xt_rsc_1_3_ARBURST),
      .ARLOCK(xt_rsc_1_3_ARLOCK),
      .ARCACHE(xt_rsc_1_3_ARCACHE),
      .ARPROT(xt_rsc_1_3_ARPROT),
      .ARQOS(xt_rsc_1_3_ARQOS),
      .ARREGION(xt_rsc_1_3_ARREGION),
      .ARUSER(xt_rsc_1_3_ARUSER),
      .ARVALID(xt_rsc_1_3_ARVALID),
      .ARREADY(xt_rsc_1_3_ARREADY),
      .RID(xt_rsc_1_3_RID),
      .RDATA(xt_rsc_1_3_RDATA),
      .RRESP(xt_rsc_1_3_RRESP),
      .RLAST(xt_rsc_1_3_RLAST),
      .RUSER(xt_rsc_1_3_RUSER),
      .RVALID(xt_rsc_1_3_RVALID),
      .RREADY(xt_rsc_1_3_RREADY),
      .s_re(xt_rsc_1_3_i_s_re_core_sct),
      .s_we(xt_rsc_1_3_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_3_i_s_raddr),
      .s_waddr(xt_rsc_1_3_i_s_waddr),
      .s_din(xt_rsc_1_3_i_s_din),
      .s_dout(xt_rsc_1_3_i_s_dout),
      .s_rrdy(xt_rsc_1_3_i_s_rrdy),
      .s_wrdy(xt_rsc_1_3_i_s_wrdy),
      .is_idle(xt_rsc_1_3_is_idle_1),
      .tr_write_done(xt_rsc_1_3_tr_write_done),
      .s_tdone(xt_rsc_1_3_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_3_i_xt_rsc_1_3_wait_ctrl peaseNTT_core_xt_rsc_1_3_i_xt_rsc_1_3_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_3_i_oswt(xt_rsc_1_3_i_oswt),
      .xt_rsc_1_3_i_oswt_1(xt_rsc_1_3_i_oswt_1),
      .xt_rsc_1_3_i_biwt(xt_rsc_1_3_i_biwt),
      .xt_rsc_1_3_i_bdwt(xt_rsc_1_3_i_bdwt),
      .xt_rsc_1_3_i_bcwt(xt_rsc_1_3_i_bcwt),
      .xt_rsc_1_3_i_s_re_core_sct(xt_rsc_1_3_i_s_re_core_sct),
      .xt_rsc_1_3_i_biwt_1(xt_rsc_1_3_i_biwt_1),
      .xt_rsc_1_3_i_bdwt_2(xt_rsc_1_3_i_bdwt_2),
      .xt_rsc_1_3_i_bcwt_1(xt_rsc_1_3_i_bcwt_1),
      .xt_rsc_1_3_i_s_we_core_sct(xt_rsc_1_3_i_s_we_core_sct),
      .xt_rsc_1_3_i_s_rrdy(xt_rsc_1_3_i_s_rrdy),
      .xt_rsc_1_3_i_s_wrdy(xt_rsc_1_3_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_3_i_xt_rsc_1_3_wait_dp peaseNTT_core_xt_rsc_1_3_i_xt_rsc_1_3_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_3_i_oswt(xt_rsc_1_3_i_oswt),
      .xt_rsc_1_3_i_wen_comp(xt_rsc_1_3_i_wen_comp),
      .xt_rsc_1_3_i_oswt_1(xt_rsc_1_3_i_oswt_1),
      .xt_rsc_1_3_i_wen_comp_1(xt_rsc_1_3_i_wen_comp_1),
      .xt_rsc_1_3_i_s_raddr_core(xt_rsc_1_3_i_s_raddr_core),
      .xt_rsc_1_3_i_s_waddr_core(xt_rsc_1_3_i_s_waddr_core),
      .xt_rsc_1_3_i_s_din_mxwt(xt_rsc_1_3_i_s_din_mxwt),
      .xt_rsc_1_3_i_s_dout_core(xt_rsc_1_3_i_s_dout_core),
      .xt_rsc_1_3_i_biwt(xt_rsc_1_3_i_biwt),
      .xt_rsc_1_3_i_bdwt(xt_rsc_1_3_i_bdwt),
      .xt_rsc_1_3_i_bcwt(xt_rsc_1_3_i_bcwt),
      .xt_rsc_1_3_i_biwt_1(xt_rsc_1_3_i_biwt_1),
      .xt_rsc_1_3_i_bdwt_2(xt_rsc_1_3_i_bdwt_2),
      .xt_rsc_1_3_i_bcwt_1(xt_rsc_1_3_i_bcwt_1),
      .xt_rsc_1_3_i_s_raddr(xt_rsc_1_3_i_s_raddr),
      .xt_rsc_1_3_i_s_raddr_core_sct(xt_rsc_1_3_i_s_re_core_sct),
      .xt_rsc_1_3_i_s_waddr(xt_rsc_1_3_i_s_waddr),
      .xt_rsc_1_3_i_s_waddr_core_sct(xt_rsc_1_3_i_s_we_core_sct),
      .xt_rsc_1_3_i_s_din(xt_rsc_1_3_i_s_din),
      .xt_rsc_1_3_i_s_dout(xt_rsc_1_3_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_2_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_2_i (
  clk, rst, xt_rsc_1_2_s_tdone, xt_rsc_1_2_tr_write_done, xt_rsc_1_2_RREADY, xt_rsc_1_2_RVALID,
      xt_rsc_1_2_RUSER, xt_rsc_1_2_RLAST, xt_rsc_1_2_RRESP, xt_rsc_1_2_RDATA, xt_rsc_1_2_RID,
      xt_rsc_1_2_ARREADY, xt_rsc_1_2_ARVALID, xt_rsc_1_2_ARUSER, xt_rsc_1_2_ARREGION,
      xt_rsc_1_2_ARQOS, xt_rsc_1_2_ARPROT, xt_rsc_1_2_ARCACHE, xt_rsc_1_2_ARLOCK,
      xt_rsc_1_2_ARBURST, xt_rsc_1_2_ARSIZE, xt_rsc_1_2_ARLEN, xt_rsc_1_2_ARADDR,
      xt_rsc_1_2_ARID, xt_rsc_1_2_BREADY, xt_rsc_1_2_BVALID, xt_rsc_1_2_BUSER, xt_rsc_1_2_BRESP,
      xt_rsc_1_2_BID, xt_rsc_1_2_WREADY, xt_rsc_1_2_WVALID, xt_rsc_1_2_WUSER, xt_rsc_1_2_WLAST,
      xt_rsc_1_2_WSTRB, xt_rsc_1_2_WDATA, xt_rsc_1_2_AWREADY, xt_rsc_1_2_AWVALID,
      xt_rsc_1_2_AWUSER, xt_rsc_1_2_AWREGION, xt_rsc_1_2_AWQOS, xt_rsc_1_2_AWPROT,
      xt_rsc_1_2_AWCACHE, xt_rsc_1_2_AWLOCK, xt_rsc_1_2_AWBURST, xt_rsc_1_2_AWSIZE,
      xt_rsc_1_2_AWLEN, xt_rsc_1_2_AWADDR, xt_rsc_1_2_AWID, core_wen, xt_rsc_1_2_i_oswt,
      xt_rsc_1_2_i_wen_comp, xt_rsc_1_2_i_oswt_1, xt_rsc_1_2_i_wen_comp_1, xt_rsc_1_2_i_s_raddr_core,
      xt_rsc_1_2_i_s_waddr_core, xt_rsc_1_2_i_s_din_mxwt, xt_rsc_1_2_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_2_s_tdone;
  input xt_rsc_1_2_tr_write_done;
  input xt_rsc_1_2_RREADY;
  output xt_rsc_1_2_RVALID;
  output xt_rsc_1_2_RUSER;
  output xt_rsc_1_2_RLAST;
  output [1:0] xt_rsc_1_2_RRESP;
  output [31:0] xt_rsc_1_2_RDATA;
  output xt_rsc_1_2_RID;
  output xt_rsc_1_2_ARREADY;
  input xt_rsc_1_2_ARVALID;
  input xt_rsc_1_2_ARUSER;
  input [3:0] xt_rsc_1_2_ARREGION;
  input [3:0] xt_rsc_1_2_ARQOS;
  input [2:0] xt_rsc_1_2_ARPROT;
  input [3:0] xt_rsc_1_2_ARCACHE;
  input xt_rsc_1_2_ARLOCK;
  input [1:0] xt_rsc_1_2_ARBURST;
  input [2:0] xt_rsc_1_2_ARSIZE;
  input [7:0] xt_rsc_1_2_ARLEN;
  input [11:0] xt_rsc_1_2_ARADDR;
  input xt_rsc_1_2_ARID;
  input xt_rsc_1_2_BREADY;
  output xt_rsc_1_2_BVALID;
  output xt_rsc_1_2_BUSER;
  output [1:0] xt_rsc_1_2_BRESP;
  output xt_rsc_1_2_BID;
  output xt_rsc_1_2_WREADY;
  input xt_rsc_1_2_WVALID;
  input xt_rsc_1_2_WUSER;
  input xt_rsc_1_2_WLAST;
  input [3:0] xt_rsc_1_2_WSTRB;
  input [31:0] xt_rsc_1_2_WDATA;
  output xt_rsc_1_2_AWREADY;
  input xt_rsc_1_2_AWVALID;
  input xt_rsc_1_2_AWUSER;
  input [3:0] xt_rsc_1_2_AWREGION;
  input [3:0] xt_rsc_1_2_AWQOS;
  input [2:0] xt_rsc_1_2_AWPROT;
  input [3:0] xt_rsc_1_2_AWCACHE;
  input xt_rsc_1_2_AWLOCK;
  input [1:0] xt_rsc_1_2_AWBURST;
  input [2:0] xt_rsc_1_2_AWSIZE;
  input [7:0] xt_rsc_1_2_AWLEN;
  input [11:0] xt_rsc_1_2_AWADDR;
  input xt_rsc_1_2_AWID;
  input core_wen;
  input xt_rsc_1_2_i_oswt;
  output xt_rsc_1_2_i_wen_comp;
  input xt_rsc_1_2_i_oswt_1;
  output xt_rsc_1_2_i_wen_comp_1;
  input [3:0] xt_rsc_1_2_i_s_raddr_core;
  input [3:0] xt_rsc_1_2_i_s_waddr_core;
  output [31:0] xt_rsc_1_2_i_s_din_mxwt;
  input [31:0] xt_rsc_1_2_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_2_i_biwt;
  wire xt_rsc_1_2_i_bdwt;
  wire xt_rsc_1_2_i_bcwt;
  wire xt_rsc_1_2_i_s_re_core_sct;
  wire xt_rsc_1_2_i_biwt_1;
  wire xt_rsc_1_2_i_bdwt_2;
  wire xt_rsc_1_2_i_bcwt_1;
  wire xt_rsc_1_2_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_2_i_s_raddr;
  wire [3:0] xt_rsc_1_2_i_s_waddr;
  wire [31:0] xt_rsc_1_2_i_s_din;
  wire [31:0] xt_rsc_1_2_i_s_dout;
  wire xt_rsc_1_2_i_s_rrdy;
  wire xt_rsc_1_2_i_s_wrdy;
  wire xt_rsc_1_2_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_2_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_2_AWID),
      .AWADDR(xt_rsc_1_2_AWADDR),
      .AWLEN(xt_rsc_1_2_AWLEN),
      .AWSIZE(xt_rsc_1_2_AWSIZE),
      .AWBURST(xt_rsc_1_2_AWBURST),
      .AWLOCK(xt_rsc_1_2_AWLOCK),
      .AWCACHE(xt_rsc_1_2_AWCACHE),
      .AWPROT(xt_rsc_1_2_AWPROT),
      .AWQOS(xt_rsc_1_2_AWQOS),
      .AWREGION(xt_rsc_1_2_AWREGION),
      .AWUSER(xt_rsc_1_2_AWUSER),
      .AWVALID(xt_rsc_1_2_AWVALID),
      .AWREADY(xt_rsc_1_2_AWREADY),
      .WDATA(xt_rsc_1_2_WDATA),
      .WSTRB(xt_rsc_1_2_WSTRB),
      .WLAST(xt_rsc_1_2_WLAST),
      .WUSER(xt_rsc_1_2_WUSER),
      .WVALID(xt_rsc_1_2_WVALID),
      .WREADY(xt_rsc_1_2_WREADY),
      .BID(xt_rsc_1_2_BID),
      .BRESP(xt_rsc_1_2_BRESP),
      .BUSER(xt_rsc_1_2_BUSER),
      .BVALID(xt_rsc_1_2_BVALID),
      .BREADY(xt_rsc_1_2_BREADY),
      .ARID(xt_rsc_1_2_ARID),
      .ARADDR(xt_rsc_1_2_ARADDR),
      .ARLEN(xt_rsc_1_2_ARLEN),
      .ARSIZE(xt_rsc_1_2_ARSIZE),
      .ARBURST(xt_rsc_1_2_ARBURST),
      .ARLOCK(xt_rsc_1_2_ARLOCK),
      .ARCACHE(xt_rsc_1_2_ARCACHE),
      .ARPROT(xt_rsc_1_2_ARPROT),
      .ARQOS(xt_rsc_1_2_ARQOS),
      .ARREGION(xt_rsc_1_2_ARREGION),
      .ARUSER(xt_rsc_1_2_ARUSER),
      .ARVALID(xt_rsc_1_2_ARVALID),
      .ARREADY(xt_rsc_1_2_ARREADY),
      .RID(xt_rsc_1_2_RID),
      .RDATA(xt_rsc_1_2_RDATA),
      .RRESP(xt_rsc_1_2_RRESP),
      .RLAST(xt_rsc_1_2_RLAST),
      .RUSER(xt_rsc_1_2_RUSER),
      .RVALID(xt_rsc_1_2_RVALID),
      .RREADY(xt_rsc_1_2_RREADY),
      .s_re(xt_rsc_1_2_i_s_re_core_sct),
      .s_we(xt_rsc_1_2_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_2_i_s_raddr),
      .s_waddr(xt_rsc_1_2_i_s_waddr),
      .s_din(xt_rsc_1_2_i_s_din),
      .s_dout(xt_rsc_1_2_i_s_dout),
      .s_rrdy(xt_rsc_1_2_i_s_rrdy),
      .s_wrdy(xt_rsc_1_2_i_s_wrdy),
      .is_idle(xt_rsc_1_2_is_idle_1),
      .tr_write_done(xt_rsc_1_2_tr_write_done),
      .s_tdone(xt_rsc_1_2_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_2_i_xt_rsc_1_2_wait_ctrl peaseNTT_core_xt_rsc_1_2_i_xt_rsc_1_2_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_2_i_oswt(xt_rsc_1_2_i_oswt),
      .xt_rsc_1_2_i_oswt_1(xt_rsc_1_2_i_oswt_1),
      .xt_rsc_1_2_i_biwt(xt_rsc_1_2_i_biwt),
      .xt_rsc_1_2_i_bdwt(xt_rsc_1_2_i_bdwt),
      .xt_rsc_1_2_i_bcwt(xt_rsc_1_2_i_bcwt),
      .xt_rsc_1_2_i_s_re_core_sct(xt_rsc_1_2_i_s_re_core_sct),
      .xt_rsc_1_2_i_biwt_1(xt_rsc_1_2_i_biwt_1),
      .xt_rsc_1_2_i_bdwt_2(xt_rsc_1_2_i_bdwt_2),
      .xt_rsc_1_2_i_bcwt_1(xt_rsc_1_2_i_bcwt_1),
      .xt_rsc_1_2_i_s_we_core_sct(xt_rsc_1_2_i_s_we_core_sct),
      .xt_rsc_1_2_i_s_rrdy(xt_rsc_1_2_i_s_rrdy),
      .xt_rsc_1_2_i_s_wrdy(xt_rsc_1_2_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_2_i_xt_rsc_1_2_wait_dp peaseNTT_core_xt_rsc_1_2_i_xt_rsc_1_2_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_2_i_oswt(xt_rsc_1_2_i_oswt),
      .xt_rsc_1_2_i_wen_comp(xt_rsc_1_2_i_wen_comp),
      .xt_rsc_1_2_i_oswt_1(xt_rsc_1_2_i_oswt_1),
      .xt_rsc_1_2_i_wen_comp_1(xt_rsc_1_2_i_wen_comp_1),
      .xt_rsc_1_2_i_s_raddr_core(xt_rsc_1_2_i_s_raddr_core),
      .xt_rsc_1_2_i_s_waddr_core(xt_rsc_1_2_i_s_waddr_core),
      .xt_rsc_1_2_i_s_din_mxwt(xt_rsc_1_2_i_s_din_mxwt),
      .xt_rsc_1_2_i_s_dout_core(xt_rsc_1_2_i_s_dout_core),
      .xt_rsc_1_2_i_biwt(xt_rsc_1_2_i_biwt),
      .xt_rsc_1_2_i_bdwt(xt_rsc_1_2_i_bdwt),
      .xt_rsc_1_2_i_bcwt(xt_rsc_1_2_i_bcwt),
      .xt_rsc_1_2_i_biwt_1(xt_rsc_1_2_i_biwt_1),
      .xt_rsc_1_2_i_bdwt_2(xt_rsc_1_2_i_bdwt_2),
      .xt_rsc_1_2_i_bcwt_1(xt_rsc_1_2_i_bcwt_1),
      .xt_rsc_1_2_i_s_raddr(xt_rsc_1_2_i_s_raddr),
      .xt_rsc_1_2_i_s_raddr_core_sct(xt_rsc_1_2_i_s_re_core_sct),
      .xt_rsc_1_2_i_s_waddr(xt_rsc_1_2_i_s_waddr),
      .xt_rsc_1_2_i_s_waddr_core_sct(xt_rsc_1_2_i_s_we_core_sct),
      .xt_rsc_1_2_i_s_din(xt_rsc_1_2_i_s_din),
      .xt_rsc_1_2_i_s_dout(xt_rsc_1_2_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_1_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_1_i (
  clk, rst, xt_rsc_1_1_s_tdone, xt_rsc_1_1_tr_write_done, xt_rsc_1_1_RREADY, xt_rsc_1_1_RVALID,
      xt_rsc_1_1_RUSER, xt_rsc_1_1_RLAST, xt_rsc_1_1_RRESP, xt_rsc_1_1_RDATA, xt_rsc_1_1_RID,
      xt_rsc_1_1_ARREADY, xt_rsc_1_1_ARVALID, xt_rsc_1_1_ARUSER, xt_rsc_1_1_ARREGION,
      xt_rsc_1_1_ARQOS, xt_rsc_1_1_ARPROT, xt_rsc_1_1_ARCACHE, xt_rsc_1_1_ARLOCK,
      xt_rsc_1_1_ARBURST, xt_rsc_1_1_ARSIZE, xt_rsc_1_1_ARLEN, xt_rsc_1_1_ARADDR,
      xt_rsc_1_1_ARID, xt_rsc_1_1_BREADY, xt_rsc_1_1_BVALID, xt_rsc_1_1_BUSER, xt_rsc_1_1_BRESP,
      xt_rsc_1_1_BID, xt_rsc_1_1_WREADY, xt_rsc_1_1_WVALID, xt_rsc_1_1_WUSER, xt_rsc_1_1_WLAST,
      xt_rsc_1_1_WSTRB, xt_rsc_1_1_WDATA, xt_rsc_1_1_AWREADY, xt_rsc_1_1_AWVALID,
      xt_rsc_1_1_AWUSER, xt_rsc_1_1_AWREGION, xt_rsc_1_1_AWQOS, xt_rsc_1_1_AWPROT,
      xt_rsc_1_1_AWCACHE, xt_rsc_1_1_AWLOCK, xt_rsc_1_1_AWBURST, xt_rsc_1_1_AWSIZE,
      xt_rsc_1_1_AWLEN, xt_rsc_1_1_AWADDR, xt_rsc_1_1_AWID, core_wen, xt_rsc_1_1_i_oswt,
      xt_rsc_1_1_i_wen_comp, xt_rsc_1_1_i_oswt_1, xt_rsc_1_1_i_wen_comp_1, xt_rsc_1_1_i_s_raddr_core,
      xt_rsc_1_1_i_s_waddr_core, xt_rsc_1_1_i_s_din_mxwt, xt_rsc_1_1_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_1_s_tdone;
  input xt_rsc_1_1_tr_write_done;
  input xt_rsc_1_1_RREADY;
  output xt_rsc_1_1_RVALID;
  output xt_rsc_1_1_RUSER;
  output xt_rsc_1_1_RLAST;
  output [1:0] xt_rsc_1_1_RRESP;
  output [31:0] xt_rsc_1_1_RDATA;
  output xt_rsc_1_1_RID;
  output xt_rsc_1_1_ARREADY;
  input xt_rsc_1_1_ARVALID;
  input xt_rsc_1_1_ARUSER;
  input [3:0] xt_rsc_1_1_ARREGION;
  input [3:0] xt_rsc_1_1_ARQOS;
  input [2:0] xt_rsc_1_1_ARPROT;
  input [3:0] xt_rsc_1_1_ARCACHE;
  input xt_rsc_1_1_ARLOCK;
  input [1:0] xt_rsc_1_1_ARBURST;
  input [2:0] xt_rsc_1_1_ARSIZE;
  input [7:0] xt_rsc_1_1_ARLEN;
  input [11:0] xt_rsc_1_1_ARADDR;
  input xt_rsc_1_1_ARID;
  input xt_rsc_1_1_BREADY;
  output xt_rsc_1_1_BVALID;
  output xt_rsc_1_1_BUSER;
  output [1:0] xt_rsc_1_1_BRESP;
  output xt_rsc_1_1_BID;
  output xt_rsc_1_1_WREADY;
  input xt_rsc_1_1_WVALID;
  input xt_rsc_1_1_WUSER;
  input xt_rsc_1_1_WLAST;
  input [3:0] xt_rsc_1_1_WSTRB;
  input [31:0] xt_rsc_1_1_WDATA;
  output xt_rsc_1_1_AWREADY;
  input xt_rsc_1_1_AWVALID;
  input xt_rsc_1_1_AWUSER;
  input [3:0] xt_rsc_1_1_AWREGION;
  input [3:0] xt_rsc_1_1_AWQOS;
  input [2:0] xt_rsc_1_1_AWPROT;
  input [3:0] xt_rsc_1_1_AWCACHE;
  input xt_rsc_1_1_AWLOCK;
  input [1:0] xt_rsc_1_1_AWBURST;
  input [2:0] xt_rsc_1_1_AWSIZE;
  input [7:0] xt_rsc_1_1_AWLEN;
  input [11:0] xt_rsc_1_1_AWADDR;
  input xt_rsc_1_1_AWID;
  input core_wen;
  input xt_rsc_1_1_i_oswt;
  output xt_rsc_1_1_i_wen_comp;
  input xt_rsc_1_1_i_oswt_1;
  output xt_rsc_1_1_i_wen_comp_1;
  input [3:0] xt_rsc_1_1_i_s_raddr_core;
  input [3:0] xt_rsc_1_1_i_s_waddr_core;
  output [31:0] xt_rsc_1_1_i_s_din_mxwt;
  input [31:0] xt_rsc_1_1_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_1_i_biwt;
  wire xt_rsc_1_1_i_bdwt;
  wire xt_rsc_1_1_i_bcwt;
  wire xt_rsc_1_1_i_s_re_core_sct;
  wire xt_rsc_1_1_i_biwt_1;
  wire xt_rsc_1_1_i_bdwt_2;
  wire xt_rsc_1_1_i_bcwt_1;
  wire xt_rsc_1_1_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_1_i_s_raddr;
  wire [3:0] xt_rsc_1_1_i_s_waddr;
  wire [31:0] xt_rsc_1_1_i_s_din;
  wire [31:0] xt_rsc_1_1_i_s_dout;
  wire xt_rsc_1_1_i_s_rrdy;
  wire xt_rsc_1_1_i_s_wrdy;
  wire xt_rsc_1_1_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_1_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_1_AWID),
      .AWADDR(xt_rsc_1_1_AWADDR),
      .AWLEN(xt_rsc_1_1_AWLEN),
      .AWSIZE(xt_rsc_1_1_AWSIZE),
      .AWBURST(xt_rsc_1_1_AWBURST),
      .AWLOCK(xt_rsc_1_1_AWLOCK),
      .AWCACHE(xt_rsc_1_1_AWCACHE),
      .AWPROT(xt_rsc_1_1_AWPROT),
      .AWQOS(xt_rsc_1_1_AWQOS),
      .AWREGION(xt_rsc_1_1_AWREGION),
      .AWUSER(xt_rsc_1_1_AWUSER),
      .AWVALID(xt_rsc_1_1_AWVALID),
      .AWREADY(xt_rsc_1_1_AWREADY),
      .WDATA(xt_rsc_1_1_WDATA),
      .WSTRB(xt_rsc_1_1_WSTRB),
      .WLAST(xt_rsc_1_1_WLAST),
      .WUSER(xt_rsc_1_1_WUSER),
      .WVALID(xt_rsc_1_1_WVALID),
      .WREADY(xt_rsc_1_1_WREADY),
      .BID(xt_rsc_1_1_BID),
      .BRESP(xt_rsc_1_1_BRESP),
      .BUSER(xt_rsc_1_1_BUSER),
      .BVALID(xt_rsc_1_1_BVALID),
      .BREADY(xt_rsc_1_1_BREADY),
      .ARID(xt_rsc_1_1_ARID),
      .ARADDR(xt_rsc_1_1_ARADDR),
      .ARLEN(xt_rsc_1_1_ARLEN),
      .ARSIZE(xt_rsc_1_1_ARSIZE),
      .ARBURST(xt_rsc_1_1_ARBURST),
      .ARLOCK(xt_rsc_1_1_ARLOCK),
      .ARCACHE(xt_rsc_1_1_ARCACHE),
      .ARPROT(xt_rsc_1_1_ARPROT),
      .ARQOS(xt_rsc_1_1_ARQOS),
      .ARREGION(xt_rsc_1_1_ARREGION),
      .ARUSER(xt_rsc_1_1_ARUSER),
      .ARVALID(xt_rsc_1_1_ARVALID),
      .ARREADY(xt_rsc_1_1_ARREADY),
      .RID(xt_rsc_1_1_RID),
      .RDATA(xt_rsc_1_1_RDATA),
      .RRESP(xt_rsc_1_1_RRESP),
      .RLAST(xt_rsc_1_1_RLAST),
      .RUSER(xt_rsc_1_1_RUSER),
      .RVALID(xt_rsc_1_1_RVALID),
      .RREADY(xt_rsc_1_1_RREADY),
      .s_re(xt_rsc_1_1_i_s_re_core_sct),
      .s_we(xt_rsc_1_1_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_1_i_s_raddr),
      .s_waddr(xt_rsc_1_1_i_s_waddr),
      .s_din(xt_rsc_1_1_i_s_din),
      .s_dout(xt_rsc_1_1_i_s_dout),
      .s_rrdy(xt_rsc_1_1_i_s_rrdy),
      .s_wrdy(xt_rsc_1_1_i_s_wrdy),
      .is_idle(xt_rsc_1_1_is_idle_1),
      .tr_write_done(xt_rsc_1_1_tr_write_done),
      .s_tdone(xt_rsc_1_1_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_1_i_xt_rsc_1_1_wait_ctrl peaseNTT_core_xt_rsc_1_1_i_xt_rsc_1_1_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_1_i_oswt(xt_rsc_1_1_i_oswt),
      .xt_rsc_1_1_i_oswt_1(xt_rsc_1_1_i_oswt_1),
      .xt_rsc_1_1_i_biwt(xt_rsc_1_1_i_biwt),
      .xt_rsc_1_1_i_bdwt(xt_rsc_1_1_i_bdwt),
      .xt_rsc_1_1_i_bcwt(xt_rsc_1_1_i_bcwt),
      .xt_rsc_1_1_i_s_re_core_sct(xt_rsc_1_1_i_s_re_core_sct),
      .xt_rsc_1_1_i_biwt_1(xt_rsc_1_1_i_biwt_1),
      .xt_rsc_1_1_i_bdwt_2(xt_rsc_1_1_i_bdwt_2),
      .xt_rsc_1_1_i_bcwt_1(xt_rsc_1_1_i_bcwt_1),
      .xt_rsc_1_1_i_s_we_core_sct(xt_rsc_1_1_i_s_we_core_sct),
      .xt_rsc_1_1_i_s_rrdy(xt_rsc_1_1_i_s_rrdy),
      .xt_rsc_1_1_i_s_wrdy(xt_rsc_1_1_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_1_i_xt_rsc_1_1_wait_dp peaseNTT_core_xt_rsc_1_1_i_xt_rsc_1_1_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_1_i_oswt(xt_rsc_1_1_i_oswt),
      .xt_rsc_1_1_i_wen_comp(xt_rsc_1_1_i_wen_comp),
      .xt_rsc_1_1_i_oswt_1(xt_rsc_1_1_i_oswt_1),
      .xt_rsc_1_1_i_wen_comp_1(xt_rsc_1_1_i_wen_comp_1),
      .xt_rsc_1_1_i_s_raddr_core(xt_rsc_1_1_i_s_raddr_core),
      .xt_rsc_1_1_i_s_waddr_core(xt_rsc_1_1_i_s_waddr_core),
      .xt_rsc_1_1_i_s_din_mxwt(xt_rsc_1_1_i_s_din_mxwt),
      .xt_rsc_1_1_i_s_dout_core(xt_rsc_1_1_i_s_dout_core),
      .xt_rsc_1_1_i_biwt(xt_rsc_1_1_i_biwt),
      .xt_rsc_1_1_i_bdwt(xt_rsc_1_1_i_bdwt),
      .xt_rsc_1_1_i_bcwt(xt_rsc_1_1_i_bcwt),
      .xt_rsc_1_1_i_biwt_1(xt_rsc_1_1_i_biwt_1),
      .xt_rsc_1_1_i_bdwt_2(xt_rsc_1_1_i_bdwt_2),
      .xt_rsc_1_1_i_bcwt_1(xt_rsc_1_1_i_bcwt_1),
      .xt_rsc_1_1_i_s_raddr(xt_rsc_1_1_i_s_raddr),
      .xt_rsc_1_1_i_s_raddr_core_sct(xt_rsc_1_1_i_s_re_core_sct),
      .xt_rsc_1_1_i_s_waddr(xt_rsc_1_1_i_s_waddr),
      .xt_rsc_1_1_i_s_waddr_core_sct(xt_rsc_1_1_i_s_we_core_sct),
      .xt_rsc_1_1_i_s_din(xt_rsc_1_1_i_s_din),
      .xt_rsc_1_1_i_s_dout(xt_rsc_1_1_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_1_0_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_1_0_i (
  clk, rst, xt_rsc_1_0_s_tdone, xt_rsc_1_0_tr_write_done, xt_rsc_1_0_RREADY, xt_rsc_1_0_RVALID,
      xt_rsc_1_0_RUSER, xt_rsc_1_0_RLAST, xt_rsc_1_0_RRESP, xt_rsc_1_0_RDATA, xt_rsc_1_0_RID,
      xt_rsc_1_0_ARREADY, xt_rsc_1_0_ARVALID, xt_rsc_1_0_ARUSER, xt_rsc_1_0_ARREGION,
      xt_rsc_1_0_ARQOS, xt_rsc_1_0_ARPROT, xt_rsc_1_0_ARCACHE, xt_rsc_1_0_ARLOCK,
      xt_rsc_1_0_ARBURST, xt_rsc_1_0_ARSIZE, xt_rsc_1_0_ARLEN, xt_rsc_1_0_ARADDR,
      xt_rsc_1_0_ARID, xt_rsc_1_0_BREADY, xt_rsc_1_0_BVALID, xt_rsc_1_0_BUSER, xt_rsc_1_0_BRESP,
      xt_rsc_1_0_BID, xt_rsc_1_0_WREADY, xt_rsc_1_0_WVALID, xt_rsc_1_0_WUSER, xt_rsc_1_0_WLAST,
      xt_rsc_1_0_WSTRB, xt_rsc_1_0_WDATA, xt_rsc_1_0_AWREADY, xt_rsc_1_0_AWVALID,
      xt_rsc_1_0_AWUSER, xt_rsc_1_0_AWREGION, xt_rsc_1_0_AWQOS, xt_rsc_1_0_AWPROT,
      xt_rsc_1_0_AWCACHE, xt_rsc_1_0_AWLOCK, xt_rsc_1_0_AWBURST, xt_rsc_1_0_AWSIZE,
      xt_rsc_1_0_AWLEN, xt_rsc_1_0_AWADDR, xt_rsc_1_0_AWID, core_wen, xt_rsc_1_0_i_oswt,
      xt_rsc_1_0_i_wen_comp, xt_rsc_1_0_i_oswt_1, xt_rsc_1_0_i_wen_comp_1, xt_rsc_1_0_i_s_raddr_core,
      xt_rsc_1_0_i_s_waddr_core, xt_rsc_1_0_i_s_din_mxwt, xt_rsc_1_0_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_1_0_s_tdone;
  input xt_rsc_1_0_tr_write_done;
  input xt_rsc_1_0_RREADY;
  output xt_rsc_1_0_RVALID;
  output xt_rsc_1_0_RUSER;
  output xt_rsc_1_0_RLAST;
  output [1:0] xt_rsc_1_0_RRESP;
  output [31:0] xt_rsc_1_0_RDATA;
  output xt_rsc_1_0_RID;
  output xt_rsc_1_0_ARREADY;
  input xt_rsc_1_0_ARVALID;
  input xt_rsc_1_0_ARUSER;
  input [3:0] xt_rsc_1_0_ARREGION;
  input [3:0] xt_rsc_1_0_ARQOS;
  input [2:0] xt_rsc_1_0_ARPROT;
  input [3:0] xt_rsc_1_0_ARCACHE;
  input xt_rsc_1_0_ARLOCK;
  input [1:0] xt_rsc_1_0_ARBURST;
  input [2:0] xt_rsc_1_0_ARSIZE;
  input [7:0] xt_rsc_1_0_ARLEN;
  input [11:0] xt_rsc_1_0_ARADDR;
  input xt_rsc_1_0_ARID;
  input xt_rsc_1_0_BREADY;
  output xt_rsc_1_0_BVALID;
  output xt_rsc_1_0_BUSER;
  output [1:0] xt_rsc_1_0_BRESP;
  output xt_rsc_1_0_BID;
  output xt_rsc_1_0_WREADY;
  input xt_rsc_1_0_WVALID;
  input xt_rsc_1_0_WUSER;
  input xt_rsc_1_0_WLAST;
  input [3:0] xt_rsc_1_0_WSTRB;
  input [31:0] xt_rsc_1_0_WDATA;
  output xt_rsc_1_0_AWREADY;
  input xt_rsc_1_0_AWVALID;
  input xt_rsc_1_0_AWUSER;
  input [3:0] xt_rsc_1_0_AWREGION;
  input [3:0] xt_rsc_1_0_AWQOS;
  input [2:0] xt_rsc_1_0_AWPROT;
  input [3:0] xt_rsc_1_0_AWCACHE;
  input xt_rsc_1_0_AWLOCK;
  input [1:0] xt_rsc_1_0_AWBURST;
  input [2:0] xt_rsc_1_0_AWSIZE;
  input [7:0] xt_rsc_1_0_AWLEN;
  input [11:0] xt_rsc_1_0_AWADDR;
  input xt_rsc_1_0_AWID;
  input core_wen;
  input xt_rsc_1_0_i_oswt;
  output xt_rsc_1_0_i_wen_comp;
  input xt_rsc_1_0_i_oswt_1;
  output xt_rsc_1_0_i_wen_comp_1;
  input [3:0] xt_rsc_1_0_i_s_raddr_core;
  input [3:0] xt_rsc_1_0_i_s_waddr_core;
  output [31:0] xt_rsc_1_0_i_s_din_mxwt;
  input [31:0] xt_rsc_1_0_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_1_0_i_biwt;
  wire xt_rsc_1_0_i_bdwt;
  wire xt_rsc_1_0_i_bcwt;
  wire xt_rsc_1_0_i_s_re_core_sct;
  wire xt_rsc_1_0_i_biwt_1;
  wire xt_rsc_1_0_i_bdwt_2;
  wire xt_rsc_1_0_i_bcwt_1;
  wire xt_rsc_1_0_i_s_we_core_sct;
  wire [3:0] xt_rsc_1_0_i_s_raddr;
  wire [3:0] xt_rsc_1_0_i_s_waddr;
  wire [31:0] xt_rsc_1_0_i_s_din;
  wire [31:0] xt_rsc_1_0_i_s_dout;
  wire xt_rsc_1_0_i_s_rrdy;
  wire xt_rsc_1_0_i_s_wrdy;
  wire xt_rsc_1_0_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_1_0_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_1_0_AWID),
      .AWADDR(xt_rsc_1_0_AWADDR),
      .AWLEN(xt_rsc_1_0_AWLEN),
      .AWSIZE(xt_rsc_1_0_AWSIZE),
      .AWBURST(xt_rsc_1_0_AWBURST),
      .AWLOCK(xt_rsc_1_0_AWLOCK),
      .AWCACHE(xt_rsc_1_0_AWCACHE),
      .AWPROT(xt_rsc_1_0_AWPROT),
      .AWQOS(xt_rsc_1_0_AWQOS),
      .AWREGION(xt_rsc_1_0_AWREGION),
      .AWUSER(xt_rsc_1_0_AWUSER),
      .AWVALID(xt_rsc_1_0_AWVALID),
      .AWREADY(xt_rsc_1_0_AWREADY),
      .WDATA(xt_rsc_1_0_WDATA),
      .WSTRB(xt_rsc_1_0_WSTRB),
      .WLAST(xt_rsc_1_0_WLAST),
      .WUSER(xt_rsc_1_0_WUSER),
      .WVALID(xt_rsc_1_0_WVALID),
      .WREADY(xt_rsc_1_0_WREADY),
      .BID(xt_rsc_1_0_BID),
      .BRESP(xt_rsc_1_0_BRESP),
      .BUSER(xt_rsc_1_0_BUSER),
      .BVALID(xt_rsc_1_0_BVALID),
      .BREADY(xt_rsc_1_0_BREADY),
      .ARID(xt_rsc_1_0_ARID),
      .ARADDR(xt_rsc_1_0_ARADDR),
      .ARLEN(xt_rsc_1_0_ARLEN),
      .ARSIZE(xt_rsc_1_0_ARSIZE),
      .ARBURST(xt_rsc_1_0_ARBURST),
      .ARLOCK(xt_rsc_1_0_ARLOCK),
      .ARCACHE(xt_rsc_1_0_ARCACHE),
      .ARPROT(xt_rsc_1_0_ARPROT),
      .ARQOS(xt_rsc_1_0_ARQOS),
      .ARREGION(xt_rsc_1_0_ARREGION),
      .ARUSER(xt_rsc_1_0_ARUSER),
      .ARVALID(xt_rsc_1_0_ARVALID),
      .ARREADY(xt_rsc_1_0_ARREADY),
      .RID(xt_rsc_1_0_RID),
      .RDATA(xt_rsc_1_0_RDATA),
      .RRESP(xt_rsc_1_0_RRESP),
      .RLAST(xt_rsc_1_0_RLAST),
      .RUSER(xt_rsc_1_0_RUSER),
      .RVALID(xt_rsc_1_0_RVALID),
      .RREADY(xt_rsc_1_0_RREADY),
      .s_re(xt_rsc_1_0_i_s_re_core_sct),
      .s_we(xt_rsc_1_0_i_s_we_core_sct),
      .s_raddr(xt_rsc_1_0_i_s_raddr),
      .s_waddr(xt_rsc_1_0_i_s_waddr),
      .s_din(xt_rsc_1_0_i_s_din),
      .s_dout(xt_rsc_1_0_i_s_dout),
      .s_rrdy(xt_rsc_1_0_i_s_rrdy),
      .s_wrdy(xt_rsc_1_0_i_s_wrdy),
      .is_idle(xt_rsc_1_0_is_idle_1),
      .tr_write_done(xt_rsc_1_0_tr_write_done),
      .s_tdone(xt_rsc_1_0_s_tdone)
    );
  peaseNTT_core_xt_rsc_1_0_i_xt_rsc_1_0_wait_ctrl peaseNTT_core_xt_rsc_1_0_i_xt_rsc_1_0_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_1_0_i_oswt(xt_rsc_1_0_i_oswt),
      .xt_rsc_1_0_i_oswt_1(xt_rsc_1_0_i_oswt_1),
      .xt_rsc_1_0_i_biwt(xt_rsc_1_0_i_biwt),
      .xt_rsc_1_0_i_bdwt(xt_rsc_1_0_i_bdwt),
      .xt_rsc_1_0_i_bcwt(xt_rsc_1_0_i_bcwt),
      .xt_rsc_1_0_i_s_re_core_sct(xt_rsc_1_0_i_s_re_core_sct),
      .xt_rsc_1_0_i_biwt_1(xt_rsc_1_0_i_biwt_1),
      .xt_rsc_1_0_i_bdwt_2(xt_rsc_1_0_i_bdwt_2),
      .xt_rsc_1_0_i_bcwt_1(xt_rsc_1_0_i_bcwt_1),
      .xt_rsc_1_0_i_s_we_core_sct(xt_rsc_1_0_i_s_we_core_sct),
      .xt_rsc_1_0_i_s_rrdy(xt_rsc_1_0_i_s_rrdy),
      .xt_rsc_1_0_i_s_wrdy(xt_rsc_1_0_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_1_0_i_xt_rsc_1_0_wait_dp peaseNTT_core_xt_rsc_1_0_i_xt_rsc_1_0_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_0_i_oswt(xt_rsc_1_0_i_oswt),
      .xt_rsc_1_0_i_wen_comp(xt_rsc_1_0_i_wen_comp),
      .xt_rsc_1_0_i_oswt_1(xt_rsc_1_0_i_oswt_1),
      .xt_rsc_1_0_i_wen_comp_1(xt_rsc_1_0_i_wen_comp_1),
      .xt_rsc_1_0_i_s_raddr_core(xt_rsc_1_0_i_s_raddr_core),
      .xt_rsc_1_0_i_s_waddr_core(xt_rsc_1_0_i_s_waddr_core),
      .xt_rsc_1_0_i_s_din_mxwt(xt_rsc_1_0_i_s_din_mxwt),
      .xt_rsc_1_0_i_s_dout_core(xt_rsc_1_0_i_s_dout_core),
      .xt_rsc_1_0_i_biwt(xt_rsc_1_0_i_biwt),
      .xt_rsc_1_0_i_bdwt(xt_rsc_1_0_i_bdwt),
      .xt_rsc_1_0_i_bcwt(xt_rsc_1_0_i_bcwt),
      .xt_rsc_1_0_i_biwt_1(xt_rsc_1_0_i_biwt_1),
      .xt_rsc_1_0_i_bdwt_2(xt_rsc_1_0_i_bdwt_2),
      .xt_rsc_1_0_i_bcwt_1(xt_rsc_1_0_i_bcwt_1),
      .xt_rsc_1_0_i_s_raddr(xt_rsc_1_0_i_s_raddr),
      .xt_rsc_1_0_i_s_raddr_core_sct(xt_rsc_1_0_i_s_re_core_sct),
      .xt_rsc_1_0_i_s_waddr(xt_rsc_1_0_i_s_waddr),
      .xt_rsc_1_0_i_s_waddr_core_sct(xt_rsc_1_0_i_s_we_core_sct),
      .xt_rsc_1_0_i_s_din(xt_rsc_1_0_i_s_din),
      .xt_rsc_1_0_i_s_dout(xt_rsc_1_0_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_31_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_31_i (
  clk, rst, xt_rsc_0_31_s_tdone, xt_rsc_0_31_tr_write_done, xt_rsc_0_31_RREADY, xt_rsc_0_31_RVALID,
      xt_rsc_0_31_RUSER, xt_rsc_0_31_RLAST, xt_rsc_0_31_RRESP, xt_rsc_0_31_RDATA,
      xt_rsc_0_31_RID, xt_rsc_0_31_ARREADY, xt_rsc_0_31_ARVALID, xt_rsc_0_31_ARUSER,
      xt_rsc_0_31_ARREGION, xt_rsc_0_31_ARQOS, xt_rsc_0_31_ARPROT, xt_rsc_0_31_ARCACHE,
      xt_rsc_0_31_ARLOCK, xt_rsc_0_31_ARBURST, xt_rsc_0_31_ARSIZE, xt_rsc_0_31_ARLEN,
      xt_rsc_0_31_ARADDR, xt_rsc_0_31_ARID, xt_rsc_0_31_BREADY, xt_rsc_0_31_BVALID,
      xt_rsc_0_31_BUSER, xt_rsc_0_31_BRESP, xt_rsc_0_31_BID, xt_rsc_0_31_WREADY,
      xt_rsc_0_31_WVALID, xt_rsc_0_31_WUSER, xt_rsc_0_31_WLAST, xt_rsc_0_31_WSTRB,
      xt_rsc_0_31_WDATA, xt_rsc_0_31_AWREADY, xt_rsc_0_31_AWVALID, xt_rsc_0_31_AWUSER,
      xt_rsc_0_31_AWREGION, xt_rsc_0_31_AWQOS, xt_rsc_0_31_AWPROT, xt_rsc_0_31_AWCACHE,
      xt_rsc_0_31_AWLOCK, xt_rsc_0_31_AWBURST, xt_rsc_0_31_AWSIZE, xt_rsc_0_31_AWLEN,
      xt_rsc_0_31_AWADDR, xt_rsc_0_31_AWID, core_wen, xt_rsc_0_31_i_oswt, xt_rsc_0_31_i_wen_comp,
      xt_rsc_0_31_i_oswt_1, xt_rsc_0_31_i_wen_comp_1, xt_rsc_0_31_i_s_raddr_core,
      xt_rsc_0_31_i_s_waddr_core, xt_rsc_0_31_i_s_din_mxwt, xt_rsc_0_31_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_31_s_tdone;
  input xt_rsc_0_31_tr_write_done;
  input xt_rsc_0_31_RREADY;
  output xt_rsc_0_31_RVALID;
  output xt_rsc_0_31_RUSER;
  output xt_rsc_0_31_RLAST;
  output [1:0] xt_rsc_0_31_RRESP;
  output [31:0] xt_rsc_0_31_RDATA;
  output xt_rsc_0_31_RID;
  output xt_rsc_0_31_ARREADY;
  input xt_rsc_0_31_ARVALID;
  input xt_rsc_0_31_ARUSER;
  input [3:0] xt_rsc_0_31_ARREGION;
  input [3:0] xt_rsc_0_31_ARQOS;
  input [2:0] xt_rsc_0_31_ARPROT;
  input [3:0] xt_rsc_0_31_ARCACHE;
  input xt_rsc_0_31_ARLOCK;
  input [1:0] xt_rsc_0_31_ARBURST;
  input [2:0] xt_rsc_0_31_ARSIZE;
  input [7:0] xt_rsc_0_31_ARLEN;
  input [11:0] xt_rsc_0_31_ARADDR;
  input xt_rsc_0_31_ARID;
  input xt_rsc_0_31_BREADY;
  output xt_rsc_0_31_BVALID;
  output xt_rsc_0_31_BUSER;
  output [1:0] xt_rsc_0_31_BRESP;
  output xt_rsc_0_31_BID;
  output xt_rsc_0_31_WREADY;
  input xt_rsc_0_31_WVALID;
  input xt_rsc_0_31_WUSER;
  input xt_rsc_0_31_WLAST;
  input [3:0] xt_rsc_0_31_WSTRB;
  input [31:0] xt_rsc_0_31_WDATA;
  output xt_rsc_0_31_AWREADY;
  input xt_rsc_0_31_AWVALID;
  input xt_rsc_0_31_AWUSER;
  input [3:0] xt_rsc_0_31_AWREGION;
  input [3:0] xt_rsc_0_31_AWQOS;
  input [2:0] xt_rsc_0_31_AWPROT;
  input [3:0] xt_rsc_0_31_AWCACHE;
  input xt_rsc_0_31_AWLOCK;
  input [1:0] xt_rsc_0_31_AWBURST;
  input [2:0] xt_rsc_0_31_AWSIZE;
  input [7:0] xt_rsc_0_31_AWLEN;
  input [11:0] xt_rsc_0_31_AWADDR;
  input xt_rsc_0_31_AWID;
  input core_wen;
  input xt_rsc_0_31_i_oswt;
  output xt_rsc_0_31_i_wen_comp;
  input xt_rsc_0_31_i_oswt_1;
  output xt_rsc_0_31_i_wen_comp_1;
  input [3:0] xt_rsc_0_31_i_s_raddr_core;
  input [3:0] xt_rsc_0_31_i_s_waddr_core;
  output [31:0] xt_rsc_0_31_i_s_din_mxwt;
  input [31:0] xt_rsc_0_31_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_31_i_biwt;
  wire xt_rsc_0_31_i_bdwt;
  wire xt_rsc_0_31_i_bcwt;
  wire xt_rsc_0_31_i_s_re_core_sct;
  wire xt_rsc_0_31_i_biwt_1;
  wire xt_rsc_0_31_i_bdwt_2;
  wire xt_rsc_0_31_i_bcwt_1;
  wire xt_rsc_0_31_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_31_i_s_raddr;
  wire [3:0] xt_rsc_0_31_i_s_waddr;
  wire [31:0] xt_rsc_0_31_i_s_din;
  wire [31:0] xt_rsc_0_31_i_s_dout;
  wire xt_rsc_0_31_i_s_rrdy;
  wire xt_rsc_0_31_i_s_wrdy;
  wire xt_rsc_0_31_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_31_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_31_AWID),
      .AWADDR(xt_rsc_0_31_AWADDR),
      .AWLEN(xt_rsc_0_31_AWLEN),
      .AWSIZE(xt_rsc_0_31_AWSIZE),
      .AWBURST(xt_rsc_0_31_AWBURST),
      .AWLOCK(xt_rsc_0_31_AWLOCK),
      .AWCACHE(xt_rsc_0_31_AWCACHE),
      .AWPROT(xt_rsc_0_31_AWPROT),
      .AWQOS(xt_rsc_0_31_AWQOS),
      .AWREGION(xt_rsc_0_31_AWREGION),
      .AWUSER(xt_rsc_0_31_AWUSER),
      .AWVALID(xt_rsc_0_31_AWVALID),
      .AWREADY(xt_rsc_0_31_AWREADY),
      .WDATA(xt_rsc_0_31_WDATA),
      .WSTRB(xt_rsc_0_31_WSTRB),
      .WLAST(xt_rsc_0_31_WLAST),
      .WUSER(xt_rsc_0_31_WUSER),
      .WVALID(xt_rsc_0_31_WVALID),
      .WREADY(xt_rsc_0_31_WREADY),
      .BID(xt_rsc_0_31_BID),
      .BRESP(xt_rsc_0_31_BRESP),
      .BUSER(xt_rsc_0_31_BUSER),
      .BVALID(xt_rsc_0_31_BVALID),
      .BREADY(xt_rsc_0_31_BREADY),
      .ARID(xt_rsc_0_31_ARID),
      .ARADDR(xt_rsc_0_31_ARADDR),
      .ARLEN(xt_rsc_0_31_ARLEN),
      .ARSIZE(xt_rsc_0_31_ARSIZE),
      .ARBURST(xt_rsc_0_31_ARBURST),
      .ARLOCK(xt_rsc_0_31_ARLOCK),
      .ARCACHE(xt_rsc_0_31_ARCACHE),
      .ARPROT(xt_rsc_0_31_ARPROT),
      .ARQOS(xt_rsc_0_31_ARQOS),
      .ARREGION(xt_rsc_0_31_ARREGION),
      .ARUSER(xt_rsc_0_31_ARUSER),
      .ARVALID(xt_rsc_0_31_ARVALID),
      .ARREADY(xt_rsc_0_31_ARREADY),
      .RID(xt_rsc_0_31_RID),
      .RDATA(xt_rsc_0_31_RDATA),
      .RRESP(xt_rsc_0_31_RRESP),
      .RLAST(xt_rsc_0_31_RLAST),
      .RUSER(xt_rsc_0_31_RUSER),
      .RVALID(xt_rsc_0_31_RVALID),
      .RREADY(xt_rsc_0_31_RREADY),
      .s_re(xt_rsc_0_31_i_s_re_core_sct),
      .s_we(xt_rsc_0_31_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_31_i_s_raddr),
      .s_waddr(xt_rsc_0_31_i_s_waddr),
      .s_din(xt_rsc_0_31_i_s_din),
      .s_dout(xt_rsc_0_31_i_s_dout),
      .s_rrdy(xt_rsc_0_31_i_s_rrdy),
      .s_wrdy(xt_rsc_0_31_i_s_wrdy),
      .is_idle(xt_rsc_0_31_is_idle_1),
      .tr_write_done(xt_rsc_0_31_tr_write_done),
      .s_tdone(xt_rsc_0_31_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_31_i_xt_rsc_0_31_wait_ctrl peaseNTT_core_xt_rsc_0_31_i_xt_rsc_0_31_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_31_i_oswt(xt_rsc_0_31_i_oswt),
      .xt_rsc_0_31_i_oswt_1(xt_rsc_0_31_i_oswt_1),
      .xt_rsc_0_31_i_biwt(xt_rsc_0_31_i_biwt),
      .xt_rsc_0_31_i_bdwt(xt_rsc_0_31_i_bdwt),
      .xt_rsc_0_31_i_bcwt(xt_rsc_0_31_i_bcwt),
      .xt_rsc_0_31_i_s_re_core_sct(xt_rsc_0_31_i_s_re_core_sct),
      .xt_rsc_0_31_i_biwt_1(xt_rsc_0_31_i_biwt_1),
      .xt_rsc_0_31_i_bdwt_2(xt_rsc_0_31_i_bdwt_2),
      .xt_rsc_0_31_i_bcwt_1(xt_rsc_0_31_i_bcwt_1),
      .xt_rsc_0_31_i_s_we_core_sct(xt_rsc_0_31_i_s_we_core_sct),
      .xt_rsc_0_31_i_s_rrdy(xt_rsc_0_31_i_s_rrdy),
      .xt_rsc_0_31_i_s_wrdy(xt_rsc_0_31_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_31_i_xt_rsc_0_31_wait_dp peaseNTT_core_xt_rsc_0_31_i_xt_rsc_0_31_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_31_i_oswt(xt_rsc_0_31_i_oswt),
      .xt_rsc_0_31_i_wen_comp(xt_rsc_0_31_i_wen_comp),
      .xt_rsc_0_31_i_oswt_1(xt_rsc_0_31_i_oswt_1),
      .xt_rsc_0_31_i_wen_comp_1(xt_rsc_0_31_i_wen_comp_1),
      .xt_rsc_0_31_i_s_raddr_core(xt_rsc_0_31_i_s_raddr_core),
      .xt_rsc_0_31_i_s_waddr_core(xt_rsc_0_31_i_s_waddr_core),
      .xt_rsc_0_31_i_s_din_mxwt(xt_rsc_0_31_i_s_din_mxwt),
      .xt_rsc_0_31_i_s_dout_core(xt_rsc_0_31_i_s_dout_core),
      .xt_rsc_0_31_i_biwt(xt_rsc_0_31_i_biwt),
      .xt_rsc_0_31_i_bdwt(xt_rsc_0_31_i_bdwt),
      .xt_rsc_0_31_i_bcwt(xt_rsc_0_31_i_bcwt),
      .xt_rsc_0_31_i_biwt_1(xt_rsc_0_31_i_biwt_1),
      .xt_rsc_0_31_i_bdwt_2(xt_rsc_0_31_i_bdwt_2),
      .xt_rsc_0_31_i_bcwt_1(xt_rsc_0_31_i_bcwt_1),
      .xt_rsc_0_31_i_s_raddr(xt_rsc_0_31_i_s_raddr),
      .xt_rsc_0_31_i_s_raddr_core_sct(xt_rsc_0_31_i_s_re_core_sct),
      .xt_rsc_0_31_i_s_waddr(xt_rsc_0_31_i_s_waddr),
      .xt_rsc_0_31_i_s_waddr_core_sct(xt_rsc_0_31_i_s_we_core_sct),
      .xt_rsc_0_31_i_s_din(xt_rsc_0_31_i_s_din),
      .xt_rsc_0_31_i_s_dout(xt_rsc_0_31_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_30_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_30_i (
  clk, rst, xt_rsc_0_30_s_tdone, xt_rsc_0_30_tr_write_done, xt_rsc_0_30_RREADY, xt_rsc_0_30_RVALID,
      xt_rsc_0_30_RUSER, xt_rsc_0_30_RLAST, xt_rsc_0_30_RRESP, xt_rsc_0_30_RDATA,
      xt_rsc_0_30_RID, xt_rsc_0_30_ARREADY, xt_rsc_0_30_ARVALID, xt_rsc_0_30_ARUSER,
      xt_rsc_0_30_ARREGION, xt_rsc_0_30_ARQOS, xt_rsc_0_30_ARPROT, xt_rsc_0_30_ARCACHE,
      xt_rsc_0_30_ARLOCK, xt_rsc_0_30_ARBURST, xt_rsc_0_30_ARSIZE, xt_rsc_0_30_ARLEN,
      xt_rsc_0_30_ARADDR, xt_rsc_0_30_ARID, xt_rsc_0_30_BREADY, xt_rsc_0_30_BVALID,
      xt_rsc_0_30_BUSER, xt_rsc_0_30_BRESP, xt_rsc_0_30_BID, xt_rsc_0_30_WREADY,
      xt_rsc_0_30_WVALID, xt_rsc_0_30_WUSER, xt_rsc_0_30_WLAST, xt_rsc_0_30_WSTRB,
      xt_rsc_0_30_WDATA, xt_rsc_0_30_AWREADY, xt_rsc_0_30_AWVALID, xt_rsc_0_30_AWUSER,
      xt_rsc_0_30_AWREGION, xt_rsc_0_30_AWQOS, xt_rsc_0_30_AWPROT, xt_rsc_0_30_AWCACHE,
      xt_rsc_0_30_AWLOCK, xt_rsc_0_30_AWBURST, xt_rsc_0_30_AWSIZE, xt_rsc_0_30_AWLEN,
      xt_rsc_0_30_AWADDR, xt_rsc_0_30_AWID, core_wen, xt_rsc_0_30_i_oswt, xt_rsc_0_30_i_wen_comp,
      xt_rsc_0_30_i_oswt_1, xt_rsc_0_30_i_wen_comp_1, xt_rsc_0_30_i_s_raddr_core,
      xt_rsc_0_30_i_s_waddr_core, xt_rsc_0_30_i_s_din_mxwt, xt_rsc_0_30_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_30_s_tdone;
  input xt_rsc_0_30_tr_write_done;
  input xt_rsc_0_30_RREADY;
  output xt_rsc_0_30_RVALID;
  output xt_rsc_0_30_RUSER;
  output xt_rsc_0_30_RLAST;
  output [1:0] xt_rsc_0_30_RRESP;
  output [31:0] xt_rsc_0_30_RDATA;
  output xt_rsc_0_30_RID;
  output xt_rsc_0_30_ARREADY;
  input xt_rsc_0_30_ARVALID;
  input xt_rsc_0_30_ARUSER;
  input [3:0] xt_rsc_0_30_ARREGION;
  input [3:0] xt_rsc_0_30_ARQOS;
  input [2:0] xt_rsc_0_30_ARPROT;
  input [3:0] xt_rsc_0_30_ARCACHE;
  input xt_rsc_0_30_ARLOCK;
  input [1:0] xt_rsc_0_30_ARBURST;
  input [2:0] xt_rsc_0_30_ARSIZE;
  input [7:0] xt_rsc_0_30_ARLEN;
  input [11:0] xt_rsc_0_30_ARADDR;
  input xt_rsc_0_30_ARID;
  input xt_rsc_0_30_BREADY;
  output xt_rsc_0_30_BVALID;
  output xt_rsc_0_30_BUSER;
  output [1:0] xt_rsc_0_30_BRESP;
  output xt_rsc_0_30_BID;
  output xt_rsc_0_30_WREADY;
  input xt_rsc_0_30_WVALID;
  input xt_rsc_0_30_WUSER;
  input xt_rsc_0_30_WLAST;
  input [3:0] xt_rsc_0_30_WSTRB;
  input [31:0] xt_rsc_0_30_WDATA;
  output xt_rsc_0_30_AWREADY;
  input xt_rsc_0_30_AWVALID;
  input xt_rsc_0_30_AWUSER;
  input [3:0] xt_rsc_0_30_AWREGION;
  input [3:0] xt_rsc_0_30_AWQOS;
  input [2:0] xt_rsc_0_30_AWPROT;
  input [3:0] xt_rsc_0_30_AWCACHE;
  input xt_rsc_0_30_AWLOCK;
  input [1:0] xt_rsc_0_30_AWBURST;
  input [2:0] xt_rsc_0_30_AWSIZE;
  input [7:0] xt_rsc_0_30_AWLEN;
  input [11:0] xt_rsc_0_30_AWADDR;
  input xt_rsc_0_30_AWID;
  input core_wen;
  input xt_rsc_0_30_i_oswt;
  output xt_rsc_0_30_i_wen_comp;
  input xt_rsc_0_30_i_oswt_1;
  output xt_rsc_0_30_i_wen_comp_1;
  input [3:0] xt_rsc_0_30_i_s_raddr_core;
  input [3:0] xt_rsc_0_30_i_s_waddr_core;
  output [31:0] xt_rsc_0_30_i_s_din_mxwt;
  input [31:0] xt_rsc_0_30_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_30_i_biwt;
  wire xt_rsc_0_30_i_bdwt;
  wire xt_rsc_0_30_i_bcwt;
  wire xt_rsc_0_30_i_s_re_core_sct;
  wire xt_rsc_0_30_i_biwt_1;
  wire xt_rsc_0_30_i_bdwt_2;
  wire xt_rsc_0_30_i_bcwt_1;
  wire xt_rsc_0_30_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_30_i_s_raddr;
  wire [3:0] xt_rsc_0_30_i_s_waddr;
  wire [31:0] xt_rsc_0_30_i_s_din;
  wire [31:0] xt_rsc_0_30_i_s_dout;
  wire xt_rsc_0_30_i_s_rrdy;
  wire xt_rsc_0_30_i_s_wrdy;
  wire xt_rsc_0_30_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_30_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_30_AWID),
      .AWADDR(xt_rsc_0_30_AWADDR),
      .AWLEN(xt_rsc_0_30_AWLEN),
      .AWSIZE(xt_rsc_0_30_AWSIZE),
      .AWBURST(xt_rsc_0_30_AWBURST),
      .AWLOCK(xt_rsc_0_30_AWLOCK),
      .AWCACHE(xt_rsc_0_30_AWCACHE),
      .AWPROT(xt_rsc_0_30_AWPROT),
      .AWQOS(xt_rsc_0_30_AWQOS),
      .AWREGION(xt_rsc_0_30_AWREGION),
      .AWUSER(xt_rsc_0_30_AWUSER),
      .AWVALID(xt_rsc_0_30_AWVALID),
      .AWREADY(xt_rsc_0_30_AWREADY),
      .WDATA(xt_rsc_0_30_WDATA),
      .WSTRB(xt_rsc_0_30_WSTRB),
      .WLAST(xt_rsc_0_30_WLAST),
      .WUSER(xt_rsc_0_30_WUSER),
      .WVALID(xt_rsc_0_30_WVALID),
      .WREADY(xt_rsc_0_30_WREADY),
      .BID(xt_rsc_0_30_BID),
      .BRESP(xt_rsc_0_30_BRESP),
      .BUSER(xt_rsc_0_30_BUSER),
      .BVALID(xt_rsc_0_30_BVALID),
      .BREADY(xt_rsc_0_30_BREADY),
      .ARID(xt_rsc_0_30_ARID),
      .ARADDR(xt_rsc_0_30_ARADDR),
      .ARLEN(xt_rsc_0_30_ARLEN),
      .ARSIZE(xt_rsc_0_30_ARSIZE),
      .ARBURST(xt_rsc_0_30_ARBURST),
      .ARLOCK(xt_rsc_0_30_ARLOCK),
      .ARCACHE(xt_rsc_0_30_ARCACHE),
      .ARPROT(xt_rsc_0_30_ARPROT),
      .ARQOS(xt_rsc_0_30_ARQOS),
      .ARREGION(xt_rsc_0_30_ARREGION),
      .ARUSER(xt_rsc_0_30_ARUSER),
      .ARVALID(xt_rsc_0_30_ARVALID),
      .ARREADY(xt_rsc_0_30_ARREADY),
      .RID(xt_rsc_0_30_RID),
      .RDATA(xt_rsc_0_30_RDATA),
      .RRESP(xt_rsc_0_30_RRESP),
      .RLAST(xt_rsc_0_30_RLAST),
      .RUSER(xt_rsc_0_30_RUSER),
      .RVALID(xt_rsc_0_30_RVALID),
      .RREADY(xt_rsc_0_30_RREADY),
      .s_re(xt_rsc_0_30_i_s_re_core_sct),
      .s_we(xt_rsc_0_30_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_30_i_s_raddr),
      .s_waddr(xt_rsc_0_30_i_s_waddr),
      .s_din(xt_rsc_0_30_i_s_din),
      .s_dout(xt_rsc_0_30_i_s_dout),
      .s_rrdy(xt_rsc_0_30_i_s_rrdy),
      .s_wrdy(xt_rsc_0_30_i_s_wrdy),
      .is_idle(xt_rsc_0_30_is_idle_1),
      .tr_write_done(xt_rsc_0_30_tr_write_done),
      .s_tdone(xt_rsc_0_30_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_30_i_xt_rsc_0_30_wait_ctrl peaseNTT_core_xt_rsc_0_30_i_xt_rsc_0_30_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_30_i_oswt(xt_rsc_0_30_i_oswt),
      .xt_rsc_0_30_i_oswt_1(xt_rsc_0_30_i_oswt_1),
      .xt_rsc_0_30_i_biwt(xt_rsc_0_30_i_biwt),
      .xt_rsc_0_30_i_bdwt(xt_rsc_0_30_i_bdwt),
      .xt_rsc_0_30_i_bcwt(xt_rsc_0_30_i_bcwt),
      .xt_rsc_0_30_i_s_re_core_sct(xt_rsc_0_30_i_s_re_core_sct),
      .xt_rsc_0_30_i_biwt_1(xt_rsc_0_30_i_biwt_1),
      .xt_rsc_0_30_i_bdwt_2(xt_rsc_0_30_i_bdwt_2),
      .xt_rsc_0_30_i_bcwt_1(xt_rsc_0_30_i_bcwt_1),
      .xt_rsc_0_30_i_s_we_core_sct(xt_rsc_0_30_i_s_we_core_sct),
      .xt_rsc_0_30_i_s_rrdy(xt_rsc_0_30_i_s_rrdy),
      .xt_rsc_0_30_i_s_wrdy(xt_rsc_0_30_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_30_i_xt_rsc_0_30_wait_dp peaseNTT_core_xt_rsc_0_30_i_xt_rsc_0_30_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_30_i_oswt(xt_rsc_0_30_i_oswt),
      .xt_rsc_0_30_i_wen_comp(xt_rsc_0_30_i_wen_comp),
      .xt_rsc_0_30_i_oswt_1(xt_rsc_0_30_i_oswt_1),
      .xt_rsc_0_30_i_wen_comp_1(xt_rsc_0_30_i_wen_comp_1),
      .xt_rsc_0_30_i_s_raddr_core(xt_rsc_0_30_i_s_raddr_core),
      .xt_rsc_0_30_i_s_waddr_core(xt_rsc_0_30_i_s_waddr_core),
      .xt_rsc_0_30_i_s_din_mxwt(xt_rsc_0_30_i_s_din_mxwt),
      .xt_rsc_0_30_i_s_dout_core(xt_rsc_0_30_i_s_dout_core),
      .xt_rsc_0_30_i_biwt(xt_rsc_0_30_i_biwt),
      .xt_rsc_0_30_i_bdwt(xt_rsc_0_30_i_bdwt),
      .xt_rsc_0_30_i_bcwt(xt_rsc_0_30_i_bcwt),
      .xt_rsc_0_30_i_biwt_1(xt_rsc_0_30_i_biwt_1),
      .xt_rsc_0_30_i_bdwt_2(xt_rsc_0_30_i_bdwt_2),
      .xt_rsc_0_30_i_bcwt_1(xt_rsc_0_30_i_bcwt_1),
      .xt_rsc_0_30_i_s_raddr(xt_rsc_0_30_i_s_raddr),
      .xt_rsc_0_30_i_s_raddr_core_sct(xt_rsc_0_30_i_s_re_core_sct),
      .xt_rsc_0_30_i_s_waddr(xt_rsc_0_30_i_s_waddr),
      .xt_rsc_0_30_i_s_waddr_core_sct(xt_rsc_0_30_i_s_we_core_sct),
      .xt_rsc_0_30_i_s_din(xt_rsc_0_30_i_s_din),
      .xt_rsc_0_30_i_s_dout(xt_rsc_0_30_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_29_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_29_i (
  clk, rst, xt_rsc_0_29_s_tdone, xt_rsc_0_29_tr_write_done, xt_rsc_0_29_RREADY, xt_rsc_0_29_RVALID,
      xt_rsc_0_29_RUSER, xt_rsc_0_29_RLAST, xt_rsc_0_29_RRESP, xt_rsc_0_29_RDATA,
      xt_rsc_0_29_RID, xt_rsc_0_29_ARREADY, xt_rsc_0_29_ARVALID, xt_rsc_0_29_ARUSER,
      xt_rsc_0_29_ARREGION, xt_rsc_0_29_ARQOS, xt_rsc_0_29_ARPROT, xt_rsc_0_29_ARCACHE,
      xt_rsc_0_29_ARLOCK, xt_rsc_0_29_ARBURST, xt_rsc_0_29_ARSIZE, xt_rsc_0_29_ARLEN,
      xt_rsc_0_29_ARADDR, xt_rsc_0_29_ARID, xt_rsc_0_29_BREADY, xt_rsc_0_29_BVALID,
      xt_rsc_0_29_BUSER, xt_rsc_0_29_BRESP, xt_rsc_0_29_BID, xt_rsc_0_29_WREADY,
      xt_rsc_0_29_WVALID, xt_rsc_0_29_WUSER, xt_rsc_0_29_WLAST, xt_rsc_0_29_WSTRB,
      xt_rsc_0_29_WDATA, xt_rsc_0_29_AWREADY, xt_rsc_0_29_AWVALID, xt_rsc_0_29_AWUSER,
      xt_rsc_0_29_AWREGION, xt_rsc_0_29_AWQOS, xt_rsc_0_29_AWPROT, xt_rsc_0_29_AWCACHE,
      xt_rsc_0_29_AWLOCK, xt_rsc_0_29_AWBURST, xt_rsc_0_29_AWSIZE, xt_rsc_0_29_AWLEN,
      xt_rsc_0_29_AWADDR, xt_rsc_0_29_AWID, core_wen, xt_rsc_0_29_i_oswt, xt_rsc_0_29_i_wen_comp,
      xt_rsc_0_29_i_oswt_1, xt_rsc_0_29_i_wen_comp_1, xt_rsc_0_29_i_s_raddr_core,
      xt_rsc_0_29_i_s_waddr_core, xt_rsc_0_29_i_s_din_mxwt, xt_rsc_0_29_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_29_s_tdone;
  input xt_rsc_0_29_tr_write_done;
  input xt_rsc_0_29_RREADY;
  output xt_rsc_0_29_RVALID;
  output xt_rsc_0_29_RUSER;
  output xt_rsc_0_29_RLAST;
  output [1:0] xt_rsc_0_29_RRESP;
  output [31:0] xt_rsc_0_29_RDATA;
  output xt_rsc_0_29_RID;
  output xt_rsc_0_29_ARREADY;
  input xt_rsc_0_29_ARVALID;
  input xt_rsc_0_29_ARUSER;
  input [3:0] xt_rsc_0_29_ARREGION;
  input [3:0] xt_rsc_0_29_ARQOS;
  input [2:0] xt_rsc_0_29_ARPROT;
  input [3:0] xt_rsc_0_29_ARCACHE;
  input xt_rsc_0_29_ARLOCK;
  input [1:0] xt_rsc_0_29_ARBURST;
  input [2:0] xt_rsc_0_29_ARSIZE;
  input [7:0] xt_rsc_0_29_ARLEN;
  input [11:0] xt_rsc_0_29_ARADDR;
  input xt_rsc_0_29_ARID;
  input xt_rsc_0_29_BREADY;
  output xt_rsc_0_29_BVALID;
  output xt_rsc_0_29_BUSER;
  output [1:0] xt_rsc_0_29_BRESP;
  output xt_rsc_0_29_BID;
  output xt_rsc_0_29_WREADY;
  input xt_rsc_0_29_WVALID;
  input xt_rsc_0_29_WUSER;
  input xt_rsc_0_29_WLAST;
  input [3:0] xt_rsc_0_29_WSTRB;
  input [31:0] xt_rsc_0_29_WDATA;
  output xt_rsc_0_29_AWREADY;
  input xt_rsc_0_29_AWVALID;
  input xt_rsc_0_29_AWUSER;
  input [3:0] xt_rsc_0_29_AWREGION;
  input [3:0] xt_rsc_0_29_AWQOS;
  input [2:0] xt_rsc_0_29_AWPROT;
  input [3:0] xt_rsc_0_29_AWCACHE;
  input xt_rsc_0_29_AWLOCK;
  input [1:0] xt_rsc_0_29_AWBURST;
  input [2:0] xt_rsc_0_29_AWSIZE;
  input [7:0] xt_rsc_0_29_AWLEN;
  input [11:0] xt_rsc_0_29_AWADDR;
  input xt_rsc_0_29_AWID;
  input core_wen;
  input xt_rsc_0_29_i_oswt;
  output xt_rsc_0_29_i_wen_comp;
  input xt_rsc_0_29_i_oswt_1;
  output xt_rsc_0_29_i_wen_comp_1;
  input [3:0] xt_rsc_0_29_i_s_raddr_core;
  input [3:0] xt_rsc_0_29_i_s_waddr_core;
  output [31:0] xt_rsc_0_29_i_s_din_mxwt;
  input [31:0] xt_rsc_0_29_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_29_i_biwt;
  wire xt_rsc_0_29_i_bdwt;
  wire xt_rsc_0_29_i_bcwt;
  wire xt_rsc_0_29_i_s_re_core_sct;
  wire xt_rsc_0_29_i_biwt_1;
  wire xt_rsc_0_29_i_bdwt_2;
  wire xt_rsc_0_29_i_bcwt_1;
  wire xt_rsc_0_29_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_29_i_s_raddr;
  wire [3:0] xt_rsc_0_29_i_s_waddr;
  wire [31:0] xt_rsc_0_29_i_s_din;
  wire [31:0] xt_rsc_0_29_i_s_dout;
  wire xt_rsc_0_29_i_s_rrdy;
  wire xt_rsc_0_29_i_s_wrdy;
  wire xt_rsc_0_29_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_29_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_29_AWID),
      .AWADDR(xt_rsc_0_29_AWADDR),
      .AWLEN(xt_rsc_0_29_AWLEN),
      .AWSIZE(xt_rsc_0_29_AWSIZE),
      .AWBURST(xt_rsc_0_29_AWBURST),
      .AWLOCK(xt_rsc_0_29_AWLOCK),
      .AWCACHE(xt_rsc_0_29_AWCACHE),
      .AWPROT(xt_rsc_0_29_AWPROT),
      .AWQOS(xt_rsc_0_29_AWQOS),
      .AWREGION(xt_rsc_0_29_AWREGION),
      .AWUSER(xt_rsc_0_29_AWUSER),
      .AWVALID(xt_rsc_0_29_AWVALID),
      .AWREADY(xt_rsc_0_29_AWREADY),
      .WDATA(xt_rsc_0_29_WDATA),
      .WSTRB(xt_rsc_0_29_WSTRB),
      .WLAST(xt_rsc_0_29_WLAST),
      .WUSER(xt_rsc_0_29_WUSER),
      .WVALID(xt_rsc_0_29_WVALID),
      .WREADY(xt_rsc_0_29_WREADY),
      .BID(xt_rsc_0_29_BID),
      .BRESP(xt_rsc_0_29_BRESP),
      .BUSER(xt_rsc_0_29_BUSER),
      .BVALID(xt_rsc_0_29_BVALID),
      .BREADY(xt_rsc_0_29_BREADY),
      .ARID(xt_rsc_0_29_ARID),
      .ARADDR(xt_rsc_0_29_ARADDR),
      .ARLEN(xt_rsc_0_29_ARLEN),
      .ARSIZE(xt_rsc_0_29_ARSIZE),
      .ARBURST(xt_rsc_0_29_ARBURST),
      .ARLOCK(xt_rsc_0_29_ARLOCK),
      .ARCACHE(xt_rsc_0_29_ARCACHE),
      .ARPROT(xt_rsc_0_29_ARPROT),
      .ARQOS(xt_rsc_0_29_ARQOS),
      .ARREGION(xt_rsc_0_29_ARREGION),
      .ARUSER(xt_rsc_0_29_ARUSER),
      .ARVALID(xt_rsc_0_29_ARVALID),
      .ARREADY(xt_rsc_0_29_ARREADY),
      .RID(xt_rsc_0_29_RID),
      .RDATA(xt_rsc_0_29_RDATA),
      .RRESP(xt_rsc_0_29_RRESP),
      .RLAST(xt_rsc_0_29_RLAST),
      .RUSER(xt_rsc_0_29_RUSER),
      .RVALID(xt_rsc_0_29_RVALID),
      .RREADY(xt_rsc_0_29_RREADY),
      .s_re(xt_rsc_0_29_i_s_re_core_sct),
      .s_we(xt_rsc_0_29_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_29_i_s_raddr),
      .s_waddr(xt_rsc_0_29_i_s_waddr),
      .s_din(xt_rsc_0_29_i_s_din),
      .s_dout(xt_rsc_0_29_i_s_dout),
      .s_rrdy(xt_rsc_0_29_i_s_rrdy),
      .s_wrdy(xt_rsc_0_29_i_s_wrdy),
      .is_idle(xt_rsc_0_29_is_idle_1),
      .tr_write_done(xt_rsc_0_29_tr_write_done),
      .s_tdone(xt_rsc_0_29_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_29_i_xt_rsc_0_29_wait_ctrl peaseNTT_core_xt_rsc_0_29_i_xt_rsc_0_29_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_29_i_oswt(xt_rsc_0_29_i_oswt),
      .xt_rsc_0_29_i_oswt_1(xt_rsc_0_29_i_oswt_1),
      .xt_rsc_0_29_i_biwt(xt_rsc_0_29_i_biwt),
      .xt_rsc_0_29_i_bdwt(xt_rsc_0_29_i_bdwt),
      .xt_rsc_0_29_i_bcwt(xt_rsc_0_29_i_bcwt),
      .xt_rsc_0_29_i_s_re_core_sct(xt_rsc_0_29_i_s_re_core_sct),
      .xt_rsc_0_29_i_biwt_1(xt_rsc_0_29_i_biwt_1),
      .xt_rsc_0_29_i_bdwt_2(xt_rsc_0_29_i_bdwt_2),
      .xt_rsc_0_29_i_bcwt_1(xt_rsc_0_29_i_bcwt_1),
      .xt_rsc_0_29_i_s_we_core_sct(xt_rsc_0_29_i_s_we_core_sct),
      .xt_rsc_0_29_i_s_rrdy(xt_rsc_0_29_i_s_rrdy),
      .xt_rsc_0_29_i_s_wrdy(xt_rsc_0_29_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_29_i_xt_rsc_0_29_wait_dp peaseNTT_core_xt_rsc_0_29_i_xt_rsc_0_29_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_29_i_oswt(xt_rsc_0_29_i_oswt),
      .xt_rsc_0_29_i_wen_comp(xt_rsc_0_29_i_wen_comp),
      .xt_rsc_0_29_i_oswt_1(xt_rsc_0_29_i_oswt_1),
      .xt_rsc_0_29_i_wen_comp_1(xt_rsc_0_29_i_wen_comp_1),
      .xt_rsc_0_29_i_s_raddr_core(xt_rsc_0_29_i_s_raddr_core),
      .xt_rsc_0_29_i_s_waddr_core(xt_rsc_0_29_i_s_waddr_core),
      .xt_rsc_0_29_i_s_din_mxwt(xt_rsc_0_29_i_s_din_mxwt),
      .xt_rsc_0_29_i_s_dout_core(xt_rsc_0_29_i_s_dout_core),
      .xt_rsc_0_29_i_biwt(xt_rsc_0_29_i_biwt),
      .xt_rsc_0_29_i_bdwt(xt_rsc_0_29_i_bdwt),
      .xt_rsc_0_29_i_bcwt(xt_rsc_0_29_i_bcwt),
      .xt_rsc_0_29_i_biwt_1(xt_rsc_0_29_i_biwt_1),
      .xt_rsc_0_29_i_bdwt_2(xt_rsc_0_29_i_bdwt_2),
      .xt_rsc_0_29_i_bcwt_1(xt_rsc_0_29_i_bcwt_1),
      .xt_rsc_0_29_i_s_raddr(xt_rsc_0_29_i_s_raddr),
      .xt_rsc_0_29_i_s_raddr_core_sct(xt_rsc_0_29_i_s_re_core_sct),
      .xt_rsc_0_29_i_s_waddr(xt_rsc_0_29_i_s_waddr),
      .xt_rsc_0_29_i_s_waddr_core_sct(xt_rsc_0_29_i_s_we_core_sct),
      .xt_rsc_0_29_i_s_din(xt_rsc_0_29_i_s_din),
      .xt_rsc_0_29_i_s_dout(xt_rsc_0_29_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_28_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_28_i (
  clk, rst, xt_rsc_0_28_s_tdone, xt_rsc_0_28_tr_write_done, xt_rsc_0_28_RREADY, xt_rsc_0_28_RVALID,
      xt_rsc_0_28_RUSER, xt_rsc_0_28_RLAST, xt_rsc_0_28_RRESP, xt_rsc_0_28_RDATA,
      xt_rsc_0_28_RID, xt_rsc_0_28_ARREADY, xt_rsc_0_28_ARVALID, xt_rsc_0_28_ARUSER,
      xt_rsc_0_28_ARREGION, xt_rsc_0_28_ARQOS, xt_rsc_0_28_ARPROT, xt_rsc_0_28_ARCACHE,
      xt_rsc_0_28_ARLOCK, xt_rsc_0_28_ARBURST, xt_rsc_0_28_ARSIZE, xt_rsc_0_28_ARLEN,
      xt_rsc_0_28_ARADDR, xt_rsc_0_28_ARID, xt_rsc_0_28_BREADY, xt_rsc_0_28_BVALID,
      xt_rsc_0_28_BUSER, xt_rsc_0_28_BRESP, xt_rsc_0_28_BID, xt_rsc_0_28_WREADY,
      xt_rsc_0_28_WVALID, xt_rsc_0_28_WUSER, xt_rsc_0_28_WLAST, xt_rsc_0_28_WSTRB,
      xt_rsc_0_28_WDATA, xt_rsc_0_28_AWREADY, xt_rsc_0_28_AWVALID, xt_rsc_0_28_AWUSER,
      xt_rsc_0_28_AWREGION, xt_rsc_0_28_AWQOS, xt_rsc_0_28_AWPROT, xt_rsc_0_28_AWCACHE,
      xt_rsc_0_28_AWLOCK, xt_rsc_0_28_AWBURST, xt_rsc_0_28_AWSIZE, xt_rsc_0_28_AWLEN,
      xt_rsc_0_28_AWADDR, xt_rsc_0_28_AWID, core_wen, xt_rsc_0_28_i_oswt, xt_rsc_0_28_i_wen_comp,
      xt_rsc_0_28_i_oswt_1, xt_rsc_0_28_i_wen_comp_1, xt_rsc_0_28_i_s_raddr_core,
      xt_rsc_0_28_i_s_waddr_core, xt_rsc_0_28_i_s_din_mxwt, xt_rsc_0_28_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_28_s_tdone;
  input xt_rsc_0_28_tr_write_done;
  input xt_rsc_0_28_RREADY;
  output xt_rsc_0_28_RVALID;
  output xt_rsc_0_28_RUSER;
  output xt_rsc_0_28_RLAST;
  output [1:0] xt_rsc_0_28_RRESP;
  output [31:0] xt_rsc_0_28_RDATA;
  output xt_rsc_0_28_RID;
  output xt_rsc_0_28_ARREADY;
  input xt_rsc_0_28_ARVALID;
  input xt_rsc_0_28_ARUSER;
  input [3:0] xt_rsc_0_28_ARREGION;
  input [3:0] xt_rsc_0_28_ARQOS;
  input [2:0] xt_rsc_0_28_ARPROT;
  input [3:0] xt_rsc_0_28_ARCACHE;
  input xt_rsc_0_28_ARLOCK;
  input [1:0] xt_rsc_0_28_ARBURST;
  input [2:0] xt_rsc_0_28_ARSIZE;
  input [7:0] xt_rsc_0_28_ARLEN;
  input [11:0] xt_rsc_0_28_ARADDR;
  input xt_rsc_0_28_ARID;
  input xt_rsc_0_28_BREADY;
  output xt_rsc_0_28_BVALID;
  output xt_rsc_0_28_BUSER;
  output [1:0] xt_rsc_0_28_BRESP;
  output xt_rsc_0_28_BID;
  output xt_rsc_0_28_WREADY;
  input xt_rsc_0_28_WVALID;
  input xt_rsc_0_28_WUSER;
  input xt_rsc_0_28_WLAST;
  input [3:0] xt_rsc_0_28_WSTRB;
  input [31:0] xt_rsc_0_28_WDATA;
  output xt_rsc_0_28_AWREADY;
  input xt_rsc_0_28_AWVALID;
  input xt_rsc_0_28_AWUSER;
  input [3:0] xt_rsc_0_28_AWREGION;
  input [3:0] xt_rsc_0_28_AWQOS;
  input [2:0] xt_rsc_0_28_AWPROT;
  input [3:0] xt_rsc_0_28_AWCACHE;
  input xt_rsc_0_28_AWLOCK;
  input [1:0] xt_rsc_0_28_AWBURST;
  input [2:0] xt_rsc_0_28_AWSIZE;
  input [7:0] xt_rsc_0_28_AWLEN;
  input [11:0] xt_rsc_0_28_AWADDR;
  input xt_rsc_0_28_AWID;
  input core_wen;
  input xt_rsc_0_28_i_oswt;
  output xt_rsc_0_28_i_wen_comp;
  input xt_rsc_0_28_i_oswt_1;
  output xt_rsc_0_28_i_wen_comp_1;
  input [3:0] xt_rsc_0_28_i_s_raddr_core;
  input [3:0] xt_rsc_0_28_i_s_waddr_core;
  output [31:0] xt_rsc_0_28_i_s_din_mxwt;
  input [31:0] xt_rsc_0_28_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_28_i_biwt;
  wire xt_rsc_0_28_i_bdwt;
  wire xt_rsc_0_28_i_bcwt;
  wire xt_rsc_0_28_i_s_re_core_sct;
  wire xt_rsc_0_28_i_biwt_1;
  wire xt_rsc_0_28_i_bdwt_2;
  wire xt_rsc_0_28_i_bcwt_1;
  wire xt_rsc_0_28_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_28_i_s_raddr;
  wire [3:0] xt_rsc_0_28_i_s_waddr;
  wire [31:0] xt_rsc_0_28_i_s_din;
  wire [31:0] xt_rsc_0_28_i_s_dout;
  wire xt_rsc_0_28_i_s_rrdy;
  wire xt_rsc_0_28_i_s_wrdy;
  wire xt_rsc_0_28_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_28_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_28_AWID),
      .AWADDR(xt_rsc_0_28_AWADDR),
      .AWLEN(xt_rsc_0_28_AWLEN),
      .AWSIZE(xt_rsc_0_28_AWSIZE),
      .AWBURST(xt_rsc_0_28_AWBURST),
      .AWLOCK(xt_rsc_0_28_AWLOCK),
      .AWCACHE(xt_rsc_0_28_AWCACHE),
      .AWPROT(xt_rsc_0_28_AWPROT),
      .AWQOS(xt_rsc_0_28_AWQOS),
      .AWREGION(xt_rsc_0_28_AWREGION),
      .AWUSER(xt_rsc_0_28_AWUSER),
      .AWVALID(xt_rsc_0_28_AWVALID),
      .AWREADY(xt_rsc_0_28_AWREADY),
      .WDATA(xt_rsc_0_28_WDATA),
      .WSTRB(xt_rsc_0_28_WSTRB),
      .WLAST(xt_rsc_0_28_WLAST),
      .WUSER(xt_rsc_0_28_WUSER),
      .WVALID(xt_rsc_0_28_WVALID),
      .WREADY(xt_rsc_0_28_WREADY),
      .BID(xt_rsc_0_28_BID),
      .BRESP(xt_rsc_0_28_BRESP),
      .BUSER(xt_rsc_0_28_BUSER),
      .BVALID(xt_rsc_0_28_BVALID),
      .BREADY(xt_rsc_0_28_BREADY),
      .ARID(xt_rsc_0_28_ARID),
      .ARADDR(xt_rsc_0_28_ARADDR),
      .ARLEN(xt_rsc_0_28_ARLEN),
      .ARSIZE(xt_rsc_0_28_ARSIZE),
      .ARBURST(xt_rsc_0_28_ARBURST),
      .ARLOCK(xt_rsc_0_28_ARLOCK),
      .ARCACHE(xt_rsc_0_28_ARCACHE),
      .ARPROT(xt_rsc_0_28_ARPROT),
      .ARQOS(xt_rsc_0_28_ARQOS),
      .ARREGION(xt_rsc_0_28_ARREGION),
      .ARUSER(xt_rsc_0_28_ARUSER),
      .ARVALID(xt_rsc_0_28_ARVALID),
      .ARREADY(xt_rsc_0_28_ARREADY),
      .RID(xt_rsc_0_28_RID),
      .RDATA(xt_rsc_0_28_RDATA),
      .RRESP(xt_rsc_0_28_RRESP),
      .RLAST(xt_rsc_0_28_RLAST),
      .RUSER(xt_rsc_0_28_RUSER),
      .RVALID(xt_rsc_0_28_RVALID),
      .RREADY(xt_rsc_0_28_RREADY),
      .s_re(xt_rsc_0_28_i_s_re_core_sct),
      .s_we(xt_rsc_0_28_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_28_i_s_raddr),
      .s_waddr(xt_rsc_0_28_i_s_waddr),
      .s_din(xt_rsc_0_28_i_s_din),
      .s_dout(xt_rsc_0_28_i_s_dout),
      .s_rrdy(xt_rsc_0_28_i_s_rrdy),
      .s_wrdy(xt_rsc_0_28_i_s_wrdy),
      .is_idle(xt_rsc_0_28_is_idle_1),
      .tr_write_done(xt_rsc_0_28_tr_write_done),
      .s_tdone(xt_rsc_0_28_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_28_i_xt_rsc_0_28_wait_ctrl peaseNTT_core_xt_rsc_0_28_i_xt_rsc_0_28_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_28_i_oswt(xt_rsc_0_28_i_oswt),
      .xt_rsc_0_28_i_oswt_1(xt_rsc_0_28_i_oswt_1),
      .xt_rsc_0_28_i_biwt(xt_rsc_0_28_i_biwt),
      .xt_rsc_0_28_i_bdwt(xt_rsc_0_28_i_bdwt),
      .xt_rsc_0_28_i_bcwt(xt_rsc_0_28_i_bcwt),
      .xt_rsc_0_28_i_s_re_core_sct(xt_rsc_0_28_i_s_re_core_sct),
      .xt_rsc_0_28_i_biwt_1(xt_rsc_0_28_i_biwt_1),
      .xt_rsc_0_28_i_bdwt_2(xt_rsc_0_28_i_bdwt_2),
      .xt_rsc_0_28_i_bcwt_1(xt_rsc_0_28_i_bcwt_1),
      .xt_rsc_0_28_i_s_we_core_sct(xt_rsc_0_28_i_s_we_core_sct),
      .xt_rsc_0_28_i_s_rrdy(xt_rsc_0_28_i_s_rrdy),
      .xt_rsc_0_28_i_s_wrdy(xt_rsc_0_28_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_28_i_xt_rsc_0_28_wait_dp peaseNTT_core_xt_rsc_0_28_i_xt_rsc_0_28_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_28_i_oswt(xt_rsc_0_28_i_oswt),
      .xt_rsc_0_28_i_wen_comp(xt_rsc_0_28_i_wen_comp),
      .xt_rsc_0_28_i_oswt_1(xt_rsc_0_28_i_oswt_1),
      .xt_rsc_0_28_i_wen_comp_1(xt_rsc_0_28_i_wen_comp_1),
      .xt_rsc_0_28_i_s_raddr_core(xt_rsc_0_28_i_s_raddr_core),
      .xt_rsc_0_28_i_s_waddr_core(xt_rsc_0_28_i_s_waddr_core),
      .xt_rsc_0_28_i_s_din_mxwt(xt_rsc_0_28_i_s_din_mxwt),
      .xt_rsc_0_28_i_s_dout_core(xt_rsc_0_28_i_s_dout_core),
      .xt_rsc_0_28_i_biwt(xt_rsc_0_28_i_biwt),
      .xt_rsc_0_28_i_bdwt(xt_rsc_0_28_i_bdwt),
      .xt_rsc_0_28_i_bcwt(xt_rsc_0_28_i_bcwt),
      .xt_rsc_0_28_i_biwt_1(xt_rsc_0_28_i_biwt_1),
      .xt_rsc_0_28_i_bdwt_2(xt_rsc_0_28_i_bdwt_2),
      .xt_rsc_0_28_i_bcwt_1(xt_rsc_0_28_i_bcwt_1),
      .xt_rsc_0_28_i_s_raddr(xt_rsc_0_28_i_s_raddr),
      .xt_rsc_0_28_i_s_raddr_core_sct(xt_rsc_0_28_i_s_re_core_sct),
      .xt_rsc_0_28_i_s_waddr(xt_rsc_0_28_i_s_waddr),
      .xt_rsc_0_28_i_s_waddr_core_sct(xt_rsc_0_28_i_s_we_core_sct),
      .xt_rsc_0_28_i_s_din(xt_rsc_0_28_i_s_din),
      .xt_rsc_0_28_i_s_dout(xt_rsc_0_28_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_27_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_27_i (
  clk, rst, xt_rsc_0_27_s_tdone, xt_rsc_0_27_tr_write_done, xt_rsc_0_27_RREADY, xt_rsc_0_27_RVALID,
      xt_rsc_0_27_RUSER, xt_rsc_0_27_RLAST, xt_rsc_0_27_RRESP, xt_rsc_0_27_RDATA,
      xt_rsc_0_27_RID, xt_rsc_0_27_ARREADY, xt_rsc_0_27_ARVALID, xt_rsc_0_27_ARUSER,
      xt_rsc_0_27_ARREGION, xt_rsc_0_27_ARQOS, xt_rsc_0_27_ARPROT, xt_rsc_0_27_ARCACHE,
      xt_rsc_0_27_ARLOCK, xt_rsc_0_27_ARBURST, xt_rsc_0_27_ARSIZE, xt_rsc_0_27_ARLEN,
      xt_rsc_0_27_ARADDR, xt_rsc_0_27_ARID, xt_rsc_0_27_BREADY, xt_rsc_0_27_BVALID,
      xt_rsc_0_27_BUSER, xt_rsc_0_27_BRESP, xt_rsc_0_27_BID, xt_rsc_0_27_WREADY,
      xt_rsc_0_27_WVALID, xt_rsc_0_27_WUSER, xt_rsc_0_27_WLAST, xt_rsc_0_27_WSTRB,
      xt_rsc_0_27_WDATA, xt_rsc_0_27_AWREADY, xt_rsc_0_27_AWVALID, xt_rsc_0_27_AWUSER,
      xt_rsc_0_27_AWREGION, xt_rsc_0_27_AWQOS, xt_rsc_0_27_AWPROT, xt_rsc_0_27_AWCACHE,
      xt_rsc_0_27_AWLOCK, xt_rsc_0_27_AWBURST, xt_rsc_0_27_AWSIZE, xt_rsc_0_27_AWLEN,
      xt_rsc_0_27_AWADDR, xt_rsc_0_27_AWID, core_wen, xt_rsc_0_27_i_oswt, xt_rsc_0_27_i_wen_comp,
      xt_rsc_0_27_i_oswt_1, xt_rsc_0_27_i_wen_comp_1, xt_rsc_0_27_i_s_raddr_core,
      xt_rsc_0_27_i_s_waddr_core, xt_rsc_0_27_i_s_din_mxwt, xt_rsc_0_27_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_27_s_tdone;
  input xt_rsc_0_27_tr_write_done;
  input xt_rsc_0_27_RREADY;
  output xt_rsc_0_27_RVALID;
  output xt_rsc_0_27_RUSER;
  output xt_rsc_0_27_RLAST;
  output [1:0] xt_rsc_0_27_RRESP;
  output [31:0] xt_rsc_0_27_RDATA;
  output xt_rsc_0_27_RID;
  output xt_rsc_0_27_ARREADY;
  input xt_rsc_0_27_ARVALID;
  input xt_rsc_0_27_ARUSER;
  input [3:0] xt_rsc_0_27_ARREGION;
  input [3:0] xt_rsc_0_27_ARQOS;
  input [2:0] xt_rsc_0_27_ARPROT;
  input [3:0] xt_rsc_0_27_ARCACHE;
  input xt_rsc_0_27_ARLOCK;
  input [1:0] xt_rsc_0_27_ARBURST;
  input [2:0] xt_rsc_0_27_ARSIZE;
  input [7:0] xt_rsc_0_27_ARLEN;
  input [11:0] xt_rsc_0_27_ARADDR;
  input xt_rsc_0_27_ARID;
  input xt_rsc_0_27_BREADY;
  output xt_rsc_0_27_BVALID;
  output xt_rsc_0_27_BUSER;
  output [1:0] xt_rsc_0_27_BRESP;
  output xt_rsc_0_27_BID;
  output xt_rsc_0_27_WREADY;
  input xt_rsc_0_27_WVALID;
  input xt_rsc_0_27_WUSER;
  input xt_rsc_0_27_WLAST;
  input [3:0] xt_rsc_0_27_WSTRB;
  input [31:0] xt_rsc_0_27_WDATA;
  output xt_rsc_0_27_AWREADY;
  input xt_rsc_0_27_AWVALID;
  input xt_rsc_0_27_AWUSER;
  input [3:0] xt_rsc_0_27_AWREGION;
  input [3:0] xt_rsc_0_27_AWQOS;
  input [2:0] xt_rsc_0_27_AWPROT;
  input [3:0] xt_rsc_0_27_AWCACHE;
  input xt_rsc_0_27_AWLOCK;
  input [1:0] xt_rsc_0_27_AWBURST;
  input [2:0] xt_rsc_0_27_AWSIZE;
  input [7:0] xt_rsc_0_27_AWLEN;
  input [11:0] xt_rsc_0_27_AWADDR;
  input xt_rsc_0_27_AWID;
  input core_wen;
  input xt_rsc_0_27_i_oswt;
  output xt_rsc_0_27_i_wen_comp;
  input xt_rsc_0_27_i_oswt_1;
  output xt_rsc_0_27_i_wen_comp_1;
  input [3:0] xt_rsc_0_27_i_s_raddr_core;
  input [3:0] xt_rsc_0_27_i_s_waddr_core;
  output [31:0] xt_rsc_0_27_i_s_din_mxwt;
  input [31:0] xt_rsc_0_27_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_27_i_biwt;
  wire xt_rsc_0_27_i_bdwt;
  wire xt_rsc_0_27_i_bcwt;
  wire xt_rsc_0_27_i_s_re_core_sct;
  wire xt_rsc_0_27_i_biwt_1;
  wire xt_rsc_0_27_i_bdwt_2;
  wire xt_rsc_0_27_i_bcwt_1;
  wire xt_rsc_0_27_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_27_i_s_raddr;
  wire [3:0] xt_rsc_0_27_i_s_waddr;
  wire [31:0] xt_rsc_0_27_i_s_din;
  wire [31:0] xt_rsc_0_27_i_s_dout;
  wire xt_rsc_0_27_i_s_rrdy;
  wire xt_rsc_0_27_i_s_wrdy;
  wire xt_rsc_0_27_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_27_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_27_AWID),
      .AWADDR(xt_rsc_0_27_AWADDR),
      .AWLEN(xt_rsc_0_27_AWLEN),
      .AWSIZE(xt_rsc_0_27_AWSIZE),
      .AWBURST(xt_rsc_0_27_AWBURST),
      .AWLOCK(xt_rsc_0_27_AWLOCK),
      .AWCACHE(xt_rsc_0_27_AWCACHE),
      .AWPROT(xt_rsc_0_27_AWPROT),
      .AWQOS(xt_rsc_0_27_AWQOS),
      .AWREGION(xt_rsc_0_27_AWREGION),
      .AWUSER(xt_rsc_0_27_AWUSER),
      .AWVALID(xt_rsc_0_27_AWVALID),
      .AWREADY(xt_rsc_0_27_AWREADY),
      .WDATA(xt_rsc_0_27_WDATA),
      .WSTRB(xt_rsc_0_27_WSTRB),
      .WLAST(xt_rsc_0_27_WLAST),
      .WUSER(xt_rsc_0_27_WUSER),
      .WVALID(xt_rsc_0_27_WVALID),
      .WREADY(xt_rsc_0_27_WREADY),
      .BID(xt_rsc_0_27_BID),
      .BRESP(xt_rsc_0_27_BRESP),
      .BUSER(xt_rsc_0_27_BUSER),
      .BVALID(xt_rsc_0_27_BVALID),
      .BREADY(xt_rsc_0_27_BREADY),
      .ARID(xt_rsc_0_27_ARID),
      .ARADDR(xt_rsc_0_27_ARADDR),
      .ARLEN(xt_rsc_0_27_ARLEN),
      .ARSIZE(xt_rsc_0_27_ARSIZE),
      .ARBURST(xt_rsc_0_27_ARBURST),
      .ARLOCK(xt_rsc_0_27_ARLOCK),
      .ARCACHE(xt_rsc_0_27_ARCACHE),
      .ARPROT(xt_rsc_0_27_ARPROT),
      .ARQOS(xt_rsc_0_27_ARQOS),
      .ARREGION(xt_rsc_0_27_ARREGION),
      .ARUSER(xt_rsc_0_27_ARUSER),
      .ARVALID(xt_rsc_0_27_ARVALID),
      .ARREADY(xt_rsc_0_27_ARREADY),
      .RID(xt_rsc_0_27_RID),
      .RDATA(xt_rsc_0_27_RDATA),
      .RRESP(xt_rsc_0_27_RRESP),
      .RLAST(xt_rsc_0_27_RLAST),
      .RUSER(xt_rsc_0_27_RUSER),
      .RVALID(xt_rsc_0_27_RVALID),
      .RREADY(xt_rsc_0_27_RREADY),
      .s_re(xt_rsc_0_27_i_s_re_core_sct),
      .s_we(xt_rsc_0_27_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_27_i_s_raddr),
      .s_waddr(xt_rsc_0_27_i_s_waddr),
      .s_din(xt_rsc_0_27_i_s_din),
      .s_dout(xt_rsc_0_27_i_s_dout),
      .s_rrdy(xt_rsc_0_27_i_s_rrdy),
      .s_wrdy(xt_rsc_0_27_i_s_wrdy),
      .is_idle(xt_rsc_0_27_is_idle_1),
      .tr_write_done(xt_rsc_0_27_tr_write_done),
      .s_tdone(xt_rsc_0_27_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_27_i_xt_rsc_0_27_wait_ctrl peaseNTT_core_xt_rsc_0_27_i_xt_rsc_0_27_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_27_i_oswt(xt_rsc_0_27_i_oswt),
      .xt_rsc_0_27_i_oswt_1(xt_rsc_0_27_i_oswt_1),
      .xt_rsc_0_27_i_biwt(xt_rsc_0_27_i_biwt),
      .xt_rsc_0_27_i_bdwt(xt_rsc_0_27_i_bdwt),
      .xt_rsc_0_27_i_bcwt(xt_rsc_0_27_i_bcwt),
      .xt_rsc_0_27_i_s_re_core_sct(xt_rsc_0_27_i_s_re_core_sct),
      .xt_rsc_0_27_i_biwt_1(xt_rsc_0_27_i_biwt_1),
      .xt_rsc_0_27_i_bdwt_2(xt_rsc_0_27_i_bdwt_2),
      .xt_rsc_0_27_i_bcwt_1(xt_rsc_0_27_i_bcwt_1),
      .xt_rsc_0_27_i_s_we_core_sct(xt_rsc_0_27_i_s_we_core_sct),
      .xt_rsc_0_27_i_s_rrdy(xt_rsc_0_27_i_s_rrdy),
      .xt_rsc_0_27_i_s_wrdy(xt_rsc_0_27_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_27_i_xt_rsc_0_27_wait_dp peaseNTT_core_xt_rsc_0_27_i_xt_rsc_0_27_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_27_i_oswt(xt_rsc_0_27_i_oswt),
      .xt_rsc_0_27_i_wen_comp(xt_rsc_0_27_i_wen_comp),
      .xt_rsc_0_27_i_oswt_1(xt_rsc_0_27_i_oswt_1),
      .xt_rsc_0_27_i_wen_comp_1(xt_rsc_0_27_i_wen_comp_1),
      .xt_rsc_0_27_i_s_raddr_core(xt_rsc_0_27_i_s_raddr_core),
      .xt_rsc_0_27_i_s_waddr_core(xt_rsc_0_27_i_s_waddr_core),
      .xt_rsc_0_27_i_s_din_mxwt(xt_rsc_0_27_i_s_din_mxwt),
      .xt_rsc_0_27_i_s_dout_core(xt_rsc_0_27_i_s_dout_core),
      .xt_rsc_0_27_i_biwt(xt_rsc_0_27_i_biwt),
      .xt_rsc_0_27_i_bdwt(xt_rsc_0_27_i_bdwt),
      .xt_rsc_0_27_i_bcwt(xt_rsc_0_27_i_bcwt),
      .xt_rsc_0_27_i_biwt_1(xt_rsc_0_27_i_biwt_1),
      .xt_rsc_0_27_i_bdwt_2(xt_rsc_0_27_i_bdwt_2),
      .xt_rsc_0_27_i_bcwt_1(xt_rsc_0_27_i_bcwt_1),
      .xt_rsc_0_27_i_s_raddr(xt_rsc_0_27_i_s_raddr),
      .xt_rsc_0_27_i_s_raddr_core_sct(xt_rsc_0_27_i_s_re_core_sct),
      .xt_rsc_0_27_i_s_waddr(xt_rsc_0_27_i_s_waddr),
      .xt_rsc_0_27_i_s_waddr_core_sct(xt_rsc_0_27_i_s_we_core_sct),
      .xt_rsc_0_27_i_s_din(xt_rsc_0_27_i_s_din),
      .xt_rsc_0_27_i_s_dout(xt_rsc_0_27_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_26_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_26_i (
  clk, rst, xt_rsc_0_26_s_tdone, xt_rsc_0_26_tr_write_done, xt_rsc_0_26_RREADY, xt_rsc_0_26_RVALID,
      xt_rsc_0_26_RUSER, xt_rsc_0_26_RLAST, xt_rsc_0_26_RRESP, xt_rsc_0_26_RDATA,
      xt_rsc_0_26_RID, xt_rsc_0_26_ARREADY, xt_rsc_0_26_ARVALID, xt_rsc_0_26_ARUSER,
      xt_rsc_0_26_ARREGION, xt_rsc_0_26_ARQOS, xt_rsc_0_26_ARPROT, xt_rsc_0_26_ARCACHE,
      xt_rsc_0_26_ARLOCK, xt_rsc_0_26_ARBURST, xt_rsc_0_26_ARSIZE, xt_rsc_0_26_ARLEN,
      xt_rsc_0_26_ARADDR, xt_rsc_0_26_ARID, xt_rsc_0_26_BREADY, xt_rsc_0_26_BVALID,
      xt_rsc_0_26_BUSER, xt_rsc_0_26_BRESP, xt_rsc_0_26_BID, xt_rsc_0_26_WREADY,
      xt_rsc_0_26_WVALID, xt_rsc_0_26_WUSER, xt_rsc_0_26_WLAST, xt_rsc_0_26_WSTRB,
      xt_rsc_0_26_WDATA, xt_rsc_0_26_AWREADY, xt_rsc_0_26_AWVALID, xt_rsc_0_26_AWUSER,
      xt_rsc_0_26_AWREGION, xt_rsc_0_26_AWQOS, xt_rsc_0_26_AWPROT, xt_rsc_0_26_AWCACHE,
      xt_rsc_0_26_AWLOCK, xt_rsc_0_26_AWBURST, xt_rsc_0_26_AWSIZE, xt_rsc_0_26_AWLEN,
      xt_rsc_0_26_AWADDR, xt_rsc_0_26_AWID, core_wen, xt_rsc_0_26_i_oswt, xt_rsc_0_26_i_wen_comp,
      xt_rsc_0_26_i_oswt_1, xt_rsc_0_26_i_wen_comp_1, xt_rsc_0_26_i_s_raddr_core,
      xt_rsc_0_26_i_s_waddr_core, xt_rsc_0_26_i_s_din_mxwt, xt_rsc_0_26_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_26_s_tdone;
  input xt_rsc_0_26_tr_write_done;
  input xt_rsc_0_26_RREADY;
  output xt_rsc_0_26_RVALID;
  output xt_rsc_0_26_RUSER;
  output xt_rsc_0_26_RLAST;
  output [1:0] xt_rsc_0_26_RRESP;
  output [31:0] xt_rsc_0_26_RDATA;
  output xt_rsc_0_26_RID;
  output xt_rsc_0_26_ARREADY;
  input xt_rsc_0_26_ARVALID;
  input xt_rsc_0_26_ARUSER;
  input [3:0] xt_rsc_0_26_ARREGION;
  input [3:0] xt_rsc_0_26_ARQOS;
  input [2:0] xt_rsc_0_26_ARPROT;
  input [3:0] xt_rsc_0_26_ARCACHE;
  input xt_rsc_0_26_ARLOCK;
  input [1:0] xt_rsc_0_26_ARBURST;
  input [2:0] xt_rsc_0_26_ARSIZE;
  input [7:0] xt_rsc_0_26_ARLEN;
  input [11:0] xt_rsc_0_26_ARADDR;
  input xt_rsc_0_26_ARID;
  input xt_rsc_0_26_BREADY;
  output xt_rsc_0_26_BVALID;
  output xt_rsc_0_26_BUSER;
  output [1:0] xt_rsc_0_26_BRESP;
  output xt_rsc_0_26_BID;
  output xt_rsc_0_26_WREADY;
  input xt_rsc_0_26_WVALID;
  input xt_rsc_0_26_WUSER;
  input xt_rsc_0_26_WLAST;
  input [3:0] xt_rsc_0_26_WSTRB;
  input [31:0] xt_rsc_0_26_WDATA;
  output xt_rsc_0_26_AWREADY;
  input xt_rsc_0_26_AWVALID;
  input xt_rsc_0_26_AWUSER;
  input [3:0] xt_rsc_0_26_AWREGION;
  input [3:0] xt_rsc_0_26_AWQOS;
  input [2:0] xt_rsc_0_26_AWPROT;
  input [3:0] xt_rsc_0_26_AWCACHE;
  input xt_rsc_0_26_AWLOCK;
  input [1:0] xt_rsc_0_26_AWBURST;
  input [2:0] xt_rsc_0_26_AWSIZE;
  input [7:0] xt_rsc_0_26_AWLEN;
  input [11:0] xt_rsc_0_26_AWADDR;
  input xt_rsc_0_26_AWID;
  input core_wen;
  input xt_rsc_0_26_i_oswt;
  output xt_rsc_0_26_i_wen_comp;
  input xt_rsc_0_26_i_oswt_1;
  output xt_rsc_0_26_i_wen_comp_1;
  input [3:0] xt_rsc_0_26_i_s_raddr_core;
  input [3:0] xt_rsc_0_26_i_s_waddr_core;
  output [31:0] xt_rsc_0_26_i_s_din_mxwt;
  input [31:0] xt_rsc_0_26_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_26_i_biwt;
  wire xt_rsc_0_26_i_bdwt;
  wire xt_rsc_0_26_i_bcwt;
  wire xt_rsc_0_26_i_s_re_core_sct;
  wire xt_rsc_0_26_i_biwt_1;
  wire xt_rsc_0_26_i_bdwt_2;
  wire xt_rsc_0_26_i_bcwt_1;
  wire xt_rsc_0_26_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_26_i_s_raddr;
  wire [3:0] xt_rsc_0_26_i_s_waddr;
  wire [31:0] xt_rsc_0_26_i_s_din;
  wire [31:0] xt_rsc_0_26_i_s_dout;
  wire xt_rsc_0_26_i_s_rrdy;
  wire xt_rsc_0_26_i_s_wrdy;
  wire xt_rsc_0_26_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_26_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_26_AWID),
      .AWADDR(xt_rsc_0_26_AWADDR),
      .AWLEN(xt_rsc_0_26_AWLEN),
      .AWSIZE(xt_rsc_0_26_AWSIZE),
      .AWBURST(xt_rsc_0_26_AWBURST),
      .AWLOCK(xt_rsc_0_26_AWLOCK),
      .AWCACHE(xt_rsc_0_26_AWCACHE),
      .AWPROT(xt_rsc_0_26_AWPROT),
      .AWQOS(xt_rsc_0_26_AWQOS),
      .AWREGION(xt_rsc_0_26_AWREGION),
      .AWUSER(xt_rsc_0_26_AWUSER),
      .AWVALID(xt_rsc_0_26_AWVALID),
      .AWREADY(xt_rsc_0_26_AWREADY),
      .WDATA(xt_rsc_0_26_WDATA),
      .WSTRB(xt_rsc_0_26_WSTRB),
      .WLAST(xt_rsc_0_26_WLAST),
      .WUSER(xt_rsc_0_26_WUSER),
      .WVALID(xt_rsc_0_26_WVALID),
      .WREADY(xt_rsc_0_26_WREADY),
      .BID(xt_rsc_0_26_BID),
      .BRESP(xt_rsc_0_26_BRESP),
      .BUSER(xt_rsc_0_26_BUSER),
      .BVALID(xt_rsc_0_26_BVALID),
      .BREADY(xt_rsc_0_26_BREADY),
      .ARID(xt_rsc_0_26_ARID),
      .ARADDR(xt_rsc_0_26_ARADDR),
      .ARLEN(xt_rsc_0_26_ARLEN),
      .ARSIZE(xt_rsc_0_26_ARSIZE),
      .ARBURST(xt_rsc_0_26_ARBURST),
      .ARLOCK(xt_rsc_0_26_ARLOCK),
      .ARCACHE(xt_rsc_0_26_ARCACHE),
      .ARPROT(xt_rsc_0_26_ARPROT),
      .ARQOS(xt_rsc_0_26_ARQOS),
      .ARREGION(xt_rsc_0_26_ARREGION),
      .ARUSER(xt_rsc_0_26_ARUSER),
      .ARVALID(xt_rsc_0_26_ARVALID),
      .ARREADY(xt_rsc_0_26_ARREADY),
      .RID(xt_rsc_0_26_RID),
      .RDATA(xt_rsc_0_26_RDATA),
      .RRESP(xt_rsc_0_26_RRESP),
      .RLAST(xt_rsc_0_26_RLAST),
      .RUSER(xt_rsc_0_26_RUSER),
      .RVALID(xt_rsc_0_26_RVALID),
      .RREADY(xt_rsc_0_26_RREADY),
      .s_re(xt_rsc_0_26_i_s_re_core_sct),
      .s_we(xt_rsc_0_26_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_26_i_s_raddr),
      .s_waddr(xt_rsc_0_26_i_s_waddr),
      .s_din(xt_rsc_0_26_i_s_din),
      .s_dout(xt_rsc_0_26_i_s_dout),
      .s_rrdy(xt_rsc_0_26_i_s_rrdy),
      .s_wrdy(xt_rsc_0_26_i_s_wrdy),
      .is_idle(xt_rsc_0_26_is_idle_1),
      .tr_write_done(xt_rsc_0_26_tr_write_done),
      .s_tdone(xt_rsc_0_26_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_26_i_xt_rsc_0_26_wait_ctrl peaseNTT_core_xt_rsc_0_26_i_xt_rsc_0_26_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_26_i_oswt(xt_rsc_0_26_i_oswt),
      .xt_rsc_0_26_i_oswt_1(xt_rsc_0_26_i_oswt_1),
      .xt_rsc_0_26_i_biwt(xt_rsc_0_26_i_biwt),
      .xt_rsc_0_26_i_bdwt(xt_rsc_0_26_i_bdwt),
      .xt_rsc_0_26_i_bcwt(xt_rsc_0_26_i_bcwt),
      .xt_rsc_0_26_i_s_re_core_sct(xt_rsc_0_26_i_s_re_core_sct),
      .xt_rsc_0_26_i_biwt_1(xt_rsc_0_26_i_biwt_1),
      .xt_rsc_0_26_i_bdwt_2(xt_rsc_0_26_i_bdwt_2),
      .xt_rsc_0_26_i_bcwt_1(xt_rsc_0_26_i_bcwt_1),
      .xt_rsc_0_26_i_s_we_core_sct(xt_rsc_0_26_i_s_we_core_sct),
      .xt_rsc_0_26_i_s_rrdy(xt_rsc_0_26_i_s_rrdy),
      .xt_rsc_0_26_i_s_wrdy(xt_rsc_0_26_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_26_i_xt_rsc_0_26_wait_dp peaseNTT_core_xt_rsc_0_26_i_xt_rsc_0_26_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_26_i_oswt(xt_rsc_0_26_i_oswt),
      .xt_rsc_0_26_i_wen_comp(xt_rsc_0_26_i_wen_comp),
      .xt_rsc_0_26_i_oswt_1(xt_rsc_0_26_i_oswt_1),
      .xt_rsc_0_26_i_wen_comp_1(xt_rsc_0_26_i_wen_comp_1),
      .xt_rsc_0_26_i_s_raddr_core(xt_rsc_0_26_i_s_raddr_core),
      .xt_rsc_0_26_i_s_waddr_core(xt_rsc_0_26_i_s_waddr_core),
      .xt_rsc_0_26_i_s_din_mxwt(xt_rsc_0_26_i_s_din_mxwt),
      .xt_rsc_0_26_i_s_dout_core(xt_rsc_0_26_i_s_dout_core),
      .xt_rsc_0_26_i_biwt(xt_rsc_0_26_i_biwt),
      .xt_rsc_0_26_i_bdwt(xt_rsc_0_26_i_bdwt),
      .xt_rsc_0_26_i_bcwt(xt_rsc_0_26_i_bcwt),
      .xt_rsc_0_26_i_biwt_1(xt_rsc_0_26_i_biwt_1),
      .xt_rsc_0_26_i_bdwt_2(xt_rsc_0_26_i_bdwt_2),
      .xt_rsc_0_26_i_bcwt_1(xt_rsc_0_26_i_bcwt_1),
      .xt_rsc_0_26_i_s_raddr(xt_rsc_0_26_i_s_raddr),
      .xt_rsc_0_26_i_s_raddr_core_sct(xt_rsc_0_26_i_s_re_core_sct),
      .xt_rsc_0_26_i_s_waddr(xt_rsc_0_26_i_s_waddr),
      .xt_rsc_0_26_i_s_waddr_core_sct(xt_rsc_0_26_i_s_we_core_sct),
      .xt_rsc_0_26_i_s_din(xt_rsc_0_26_i_s_din),
      .xt_rsc_0_26_i_s_dout(xt_rsc_0_26_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_25_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_25_i (
  clk, rst, xt_rsc_0_25_s_tdone, xt_rsc_0_25_tr_write_done, xt_rsc_0_25_RREADY, xt_rsc_0_25_RVALID,
      xt_rsc_0_25_RUSER, xt_rsc_0_25_RLAST, xt_rsc_0_25_RRESP, xt_rsc_0_25_RDATA,
      xt_rsc_0_25_RID, xt_rsc_0_25_ARREADY, xt_rsc_0_25_ARVALID, xt_rsc_0_25_ARUSER,
      xt_rsc_0_25_ARREGION, xt_rsc_0_25_ARQOS, xt_rsc_0_25_ARPROT, xt_rsc_0_25_ARCACHE,
      xt_rsc_0_25_ARLOCK, xt_rsc_0_25_ARBURST, xt_rsc_0_25_ARSIZE, xt_rsc_0_25_ARLEN,
      xt_rsc_0_25_ARADDR, xt_rsc_0_25_ARID, xt_rsc_0_25_BREADY, xt_rsc_0_25_BVALID,
      xt_rsc_0_25_BUSER, xt_rsc_0_25_BRESP, xt_rsc_0_25_BID, xt_rsc_0_25_WREADY,
      xt_rsc_0_25_WVALID, xt_rsc_0_25_WUSER, xt_rsc_0_25_WLAST, xt_rsc_0_25_WSTRB,
      xt_rsc_0_25_WDATA, xt_rsc_0_25_AWREADY, xt_rsc_0_25_AWVALID, xt_rsc_0_25_AWUSER,
      xt_rsc_0_25_AWREGION, xt_rsc_0_25_AWQOS, xt_rsc_0_25_AWPROT, xt_rsc_0_25_AWCACHE,
      xt_rsc_0_25_AWLOCK, xt_rsc_0_25_AWBURST, xt_rsc_0_25_AWSIZE, xt_rsc_0_25_AWLEN,
      xt_rsc_0_25_AWADDR, xt_rsc_0_25_AWID, core_wen, xt_rsc_0_25_i_oswt, xt_rsc_0_25_i_wen_comp,
      xt_rsc_0_25_i_oswt_1, xt_rsc_0_25_i_wen_comp_1, xt_rsc_0_25_i_s_raddr_core,
      xt_rsc_0_25_i_s_waddr_core, xt_rsc_0_25_i_s_din_mxwt, xt_rsc_0_25_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_25_s_tdone;
  input xt_rsc_0_25_tr_write_done;
  input xt_rsc_0_25_RREADY;
  output xt_rsc_0_25_RVALID;
  output xt_rsc_0_25_RUSER;
  output xt_rsc_0_25_RLAST;
  output [1:0] xt_rsc_0_25_RRESP;
  output [31:0] xt_rsc_0_25_RDATA;
  output xt_rsc_0_25_RID;
  output xt_rsc_0_25_ARREADY;
  input xt_rsc_0_25_ARVALID;
  input xt_rsc_0_25_ARUSER;
  input [3:0] xt_rsc_0_25_ARREGION;
  input [3:0] xt_rsc_0_25_ARQOS;
  input [2:0] xt_rsc_0_25_ARPROT;
  input [3:0] xt_rsc_0_25_ARCACHE;
  input xt_rsc_0_25_ARLOCK;
  input [1:0] xt_rsc_0_25_ARBURST;
  input [2:0] xt_rsc_0_25_ARSIZE;
  input [7:0] xt_rsc_0_25_ARLEN;
  input [11:0] xt_rsc_0_25_ARADDR;
  input xt_rsc_0_25_ARID;
  input xt_rsc_0_25_BREADY;
  output xt_rsc_0_25_BVALID;
  output xt_rsc_0_25_BUSER;
  output [1:0] xt_rsc_0_25_BRESP;
  output xt_rsc_0_25_BID;
  output xt_rsc_0_25_WREADY;
  input xt_rsc_0_25_WVALID;
  input xt_rsc_0_25_WUSER;
  input xt_rsc_0_25_WLAST;
  input [3:0] xt_rsc_0_25_WSTRB;
  input [31:0] xt_rsc_0_25_WDATA;
  output xt_rsc_0_25_AWREADY;
  input xt_rsc_0_25_AWVALID;
  input xt_rsc_0_25_AWUSER;
  input [3:0] xt_rsc_0_25_AWREGION;
  input [3:0] xt_rsc_0_25_AWQOS;
  input [2:0] xt_rsc_0_25_AWPROT;
  input [3:0] xt_rsc_0_25_AWCACHE;
  input xt_rsc_0_25_AWLOCK;
  input [1:0] xt_rsc_0_25_AWBURST;
  input [2:0] xt_rsc_0_25_AWSIZE;
  input [7:0] xt_rsc_0_25_AWLEN;
  input [11:0] xt_rsc_0_25_AWADDR;
  input xt_rsc_0_25_AWID;
  input core_wen;
  input xt_rsc_0_25_i_oswt;
  output xt_rsc_0_25_i_wen_comp;
  input xt_rsc_0_25_i_oswt_1;
  output xt_rsc_0_25_i_wen_comp_1;
  input [3:0] xt_rsc_0_25_i_s_raddr_core;
  input [3:0] xt_rsc_0_25_i_s_waddr_core;
  output [31:0] xt_rsc_0_25_i_s_din_mxwt;
  input [31:0] xt_rsc_0_25_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_25_i_biwt;
  wire xt_rsc_0_25_i_bdwt;
  wire xt_rsc_0_25_i_bcwt;
  wire xt_rsc_0_25_i_s_re_core_sct;
  wire xt_rsc_0_25_i_biwt_1;
  wire xt_rsc_0_25_i_bdwt_2;
  wire xt_rsc_0_25_i_bcwt_1;
  wire xt_rsc_0_25_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_25_i_s_raddr;
  wire [3:0] xt_rsc_0_25_i_s_waddr;
  wire [31:0] xt_rsc_0_25_i_s_din;
  wire [31:0] xt_rsc_0_25_i_s_dout;
  wire xt_rsc_0_25_i_s_rrdy;
  wire xt_rsc_0_25_i_s_wrdy;
  wire xt_rsc_0_25_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_25_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_25_AWID),
      .AWADDR(xt_rsc_0_25_AWADDR),
      .AWLEN(xt_rsc_0_25_AWLEN),
      .AWSIZE(xt_rsc_0_25_AWSIZE),
      .AWBURST(xt_rsc_0_25_AWBURST),
      .AWLOCK(xt_rsc_0_25_AWLOCK),
      .AWCACHE(xt_rsc_0_25_AWCACHE),
      .AWPROT(xt_rsc_0_25_AWPROT),
      .AWQOS(xt_rsc_0_25_AWQOS),
      .AWREGION(xt_rsc_0_25_AWREGION),
      .AWUSER(xt_rsc_0_25_AWUSER),
      .AWVALID(xt_rsc_0_25_AWVALID),
      .AWREADY(xt_rsc_0_25_AWREADY),
      .WDATA(xt_rsc_0_25_WDATA),
      .WSTRB(xt_rsc_0_25_WSTRB),
      .WLAST(xt_rsc_0_25_WLAST),
      .WUSER(xt_rsc_0_25_WUSER),
      .WVALID(xt_rsc_0_25_WVALID),
      .WREADY(xt_rsc_0_25_WREADY),
      .BID(xt_rsc_0_25_BID),
      .BRESP(xt_rsc_0_25_BRESP),
      .BUSER(xt_rsc_0_25_BUSER),
      .BVALID(xt_rsc_0_25_BVALID),
      .BREADY(xt_rsc_0_25_BREADY),
      .ARID(xt_rsc_0_25_ARID),
      .ARADDR(xt_rsc_0_25_ARADDR),
      .ARLEN(xt_rsc_0_25_ARLEN),
      .ARSIZE(xt_rsc_0_25_ARSIZE),
      .ARBURST(xt_rsc_0_25_ARBURST),
      .ARLOCK(xt_rsc_0_25_ARLOCK),
      .ARCACHE(xt_rsc_0_25_ARCACHE),
      .ARPROT(xt_rsc_0_25_ARPROT),
      .ARQOS(xt_rsc_0_25_ARQOS),
      .ARREGION(xt_rsc_0_25_ARREGION),
      .ARUSER(xt_rsc_0_25_ARUSER),
      .ARVALID(xt_rsc_0_25_ARVALID),
      .ARREADY(xt_rsc_0_25_ARREADY),
      .RID(xt_rsc_0_25_RID),
      .RDATA(xt_rsc_0_25_RDATA),
      .RRESP(xt_rsc_0_25_RRESP),
      .RLAST(xt_rsc_0_25_RLAST),
      .RUSER(xt_rsc_0_25_RUSER),
      .RVALID(xt_rsc_0_25_RVALID),
      .RREADY(xt_rsc_0_25_RREADY),
      .s_re(xt_rsc_0_25_i_s_re_core_sct),
      .s_we(xt_rsc_0_25_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_25_i_s_raddr),
      .s_waddr(xt_rsc_0_25_i_s_waddr),
      .s_din(xt_rsc_0_25_i_s_din),
      .s_dout(xt_rsc_0_25_i_s_dout),
      .s_rrdy(xt_rsc_0_25_i_s_rrdy),
      .s_wrdy(xt_rsc_0_25_i_s_wrdy),
      .is_idle(xt_rsc_0_25_is_idle_1),
      .tr_write_done(xt_rsc_0_25_tr_write_done),
      .s_tdone(xt_rsc_0_25_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_25_i_xt_rsc_0_25_wait_ctrl peaseNTT_core_xt_rsc_0_25_i_xt_rsc_0_25_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_25_i_oswt(xt_rsc_0_25_i_oswt),
      .xt_rsc_0_25_i_oswt_1(xt_rsc_0_25_i_oswt_1),
      .xt_rsc_0_25_i_biwt(xt_rsc_0_25_i_biwt),
      .xt_rsc_0_25_i_bdwt(xt_rsc_0_25_i_bdwt),
      .xt_rsc_0_25_i_bcwt(xt_rsc_0_25_i_bcwt),
      .xt_rsc_0_25_i_s_re_core_sct(xt_rsc_0_25_i_s_re_core_sct),
      .xt_rsc_0_25_i_biwt_1(xt_rsc_0_25_i_biwt_1),
      .xt_rsc_0_25_i_bdwt_2(xt_rsc_0_25_i_bdwt_2),
      .xt_rsc_0_25_i_bcwt_1(xt_rsc_0_25_i_bcwt_1),
      .xt_rsc_0_25_i_s_we_core_sct(xt_rsc_0_25_i_s_we_core_sct),
      .xt_rsc_0_25_i_s_rrdy(xt_rsc_0_25_i_s_rrdy),
      .xt_rsc_0_25_i_s_wrdy(xt_rsc_0_25_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_25_i_xt_rsc_0_25_wait_dp peaseNTT_core_xt_rsc_0_25_i_xt_rsc_0_25_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_25_i_oswt(xt_rsc_0_25_i_oswt),
      .xt_rsc_0_25_i_wen_comp(xt_rsc_0_25_i_wen_comp),
      .xt_rsc_0_25_i_oswt_1(xt_rsc_0_25_i_oswt_1),
      .xt_rsc_0_25_i_wen_comp_1(xt_rsc_0_25_i_wen_comp_1),
      .xt_rsc_0_25_i_s_raddr_core(xt_rsc_0_25_i_s_raddr_core),
      .xt_rsc_0_25_i_s_waddr_core(xt_rsc_0_25_i_s_waddr_core),
      .xt_rsc_0_25_i_s_din_mxwt(xt_rsc_0_25_i_s_din_mxwt),
      .xt_rsc_0_25_i_s_dout_core(xt_rsc_0_25_i_s_dout_core),
      .xt_rsc_0_25_i_biwt(xt_rsc_0_25_i_biwt),
      .xt_rsc_0_25_i_bdwt(xt_rsc_0_25_i_bdwt),
      .xt_rsc_0_25_i_bcwt(xt_rsc_0_25_i_bcwt),
      .xt_rsc_0_25_i_biwt_1(xt_rsc_0_25_i_biwt_1),
      .xt_rsc_0_25_i_bdwt_2(xt_rsc_0_25_i_bdwt_2),
      .xt_rsc_0_25_i_bcwt_1(xt_rsc_0_25_i_bcwt_1),
      .xt_rsc_0_25_i_s_raddr(xt_rsc_0_25_i_s_raddr),
      .xt_rsc_0_25_i_s_raddr_core_sct(xt_rsc_0_25_i_s_re_core_sct),
      .xt_rsc_0_25_i_s_waddr(xt_rsc_0_25_i_s_waddr),
      .xt_rsc_0_25_i_s_waddr_core_sct(xt_rsc_0_25_i_s_we_core_sct),
      .xt_rsc_0_25_i_s_din(xt_rsc_0_25_i_s_din),
      .xt_rsc_0_25_i_s_dout(xt_rsc_0_25_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_24_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_24_i (
  clk, rst, xt_rsc_0_24_s_tdone, xt_rsc_0_24_tr_write_done, xt_rsc_0_24_RREADY, xt_rsc_0_24_RVALID,
      xt_rsc_0_24_RUSER, xt_rsc_0_24_RLAST, xt_rsc_0_24_RRESP, xt_rsc_0_24_RDATA,
      xt_rsc_0_24_RID, xt_rsc_0_24_ARREADY, xt_rsc_0_24_ARVALID, xt_rsc_0_24_ARUSER,
      xt_rsc_0_24_ARREGION, xt_rsc_0_24_ARQOS, xt_rsc_0_24_ARPROT, xt_rsc_0_24_ARCACHE,
      xt_rsc_0_24_ARLOCK, xt_rsc_0_24_ARBURST, xt_rsc_0_24_ARSIZE, xt_rsc_0_24_ARLEN,
      xt_rsc_0_24_ARADDR, xt_rsc_0_24_ARID, xt_rsc_0_24_BREADY, xt_rsc_0_24_BVALID,
      xt_rsc_0_24_BUSER, xt_rsc_0_24_BRESP, xt_rsc_0_24_BID, xt_rsc_0_24_WREADY,
      xt_rsc_0_24_WVALID, xt_rsc_0_24_WUSER, xt_rsc_0_24_WLAST, xt_rsc_0_24_WSTRB,
      xt_rsc_0_24_WDATA, xt_rsc_0_24_AWREADY, xt_rsc_0_24_AWVALID, xt_rsc_0_24_AWUSER,
      xt_rsc_0_24_AWREGION, xt_rsc_0_24_AWQOS, xt_rsc_0_24_AWPROT, xt_rsc_0_24_AWCACHE,
      xt_rsc_0_24_AWLOCK, xt_rsc_0_24_AWBURST, xt_rsc_0_24_AWSIZE, xt_rsc_0_24_AWLEN,
      xt_rsc_0_24_AWADDR, xt_rsc_0_24_AWID, core_wen, xt_rsc_0_24_i_oswt, xt_rsc_0_24_i_wen_comp,
      xt_rsc_0_24_i_oswt_1, xt_rsc_0_24_i_wen_comp_1, xt_rsc_0_24_i_s_raddr_core,
      xt_rsc_0_24_i_s_waddr_core, xt_rsc_0_24_i_s_din_mxwt, xt_rsc_0_24_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_24_s_tdone;
  input xt_rsc_0_24_tr_write_done;
  input xt_rsc_0_24_RREADY;
  output xt_rsc_0_24_RVALID;
  output xt_rsc_0_24_RUSER;
  output xt_rsc_0_24_RLAST;
  output [1:0] xt_rsc_0_24_RRESP;
  output [31:0] xt_rsc_0_24_RDATA;
  output xt_rsc_0_24_RID;
  output xt_rsc_0_24_ARREADY;
  input xt_rsc_0_24_ARVALID;
  input xt_rsc_0_24_ARUSER;
  input [3:0] xt_rsc_0_24_ARREGION;
  input [3:0] xt_rsc_0_24_ARQOS;
  input [2:0] xt_rsc_0_24_ARPROT;
  input [3:0] xt_rsc_0_24_ARCACHE;
  input xt_rsc_0_24_ARLOCK;
  input [1:0] xt_rsc_0_24_ARBURST;
  input [2:0] xt_rsc_0_24_ARSIZE;
  input [7:0] xt_rsc_0_24_ARLEN;
  input [11:0] xt_rsc_0_24_ARADDR;
  input xt_rsc_0_24_ARID;
  input xt_rsc_0_24_BREADY;
  output xt_rsc_0_24_BVALID;
  output xt_rsc_0_24_BUSER;
  output [1:0] xt_rsc_0_24_BRESP;
  output xt_rsc_0_24_BID;
  output xt_rsc_0_24_WREADY;
  input xt_rsc_0_24_WVALID;
  input xt_rsc_0_24_WUSER;
  input xt_rsc_0_24_WLAST;
  input [3:0] xt_rsc_0_24_WSTRB;
  input [31:0] xt_rsc_0_24_WDATA;
  output xt_rsc_0_24_AWREADY;
  input xt_rsc_0_24_AWVALID;
  input xt_rsc_0_24_AWUSER;
  input [3:0] xt_rsc_0_24_AWREGION;
  input [3:0] xt_rsc_0_24_AWQOS;
  input [2:0] xt_rsc_0_24_AWPROT;
  input [3:0] xt_rsc_0_24_AWCACHE;
  input xt_rsc_0_24_AWLOCK;
  input [1:0] xt_rsc_0_24_AWBURST;
  input [2:0] xt_rsc_0_24_AWSIZE;
  input [7:0] xt_rsc_0_24_AWLEN;
  input [11:0] xt_rsc_0_24_AWADDR;
  input xt_rsc_0_24_AWID;
  input core_wen;
  input xt_rsc_0_24_i_oswt;
  output xt_rsc_0_24_i_wen_comp;
  input xt_rsc_0_24_i_oswt_1;
  output xt_rsc_0_24_i_wen_comp_1;
  input [3:0] xt_rsc_0_24_i_s_raddr_core;
  input [3:0] xt_rsc_0_24_i_s_waddr_core;
  output [31:0] xt_rsc_0_24_i_s_din_mxwt;
  input [31:0] xt_rsc_0_24_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_24_i_biwt;
  wire xt_rsc_0_24_i_bdwt;
  wire xt_rsc_0_24_i_bcwt;
  wire xt_rsc_0_24_i_s_re_core_sct;
  wire xt_rsc_0_24_i_biwt_1;
  wire xt_rsc_0_24_i_bdwt_2;
  wire xt_rsc_0_24_i_bcwt_1;
  wire xt_rsc_0_24_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_24_i_s_raddr;
  wire [3:0] xt_rsc_0_24_i_s_waddr;
  wire [31:0] xt_rsc_0_24_i_s_din;
  wire [31:0] xt_rsc_0_24_i_s_dout;
  wire xt_rsc_0_24_i_s_rrdy;
  wire xt_rsc_0_24_i_s_wrdy;
  wire xt_rsc_0_24_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_24_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_24_AWID),
      .AWADDR(xt_rsc_0_24_AWADDR),
      .AWLEN(xt_rsc_0_24_AWLEN),
      .AWSIZE(xt_rsc_0_24_AWSIZE),
      .AWBURST(xt_rsc_0_24_AWBURST),
      .AWLOCK(xt_rsc_0_24_AWLOCK),
      .AWCACHE(xt_rsc_0_24_AWCACHE),
      .AWPROT(xt_rsc_0_24_AWPROT),
      .AWQOS(xt_rsc_0_24_AWQOS),
      .AWREGION(xt_rsc_0_24_AWREGION),
      .AWUSER(xt_rsc_0_24_AWUSER),
      .AWVALID(xt_rsc_0_24_AWVALID),
      .AWREADY(xt_rsc_0_24_AWREADY),
      .WDATA(xt_rsc_0_24_WDATA),
      .WSTRB(xt_rsc_0_24_WSTRB),
      .WLAST(xt_rsc_0_24_WLAST),
      .WUSER(xt_rsc_0_24_WUSER),
      .WVALID(xt_rsc_0_24_WVALID),
      .WREADY(xt_rsc_0_24_WREADY),
      .BID(xt_rsc_0_24_BID),
      .BRESP(xt_rsc_0_24_BRESP),
      .BUSER(xt_rsc_0_24_BUSER),
      .BVALID(xt_rsc_0_24_BVALID),
      .BREADY(xt_rsc_0_24_BREADY),
      .ARID(xt_rsc_0_24_ARID),
      .ARADDR(xt_rsc_0_24_ARADDR),
      .ARLEN(xt_rsc_0_24_ARLEN),
      .ARSIZE(xt_rsc_0_24_ARSIZE),
      .ARBURST(xt_rsc_0_24_ARBURST),
      .ARLOCK(xt_rsc_0_24_ARLOCK),
      .ARCACHE(xt_rsc_0_24_ARCACHE),
      .ARPROT(xt_rsc_0_24_ARPROT),
      .ARQOS(xt_rsc_0_24_ARQOS),
      .ARREGION(xt_rsc_0_24_ARREGION),
      .ARUSER(xt_rsc_0_24_ARUSER),
      .ARVALID(xt_rsc_0_24_ARVALID),
      .ARREADY(xt_rsc_0_24_ARREADY),
      .RID(xt_rsc_0_24_RID),
      .RDATA(xt_rsc_0_24_RDATA),
      .RRESP(xt_rsc_0_24_RRESP),
      .RLAST(xt_rsc_0_24_RLAST),
      .RUSER(xt_rsc_0_24_RUSER),
      .RVALID(xt_rsc_0_24_RVALID),
      .RREADY(xt_rsc_0_24_RREADY),
      .s_re(xt_rsc_0_24_i_s_re_core_sct),
      .s_we(xt_rsc_0_24_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_24_i_s_raddr),
      .s_waddr(xt_rsc_0_24_i_s_waddr),
      .s_din(xt_rsc_0_24_i_s_din),
      .s_dout(xt_rsc_0_24_i_s_dout),
      .s_rrdy(xt_rsc_0_24_i_s_rrdy),
      .s_wrdy(xt_rsc_0_24_i_s_wrdy),
      .is_idle(xt_rsc_0_24_is_idle_1),
      .tr_write_done(xt_rsc_0_24_tr_write_done),
      .s_tdone(xt_rsc_0_24_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_24_i_xt_rsc_0_24_wait_ctrl peaseNTT_core_xt_rsc_0_24_i_xt_rsc_0_24_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_24_i_oswt(xt_rsc_0_24_i_oswt),
      .xt_rsc_0_24_i_oswt_1(xt_rsc_0_24_i_oswt_1),
      .xt_rsc_0_24_i_biwt(xt_rsc_0_24_i_biwt),
      .xt_rsc_0_24_i_bdwt(xt_rsc_0_24_i_bdwt),
      .xt_rsc_0_24_i_bcwt(xt_rsc_0_24_i_bcwt),
      .xt_rsc_0_24_i_s_re_core_sct(xt_rsc_0_24_i_s_re_core_sct),
      .xt_rsc_0_24_i_biwt_1(xt_rsc_0_24_i_biwt_1),
      .xt_rsc_0_24_i_bdwt_2(xt_rsc_0_24_i_bdwt_2),
      .xt_rsc_0_24_i_bcwt_1(xt_rsc_0_24_i_bcwt_1),
      .xt_rsc_0_24_i_s_we_core_sct(xt_rsc_0_24_i_s_we_core_sct),
      .xt_rsc_0_24_i_s_rrdy(xt_rsc_0_24_i_s_rrdy),
      .xt_rsc_0_24_i_s_wrdy(xt_rsc_0_24_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_24_i_xt_rsc_0_24_wait_dp peaseNTT_core_xt_rsc_0_24_i_xt_rsc_0_24_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_24_i_oswt(xt_rsc_0_24_i_oswt),
      .xt_rsc_0_24_i_wen_comp(xt_rsc_0_24_i_wen_comp),
      .xt_rsc_0_24_i_oswt_1(xt_rsc_0_24_i_oswt_1),
      .xt_rsc_0_24_i_wen_comp_1(xt_rsc_0_24_i_wen_comp_1),
      .xt_rsc_0_24_i_s_raddr_core(xt_rsc_0_24_i_s_raddr_core),
      .xt_rsc_0_24_i_s_waddr_core(xt_rsc_0_24_i_s_waddr_core),
      .xt_rsc_0_24_i_s_din_mxwt(xt_rsc_0_24_i_s_din_mxwt),
      .xt_rsc_0_24_i_s_dout_core(xt_rsc_0_24_i_s_dout_core),
      .xt_rsc_0_24_i_biwt(xt_rsc_0_24_i_biwt),
      .xt_rsc_0_24_i_bdwt(xt_rsc_0_24_i_bdwt),
      .xt_rsc_0_24_i_bcwt(xt_rsc_0_24_i_bcwt),
      .xt_rsc_0_24_i_biwt_1(xt_rsc_0_24_i_biwt_1),
      .xt_rsc_0_24_i_bdwt_2(xt_rsc_0_24_i_bdwt_2),
      .xt_rsc_0_24_i_bcwt_1(xt_rsc_0_24_i_bcwt_1),
      .xt_rsc_0_24_i_s_raddr(xt_rsc_0_24_i_s_raddr),
      .xt_rsc_0_24_i_s_raddr_core_sct(xt_rsc_0_24_i_s_re_core_sct),
      .xt_rsc_0_24_i_s_waddr(xt_rsc_0_24_i_s_waddr),
      .xt_rsc_0_24_i_s_waddr_core_sct(xt_rsc_0_24_i_s_we_core_sct),
      .xt_rsc_0_24_i_s_din(xt_rsc_0_24_i_s_din),
      .xt_rsc_0_24_i_s_dout(xt_rsc_0_24_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_23_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_23_i (
  clk, rst, xt_rsc_0_23_s_tdone, xt_rsc_0_23_tr_write_done, xt_rsc_0_23_RREADY, xt_rsc_0_23_RVALID,
      xt_rsc_0_23_RUSER, xt_rsc_0_23_RLAST, xt_rsc_0_23_RRESP, xt_rsc_0_23_RDATA,
      xt_rsc_0_23_RID, xt_rsc_0_23_ARREADY, xt_rsc_0_23_ARVALID, xt_rsc_0_23_ARUSER,
      xt_rsc_0_23_ARREGION, xt_rsc_0_23_ARQOS, xt_rsc_0_23_ARPROT, xt_rsc_0_23_ARCACHE,
      xt_rsc_0_23_ARLOCK, xt_rsc_0_23_ARBURST, xt_rsc_0_23_ARSIZE, xt_rsc_0_23_ARLEN,
      xt_rsc_0_23_ARADDR, xt_rsc_0_23_ARID, xt_rsc_0_23_BREADY, xt_rsc_0_23_BVALID,
      xt_rsc_0_23_BUSER, xt_rsc_0_23_BRESP, xt_rsc_0_23_BID, xt_rsc_0_23_WREADY,
      xt_rsc_0_23_WVALID, xt_rsc_0_23_WUSER, xt_rsc_0_23_WLAST, xt_rsc_0_23_WSTRB,
      xt_rsc_0_23_WDATA, xt_rsc_0_23_AWREADY, xt_rsc_0_23_AWVALID, xt_rsc_0_23_AWUSER,
      xt_rsc_0_23_AWREGION, xt_rsc_0_23_AWQOS, xt_rsc_0_23_AWPROT, xt_rsc_0_23_AWCACHE,
      xt_rsc_0_23_AWLOCK, xt_rsc_0_23_AWBURST, xt_rsc_0_23_AWSIZE, xt_rsc_0_23_AWLEN,
      xt_rsc_0_23_AWADDR, xt_rsc_0_23_AWID, core_wen, xt_rsc_0_23_i_oswt, xt_rsc_0_23_i_wen_comp,
      xt_rsc_0_23_i_oswt_1, xt_rsc_0_23_i_wen_comp_1, xt_rsc_0_23_i_s_raddr_core,
      xt_rsc_0_23_i_s_waddr_core, xt_rsc_0_23_i_s_din_mxwt, xt_rsc_0_23_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_23_s_tdone;
  input xt_rsc_0_23_tr_write_done;
  input xt_rsc_0_23_RREADY;
  output xt_rsc_0_23_RVALID;
  output xt_rsc_0_23_RUSER;
  output xt_rsc_0_23_RLAST;
  output [1:0] xt_rsc_0_23_RRESP;
  output [31:0] xt_rsc_0_23_RDATA;
  output xt_rsc_0_23_RID;
  output xt_rsc_0_23_ARREADY;
  input xt_rsc_0_23_ARVALID;
  input xt_rsc_0_23_ARUSER;
  input [3:0] xt_rsc_0_23_ARREGION;
  input [3:0] xt_rsc_0_23_ARQOS;
  input [2:0] xt_rsc_0_23_ARPROT;
  input [3:0] xt_rsc_0_23_ARCACHE;
  input xt_rsc_0_23_ARLOCK;
  input [1:0] xt_rsc_0_23_ARBURST;
  input [2:0] xt_rsc_0_23_ARSIZE;
  input [7:0] xt_rsc_0_23_ARLEN;
  input [11:0] xt_rsc_0_23_ARADDR;
  input xt_rsc_0_23_ARID;
  input xt_rsc_0_23_BREADY;
  output xt_rsc_0_23_BVALID;
  output xt_rsc_0_23_BUSER;
  output [1:0] xt_rsc_0_23_BRESP;
  output xt_rsc_0_23_BID;
  output xt_rsc_0_23_WREADY;
  input xt_rsc_0_23_WVALID;
  input xt_rsc_0_23_WUSER;
  input xt_rsc_0_23_WLAST;
  input [3:0] xt_rsc_0_23_WSTRB;
  input [31:0] xt_rsc_0_23_WDATA;
  output xt_rsc_0_23_AWREADY;
  input xt_rsc_0_23_AWVALID;
  input xt_rsc_0_23_AWUSER;
  input [3:0] xt_rsc_0_23_AWREGION;
  input [3:0] xt_rsc_0_23_AWQOS;
  input [2:0] xt_rsc_0_23_AWPROT;
  input [3:0] xt_rsc_0_23_AWCACHE;
  input xt_rsc_0_23_AWLOCK;
  input [1:0] xt_rsc_0_23_AWBURST;
  input [2:0] xt_rsc_0_23_AWSIZE;
  input [7:0] xt_rsc_0_23_AWLEN;
  input [11:0] xt_rsc_0_23_AWADDR;
  input xt_rsc_0_23_AWID;
  input core_wen;
  input xt_rsc_0_23_i_oswt;
  output xt_rsc_0_23_i_wen_comp;
  input xt_rsc_0_23_i_oswt_1;
  output xt_rsc_0_23_i_wen_comp_1;
  input [3:0] xt_rsc_0_23_i_s_raddr_core;
  input [3:0] xt_rsc_0_23_i_s_waddr_core;
  output [31:0] xt_rsc_0_23_i_s_din_mxwt;
  input [31:0] xt_rsc_0_23_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_23_i_biwt;
  wire xt_rsc_0_23_i_bdwt;
  wire xt_rsc_0_23_i_bcwt;
  wire xt_rsc_0_23_i_s_re_core_sct;
  wire xt_rsc_0_23_i_biwt_1;
  wire xt_rsc_0_23_i_bdwt_2;
  wire xt_rsc_0_23_i_bcwt_1;
  wire xt_rsc_0_23_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_23_i_s_raddr;
  wire [3:0] xt_rsc_0_23_i_s_waddr;
  wire [31:0] xt_rsc_0_23_i_s_din;
  wire [31:0] xt_rsc_0_23_i_s_dout;
  wire xt_rsc_0_23_i_s_rrdy;
  wire xt_rsc_0_23_i_s_wrdy;
  wire xt_rsc_0_23_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_23_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_23_AWID),
      .AWADDR(xt_rsc_0_23_AWADDR),
      .AWLEN(xt_rsc_0_23_AWLEN),
      .AWSIZE(xt_rsc_0_23_AWSIZE),
      .AWBURST(xt_rsc_0_23_AWBURST),
      .AWLOCK(xt_rsc_0_23_AWLOCK),
      .AWCACHE(xt_rsc_0_23_AWCACHE),
      .AWPROT(xt_rsc_0_23_AWPROT),
      .AWQOS(xt_rsc_0_23_AWQOS),
      .AWREGION(xt_rsc_0_23_AWREGION),
      .AWUSER(xt_rsc_0_23_AWUSER),
      .AWVALID(xt_rsc_0_23_AWVALID),
      .AWREADY(xt_rsc_0_23_AWREADY),
      .WDATA(xt_rsc_0_23_WDATA),
      .WSTRB(xt_rsc_0_23_WSTRB),
      .WLAST(xt_rsc_0_23_WLAST),
      .WUSER(xt_rsc_0_23_WUSER),
      .WVALID(xt_rsc_0_23_WVALID),
      .WREADY(xt_rsc_0_23_WREADY),
      .BID(xt_rsc_0_23_BID),
      .BRESP(xt_rsc_0_23_BRESP),
      .BUSER(xt_rsc_0_23_BUSER),
      .BVALID(xt_rsc_0_23_BVALID),
      .BREADY(xt_rsc_0_23_BREADY),
      .ARID(xt_rsc_0_23_ARID),
      .ARADDR(xt_rsc_0_23_ARADDR),
      .ARLEN(xt_rsc_0_23_ARLEN),
      .ARSIZE(xt_rsc_0_23_ARSIZE),
      .ARBURST(xt_rsc_0_23_ARBURST),
      .ARLOCK(xt_rsc_0_23_ARLOCK),
      .ARCACHE(xt_rsc_0_23_ARCACHE),
      .ARPROT(xt_rsc_0_23_ARPROT),
      .ARQOS(xt_rsc_0_23_ARQOS),
      .ARREGION(xt_rsc_0_23_ARREGION),
      .ARUSER(xt_rsc_0_23_ARUSER),
      .ARVALID(xt_rsc_0_23_ARVALID),
      .ARREADY(xt_rsc_0_23_ARREADY),
      .RID(xt_rsc_0_23_RID),
      .RDATA(xt_rsc_0_23_RDATA),
      .RRESP(xt_rsc_0_23_RRESP),
      .RLAST(xt_rsc_0_23_RLAST),
      .RUSER(xt_rsc_0_23_RUSER),
      .RVALID(xt_rsc_0_23_RVALID),
      .RREADY(xt_rsc_0_23_RREADY),
      .s_re(xt_rsc_0_23_i_s_re_core_sct),
      .s_we(xt_rsc_0_23_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_23_i_s_raddr),
      .s_waddr(xt_rsc_0_23_i_s_waddr),
      .s_din(xt_rsc_0_23_i_s_din),
      .s_dout(xt_rsc_0_23_i_s_dout),
      .s_rrdy(xt_rsc_0_23_i_s_rrdy),
      .s_wrdy(xt_rsc_0_23_i_s_wrdy),
      .is_idle(xt_rsc_0_23_is_idle_1),
      .tr_write_done(xt_rsc_0_23_tr_write_done),
      .s_tdone(xt_rsc_0_23_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_23_i_xt_rsc_0_23_wait_ctrl peaseNTT_core_xt_rsc_0_23_i_xt_rsc_0_23_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_23_i_oswt(xt_rsc_0_23_i_oswt),
      .xt_rsc_0_23_i_oswt_1(xt_rsc_0_23_i_oswt_1),
      .xt_rsc_0_23_i_biwt(xt_rsc_0_23_i_biwt),
      .xt_rsc_0_23_i_bdwt(xt_rsc_0_23_i_bdwt),
      .xt_rsc_0_23_i_bcwt(xt_rsc_0_23_i_bcwt),
      .xt_rsc_0_23_i_s_re_core_sct(xt_rsc_0_23_i_s_re_core_sct),
      .xt_rsc_0_23_i_biwt_1(xt_rsc_0_23_i_biwt_1),
      .xt_rsc_0_23_i_bdwt_2(xt_rsc_0_23_i_bdwt_2),
      .xt_rsc_0_23_i_bcwt_1(xt_rsc_0_23_i_bcwt_1),
      .xt_rsc_0_23_i_s_we_core_sct(xt_rsc_0_23_i_s_we_core_sct),
      .xt_rsc_0_23_i_s_rrdy(xt_rsc_0_23_i_s_rrdy),
      .xt_rsc_0_23_i_s_wrdy(xt_rsc_0_23_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_23_i_xt_rsc_0_23_wait_dp peaseNTT_core_xt_rsc_0_23_i_xt_rsc_0_23_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_23_i_oswt(xt_rsc_0_23_i_oswt),
      .xt_rsc_0_23_i_wen_comp(xt_rsc_0_23_i_wen_comp),
      .xt_rsc_0_23_i_oswt_1(xt_rsc_0_23_i_oswt_1),
      .xt_rsc_0_23_i_wen_comp_1(xt_rsc_0_23_i_wen_comp_1),
      .xt_rsc_0_23_i_s_raddr_core(xt_rsc_0_23_i_s_raddr_core),
      .xt_rsc_0_23_i_s_waddr_core(xt_rsc_0_23_i_s_waddr_core),
      .xt_rsc_0_23_i_s_din_mxwt(xt_rsc_0_23_i_s_din_mxwt),
      .xt_rsc_0_23_i_s_dout_core(xt_rsc_0_23_i_s_dout_core),
      .xt_rsc_0_23_i_biwt(xt_rsc_0_23_i_biwt),
      .xt_rsc_0_23_i_bdwt(xt_rsc_0_23_i_bdwt),
      .xt_rsc_0_23_i_bcwt(xt_rsc_0_23_i_bcwt),
      .xt_rsc_0_23_i_biwt_1(xt_rsc_0_23_i_biwt_1),
      .xt_rsc_0_23_i_bdwt_2(xt_rsc_0_23_i_bdwt_2),
      .xt_rsc_0_23_i_bcwt_1(xt_rsc_0_23_i_bcwt_1),
      .xt_rsc_0_23_i_s_raddr(xt_rsc_0_23_i_s_raddr),
      .xt_rsc_0_23_i_s_raddr_core_sct(xt_rsc_0_23_i_s_re_core_sct),
      .xt_rsc_0_23_i_s_waddr(xt_rsc_0_23_i_s_waddr),
      .xt_rsc_0_23_i_s_waddr_core_sct(xt_rsc_0_23_i_s_we_core_sct),
      .xt_rsc_0_23_i_s_din(xt_rsc_0_23_i_s_din),
      .xt_rsc_0_23_i_s_dout(xt_rsc_0_23_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_22_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_22_i (
  clk, rst, xt_rsc_0_22_s_tdone, xt_rsc_0_22_tr_write_done, xt_rsc_0_22_RREADY, xt_rsc_0_22_RVALID,
      xt_rsc_0_22_RUSER, xt_rsc_0_22_RLAST, xt_rsc_0_22_RRESP, xt_rsc_0_22_RDATA,
      xt_rsc_0_22_RID, xt_rsc_0_22_ARREADY, xt_rsc_0_22_ARVALID, xt_rsc_0_22_ARUSER,
      xt_rsc_0_22_ARREGION, xt_rsc_0_22_ARQOS, xt_rsc_0_22_ARPROT, xt_rsc_0_22_ARCACHE,
      xt_rsc_0_22_ARLOCK, xt_rsc_0_22_ARBURST, xt_rsc_0_22_ARSIZE, xt_rsc_0_22_ARLEN,
      xt_rsc_0_22_ARADDR, xt_rsc_0_22_ARID, xt_rsc_0_22_BREADY, xt_rsc_0_22_BVALID,
      xt_rsc_0_22_BUSER, xt_rsc_0_22_BRESP, xt_rsc_0_22_BID, xt_rsc_0_22_WREADY,
      xt_rsc_0_22_WVALID, xt_rsc_0_22_WUSER, xt_rsc_0_22_WLAST, xt_rsc_0_22_WSTRB,
      xt_rsc_0_22_WDATA, xt_rsc_0_22_AWREADY, xt_rsc_0_22_AWVALID, xt_rsc_0_22_AWUSER,
      xt_rsc_0_22_AWREGION, xt_rsc_0_22_AWQOS, xt_rsc_0_22_AWPROT, xt_rsc_0_22_AWCACHE,
      xt_rsc_0_22_AWLOCK, xt_rsc_0_22_AWBURST, xt_rsc_0_22_AWSIZE, xt_rsc_0_22_AWLEN,
      xt_rsc_0_22_AWADDR, xt_rsc_0_22_AWID, core_wen, xt_rsc_0_22_i_oswt, xt_rsc_0_22_i_wen_comp,
      xt_rsc_0_22_i_oswt_1, xt_rsc_0_22_i_wen_comp_1, xt_rsc_0_22_i_s_raddr_core,
      xt_rsc_0_22_i_s_waddr_core, xt_rsc_0_22_i_s_din_mxwt, xt_rsc_0_22_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_22_s_tdone;
  input xt_rsc_0_22_tr_write_done;
  input xt_rsc_0_22_RREADY;
  output xt_rsc_0_22_RVALID;
  output xt_rsc_0_22_RUSER;
  output xt_rsc_0_22_RLAST;
  output [1:0] xt_rsc_0_22_RRESP;
  output [31:0] xt_rsc_0_22_RDATA;
  output xt_rsc_0_22_RID;
  output xt_rsc_0_22_ARREADY;
  input xt_rsc_0_22_ARVALID;
  input xt_rsc_0_22_ARUSER;
  input [3:0] xt_rsc_0_22_ARREGION;
  input [3:0] xt_rsc_0_22_ARQOS;
  input [2:0] xt_rsc_0_22_ARPROT;
  input [3:0] xt_rsc_0_22_ARCACHE;
  input xt_rsc_0_22_ARLOCK;
  input [1:0] xt_rsc_0_22_ARBURST;
  input [2:0] xt_rsc_0_22_ARSIZE;
  input [7:0] xt_rsc_0_22_ARLEN;
  input [11:0] xt_rsc_0_22_ARADDR;
  input xt_rsc_0_22_ARID;
  input xt_rsc_0_22_BREADY;
  output xt_rsc_0_22_BVALID;
  output xt_rsc_0_22_BUSER;
  output [1:0] xt_rsc_0_22_BRESP;
  output xt_rsc_0_22_BID;
  output xt_rsc_0_22_WREADY;
  input xt_rsc_0_22_WVALID;
  input xt_rsc_0_22_WUSER;
  input xt_rsc_0_22_WLAST;
  input [3:0] xt_rsc_0_22_WSTRB;
  input [31:0] xt_rsc_0_22_WDATA;
  output xt_rsc_0_22_AWREADY;
  input xt_rsc_0_22_AWVALID;
  input xt_rsc_0_22_AWUSER;
  input [3:0] xt_rsc_0_22_AWREGION;
  input [3:0] xt_rsc_0_22_AWQOS;
  input [2:0] xt_rsc_0_22_AWPROT;
  input [3:0] xt_rsc_0_22_AWCACHE;
  input xt_rsc_0_22_AWLOCK;
  input [1:0] xt_rsc_0_22_AWBURST;
  input [2:0] xt_rsc_0_22_AWSIZE;
  input [7:0] xt_rsc_0_22_AWLEN;
  input [11:0] xt_rsc_0_22_AWADDR;
  input xt_rsc_0_22_AWID;
  input core_wen;
  input xt_rsc_0_22_i_oswt;
  output xt_rsc_0_22_i_wen_comp;
  input xt_rsc_0_22_i_oswt_1;
  output xt_rsc_0_22_i_wen_comp_1;
  input [3:0] xt_rsc_0_22_i_s_raddr_core;
  input [3:0] xt_rsc_0_22_i_s_waddr_core;
  output [31:0] xt_rsc_0_22_i_s_din_mxwt;
  input [31:0] xt_rsc_0_22_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_22_i_biwt;
  wire xt_rsc_0_22_i_bdwt;
  wire xt_rsc_0_22_i_bcwt;
  wire xt_rsc_0_22_i_s_re_core_sct;
  wire xt_rsc_0_22_i_biwt_1;
  wire xt_rsc_0_22_i_bdwt_2;
  wire xt_rsc_0_22_i_bcwt_1;
  wire xt_rsc_0_22_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_22_i_s_raddr;
  wire [3:0] xt_rsc_0_22_i_s_waddr;
  wire [31:0] xt_rsc_0_22_i_s_din;
  wire [31:0] xt_rsc_0_22_i_s_dout;
  wire xt_rsc_0_22_i_s_rrdy;
  wire xt_rsc_0_22_i_s_wrdy;
  wire xt_rsc_0_22_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_22_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_22_AWID),
      .AWADDR(xt_rsc_0_22_AWADDR),
      .AWLEN(xt_rsc_0_22_AWLEN),
      .AWSIZE(xt_rsc_0_22_AWSIZE),
      .AWBURST(xt_rsc_0_22_AWBURST),
      .AWLOCK(xt_rsc_0_22_AWLOCK),
      .AWCACHE(xt_rsc_0_22_AWCACHE),
      .AWPROT(xt_rsc_0_22_AWPROT),
      .AWQOS(xt_rsc_0_22_AWQOS),
      .AWREGION(xt_rsc_0_22_AWREGION),
      .AWUSER(xt_rsc_0_22_AWUSER),
      .AWVALID(xt_rsc_0_22_AWVALID),
      .AWREADY(xt_rsc_0_22_AWREADY),
      .WDATA(xt_rsc_0_22_WDATA),
      .WSTRB(xt_rsc_0_22_WSTRB),
      .WLAST(xt_rsc_0_22_WLAST),
      .WUSER(xt_rsc_0_22_WUSER),
      .WVALID(xt_rsc_0_22_WVALID),
      .WREADY(xt_rsc_0_22_WREADY),
      .BID(xt_rsc_0_22_BID),
      .BRESP(xt_rsc_0_22_BRESP),
      .BUSER(xt_rsc_0_22_BUSER),
      .BVALID(xt_rsc_0_22_BVALID),
      .BREADY(xt_rsc_0_22_BREADY),
      .ARID(xt_rsc_0_22_ARID),
      .ARADDR(xt_rsc_0_22_ARADDR),
      .ARLEN(xt_rsc_0_22_ARLEN),
      .ARSIZE(xt_rsc_0_22_ARSIZE),
      .ARBURST(xt_rsc_0_22_ARBURST),
      .ARLOCK(xt_rsc_0_22_ARLOCK),
      .ARCACHE(xt_rsc_0_22_ARCACHE),
      .ARPROT(xt_rsc_0_22_ARPROT),
      .ARQOS(xt_rsc_0_22_ARQOS),
      .ARREGION(xt_rsc_0_22_ARREGION),
      .ARUSER(xt_rsc_0_22_ARUSER),
      .ARVALID(xt_rsc_0_22_ARVALID),
      .ARREADY(xt_rsc_0_22_ARREADY),
      .RID(xt_rsc_0_22_RID),
      .RDATA(xt_rsc_0_22_RDATA),
      .RRESP(xt_rsc_0_22_RRESP),
      .RLAST(xt_rsc_0_22_RLAST),
      .RUSER(xt_rsc_0_22_RUSER),
      .RVALID(xt_rsc_0_22_RVALID),
      .RREADY(xt_rsc_0_22_RREADY),
      .s_re(xt_rsc_0_22_i_s_re_core_sct),
      .s_we(xt_rsc_0_22_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_22_i_s_raddr),
      .s_waddr(xt_rsc_0_22_i_s_waddr),
      .s_din(xt_rsc_0_22_i_s_din),
      .s_dout(xt_rsc_0_22_i_s_dout),
      .s_rrdy(xt_rsc_0_22_i_s_rrdy),
      .s_wrdy(xt_rsc_0_22_i_s_wrdy),
      .is_idle(xt_rsc_0_22_is_idle_1),
      .tr_write_done(xt_rsc_0_22_tr_write_done),
      .s_tdone(xt_rsc_0_22_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_22_i_xt_rsc_0_22_wait_ctrl peaseNTT_core_xt_rsc_0_22_i_xt_rsc_0_22_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_22_i_oswt(xt_rsc_0_22_i_oswt),
      .xt_rsc_0_22_i_oswt_1(xt_rsc_0_22_i_oswt_1),
      .xt_rsc_0_22_i_biwt(xt_rsc_0_22_i_biwt),
      .xt_rsc_0_22_i_bdwt(xt_rsc_0_22_i_bdwt),
      .xt_rsc_0_22_i_bcwt(xt_rsc_0_22_i_bcwt),
      .xt_rsc_0_22_i_s_re_core_sct(xt_rsc_0_22_i_s_re_core_sct),
      .xt_rsc_0_22_i_biwt_1(xt_rsc_0_22_i_biwt_1),
      .xt_rsc_0_22_i_bdwt_2(xt_rsc_0_22_i_bdwt_2),
      .xt_rsc_0_22_i_bcwt_1(xt_rsc_0_22_i_bcwt_1),
      .xt_rsc_0_22_i_s_we_core_sct(xt_rsc_0_22_i_s_we_core_sct),
      .xt_rsc_0_22_i_s_rrdy(xt_rsc_0_22_i_s_rrdy),
      .xt_rsc_0_22_i_s_wrdy(xt_rsc_0_22_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_22_i_xt_rsc_0_22_wait_dp peaseNTT_core_xt_rsc_0_22_i_xt_rsc_0_22_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_22_i_oswt(xt_rsc_0_22_i_oswt),
      .xt_rsc_0_22_i_wen_comp(xt_rsc_0_22_i_wen_comp),
      .xt_rsc_0_22_i_oswt_1(xt_rsc_0_22_i_oswt_1),
      .xt_rsc_0_22_i_wen_comp_1(xt_rsc_0_22_i_wen_comp_1),
      .xt_rsc_0_22_i_s_raddr_core(xt_rsc_0_22_i_s_raddr_core),
      .xt_rsc_0_22_i_s_waddr_core(xt_rsc_0_22_i_s_waddr_core),
      .xt_rsc_0_22_i_s_din_mxwt(xt_rsc_0_22_i_s_din_mxwt),
      .xt_rsc_0_22_i_s_dout_core(xt_rsc_0_22_i_s_dout_core),
      .xt_rsc_0_22_i_biwt(xt_rsc_0_22_i_biwt),
      .xt_rsc_0_22_i_bdwt(xt_rsc_0_22_i_bdwt),
      .xt_rsc_0_22_i_bcwt(xt_rsc_0_22_i_bcwt),
      .xt_rsc_0_22_i_biwt_1(xt_rsc_0_22_i_biwt_1),
      .xt_rsc_0_22_i_bdwt_2(xt_rsc_0_22_i_bdwt_2),
      .xt_rsc_0_22_i_bcwt_1(xt_rsc_0_22_i_bcwt_1),
      .xt_rsc_0_22_i_s_raddr(xt_rsc_0_22_i_s_raddr),
      .xt_rsc_0_22_i_s_raddr_core_sct(xt_rsc_0_22_i_s_re_core_sct),
      .xt_rsc_0_22_i_s_waddr(xt_rsc_0_22_i_s_waddr),
      .xt_rsc_0_22_i_s_waddr_core_sct(xt_rsc_0_22_i_s_we_core_sct),
      .xt_rsc_0_22_i_s_din(xt_rsc_0_22_i_s_din),
      .xt_rsc_0_22_i_s_dout(xt_rsc_0_22_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_21_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_21_i (
  clk, rst, xt_rsc_0_21_s_tdone, xt_rsc_0_21_tr_write_done, xt_rsc_0_21_RREADY, xt_rsc_0_21_RVALID,
      xt_rsc_0_21_RUSER, xt_rsc_0_21_RLAST, xt_rsc_0_21_RRESP, xt_rsc_0_21_RDATA,
      xt_rsc_0_21_RID, xt_rsc_0_21_ARREADY, xt_rsc_0_21_ARVALID, xt_rsc_0_21_ARUSER,
      xt_rsc_0_21_ARREGION, xt_rsc_0_21_ARQOS, xt_rsc_0_21_ARPROT, xt_rsc_0_21_ARCACHE,
      xt_rsc_0_21_ARLOCK, xt_rsc_0_21_ARBURST, xt_rsc_0_21_ARSIZE, xt_rsc_0_21_ARLEN,
      xt_rsc_0_21_ARADDR, xt_rsc_0_21_ARID, xt_rsc_0_21_BREADY, xt_rsc_0_21_BVALID,
      xt_rsc_0_21_BUSER, xt_rsc_0_21_BRESP, xt_rsc_0_21_BID, xt_rsc_0_21_WREADY,
      xt_rsc_0_21_WVALID, xt_rsc_0_21_WUSER, xt_rsc_0_21_WLAST, xt_rsc_0_21_WSTRB,
      xt_rsc_0_21_WDATA, xt_rsc_0_21_AWREADY, xt_rsc_0_21_AWVALID, xt_rsc_0_21_AWUSER,
      xt_rsc_0_21_AWREGION, xt_rsc_0_21_AWQOS, xt_rsc_0_21_AWPROT, xt_rsc_0_21_AWCACHE,
      xt_rsc_0_21_AWLOCK, xt_rsc_0_21_AWBURST, xt_rsc_0_21_AWSIZE, xt_rsc_0_21_AWLEN,
      xt_rsc_0_21_AWADDR, xt_rsc_0_21_AWID, core_wen, xt_rsc_0_21_i_oswt, xt_rsc_0_21_i_wen_comp,
      xt_rsc_0_21_i_oswt_1, xt_rsc_0_21_i_wen_comp_1, xt_rsc_0_21_i_s_raddr_core,
      xt_rsc_0_21_i_s_waddr_core, xt_rsc_0_21_i_s_din_mxwt, xt_rsc_0_21_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_21_s_tdone;
  input xt_rsc_0_21_tr_write_done;
  input xt_rsc_0_21_RREADY;
  output xt_rsc_0_21_RVALID;
  output xt_rsc_0_21_RUSER;
  output xt_rsc_0_21_RLAST;
  output [1:0] xt_rsc_0_21_RRESP;
  output [31:0] xt_rsc_0_21_RDATA;
  output xt_rsc_0_21_RID;
  output xt_rsc_0_21_ARREADY;
  input xt_rsc_0_21_ARVALID;
  input xt_rsc_0_21_ARUSER;
  input [3:0] xt_rsc_0_21_ARREGION;
  input [3:0] xt_rsc_0_21_ARQOS;
  input [2:0] xt_rsc_0_21_ARPROT;
  input [3:0] xt_rsc_0_21_ARCACHE;
  input xt_rsc_0_21_ARLOCK;
  input [1:0] xt_rsc_0_21_ARBURST;
  input [2:0] xt_rsc_0_21_ARSIZE;
  input [7:0] xt_rsc_0_21_ARLEN;
  input [11:0] xt_rsc_0_21_ARADDR;
  input xt_rsc_0_21_ARID;
  input xt_rsc_0_21_BREADY;
  output xt_rsc_0_21_BVALID;
  output xt_rsc_0_21_BUSER;
  output [1:0] xt_rsc_0_21_BRESP;
  output xt_rsc_0_21_BID;
  output xt_rsc_0_21_WREADY;
  input xt_rsc_0_21_WVALID;
  input xt_rsc_0_21_WUSER;
  input xt_rsc_0_21_WLAST;
  input [3:0] xt_rsc_0_21_WSTRB;
  input [31:0] xt_rsc_0_21_WDATA;
  output xt_rsc_0_21_AWREADY;
  input xt_rsc_0_21_AWVALID;
  input xt_rsc_0_21_AWUSER;
  input [3:0] xt_rsc_0_21_AWREGION;
  input [3:0] xt_rsc_0_21_AWQOS;
  input [2:0] xt_rsc_0_21_AWPROT;
  input [3:0] xt_rsc_0_21_AWCACHE;
  input xt_rsc_0_21_AWLOCK;
  input [1:0] xt_rsc_0_21_AWBURST;
  input [2:0] xt_rsc_0_21_AWSIZE;
  input [7:0] xt_rsc_0_21_AWLEN;
  input [11:0] xt_rsc_0_21_AWADDR;
  input xt_rsc_0_21_AWID;
  input core_wen;
  input xt_rsc_0_21_i_oswt;
  output xt_rsc_0_21_i_wen_comp;
  input xt_rsc_0_21_i_oswt_1;
  output xt_rsc_0_21_i_wen_comp_1;
  input [3:0] xt_rsc_0_21_i_s_raddr_core;
  input [3:0] xt_rsc_0_21_i_s_waddr_core;
  output [31:0] xt_rsc_0_21_i_s_din_mxwt;
  input [31:0] xt_rsc_0_21_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_21_i_biwt;
  wire xt_rsc_0_21_i_bdwt;
  wire xt_rsc_0_21_i_bcwt;
  wire xt_rsc_0_21_i_s_re_core_sct;
  wire xt_rsc_0_21_i_biwt_1;
  wire xt_rsc_0_21_i_bdwt_2;
  wire xt_rsc_0_21_i_bcwt_1;
  wire xt_rsc_0_21_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_21_i_s_raddr;
  wire [3:0] xt_rsc_0_21_i_s_waddr;
  wire [31:0] xt_rsc_0_21_i_s_din;
  wire [31:0] xt_rsc_0_21_i_s_dout;
  wire xt_rsc_0_21_i_s_rrdy;
  wire xt_rsc_0_21_i_s_wrdy;
  wire xt_rsc_0_21_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_21_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_21_AWID),
      .AWADDR(xt_rsc_0_21_AWADDR),
      .AWLEN(xt_rsc_0_21_AWLEN),
      .AWSIZE(xt_rsc_0_21_AWSIZE),
      .AWBURST(xt_rsc_0_21_AWBURST),
      .AWLOCK(xt_rsc_0_21_AWLOCK),
      .AWCACHE(xt_rsc_0_21_AWCACHE),
      .AWPROT(xt_rsc_0_21_AWPROT),
      .AWQOS(xt_rsc_0_21_AWQOS),
      .AWREGION(xt_rsc_0_21_AWREGION),
      .AWUSER(xt_rsc_0_21_AWUSER),
      .AWVALID(xt_rsc_0_21_AWVALID),
      .AWREADY(xt_rsc_0_21_AWREADY),
      .WDATA(xt_rsc_0_21_WDATA),
      .WSTRB(xt_rsc_0_21_WSTRB),
      .WLAST(xt_rsc_0_21_WLAST),
      .WUSER(xt_rsc_0_21_WUSER),
      .WVALID(xt_rsc_0_21_WVALID),
      .WREADY(xt_rsc_0_21_WREADY),
      .BID(xt_rsc_0_21_BID),
      .BRESP(xt_rsc_0_21_BRESP),
      .BUSER(xt_rsc_0_21_BUSER),
      .BVALID(xt_rsc_0_21_BVALID),
      .BREADY(xt_rsc_0_21_BREADY),
      .ARID(xt_rsc_0_21_ARID),
      .ARADDR(xt_rsc_0_21_ARADDR),
      .ARLEN(xt_rsc_0_21_ARLEN),
      .ARSIZE(xt_rsc_0_21_ARSIZE),
      .ARBURST(xt_rsc_0_21_ARBURST),
      .ARLOCK(xt_rsc_0_21_ARLOCK),
      .ARCACHE(xt_rsc_0_21_ARCACHE),
      .ARPROT(xt_rsc_0_21_ARPROT),
      .ARQOS(xt_rsc_0_21_ARQOS),
      .ARREGION(xt_rsc_0_21_ARREGION),
      .ARUSER(xt_rsc_0_21_ARUSER),
      .ARVALID(xt_rsc_0_21_ARVALID),
      .ARREADY(xt_rsc_0_21_ARREADY),
      .RID(xt_rsc_0_21_RID),
      .RDATA(xt_rsc_0_21_RDATA),
      .RRESP(xt_rsc_0_21_RRESP),
      .RLAST(xt_rsc_0_21_RLAST),
      .RUSER(xt_rsc_0_21_RUSER),
      .RVALID(xt_rsc_0_21_RVALID),
      .RREADY(xt_rsc_0_21_RREADY),
      .s_re(xt_rsc_0_21_i_s_re_core_sct),
      .s_we(xt_rsc_0_21_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_21_i_s_raddr),
      .s_waddr(xt_rsc_0_21_i_s_waddr),
      .s_din(xt_rsc_0_21_i_s_din),
      .s_dout(xt_rsc_0_21_i_s_dout),
      .s_rrdy(xt_rsc_0_21_i_s_rrdy),
      .s_wrdy(xt_rsc_0_21_i_s_wrdy),
      .is_idle(xt_rsc_0_21_is_idle_1),
      .tr_write_done(xt_rsc_0_21_tr_write_done),
      .s_tdone(xt_rsc_0_21_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_21_i_xt_rsc_0_21_wait_ctrl peaseNTT_core_xt_rsc_0_21_i_xt_rsc_0_21_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_21_i_oswt(xt_rsc_0_21_i_oswt),
      .xt_rsc_0_21_i_oswt_1(xt_rsc_0_21_i_oswt_1),
      .xt_rsc_0_21_i_biwt(xt_rsc_0_21_i_biwt),
      .xt_rsc_0_21_i_bdwt(xt_rsc_0_21_i_bdwt),
      .xt_rsc_0_21_i_bcwt(xt_rsc_0_21_i_bcwt),
      .xt_rsc_0_21_i_s_re_core_sct(xt_rsc_0_21_i_s_re_core_sct),
      .xt_rsc_0_21_i_biwt_1(xt_rsc_0_21_i_biwt_1),
      .xt_rsc_0_21_i_bdwt_2(xt_rsc_0_21_i_bdwt_2),
      .xt_rsc_0_21_i_bcwt_1(xt_rsc_0_21_i_bcwt_1),
      .xt_rsc_0_21_i_s_we_core_sct(xt_rsc_0_21_i_s_we_core_sct),
      .xt_rsc_0_21_i_s_rrdy(xt_rsc_0_21_i_s_rrdy),
      .xt_rsc_0_21_i_s_wrdy(xt_rsc_0_21_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_21_i_xt_rsc_0_21_wait_dp peaseNTT_core_xt_rsc_0_21_i_xt_rsc_0_21_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_21_i_oswt(xt_rsc_0_21_i_oswt),
      .xt_rsc_0_21_i_wen_comp(xt_rsc_0_21_i_wen_comp),
      .xt_rsc_0_21_i_oswt_1(xt_rsc_0_21_i_oswt_1),
      .xt_rsc_0_21_i_wen_comp_1(xt_rsc_0_21_i_wen_comp_1),
      .xt_rsc_0_21_i_s_raddr_core(xt_rsc_0_21_i_s_raddr_core),
      .xt_rsc_0_21_i_s_waddr_core(xt_rsc_0_21_i_s_waddr_core),
      .xt_rsc_0_21_i_s_din_mxwt(xt_rsc_0_21_i_s_din_mxwt),
      .xt_rsc_0_21_i_s_dout_core(xt_rsc_0_21_i_s_dout_core),
      .xt_rsc_0_21_i_biwt(xt_rsc_0_21_i_biwt),
      .xt_rsc_0_21_i_bdwt(xt_rsc_0_21_i_bdwt),
      .xt_rsc_0_21_i_bcwt(xt_rsc_0_21_i_bcwt),
      .xt_rsc_0_21_i_biwt_1(xt_rsc_0_21_i_biwt_1),
      .xt_rsc_0_21_i_bdwt_2(xt_rsc_0_21_i_bdwt_2),
      .xt_rsc_0_21_i_bcwt_1(xt_rsc_0_21_i_bcwt_1),
      .xt_rsc_0_21_i_s_raddr(xt_rsc_0_21_i_s_raddr),
      .xt_rsc_0_21_i_s_raddr_core_sct(xt_rsc_0_21_i_s_re_core_sct),
      .xt_rsc_0_21_i_s_waddr(xt_rsc_0_21_i_s_waddr),
      .xt_rsc_0_21_i_s_waddr_core_sct(xt_rsc_0_21_i_s_we_core_sct),
      .xt_rsc_0_21_i_s_din(xt_rsc_0_21_i_s_din),
      .xt_rsc_0_21_i_s_dout(xt_rsc_0_21_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_20_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_20_i (
  clk, rst, xt_rsc_0_20_s_tdone, xt_rsc_0_20_tr_write_done, xt_rsc_0_20_RREADY, xt_rsc_0_20_RVALID,
      xt_rsc_0_20_RUSER, xt_rsc_0_20_RLAST, xt_rsc_0_20_RRESP, xt_rsc_0_20_RDATA,
      xt_rsc_0_20_RID, xt_rsc_0_20_ARREADY, xt_rsc_0_20_ARVALID, xt_rsc_0_20_ARUSER,
      xt_rsc_0_20_ARREGION, xt_rsc_0_20_ARQOS, xt_rsc_0_20_ARPROT, xt_rsc_0_20_ARCACHE,
      xt_rsc_0_20_ARLOCK, xt_rsc_0_20_ARBURST, xt_rsc_0_20_ARSIZE, xt_rsc_0_20_ARLEN,
      xt_rsc_0_20_ARADDR, xt_rsc_0_20_ARID, xt_rsc_0_20_BREADY, xt_rsc_0_20_BVALID,
      xt_rsc_0_20_BUSER, xt_rsc_0_20_BRESP, xt_rsc_0_20_BID, xt_rsc_0_20_WREADY,
      xt_rsc_0_20_WVALID, xt_rsc_0_20_WUSER, xt_rsc_0_20_WLAST, xt_rsc_0_20_WSTRB,
      xt_rsc_0_20_WDATA, xt_rsc_0_20_AWREADY, xt_rsc_0_20_AWVALID, xt_rsc_0_20_AWUSER,
      xt_rsc_0_20_AWREGION, xt_rsc_0_20_AWQOS, xt_rsc_0_20_AWPROT, xt_rsc_0_20_AWCACHE,
      xt_rsc_0_20_AWLOCK, xt_rsc_0_20_AWBURST, xt_rsc_0_20_AWSIZE, xt_rsc_0_20_AWLEN,
      xt_rsc_0_20_AWADDR, xt_rsc_0_20_AWID, core_wen, xt_rsc_0_20_i_oswt, xt_rsc_0_20_i_wen_comp,
      xt_rsc_0_20_i_oswt_1, xt_rsc_0_20_i_wen_comp_1, xt_rsc_0_20_i_s_raddr_core,
      xt_rsc_0_20_i_s_waddr_core, xt_rsc_0_20_i_s_din_mxwt, xt_rsc_0_20_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_20_s_tdone;
  input xt_rsc_0_20_tr_write_done;
  input xt_rsc_0_20_RREADY;
  output xt_rsc_0_20_RVALID;
  output xt_rsc_0_20_RUSER;
  output xt_rsc_0_20_RLAST;
  output [1:0] xt_rsc_0_20_RRESP;
  output [31:0] xt_rsc_0_20_RDATA;
  output xt_rsc_0_20_RID;
  output xt_rsc_0_20_ARREADY;
  input xt_rsc_0_20_ARVALID;
  input xt_rsc_0_20_ARUSER;
  input [3:0] xt_rsc_0_20_ARREGION;
  input [3:0] xt_rsc_0_20_ARQOS;
  input [2:0] xt_rsc_0_20_ARPROT;
  input [3:0] xt_rsc_0_20_ARCACHE;
  input xt_rsc_0_20_ARLOCK;
  input [1:0] xt_rsc_0_20_ARBURST;
  input [2:0] xt_rsc_0_20_ARSIZE;
  input [7:0] xt_rsc_0_20_ARLEN;
  input [11:0] xt_rsc_0_20_ARADDR;
  input xt_rsc_0_20_ARID;
  input xt_rsc_0_20_BREADY;
  output xt_rsc_0_20_BVALID;
  output xt_rsc_0_20_BUSER;
  output [1:0] xt_rsc_0_20_BRESP;
  output xt_rsc_0_20_BID;
  output xt_rsc_0_20_WREADY;
  input xt_rsc_0_20_WVALID;
  input xt_rsc_0_20_WUSER;
  input xt_rsc_0_20_WLAST;
  input [3:0] xt_rsc_0_20_WSTRB;
  input [31:0] xt_rsc_0_20_WDATA;
  output xt_rsc_0_20_AWREADY;
  input xt_rsc_0_20_AWVALID;
  input xt_rsc_0_20_AWUSER;
  input [3:0] xt_rsc_0_20_AWREGION;
  input [3:0] xt_rsc_0_20_AWQOS;
  input [2:0] xt_rsc_0_20_AWPROT;
  input [3:0] xt_rsc_0_20_AWCACHE;
  input xt_rsc_0_20_AWLOCK;
  input [1:0] xt_rsc_0_20_AWBURST;
  input [2:0] xt_rsc_0_20_AWSIZE;
  input [7:0] xt_rsc_0_20_AWLEN;
  input [11:0] xt_rsc_0_20_AWADDR;
  input xt_rsc_0_20_AWID;
  input core_wen;
  input xt_rsc_0_20_i_oswt;
  output xt_rsc_0_20_i_wen_comp;
  input xt_rsc_0_20_i_oswt_1;
  output xt_rsc_0_20_i_wen_comp_1;
  input [3:0] xt_rsc_0_20_i_s_raddr_core;
  input [3:0] xt_rsc_0_20_i_s_waddr_core;
  output [31:0] xt_rsc_0_20_i_s_din_mxwt;
  input [31:0] xt_rsc_0_20_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_20_i_biwt;
  wire xt_rsc_0_20_i_bdwt;
  wire xt_rsc_0_20_i_bcwt;
  wire xt_rsc_0_20_i_s_re_core_sct;
  wire xt_rsc_0_20_i_biwt_1;
  wire xt_rsc_0_20_i_bdwt_2;
  wire xt_rsc_0_20_i_bcwt_1;
  wire xt_rsc_0_20_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_20_i_s_raddr;
  wire [3:0] xt_rsc_0_20_i_s_waddr;
  wire [31:0] xt_rsc_0_20_i_s_din;
  wire [31:0] xt_rsc_0_20_i_s_dout;
  wire xt_rsc_0_20_i_s_rrdy;
  wire xt_rsc_0_20_i_s_wrdy;
  wire xt_rsc_0_20_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_20_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_20_AWID),
      .AWADDR(xt_rsc_0_20_AWADDR),
      .AWLEN(xt_rsc_0_20_AWLEN),
      .AWSIZE(xt_rsc_0_20_AWSIZE),
      .AWBURST(xt_rsc_0_20_AWBURST),
      .AWLOCK(xt_rsc_0_20_AWLOCK),
      .AWCACHE(xt_rsc_0_20_AWCACHE),
      .AWPROT(xt_rsc_0_20_AWPROT),
      .AWQOS(xt_rsc_0_20_AWQOS),
      .AWREGION(xt_rsc_0_20_AWREGION),
      .AWUSER(xt_rsc_0_20_AWUSER),
      .AWVALID(xt_rsc_0_20_AWVALID),
      .AWREADY(xt_rsc_0_20_AWREADY),
      .WDATA(xt_rsc_0_20_WDATA),
      .WSTRB(xt_rsc_0_20_WSTRB),
      .WLAST(xt_rsc_0_20_WLAST),
      .WUSER(xt_rsc_0_20_WUSER),
      .WVALID(xt_rsc_0_20_WVALID),
      .WREADY(xt_rsc_0_20_WREADY),
      .BID(xt_rsc_0_20_BID),
      .BRESP(xt_rsc_0_20_BRESP),
      .BUSER(xt_rsc_0_20_BUSER),
      .BVALID(xt_rsc_0_20_BVALID),
      .BREADY(xt_rsc_0_20_BREADY),
      .ARID(xt_rsc_0_20_ARID),
      .ARADDR(xt_rsc_0_20_ARADDR),
      .ARLEN(xt_rsc_0_20_ARLEN),
      .ARSIZE(xt_rsc_0_20_ARSIZE),
      .ARBURST(xt_rsc_0_20_ARBURST),
      .ARLOCK(xt_rsc_0_20_ARLOCK),
      .ARCACHE(xt_rsc_0_20_ARCACHE),
      .ARPROT(xt_rsc_0_20_ARPROT),
      .ARQOS(xt_rsc_0_20_ARQOS),
      .ARREGION(xt_rsc_0_20_ARREGION),
      .ARUSER(xt_rsc_0_20_ARUSER),
      .ARVALID(xt_rsc_0_20_ARVALID),
      .ARREADY(xt_rsc_0_20_ARREADY),
      .RID(xt_rsc_0_20_RID),
      .RDATA(xt_rsc_0_20_RDATA),
      .RRESP(xt_rsc_0_20_RRESP),
      .RLAST(xt_rsc_0_20_RLAST),
      .RUSER(xt_rsc_0_20_RUSER),
      .RVALID(xt_rsc_0_20_RVALID),
      .RREADY(xt_rsc_0_20_RREADY),
      .s_re(xt_rsc_0_20_i_s_re_core_sct),
      .s_we(xt_rsc_0_20_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_20_i_s_raddr),
      .s_waddr(xt_rsc_0_20_i_s_waddr),
      .s_din(xt_rsc_0_20_i_s_din),
      .s_dout(xt_rsc_0_20_i_s_dout),
      .s_rrdy(xt_rsc_0_20_i_s_rrdy),
      .s_wrdy(xt_rsc_0_20_i_s_wrdy),
      .is_idle(xt_rsc_0_20_is_idle_1),
      .tr_write_done(xt_rsc_0_20_tr_write_done),
      .s_tdone(xt_rsc_0_20_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_20_i_xt_rsc_0_20_wait_ctrl peaseNTT_core_xt_rsc_0_20_i_xt_rsc_0_20_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_20_i_oswt(xt_rsc_0_20_i_oswt),
      .xt_rsc_0_20_i_oswt_1(xt_rsc_0_20_i_oswt_1),
      .xt_rsc_0_20_i_biwt(xt_rsc_0_20_i_biwt),
      .xt_rsc_0_20_i_bdwt(xt_rsc_0_20_i_bdwt),
      .xt_rsc_0_20_i_bcwt(xt_rsc_0_20_i_bcwt),
      .xt_rsc_0_20_i_s_re_core_sct(xt_rsc_0_20_i_s_re_core_sct),
      .xt_rsc_0_20_i_biwt_1(xt_rsc_0_20_i_biwt_1),
      .xt_rsc_0_20_i_bdwt_2(xt_rsc_0_20_i_bdwt_2),
      .xt_rsc_0_20_i_bcwt_1(xt_rsc_0_20_i_bcwt_1),
      .xt_rsc_0_20_i_s_we_core_sct(xt_rsc_0_20_i_s_we_core_sct),
      .xt_rsc_0_20_i_s_rrdy(xt_rsc_0_20_i_s_rrdy),
      .xt_rsc_0_20_i_s_wrdy(xt_rsc_0_20_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_20_i_xt_rsc_0_20_wait_dp peaseNTT_core_xt_rsc_0_20_i_xt_rsc_0_20_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_20_i_oswt(xt_rsc_0_20_i_oswt),
      .xt_rsc_0_20_i_wen_comp(xt_rsc_0_20_i_wen_comp),
      .xt_rsc_0_20_i_oswt_1(xt_rsc_0_20_i_oswt_1),
      .xt_rsc_0_20_i_wen_comp_1(xt_rsc_0_20_i_wen_comp_1),
      .xt_rsc_0_20_i_s_raddr_core(xt_rsc_0_20_i_s_raddr_core),
      .xt_rsc_0_20_i_s_waddr_core(xt_rsc_0_20_i_s_waddr_core),
      .xt_rsc_0_20_i_s_din_mxwt(xt_rsc_0_20_i_s_din_mxwt),
      .xt_rsc_0_20_i_s_dout_core(xt_rsc_0_20_i_s_dout_core),
      .xt_rsc_0_20_i_biwt(xt_rsc_0_20_i_biwt),
      .xt_rsc_0_20_i_bdwt(xt_rsc_0_20_i_bdwt),
      .xt_rsc_0_20_i_bcwt(xt_rsc_0_20_i_bcwt),
      .xt_rsc_0_20_i_biwt_1(xt_rsc_0_20_i_biwt_1),
      .xt_rsc_0_20_i_bdwt_2(xt_rsc_0_20_i_bdwt_2),
      .xt_rsc_0_20_i_bcwt_1(xt_rsc_0_20_i_bcwt_1),
      .xt_rsc_0_20_i_s_raddr(xt_rsc_0_20_i_s_raddr),
      .xt_rsc_0_20_i_s_raddr_core_sct(xt_rsc_0_20_i_s_re_core_sct),
      .xt_rsc_0_20_i_s_waddr(xt_rsc_0_20_i_s_waddr),
      .xt_rsc_0_20_i_s_waddr_core_sct(xt_rsc_0_20_i_s_we_core_sct),
      .xt_rsc_0_20_i_s_din(xt_rsc_0_20_i_s_din),
      .xt_rsc_0_20_i_s_dout(xt_rsc_0_20_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_19_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_19_i (
  clk, rst, xt_rsc_0_19_s_tdone, xt_rsc_0_19_tr_write_done, xt_rsc_0_19_RREADY, xt_rsc_0_19_RVALID,
      xt_rsc_0_19_RUSER, xt_rsc_0_19_RLAST, xt_rsc_0_19_RRESP, xt_rsc_0_19_RDATA,
      xt_rsc_0_19_RID, xt_rsc_0_19_ARREADY, xt_rsc_0_19_ARVALID, xt_rsc_0_19_ARUSER,
      xt_rsc_0_19_ARREGION, xt_rsc_0_19_ARQOS, xt_rsc_0_19_ARPROT, xt_rsc_0_19_ARCACHE,
      xt_rsc_0_19_ARLOCK, xt_rsc_0_19_ARBURST, xt_rsc_0_19_ARSIZE, xt_rsc_0_19_ARLEN,
      xt_rsc_0_19_ARADDR, xt_rsc_0_19_ARID, xt_rsc_0_19_BREADY, xt_rsc_0_19_BVALID,
      xt_rsc_0_19_BUSER, xt_rsc_0_19_BRESP, xt_rsc_0_19_BID, xt_rsc_0_19_WREADY,
      xt_rsc_0_19_WVALID, xt_rsc_0_19_WUSER, xt_rsc_0_19_WLAST, xt_rsc_0_19_WSTRB,
      xt_rsc_0_19_WDATA, xt_rsc_0_19_AWREADY, xt_rsc_0_19_AWVALID, xt_rsc_0_19_AWUSER,
      xt_rsc_0_19_AWREGION, xt_rsc_0_19_AWQOS, xt_rsc_0_19_AWPROT, xt_rsc_0_19_AWCACHE,
      xt_rsc_0_19_AWLOCK, xt_rsc_0_19_AWBURST, xt_rsc_0_19_AWSIZE, xt_rsc_0_19_AWLEN,
      xt_rsc_0_19_AWADDR, xt_rsc_0_19_AWID, core_wen, xt_rsc_0_19_i_oswt, xt_rsc_0_19_i_wen_comp,
      xt_rsc_0_19_i_oswt_1, xt_rsc_0_19_i_wen_comp_1, xt_rsc_0_19_i_s_raddr_core,
      xt_rsc_0_19_i_s_waddr_core, xt_rsc_0_19_i_s_din_mxwt, xt_rsc_0_19_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_19_s_tdone;
  input xt_rsc_0_19_tr_write_done;
  input xt_rsc_0_19_RREADY;
  output xt_rsc_0_19_RVALID;
  output xt_rsc_0_19_RUSER;
  output xt_rsc_0_19_RLAST;
  output [1:0] xt_rsc_0_19_RRESP;
  output [31:0] xt_rsc_0_19_RDATA;
  output xt_rsc_0_19_RID;
  output xt_rsc_0_19_ARREADY;
  input xt_rsc_0_19_ARVALID;
  input xt_rsc_0_19_ARUSER;
  input [3:0] xt_rsc_0_19_ARREGION;
  input [3:0] xt_rsc_0_19_ARQOS;
  input [2:0] xt_rsc_0_19_ARPROT;
  input [3:0] xt_rsc_0_19_ARCACHE;
  input xt_rsc_0_19_ARLOCK;
  input [1:0] xt_rsc_0_19_ARBURST;
  input [2:0] xt_rsc_0_19_ARSIZE;
  input [7:0] xt_rsc_0_19_ARLEN;
  input [11:0] xt_rsc_0_19_ARADDR;
  input xt_rsc_0_19_ARID;
  input xt_rsc_0_19_BREADY;
  output xt_rsc_0_19_BVALID;
  output xt_rsc_0_19_BUSER;
  output [1:0] xt_rsc_0_19_BRESP;
  output xt_rsc_0_19_BID;
  output xt_rsc_0_19_WREADY;
  input xt_rsc_0_19_WVALID;
  input xt_rsc_0_19_WUSER;
  input xt_rsc_0_19_WLAST;
  input [3:0] xt_rsc_0_19_WSTRB;
  input [31:0] xt_rsc_0_19_WDATA;
  output xt_rsc_0_19_AWREADY;
  input xt_rsc_0_19_AWVALID;
  input xt_rsc_0_19_AWUSER;
  input [3:0] xt_rsc_0_19_AWREGION;
  input [3:0] xt_rsc_0_19_AWQOS;
  input [2:0] xt_rsc_0_19_AWPROT;
  input [3:0] xt_rsc_0_19_AWCACHE;
  input xt_rsc_0_19_AWLOCK;
  input [1:0] xt_rsc_0_19_AWBURST;
  input [2:0] xt_rsc_0_19_AWSIZE;
  input [7:0] xt_rsc_0_19_AWLEN;
  input [11:0] xt_rsc_0_19_AWADDR;
  input xt_rsc_0_19_AWID;
  input core_wen;
  input xt_rsc_0_19_i_oswt;
  output xt_rsc_0_19_i_wen_comp;
  input xt_rsc_0_19_i_oswt_1;
  output xt_rsc_0_19_i_wen_comp_1;
  input [3:0] xt_rsc_0_19_i_s_raddr_core;
  input [3:0] xt_rsc_0_19_i_s_waddr_core;
  output [31:0] xt_rsc_0_19_i_s_din_mxwt;
  input [31:0] xt_rsc_0_19_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_19_i_biwt;
  wire xt_rsc_0_19_i_bdwt;
  wire xt_rsc_0_19_i_bcwt;
  wire xt_rsc_0_19_i_s_re_core_sct;
  wire xt_rsc_0_19_i_biwt_1;
  wire xt_rsc_0_19_i_bdwt_2;
  wire xt_rsc_0_19_i_bcwt_1;
  wire xt_rsc_0_19_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_19_i_s_raddr;
  wire [3:0] xt_rsc_0_19_i_s_waddr;
  wire [31:0] xt_rsc_0_19_i_s_din;
  wire [31:0] xt_rsc_0_19_i_s_dout;
  wire xt_rsc_0_19_i_s_rrdy;
  wire xt_rsc_0_19_i_s_wrdy;
  wire xt_rsc_0_19_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_19_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_19_AWID),
      .AWADDR(xt_rsc_0_19_AWADDR),
      .AWLEN(xt_rsc_0_19_AWLEN),
      .AWSIZE(xt_rsc_0_19_AWSIZE),
      .AWBURST(xt_rsc_0_19_AWBURST),
      .AWLOCK(xt_rsc_0_19_AWLOCK),
      .AWCACHE(xt_rsc_0_19_AWCACHE),
      .AWPROT(xt_rsc_0_19_AWPROT),
      .AWQOS(xt_rsc_0_19_AWQOS),
      .AWREGION(xt_rsc_0_19_AWREGION),
      .AWUSER(xt_rsc_0_19_AWUSER),
      .AWVALID(xt_rsc_0_19_AWVALID),
      .AWREADY(xt_rsc_0_19_AWREADY),
      .WDATA(xt_rsc_0_19_WDATA),
      .WSTRB(xt_rsc_0_19_WSTRB),
      .WLAST(xt_rsc_0_19_WLAST),
      .WUSER(xt_rsc_0_19_WUSER),
      .WVALID(xt_rsc_0_19_WVALID),
      .WREADY(xt_rsc_0_19_WREADY),
      .BID(xt_rsc_0_19_BID),
      .BRESP(xt_rsc_0_19_BRESP),
      .BUSER(xt_rsc_0_19_BUSER),
      .BVALID(xt_rsc_0_19_BVALID),
      .BREADY(xt_rsc_0_19_BREADY),
      .ARID(xt_rsc_0_19_ARID),
      .ARADDR(xt_rsc_0_19_ARADDR),
      .ARLEN(xt_rsc_0_19_ARLEN),
      .ARSIZE(xt_rsc_0_19_ARSIZE),
      .ARBURST(xt_rsc_0_19_ARBURST),
      .ARLOCK(xt_rsc_0_19_ARLOCK),
      .ARCACHE(xt_rsc_0_19_ARCACHE),
      .ARPROT(xt_rsc_0_19_ARPROT),
      .ARQOS(xt_rsc_0_19_ARQOS),
      .ARREGION(xt_rsc_0_19_ARREGION),
      .ARUSER(xt_rsc_0_19_ARUSER),
      .ARVALID(xt_rsc_0_19_ARVALID),
      .ARREADY(xt_rsc_0_19_ARREADY),
      .RID(xt_rsc_0_19_RID),
      .RDATA(xt_rsc_0_19_RDATA),
      .RRESP(xt_rsc_0_19_RRESP),
      .RLAST(xt_rsc_0_19_RLAST),
      .RUSER(xt_rsc_0_19_RUSER),
      .RVALID(xt_rsc_0_19_RVALID),
      .RREADY(xt_rsc_0_19_RREADY),
      .s_re(xt_rsc_0_19_i_s_re_core_sct),
      .s_we(xt_rsc_0_19_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_19_i_s_raddr),
      .s_waddr(xt_rsc_0_19_i_s_waddr),
      .s_din(xt_rsc_0_19_i_s_din),
      .s_dout(xt_rsc_0_19_i_s_dout),
      .s_rrdy(xt_rsc_0_19_i_s_rrdy),
      .s_wrdy(xt_rsc_0_19_i_s_wrdy),
      .is_idle(xt_rsc_0_19_is_idle_1),
      .tr_write_done(xt_rsc_0_19_tr_write_done),
      .s_tdone(xt_rsc_0_19_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_19_i_xt_rsc_0_19_wait_ctrl peaseNTT_core_xt_rsc_0_19_i_xt_rsc_0_19_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_19_i_oswt(xt_rsc_0_19_i_oswt),
      .xt_rsc_0_19_i_oswt_1(xt_rsc_0_19_i_oswt_1),
      .xt_rsc_0_19_i_biwt(xt_rsc_0_19_i_biwt),
      .xt_rsc_0_19_i_bdwt(xt_rsc_0_19_i_bdwt),
      .xt_rsc_0_19_i_bcwt(xt_rsc_0_19_i_bcwt),
      .xt_rsc_0_19_i_s_re_core_sct(xt_rsc_0_19_i_s_re_core_sct),
      .xt_rsc_0_19_i_biwt_1(xt_rsc_0_19_i_biwt_1),
      .xt_rsc_0_19_i_bdwt_2(xt_rsc_0_19_i_bdwt_2),
      .xt_rsc_0_19_i_bcwt_1(xt_rsc_0_19_i_bcwt_1),
      .xt_rsc_0_19_i_s_we_core_sct(xt_rsc_0_19_i_s_we_core_sct),
      .xt_rsc_0_19_i_s_rrdy(xt_rsc_0_19_i_s_rrdy),
      .xt_rsc_0_19_i_s_wrdy(xt_rsc_0_19_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_19_i_xt_rsc_0_19_wait_dp peaseNTT_core_xt_rsc_0_19_i_xt_rsc_0_19_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_19_i_oswt(xt_rsc_0_19_i_oswt),
      .xt_rsc_0_19_i_wen_comp(xt_rsc_0_19_i_wen_comp),
      .xt_rsc_0_19_i_oswt_1(xt_rsc_0_19_i_oswt_1),
      .xt_rsc_0_19_i_wen_comp_1(xt_rsc_0_19_i_wen_comp_1),
      .xt_rsc_0_19_i_s_raddr_core(xt_rsc_0_19_i_s_raddr_core),
      .xt_rsc_0_19_i_s_waddr_core(xt_rsc_0_19_i_s_waddr_core),
      .xt_rsc_0_19_i_s_din_mxwt(xt_rsc_0_19_i_s_din_mxwt),
      .xt_rsc_0_19_i_s_dout_core(xt_rsc_0_19_i_s_dout_core),
      .xt_rsc_0_19_i_biwt(xt_rsc_0_19_i_biwt),
      .xt_rsc_0_19_i_bdwt(xt_rsc_0_19_i_bdwt),
      .xt_rsc_0_19_i_bcwt(xt_rsc_0_19_i_bcwt),
      .xt_rsc_0_19_i_biwt_1(xt_rsc_0_19_i_biwt_1),
      .xt_rsc_0_19_i_bdwt_2(xt_rsc_0_19_i_bdwt_2),
      .xt_rsc_0_19_i_bcwt_1(xt_rsc_0_19_i_bcwt_1),
      .xt_rsc_0_19_i_s_raddr(xt_rsc_0_19_i_s_raddr),
      .xt_rsc_0_19_i_s_raddr_core_sct(xt_rsc_0_19_i_s_re_core_sct),
      .xt_rsc_0_19_i_s_waddr(xt_rsc_0_19_i_s_waddr),
      .xt_rsc_0_19_i_s_waddr_core_sct(xt_rsc_0_19_i_s_we_core_sct),
      .xt_rsc_0_19_i_s_din(xt_rsc_0_19_i_s_din),
      .xt_rsc_0_19_i_s_dout(xt_rsc_0_19_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_18_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_18_i (
  clk, rst, xt_rsc_0_18_s_tdone, xt_rsc_0_18_tr_write_done, xt_rsc_0_18_RREADY, xt_rsc_0_18_RVALID,
      xt_rsc_0_18_RUSER, xt_rsc_0_18_RLAST, xt_rsc_0_18_RRESP, xt_rsc_0_18_RDATA,
      xt_rsc_0_18_RID, xt_rsc_0_18_ARREADY, xt_rsc_0_18_ARVALID, xt_rsc_0_18_ARUSER,
      xt_rsc_0_18_ARREGION, xt_rsc_0_18_ARQOS, xt_rsc_0_18_ARPROT, xt_rsc_0_18_ARCACHE,
      xt_rsc_0_18_ARLOCK, xt_rsc_0_18_ARBURST, xt_rsc_0_18_ARSIZE, xt_rsc_0_18_ARLEN,
      xt_rsc_0_18_ARADDR, xt_rsc_0_18_ARID, xt_rsc_0_18_BREADY, xt_rsc_0_18_BVALID,
      xt_rsc_0_18_BUSER, xt_rsc_0_18_BRESP, xt_rsc_0_18_BID, xt_rsc_0_18_WREADY,
      xt_rsc_0_18_WVALID, xt_rsc_0_18_WUSER, xt_rsc_0_18_WLAST, xt_rsc_0_18_WSTRB,
      xt_rsc_0_18_WDATA, xt_rsc_0_18_AWREADY, xt_rsc_0_18_AWVALID, xt_rsc_0_18_AWUSER,
      xt_rsc_0_18_AWREGION, xt_rsc_0_18_AWQOS, xt_rsc_0_18_AWPROT, xt_rsc_0_18_AWCACHE,
      xt_rsc_0_18_AWLOCK, xt_rsc_0_18_AWBURST, xt_rsc_0_18_AWSIZE, xt_rsc_0_18_AWLEN,
      xt_rsc_0_18_AWADDR, xt_rsc_0_18_AWID, core_wen, xt_rsc_0_18_i_oswt, xt_rsc_0_18_i_wen_comp,
      xt_rsc_0_18_i_oswt_1, xt_rsc_0_18_i_wen_comp_1, xt_rsc_0_18_i_s_raddr_core,
      xt_rsc_0_18_i_s_waddr_core, xt_rsc_0_18_i_s_din_mxwt, xt_rsc_0_18_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_18_s_tdone;
  input xt_rsc_0_18_tr_write_done;
  input xt_rsc_0_18_RREADY;
  output xt_rsc_0_18_RVALID;
  output xt_rsc_0_18_RUSER;
  output xt_rsc_0_18_RLAST;
  output [1:0] xt_rsc_0_18_RRESP;
  output [31:0] xt_rsc_0_18_RDATA;
  output xt_rsc_0_18_RID;
  output xt_rsc_0_18_ARREADY;
  input xt_rsc_0_18_ARVALID;
  input xt_rsc_0_18_ARUSER;
  input [3:0] xt_rsc_0_18_ARREGION;
  input [3:0] xt_rsc_0_18_ARQOS;
  input [2:0] xt_rsc_0_18_ARPROT;
  input [3:0] xt_rsc_0_18_ARCACHE;
  input xt_rsc_0_18_ARLOCK;
  input [1:0] xt_rsc_0_18_ARBURST;
  input [2:0] xt_rsc_0_18_ARSIZE;
  input [7:0] xt_rsc_0_18_ARLEN;
  input [11:0] xt_rsc_0_18_ARADDR;
  input xt_rsc_0_18_ARID;
  input xt_rsc_0_18_BREADY;
  output xt_rsc_0_18_BVALID;
  output xt_rsc_0_18_BUSER;
  output [1:0] xt_rsc_0_18_BRESP;
  output xt_rsc_0_18_BID;
  output xt_rsc_0_18_WREADY;
  input xt_rsc_0_18_WVALID;
  input xt_rsc_0_18_WUSER;
  input xt_rsc_0_18_WLAST;
  input [3:0] xt_rsc_0_18_WSTRB;
  input [31:0] xt_rsc_0_18_WDATA;
  output xt_rsc_0_18_AWREADY;
  input xt_rsc_0_18_AWVALID;
  input xt_rsc_0_18_AWUSER;
  input [3:0] xt_rsc_0_18_AWREGION;
  input [3:0] xt_rsc_0_18_AWQOS;
  input [2:0] xt_rsc_0_18_AWPROT;
  input [3:0] xt_rsc_0_18_AWCACHE;
  input xt_rsc_0_18_AWLOCK;
  input [1:0] xt_rsc_0_18_AWBURST;
  input [2:0] xt_rsc_0_18_AWSIZE;
  input [7:0] xt_rsc_0_18_AWLEN;
  input [11:0] xt_rsc_0_18_AWADDR;
  input xt_rsc_0_18_AWID;
  input core_wen;
  input xt_rsc_0_18_i_oswt;
  output xt_rsc_0_18_i_wen_comp;
  input xt_rsc_0_18_i_oswt_1;
  output xt_rsc_0_18_i_wen_comp_1;
  input [3:0] xt_rsc_0_18_i_s_raddr_core;
  input [3:0] xt_rsc_0_18_i_s_waddr_core;
  output [31:0] xt_rsc_0_18_i_s_din_mxwt;
  input [31:0] xt_rsc_0_18_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_18_i_biwt;
  wire xt_rsc_0_18_i_bdwt;
  wire xt_rsc_0_18_i_bcwt;
  wire xt_rsc_0_18_i_s_re_core_sct;
  wire xt_rsc_0_18_i_biwt_1;
  wire xt_rsc_0_18_i_bdwt_2;
  wire xt_rsc_0_18_i_bcwt_1;
  wire xt_rsc_0_18_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_18_i_s_raddr;
  wire [3:0] xt_rsc_0_18_i_s_waddr;
  wire [31:0] xt_rsc_0_18_i_s_din;
  wire [31:0] xt_rsc_0_18_i_s_dout;
  wire xt_rsc_0_18_i_s_rrdy;
  wire xt_rsc_0_18_i_s_wrdy;
  wire xt_rsc_0_18_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_18_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_18_AWID),
      .AWADDR(xt_rsc_0_18_AWADDR),
      .AWLEN(xt_rsc_0_18_AWLEN),
      .AWSIZE(xt_rsc_0_18_AWSIZE),
      .AWBURST(xt_rsc_0_18_AWBURST),
      .AWLOCK(xt_rsc_0_18_AWLOCK),
      .AWCACHE(xt_rsc_0_18_AWCACHE),
      .AWPROT(xt_rsc_0_18_AWPROT),
      .AWQOS(xt_rsc_0_18_AWQOS),
      .AWREGION(xt_rsc_0_18_AWREGION),
      .AWUSER(xt_rsc_0_18_AWUSER),
      .AWVALID(xt_rsc_0_18_AWVALID),
      .AWREADY(xt_rsc_0_18_AWREADY),
      .WDATA(xt_rsc_0_18_WDATA),
      .WSTRB(xt_rsc_0_18_WSTRB),
      .WLAST(xt_rsc_0_18_WLAST),
      .WUSER(xt_rsc_0_18_WUSER),
      .WVALID(xt_rsc_0_18_WVALID),
      .WREADY(xt_rsc_0_18_WREADY),
      .BID(xt_rsc_0_18_BID),
      .BRESP(xt_rsc_0_18_BRESP),
      .BUSER(xt_rsc_0_18_BUSER),
      .BVALID(xt_rsc_0_18_BVALID),
      .BREADY(xt_rsc_0_18_BREADY),
      .ARID(xt_rsc_0_18_ARID),
      .ARADDR(xt_rsc_0_18_ARADDR),
      .ARLEN(xt_rsc_0_18_ARLEN),
      .ARSIZE(xt_rsc_0_18_ARSIZE),
      .ARBURST(xt_rsc_0_18_ARBURST),
      .ARLOCK(xt_rsc_0_18_ARLOCK),
      .ARCACHE(xt_rsc_0_18_ARCACHE),
      .ARPROT(xt_rsc_0_18_ARPROT),
      .ARQOS(xt_rsc_0_18_ARQOS),
      .ARREGION(xt_rsc_0_18_ARREGION),
      .ARUSER(xt_rsc_0_18_ARUSER),
      .ARVALID(xt_rsc_0_18_ARVALID),
      .ARREADY(xt_rsc_0_18_ARREADY),
      .RID(xt_rsc_0_18_RID),
      .RDATA(xt_rsc_0_18_RDATA),
      .RRESP(xt_rsc_0_18_RRESP),
      .RLAST(xt_rsc_0_18_RLAST),
      .RUSER(xt_rsc_0_18_RUSER),
      .RVALID(xt_rsc_0_18_RVALID),
      .RREADY(xt_rsc_0_18_RREADY),
      .s_re(xt_rsc_0_18_i_s_re_core_sct),
      .s_we(xt_rsc_0_18_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_18_i_s_raddr),
      .s_waddr(xt_rsc_0_18_i_s_waddr),
      .s_din(xt_rsc_0_18_i_s_din),
      .s_dout(xt_rsc_0_18_i_s_dout),
      .s_rrdy(xt_rsc_0_18_i_s_rrdy),
      .s_wrdy(xt_rsc_0_18_i_s_wrdy),
      .is_idle(xt_rsc_0_18_is_idle_1),
      .tr_write_done(xt_rsc_0_18_tr_write_done),
      .s_tdone(xt_rsc_0_18_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_18_i_xt_rsc_0_18_wait_ctrl peaseNTT_core_xt_rsc_0_18_i_xt_rsc_0_18_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_18_i_oswt(xt_rsc_0_18_i_oswt),
      .xt_rsc_0_18_i_oswt_1(xt_rsc_0_18_i_oswt_1),
      .xt_rsc_0_18_i_biwt(xt_rsc_0_18_i_biwt),
      .xt_rsc_0_18_i_bdwt(xt_rsc_0_18_i_bdwt),
      .xt_rsc_0_18_i_bcwt(xt_rsc_0_18_i_bcwt),
      .xt_rsc_0_18_i_s_re_core_sct(xt_rsc_0_18_i_s_re_core_sct),
      .xt_rsc_0_18_i_biwt_1(xt_rsc_0_18_i_biwt_1),
      .xt_rsc_0_18_i_bdwt_2(xt_rsc_0_18_i_bdwt_2),
      .xt_rsc_0_18_i_bcwt_1(xt_rsc_0_18_i_bcwt_1),
      .xt_rsc_0_18_i_s_we_core_sct(xt_rsc_0_18_i_s_we_core_sct),
      .xt_rsc_0_18_i_s_rrdy(xt_rsc_0_18_i_s_rrdy),
      .xt_rsc_0_18_i_s_wrdy(xt_rsc_0_18_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_18_i_xt_rsc_0_18_wait_dp peaseNTT_core_xt_rsc_0_18_i_xt_rsc_0_18_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_18_i_oswt(xt_rsc_0_18_i_oswt),
      .xt_rsc_0_18_i_wen_comp(xt_rsc_0_18_i_wen_comp),
      .xt_rsc_0_18_i_oswt_1(xt_rsc_0_18_i_oswt_1),
      .xt_rsc_0_18_i_wen_comp_1(xt_rsc_0_18_i_wen_comp_1),
      .xt_rsc_0_18_i_s_raddr_core(xt_rsc_0_18_i_s_raddr_core),
      .xt_rsc_0_18_i_s_waddr_core(xt_rsc_0_18_i_s_waddr_core),
      .xt_rsc_0_18_i_s_din_mxwt(xt_rsc_0_18_i_s_din_mxwt),
      .xt_rsc_0_18_i_s_dout_core(xt_rsc_0_18_i_s_dout_core),
      .xt_rsc_0_18_i_biwt(xt_rsc_0_18_i_biwt),
      .xt_rsc_0_18_i_bdwt(xt_rsc_0_18_i_bdwt),
      .xt_rsc_0_18_i_bcwt(xt_rsc_0_18_i_bcwt),
      .xt_rsc_0_18_i_biwt_1(xt_rsc_0_18_i_biwt_1),
      .xt_rsc_0_18_i_bdwt_2(xt_rsc_0_18_i_bdwt_2),
      .xt_rsc_0_18_i_bcwt_1(xt_rsc_0_18_i_bcwt_1),
      .xt_rsc_0_18_i_s_raddr(xt_rsc_0_18_i_s_raddr),
      .xt_rsc_0_18_i_s_raddr_core_sct(xt_rsc_0_18_i_s_re_core_sct),
      .xt_rsc_0_18_i_s_waddr(xt_rsc_0_18_i_s_waddr),
      .xt_rsc_0_18_i_s_waddr_core_sct(xt_rsc_0_18_i_s_we_core_sct),
      .xt_rsc_0_18_i_s_din(xt_rsc_0_18_i_s_din),
      .xt_rsc_0_18_i_s_dout(xt_rsc_0_18_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_17_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_17_i (
  clk, rst, xt_rsc_0_17_s_tdone, xt_rsc_0_17_tr_write_done, xt_rsc_0_17_RREADY, xt_rsc_0_17_RVALID,
      xt_rsc_0_17_RUSER, xt_rsc_0_17_RLAST, xt_rsc_0_17_RRESP, xt_rsc_0_17_RDATA,
      xt_rsc_0_17_RID, xt_rsc_0_17_ARREADY, xt_rsc_0_17_ARVALID, xt_rsc_0_17_ARUSER,
      xt_rsc_0_17_ARREGION, xt_rsc_0_17_ARQOS, xt_rsc_0_17_ARPROT, xt_rsc_0_17_ARCACHE,
      xt_rsc_0_17_ARLOCK, xt_rsc_0_17_ARBURST, xt_rsc_0_17_ARSIZE, xt_rsc_0_17_ARLEN,
      xt_rsc_0_17_ARADDR, xt_rsc_0_17_ARID, xt_rsc_0_17_BREADY, xt_rsc_0_17_BVALID,
      xt_rsc_0_17_BUSER, xt_rsc_0_17_BRESP, xt_rsc_0_17_BID, xt_rsc_0_17_WREADY,
      xt_rsc_0_17_WVALID, xt_rsc_0_17_WUSER, xt_rsc_0_17_WLAST, xt_rsc_0_17_WSTRB,
      xt_rsc_0_17_WDATA, xt_rsc_0_17_AWREADY, xt_rsc_0_17_AWVALID, xt_rsc_0_17_AWUSER,
      xt_rsc_0_17_AWREGION, xt_rsc_0_17_AWQOS, xt_rsc_0_17_AWPROT, xt_rsc_0_17_AWCACHE,
      xt_rsc_0_17_AWLOCK, xt_rsc_0_17_AWBURST, xt_rsc_0_17_AWSIZE, xt_rsc_0_17_AWLEN,
      xt_rsc_0_17_AWADDR, xt_rsc_0_17_AWID, core_wen, xt_rsc_0_17_i_oswt, xt_rsc_0_17_i_wen_comp,
      xt_rsc_0_17_i_oswt_1, xt_rsc_0_17_i_wen_comp_1, xt_rsc_0_17_i_s_raddr_core,
      xt_rsc_0_17_i_s_waddr_core, xt_rsc_0_17_i_s_din_mxwt, xt_rsc_0_17_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_17_s_tdone;
  input xt_rsc_0_17_tr_write_done;
  input xt_rsc_0_17_RREADY;
  output xt_rsc_0_17_RVALID;
  output xt_rsc_0_17_RUSER;
  output xt_rsc_0_17_RLAST;
  output [1:0] xt_rsc_0_17_RRESP;
  output [31:0] xt_rsc_0_17_RDATA;
  output xt_rsc_0_17_RID;
  output xt_rsc_0_17_ARREADY;
  input xt_rsc_0_17_ARVALID;
  input xt_rsc_0_17_ARUSER;
  input [3:0] xt_rsc_0_17_ARREGION;
  input [3:0] xt_rsc_0_17_ARQOS;
  input [2:0] xt_rsc_0_17_ARPROT;
  input [3:0] xt_rsc_0_17_ARCACHE;
  input xt_rsc_0_17_ARLOCK;
  input [1:0] xt_rsc_0_17_ARBURST;
  input [2:0] xt_rsc_0_17_ARSIZE;
  input [7:0] xt_rsc_0_17_ARLEN;
  input [11:0] xt_rsc_0_17_ARADDR;
  input xt_rsc_0_17_ARID;
  input xt_rsc_0_17_BREADY;
  output xt_rsc_0_17_BVALID;
  output xt_rsc_0_17_BUSER;
  output [1:0] xt_rsc_0_17_BRESP;
  output xt_rsc_0_17_BID;
  output xt_rsc_0_17_WREADY;
  input xt_rsc_0_17_WVALID;
  input xt_rsc_0_17_WUSER;
  input xt_rsc_0_17_WLAST;
  input [3:0] xt_rsc_0_17_WSTRB;
  input [31:0] xt_rsc_0_17_WDATA;
  output xt_rsc_0_17_AWREADY;
  input xt_rsc_0_17_AWVALID;
  input xt_rsc_0_17_AWUSER;
  input [3:0] xt_rsc_0_17_AWREGION;
  input [3:0] xt_rsc_0_17_AWQOS;
  input [2:0] xt_rsc_0_17_AWPROT;
  input [3:0] xt_rsc_0_17_AWCACHE;
  input xt_rsc_0_17_AWLOCK;
  input [1:0] xt_rsc_0_17_AWBURST;
  input [2:0] xt_rsc_0_17_AWSIZE;
  input [7:0] xt_rsc_0_17_AWLEN;
  input [11:0] xt_rsc_0_17_AWADDR;
  input xt_rsc_0_17_AWID;
  input core_wen;
  input xt_rsc_0_17_i_oswt;
  output xt_rsc_0_17_i_wen_comp;
  input xt_rsc_0_17_i_oswt_1;
  output xt_rsc_0_17_i_wen_comp_1;
  input [3:0] xt_rsc_0_17_i_s_raddr_core;
  input [3:0] xt_rsc_0_17_i_s_waddr_core;
  output [31:0] xt_rsc_0_17_i_s_din_mxwt;
  input [31:0] xt_rsc_0_17_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_17_i_biwt;
  wire xt_rsc_0_17_i_bdwt;
  wire xt_rsc_0_17_i_bcwt;
  wire xt_rsc_0_17_i_s_re_core_sct;
  wire xt_rsc_0_17_i_biwt_1;
  wire xt_rsc_0_17_i_bdwt_2;
  wire xt_rsc_0_17_i_bcwt_1;
  wire xt_rsc_0_17_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_17_i_s_raddr;
  wire [3:0] xt_rsc_0_17_i_s_waddr;
  wire [31:0] xt_rsc_0_17_i_s_din;
  wire [31:0] xt_rsc_0_17_i_s_dout;
  wire xt_rsc_0_17_i_s_rrdy;
  wire xt_rsc_0_17_i_s_wrdy;
  wire xt_rsc_0_17_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_17_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_17_AWID),
      .AWADDR(xt_rsc_0_17_AWADDR),
      .AWLEN(xt_rsc_0_17_AWLEN),
      .AWSIZE(xt_rsc_0_17_AWSIZE),
      .AWBURST(xt_rsc_0_17_AWBURST),
      .AWLOCK(xt_rsc_0_17_AWLOCK),
      .AWCACHE(xt_rsc_0_17_AWCACHE),
      .AWPROT(xt_rsc_0_17_AWPROT),
      .AWQOS(xt_rsc_0_17_AWQOS),
      .AWREGION(xt_rsc_0_17_AWREGION),
      .AWUSER(xt_rsc_0_17_AWUSER),
      .AWVALID(xt_rsc_0_17_AWVALID),
      .AWREADY(xt_rsc_0_17_AWREADY),
      .WDATA(xt_rsc_0_17_WDATA),
      .WSTRB(xt_rsc_0_17_WSTRB),
      .WLAST(xt_rsc_0_17_WLAST),
      .WUSER(xt_rsc_0_17_WUSER),
      .WVALID(xt_rsc_0_17_WVALID),
      .WREADY(xt_rsc_0_17_WREADY),
      .BID(xt_rsc_0_17_BID),
      .BRESP(xt_rsc_0_17_BRESP),
      .BUSER(xt_rsc_0_17_BUSER),
      .BVALID(xt_rsc_0_17_BVALID),
      .BREADY(xt_rsc_0_17_BREADY),
      .ARID(xt_rsc_0_17_ARID),
      .ARADDR(xt_rsc_0_17_ARADDR),
      .ARLEN(xt_rsc_0_17_ARLEN),
      .ARSIZE(xt_rsc_0_17_ARSIZE),
      .ARBURST(xt_rsc_0_17_ARBURST),
      .ARLOCK(xt_rsc_0_17_ARLOCK),
      .ARCACHE(xt_rsc_0_17_ARCACHE),
      .ARPROT(xt_rsc_0_17_ARPROT),
      .ARQOS(xt_rsc_0_17_ARQOS),
      .ARREGION(xt_rsc_0_17_ARREGION),
      .ARUSER(xt_rsc_0_17_ARUSER),
      .ARVALID(xt_rsc_0_17_ARVALID),
      .ARREADY(xt_rsc_0_17_ARREADY),
      .RID(xt_rsc_0_17_RID),
      .RDATA(xt_rsc_0_17_RDATA),
      .RRESP(xt_rsc_0_17_RRESP),
      .RLAST(xt_rsc_0_17_RLAST),
      .RUSER(xt_rsc_0_17_RUSER),
      .RVALID(xt_rsc_0_17_RVALID),
      .RREADY(xt_rsc_0_17_RREADY),
      .s_re(xt_rsc_0_17_i_s_re_core_sct),
      .s_we(xt_rsc_0_17_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_17_i_s_raddr),
      .s_waddr(xt_rsc_0_17_i_s_waddr),
      .s_din(xt_rsc_0_17_i_s_din),
      .s_dout(xt_rsc_0_17_i_s_dout),
      .s_rrdy(xt_rsc_0_17_i_s_rrdy),
      .s_wrdy(xt_rsc_0_17_i_s_wrdy),
      .is_idle(xt_rsc_0_17_is_idle_1),
      .tr_write_done(xt_rsc_0_17_tr_write_done),
      .s_tdone(xt_rsc_0_17_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_17_i_xt_rsc_0_17_wait_ctrl peaseNTT_core_xt_rsc_0_17_i_xt_rsc_0_17_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_17_i_oswt(xt_rsc_0_17_i_oswt),
      .xt_rsc_0_17_i_oswt_1(xt_rsc_0_17_i_oswt_1),
      .xt_rsc_0_17_i_biwt(xt_rsc_0_17_i_biwt),
      .xt_rsc_0_17_i_bdwt(xt_rsc_0_17_i_bdwt),
      .xt_rsc_0_17_i_bcwt(xt_rsc_0_17_i_bcwt),
      .xt_rsc_0_17_i_s_re_core_sct(xt_rsc_0_17_i_s_re_core_sct),
      .xt_rsc_0_17_i_biwt_1(xt_rsc_0_17_i_biwt_1),
      .xt_rsc_0_17_i_bdwt_2(xt_rsc_0_17_i_bdwt_2),
      .xt_rsc_0_17_i_bcwt_1(xt_rsc_0_17_i_bcwt_1),
      .xt_rsc_0_17_i_s_we_core_sct(xt_rsc_0_17_i_s_we_core_sct),
      .xt_rsc_0_17_i_s_rrdy(xt_rsc_0_17_i_s_rrdy),
      .xt_rsc_0_17_i_s_wrdy(xt_rsc_0_17_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_17_i_xt_rsc_0_17_wait_dp peaseNTT_core_xt_rsc_0_17_i_xt_rsc_0_17_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_17_i_oswt(xt_rsc_0_17_i_oswt),
      .xt_rsc_0_17_i_wen_comp(xt_rsc_0_17_i_wen_comp),
      .xt_rsc_0_17_i_oswt_1(xt_rsc_0_17_i_oswt_1),
      .xt_rsc_0_17_i_wen_comp_1(xt_rsc_0_17_i_wen_comp_1),
      .xt_rsc_0_17_i_s_raddr_core(xt_rsc_0_17_i_s_raddr_core),
      .xt_rsc_0_17_i_s_waddr_core(xt_rsc_0_17_i_s_waddr_core),
      .xt_rsc_0_17_i_s_din_mxwt(xt_rsc_0_17_i_s_din_mxwt),
      .xt_rsc_0_17_i_s_dout_core(xt_rsc_0_17_i_s_dout_core),
      .xt_rsc_0_17_i_biwt(xt_rsc_0_17_i_biwt),
      .xt_rsc_0_17_i_bdwt(xt_rsc_0_17_i_bdwt),
      .xt_rsc_0_17_i_bcwt(xt_rsc_0_17_i_bcwt),
      .xt_rsc_0_17_i_biwt_1(xt_rsc_0_17_i_biwt_1),
      .xt_rsc_0_17_i_bdwt_2(xt_rsc_0_17_i_bdwt_2),
      .xt_rsc_0_17_i_bcwt_1(xt_rsc_0_17_i_bcwt_1),
      .xt_rsc_0_17_i_s_raddr(xt_rsc_0_17_i_s_raddr),
      .xt_rsc_0_17_i_s_raddr_core_sct(xt_rsc_0_17_i_s_re_core_sct),
      .xt_rsc_0_17_i_s_waddr(xt_rsc_0_17_i_s_waddr),
      .xt_rsc_0_17_i_s_waddr_core_sct(xt_rsc_0_17_i_s_we_core_sct),
      .xt_rsc_0_17_i_s_din(xt_rsc_0_17_i_s_din),
      .xt_rsc_0_17_i_s_dout(xt_rsc_0_17_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_16_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_16_i (
  clk, rst, xt_rsc_0_16_s_tdone, xt_rsc_0_16_tr_write_done, xt_rsc_0_16_RREADY, xt_rsc_0_16_RVALID,
      xt_rsc_0_16_RUSER, xt_rsc_0_16_RLAST, xt_rsc_0_16_RRESP, xt_rsc_0_16_RDATA,
      xt_rsc_0_16_RID, xt_rsc_0_16_ARREADY, xt_rsc_0_16_ARVALID, xt_rsc_0_16_ARUSER,
      xt_rsc_0_16_ARREGION, xt_rsc_0_16_ARQOS, xt_rsc_0_16_ARPROT, xt_rsc_0_16_ARCACHE,
      xt_rsc_0_16_ARLOCK, xt_rsc_0_16_ARBURST, xt_rsc_0_16_ARSIZE, xt_rsc_0_16_ARLEN,
      xt_rsc_0_16_ARADDR, xt_rsc_0_16_ARID, xt_rsc_0_16_BREADY, xt_rsc_0_16_BVALID,
      xt_rsc_0_16_BUSER, xt_rsc_0_16_BRESP, xt_rsc_0_16_BID, xt_rsc_0_16_WREADY,
      xt_rsc_0_16_WVALID, xt_rsc_0_16_WUSER, xt_rsc_0_16_WLAST, xt_rsc_0_16_WSTRB,
      xt_rsc_0_16_WDATA, xt_rsc_0_16_AWREADY, xt_rsc_0_16_AWVALID, xt_rsc_0_16_AWUSER,
      xt_rsc_0_16_AWREGION, xt_rsc_0_16_AWQOS, xt_rsc_0_16_AWPROT, xt_rsc_0_16_AWCACHE,
      xt_rsc_0_16_AWLOCK, xt_rsc_0_16_AWBURST, xt_rsc_0_16_AWSIZE, xt_rsc_0_16_AWLEN,
      xt_rsc_0_16_AWADDR, xt_rsc_0_16_AWID, core_wen, xt_rsc_0_16_i_oswt, xt_rsc_0_16_i_wen_comp,
      xt_rsc_0_16_i_oswt_1, xt_rsc_0_16_i_wen_comp_1, xt_rsc_0_16_i_s_raddr_core,
      xt_rsc_0_16_i_s_waddr_core, xt_rsc_0_16_i_s_din_mxwt, xt_rsc_0_16_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_16_s_tdone;
  input xt_rsc_0_16_tr_write_done;
  input xt_rsc_0_16_RREADY;
  output xt_rsc_0_16_RVALID;
  output xt_rsc_0_16_RUSER;
  output xt_rsc_0_16_RLAST;
  output [1:0] xt_rsc_0_16_RRESP;
  output [31:0] xt_rsc_0_16_RDATA;
  output xt_rsc_0_16_RID;
  output xt_rsc_0_16_ARREADY;
  input xt_rsc_0_16_ARVALID;
  input xt_rsc_0_16_ARUSER;
  input [3:0] xt_rsc_0_16_ARREGION;
  input [3:0] xt_rsc_0_16_ARQOS;
  input [2:0] xt_rsc_0_16_ARPROT;
  input [3:0] xt_rsc_0_16_ARCACHE;
  input xt_rsc_0_16_ARLOCK;
  input [1:0] xt_rsc_0_16_ARBURST;
  input [2:0] xt_rsc_0_16_ARSIZE;
  input [7:0] xt_rsc_0_16_ARLEN;
  input [11:0] xt_rsc_0_16_ARADDR;
  input xt_rsc_0_16_ARID;
  input xt_rsc_0_16_BREADY;
  output xt_rsc_0_16_BVALID;
  output xt_rsc_0_16_BUSER;
  output [1:0] xt_rsc_0_16_BRESP;
  output xt_rsc_0_16_BID;
  output xt_rsc_0_16_WREADY;
  input xt_rsc_0_16_WVALID;
  input xt_rsc_0_16_WUSER;
  input xt_rsc_0_16_WLAST;
  input [3:0] xt_rsc_0_16_WSTRB;
  input [31:0] xt_rsc_0_16_WDATA;
  output xt_rsc_0_16_AWREADY;
  input xt_rsc_0_16_AWVALID;
  input xt_rsc_0_16_AWUSER;
  input [3:0] xt_rsc_0_16_AWREGION;
  input [3:0] xt_rsc_0_16_AWQOS;
  input [2:0] xt_rsc_0_16_AWPROT;
  input [3:0] xt_rsc_0_16_AWCACHE;
  input xt_rsc_0_16_AWLOCK;
  input [1:0] xt_rsc_0_16_AWBURST;
  input [2:0] xt_rsc_0_16_AWSIZE;
  input [7:0] xt_rsc_0_16_AWLEN;
  input [11:0] xt_rsc_0_16_AWADDR;
  input xt_rsc_0_16_AWID;
  input core_wen;
  input xt_rsc_0_16_i_oswt;
  output xt_rsc_0_16_i_wen_comp;
  input xt_rsc_0_16_i_oswt_1;
  output xt_rsc_0_16_i_wen_comp_1;
  input [3:0] xt_rsc_0_16_i_s_raddr_core;
  input [3:0] xt_rsc_0_16_i_s_waddr_core;
  output [31:0] xt_rsc_0_16_i_s_din_mxwt;
  input [31:0] xt_rsc_0_16_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_16_i_biwt;
  wire xt_rsc_0_16_i_bdwt;
  wire xt_rsc_0_16_i_bcwt;
  wire xt_rsc_0_16_i_s_re_core_sct;
  wire xt_rsc_0_16_i_biwt_1;
  wire xt_rsc_0_16_i_bdwt_2;
  wire xt_rsc_0_16_i_bcwt_1;
  wire xt_rsc_0_16_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_16_i_s_raddr;
  wire [3:0] xt_rsc_0_16_i_s_waddr;
  wire [31:0] xt_rsc_0_16_i_s_din;
  wire [31:0] xt_rsc_0_16_i_s_dout;
  wire xt_rsc_0_16_i_s_rrdy;
  wire xt_rsc_0_16_i_s_wrdy;
  wire xt_rsc_0_16_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_16_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_16_AWID),
      .AWADDR(xt_rsc_0_16_AWADDR),
      .AWLEN(xt_rsc_0_16_AWLEN),
      .AWSIZE(xt_rsc_0_16_AWSIZE),
      .AWBURST(xt_rsc_0_16_AWBURST),
      .AWLOCK(xt_rsc_0_16_AWLOCK),
      .AWCACHE(xt_rsc_0_16_AWCACHE),
      .AWPROT(xt_rsc_0_16_AWPROT),
      .AWQOS(xt_rsc_0_16_AWQOS),
      .AWREGION(xt_rsc_0_16_AWREGION),
      .AWUSER(xt_rsc_0_16_AWUSER),
      .AWVALID(xt_rsc_0_16_AWVALID),
      .AWREADY(xt_rsc_0_16_AWREADY),
      .WDATA(xt_rsc_0_16_WDATA),
      .WSTRB(xt_rsc_0_16_WSTRB),
      .WLAST(xt_rsc_0_16_WLAST),
      .WUSER(xt_rsc_0_16_WUSER),
      .WVALID(xt_rsc_0_16_WVALID),
      .WREADY(xt_rsc_0_16_WREADY),
      .BID(xt_rsc_0_16_BID),
      .BRESP(xt_rsc_0_16_BRESP),
      .BUSER(xt_rsc_0_16_BUSER),
      .BVALID(xt_rsc_0_16_BVALID),
      .BREADY(xt_rsc_0_16_BREADY),
      .ARID(xt_rsc_0_16_ARID),
      .ARADDR(xt_rsc_0_16_ARADDR),
      .ARLEN(xt_rsc_0_16_ARLEN),
      .ARSIZE(xt_rsc_0_16_ARSIZE),
      .ARBURST(xt_rsc_0_16_ARBURST),
      .ARLOCK(xt_rsc_0_16_ARLOCK),
      .ARCACHE(xt_rsc_0_16_ARCACHE),
      .ARPROT(xt_rsc_0_16_ARPROT),
      .ARQOS(xt_rsc_0_16_ARQOS),
      .ARREGION(xt_rsc_0_16_ARREGION),
      .ARUSER(xt_rsc_0_16_ARUSER),
      .ARVALID(xt_rsc_0_16_ARVALID),
      .ARREADY(xt_rsc_0_16_ARREADY),
      .RID(xt_rsc_0_16_RID),
      .RDATA(xt_rsc_0_16_RDATA),
      .RRESP(xt_rsc_0_16_RRESP),
      .RLAST(xt_rsc_0_16_RLAST),
      .RUSER(xt_rsc_0_16_RUSER),
      .RVALID(xt_rsc_0_16_RVALID),
      .RREADY(xt_rsc_0_16_RREADY),
      .s_re(xt_rsc_0_16_i_s_re_core_sct),
      .s_we(xt_rsc_0_16_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_16_i_s_raddr),
      .s_waddr(xt_rsc_0_16_i_s_waddr),
      .s_din(xt_rsc_0_16_i_s_din),
      .s_dout(xt_rsc_0_16_i_s_dout),
      .s_rrdy(xt_rsc_0_16_i_s_rrdy),
      .s_wrdy(xt_rsc_0_16_i_s_wrdy),
      .is_idle(xt_rsc_0_16_is_idle_1),
      .tr_write_done(xt_rsc_0_16_tr_write_done),
      .s_tdone(xt_rsc_0_16_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_16_i_xt_rsc_0_16_wait_ctrl peaseNTT_core_xt_rsc_0_16_i_xt_rsc_0_16_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_16_i_oswt(xt_rsc_0_16_i_oswt),
      .xt_rsc_0_16_i_oswt_1(xt_rsc_0_16_i_oswt_1),
      .xt_rsc_0_16_i_biwt(xt_rsc_0_16_i_biwt),
      .xt_rsc_0_16_i_bdwt(xt_rsc_0_16_i_bdwt),
      .xt_rsc_0_16_i_bcwt(xt_rsc_0_16_i_bcwt),
      .xt_rsc_0_16_i_s_re_core_sct(xt_rsc_0_16_i_s_re_core_sct),
      .xt_rsc_0_16_i_biwt_1(xt_rsc_0_16_i_biwt_1),
      .xt_rsc_0_16_i_bdwt_2(xt_rsc_0_16_i_bdwt_2),
      .xt_rsc_0_16_i_bcwt_1(xt_rsc_0_16_i_bcwt_1),
      .xt_rsc_0_16_i_s_we_core_sct(xt_rsc_0_16_i_s_we_core_sct),
      .xt_rsc_0_16_i_s_rrdy(xt_rsc_0_16_i_s_rrdy),
      .xt_rsc_0_16_i_s_wrdy(xt_rsc_0_16_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_16_i_xt_rsc_0_16_wait_dp peaseNTT_core_xt_rsc_0_16_i_xt_rsc_0_16_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_16_i_oswt(xt_rsc_0_16_i_oswt),
      .xt_rsc_0_16_i_wen_comp(xt_rsc_0_16_i_wen_comp),
      .xt_rsc_0_16_i_oswt_1(xt_rsc_0_16_i_oswt_1),
      .xt_rsc_0_16_i_wen_comp_1(xt_rsc_0_16_i_wen_comp_1),
      .xt_rsc_0_16_i_s_raddr_core(xt_rsc_0_16_i_s_raddr_core),
      .xt_rsc_0_16_i_s_waddr_core(xt_rsc_0_16_i_s_waddr_core),
      .xt_rsc_0_16_i_s_din_mxwt(xt_rsc_0_16_i_s_din_mxwt),
      .xt_rsc_0_16_i_s_dout_core(xt_rsc_0_16_i_s_dout_core),
      .xt_rsc_0_16_i_biwt(xt_rsc_0_16_i_biwt),
      .xt_rsc_0_16_i_bdwt(xt_rsc_0_16_i_bdwt),
      .xt_rsc_0_16_i_bcwt(xt_rsc_0_16_i_bcwt),
      .xt_rsc_0_16_i_biwt_1(xt_rsc_0_16_i_biwt_1),
      .xt_rsc_0_16_i_bdwt_2(xt_rsc_0_16_i_bdwt_2),
      .xt_rsc_0_16_i_bcwt_1(xt_rsc_0_16_i_bcwt_1),
      .xt_rsc_0_16_i_s_raddr(xt_rsc_0_16_i_s_raddr),
      .xt_rsc_0_16_i_s_raddr_core_sct(xt_rsc_0_16_i_s_re_core_sct),
      .xt_rsc_0_16_i_s_waddr(xt_rsc_0_16_i_s_waddr),
      .xt_rsc_0_16_i_s_waddr_core_sct(xt_rsc_0_16_i_s_we_core_sct),
      .xt_rsc_0_16_i_s_din(xt_rsc_0_16_i_s_din),
      .xt_rsc_0_16_i_s_dout(xt_rsc_0_16_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_15_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_15_i (
  clk, rst, xt_rsc_0_15_s_tdone, xt_rsc_0_15_tr_write_done, xt_rsc_0_15_RREADY, xt_rsc_0_15_RVALID,
      xt_rsc_0_15_RUSER, xt_rsc_0_15_RLAST, xt_rsc_0_15_RRESP, xt_rsc_0_15_RDATA,
      xt_rsc_0_15_RID, xt_rsc_0_15_ARREADY, xt_rsc_0_15_ARVALID, xt_rsc_0_15_ARUSER,
      xt_rsc_0_15_ARREGION, xt_rsc_0_15_ARQOS, xt_rsc_0_15_ARPROT, xt_rsc_0_15_ARCACHE,
      xt_rsc_0_15_ARLOCK, xt_rsc_0_15_ARBURST, xt_rsc_0_15_ARSIZE, xt_rsc_0_15_ARLEN,
      xt_rsc_0_15_ARADDR, xt_rsc_0_15_ARID, xt_rsc_0_15_BREADY, xt_rsc_0_15_BVALID,
      xt_rsc_0_15_BUSER, xt_rsc_0_15_BRESP, xt_rsc_0_15_BID, xt_rsc_0_15_WREADY,
      xt_rsc_0_15_WVALID, xt_rsc_0_15_WUSER, xt_rsc_0_15_WLAST, xt_rsc_0_15_WSTRB,
      xt_rsc_0_15_WDATA, xt_rsc_0_15_AWREADY, xt_rsc_0_15_AWVALID, xt_rsc_0_15_AWUSER,
      xt_rsc_0_15_AWREGION, xt_rsc_0_15_AWQOS, xt_rsc_0_15_AWPROT, xt_rsc_0_15_AWCACHE,
      xt_rsc_0_15_AWLOCK, xt_rsc_0_15_AWBURST, xt_rsc_0_15_AWSIZE, xt_rsc_0_15_AWLEN,
      xt_rsc_0_15_AWADDR, xt_rsc_0_15_AWID, core_wen, xt_rsc_0_15_i_oswt, xt_rsc_0_15_i_wen_comp,
      xt_rsc_0_15_i_oswt_1, xt_rsc_0_15_i_wen_comp_1, xt_rsc_0_15_i_s_raddr_core,
      xt_rsc_0_15_i_s_waddr_core, xt_rsc_0_15_i_s_din_mxwt, xt_rsc_0_15_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_15_s_tdone;
  input xt_rsc_0_15_tr_write_done;
  input xt_rsc_0_15_RREADY;
  output xt_rsc_0_15_RVALID;
  output xt_rsc_0_15_RUSER;
  output xt_rsc_0_15_RLAST;
  output [1:0] xt_rsc_0_15_RRESP;
  output [31:0] xt_rsc_0_15_RDATA;
  output xt_rsc_0_15_RID;
  output xt_rsc_0_15_ARREADY;
  input xt_rsc_0_15_ARVALID;
  input xt_rsc_0_15_ARUSER;
  input [3:0] xt_rsc_0_15_ARREGION;
  input [3:0] xt_rsc_0_15_ARQOS;
  input [2:0] xt_rsc_0_15_ARPROT;
  input [3:0] xt_rsc_0_15_ARCACHE;
  input xt_rsc_0_15_ARLOCK;
  input [1:0] xt_rsc_0_15_ARBURST;
  input [2:0] xt_rsc_0_15_ARSIZE;
  input [7:0] xt_rsc_0_15_ARLEN;
  input [11:0] xt_rsc_0_15_ARADDR;
  input xt_rsc_0_15_ARID;
  input xt_rsc_0_15_BREADY;
  output xt_rsc_0_15_BVALID;
  output xt_rsc_0_15_BUSER;
  output [1:0] xt_rsc_0_15_BRESP;
  output xt_rsc_0_15_BID;
  output xt_rsc_0_15_WREADY;
  input xt_rsc_0_15_WVALID;
  input xt_rsc_0_15_WUSER;
  input xt_rsc_0_15_WLAST;
  input [3:0] xt_rsc_0_15_WSTRB;
  input [31:0] xt_rsc_0_15_WDATA;
  output xt_rsc_0_15_AWREADY;
  input xt_rsc_0_15_AWVALID;
  input xt_rsc_0_15_AWUSER;
  input [3:0] xt_rsc_0_15_AWREGION;
  input [3:0] xt_rsc_0_15_AWQOS;
  input [2:0] xt_rsc_0_15_AWPROT;
  input [3:0] xt_rsc_0_15_AWCACHE;
  input xt_rsc_0_15_AWLOCK;
  input [1:0] xt_rsc_0_15_AWBURST;
  input [2:0] xt_rsc_0_15_AWSIZE;
  input [7:0] xt_rsc_0_15_AWLEN;
  input [11:0] xt_rsc_0_15_AWADDR;
  input xt_rsc_0_15_AWID;
  input core_wen;
  input xt_rsc_0_15_i_oswt;
  output xt_rsc_0_15_i_wen_comp;
  input xt_rsc_0_15_i_oswt_1;
  output xt_rsc_0_15_i_wen_comp_1;
  input [3:0] xt_rsc_0_15_i_s_raddr_core;
  input [3:0] xt_rsc_0_15_i_s_waddr_core;
  output [31:0] xt_rsc_0_15_i_s_din_mxwt;
  input [31:0] xt_rsc_0_15_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_15_i_biwt;
  wire xt_rsc_0_15_i_bdwt;
  wire xt_rsc_0_15_i_bcwt;
  wire xt_rsc_0_15_i_s_re_core_sct;
  wire xt_rsc_0_15_i_biwt_1;
  wire xt_rsc_0_15_i_bdwt_2;
  wire xt_rsc_0_15_i_bcwt_1;
  wire xt_rsc_0_15_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_15_i_s_raddr;
  wire [3:0] xt_rsc_0_15_i_s_waddr;
  wire [31:0] xt_rsc_0_15_i_s_din;
  wire [31:0] xt_rsc_0_15_i_s_dout;
  wire xt_rsc_0_15_i_s_rrdy;
  wire xt_rsc_0_15_i_s_wrdy;
  wire xt_rsc_0_15_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_15_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_15_AWID),
      .AWADDR(xt_rsc_0_15_AWADDR),
      .AWLEN(xt_rsc_0_15_AWLEN),
      .AWSIZE(xt_rsc_0_15_AWSIZE),
      .AWBURST(xt_rsc_0_15_AWBURST),
      .AWLOCK(xt_rsc_0_15_AWLOCK),
      .AWCACHE(xt_rsc_0_15_AWCACHE),
      .AWPROT(xt_rsc_0_15_AWPROT),
      .AWQOS(xt_rsc_0_15_AWQOS),
      .AWREGION(xt_rsc_0_15_AWREGION),
      .AWUSER(xt_rsc_0_15_AWUSER),
      .AWVALID(xt_rsc_0_15_AWVALID),
      .AWREADY(xt_rsc_0_15_AWREADY),
      .WDATA(xt_rsc_0_15_WDATA),
      .WSTRB(xt_rsc_0_15_WSTRB),
      .WLAST(xt_rsc_0_15_WLAST),
      .WUSER(xt_rsc_0_15_WUSER),
      .WVALID(xt_rsc_0_15_WVALID),
      .WREADY(xt_rsc_0_15_WREADY),
      .BID(xt_rsc_0_15_BID),
      .BRESP(xt_rsc_0_15_BRESP),
      .BUSER(xt_rsc_0_15_BUSER),
      .BVALID(xt_rsc_0_15_BVALID),
      .BREADY(xt_rsc_0_15_BREADY),
      .ARID(xt_rsc_0_15_ARID),
      .ARADDR(xt_rsc_0_15_ARADDR),
      .ARLEN(xt_rsc_0_15_ARLEN),
      .ARSIZE(xt_rsc_0_15_ARSIZE),
      .ARBURST(xt_rsc_0_15_ARBURST),
      .ARLOCK(xt_rsc_0_15_ARLOCK),
      .ARCACHE(xt_rsc_0_15_ARCACHE),
      .ARPROT(xt_rsc_0_15_ARPROT),
      .ARQOS(xt_rsc_0_15_ARQOS),
      .ARREGION(xt_rsc_0_15_ARREGION),
      .ARUSER(xt_rsc_0_15_ARUSER),
      .ARVALID(xt_rsc_0_15_ARVALID),
      .ARREADY(xt_rsc_0_15_ARREADY),
      .RID(xt_rsc_0_15_RID),
      .RDATA(xt_rsc_0_15_RDATA),
      .RRESP(xt_rsc_0_15_RRESP),
      .RLAST(xt_rsc_0_15_RLAST),
      .RUSER(xt_rsc_0_15_RUSER),
      .RVALID(xt_rsc_0_15_RVALID),
      .RREADY(xt_rsc_0_15_RREADY),
      .s_re(xt_rsc_0_15_i_s_re_core_sct),
      .s_we(xt_rsc_0_15_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_15_i_s_raddr),
      .s_waddr(xt_rsc_0_15_i_s_waddr),
      .s_din(xt_rsc_0_15_i_s_din),
      .s_dout(xt_rsc_0_15_i_s_dout),
      .s_rrdy(xt_rsc_0_15_i_s_rrdy),
      .s_wrdy(xt_rsc_0_15_i_s_wrdy),
      .is_idle(xt_rsc_0_15_is_idle_1),
      .tr_write_done(xt_rsc_0_15_tr_write_done),
      .s_tdone(xt_rsc_0_15_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_15_i_xt_rsc_0_15_wait_ctrl peaseNTT_core_xt_rsc_0_15_i_xt_rsc_0_15_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_15_i_oswt(xt_rsc_0_15_i_oswt),
      .xt_rsc_0_15_i_oswt_1(xt_rsc_0_15_i_oswt_1),
      .xt_rsc_0_15_i_biwt(xt_rsc_0_15_i_biwt),
      .xt_rsc_0_15_i_bdwt(xt_rsc_0_15_i_bdwt),
      .xt_rsc_0_15_i_bcwt(xt_rsc_0_15_i_bcwt),
      .xt_rsc_0_15_i_s_re_core_sct(xt_rsc_0_15_i_s_re_core_sct),
      .xt_rsc_0_15_i_biwt_1(xt_rsc_0_15_i_biwt_1),
      .xt_rsc_0_15_i_bdwt_2(xt_rsc_0_15_i_bdwt_2),
      .xt_rsc_0_15_i_bcwt_1(xt_rsc_0_15_i_bcwt_1),
      .xt_rsc_0_15_i_s_we_core_sct(xt_rsc_0_15_i_s_we_core_sct),
      .xt_rsc_0_15_i_s_rrdy(xt_rsc_0_15_i_s_rrdy),
      .xt_rsc_0_15_i_s_wrdy(xt_rsc_0_15_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_15_i_xt_rsc_0_15_wait_dp peaseNTT_core_xt_rsc_0_15_i_xt_rsc_0_15_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_15_i_oswt(xt_rsc_0_15_i_oswt),
      .xt_rsc_0_15_i_wen_comp(xt_rsc_0_15_i_wen_comp),
      .xt_rsc_0_15_i_oswt_1(xt_rsc_0_15_i_oswt_1),
      .xt_rsc_0_15_i_wen_comp_1(xt_rsc_0_15_i_wen_comp_1),
      .xt_rsc_0_15_i_s_raddr_core(xt_rsc_0_15_i_s_raddr_core),
      .xt_rsc_0_15_i_s_waddr_core(xt_rsc_0_15_i_s_waddr_core),
      .xt_rsc_0_15_i_s_din_mxwt(xt_rsc_0_15_i_s_din_mxwt),
      .xt_rsc_0_15_i_s_dout_core(xt_rsc_0_15_i_s_dout_core),
      .xt_rsc_0_15_i_biwt(xt_rsc_0_15_i_biwt),
      .xt_rsc_0_15_i_bdwt(xt_rsc_0_15_i_bdwt),
      .xt_rsc_0_15_i_bcwt(xt_rsc_0_15_i_bcwt),
      .xt_rsc_0_15_i_biwt_1(xt_rsc_0_15_i_biwt_1),
      .xt_rsc_0_15_i_bdwt_2(xt_rsc_0_15_i_bdwt_2),
      .xt_rsc_0_15_i_bcwt_1(xt_rsc_0_15_i_bcwt_1),
      .xt_rsc_0_15_i_s_raddr(xt_rsc_0_15_i_s_raddr),
      .xt_rsc_0_15_i_s_raddr_core_sct(xt_rsc_0_15_i_s_re_core_sct),
      .xt_rsc_0_15_i_s_waddr(xt_rsc_0_15_i_s_waddr),
      .xt_rsc_0_15_i_s_waddr_core_sct(xt_rsc_0_15_i_s_we_core_sct),
      .xt_rsc_0_15_i_s_din(xt_rsc_0_15_i_s_din),
      .xt_rsc_0_15_i_s_dout(xt_rsc_0_15_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_14_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_14_i (
  clk, rst, xt_rsc_0_14_s_tdone, xt_rsc_0_14_tr_write_done, xt_rsc_0_14_RREADY, xt_rsc_0_14_RVALID,
      xt_rsc_0_14_RUSER, xt_rsc_0_14_RLAST, xt_rsc_0_14_RRESP, xt_rsc_0_14_RDATA,
      xt_rsc_0_14_RID, xt_rsc_0_14_ARREADY, xt_rsc_0_14_ARVALID, xt_rsc_0_14_ARUSER,
      xt_rsc_0_14_ARREGION, xt_rsc_0_14_ARQOS, xt_rsc_0_14_ARPROT, xt_rsc_0_14_ARCACHE,
      xt_rsc_0_14_ARLOCK, xt_rsc_0_14_ARBURST, xt_rsc_0_14_ARSIZE, xt_rsc_0_14_ARLEN,
      xt_rsc_0_14_ARADDR, xt_rsc_0_14_ARID, xt_rsc_0_14_BREADY, xt_rsc_0_14_BVALID,
      xt_rsc_0_14_BUSER, xt_rsc_0_14_BRESP, xt_rsc_0_14_BID, xt_rsc_0_14_WREADY,
      xt_rsc_0_14_WVALID, xt_rsc_0_14_WUSER, xt_rsc_0_14_WLAST, xt_rsc_0_14_WSTRB,
      xt_rsc_0_14_WDATA, xt_rsc_0_14_AWREADY, xt_rsc_0_14_AWVALID, xt_rsc_0_14_AWUSER,
      xt_rsc_0_14_AWREGION, xt_rsc_0_14_AWQOS, xt_rsc_0_14_AWPROT, xt_rsc_0_14_AWCACHE,
      xt_rsc_0_14_AWLOCK, xt_rsc_0_14_AWBURST, xt_rsc_0_14_AWSIZE, xt_rsc_0_14_AWLEN,
      xt_rsc_0_14_AWADDR, xt_rsc_0_14_AWID, core_wen, xt_rsc_0_14_i_oswt, xt_rsc_0_14_i_wen_comp,
      xt_rsc_0_14_i_oswt_1, xt_rsc_0_14_i_wen_comp_1, xt_rsc_0_14_i_s_raddr_core,
      xt_rsc_0_14_i_s_waddr_core, xt_rsc_0_14_i_s_din_mxwt, xt_rsc_0_14_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_14_s_tdone;
  input xt_rsc_0_14_tr_write_done;
  input xt_rsc_0_14_RREADY;
  output xt_rsc_0_14_RVALID;
  output xt_rsc_0_14_RUSER;
  output xt_rsc_0_14_RLAST;
  output [1:0] xt_rsc_0_14_RRESP;
  output [31:0] xt_rsc_0_14_RDATA;
  output xt_rsc_0_14_RID;
  output xt_rsc_0_14_ARREADY;
  input xt_rsc_0_14_ARVALID;
  input xt_rsc_0_14_ARUSER;
  input [3:0] xt_rsc_0_14_ARREGION;
  input [3:0] xt_rsc_0_14_ARQOS;
  input [2:0] xt_rsc_0_14_ARPROT;
  input [3:0] xt_rsc_0_14_ARCACHE;
  input xt_rsc_0_14_ARLOCK;
  input [1:0] xt_rsc_0_14_ARBURST;
  input [2:0] xt_rsc_0_14_ARSIZE;
  input [7:0] xt_rsc_0_14_ARLEN;
  input [11:0] xt_rsc_0_14_ARADDR;
  input xt_rsc_0_14_ARID;
  input xt_rsc_0_14_BREADY;
  output xt_rsc_0_14_BVALID;
  output xt_rsc_0_14_BUSER;
  output [1:0] xt_rsc_0_14_BRESP;
  output xt_rsc_0_14_BID;
  output xt_rsc_0_14_WREADY;
  input xt_rsc_0_14_WVALID;
  input xt_rsc_0_14_WUSER;
  input xt_rsc_0_14_WLAST;
  input [3:0] xt_rsc_0_14_WSTRB;
  input [31:0] xt_rsc_0_14_WDATA;
  output xt_rsc_0_14_AWREADY;
  input xt_rsc_0_14_AWVALID;
  input xt_rsc_0_14_AWUSER;
  input [3:0] xt_rsc_0_14_AWREGION;
  input [3:0] xt_rsc_0_14_AWQOS;
  input [2:0] xt_rsc_0_14_AWPROT;
  input [3:0] xt_rsc_0_14_AWCACHE;
  input xt_rsc_0_14_AWLOCK;
  input [1:0] xt_rsc_0_14_AWBURST;
  input [2:0] xt_rsc_0_14_AWSIZE;
  input [7:0] xt_rsc_0_14_AWLEN;
  input [11:0] xt_rsc_0_14_AWADDR;
  input xt_rsc_0_14_AWID;
  input core_wen;
  input xt_rsc_0_14_i_oswt;
  output xt_rsc_0_14_i_wen_comp;
  input xt_rsc_0_14_i_oswt_1;
  output xt_rsc_0_14_i_wen_comp_1;
  input [3:0] xt_rsc_0_14_i_s_raddr_core;
  input [3:0] xt_rsc_0_14_i_s_waddr_core;
  output [31:0] xt_rsc_0_14_i_s_din_mxwt;
  input [31:0] xt_rsc_0_14_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_14_i_biwt;
  wire xt_rsc_0_14_i_bdwt;
  wire xt_rsc_0_14_i_bcwt;
  wire xt_rsc_0_14_i_s_re_core_sct;
  wire xt_rsc_0_14_i_biwt_1;
  wire xt_rsc_0_14_i_bdwt_2;
  wire xt_rsc_0_14_i_bcwt_1;
  wire xt_rsc_0_14_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_14_i_s_raddr;
  wire [3:0] xt_rsc_0_14_i_s_waddr;
  wire [31:0] xt_rsc_0_14_i_s_din;
  wire [31:0] xt_rsc_0_14_i_s_dout;
  wire xt_rsc_0_14_i_s_rrdy;
  wire xt_rsc_0_14_i_s_wrdy;
  wire xt_rsc_0_14_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_14_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_14_AWID),
      .AWADDR(xt_rsc_0_14_AWADDR),
      .AWLEN(xt_rsc_0_14_AWLEN),
      .AWSIZE(xt_rsc_0_14_AWSIZE),
      .AWBURST(xt_rsc_0_14_AWBURST),
      .AWLOCK(xt_rsc_0_14_AWLOCK),
      .AWCACHE(xt_rsc_0_14_AWCACHE),
      .AWPROT(xt_rsc_0_14_AWPROT),
      .AWQOS(xt_rsc_0_14_AWQOS),
      .AWREGION(xt_rsc_0_14_AWREGION),
      .AWUSER(xt_rsc_0_14_AWUSER),
      .AWVALID(xt_rsc_0_14_AWVALID),
      .AWREADY(xt_rsc_0_14_AWREADY),
      .WDATA(xt_rsc_0_14_WDATA),
      .WSTRB(xt_rsc_0_14_WSTRB),
      .WLAST(xt_rsc_0_14_WLAST),
      .WUSER(xt_rsc_0_14_WUSER),
      .WVALID(xt_rsc_0_14_WVALID),
      .WREADY(xt_rsc_0_14_WREADY),
      .BID(xt_rsc_0_14_BID),
      .BRESP(xt_rsc_0_14_BRESP),
      .BUSER(xt_rsc_0_14_BUSER),
      .BVALID(xt_rsc_0_14_BVALID),
      .BREADY(xt_rsc_0_14_BREADY),
      .ARID(xt_rsc_0_14_ARID),
      .ARADDR(xt_rsc_0_14_ARADDR),
      .ARLEN(xt_rsc_0_14_ARLEN),
      .ARSIZE(xt_rsc_0_14_ARSIZE),
      .ARBURST(xt_rsc_0_14_ARBURST),
      .ARLOCK(xt_rsc_0_14_ARLOCK),
      .ARCACHE(xt_rsc_0_14_ARCACHE),
      .ARPROT(xt_rsc_0_14_ARPROT),
      .ARQOS(xt_rsc_0_14_ARQOS),
      .ARREGION(xt_rsc_0_14_ARREGION),
      .ARUSER(xt_rsc_0_14_ARUSER),
      .ARVALID(xt_rsc_0_14_ARVALID),
      .ARREADY(xt_rsc_0_14_ARREADY),
      .RID(xt_rsc_0_14_RID),
      .RDATA(xt_rsc_0_14_RDATA),
      .RRESP(xt_rsc_0_14_RRESP),
      .RLAST(xt_rsc_0_14_RLAST),
      .RUSER(xt_rsc_0_14_RUSER),
      .RVALID(xt_rsc_0_14_RVALID),
      .RREADY(xt_rsc_0_14_RREADY),
      .s_re(xt_rsc_0_14_i_s_re_core_sct),
      .s_we(xt_rsc_0_14_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_14_i_s_raddr),
      .s_waddr(xt_rsc_0_14_i_s_waddr),
      .s_din(xt_rsc_0_14_i_s_din),
      .s_dout(xt_rsc_0_14_i_s_dout),
      .s_rrdy(xt_rsc_0_14_i_s_rrdy),
      .s_wrdy(xt_rsc_0_14_i_s_wrdy),
      .is_idle(xt_rsc_0_14_is_idle_1),
      .tr_write_done(xt_rsc_0_14_tr_write_done),
      .s_tdone(xt_rsc_0_14_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_14_i_xt_rsc_0_14_wait_ctrl peaseNTT_core_xt_rsc_0_14_i_xt_rsc_0_14_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_14_i_oswt(xt_rsc_0_14_i_oswt),
      .xt_rsc_0_14_i_oswt_1(xt_rsc_0_14_i_oswt_1),
      .xt_rsc_0_14_i_biwt(xt_rsc_0_14_i_biwt),
      .xt_rsc_0_14_i_bdwt(xt_rsc_0_14_i_bdwt),
      .xt_rsc_0_14_i_bcwt(xt_rsc_0_14_i_bcwt),
      .xt_rsc_0_14_i_s_re_core_sct(xt_rsc_0_14_i_s_re_core_sct),
      .xt_rsc_0_14_i_biwt_1(xt_rsc_0_14_i_biwt_1),
      .xt_rsc_0_14_i_bdwt_2(xt_rsc_0_14_i_bdwt_2),
      .xt_rsc_0_14_i_bcwt_1(xt_rsc_0_14_i_bcwt_1),
      .xt_rsc_0_14_i_s_we_core_sct(xt_rsc_0_14_i_s_we_core_sct),
      .xt_rsc_0_14_i_s_rrdy(xt_rsc_0_14_i_s_rrdy),
      .xt_rsc_0_14_i_s_wrdy(xt_rsc_0_14_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_14_i_xt_rsc_0_14_wait_dp peaseNTT_core_xt_rsc_0_14_i_xt_rsc_0_14_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_14_i_oswt(xt_rsc_0_14_i_oswt),
      .xt_rsc_0_14_i_wen_comp(xt_rsc_0_14_i_wen_comp),
      .xt_rsc_0_14_i_oswt_1(xt_rsc_0_14_i_oswt_1),
      .xt_rsc_0_14_i_wen_comp_1(xt_rsc_0_14_i_wen_comp_1),
      .xt_rsc_0_14_i_s_raddr_core(xt_rsc_0_14_i_s_raddr_core),
      .xt_rsc_0_14_i_s_waddr_core(xt_rsc_0_14_i_s_waddr_core),
      .xt_rsc_0_14_i_s_din_mxwt(xt_rsc_0_14_i_s_din_mxwt),
      .xt_rsc_0_14_i_s_dout_core(xt_rsc_0_14_i_s_dout_core),
      .xt_rsc_0_14_i_biwt(xt_rsc_0_14_i_biwt),
      .xt_rsc_0_14_i_bdwt(xt_rsc_0_14_i_bdwt),
      .xt_rsc_0_14_i_bcwt(xt_rsc_0_14_i_bcwt),
      .xt_rsc_0_14_i_biwt_1(xt_rsc_0_14_i_biwt_1),
      .xt_rsc_0_14_i_bdwt_2(xt_rsc_0_14_i_bdwt_2),
      .xt_rsc_0_14_i_bcwt_1(xt_rsc_0_14_i_bcwt_1),
      .xt_rsc_0_14_i_s_raddr(xt_rsc_0_14_i_s_raddr),
      .xt_rsc_0_14_i_s_raddr_core_sct(xt_rsc_0_14_i_s_re_core_sct),
      .xt_rsc_0_14_i_s_waddr(xt_rsc_0_14_i_s_waddr),
      .xt_rsc_0_14_i_s_waddr_core_sct(xt_rsc_0_14_i_s_we_core_sct),
      .xt_rsc_0_14_i_s_din(xt_rsc_0_14_i_s_din),
      .xt_rsc_0_14_i_s_dout(xt_rsc_0_14_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_13_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_13_i (
  clk, rst, xt_rsc_0_13_s_tdone, xt_rsc_0_13_tr_write_done, xt_rsc_0_13_RREADY, xt_rsc_0_13_RVALID,
      xt_rsc_0_13_RUSER, xt_rsc_0_13_RLAST, xt_rsc_0_13_RRESP, xt_rsc_0_13_RDATA,
      xt_rsc_0_13_RID, xt_rsc_0_13_ARREADY, xt_rsc_0_13_ARVALID, xt_rsc_0_13_ARUSER,
      xt_rsc_0_13_ARREGION, xt_rsc_0_13_ARQOS, xt_rsc_0_13_ARPROT, xt_rsc_0_13_ARCACHE,
      xt_rsc_0_13_ARLOCK, xt_rsc_0_13_ARBURST, xt_rsc_0_13_ARSIZE, xt_rsc_0_13_ARLEN,
      xt_rsc_0_13_ARADDR, xt_rsc_0_13_ARID, xt_rsc_0_13_BREADY, xt_rsc_0_13_BVALID,
      xt_rsc_0_13_BUSER, xt_rsc_0_13_BRESP, xt_rsc_0_13_BID, xt_rsc_0_13_WREADY,
      xt_rsc_0_13_WVALID, xt_rsc_0_13_WUSER, xt_rsc_0_13_WLAST, xt_rsc_0_13_WSTRB,
      xt_rsc_0_13_WDATA, xt_rsc_0_13_AWREADY, xt_rsc_0_13_AWVALID, xt_rsc_0_13_AWUSER,
      xt_rsc_0_13_AWREGION, xt_rsc_0_13_AWQOS, xt_rsc_0_13_AWPROT, xt_rsc_0_13_AWCACHE,
      xt_rsc_0_13_AWLOCK, xt_rsc_0_13_AWBURST, xt_rsc_0_13_AWSIZE, xt_rsc_0_13_AWLEN,
      xt_rsc_0_13_AWADDR, xt_rsc_0_13_AWID, core_wen, xt_rsc_0_13_i_oswt, xt_rsc_0_13_i_wen_comp,
      xt_rsc_0_13_i_oswt_1, xt_rsc_0_13_i_wen_comp_1, xt_rsc_0_13_i_s_raddr_core,
      xt_rsc_0_13_i_s_waddr_core, xt_rsc_0_13_i_s_din_mxwt, xt_rsc_0_13_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_13_s_tdone;
  input xt_rsc_0_13_tr_write_done;
  input xt_rsc_0_13_RREADY;
  output xt_rsc_0_13_RVALID;
  output xt_rsc_0_13_RUSER;
  output xt_rsc_0_13_RLAST;
  output [1:0] xt_rsc_0_13_RRESP;
  output [31:0] xt_rsc_0_13_RDATA;
  output xt_rsc_0_13_RID;
  output xt_rsc_0_13_ARREADY;
  input xt_rsc_0_13_ARVALID;
  input xt_rsc_0_13_ARUSER;
  input [3:0] xt_rsc_0_13_ARREGION;
  input [3:0] xt_rsc_0_13_ARQOS;
  input [2:0] xt_rsc_0_13_ARPROT;
  input [3:0] xt_rsc_0_13_ARCACHE;
  input xt_rsc_0_13_ARLOCK;
  input [1:0] xt_rsc_0_13_ARBURST;
  input [2:0] xt_rsc_0_13_ARSIZE;
  input [7:0] xt_rsc_0_13_ARLEN;
  input [11:0] xt_rsc_0_13_ARADDR;
  input xt_rsc_0_13_ARID;
  input xt_rsc_0_13_BREADY;
  output xt_rsc_0_13_BVALID;
  output xt_rsc_0_13_BUSER;
  output [1:0] xt_rsc_0_13_BRESP;
  output xt_rsc_0_13_BID;
  output xt_rsc_0_13_WREADY;
  input xt_rsc_0_13_WVALID;
  input xt_rsc_0_13_WUSER;
  input xt_rsc_0_13_WLAST;
  input [3:0] xt_rsc_0_13_WSTRB;
  input [31:0] xt_rsc_0_13_WDATA;
  output xt_rsc_0_13_AWREADY;
  input xt_rsc_0_13_AWVALID;
  input xt_rsc_0_13_AWUSER;
  input [3:0] xt_rsc_0_13_AWREGION;
  input [3:0] xt_rsc_0_13_AWQOS;
  input [2:0] xt_rsc_0_13_AWPROT;
  input [3:0] xt_rsc_0_13_AWCACHE;
  input xt_rsc_0_13_AWLOCK;
  input [1:0] xt_rsc_0_13_AWBURST;
  input [2:0] xt_rsc_0_13_AWSIZE;
  input [7:0] xt_rsc_0_13_AWLEN;
  input [11:0] xt_rsc_0_13_AWADDR;
  input xt_rsc_0_13_AWID;
  input core_wen;
  input xt_rsc_0_13_i_oswt;
  output xt_rsc_0_13_i_wen_comp;
  input xt_rsc_0_13_i_oswt_1;
  output xt_rsc_0_13_i_wen_comp_1;
  input [3:0] xt_rsc_0_13_i_s_raddr_core;
  input [3:0] xt_rsc_0_13_i_s_waddr_core;
  output [31:0] xt_rsc_0_13_i_s_din_mxwt;
  input [31:0] xt_rsc_0_13_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_13_i_biwt;
  wire xt_rsc_0_13_i_bdwt;
  wire xt_rsc_0_13_i_bcwt;
  wire xt_rsc_0_13_i_s_re_core_sct;
  wire xt_rsc_0_13_i_biwt_1;
  wire xt_rsc_0_13_i_bdwt_2;
  wire xt_rsc_0_13_i_bcwt_1;
  wire xt_rsc_0_13_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_13_i_s_raddr;
  wire [3:0] xt_rsc_0_13_i_s_waddr;
  wire [31:0] xt_rsc_0_13_i_s_din;
  wire [31:0] xt_rsc_0_13_i_s_dout;
  wire xt_rsc_0_13_i_s_rrdy;
  wire xt_rsc_0_13_i_s_wrdy;
  wire xt_rsc_0_13_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_13_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_13_AWID),
      .AWADDR(xt_rsc_0_13_AWADDR),
      .AWLEN(xt_rsc_0_13_AWLEN),
      .AWSIZE(xt_rsc_0_13_AWSIZE),
      .AWBURST(xt_rsc_0_13_AWBURST),
      .AWLOCK(xt_rsc_0_13_AWLOCK),
      .AWCACHE(xt_rsc_0_13_AWCACHE),
      .AWPROT(xt_rsc_0_13_AWPROT),
      .AWQOS(xt_rsc_0_13_AWQOS),
      .AWREGION(xt_rsc_0_13_AWREGION),
      .AWUSER(xt_rsc_0_13_AWUSER),
      .AWVALID(xt_rsc_0_13_AWVALID),
      .AWREADY(xt_rsc_0_13_AWREADY),
      .WDATA(xt_rsc_0_13_WDATA),
      .WSTRB(xt_rsc_0_13_WSTRB),
      .WLAST(xt_rsc_0_13_WLAST),
      .WUSER(xt_rsc_0_13_WUSER),
      .WVALID(xt_rsc_0_13_WVALID),
      .WREADY(xt_rsc_0_13_WREADY),
      .BID(xt_rsc_0_13_BID),
      .BRESP(xt_rsc_0_13_BRESP),
      .BUSER(xt_rsc_0_13_BUSER),
      .BVALID(xt_rsc_0_13_BVALID),
      .BREADY(xt_rsc_0_13_BREADY),
      .ARID(xt_rsc_0_13_ARID),
      .ARADDR(xt_rsc_0_13_ARADDR),
      .ARLEN(xt_rsc_0_13_ARLEN),
      .ARSIZE(xt_rsc_0_13_ARSIZE),
      .ARBURST(xt_rsc_0_13_ARBURST),
      .ARLOCK(xt_rsc_0_13_ARLOCK),
      .ARCACHE(xt_rsc_0_13_ARCACHE),
      .ARPROT(xt_rsc_0_13_ARPROT),
      .ARQOS(xt_rsc_0_13_ARQOS),
      .ARREGION(xt_rsc_0_13_ARREGION),
      .ARUSER(xt_rsc_0_13_ARUSER),
      .ARVALID(xt_rsc_0_13_ARVALID),
      .ARREADY(xt_rsc_0_13_ARREADY),
      .RID(xt_rsc_0_13_RID),
      .RDATA(xt_rsc_0_13_RDATA),
      .RRESP(xt_rsc_0_13_RRESP),
      .RLAST(xt_rsc_0_13_RLAST),
      .RUSER(xt_rsc_0_13_RUSER),
      .RVALID(xt_rsc_0_13_RVALID),
      .RREADY(xt_rsc_0_13_RREADY),
      .s_re(xt_rsc_0_13_i_s_re_core_sct),
      .s_we(xt_rsc_0_13_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_13_i_s_raddr),
      .s_waddr(xt_rsc_0_13_i_s_waddr),
      .s_din(xt_rsc_0_13_i_s_din),
      .s_dout(xt_rsc_0_13_i_s_dout),
      .s_rrdy(xt_rsc_0_13_i_s_rrdy),
      .s_wrdy(xt_rsc_0_13_i_s_wrdy),
      .is_idle(xt_rsc_0_13_is_idle_1),
      .tr_write_done(xt_rsc_0_13_tr_write_done),
      .s_tdone(xt_rsc_0_13_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_13_i_xt_rsc_0_13_wait_ctrl peaseNTT_core_xt_rsc_0_13_i_xt_rsc_0_13_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_13_i_oswt(xt_rsc_0_13_i_oswt),
      .xt_rsc_0_13_i_oswt_1(xt_rsc_0_13_i_oswt_1),
      .xt_rsc_0_13_i_biwt(xt_rsc_0_13_i_biwt),
      .xt_rsc_0_13_i_bdwt(xt_rsc_0_13_i_bdwt),
      .xt_rsc_0_13_i_bcwt(xt_rsc_0_13_i_bcwt),
      .xt_rsc_0_13_i_s_re_core_sct(xt_rsc_0_13_i_s_re_core_sct),
      .xt_rsc_0_13_i_biwt_1(xt_rsc_0_13_i_biwt_1),
      .xt_rsc_0_13_i_bdwt_2(xt_rsc_0_13_i_bdwt_2),
      .xt_rsc_0_13_i_bcwt_1(xt_rsc_0_13_i_bcwt_1),
      .xt_rsc_0_13_i_s_we_core_sct(xt_rsc_0_13_i_s_we_core_sct),
      .xt_rsc_0_13_i_s_rrdy(xt_rsc_0_13_i_s_rrdy),
      .xt_rsc_0_13_i_s_wrdy(xt_rsc_0_13_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_13_i_xt_rsc_0_13_wait_dp peaseNTT_core_xt_rsc_0_13_i_xt_rsc_0_13_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_13_i_oswt(xt_rsc_0_13_i_oswt),
      .xt_rsc_0_13_i_wen_comp(xt_rsc_0_13_i_wen_comp),
      .xt_rsc_0_13_i_oswt_1(xt_rsc_0_13_i_oswt_1),
      .xt_rsc_0_13_i_wen_comp_1(xt_rsc_0_13_i_wen_comp_1),
      .xt_rsc_0_13_i_s_raddr_core(xt_rsc_0_13_i_s_raddr_core),
      .xt_rsc_0_13_i_s_waddr_core(xt_rsc_0_13_i_s_waddr_core),
      .xt_rsc_0_13_i_s_din_mxwt(xt_rsc_0_13_i_s_din_mxwt),
      .xt_rsc_0_13_i_s_dout_core(xt_rsc_0_13_i_s_dout_core),
      .xt_rsc_0_13_i_biwt(xt_rsc_0_13_i_biwt),
      .xt_rsc_0_13_i_bdwt(xt_rsc_0_13_i_bdwt),
      .xt_rsc_0_13_i_bcwt(xt_rsc_0_13_i_bcwt),
      .xt_rsc_0_13_i_biwt_1(xt_rsc_0_13_i_biwt_1),
      .xt_rsc_0_13_i_bdwt_2(xt_rsc_0_13_i_bdwt_2),
      .xt_rsc_0_13_i_bcwt_1(xt_rsc_0_13_i_bcwt_1),
      .xt_rsc_0_13_i_s_raddr(xt_rsc_0_13_i_s_raddr),
      .xt_rsc_0_13_i_s_raddr_core_sct(xt_rsc_0_13_i_s_re_core_sct),
      .xt_rsc_0_13_i_s_waddr(xt_rsc_0_13_i_s_waddr),
      .xt_rsc_0_13_i_s_waddr_core_sct(xt_rsc_0_13_i_s_we_core_sct),
      .xt_rsc_0_13_i_s_din(xt_rsc_0_13_i_s_din),
      .xt_rsc_0_13_i_s_dout(xt_rsc_0_13_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_12_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_12_i (
  clk, rst, xt_rsc_0_12_s_tdone, xt_rsc_0_12_tr_write_done, xt_rsc_0_12_RREADY, xt_rsc_0_12_RVALID,
      xt_rsc_0_12_RUSER, xt_rsc_0_12_RLAST, xt_rsc_0_12_RRESP, xt_rsc_0_12_RDATA,
      xt_rsc_0_12_RID, xt_rsc_0_12_ARREADY, xt_rsc_0_12_ARVALID, xt_rsc_0_12_ARUSER,
      xt_rsc_0_12_ARREGION, xt_rsc_0_12_ARQOS, xt_rsc_0_12_ARPROT, xt_rsc_0_12_ARCACHE,
      xt_rsc_0_12_ARLOCK, xt_rsc_0_12_ARBURST, xt_rsc_0_12_ARSIZE, xt_rsc_0_12_ARLEN,
      xt_rsc_0_12_ARADDR, xt_rsc_0_12_ARID, xt_rsc_0_12_BREADY, xt_rsc_0_12_BVALID,
      xt_rsc_0_12_BUSER, xt_rsc_0_12_BRESP, xt_rsc_0_12_BID, xt_rsc_0_12_WREADY,
      xt_rsc_0_12_WVALID, xt_rsc_0_12_WUSER, xt_rsc_0_12_WLAST, xt_rsc_0_12_WSTRB,
      xt_rsc_0_12_WDATA, xt_rsc_0_12_AWREADY, xt_rsc_0_12_AWVALID, xt_rsc_0_12_AWUSER,
      xt_rsc_0_12_AWREGION, xt_rsc_0_12_AWQOS, xt_rsc_0_12_AWPROT, xt_rsc_0_12_AWCACHE,
      xt_rsc_0_12_AWLOCK, xt_rsc_0_12_AWBURST, xt_rsc_0_12_AWSIZE, xt_rsc_0_12_AWLEN,
      xt_rsc_0_12_AWADDR, xt_rsc_0_12_AWID, core_wen, xt_rsc_0_12_i_oswt, xt_rsc_0_12_i_wen_comp,
      xt_rsc_0_12_i_oswt_1, xt_rsc_0_12_i_wen_comp_1, xt_rsc_0_12_i_s_raddr_core,
      xt_rsc_0_12_i_s_waddr_core, xt_rsc_0_12_i_s_din_mxwt, xt_rsc_0_12_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_12_s_tdone;
  input xt_rsc_0_12_tr_write_done;
  input xt_rsc_0_12_RREADY;
  output xt_rsc_0_12_RVALID;
  output xt_rsc_0_12_RUSER;
  output xt_rsc_0_12_RLAST;
  output [1:0] xt_rsc_0_12_RRESP;
  output [31:0] xt_rsc_0_12_RDATA;
  output xt_rsc_0_12_RID;
  output xt_rsc_0_12_ARREADY;
  input xt_rsc_0_12_ARVALID;
  input xt_rsc_0_12_ARUSER;
  input [3:0] xt_rsc_0_12_ARREGION;
  input [3:0] xt_rsc_0_12_ARQOS;
  input [2:0] xt_rsc_0_12_ARPROT;
  input [3:0] xt_rsc_0_12_ARCACHE;
  input xt_rsc_0_12_ARLOCK;
  input [1:0] xt_rsc_0_12_ARBURST;
  input [2:0] xt_rsc_0_12_ARSIZE;
  input [7:0] xt_rsc_0_12_ARLEN;
  input [11:0] xt_rsc_0_12_ARADDR;
  input xt_rsc_0_12_ARID;
  input xt_rsc_0_12_BREADY;
  output xt_rsc_0_12_BVALID;
  output xt_rsc_0_12_BUSER;
  output [1:0] xt_rsc_0_12_BRESP;
  output xt_rsc_0_12_BID;
  output xt_rsc_0_12_WREADY;
  input xt_rsc_0_12_WVALID;
  input xt_rsc_0_12_WUSER;
  input xt_rsc_0_12_WLAST;
  input [3:0] xt_rsc_0_12_WSTRB;
  input [31:0] xt_rsc_0_12_WDATA;
  output xt_rsc_0_12_AWREADY;
  input xt_rsc_0_12_AWVALID;
  input xt_rsc_0_12_AWUSER;
  input [3:0] xt_rsc_0_12_AWREGION;
  input [3:0] xt_rsc_0_12_AWQOS;
  input [2:0] xt_rsc_0_12_AWPROT;
  input [3:0] xt_rsc_0_12_AWCACHE;
  input xt_rsc_0_12_AWLOCK;
  input [1:0] xt_rsc_0_12_AWBURST;
  input [2:0] xt_rsc_0_12_AWSIZE;
  input [7:0] xt_rsc_0_12_AWLEN;
  input [11:0] xt_rsc_0_12_AWADDR;
  input xt_rsc_0_12_AWID;
  input core_wen;
  input xt_rsc_0_12_i_oswt;
  output xt_rsc_0_12_i_wen_comp;
  input xt_rsc_0_12_i_oswt_1;
  output xt_rsc_0_12_i_wen_comp_1;
  input [3:0] xt_rsc_0_12_i_s_raddr_core;
  input [3:0] xt_rsc_0_12_i_s_waddr_core;
  output [31:0] xt_rsc_0_12_i_s_din_mxwt;
  input [31:0] xt_rsc_0_12_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_12_i_biwt;
  wire xt_rsc_0_12_i_bdwt;
  wire xt_rsc_0_12_i_bcwt;
  wire xt_rsc_0_12_i_s_re_core_sct;
  wire xt_rsc_0_12_i_biwt_1;
  wire xt_rsc_0_12_i_bdwt_2;
  wire xt_rsc_0_12_i_bcwt_1;
  wire xt_rsc_0_12_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_12_i_s_raddr;
  wire [3:0] xt_rsc_0_12_i_s_waddr;
  wire [31:0] xt_rsc_0_12_i_s_din;
  wire [31:0] xt_rsc_0_12_i_s_dout;
  wire xt_rsc_0_12_i_s_rrdy;
  wire xt_rsc_0_12_i_s_wrdy;
  wire xt_rsc_0_12_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_12_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_12_AWID),
      .AWADDR(xt_rsc_0_12_AWADDR),
      .AWLEN(xt_rsc_0_12_AWLEN),
      .AWSIZE(xt_rsc_0_12_AWSIZE),
      .AWBURST(xt_rsc_0_12_AWBURST),
      .AWLOCK(xt_rsc_0_12_AWLOCK),
      .AWCACHE(xt_rsc_0_12_AWCACHE),
      .AWPROT(xt_rsc_0_12_AWPROT),
      .AWQOS(xt_rsc_0_12_AWQOS),
      .AWREGION(xt_rsc_0_12_AWREGION),
      .AWUSER(xt_rsc_0_12_AWUSER),
      .AWVALID(xt_rsc_0_12_AWVALID),
      .AWREADY(xt_rsc_0_12_AWREADY),
      .WDATA(xt_rsc_0_12_WDATA),
      .WSTRB(xt_rsc_0_12_WSTRB),
      .WLAST(xt_rsc_0_12_WLAST),
      .WUSER(xt_rsc_0_12_WUSER),
      .WVALID(xt_rsc_0_12_WVALID),
      .WREADY(xt_rsc_0_12_WREADY),
      .BID(xt_rsc_0_12_BID),
      .BRESP(xt_rsc_0_12_BRESP),
      .BUSER(xt_rsc_0_12_BUSER),
      .BVALID(xt_rsc_0_12_BVALID),
      .BREADY(xt_rsc_0_12_BREADY),
      .ARID(xt_rsc_0_12_ARID),
      .ARADDR(xt_rsc_0_12_ARADDR),
      .ARLEN(xt_rsc_0_12_ARLEN),
      .ARSIZE(xt_rsc_0_12_ARSIZE),
      .ARBURST(xt_rsc_0_12_ARBURST),
      .ARLOCK(xt_rsc_0_12_ARLOCK),
      .ARCACHE(xt_rsc_0_12_ARCACHE),
      .ARPROT(xt_rsc_0_12_ARPROT),
      .ARQOS(xt_rsc_0_12_ARQOS),
      .ARREGION(xt_rsc_0_12_ARREGION),
      .ARUSER(xt_rsc_0_12_ARUSER),
      .ARVALID(xt_rsc_0_12_ARVALID),
      .ARREADY(xt_rsc_0_12_ARREADY),
      .RID(xt_rsc_0_12_RID),
      .RDATA(xt_rsc_0_12_RDATA),
      .RRESP(xt_rsc_0_12_RRESP),
      .RLAST(xt_rsc_0_12_RLAST),
      .RUSER(xt_rsc_0_12_RUSER),
      .RVALID(xt_rsc_0_12_RVALID),
      .RREADY(xt_rsc_0_12_RREADY),
      .s_re(xt_rsc_0_12_i_s_re_core_sct),
      .s_we(xt_rsc_0_12_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_12_i_s_raddr),
      .s_waddr(xt_rsc_0_12_i_s_waddr),
      .s_din(xt_rsc_0_12_i_s_din),
      .s_dout(xt_rsc_0_12_i_s_dout),
      .s_rrdy(xt_rsc_0_12_i_s_rrdy),
      .s_wrdy(xt_rsc_0_12_i_s_wrdy),
      .is_idle(xt_rsc_0_12_is_idle_1),
      .tr_write_done(xt_rsc_0_12_tr_write_done),
      .s_tdone(xt_rsc_0_12_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_12_i_xt_rsc_0_12_wait_ctrl peaseNTT_core_xt_rsc_0_12_i_xt_rsc_0_12_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_12_i_oswt(xt_rsc_0_12_i_oswt),
      .xt_rsc_0_12_i_oswt_1(xt_rsc_0_12_i_oswt_1),
      .xt_rsc_0_12_i_biwt(xt_rsc_0_12_i_biwt),
      .xt_rsc_0_12_i_bdwt(xt_rsc_0_12_i_bdwt),
      .xt_rsc_0_12_i_bcwt(xt_rsc_0_12_i_bcwt),
      .xt_rsc_0_12_i_s_re_core_sct(xt_rsc_0_12_i_s_re_core_sct),
      .xt_rsc_0_12_i_biwt_1(xt_rsc_0_12_i_biwt_1),
      .xt_rsc_0_12_i_bdwt_2(xt_rsc_0_12_i_bdwt_2),
      .xt_rsc_0_12_i_bcwt_1(xt_rsc_0_12_i_bcwt_1),
      .xt_rsc_0_12_i_s_we_core_sct(xt_rsc_0_12_i_s_we_core_sct),
      .xt_rsc_0_12_i_s_rrdy(xt_rsc_0_12_i_s_rrdy),
      .xt_rsc_0_12_i_s_wrdy(xt_rsc_0_12_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_12_i_xt_rsc_0_12_wait_dp peaseNTT_core_xt_rsc_0_12_i_xt_rsc_0_12_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_12_i_oswt(xt_rsc_0_12_i_oswt),
      .xt_rsc_0_12_i_wen_comp(xt_rsc_0_12_i_wen_comp),
      .xt_rsc_0_12_i_oswt_1(xt_rsc_0_12_i_oswt_1),
      .xt_rsc_0_12_i_wen_comp_1(xt_rsc_0_12_i_wen_comp_1),
      .xt_rsc_0_12_i_s_raddr_core(xt_rsc_0_12_i_s_raddr_core),
      .xt_rsc_0_12_i_s_waddr_core(xt_rsc_0_12_i_s_waddr_core),
      .xt_rsc_0_12_i_s_din_mxwt(xt_rsc_0_12_i_s_din_mxwt),
      .xt_rsc_0_12_i_s_dout_core(xt_rsc_0_12_i_s_dout_core),
      .xt_rsc_0_12_i_biwt(xt_rsc_0_12_i_biwt),
      .xt_rsc_0_12_i_bdwt(xt_rsc_0_12_i_bdwt),
      .xt_rsc_0_12_i_bcwt(xt_rsc_0_12_i_bcwt),
      .xt_rsc_0_12_i_biwt_1(xt_rsc_0_12_i_biwt_1),
      .xt_rsc_0_12_i_bdwt_2(xt_rsc_0_12_i_bdwt_2),
      .xt_rsc_0_12_i_bcwt_1(xt_rsc_0_12_i_bcwt_1),
      .xt_rsc_0_12_i_s_raddr(xt_rsc_0_12_i_s_raddr),
      .xt_rsc_0_12_i_s_raddr_core_sct(xt_rsc_0_12_i_s_re_core_sct),
      .xt_rsc_0_12_i_s_waddr(xt_rsc_0_12_i_s_waddr),
      .xt_rsc_0_12_i_s_waddr_core_sct(xt_rsc_0_12_i_s_we_core_sct),
      .xt_rsc_0_12_i_s_din(xt_rsc_0_12_i_s_din),
      .xt_rsc_0_12_i_s_dout(xt_rsc_0_12_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_11_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_11_i (
  clk, rst, xt_rsc_0_11_s_tdone, xt_rsc_0_11_tr_write_done, xt_rsc_0_11_RREADY, xt_rsc_0_11_RVALID,
      xt_rsc_0_11_RUSER, xt_rsc_0_11_RLAST, xt_rsc_0_11_RRESP, xt_rsc_0_11_RDATA,
      xt_rsc_0_11_RID, xt_rsc_0_11_ARREADY, xt_rsc_0_11_ARVALID, xt_rsc_0_11_ARUSER,
      xt_rsc_0_11_ARREGION, xt_rsc_0_11_ARQOS, xt_rsc_0_11_ARPROT, xt_rsc_0_11_ARCACHE,
      xt_rsc_0_11_ARLOCK, xt_rsc_0_11_ARBURST, xt_rsc_0_11_ARSIZE, xt_rsc_0_11_ARLEN,
      xt_rsc_0_11_ARADDR, xt_rsc_0_11_ARID, xt_rsc_0_11_BREADY, xt_rsc_0_11_BVALID,
      xt_rsc_0_11_BUSER, xt_rsc_0_11_BRESP, xt_rsc_0_11_BID, xt_rsc_0_11_WREADY,
      xt_rsc_0_11_WVALID, xt_rsc_0_11_WUSER, xt_rsc_0_11_WLAST, xt_rsc_0_11_WSTRB,
      xt_rsc_0_11_WDATA, xt_rsc_0_11_AWREADY, xt_rsc_0_11_AWVALID, xt_rsc_0_11_AWUSER,
      xt_rsc_0_11_AWREGION, xt_rsc_0_11_AWQOS, xt_rsc_0_11_AWPROT, xt_rsc_0_11_AWCACHE,
      xt_rsc_0_11_AWLOCK, xt_rsc_0_11_AWBURST, xt_rsc_0_11_AWSIZE, xt_rsc_0_11_AWLEN,
      xt_rsc_0_11_AWADDR, xt_rsc_0_11_AWID, core_wen, xt_rsc_0_11_i_oswt, xt_rsc_0_11_i_wen_comp,
      xt_rsc_0_11_i_oswt_1, xt_rsc_0_11_i_wen_comp_1, xt_rsc_0_11_i_s_raddr_core,
      xt_rsc_0_11_i_s_waddr_core, xt_rsc_0_11_i_s_din_mxwt, xt_rsc_0_11_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_11_s_tdone;
  input xt_rsc_0_11_tr_write_done;
  input xt_rsc_0_11_RREADY;
  output xt_rsc_0_11_RVALID;
  output xt_rsc_0_11_RUSER;
  output xt_rsc_0_11_RLAST;
  output [1:0] xt_rsc_0_11_RRESP;
  output [31:0] xt_rsc_0_11_RDATA;
  output xt_rsc_0_11_RID;
  output xt_rsc_0_11_ARREADY;
  input xt_rsc_0_11_ARVALID;
  input xt_rsc_0_11_ARUSER;
  input [3:0] xt_rsc_0_11_ARREGION;
  input [3:0] xt_rsc_0_11_ARQOS;
  input [2:0] xt_rsc_0_11_ARPROT;
  input [3:0] xt_rsc_0_11_ARCACHE;
  input xt_rsc_0_11_ARLOCK;
  input [1:0] xt_rsc_0_11_ARBURST;
  input [2:0] xt_rsc_0_11_ARSIZE;
  input [7:0] xt_rsc_0_11_ARLEN;
  input [11:0] xt_rsc_0_11_ARADDR;
  input xt_rsc_0_11_ARID;
  input xt_rsc_0_11_BREADY;
  output xt_rsc_0_11_BVALID;
  output xt_rsc_0_11_BUSER;
  output [1:0] xt_rsc_0_11_BRESP;
  output xt_rsc_0_11_BID;
  output xt_rsc_0_11_WREADY;
  input xt_rsc_0_11_WVALID;
  input xt_rsc_0_11_WUSER;
  input xt_rsc_0_11_WLAST;
  input [3:0] xt_rsc_0_11_WSTRB;
  input [31:0] xt_rsc_0_11_WDATA;
  output xt_rsc_0_11_AWREADY;
  input xt_rsc_0_11_AWVALID;
  input xt_rsc_0_11_AWUSER;
  input [3:0] xt_rsc_0_11_AWREGION;
  input [3:0] xt_rsc_0_11_AWQOS;
  input [2:0] xt_rsc_0_11_AWPROT;
  input [3:0] xt_rsc_0_11_AWCACHE;
  input xt_rsc_0_11_AWLOCK;
  input [1:0] xt_rsc_0_11_AWBURST;
  input [2:0] xt_rsc_0_11_AWSIZE;
  input [7:0] xt_rsc_0_11_AWLEN;
  input [11:0] xt_rsc_0_11_AWADDR;
  input xt_rsc_0_11_AWID;
  input core_wen;
  input xt_rsc_0_11_i_oswt;
  output xt_rsc_0_11_i_wen_comp;
  input xt_rsc_0_11_i_oswt_1;
  output xt_rsc_0_11_i_wen_comp_1;
  input [3:0] xt_rsc_0_11_i_s_raddr_core;
  input [3:0] xt_rsc_0_11_i_s_waddr_core;
  output [31:0] xt_rsc_0_11_i_s_din_mxwt;
  input [31:0] xt_rsc_0_11_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_11_i_biwt;
  wire xt_rsc_0_11_i_bdwt;
  wire xt_rsc_0_11_i_bcwt;
  wire xt_rsc_0_11_i_s_re_core_sct;
  wire xt_rsc_0_11_i_biwt_1;
  wire xt_rsc_0_11_i_bdwt_2;
  wire xt_rsc_0_11_i_bcwt_1;
  wire xt_rsc_0_11_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_11_i_s_raddr;
  wire [3:0] xt_rsc_0_11_i_s_waddr;
  wire [31:0] xt_rsc_0_11_i_s_din;
  wire [31:0] xt_rsc_0_11_i_s_dout;
  wire xt_rsc_0_11_i_s_rrdy;
  wire xt_rsc_0_11_i_s_wrdy;
  wire xt_rsc_0_11_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_11_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_11_AWID),
      .AWADDR(xt_rsc_0_11_AWADDR),
      .AWLEN(xt_rsc_0_11_AWLEN),
      .AWSIZE(xt_rsc_0_11_AWSIZE),
      .AWBURST(xt_rsc_0_11_AWBURST),
      .AWLOCK(xt_rsc_0_11_AWLOCK),
      .AWCACHE(xt_rsc_0_11_AWCACHE),
      .AWPROT(xt_rsc_0_11_AWPROT),
      .AWQOS(xt_rsc_0_11_AWQOS),
      .AWREGION(xt_rsc_0_11_AWREGION),
      .AWUSER(xt_rsc_0_11_AWUSER),
      .AWVALID(xt_rsc_0_11_AWVALID),
      .AWREADY(xt_rsc_0_11_AWREADY),
      .WDATA(xt_rsc_0_11_WDATA),
      .WSTRB(xt_rsc_0_11_WSTRB),
      .WLAST(xt_rsc_0_11_WLAST),
      .WUSER(xt_rsc_0_11_WUSER),
      .WVALID(xt_rsc_0_11_WVALID),
      .WREADY(xt_rsc_0_11_WREADY),
      .BID(xt_rsc_0_11_BID),
      .BRESP(xt_rsc_0_11_BRESP),
      .BUSER(xt_rsc_0_11_BUSER),
      .BVALID(xt_rsc_0_11_BVALID),
      .BREADY(xt_rsc_0_11_BREADY),
      .ARID(xt_rsc_0_11_ARID),
      .ARADDR(xt_rsc_0_11_ARADDR),
      .ARLEN(xt_rsc_0_11_ARLEN),
      .ARSIZE(xt_rsc_0_11_ARSIZE),
      .ARBURST(xt_rsc_0_11_ARBURST),
      .ARLOCK(xt_rsc_0_11_ARLOCK),
      .ARCACHE(xt_rsc_0_11_ARCACHE),
      .ARPROT(xt_rsc_0_11_ARPROT),
      .ARQOS(xt_rsc_0_11_ARQOS),
      .ARREGION(xt_rsc_0_11_ARREGION),
      .ARUSER(xt_rsc_0_11_ARUSER),
      .ARVALID(xt_rsc_0_11_ARVALID),
      .ARREADY(xt_rsc_0_11_ARREADY),
      .RID(xt_rsc_0_11_RID),
      .RDATA(xt_rsc_0_11_RDATA),
      .RRESP(xt_rsc_0_11_RRESP),
      .RLAST(xt_rsc_0_11_RLAST),
      .RUSER(xt_rsc_0_11_RUSER),
      .RVALID(xt_rsc_0_11_RVALID),
      .RREADY(xt_rsc_0_11_RREADY),
      .s_re(xt_rsc_0_11_i_s_re_core_sct),
      .s_we(xt_rsc_0_11_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_11_i_s_raddr),
      .s_waddr(xt_rsc_0_11_i_s_waddr),
      .s_din(xt_rsc_0_11_i_s_din),
      .s_dout(xt_rsc_0_11_i_s_dout),
      .s_rrdy(xt_rsc_0_11_i_s_rrdy),
      .s_wrdy(xt_rsc_0_11_i_s_wrdy),
      .is_idle(xt_rsc_0_11_is_idle_1),
      .tr_write_done(xt_rsc_0_11_tr_write_done),
      .s_tdone(xt_rsc_0_11_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_11_i_xt_rsc_0_11_wait_ctrl peaseNTT_core_xt_rsc_0_11_i_xt_rsc_0_11_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_11_i_oswt(xt_rsc_0_11_i_oswt),
      .xt_rsc_0_11_i_oswt_1(xt_rsc_0_11_i_oswt_1),
      .xt_rsc_0_11_i_biwt(xt_rsc_0_11_i_biwt),
      .xt_rsc_0_11_i_bdwt(xt_rsc_0_11_i_bdwt),
      .xt_rsc_0_11_i_bcwt(xt_rsc_0_11_i_bcwt),
      .xt_rsc_0_11_i_s_re_core_sct(xt_rsc_0_11_i_s_re_core_sct),
      .xt_rsc_0_11_i_biwt_1(xt_rsc_0_11_i_biwt_1),
      .xt_rsc_0_11_i_bdwt_2(xt_rsc_0_11_i_bdwt_2),
      .xt_rsc_0_11_i_bcwt_1(xt_rsc_0_11_i_bcwt_1),
      .xt_rsc_0_11_i_s_we_core_sct(xt_rsc_0_11_i_s_we_core_sct),
      .xt_rsc_0_11_i_s_rrdy(xt_rsc_0_11_i_s_rrdy),
      .xt_rsc_0_11_i_s_wrdy(xt_rsc_0_11_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_11_i_xt_rsc_0_11_wait_dp peaseNTT_core_xt_rsc_0_11_i_xt_rsc_0_11_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_11_i_oswt(xt_rsc_0_11_i_oswt),
      .xt_rsc_0_11_i_wen_comp(xt_rsc_0_11_i_wen_comp),
      .xt_rsc_0_11_i_oswt_1(xt_rsc_0_11_i_oswt_1),
      .xt_rsc_0_11_i_wen_comp_1(xt_rsc_0_11_i_wen_comp_1),
      .xt_rsc_0_11_i_s_raddr_core(xt_rsc_0_11_i_s_raddr_core),
      .xt_rsc_0_11_i_s_waddr_core(xt_rsc_0_11_i_s_waddr_core),
      .xt_rsc_0_11_i_s_din_mxwt(xt_rsc_0_11_i_s_din_mxwt),
      .xt_rsc_0_11_i_s_dout_core(xt_rsc_0_11_i_s_dout_core),
      .xt_rsc_0_11_i_biwt(xt_rsc_0_11_i_biwt),
      .xt_rsc_0_11_i_bdwt(xt_rsc_0_11_i_bdwt),
      .xt_rsc_0_11_i_bcwt(xt_rsc_0_11_i_bcwt),
      .xt_rsc_0_11_i_biwt_1(xt_rsc_0_11_i_biwt_1),
      .xt_rsc_0_11_i_bdwt_2(xt_rsc_0_11_i_bdwt_2),
      .xt_rsc_0_11_i_bcwt_1(xt_rsc_0_11_i_bcwt_1),
      .xt_rsc_0_11_i_s_raddr(xt_rsc_0_11_i_s_raddr),
      .xt_rsc_0_11_i_s_raddr_core_sct(xt_rsc_0_11_i_s_re_core_sct),
      .xt_rsc_0_11_i_s_waddr(xt_rsc_0_11_i_s_waddr),
      .xt_rsc_0_11_i_s_waddr_core_sct(xt_rsc_0_11_i_s_we_core_sct),
      .xt_rsc_0_11_i_s_din(xt_rsc_0_11_i_s_din),
      .xt_rsc_0_11_i_s_dout(xt_rsc_0_11_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_10_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_10_i (
  clk, rst, xt_rsc_0_10_s_tdone, xt_rsc_0_10_tr_write_done, xt_rsc_0_10_RREADY, xt_rsc_0_10_RVALID,
      xt_rsc_0_10_RUSER, xt_rsc_0_10_RLAST, xt_rsc_0_10_RRESP, xt_rsc_0_10_RDATA,
      xt_rsc_0_10_RID, xt_rsc_0_10_ARREADY, xt_rsc_0_10_ARVALID, xt_rsc_0_10_ARUSER,
      xt_rsc_0_10_ARREGION, xt_rsc_0_10_ARQOS, xt_rsc_0_10_ARPROT, xt_rsc_0_10_ARCACHE,
      xt_rsc_0_10_ARLOCK, xt_rsc_0_10_ARBURST, xt_rsc_0_10_ARSIZE, xt_rsc_0_10_ARLEN,
      xt_rsc_0_10_ARADDR, xt_rsc_0_10_ARID, xt_rsc_0_10_BREADY, xt_rsc_0_10_BVALID,
      xt_rsc_0_10_BUSER, xt_rsc_0_10_BRESP, xt_rsc_0_10_BID, xt_rsc_0_10_WREADY,
      xt_rsc_0_10_WVALID, xt_rsc_0_10_WUSER, xt_rsc_0_10_WLAST, xt_rsc_0_10_WSTRB,
      xt_rsc_0_10_WDATA, xt_rsc_0_10_AWREADY, xt_rsc_0_10_AWVALID, xt_rsc_0_10_AWUSER,
      xt_rsc_0_10_AWREGION, xt_rsc_0_10_AWQOS, xt_rsc_0_10_AWPROT, xt_rsc_0_10_AWCACHE,
      xt_rsc_0_10_AWLOCK, xt_rsc_0_10_AWBURST, xt_rsc_0_10_AWSIZE, xt_rsc_0_10_AWLEN,
      xt_rsc_0_10_AWADDR, xt_rsc_0_10_AWID, core_wen, xt_rsc_0_10_i_oswt, xt_rsc_0_10_i_wen_comp,
      xt_rsc_0_10_i_oswt_1, xt_rsc_0_10_i_wen_comp_1, xt_rsc_0_10_i_s_raddr_core,
      xt_rsc_0_10_i_s_waddr_core, xt_rsc_0_10_i_s_din_mxwt, xt_rsc_0_10_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_10_s_tdone;
  input xt_rsc_0_10_tr_write_done;
  input xt_rsc_0_10_RREADY;
  output xt_rsc_0_10_RVALID;
  output xt_rsc_0_10_RUSER;
  output xt_rsc_0_10_RLAST;
  output [1:0] xt_rsc_0_10_RRESP;
  output [31:0] xt_rsc_0_10_RDATA;
  output xt_rsc_0_10_RID;
  output xt_rsc_0_10_ARREADY;
  input xt_rsc_0_10_ARVALID;
  input xt_rsc_0_10_ARUSER;
  input [3:0] xt_rsc_0_10_ARREGION;
  input [3:0] xt_rsc_0_10_ARQOS;
  input [2:0] xt_rsc_0_10_ARPROT;
  input [3:0] xt_rsc_0_10_ARCACHE;
  input xt_rsc_0_10_ARLOCK;
  input [1:0] xt_rsc_0_10_ARBURST;
  input [2:0] xt_rsc_0_10_ARSIZE;
  input [7:0] xt_rsc_0_10_ARLEN;
  input [11:0] xt_rsc_0_10_ARADDR;
  input xt_rsc_0_10_ARID;
  input xt_rsc_0_10_BREADY;
  output xt_rsc_0_10_BVALID;
  output xt_rsc_0_10_BUSER;
  output [1:0] xt_rsc_0_10_BRESP;
  output xt_rsc_0_10_BID;
  output xt_rsc_0_10_WREADY;
  input xt_rsc_0_10_WVALID;
  input xt_rsc_0_10_WUSER;
  input xt_rsc_0_10_WLAST;
  input [3:0] xt_rsc_0_10_WSTRB;
  input [31:0] xt_rsc_0_10_WDATA;
  output xt_rsc_0_10_AWREADY;
  input xt_rsc_0_10_AWVALID;
  input xt_rsc_0_10_AWUSER;
  input [3:0] xt_rsc_0_10_AWREGION;
  input [3:0] xt_rsc_0_10_AWQOS;
  input [2:0] xt_rsc_0_10_AWPROT;
  input [3:0] xt_rsc_0_10_AWCACHE;
  input xt_rsc_0_10_AWLOCK;
  input [1:0] xt_rsc_0_10_AWBURST;
  input [2:0] xt_rsc_0_10_AWSIZE;
  input [7:0] xt_rsc_0_10_AWLEN;
  input [11:0] xt_rsc_0_10_AWADDR;
  input xt_rsc_0_10_AWID;
  input core_wen;
  input xt_rsc_0_10_i_oswt;
  output xt_rsc_0_10_i_wen_comp;
  input xt_rsc_0_10_i_oswt_1;
  output xt_rsc_0_10_i_wen_comp_1;
  input [3:0] xt_rsc_0_10_i_s_raddr_core;
  input [3:0] xt_rsc_0_10_i_s_waddr_core;
  output [31:0] xt_rsc_0_10_i_s_din_mxwt;
  input [31:0] xt_rsc_0_10_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_10_i_biwt;
  wire xt_rsc_0_10_i_bdwt;
  wire xt_rsc_0_10_i_bcwt;
  wire xt_rsc_0_10_i_s_re_core_sct;
  wire xt_rsc_0_10_i_biwt_1;
  wire xt_rsc_0_10_i_bdwt_2;
  wire xt_rsc_0_10_i_bcwt_1;
  wire xt_rsc_0_10_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_10_i_s_raddr;
  wire [3:0] xt_rsc_0_10_i_s_waddr;
  wire [31:0] xt_rsc_0_10_i_s_din;
  wire [31:0] xt_rsc_0_10_i_s_dout;
  wire xt_rsc_0_10_i_s_rrdy;
  wire xt_rsc_0_10_i_s_wrdy;
  wire xt_rsc_0_10_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_10_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_10_AWID),
      .AWADDR(xt_rsc_0_10_AWADDR),
      .AWLEN(xt_rsc_0_10_AWLEN),
      .AWSIZE(xt_rsc_0_10_AWSIZE),
      .AWBURST(xt_rsc_0_10_AWBURST),
      .AWLOCK(xt_rsc_0_10_AWLOCK),
      .AWCACHE(xt_rsc_0_10_AWCACHE),
      .AWPROT(xt_rsc_0_10_AWPROT),
      .AWQOS(xt_rsc_0_10_AWQOS),
      .AWREGION(xt_rsc_0_10_AWREGION),
      .AWUSER(xt_rsc_0_10_AWUSER),
      .AWVALID(xt_rsc_0_10_AWVALID),
      .AWREADY(xt_rsc_0_10_AWREADY),
      .WDATA(xt_rsc_0_10_WDATA),
      .WSTRB(xt_rsc_0_10_WSTRB),
      .WLAST(xt_rsc_0_10_WLAST),
      .WUSER(xt_rsc_0_10_WUSER),
      .WVALID(xt_rsc_0_10_WVALID),
      .WREADY(xt_rsc_0_10_WREADY),
      .BID(xt_rsc_0_10_BID),
      .BRESP(xt_rsc_0_10_BRESP),
      .BUSER(xt_rsc_0_10_BUSER),
      .BVALID(xt_rsc_0_10_BVALID),
      .BREADY(xt_rsc_0_10_BREADY),
      .ARID(xt_rsc_0_10_ARID),
      .ARADDR(xt_rsc_0_10_ARADDR),
      .ARLEN(xt_rsc_0_10_ARLEN),
      .ARSIZE(xt_rsc_0_10_ARSIZE),
      .ARBURST(xt_rsc_0_10_ARBURST),
      .ARLOCK(xt_rsc_0_10_ARLOCK),
      .ARCACHE(xt_rsc_0_10_ARCACHE),
      .ARPROT(xt_rsc_0_10_ARPROT),
      .ARQOS(xt_rsc_0_10_ARQOS),
      .ARREGION(xt_rsc_0_10_ARREGION),
      .ARUSER(xt_rsc_0_10_ARUSER),
      .ARVALID(xt_rsc_0_10_ARVALID),
      .ARREADY(xt_rsc_0_10_ARREADY),
      .RID(xt_rsc_0_10_RID),
      .RDATA(xt_rsc_0_10_RDATA),
      .RRESP(xt_rsc_0_10_RRESP),
      .RLAST(xt_rsc_0_10_RLAST),
      .RUSER(xt_rsc_0_10_RUSER),
      .RVALID(xt_rsc_0_10_RVALID),
      .RREADY(xt_rsc_0_10_RREADY),
      .s_re(xt_rsc_0_10_i_s_re_core_sct),
      .s_we(xt_rsc_0_10_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_10_i_s_raddr),
      .s_waddr(xt_rsc_0_10_i_s_waddr),
      .s_din(xt_rsc_0_10_i_s_din),
      .s_dout(xt_rsc_0_10_i_s_dout),
      .s_rrdy(xt_rsc_0_10_i_s_rrdy),
      .s_wrdy(xt_rsc_0_10_i_s_wrdy),
      .is_idle(xt_rsc_0_10_is_idle_1),
      .tr_write_done(xt_rsc_0_10_tr_write_done),
      .s_tdone(xt_rsc_0_10_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_10_i_xt_rsc_0_10_wait_ctrl peaseNTT_core_xt_rsc_0_10_i_xt_rsc_0_10_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_10_i_oswt(xt_rsc_0_10_i_oswt),
      .xt_rsc_0_10_i_oswt_1(xt_rsc_0_10_i_oswt_1),
      .xt_rsc_0_10_i_biwt(xt_rsc_0_10_i_biwt),
      .xt_rsc_0_10_i_bdwt(xt_rsc_0_10_i_bdwt),
      .xt_rsc_0_10_i_bcwt(xt_rsc_0_10_i_bcwt),
      .xt_rsc_0_10_i_s_re_core_sct(xt_rsc_0_10_i_s_re_core_sct),
      .xt_rsc_0_10_i_biwt_1(xt_rsc_0_10_i_biwt_1),
      .xt_rsc_0_10_i_bdwt_2(xt_rsc_0_10_i_bdwt_2),
      .xt_rsc_0_10_i_bcwt_1(xt_rsc_0_10_i_bcwt_1),
      .xt_rsc_0_10_i_s_we_core_sct(xt_rsc_0_10_i_s_we_core_sct),
      .xt_rsc_0_10_i_s_rrdy(xt_rsc_0_10_i_s_rrdy),
      .xt_rsc_0_10_i_s_wrdy(xt_rsc_0_10_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_10_i_xt_rsc_0_10_wait_dp peaseNTT_core_xt_rsc_0_10_i_xt_rsc_0_10_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_10_i_oswt(xt_rsc_0_10_i_oswt),
      .xt_rsc_0_10_i_wen_comp(xt_rsc_0_10_i_wen_comp),
      .xt_rsc_0_10_i_oswt_1(xt_rsc_0_10_i_oswt_1),
      .xt_rsc_0_10_i_wen_comp_1(xt_rsc_0_10_i_wen_comp_1),
      .xt_rsc_0_10_i_s_raddr_core(xt_rsc_0_10_i_s_raddr_core),
      .xt_rsc_0_10_i_s_waddr_core(xt_rsc_0_10_i_s_waddr_core),
      .xt_rsc_0_10_i_s_din_mxwt(xt_rsc_0_10_i_s_din_mxwt),
      .xt_rsc_0_10_i_s_dout_core(xt_rsc_0_10_i_s_dout_core),
      .xt_rsc_0_10_i_biwt(xt_rsc_0_10_i_biwt),
      .xt_rsc_0_10_i_bdwt(xt_rsc_0_10_i_bdwt),
      .xt_rsc_0_10_i_bcwt(xt_rsc_0_10_i_bcwt),
      .xt_rsc_0_10_i_biwt_1(xt_rsc_0_10_i_biwt_1),
      .xt_rsc_0_10_i_bdwt_2(xt_rsc_0_10_i_bdwt_2),
      .xt_rsc_0_10_i_bcwt_1(xt_rsc_0_10_i_bcwt_1),
      .xt_rsc_0_10_i_s_raddr(xt_rsc_0_10_i_s_raddr),
      .xt_rsc_0_10_i_s_raddr_core_sct(xt_rsc_0_10_i_s_re_core_sct),
      .xt_rsc_0_10_i_s_waddr(xt_rsc_0_10_i_s_waddr),
      .xt_rsc_0_10_i_s_waddr_core_sct(xt_rsc_0_10_i_s_we_core_sct),
      .xt_rsc_0_10_i_s_din(xt_rsc_0_10_i_s_din),
      .xt_rsc_0_10_i_s_dout(xt_rsc_0_10_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_9_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_9_i (
  clk, rst, xt_rsc_0_9_s_tdone, xt_rsc_0_9_tr_write_done, xt_rsc_0_9_RREADY, xt_rsc_0_9_RVALID,
      xt_rsc_0_9_RUSER, xt_rsc_0_9_RLAST, xt_rsc_0_9_RRESP, xt_rsc_0_9_RDATA, xt_rsc_0_9_RID,
      xt_rsc_0_9_ARREADY, xt_rsc_0_9_ARVALID, xt_rsc_0_9_ARUSER, xt_rsc_0_9_ARREGION,
      xt_rsc_0_9_ARQOS, xt_rsc_0_9_ARPROT, xt_rsc_0_9_ARCACHE, xt_rsc_0_9_ARLOCK,
      xt_rsc_0_9_ARBURST, xt_rsc_0_9_ARSIZE, xt_rsc_0_9_ARLEN, xt_rsc_0_9_ARADDR,
      xt_rsc_0_9_ARID, xt_rsc_0_9_BREADY, xt_rsc_0_9_BVALID, xt_rsc_0_9_BUSER, xt_rsc_0_9_BRESP,
      xt_rsc_0_9_BID, xt_rsc_0_9_WREADY, xt_rsc_0_9_WVALID, xt_rsc_0_9_WUSER, xt_rsc_0_9_WLAST,
      xt_rsc_0_9_WSTRB, xt_rsc_0_9_WDATA, xt_rsc_0_9_AWREADY, xt_rsc_0_9_AWVALID,
      xt_rsc_0_9_AWUSER, xt_rsc_0_9_AWREGION, xt_rsc_0_9_AWQOS, xt_rsc_0_9_AWPROT,
      xt_rsc_0_9_AWCACHE, xt_rsc_0_9_AWLOCK, xt_rsc_0_9_AWBURST, xt_rsc_0_9_AWSIZE,
      xt_rsc_0_9_AWLEN, xt_rsc_0_9_AWADDR, xt_rsc_0_9_AWID, core_wen, xt_rsc_0_9_i_oswt,
      xt_rsc_0_9_i_wen_comp, xt_rsc_0_9_i_oswt_1, xt_rsc_0_9_i_wen_comp_1, xt_rsc_0_9_i_s_raddr_core,
      xt_rsc_0_9_i_s_waddr_core, xt_rsc_0_9_i_s_din_mxwt, xt_rsc_0_9_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_9_s_tdone;
  input xt_rsc_0_9_tr_write_done;
  input xt_rsc_0_9_RREADY;
  output xt_rsc_0_9_RVALID;
  output xt_rsc_0_9_RUSER;
  output xt_rsc_0_9_RLAST;
  output [1:0] xt_rsc_0_9_RRESP;
  output [31:0] xt_rsc_0_9_RDATA;
  output xt_rsc_0_9_RID;
  output xt_rsc_0_9_ARREADY;
  input xt_rsc_0_9_ARVALID;
  input xt_rsc_0_9_ARUSER;
  input [3:0] xt_rsc_0_9_ARREGION;
  input [3:0] xt_rsc_0_9_ARQOS;
  input [2:0] xt_rsc_0_9_ARPROT;
  input [3:0] xt_rsc_0_9_ARCACHE;
  input xt_rsc_0_9_ARLOCK;
  input [1:0] xt_rsc_0_9_ARBURST;
  input [2:0] xt_rsc_0_9_ARSIZE;
  input [7:0] xt_rsc_0_9_ARLEN;
  input [11:0] xt_rsc_0_9_ARADDR;
  input xt_rsc_0_9_ARID;
  input xt_rsc_0_9_BREADY;
  output xt_rsc_0_9_BVALID;
  output xt_rsc_0_9_BUSER;
  output [1:0] xt_rsc_0_9_BRESP;
  output xt_rsc_0_9_BID;
  output xt_rsc_0_9_WREADY;
  input xt_rsc_0_9_WVALID;
  input xt_rsc_0_9_WUSER;
  input xt_rsc_0_9_WLAST;
  input [3:0] xt_rsc_0_9_WSTRB;
  input [31:0] xt_rsc_0_9_WDATA;
  output xt_rsc_0_9_AWREADY;
  input xt_rsc_0_9_AWVALID;
  input xt_rsc_0_9_AWUSER;
  input [3:0] xt_rsc_0_9_AWREGION;
  input [3:0] xt_rsc_0_9_AWQOS;
  input [2:0] xt_rsc_0_9_AWPROT;
  input [3:0] xt_rsc_0_9_AWCACHE;
  input xt_rsc_0_9_AWLOCK;
  input [1:0] xt_rsc_0_9_AWBURST;
  input [2:0] xt_rsc_0_9_AWSIZE;
  input [7:0] xt_rsc_0_9_AWLEN;
  input [11:0] xt_rsc_0_9_AWADDR;
  input xt_rsc_0_9_AWID;
  input core_wen;
  input xt_rsc_0_9_i_oswt;
  output xt_rsc_0_9_i_wen_comp;
  input xt_rsc_0_9_i_oswt_1;
  output xt_rsc_0_9_i_wen_comp_1;
  input [3:0] xt_rsc_0_9_i_s_raddr_core;
  input [3:0] xt_rsc_0_9_i_s_waddr_core;
  output [31:0] xt_rsc_0_9_i_s_din_mxwt;
  input [31:0] xt_rsc_0_9_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_9_i_biwt;
  wire xt_rsc_0_9_i_bdwt;
  wire xt_rsc_0_9_i_bcwt;
  wire xt_rsc_0_9_i_s_re_core_sct;
  wire xt_rsc_0_9_i_biwt_1;
  wire xt_rsc_0_9_i_bdwt_2;
  wire xt_rsc_0_9_i_bcwt_1;
  wire xt_rsc_0_9_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_9_i_s_raddr;
  wire [3:0] xt_rsc_0_9_i_s_waddr;
  wire [31:0] xt_rsc_0_9_i_s_din;
  wire [31:0] xt_rsc_0_9_i_s_dout;
  wire xt_rsc_0_9_i_s_rrdy;
  wire xt_rsc_0_9_i_s_wrdy;
  wire xt_rsc_0_9_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_9_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_9_AWID),
      .AWADDR(xt_rsc_0_9_AWADDR),
      .AWLEN(xt_rsc_0_9_AWLEN),
      .AWSIZE(xt_rsc_0_9_AWSIZE),
      .AWBURST(xt_rsc_0_9_AWBURST),
      .AWLOCK(xt_rsc_0_9_AWLOCK),
      .AWCACHE(xt_rsc_0_9_AWCACHE),
      .AWPROT(xt_rsc_0_9_AWPROT),
      .AWQOS(xt_rsc_0_9_AWQOS),
      .AWREGION(xt_rsc_0_9_AWREGION),
      .AWUSER(xt_rsc_0_9_AWUSER),
      .AWVALID(xt_rsc_0_9_AWVALID),
      .AWREADY(xt_rsc_0_9_AWREADY),
      .WDATA(xt_rsc_0_9_WDATA),
      .WSTRB(xt_rsc_0_9_WSTRB),
      .WLAST(xt_rsc_0_9_WLAST),
      .WUSER(xt_rsc_0_9_WUSER),
      .WVALID(xt_rsc_0_9_WVALID),
      .WREADY(xt_rsc_0_9_WREADY),
      .BID(xt_rsc_0_9_BID),
      .BRESP(xt_rsc_0_9_BRESP),
      .BUSER(xt_rsc_0_9_BUSER),
      .BVALID(xt_rsc_0_9_BVALID),
      .BREADY(xt_rsc_0_9_BREADY),
      .ARID(xt_rsc_0_9_ARID),
      .ARADDR(xt_rsc_0_9_ARADDR),
      .ARLEN(xt_rsc_0_9_ARLEN),
      .ARSIZE(xt_rsc_0_9_ARSIZE),
      .ARBURST(xt_rsc_0_9_ARBURST),
      .ARLOCK(xt_rsc_0_9_ARLOCK),
      .ARCACHE(xt_rsc_0_9_ARCACHE),
      .ARPROT(xt_rsc_0_9_ARPROT),
      .ARQOS(xt_rsc_0_9_ARQOS),
      .ARREGION(xt_rsc_0_9_ARREGION),
      .ARUSER(xt_rsc_0_9_ARUSER),
      .ARVALID(xt_rsc_0_9_ARVALID),
      .ARREADY(xt_rsc_0_9_ARREADY),
      .RID(xt_rsc_0_9_RID),
      .RDATA(xt_rsc_0_9_RDATA),
      .RRESP(xt_rsc_0_9_RRESP),
      .RLAST(xt_rsc_0_9_RLAST),
      .RUSER(xt_rsc_0_9_RUSER),
      .RVALID(xt_rsc_0_9_RVALID),
      .RREADY(xt_rsc_0_9_RREADY),
      .s_re(xt_rsc_0_9_i_s_re_core_sct),
      .s_we(xt_rsc_0_9_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_9_i_s_raddr),
      .s_waddr(xt_rsc_0_9_i_s_waddr),
      .s_din(xt_rsc_0_9_i_s_din),
      .s_dout(xt_rsc_0_9_i_s_dout),
      .s_rrdy(xt_rsc_0_9_i_s_rrdy),
      .s_wrdy(xt_rsc_0_9_i_s_wrdy),
      .is_idle(xt_rsc_0_9_is_idle_1),
      .tr_write_done(xt_rsc_0_9_tr_write_done),
      .s_tdone(xt_rsc_0_9_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_9_i_xt_rsc_0_9_wait_ctrl peaseNTT_core_xt_rsc_0_9_i_xt_rsc_0_9_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_9_i_oswt(xt_rsc_0_9_i_oswt),
      .xt_rsc_0_9_i_oswt_1(xt_rsc_0_9_i_oswt_1),
      .xt_rsc_0_9_i_biwt(xt_rsc_0_9_i_biwt),
      .xt_rsc_0_9_i_bdwt(xt_rsc_0_9_i_bdwt),
      .xt_rsc_0_9_i_bcwt(xt_rsc_0_9_i_bcwt),
      .xt_rsc_0_9_i_s_re_core_sct(xt_rsc_0_9_i_s_re_core_sct),
      .xt_rsc_0_9_i_biwt_1(xt_rsc_0_9_i_biwt_1),
      .xt_rsc_0_9_i_bdwt_2(xt_rsc_0_9_i_bdwt_2),
      .xt_rsc_0_9_i_bcwt_1(xt_rsc_0_9_i_bcwt_1),
      .xt_rsc_0_9_i_s_we_core_sct(xt_rsc_0_9_i_s_we_core_sct),
      .xt_rsc_0_9_i_s_rrdy(xt_rsc_0_9_i_s_rrdy),
      .xt_rsc_0_9_i_s_wrdy(xt_rsc_0_9_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_9_i_xt_rsc_0_9_wait_dp peaseNTT_core_xt_rsc_0_9_i_xt_rsc_0_9_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_9_i_oswt(xt_rsc_0_9_i_oswt),
      .xt_rsc_0_9_i_wen_comp(xt_rsc_0_9_i_wen_comp),
      .xt_rsc_0_9_i_oswt_1(xt_rsc_0_9_i_oswt_1),
      .xt_rsc_0_9_i_wen_comp_1(xt_rsc_0_9_i_wen_comp_1),
      .xt_rsc_0_9_i_s_raddr_core(xt_rsc_0_9_i_s_raddr_core),
      .xt_rsc_0_9_i_s_waddr_core(xt_rsc_0_9_i_s_waddr_core),
      .xt_rsc_0_9_i_s_din_mxwt(xt_rsc_0_9_i_s_din_mxwt),
      .xt_rsc_0_9_i_s_dout_core(xt_rsc_0_9_i_s_dout_core),
      .xt_rsc_0_9_i_biwt(xt_rsc_0_9_i_biwt),
      .xt_rsc_0_9_i_bdwt(xt_rsc_0_9_i_bdwt),
      .xt_rsc_0_9_i_bcwt(xt_rsc_0_9_i_bcwt),
      .xt_rsc_0_9_i_biwt_1(xt_rsc_0_9_i_biwt_1),
      .xt_rsc_0_9_i_bdwt_2(xt_rsc_0_9_i_bdwt_2),
      .xt_rsc_0_9_i_bcwt_1(xt_rsc_0_9_i_bcwt_1),
      .xt_rsc_0_9_i_s_raddr(xt_rsc_0_9_i_s_raddr),
      .xt_rsc_0_9_i_s_raddr_core_sct(xt_rsc_0_9_i_s_re_core_sct),
      .xt_rsc_0_9_i_s_waddr(xt_rsc_0_9_i_s_waddr),
      .xt_rsc_0_9_i_s_waddr_core_sct(xt_rsc_0_9_i_s_we_core_sct),
      .xt_rsc_0_9_i_s_din(xt_rsc_0_9_i_s_din),
      .xt_rsc_0_9_i_s_dout(xt_rsc_0_9_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_8_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_8_i (
  clk, rst, xt_rsc_0_8_s_tdone, xt_rsc_0_8_tr_write_done, xt_rsc_0_8_RREADY, xt_rsc_0_8_RVALID,
      xt_rsc_0_8_RUSER, xt_rsc_0_8_RLAST, xt_rsc_0_8_RRESP, xt_rsc_0_8_RDATA, xt_rsc_0_8_RID,
      xt_rsc_0_8_ARREADY, xt_rsc_0_8_ARVALID, xt_rsc_0_8_ARUSER, xt_rsc_0_8_ARREGION,
      xt_rsc_0_8_ARQOS, xt_rsc_0_8_ARPROT, xt_rsc_0_8_ARCACHE, xt_rsc_0_8_ARLOCK,
      xt_rsc_0_8_ARBURST, xt_rsc_0_8_ARSIZE, xt_rsc_0_8_ARLEN, xt_rsc_0_8_ARADDR,
      xt_rsc_0_8_ARID, xt_rsc_0_8_BREADY, xt_rsc_0_8_BVALID, xt_rsc_0_8_BUSER, xt_rsc_0_8_BRESP,
      xt_rsc_0_8_BID, xt_rsc_0_8_WREADY, xt_rsc_0_8_WVALID, xt_rsc_0_8_WUSER, xt_rsc_0_8_WLAST,
      xt_rsc_0_8_WSTRB, xt_rsc_0_8_WDATA, xt_rsc_0_8_AWREADY, xt_rsc_0_8_AWVALID,
      xt_rsc_0_8_AWUSER, xt_rsc_0_8_AWREGION, xt_rsc_0_8_AWQOS, xt_rsc_0_8_AWPROT,
      xt_rsc_0_8_AWCACHE, xt_rsc_0_8_AWLOCK, xt_rsc_0_8_AWBURST, xt_rsc_0_8_AWSIZE,
      xt_rsc_0_8_AWLEN, xt_rsc_0_8_AWADDR, xt_rsc_0_8_AWID, core_wen, xt_rsc_0_8_i_oswt,
      xt_rsc_0_8_i_wen_comp, xt_rsc_0_8_i_oswt_1, xt_rsc_0_8_i_wen_comp_1, xt_rsc_0_8_i_s_raddr_core,
      xt_rsc_0_8_i_s_waddr_core, xt_rsc_0_8_i_s_din_mxwt, xt_rsc_0_8_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_8_s_tdone;
  input xt_rsc_0_8_tr_write_done;
  input xt_rsc_0_8_RREADY;
  output xt_rsc_0_8_RVALID;
  output xt_rsc_0_8_RUSER;
  output xt_rsc_0_8_RLAST;
  output [1:0] xt_rsc_0_8_RRESP;
  output [31:0] xt_rsc_0_8_RDATA;
  output xt_rsc_0_8_RID;
  output xt_rsc_0_8_ARREADY;
  input xt_rsc_0_8_ARVALID;
  input xt_rsc_0_8_ARUSER;
  input [3:0] xt_rsc_0_8_ARREGION;
  input [3:0] xt_rsc_0_8_ARQOS;
  input [2:0] xt_rsc_0_8_ARPROT;
  input [3:0] xt_rsc_0_8_ARCACHE;
  input xt_rsc_0_8_ARLOCK;
  input [1:0] xt_rsc_0_8_ARBURST;
  input [2:0] xt_rsc_0_8_ARSIZE;
  input [7:0] xt_rsc_0_8_ARLEN;
  input [11:0] xt_rsc_0_8_ARADDR;
  input xt_rsc_0_8_ARID;
  input xt_rsc_0_8_BREADY;
  output xt_rsc_0_8_BVALID;
  output xt_rsc_0_8_BUSER;
  output [1:0] xt_rsc_0_8_BRESP;
  output xt_rsc_0_8_BID;
  output xt_rsc_0_8_WREADY;
  input xt_rsc_0_8_WVALID;
  input xt_rsc_0_8_WUSER;
  input xt_rsc_0_8_WLAST;
  input [3:0] xt_rsc_0_8_WSTRB;
  input [31:0] xt_rsc_0_8_WDATA;
  output xt_rsc_0_8_AWREADY;
  input xt_rsc_0_8_AWVALID;
  input xt_rsc_0_8_AWUSER;
  input [3:0] xt_rsc_0_8_AWREGION;
  input [3:0] xt_rsc_0_8_AWQOS;
  input [2:0] xt_rsc_0_8_AWPROT;
  input [3:0] xt_rsc_0_8_AWCACHE;
  input xt_rsc_0_8_AWLOCK;
  input [1:0] xt_rsc_0_8_AWBURST;
  input [2:0] xt_rsc_0_8_AWSIZE;
  input [7:0] xt_rsc_0_8_AWLEN;
  input [11:0] xt_rsc_0_8_AWADDR;
  input xt_rsc_0_8_AWID;
  input core_wen;
  input xt_rsc_0_8_i_oswt;
  output xt_rsc_0_8_i_wen_comp;
  input xt_rsc_0_8_i_oswt_1;
  output xt_rsc_0_8_i_wen_comp_1;
  input [3:0] xt_rsc_0_8_i_s_raddr_core;
  input [3:0] xt_rsc_0_8_i_s_waddr_core;
  output [31:0] xt_rsc_0_8_i_s_din_mxwt;
  input [31:0] xt_rsc_0_8_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_8_i_biwt;
  wire xt_rsc_0_8_i_bdwt;
  wire xt_rsc_0_8_i_bcwt;
  wire xt_rsc_0_8_i_s_re_core_sct;
  wire xt_rsc_0_8_i_biwt_1;
  wire xt_rsc_0_8_i_bdwt_2;
  wire xt_rsc_0_8_i_bcwt_1;
  wire xt_rsc_0_8_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_8_i_s_raddr;
  wire [3:0] xt_rsc_0_8_i_s_waddr;
  wire [31:0] xt_rsc_0_8_i_s_din;
  wire [31:0] xt_rsc_0_8_i_s_dout;
  wire xt_rsc_0_8_i_s_rrdy;
  wire xt_rsc_0_8_i_s_wrdy;
  wire xt_rsc_0_8_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_8_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_8_AWID),
      .AWADDR(xt_rsc_0_8_AWADDR),
      .AWLEN(xt_rsc_0_8_AWLEN),
      .AWSIZE(xt_rsc_0_8_AWSIZE),
      .AWBURST(xt_rsc_0_8_AWBURST),
      .AWLOCK(xt_rsc_0_8_AWLOCK),
      .AWCACHE(xt_rsc_0_8_AWCACHE),
      .AWPROT(xt_rsc_0_8_AWPROT),
      .AWQOS(xt_rsc_0_8_AWQOS),
      .AWREGION(xt_rsc_0_8_AWREGION),
      .AWUSER(xt_rsc_0_8_AWUSER),
      .AWVALID(xt_rsc_0_8_AWVALID),
      .AWREADY(xt_rsc_0_8_AWREADY),
      .WDATA(xt_rsc_0_8_WDATA),
      .WSTRB(xt_rsc_0_8_WSTRB),
      .WLAST(xt_rsc_0_8_WLAST),
      .WUSER(xt_rsc_0_8_WUSER),
      .WVALID(xt_rsc_0_8_WVALID),
      .WREADY(xt_rsc_0_8_WREADY),
      .BID(xt_rsc_0_8_BID),
      .BRESP(xt_rsc_0_8_BRESP),
      .BUSER(xt_rsc_0_8_BUSER),
      .BVALID(xt_rsc_0_8_BVALID),
      .BREADY(xt_rsc_0_8_BREADY),
      .ARID(xt_rsc_0_8_ARID),
      .ARADDR(xt_rsc_0_8_ARADDR),
      .ARLEN(xt_rsc_0_8_ARLEN),
      .ARSIZE(xt_rsc_0_8_ARSIZE),
      .ARBURST(xt_rsc_0_8_ARBURST),
      .ARLOCK(xt_rsc_0_8_ARLOCK),
      .ARCACHE(xt_rsc_0_8_ARCACHE),
      .ARPROT(xt_rsc_0_8_ARPROT),
      .ARQOS(xt_rsc_0_8_ARQOS),
      .ARREGION(xt_rsc_0_8_ARREGION),
      .ARUSER(xt_rsc_0_8_ARUSER),
      .ARVALID(xt_rsc_0_8_ARVALID),
      .ARREADY(xt_rsc_0_8_ARREADY),
      .RID(xt_rsc_0_8_RID),
      .RDATA(xt_rsc_0_8_RDATA),
      .RRESP(xt_rsc_0_8_RRESP),
      .RLAST(xt_rsc_0_8_RLAST),
      .RUSER(xt_rsc_0_8_RUSER),
      .RVALID(xt_rsc_0_8_RVALID),
      .RREADY(xt_rsc_0_8_RREADY),
      .s_re(xt_rsc_0_8_i_s_re_core_sct),
      .s_we(xt_rsc_0_8_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_8_i_s_raddr),
      .s_waddr(xt_rsc_0_8_i_s_waddr),
      .s_din(xt_rsc_0_8_i_s_din),
      .s_dout(xt_rsc_0_8_i_s_dout),
      .s_rrdy(xt_rsc_0_8_i_s_rrdy),
      .s_wrdy(xt_rsc_0_8_i_s_wrdy),
      .is_idle(xt_rsc_0_8_is_idle_1),
      .tr_write_done(xt_rsc_0_8_tr_write_done),
      .s_tdone(xt_rsc_0_8_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_8_i_xt_rsc_0_8_wait_ctrl peaseNTT_core_xt_rsc_0_8_i_xt_rsc_0_8_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_8_i_oswt(xt_rsc_0_8_i_oswt),
      .xt_rsc_0_8_i_oswt_1(xt_rsc_0_8_i_oswt_1),
      .xt_rsc_0_8_i_biwt(xt_rsc_0_8_i_biwt),
      .xt_rsc_0_8_i_bdwt(xt_rsc_0_8_i_bdwt),
      .xt_rsc_0_8_i_bcwt(xt_rsc_0_8_i_bcwt),
      .xt_rsc_0_8_i_s_re_core_sct(xt_rsc_0_8_i_s_re_core_sct),
      .xt_rsc_0_8_i_biwt_1(xt_rsc_0_8_i_biwt_1),
      .xt_rsc_0_8_i_bdwt_2(xt_rsc_0_8_i_bdwt_2),
      .xt_rsc_0_8_i_bcwt_1(xt_rsc_0_8_i_bcwt_1),
      .xt_rsc_0_8_i_s_we_core_sct(xt_rsc_0_8_i_s_we_core_sct),
      .xt_rsc_0_8_i_s_rrdy(xt_rsc_0_8_i_s_rrdy),
      .xt_rsc_0_8_i_s_wrdy(xt_rsc_0_8_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_8_i_xt_rsc_0_8_wait_dp peaseNTT_core_xt_rsc_0_8_i_xt_rsc_0_8_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_8_i_oswt(xt_rsc_0_8_i_oswt),
      .xt_rsc_0_8_i_wen_comp(xt_rsc_0_8_i_wen_comp),
      .xt_rsc_0_8_i_oswt_1(xt_rsc_0_8_i_oswt_1),
      .xt_rsc_0_8_i_wen_comp_1(xt_rsc_0_8_i_wen_comp_1),
      .xt_rsc_0_8_i_s_raddr_core(xt_rsc_0_8_i_s_raddr_core),
      .xt_rsc_0_8_i_s_waddr_core(xt_rsc_0_8_i_s_waddr_core),
      .xt_rsc_0_8_i_s_din_mxwt(xt_rsc_0_8_i_s_din_mxwt),
      .xt_rsc_0_8_i_s_dout_core(xt_rsc_0_8_i_s_dout_core),
      .xt_rsc_0_8_i_biwt(xt_rsc_0_8_i_biwt),
      .xt_rsc_0_8_i_bdwt(xt_rsc_0_8_i_bdwt),
      .xt_rsc_0_8_i_bcwt(xt_rsc_0_8_i_bcwt),
      .xt_rsc_0_8_i_biwt_1(xt_rsc_0_8_i_biwt_1),
      .xt_rsc_0_8_i_bdwt_2(xt_rsc_0_8_i_bdwt_2),
      .xt_rsc_0_8_i_bcwt_1(xt_rsc_0_8_i_bcwt_1),
      .xt_rsc_0_8_i_s_raddr(xt_rsc_0_8_i_s_raddr),
      .xt_rsc_0_8_i_s_raddr_core_sct(xt_rsc_0_8_i_s_re_core_sct),
      .xt_rsc_0_8_i_s_waddr(xt_rsc_0_8_i_s_waddr),
      .xt_rsc_0_8_i_s_waddr_core_sct(xt_rsc_0_8_i_s_we_core_sct),
      .xt_rsc_0_8_i_s_din(xt_rsc_0_8_i_s_din),
      .xt_rsc_0_8_i_s_dout(xt_rsc_0_8_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_7_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_7_i (
  clk, rst, xt_rsc_0_7_s_tdone, xt_rsc_0_7_tr_write_done, xt_rsc_0_7_RREADY, xt_rsc_0_7_RVALID,
      xt_rsc_0_7_RUSER, xt_rsc_0_7_RLAST, xt_rsc_0_7_RRESP, xt_rsc_0_7_RDATA, xt_rsc_0_7_RID,
      xt_rsc_0_7_ARREADY, xt_rsc_0_7_ARVALID, xt_rsc_0_7_ARUSER, xt_rsc_0_7_ARREGION,
      xt_rsc_0_7_ARQOS, xt_rsc_0_7_ARPROT, xt_rsc_0_7_ARCACHE, xt_rsc_0_7_ARLOCK,
      xt_rsc_0_7_ARBURST, xt_rsc_0_7_ARSIZE, xt_rsc_0_7_ARLEN, xt_rsc_0_7_ARADDR,
      xt_rsc_0_7_ARID, xt_rsc_0_7_BREADY, xt_rsc_0_7_BVALID, xt_rsc_0_7_BUSER, xt_rsc_0_7_BRESP,
      xt_rsc_0_7_BID, xt_rsc_0_7_WREADY, xt_rsc_0_7_WVALID, xt_rsc_0_7_WUSER, xt_rsc_0_7_WLAST,
      xt_rsc_0_7_WSTRB, xt_rsc_0_7_WDATA, xt_rsc_0_7_AWREADY, xt_rsc_0_7_AWVALID,
      xt_rsc_0_7_AWUSER, xt_rsc_0_7_AWREGION, xt_rsc_0_7_AWQOS, xt_rsc_0_7_AWPROT,
      xt_rsc_0_7_AWCACHE, xt_rsc_0_7_AWLOCK, xt_rsc_0_7_AWBURST, xt_rsc_0_7_AWSIZE,
      xt_rsc_0_7_AWLEN, xt_rsc_0_7_AWADDR, xt_rsc_0_7_AWID, core_wen, xt_rsc_0_7_i_oswt,
      xt_rsc_0_7_i_wen_comp, xt_rsc_0_7_i_oswt_1, xt_rsc_0_7_i_wen_comp_1, xt_rsc_0_7_i_s_raddr_core,
      xt_rsc_0_7_i_s_waddr_core, xt_rsc_0_7_i_s_din_mxwt, xt_rsc_0_7_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_7_s_tdone;
  input xt_rsc_0_7_tr_write_done;
  input xt_rsc_0_7_RREADY;
  output xt_rsc_0_7_RVALID;
  output xt_rsc_0_7_RUSER;
  output xt_rsc_0_7_RLAST;
  output [1:0] xt_rsc_0_7_RRESP;
  output [31:0] xt_rsc_0_7_RDATA;
  output xt_rsc_0_7_RID;
  output xt_rsc_0_7_ARREADY;
  input xt_rsc_0_7_ARVALID;
  input xt_rsc_0_7_ARUSER;
  input [3:0] xt_rsc_0_7_ARREGION;
  input [3:0] xt_rsc_0_7_ARQOS;
  input [2:0] xt_rsc_0_7_ARPROT;
  input [3:0] xt_rsc_0_7_ARCACHE;
  input xt_rsc_0_7_ARLOCK;
  input [1:0] xt_rsc_0_7_ARBURST;
  input [2:0] xt_rsc_0_7_ARSIZE;
  input [7:0] xt_rsc_0_7_ARLEN;
  input [11:0] xt_rsc_0_7_ARADDR;
  input xt_rsc_0_7_ARID;
  input xt_rsc_0_7_BREADY;
  output xt_rsc_0_7_BVALID;
  output xt_rsc_0_7_BUSER;
  output [1:0] xt_rsc_0_7_BRESP;
  output xt_rsc_0_7_BID;
  output xt_rsc_0_7_WREADY;
  input xt_rsc_0_7_WVALID;
  input xt_rsc_0_7_WUSER;
  input xt_rsc_0_7_WLAST;
  input [3:0] xt_rsc_0_7_WSTRB;
  input [31:0] xt_rsc_0_7_WDATA;
  output xt_rsc_0_7_AWREADY;
  input xt_rsc_0_7_AWVALID;
  input xt_rsc_0_7_AWUSER;
  input [3:0] xt_rsc_0_7_AWREGION;
  input [3:0] xt_rsc_0_7_AWQOS;
  input [2:0] xt_rsc_0_7_AWPROT;
  input [3:0] xt_rsc_0_7_AWCACHE;
  input xt_rsc_0_7_AWLOCK;
  input [1:0] xt_rsc_0_7_AWBURST;
  input [2:0] xt_rsc_0_7_AWSIZE;
  input [7:0] xt_rsc_0_7_AWLEN;
  input [11:0] xt_rsc_0_7_AWADDR;
  input xt_rsc_0_7_AWID;
  input core_wen;
  input xt_rsc_0_7_i_oswt;
  output xt_rsc_0_7_i_wen_comp;
  input xt_rsc_0_7_i_oswt_1;
  output xt_rsc_0_7_i_wen_comp_1;
  input [3:0] xt_rsc_0_7_i_s_raddr_core;
  input [3:0] xt_rsc_0_7_i_s_waddr_core;
  output [31:0] xt_rsc_0_7_i_s_din_mxwt;
  input [31:0] xt_rsc_0_7_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_7_i_biwt;
  wire xt_rsc_0_7_i_bdwt;
  wire xt_rsc_0_7_i_bcwt;
  wire xt_rsc_0_7_i_s_re_core_sct;
  wire xt_rsc_0_7_i_biwt_1;
  wire xt_rsc_0_7_i_bdwt_2;
  wire xt_rsc_0_7_i_bcwt_1;
  wire xt_rsc_0_7_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_7_i_s_raddr;
  wire [3:0] xt_rsc_0_7_i_s_waddr;
  wire [31:0] xt_rsc_0_7_i_s_din;
  wire [31:0] xt_rsc_0_7_i_s_dout;
  wire xt_rsc_0_7_i_s_rrdy;
  wire xt_rsc_0_7_i_s_wrdy;
  wire xt_rsc_0_7_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_7_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_7_AWID),
      .AWADDR(xt_rsc_0_7_AWADDR),
      .AWLEN(xt_rsc_0_7_AWLEN),
      .AWSIZE(xt_rsc_0_7_AWSIZE),
      .AWBURST(xt_rsc_0_7_AWBURST),
      .AWLOCK(xt_rsc_0_7_AWLOCK),
      .AWCACHE(xt_rsc_0_7_AWCACHE),
      .AWPROT(xt_rsc_0_7_AWPROT),
      .AWQOS(xt_rsc_0_7_AWQOS),
      .AWREGION(xt_rsc_0_7_AWREGION),
      .AWUSER(xt_rsc_0_7_AWUSER),
      .AWVALID(xt_rsc_0_7_AWVALID),
      .AWREADY(xt_rsc_0_7_AWREADY),
      .WDATA(xt_rsc_0_7_WDATA),
      .WSTRB(xt_rsc_0_7_WSTRB),
      .WLAST(xt_rsc_0_7_WLAST),
      .WUSER(xt_rsc_0_7_WUSER),
      .WVALID(xt_rsc_0_7_WVALID),
      .WREADY(xt_rsc_0_7_WREADY),
      .BID(xt_rsc_0_7_BID),
      .BRESP(xt_rsc_0_7_BRESP),
      .BUSER(xt_rsc_0_7_BUSER),
      .BVALID(xt_rsc_0_7_BVALID),
      .BREADY(xt_rsc_0_7_BREADY),
      .ARID(xt_rsc_0_7_ARID),
      .ARADDR(xt_rsc_0_7_ARADDR),
      .ARLEN(xt_rsc_0_7_ARLEN),
      .ARSIZE(xt_rsc_0_7_ARSIZE),
      .ARBURST(xt_rsc_0_7_ARBURST),
      .ARLOCK(xt_rsc_0_7_ARLOCK),
      .ARCACHE(xt_rsc_0_7_ARCACHE),
      .ARPROT(xt_rsc_0_7_ARPROT),
      .ARQOS(xt_rsc_0_7_ARQOS),
      .ARREGION(xt_rsc_0_7_ARREGION),
      .ARUSER(xt_rsc_0_7_ARUSER),
      .ARVALID(xt_rsc_0_7_ARVALID),
      .ARREADY(xt_rsc_0_7_ARREADY),
      .RID(xt_rsc_0_7_RID),
      .RDATA(xt_rsc_0_7_RDATA),
      .RRESP(xt_rsc_0_7_RRESP),
      .RLAST(xt_rsc_0_7_RLAST),
      .RUSER(xt_rsc_0_7_RUSER),
      .RVALID(xt_rsc_0_7_RVALID),
      .RREADY(xt_rsc_0_7_RREADY),
      .s_re(xt_rsc_0_7_i_s_re_core_sct),
      .s_we(xt_rsc_0_7_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_7_i_s_raddr),
      .s_waddr(xt_rsc_0_7_i_s_waddr),
      .s_din(xt_rsc_0_7_i_s_din),
      .s_dout(xt_rsc_0_7_i_s_dout),
      .s_rrdy(xt_rsc_0_7_i_s_rrdy),
      .s_wrdy(xt_rsc_0_7_i_s_wrdy),
      .is_idle(xt_rsc_0_7_is_idle_1),
      .tr_write_done(xt_rsc_0_7_tr_write_done),
      .s_tdone(xt_rsc_0_7_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_7_i_xt_rsc_0_7_wait_ctrl peaseNTT_core_xt_rsc_0_7_i_xt_rsc_0_7_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_7_i_oswt(xt_rsc_0_7_i_oswt),
      .xt_rsc_0_7_i_oswt_1(xt_rsc_0_7_i_oswt_1),
      .xt_rsc_0_7_i_biwt(xt_rsc_0_7_i_biwt),
      .xt_rsc_0_7_i_bdwt(xt_rsc_0_7_i_bdwt),
      .xt_rsc_0_7_i_bcwt(xt_rsc_0_7_i_bcwt),
      .xt_rsc_0_7_i_s_re_core_sct(xt_rsc_0_7_i_s_re_core_sct),
      .xt_rsc_0_7_i_biwt_1(xt_rsc_0_7_i_biwt_1),
      .xt_rsc_0_7_i_bdwt_2(xt_rsc_0_7_i_bdwt_2),
      .xt_rsc_0_7_i_bcwt_1(xt_rsc_0_7_i_bcwt_1),
      .xt_rsc_0_7_i_s_we_core_sct(xt_rsc_0_7_i_s_we_core_sct),
      .xt_rsc_0_7_i_s_rrdy(xt_rsc_0_7_i_s_rrdy),
      .xt_rsc_0_7_i_s_wrdy(xt_rsc_0_7_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_7_i_xt_rsc_0_7_wait_dp peaseNTT_core_xt_rsc_0_7_i_xt_rsc_0_7_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_7_i_oswt(xt_rsc_0_7_i_oswt),
      .xt_rsc_0_7_i_wen_comp(xt_rsc_0_7_i_wen_comp),
      .xt_rsc_0_7_i_oswt_1(xt_rsc_0_7_i_oswt_1),
      .xt_rsc_0_7_i_wen_comp_1(xt_rsc_0_7_i_wen_comp_1),
      .xt_rsc_0_7_i_s_raddr_core(xt_rsc_0_7_i_s_raddr_core),
      .xt_rsc_0_7_i_s_waddr_core(xt_rsc_0_7_i_s_waddr_core),
      .xt_rsc_0_7_i_s_din_mxwt(xt_rsc_0_7_i_s_din_mxwt),
      .xt_rsc_0_7_i_s_dout_core(xt_rsc_0_7_i_s_dout_core),
      .xt_rsc_0_7_i_biwt(xt_rsc_0_7_i_biwt),
      .xt_rsc_0_7_i_bdwt(xt_rsc_0_7_i_bdwt),
      .xt_rsc_0_7_i_bcwt(xt_rsc_0_7_i_bcwt),
      .xt_rsc_0_7_i_biwt_1(xt_rsc_0_7_i_biwt_1),
      .xt_rsc_0_7_i_bdwt_2(xt_rsc_0_7_i_bdwt_2),
      .xt_rsc_0_7_i_bcwt_1(xt_rsc_0_7_i_bcwt_1),
      .xt_rsc_0_7_i_s_raddr(xt_rsc_0_7_i_s_raddr),
      .xt_rsc_0_7_i_s_raddr_core_sct(xt_rsc_0_7_i_s_re_core_sct),
      .xt_rsc_0_7_i_s_waddr(xt_rsc_0_7_i_s_waddr),
      .xt_rsc_0_7_i_s_waddr_core_sct(xt_rsc_0_7_i_s_we_core_sct),
      .xt_rsc_0_7_i_s_din(xt_rsc_0_7_i_s_din),
      .xt_rsc_0_7_i_s_dout(xt_rsc_0_7_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_6_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_6_i (
  clk, rst, xt_rsc_0_6_s_tdone, xt_rsc_0_6_tr_write_done, xt_rsc_0_6_RREADY, xt_rsc_0_6_RVALID,
      xt_rsc_0_6_RUSER, xt_rsc_0_6_RLAST, xt_rsc_0_6_RRESP, xt_rsc_0_6_RDATA, xt_rsc_0_6_RID,
      xt_rsc_0_6_ARREADY, xt_rsc_0_6_ARVALID, xt_rsc_0_6_ARUSER, xt_rsc_0_6_ARREGION,
      xt_rsc_0_6_ARQOS, xt_rsc_0_6_ARPROT, xt_rsc_0_6_ARCACHE, xt_rsc_0_6_ARLOCK,
      xt_rsc_0_6_ARBURST, xt_rsc_0_6_ARSIZE, xt_rsc_0_6_ARLEN, xt_rsc_0_6_ARADDR,
      xt_rsc_0_6_ARID, xt_rsc_0_6_BREADY, xt_rsc_0_6_BVALID, xt_rsc_0_6_BUSER, xt_rsc_0_6_BRESP,
      xt_rsc_0_6_BID, xt_rsc_0_6_WREADY, xt_rsc_0_6_WVALID, xt_rsc_0_6_WUSER, xt_rsc_0_6_WLAST,
      xt_rsc_0_6_WSTRB, xt_rsc_0_6_WDATA, xt_rsc_0_6_AWREADY, xt_rsc_0_6_AWVALID,
      xt_rsc_0_6_AWUSER, xt_rsc_0_6_AWREGION, xt_rsc_0_6_AWQOS, xt_rsc_0_6_AWPROT,
      xt_rsc_0_6_AWCACHE, xt_rsc_0_6_AWLOCK, xt_rsc_0_6_AWBURST, xt_rsc_0_6_AWSIZE,
      xt_rsc_0_6_AWLEN, xt_rsc_0_6_AWADDR, xt_rsc_0_6_AWID, core_wen, xt_rsc_0_6_i_oswt,
      xt_rsc_0_6_i_wen_comp, xt_rsc_0_6_i_oswt_1, xt_rsc_0_6_i_wen_comp_1, xt_rsc_0_6_i_s_raddr_core,
      xt_rsc_0_6_i_s_waddr_core, xt_rsc_0_6_i_s_din_mxwt, xt_rsc_0_6_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_6_s_tdone;
  input xt_rsc_0_6_tr_write_done;
  input xt_rsc_0_6_RREADY;
  output xt_rsc_0_6_RVALID;
  output xt_rsc_0_6_RUSER;
  output xt_rsc_0_6_RLAST;
  output [1:0] xt_rsc_0_6_RRESP;
  output [31:0] xt_rsc_0_6_RDATA;
  output xt_rsc_0_6_RID;
  output xt_rsc_0_6_ARREADY;
  input xt_rsc_0_6_ARVALID;
  input xt_rsc_0_6_ARUSER;
  input [3:0] xt_rsc_0_6_ARREGION;
  input [3:0] xt_rsc_0_6_ARQOS;
  input [2:0] xt_rsc_0_6_ARPROT;
  input [3:0] xt_rsc_0_6_ARCACHE;
  input xt_rsc_0_6_ARLOCK;
  input [1:0] xt_rsc_0_6_ARBURST;
  input [2:0] xt_rsc_0_6_ARSIZE;
  input [7:0] xt_rsc_0_6_ARLEN;
  input [11:0] xt_rsc_0_6_ARADDR;
  input xt_rsc_0_6_ARID;
  input xt_rsc_0_6_BREADY;
  output xt_rsc_0_6_BVALID;
  output xt_rsc_0_6_BUSER;
  output [1:0] xt_rsc_0_6_BRESP;
  output xt_rsc_0_6_BID;
  output xt_rsc_0_6_WREADY;
  input xt_rsc_0_6_WVALID;
  input xt_rsc_0_6_WUSER;
  input xt_rsc_0_6_WLAST;
  input [3:0] xt_rsc_0_6_WSTRB;
  input [31:0] xt_rsc_0_6_WDATA;
  output xt_rsc_0_6_AWREADY;
  input xt_rsc_0_6_AWVALID;
  input xt_rsc_0_6_AWUSER;
  input [3:0] xt_rsc_0_6_AWREGION;
  input [3:0] xt_rsc_0_6_AWQOS;
  input [2:0] xt_rsc_0_6_AWPROT;
  input [3:0] xt_rsc_0_6_AWCACHE;
  input xt_rsc_0_6_AWLOCK;
  input [1:0] xt_rsc_0_6_AWBURST;
  input [2:0] xt_rsc_0_6_AWSIZE;
  input [7:0] xt_rsc_0_6_AWLEN;
  input [11:0] xt_rsc_0_6_AWADDR;
  input xt_rsc_0_6_AWID;
  input core_wen;
  input xt_rsc_0_6_i_oswt;
  output xt_rsc_0_6_i_wen_comp;
  input xt_rsc_0_6_i_oswt_1;
  output xt_rsc_0_6_i_wen_comp_1;
  input [3:0] xt_rsc_0_6_i_s_raddr_core;
  input [3:0] xt_rsc_0_6_i_s_waddr_core;
  output [31:0] xt_rsc_0_6_i_s_din_mxwt;
  input [31:0] xt_rsc_0_6_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_6_i_biwt;
  wire xt_rsc_0_6_i_bdwt;
  wire xt_rsc_0_6_i_bcwt;
  wire xt_rsc_0_6_i_s_re_core_sct;
  wire xt_rsc_0_6_i_biwt_1;
  wire xt_rsc_0_6_i_bdwt_2;
  wire xt_rsc_0_6_i_bcwt_1;
  wire xt_rsc_0_6_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_6_i_s_raddr;
  wire [3:0] xt_rsc_0_6_i_s_waddr;
  wire [31:0] xt_rsc_0_6_i_s_din;
  wire [31:0] xt_rsc_0_6_i_s_dout;
  wire xt_rsc_0_6_i_s_rrdy;
  wire xt_rsc_0_6_i_s_wrdy;
  wire xt_rsc_0_6_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_6_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_6_AWID),
      .AWADDR(xt_rsc_0_6_AWADDR),
      .AWLEN(xt_rsc_0_6_AWLEN),
      .AWSIZE(xt_rsc_0_6_AWSIZE),
      .AWBURST(xt_rsc_0_6_AWBURST),
      .AWLOCK(xt_rsc_0_6_AWLOCK),
      .AWCACHE(xt_rsc_0_6_AWCACHE),
      .AWPROT(xt_rsc_0_6_AWPROT),
      .AWQOS(xt_rsc_0_6_AWQOS),
      .AWREGION(xt_rsc_0_6_AWREGION),
      .AWUSER(xt_rsc_0_6_AWUSER),
      .AWVALID(xt_rsc_0_6_AWVALID),
      .AWREADY(xt_rsc_0_6_AWREADY),
      .WDATA(xt_rsc_0_6_WDATA),
      .WSTRB(xt_rsc_0_6_WSTRB),
      .WLAST(xt_rsc_0_6_WLAST),
      .WUSER(xt_rsc_0_6_WUSER),
      .WVALID(xt_rsc_0_6_WVALID),
      .WREADY(xt_rsc_0_6_WREADY),
      .BID(xt_rsc_0_6_BID),
      .BRESP(xt_rsc_0_6_BRESP),
      .BUSER(xt_rsc_0_6_BUSER),
      .BVALID(xt_rsc_0_6_BVALID),
      .BREADY(xt_rsc_0_6_BREADY),
      .ARID(xt_rsc_0_6_ARID),
      .ARADDR(xt_rsc_0_6_ARADDR),
      .ARLEN(xt_rsc_0_6_ARLEN),
      .ARSIZE(xt_rsc_0_6_ARSIZE),
      .ARBURST(xt_rsc_0_6_ARBURST),
      .ARLOCK(xt_rsc_0_6_ARLOCK),
      .ARCACHE(xt_rsc_0_6_ARCACHE),
      .ARPROT(xt_rsc_0_6_ARPROT),
      .ARQOS(xt_rsc_0_6_ARQOS),
      .ARREGION(xt_rsc_0_6_ARREGION),
      .ARUSER(xt_rsc_0_6_ARUSER),
      .ARVALID(xt_rsc_0_6_ARVALID),
      .ARREADY(xt_rsc_0_6_ARREADY),
      .RID(xt_rsc_0_6_RID),
      .RDATA(xt_rsc_0_6_RDATA),
      .RRESP(xt_rsc_0_6_RRESP),
      .RLAST(xt_rsc_0_6_RLAST),
      .RUSER(xt_rsc_0_6_RUSER),
      .RVALID(xt_rsc_0_6_RVALID),
      .RREADY(xt_rsc_0_6_RREADY),
      .s_re(xt_rsc_0_6_i_s_re_core_sct),
      .s_we(xt_rsc_0_6_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_6_i_s_raddr),
      .s_waddr(xt_rsc_0_6_i_s_waddr),
      .s_din(xt_rsc_0_6_i_s_din),
      .s_dout(xt_rsc_0_6_i_s_dout),
      .s_rrdy(xt_rsc_0_6_i_s_rrdy),
      .s_wrdy(xt_rsc_0_6_i_s_wrdy),
      .is_idle(xt_rsc_0_6_is_idle_1),
      .tr_write_done(xt_rsc_0_6_tr_write_done),
      .s_tdone(xt_rsc_0_6_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_6_i_xt_rsc_0_6_wait_ctrl peaseNTT_core_xt_rsc_0_6_i_xt_rsc_0_6_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_6_i_oswt(xt_rsc_0_6_i_oswt),
      .xt_rsc_0_6_i_oswt_1(xt_rsc_0_6_i_oswt_1),
      .xt_rsc_0_6_i_biwt(xt_rsc_0_6_i_biwt),
      .xt_rsc_0_6_i_bdwt(xt_rsc_0_6_i_bdwt),
      .xt_rsc_0_6_i_bcwt(xt_rsc_0_6_i_bcwt),
      .xt_rsc_0_6_i_s_re_core_sct(xt_rsc_0_6_i_s_re_core_sct),
      .xt_rsc_0_6_i_biwt_1(xt_rsc_0_6_i_biwt_1),
      .xt_rsc_0_6_i_bdwt_2(xt_rsc_0_6_i_bdwt_2),
      .xt_rsc_0_6_i_bcwt_1(xt_rsc_0_6_i_bcwt_1),
      .xt_rsc_0_6_i_s_we_core_sct(xt_rsc_0_6_i_s_we_core_sct),
      .xt_rsc_0_6_i_s_rrdy(xt_rsc_0_6_i_s_rrdy),
      .xt_rsc_0_6_i_s_wrdy(xt_rsc_0_6_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_6_i_xt_rsc_0_6_wait_dp peaseNTT_core_xt_rsc_0_6_i_xt_rsc_0_6_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_6_i_oswt(xt_rsc_0_6_i_oswt),
      .xt_rsc_0_6_i_wen_comp(xt_rsc_0_6_i_wen_comp),
      .xt_rsc_0_6_i_oswt_1(xt_rsc_0_6_i_oswt_1),
      .xt_rsc_0_6_i_wen_comp_1(xt_rsc_0_6_i_wen_comp_1),
      .xt_rsc_0_6_i_s_raddr_core(xt_rsc_0_6_i_s_raddr_core),
      .xt_rsc_0_6_i_s_waddr_core(xt_rsc_0_6_i_s_waddr_core),
      .xt_rsc_0_6_i_s_din_mxwt(xt_rsc_0_6_i_s_din_mxwt),
      .xt_rsc_0_6_i_s_dout_core(xt_rsc_0_6_i_s_dout_core),
      .xt_rsc_0_6_i_biwt(xt_rsc_0_6_i_biwt),
      .xt_rsc_0_6_i_bdwt(xt_rsc_0_6_i_bdwt),
      .xt_rsc_0_6_i_bcwt(xt_rsc_0_6_i_bcwt),
      .xt_rsc_0_6_i_biwt_1(xt_rsc_0_6_i_biwt_1),
      .xt_rsc_0_6_i_bdwt_2(xt_rsc_0_6_i_bdwt_2),
      .xt_rsc_0_6_i_bcwt_1(xt_rsc_0_6_i_bcwt_1),
      .xt_rsc_0_6_i_s_raddr(xt_rsc_0_6_i_s_raddr),
      .xt_rsc_0_6_i_s_raddr_core_sct(xt_rsc_0_6_i_s_re_core_sct),
      .xt_rsc_0_6_i_s_waddr(xt_rsc_0_6_i_s_waddr),
      .xt_rsc_0_6_i_s_waddr_core_sct(xt_rsc_0_6_i_s_we_core_sct),
      .xt_rsc_0_6_i_s_din(xt_rsc_0_6_i_s_din),
      .xt_rsc_0_6_i_s_dout(xt_rsc_0_6_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_5_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_5_i (
  clk, rst, xt_rsc_0_5_s_tdone, xt_rsc_0_5_tr_write_done, xt_rsc_0_5_RREADY, xt_rsc_0_5_RVALID,
      xt_rsc_0_5_RUSER, xt_rsc_0_5_RLAST, xt_rsc_0_5_RRESP, xt_rsc_0_5_RDATA, xt_rsc_0_5_RID,
      xt_rsc_0_5_ARREADY, xt_rsc_0_5_ARVALID, xt_rsc_0_5_ARUSER, xt_rsc_0_5_ARREGION,
      xt_rsc_0_5_ARQOS, xt_rsc_0_5_ARPROT, xt_rsc_0_5_ARCACHE, xt_rsc_0_5_ARLOCK,
      xt_rsc_0_5_ARBURST, xt_rsc_0_5_ARSIZE, xt_rsc_0_5_ARLEN, xt_rsc_0_5_ARADDR,
      xt_rsc_0_5_ARID, xt_rsc_0_5_BREADY, xt_rsc_0_5_BVALID, xt_rsc_0_5_BUSER, xt_rsc_0_5_BRESP,
      xt_rsc_0_5_BID, xt_rsc_0_5_WREADY, xt_rsc_0_5_WVALID, xt_rsc_0_5_WUSER, xt_rsc_0_5_WLAST,
      xt_rsc_0_5_WSTRB, xt_rsc_0_5_WDATA, xt_rsc_0_5_AWREADY, xt_rsc_0_5_AWVALID,
      xt_rsc_0_5_AWUSER, xt_rsc_0_5_AWREGION, xt_rsc_0_5_AWQOS, xt_rsc_0_5_AWPROT,
      xt_rsc_0_5_AWCACHE, xt_rsc_0_5_AWLOCK, xt_rsc_0_5_AWBURST, xt_rsc_0_5_AWSIZE,
      xt_rsc_0_5_AWLEN, xt_rsc_0_5_AWADDR, xt_rsc_0_5_AWID, core_wen, xt_rsc_0_5_i_oswt,
      xt_rsc_0_5_i_wen_comp, xt_rsc_0_5_i_oswt_1, xt_rsc_0_5_i_wen_comp_1, xt_rsc_0_5_i_s_raddr_core,
      xt_rsc_0_5_i_s_waddr_core, xt_rsc_0_5_i_s_din_mxwt, xt_rsc_0_5_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_5_s_tdone;
  input xt_rsc_0_5_tr_write_done;
  input xt_rsc_0_5_RREADY;
  output xt_rsc_0_5_RVALID;
  output xt_rsc_0_5_RUSER;
  output xt_rsc_0_5_RLAST;
  output [1:0] xt_rsc_0_5_RRESP;
  output [31:0] xt_rsc_0_5_RDATA;
  output xt_rsc_0_5_RID;
  output xt_rsc_0_5_ARREADY;
  input xt_rsc_0_5_ARVALID;
  input xt_rsc_0_5_ARUSER;
  input [3:0] xt_rsc_0_5_ARREGION;
  input [3:0] xt_rsc_0_5_ARQOS;
  input [2:0] xt_rsc_0_5_ARPROT;
  input [3:0] xt_rsc_0_5_ARCACHE;
  input xt_rsc_0_5_ARLOCK;
  input [1:0] xt_rsc_0_5_ARBURST;
  input [2:0] xt_rsc_0_5_ARSIZE;
  input [7:0] xt_rsc_0_5_ARLEN;
  input [11:0] xt_rsc_0_5_ARADDR;
  input xt_rsc_0_5_ARID;
  input xt_rsc_0_5_BREADY;
  output xt_rsc_0_5_BVALID;
  output xt_rsc_0_5_BUSER;
  output [1:0] xt_rsc_0_5_BRESP;
  output xt_rsc_0_5_BID;
  output xt_rsc_0_5_WREADY;
  input xt_rsc_0_5_WVALID;
  input xt_rsc_0_5_WUSER;
  input xt_rsc_0_5_WLAST;
  input [3:0] xt_rsc_0_5_WSTRB;
  input [31:0] xt_rsc_0_5_WDATA;
  output xt_rsc_0_5_AWREADY;
  input xt_rsc_0_5_AWVALID;
  input xt_rsc_0_5_AWUSER;
  input [3:0] xt_rsc_0_5_AWREGION;
  input [3:0] xt_rsc_0_5_AWQOS;
  input [2:0] xt_rsc_0_5_AWPROT;
  input [3:0] xt_rsc_0_5_AWCACHE;
  input xt_rsc_0_5_AWLOCK;
  input [1:0] xt_rsc_0_5_AWBURST;
  input [2:0] xt_rsc_0_5_AWSIZE;
  input [7:0] xt_rsc_0_5_AWLEN;
  input [11:0] xt_rsc_0_5_AWADDR;
  input xt_rsc_0_5_AWID;
  input core_wen;
  input xt_rsc_0_5_i_oswt;
  output xt_rsc_0_5_i_wen_comp;
  input xt_rsc_0_5_i_oswt_1;
  output xt_rsc_0_5_i_wen_comp_1;
  input [3:0] xt_rsc_0_5_i_s_raddr_core;
  input [3:0] xt_rsc_0_5_i_s_waddr_core;
  output [31:0] xt_rsc_0_5_i_s_din_mxwt;
  input [31:0] xt_rsc_0_5_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_5_i_biwt;
  wire xt_rsc_0_5_i_bdwt;
  wire xt_rsc_0_5_i_bcwt;
  wire xt_rsc_0_5_i_s_re_core_sct;
  wire xt_rsc_0_5_i_biwt_1;
  wire xt_rsc_0_5_i_bdwt_2;
  wire xt_rsc_0_5_i_bcwt_1;
  wire xt_rsc_0_5_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_5_i_s_raddr;
  wire [3:0] xt_rsc_0_5_i_s_waddr;
  wire [31:0] xt_rsc_0_5_i_s_din;
  wire [31:0] xt_rsc_0_5_i_s_dout;
  wire xt_rsc_0_5_i_s_rrdy;
  wire xt_rsc_0_5_i_s_wrdy;
  wire xt_rsc_0_5_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_5_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_5_AWID),
      .AWADDR(xt_rsc_0_5_AWADDR),
      .AWLEN(xt_rsc_0_5_AWLEN),
      .AWSIZE(xt_rsc_0_5_AWSIZE),
      .AWBURST(xt_rsc_0_5_AWBURST),
      .AWLOCK(xt_rsc_0_5_AWLOCK),
      .AWCACHE(xt_rsc_0_5_AWCACHE),
      .AWPROT(xt_rsc_0_5_AWPROT),
      .AWQOS(xt_rsc_0_5_AWQOS),
      .AWREGION(xt_rsc_0_5_AWREGION),
      .AWUSER(xt_rsc_0_5_AWUSER),
      .AWVALID(xt_rsc_0_5_AWVALID),
      .AWREADY(xt_rsc_0_5_AWREADY),
      .WDATA(xt_rsc_0_5_WDATA),
      .WSTRB(xt_rsc_0_5_WSTRB),
      .WLAST(xt_rsc_0_5_WLAST),
      .WUSER(xt_rsc_0_5_WUSER),
      .WVALID(xt_rsc_0_5_WVALID),
      .WREADY(xt_rsc_0_5_WREADY),
      .BID(xt_rsc_0_5_BID),
      .BRESP(xt_rsc_0_5_BRESP),
      .BUSER(xt_rsc_0_5_BUSER),
      .BVALID(xt_rsc_0_5_BVALID),
      .BREADY(xt_rsc_0_5_BREADY),
      .ARID(xt_rsc_0_5_ARID),
      .ARADDR(xt_rsc_0_5_ARADDR),
      .ARLEN(xt_rsc_0_5_ARLEN),
      .ARSIZE(xt_rsc_0_5_ARSIZE),
      .ARBURST(xt_rsc_0_5_ARBURST),
      .ARLOCK(xt_rsc_0_5_ARLOCK),
      .ARCACHE(xt_rsc_0_5_ARCACHE),
      .ARPROT(xt_rsc_0_5_ARPROT),
      .ARQOS(xt_rsc_0_5_ARQOS),
      .ARREGION(xt_rsc_0_5_ARREGION),
      .ARUSER(xt_rsc_0_5_ARUSER),
      .ARVALID(xt_rsc_0_5_ARVALID),
      .ARREADY(xt_rsc_0_5_ARREADY),
      .RID(xt_rsc_0_5_RID),
      .RDATA(xt_rsc_0_5_RDATA),
      .RRESP(xt_rsc_0_5_RRESP),
      .RLAST(xt_rsc_0_5_RLAST),
      .RUSER(xt_rsc_0_5_RUSER),
      .RVALID(xt_rsc_0_5_RVALID),
      .RREADY(xt_rsc_0_5_RREADY),
      .s_re(xt_rsc_0_5_i_s_re_core_sct),
      .s_we(xt_rsc_0_5_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_5_i_s_raddr),
      .s_waddr(xt_rsc_0_5_i_s_waddr),
      .s_din(xt_rsc_0_5_i_s_din),
      .s_dout(xt_rsc_0_5_i_s_dout),
      .s_rrdy(xt_rsc_0_5_i_s_rrdy),
      .s_wrdy(xt_rsc_0_5_i_s_wrdy),
      .is_idle(xt_rsc_0_5_is_idle_1),
      .tr_write_done(xt_rsc_0_5_tr_write_done),
      .s_tdone(xt_rsc_0_5_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_5_i_xt_rsc_0_5_wait_ctrl peaseNTT_core_xt_rsc_0_5_i_xt_rsc_0_5_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_5_i_oswt(xt_rsc_0_5_i_oswt),
      .xt_rsc_0_5_i_oswt_1(xt_rsc_0_5_i_oswt_1),
      .xt_rsc_0_5_i_biwt(xt_rsc_0_5_i_biwt),
      .xt_rsc_0_5_i_bdwt(xt_rsc_0_5_i_bdwt),
      .xt_rsc_0_5_i_bcwt(xt_rsc_0_5_i_bcwt),
      .xt_rsc_0_5_i_s_re_core_sct(xt_rsc_0_5_i_s_re_core_sct),
      .xt_rsc_0_5_i_biwt_1(xt_rsc_0_5_i_biwt_1),
      .xt_rsc_0_5_i_bdwt_2(xt_rsc_0_5_i_bdwt_2),
      .xt_rsc_0_5_i_bcwt_1(xt_rsc_0_5_i_bcwt_1),
      .xt_rsc_0_5_i_s_we_core_sct(xt_rsc_0_5_i_s_we_core_sct),
      .xt_rsc_0_5_i_s_rrdy(xt_rsc_0_5_i_s_rrdy),
      .xt_rsc_0_5_i_s_wrdy(xt_rsc_0_5_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_5_i_xt_rsc_0_5_wait_dp peaseNTT_core_xt_rsc_0_5_i_xt_rsc_0_5_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_5_i_oswt(xt_rsc_0_5_i_oswt),
      .xt_rsc_0_5_i_wen_comp(xt_rsc_0_5_i_wen_comp),
      .xt_rsc_0_5_i_oswt_1(xt_rsc_0_5_i_oswt_1),
      .xt_rsc_0_5_i_wen_comp_1(xt_rsc_0_5_i_wen_comp_1),
      .xt_rsc_0_5_i_s_raddr_core(xt_rsc_0_5_i_s_raddr_core),
      .xt_rsc_0_5_i_s_waddr_core(xt_rsc_0_5_i_s_waddr_core),
      .xt_rsc_0_5_i_s_din_mxwt(xt_rsc_0_5_i_s_din_mxwt),
      .xt_rsc_0_5_i_s_dout_core(xt_rsc_0_5_i_s_dout_core),
      .xt_rsc_0_5_i_biwt(xt_rsc_0_5_i_biwt),
      .xt_rsc_0_5_i_bdwt(xt_rsc_0_5_i_bdwt),
      .xt_rsc_0_5_i_bcwt(xt_rsc_0_5_i_bcwt),
      .xt_rsc_0_5_i_biwt_1(xt_rsc_0_5_i_biwt_1),
      .xt_rsc_0_5_i_bdwt_2(xt_rsc_0_5_i_bdwt_2),
      .xt_rsc_0_5_i_bcwt_1(xt_rsc_0_5_i_bcwt_1),
      .xt_rsc_0_5_i_s_raddr(xt_rsc_0_5_i_s_raddr),
      .xt_rsc_0_5_i_s_raddr_core_sct(xt_rsc_0_5_i_s_re_core_sct),
      .xt_rsc_0_5_i_s_waddr(xt_rsc_0_5_i_s_waddr),
      .xt_rsc_0_5_i_s_waddr_core_sct(xt_rsc_0_5_i_s_we_core_sct),
      .xt_rsc_0_5_i_s_din(xt_rsc_0_5_i_s_din),
      .xt_rsc_0_5_i_s_dout(xt_rsc_0_5_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_4_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_4_i (
  clk, rst, xt_rsc_0_4_s_tdone, xt_rsc_0_4_tr_write_done, xt_rsc_0_4_RREADY, xt_rsc_0_4_RVALID,
      xt_rsc_0_4_RUSER, xt_rsc_0_4_RLAST, xt_rsc_0_4_RRESP, xt_rsc_0_4_RDATA, xt_rsc_0_4_RID,
      xt_rsc_0_4_ARREADY, xt_rsc_0_4_ARVALID, xt_rsc_0_4_ARUSER, xt_rsc_0_4_ARREGION,
      xt_rsc_0_4_ARQOS, xt_rsc_0_4_ARPROT, xt_rsc_0_4_ARCACHE, xt_rsc_0_4_ARLOCK,
      xt_rsc_0_4_ARBURST, xt_rsc_0_4_ARSIZE, xt_rsc_0_4_ARLEN, xt_rsc_0_4_ARADDR,
      xt_rsc_0_4_ARID, xt_rsc_0_4_BREADY, xt_rsc_0_4_BVALID, xt_rsc_0_4_BUSER, xt_rsc_0_4_BRESP,
      xt_rsc_0_4_BID, xt_rsc_0_4_WREADY, xt_rsc_0_4_WVALID, xt_rsc_0_4_WUSER, xt_rsc_0_4_WLAST,
      xt_rsc_0_4_WSTRB, xt_rsc_0_4_WDATA, xt_rsc_0_4_AWREADY, xt_rsc_0_4_AWVALID,
      xt_rsc_0_4_AWUSER, xt_rsc_0_4_AWREGION, xt_rsc_0_4_AWQOS, xt_rsc_0_4_AWPROT,
      xt_rsc_0_4_AWCACHE, xt_rsc_0_4_AWLOCK, xt_rsc_0_4_AWBURST, xt_rsc_0_4_AWSIZE,
      xt_rsc_0_4_AWLEN, xt_rsc_0_4_AWADDR, xt_rsc_0_4_AWID, core_wen, xt_rsc_0_4_i_oswt,
      xt_rsc_0_4_i_wen_comp, xt_rsc_0_4_i_oswt_1, xt_rsc_0_4_i_wen_comp_1, xt_rsc_0_4_i_s_raddr_core,
      xt_rsc_0_4_i_s_waddr_core, xt_rsc_0_4_i_s_din_mxwt, xt_rsc_0_4_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_4_s_tdone;
  input xt_rsc_0_4_tr_write_done;
  input xt_rsc_0_4_RREADY;
  output xt_rsc_0_4_RVALID;
  output xt_rsc_0_4_RUSER;
  output xt_rsc_0_4_RLAST;
  output [1:0] xt_rsc_0_4_RRESP;
  output [31:0] xt_rsc_0_4_RDATA;
  output xt_rsc_0_4_RID;
  output xt_rsc_0_4_ARREADY;
  input xt_rsc_0_4_ARVALID;
  input xt_rsc_0_4_ARUSER;
  input [3:0] xt_rsc_0_4_ARREGION;
  input [3:0] xt_rsc_0_4_ARQOS;
  input [2:0] xt_rsc_0_4_ARPROT;
  input [3:0] xt_rsc_0_4_ARCACHE;
  input xt_rsc_0_4_ARLOCK;
  input [1:0] xt_rsc_0_4_ARBURST;
  input [2:0] xt_rsc_0_4_ARSIZE;
  input [7:0] xt_rsc_0_4_ARLEN;
  input [11:0] xt_rsc_0_4_ARADDR;
  input xt_rsc_0_4_ARID;
  input xt_rsc_0_4_BREADY;
  output xt_rsc_0_4_BVALID;
  output xt_rsc_0_4_BUSER;
  output [1:0] xt_rsc_0_4_BRESP;
  output xt_rsc_0_4_BID;
  output xt_rsc_0_4_WREADY;
  input xt_rsc_0_4_WVALID;
  input xt_rsc_0_4_WUSER;
  input xt_rsc_0_4_WLAST;
  input [3:0] xt_rsc_0_4_WSTRB;
  input [31:0] xt_rsc_0_4_WDATA;
  output xt_rsc_0_4_AWREADY;
  input xt_rsc_0_4_AWVALID;
  input xt_rsc_0_4_AWUSER;
  input [3:0] xt_rsc_0_4_AWREGION;
  input [3:0] xt_rsc_0_4_AWQOS;
  input [2:0] xt_rsc_0_4_AWPROT;
  input [3:0] xt_rsc_0_4_AWCACHE;
  input xt_rsc_0_4_AWLOCK;
  input [1:0] xt_rsc_0_4_AWBURST;
  input [2:0] xt_rsc_0_4_AWSIZE;
  input [7:0] xt_rsc_0_4_AWLEN;
  input [11:0] xt_rsc_0_4_AWADDR;
  input xt_rsc_0_4_AWID;
  input core_wen;
  input xt_rsc_0_4_i_oswt;
  output xt_rsc_0_4_i_wen_comp;
  input xt_rsc_0_4_i_oswt_1;
  output xt_rsc_0_4_i_wen_comp_1;
  input [3:0] xt_rsc_0_4_i_s_raddr_core;
  input [3:0] xt_rsc_0_4_i_s_waddr_core;
  output [31:0] xt_rsc_0_4_i_s_din_mxwt;
  input [31:0] xt_rsc_0_4_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_4_i_biwt;
  wire xt_rsc_0_4_i_bdwt;
  wire xt_rsc_0_4_i_bcwt;
  wire xt_rsc_0_4_i_s_re_core_sct;
  wire xt_rsc_0_4_i_biwt_1;
  wire xt_rsc_0_4_i_bdwt_2;
  wire xt_rsc_0_4_i_bcwt_1;
  wire xt_rsc_0_4_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_4_i_s_raddr;
  wire [3:0] xt_rsc_0_4_i_s_waddr;
  wire [31:0] xt_rsc_0_4_i_s_din;
  wire [31:0] xt_rsc_0_4_i_s_dout;
  wire xt_rsc_0_4_i_s_rrdy;
  wire xt_rsc_0_4_i_s_wrdy;
  wire xt_rsc_0_4_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_4_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_4_AWID),
      .AWADDR(xt_rsc_0_4_AWADDR),
      .AWLEN(xt_rsc_0_4_AWLEN),
      .AWSIZE(xt_rsc_0_4_AWSIZE),
      .AWBURST(xt_rsc_0_4_AWBURST),
      .AWLOCK(xt_rsc_0_4_AWLOCK),
      .AWCACHE(xt_rsc_0_4_AWCACHE),
      .AWPROT(xt_rsc_0_4_AWPROT),
      .AWQOS(xt_rsc_0_4_AWQOS),
      .AWREGION(xt_rsc_0_4_AWREGION),
      .AWUSER(xt_rsc_0_4_AWUSER),
      .AWVALID(xt_rsc_0_4_AWVALID),
      .AWREADY(xt_rsc_0_4_AWREADY),
      .WDATA(xt_rsc_0_4_WDATA),
      .WSTRB(xt_rsc_0_4_WSTRB),
      .WLAST(xt_rsc_0_4_WLAST),
      .WUSER(xt_rsc_0_4_WUSER),
      .WVALID(xt_rsc_0_4_WVALID),
      .WREADY(xt_rsc_0_4_WREADY),
      .BID(xt_rsc_0_4_BID),
      .BRESP(xt_rsc_0_4_BRESP),
      .BUSER(xt_rsc_0_4_BUSER),
      .BVALID(xt_rsc_0_4_BVALID),
      .BREADY(xt_rsc_0_4_BREADY),
      .ARID(xt_rsc_0_4_ARID),
      .ARADDR(xt_rsc_0_4_ARADDR),
      .ARLEN(xt_rsc_0_4_ARLEN),
      .ARSIZE(xt_rsc_0_4_ARSIZE),
      .ARBURST(xt_rsc_0_4_ARBURST),
      .ARLOCK(xt_rsc_0_4_ARLOCK),
      .ARCACHE(xt_rsc_0_4_ARCACHE),
      .ARPROT(xt_rsc_0_4_ARPROT),
      .ARQOS(xt_rsc_0_4_ARQOS),
      .ARREGION(xt_rsc_0_4_ARREGION),
      .ARUSER(xt_rsc_0_4_ARUSER),
      .ARVALID(xt_rsc_0_4_ARVALID),
      .ARREADY(xt_rsc_0_4_ARREADY),
      .RID(xt_rsc_0_4_RID),
      .RDATA(xt_rsc_0_4_RDATA),
      .RRESP(xt_rsc_0_4_RRESP),
      .RLAST(xt_rsc_0_4_RLAST),
      .RUSER(xt_rsc_0_4_RUSER),
      .RVALID(xt_rsc_0_4_RVALID),
      .RREADY(xt_rsc_0_4_RREADY),
      .s_re(xt_rsc_0_4_i_s_re_core_sct),
      .s_we(xt_rsc_0_4_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_4_i_s_raddr),
      .s_waddr(xt_rsc_0_4_i_s_waddr),
      .s_din(xt_rsc_0_4_i_s_din),
      .s_dout(xt_rsc_0_4_i_s_dout),
      .s_rrdy(xt_rsc_0_4_i_s_rrdy),
      .s_wrdy(xt_rsc_0_4_i_s_wrdy),
      .is_idle(xt_rsc_0_4_is_idle_1),
      .tr_write_done(xt_rsc_0_4_tr_write_done),
      .s_tdone(xt_rsc_0_4_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_4_i_xt_rsc_0_4_wait_ctrl peaseNTT_core_xt_rsc_0_4_i_xt_rsc_0_4_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_4_i_oswt(xt_rsc_0_4_i_oswt),
      .xt_rsc_0_4_i_oswt_1(xt_rsc_0_4_i_oswt_1),
      .xt_rsc_0_4_i_biwt(xt_rsc_0_4_i_biwt),
      .xt_rsc_0_4_i_bdwt(xt_rsc_0_4_i_bdwt),
      .xt_rsc_0_4_i_bcwt(xt_rsc_0_4_i_bcwt),
      .xt_rsc_0_4_i_s_re_core_sct(xt_rsc_0_4_i_s_re_core_sct),
      .xt_rsc_0_4_i_biwt_1(xt_rsc_0_4_i_biwt_1),
      .xt_rsc_0_4_i_bdwt_2(xt_rsc_0_4_i_bdwt_2),
      .xt_rsc_0_4_i_bcwt_1(xt_rsc_0_4_i_bcwt_1),
      .xt_rsc_0_4_i_s_we_core_sct(xt_rsc_0_4_i_s_we_core_sct),
      .xt_rsc_0_4_i_s_rrdy(xt_rsc_0_4_i_s_rrdy),
      .xt_rsc_0_4_i_s_wrdy(xt_rsc_0_4_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_4_i_xt_rsc_0_4_wait_dp peaseNTT_core_xt_rsc_0_4_i_xt_rsc_0_4_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_4_i_oswt(xt_rsc_0_4_i_oswt),
      .xt_rsc_0_4_i_wen_comp(xt_rsc_0_4_i_wen_comp),
      .xt_rsc_0_4_i_oswt_1(xt_rsc_0_4_i_oswt_1),
      .xt_rsc_0_4_i_wen_comp_1(xt_rsc_0_4_i_wen_comp_1),
      .xt_rsc_0_4_i_s_raddr_core(xt_rsc_0_4_i_s_raddr_core),
      .xt_rsc_0_4_i_s_waddr_core(xt_rsc_0_4_i_s_waddr_core),
      .xt_rsc_0_4_i_s_din_mxwt(xt_rsc_0_4_i_s_din_mxwt),
      .xt_rsc_0_4_i_s_dout_core(xt_rsc_0_4_i_s_dout_core),
      .xt_rsc_0_4_i_biwt(xt_rsc_0_4_i_biwt),
      .xt_rsc_0_4_i_bdwt(xt_rsc_0_4_i_bdwt),
      .xt_rsc_0_4_i_bcwt(xt_rsc_0_4_i_bcwt),
      .xt_rsc_0_4_i_biwt_1(xt_rsc_0_4_i_biwt_1),
      .xt_rsc_0_4_i_bdwt_2(xt_rsc_0_4_i_bdwt_2),
      .xt_rsc_0_4_i_bcwt_1(xt_rsc_0_4_i_bcwt_1),
      .xt_rsc_0_4_i_s_raddr(xt_rsc_0_4_i_s_raddr),
      .xt_rsc_0_4_i_s_raddr_core_sct(xt_rsc_0_4_i_s_re_core_sct),
      .xt_rsc_0_4_i_s_waddr(xt_rsc_0_4_i_s_waddr),
      .xt_rsc_0_4_i_s_waddr_core_sct(xt_rsc_0_4_i_s_we_core_sct),
      .xt_rsc_0_4_i_s_din(xt_rsc_0_4_i_s_din),
      .xt_rsc_0_4_i_s_dout(xt_rsc_0_4_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_3_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_3_i (
  clk, rst, xt_rsc_0_3_s_tdone, xt_rsc_0_3_tr_write_done, xt_rsc_0_3_RREADY, xt_rsc_0_3_RVALID,
      xt_rsc_0_3_RUSER, xt_rsc_0_3_RLAST, xt_rsc_0_3_RRESP, xt_rsc_0_3_RDATA, xt_rsc_0_3_RID,
      xt_rsc_0_3_ARREADY, xt_rsc_0_3_ARVALID, xt_rsc_0_3_ARUSER, xt_rsc_0_3_ARREGION,
      xt_rsc_0_3_ARQOS, xt_rsc_0_3_ARPROT, xt_rsc_0_3_ARCACHE, xt_rsc_0_3_ARLOCK,
      xt_rsc_0_3_ARBURST, xt_rsc_0_3_ARSIZE, xt_rsc_0_3_ARLEN, xt_rsc_0_3_ARADDR,
      xt_rsc_0_3_ARID, xt_rsc_0_3_BREADY, xt_rsc_0_3_BVALID, xt_rsc_0_3_BUSER, xt_rsc_0_3_BRESP,
      xt_rsc_0_3_BID, xt_rsc_0_3_WREADY, xt_rsc_0_3_WVALID, xt_rsc_0_3_WUSER, xt_rsc_0_3_WLAST,
      xt_rsc_0_3_WSTRB, xt_rsc_0_3_WDATA, xt_rsc_0_3_AWREADY, xt_rsc_0_3_AWVALID,
      xt_rsc_0_3_AWUSER, xt_rsc_0_3_AWREGION, xt_rsc_0_3_AWQOS, xt_rsc_0_3_AWPROT,
      xt_rsc_0_3_AWCACHE, xt_rsc_0_3_AWLOCK, xt_rsc_0_3_AWBURST, xt_rsc_0_3_AWSIZE,
      xt_rsc_0_3_AWLEN, xt_rsc_0_3_AWADDR, xt_rsc_0_3_AWID, core_wen, xt_rsc_0_3_i_oswt,
      xt_rsc_0_3_i_wen_comp, xt_rsc_0_3_i_oswt_1, xt_rsc_0_3_i_wen_comp_1, xt_rsc_0_3_i_s_raddr_core,
      xt_rsc_0_3_i_s_waddr_core, xt_rsc_0_3_i_s_din_mxwt, xt_rsc_0_3_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_3_s_tdone;
  input xt_rsc_0_3_tr_write_done;
  input xt_rsc_0_3_RREADY;
  output xt_rsc_0_3_RVALID;
  output xt_rsc_0_3_RUSER;
  output xt_rsc_0_3_RLAST;
  output [1:0] xt_rsc_0_3_RRESP;
  output [31:0] xt_rsc_0_3_RDATA;
  output xt_rsc_0_3_RID;
  output xt_rsc_0_3_ARREADY;
  input xt_rsc_0_3_ARVALID;
  input xt_rsc_0_3_ARUSER;
  input [3:0] xt_rsc_0_3_ARREGION;
  input [3:0] xt_rsc_0_3_ARQOS;
  input [2:0] xt_rsc_0_3_ARPROT;
  input [3:0] xt_rsc_0_3_ARCACHE;
  input xt_rsc_0_3_ARLOCK;
  input [1:0] xt_rsc_0_3_ARBURST;
  input [2:0] xt_rsc_0_3_ARSIZE;
  input [7:0] xt_rsc_0_3_ARLEN;
  input [11:0] xt_rsc_0_3_ARADDR;
  input xt_rsc_0_3_ARID;
  input xt_rsc_0_3_BREADY;
  output xt_rsc_0_3_BVALID;
  output xt_rsc_0_3_BUSER;
  output [1:0] xt_rsc_0_3_BRESP;
  output xt_rsc_0_3_BID;
  output xt_rsc_0_3_WREADY;
  input xt_rsc_0_3_WVALID;
  input xt_rsc_0_3_WUSER;
  input xt_rsc_0_3_WLAST;
  input [3:0] xt_rsc_0_3_WSTRB;
  input [31:0] xt_rsc_0_3_WDATA;
  output xt_rsc_0_3_AWREADY;
  input xt_rsc_0_3_AWVALID;
  input xt_rsc_0_3_AWUSER;
  input [3:0] xt_rsc_0_3_AWREGION;
  input [3:0] xt_rsc_0_3_AWQOS;
  input [2:0] xt_rsc_0_3_AWPROT;
  input [3:0] xt_rsc_0_3_AWCACHE;
  input xt_rsc_0_3_AWLOCK;
  input [1:0] xt_rsc_0_3_AWBURST;
  input [2:0] xt_rsc_0_3_AWSIZE;
  input [7:0] xt_rsc_0_3_AWLEN;
  input [11:0] xt_rsc_0_3_AWADDR;
  input xt_rsc_0_3_AWID;
  input core_wen;
  input xt_rsc_0_3_i_oswt;
  output xt_rsc_0_3_i_wen_comp;
  input xt_rsc_0_3_i_oswt_1;
  output xt_rsc_0_3_i_wen_comp_1;
  input [3:0] xt_rsc_0_3_i_s_raddr_core;
  input [3:0] xt_rsc_0_3_i_s_waddr_core;
  output [31:0] xt_rsc_0_3_i_s_din_mxwt;
  input [31:0] xt_rsc_0_3_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_3_i_biwt;
  wire xt_rsc_0_3_i_bdwt;
  wire xt_rsc_0_3_i_bcwt;
  wire xt_rsc_0_3_i_s_re_core_sct;
  wire xt_rsc_0_3_i_biwt_1;
  wire xt_rsc_0_3_i_bdwt_2;
  wire xt_rsc_0_3_i_bcwt_1;
  wire xt_rsc_0_3_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_3_i_s_raddr;
  wire [3:0] xt_rsc_0_3_i_s_waddr;
  wire [31:0] xt_rsc_0_3_i_s_din;
  wire [31:0] xt_rsc_0_3_i_s_dout;
  wire xt_rsc_0_3_i_s_rrdy;
  wire xt_rsc_0_3_i_s_wrdy;
  wire xt_rsc_0_3_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_3_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_3_AWID),
      .AWADDR(xt_rsc_0_3_AWADDR),
      .AWLEN(xt_rsc_0_3_AWLEN),
      .AWSIZE(xt_rsc_0_3_AWSIZE),
      .AWBURST(xt_rsc_0_3_AWBURST),
      .AWLOCK(xt_rsc_0_3_AWLOCK),
      .AWCACHE(xt_rsc_0_3_AWCACHE),
      .AWPROT(xt_rsc_0_3_AWPROT),
      .AWQOS(xt_rsc_0_3_AWQOS),
      .AWREGION(xt_rsc_0_3_AWREGION),
      .AWUSER(xt_rsc_0_3_AWUSER),
      .AWVALID(xt_rsc_0_3_AWVALID),
      .AWREADY(xt_rsc_0_3_AWREADY),
      .WDATA(xt_rsc_0_3_WDATA),
      .WSTRB(xt_rsc_0_3_WSTRB),
      .WLAST(xt_rsc_0_3_WLAST),
      .WUSER(xt_rsc_0_3_WUSER),
      .WVALID(xt_rsc_0_3_WVALID),
      .WREADY(xt_rsc_0_3_WREADY),
      .BID(xt_rsc_0_3_BID),
      .BRESP(xt_rsc_0_3_BRESP),
      .BUSER(xt_rsc_0_3_BUSER),
      .BVALID(xt_rsc_0_3_BVALID),
      .BREADY(xt_rsc_0_3_BREADY),
      .ARID(xt_rsc_0_3_ARID),
      .ARADDR(xt_rsc_0_3_ARADDR),
      .ARLEN(xt_rsc_0_3_ARLEN),
      .ARSIZE(xt_rsc_0_3_ARSIZE),
      .ARBURST(xt_rsc_0_3_ARBURST),
      .ARLOCK(xt_rsc_0_3_ARLOCK),
      .ARCACHE(xt_rsc_0_3_ARCACHE),
      .ARPROT(xt_rsc_0_3_ARPROT),
      .ARQOS(xt_rsc_0_3_ARQOS),
      .ARREGION(xt_rsc_0_3_ARREGION),
      .ARUSER(xt_rsc_0_3_ARUSER),
      .ARVALID(xt_rsc_0_3_ARVALID),
      .ARREADY(xt_rsc_0_3_ARREADY),
      .RID(xt_rsc_0_3_RID),
      .RDATA(xt_rsc_0_3_RDATA),
      .RRESP(xt_rsc_0_3_RRESP),
      .RLAST(xt_rsc_0_3_RLAST),
      .RUSER(xt_rsc_0_3_RUSER),
      .RVALID(xt_rsc_0_3_RVALID),
      .RREADY(xt_rsc_0_3_RREADY),
      .s_re(xt_rsc_0_3_i_s_re_core_sct),
      .s_we(xt_rsc_0_3_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_3_i_s_raddr),
      .s_waddr(xt_rsc_0_3_i_s_waddr),
      .s_din(xt_rsc_0_3_i_s_din),
      .s_dout(xt_rsc_0_3_i_s_dout),
      .s_rrdy(xt_rsc_0_3_i_s_rrdy),
      .s_wrdy(xt_rsc_0_3_i_s_wrdy),
      .is_idle(xt_rsc_0_3_is_idle_1),
      .tr_write_done(xt_rsc_0_3_tr_write_done),
      .s_tdone(xt_rsc_0_3_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_3_i_xt_rsc_0_3_wait_ctrl peaseNTT_core_xt_rsc_0_3_i_xt_rsc_0_3_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_3_i_oswt(xt_rsc_0_3_i_oswt),
      .xt_rsc_0_3_i_oswt_1(xt_rsc_0_3_i_oswt_1),
      .xt_rsc_0_3_i_biwt(xt_rsc_0_3_i_biwt),
      .xt_rsc_0_3_i_bdwt(xt_rsc_0_3_i_bdwt),
      .xt_rsc_0_3_i_bcwt(xt_rsc_0_3_i_bcwt),
      .xt_rsc_0_3_i_s_re_core_sct(xt_rsc_0_3_i_s_re_core_sct),
      .xt_rsc_0_3_i_biwt_1(xt_rsc_0_3_i_biwt_1),
      .xt_rsc_0_3_i_bdwt_2(xt_rsc_0_3_i_bdwt_2),
      .xt_rsc_0_3_i_bcwt_1(xt_rsc_0_3_i_bcwt_1),
      .xt_rsc_0_3_i_s_we_core_sct(xt_rsc_0_3_i_s_we_core_sct),
      .xt_rsc_0_3_i_s_rrdy(xt_rsc_0_3_i_s_rrdy),
      .xt_rsc_0_3_i_s_wrdy(xt_rsc_0_3_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_3_i_xt_rsc_0_3_wait_dp peaseNTT_core_xt_rsc_0_3_i_xt_rsc_0_3_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_3_i_oswt(xt_rsc_0_3_i_oswt),
      .xt_rsc_0_3_i_wen_comp(xt_rsc_0_3_i_wen_comp),
      .xt_rsc_0_3_i_oswt_1(xt_rsc_0_3_i_oswt_1),
      .xt_rsc_0_3_i_wen_comp_1(xt_rsc_0_3_i_wen_comp_1),
      .xt_rsc_0_3_i_s_raddr_core(xt_rsc_0_3_i_s_raddr_core),
      .xt_rsc_0_3_i_s_waddr_core(xt_rsc_0_3_i_s_waddr_core),
      .xt_rsc_0_3_i_s_din_mxwt(xt_rsc_0_3_i_s_din_mxwt),
      .xt_rsc_0_3_i_s_dout_core(xt_rsc_0_3_i_s_dout_core),
      .xt_rsc_0_3_i_biwt(xt_rsc_0_3_i_biwt),
      .xt_rsc_0_3_i_bdwt(xt_rsc_0_3_i_bdwt),
      .xt_rsc_0_3_i_bcwt(xt_rsc_0_3_i_bcwt),
      .xt_rsc_0_3_i_biwt_1(xt_rsc_0_3_i_biwt_1),
      .xt_rsc_0_3_i_bdwt_2(xt_rsc_0_3_i_bdwt_2),
      .xt_rsc_0_3_i_bcwt_1(xt_rsc_0_3_i_bcwt_1),
      .xt_rsc_0_3_i_s_raddr(xt_rsc_0_3_i_s_raddr),
      .xt_rsc_0_3_i_s_raddr_core_sct(xt_rsc_0_3_i_s_re_core_sct),
      .xt_rsc_0_3_i_s_waddr(xt_rsc_0_3_i_s_waddr),
      .xt_rsc_0_3_i_s_waddr_core_sct(xt_rsc_0_3_i_s_we_core_sct),
      .xt_rsc_0_3_i_s_din(xt_rsc_0_3_i_s_din),
      .xt_rsc_0_3_i_s_dout(xt_rsc_0_3_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_2_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_2_i (
  clk, rst, xt_rsc_0_2_s_tdone, xt_rsc_0_2_tr_write_done, xt_rsc_0_2_RREADY, xt_rsc_0_2_RVALID,
      xt_rsc_0_2_RUSER, xt_rsc_0_2_RLAST, xt_rsc_0_2_RRESP, xt_rsc_0_2_RDATA, xt_rsc_0_2_RID,
      xt_rsc_0_2_ARREADY, xt_rsc_0_2_ARVALID, xt_rsc_0_2_ARUSER, xt_rsc_0_2_ARREGION,
      xt_rsc_0_2_ARQOS, xt_rsc_0_2_ARPROT, xt_rsc_0_2_ARCACHE, xt_rsc_0_2_ARLOCK,
      xt_rsc_0_2_ARBURST, xt_rsc_0_2_ARSIZE, xt_rsc_0_2_ARLEN, xt_rsc_0_2_ARADDR,
      xt_rsc_0_2_ARID, xt_rsc_0_2_BREADY, xt_rsc_0_2_BVALID, xt_rsc_0_2_BUSER, xt_rsc_0_2_BRESP,
      xt_rsc_0_2_BID, xt_rsc_0_2_WREADY, xt_rsc_0_2_WVALID, xt_rsc_0_2_WUSER, xt_rsc_0_2_WLAST,
      xt_rsc_0_2_WSTRB, xt_rsc_0_2_WDATA, xt_rsc_0_2_AWREADY, xt_rsc_0_2_AWVALID,
      xt_rsc_0_2_AWUSER, xt_rsc_0_2_AWREGION, xt_rsc_0_2_AWQOS, xt_rsc_0_2_AWPROT,
      xt_rsc_0_2_AWCACHE, xt_rsc_0_2_AWLOCK, xt_rsc_0_2_AWBURST, xt_rsc_0_2_AWSIZE,
      xt_rsc_0_2_AWLEN, xt_rsc_0_2_AWADDR, xt_rsc_0_2_AWID, core_wen, xt_rsc_0_2_i_oswt,
      xt_rsc_0_2_i_wen_comp, xt_rsc_0_2_i_oswt_1, xt_rsc_0_2_i_wen_comp_1, xt_rsc_0_2_i_s_raddr_core,
      xt_rsc_0_2_i_s_waddr_core, xt_rsc_0_2_i_s_din_mxwt, xt_rsc_0_2_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_2_s_tdone;
  input xt_rsc_0_2_tr_write_done;
  input xt_rsc_0_2_RREADY;
  output xt_rsc_0_2_RVALID;
  output xt_rsc_0_2_RUSER;
  output xt_rsc_0_2_RLAST;
  output [1:0] xt_rsc_0_2_RRESP;
  output [31:0] xt_rsc_0_2_RDATA;
  output xt_rsc_0_2_RID;
  output xt_rsc_0_2_ARREADY;
  input xt_rsc_0_2_ARVALID;
  input xt_rsc_0_2_ARUSER;
  input [3:0] xt_rsc_0_2_ARREGION;
  input [3:0] xt_rsc_0_2_ARQOS;
  input [2:0] xt_rsc_0_2_ARPROT;
  input [3:0] xt_rsc_0_2_ARCACHE;
  input xt_rsc_0_2_ARLOCK;
  input [1:0] xt_rsc_0_2_ARBURST;
  input [2:0] xt_rsc_0_2_ARSIZE;
  input [7:0] xt_rsc_0_2_ARLEN;
  input [11:0] xt_rsc_0_2_ARADDR;
  input xt_rsc_0_2_ARID;
  input xt_rsc_0_2_BREADY;
  output xt_rsc_0_2_BVALID;
  output xt_rsc_0_2_BUSER;
  output [1:0] xt_rsc_0_2_BRESP;
  output xt_rsc_0_2_BID;
  output xt_rsc_0_2_WREADY;
  input xt_rsc_0_2_WVALID;
  input xt_rsc_0_2_WUSER;
  input xt_rsc_0_2_WLAST;
  input [3:0] xt_rsc_0_2_WSTRB;
  input [31:0] xt_rsc_0_2_WDATA;
  output xt_rsc_0_2_AWREADY;
  input xt_rsc_0_2_AWVALID;
  input xt_rsc_0_2_AWUSER;
  input [3:0] xt_rsc_0_2_AWREGION;
  input [3:0] xt_rsc_0_2_AWQOS;
  input [2:0] xt_rsc_0_2_AWPROT;
  input [3:0] xt_rsc_0_2_AWCACHE;
  input xt_rsc_0_2_AWLOCK;
  input [1:0] xt_rsc_0_2_AWBURST;
  input [2:0] xt_rsc_0_2_AWSIZE;
  input [7:0] xt_rsc_0_2_AWLEN;
  input [11:0] xt_rsc_0_2_AWADDR;
  input xt_rsc_0_2_AWID;
  input core_wen;
  input xt_rsc_0_2_i_oswt;
  output xt_rsc_0_2_i_wen_comp;
  input xt_rsc_0_2_i_oswt_1;
  output xt_rsc_0_2_i_wen_comp_1;
  input [3:0] xt_rsc_0_2_i_s_raddr_core;
  input [3:0] xt_rsc_0_2_i_s_waddr_core;
  output [31:0] xt_rsc_0_2_i_s_din_mxwt;
  input [31:0] xt_rsc_0_2_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_2_i_biwt;
  wire xt_rsc_0_2_i_bdwt;
  wire xt_rsc_0_2_i_bcwt;
  wire xt_rsc_0_2_i_s_re_core_sct;
  wire xt_rsc_0_2_i_biwt_1;
  wire xt_rsc_0_2_i_bdwt_2;
  wire xt_rsc_0_2_i_bcwt_1;
  wire xt_rsc_0_2_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_2_i_s_raddr;
  wire [3:0] xt_rsc_0_2_i_s_waddr;
  wire [31:0] xt_rsc_0_2_i_s_din;
  wire [31:0] xt_rsc_0_2_i_s_dout;
  wire xt_rsc_0_2_i_s_rrdy;
  wire xt_rsc_0_2_i_s_wrdy;
  wire xt_rsc_0_2_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_2_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_2_AWID),
      .AWADDR(xt_rsc_0_2_AWADDR),
      .AWLEN(xt_rsc_0_2_AWLEN),
      .AWSIZE(xt_rsc_0_2_AWSIZE),
      .AWBURST(xt_rsc_0_2_AWBURST),
      .AWLOCK(xt_rsc_0_2_AWLOCK),
      .AWCACHE(xt_rsc_0_2_AWCACHE),
      .AWPROT(xt_rsc_0_2_AWPROT),
      .AWQOS(xt_rsc_0_2_AWQOS),
      .AWREGION(xt_rsc_0_2_AWREGION),
      .AWUSER(xt_rsc_0_2_AWUSER),
      .AWVALID(xt_rsc_0_2_AWVALID),
      .AWREADY(xt_rsc_0_2_AWREADY),
      .WDATA(xt_rsc_0_2_WDATA),
      .WSTRB(xt_rsc_0_2_WSTRB),
      .WLAST(xt_rsc_0_2_WLAST),
      .WUSER(xt_rsc_0_2_WUSER),
      .WVALID(xt_rsc_0_2_WVALID),
      .WREADY(xt_rsc_0_2_WREADY),
      .BID(xt_rsc_0_2_BID),
      .BRESP(xt_rsc_0_2_BRESP),
      .BUSER(xt_rsc_0_2_BUSER),
      .BVALID(xt_rsc_0_2_BVALID),
      .BREADY(xt_rsc_0_2_BREADY),
      .ARID(xt_rsc_0_2_ARID),
      .ARADDR(xt_rsc_0_2_ARADDR),
      .ARLEN(xt_rsc_0_2_ARLEN),
      .ARSIZE(xt_rsc_0_2_ARSIZE),
      .ARBURST(xt_rsc_0_2_ARBURST),
      .ARLOCK(xt_rsc_0_2_ARLOCK),
      .ARCACHE(xt_rsc_0_2_ARCACHE),
      .ARPROT(xt_rsc_0_2_ARPROT),
      .ARQOS(xt_rsc_0_2_ARQOS),
      .ARREGION(xt_rsc_0_2_ARREGION),
      .ARUSER(xt_rsc_0_2_ARUSER),
      .ARVALID(xt_rsc_0_2_ARVALID),
      .ARREADY(xt_rsc_0_2_ARREADY),
      .RID(xt_rsc_0_2_RID),
      .RDATA(xt_rsc_0_2_RDATA),
      .RRESP(xt_rsc_0_2_RRESP),
      .RLAST(xt_rsc_0_2_RLAST),
      .RUSER(xt_rsc_0_2_RUSER),
      .RVALID(xt_rsc_0_2_RVALID),
      .RREADY(xt_rsc_0_2_RREADY),
      .s_re(xt_rsc_0_2_i_s_re_core_sct),
      .s_we(xt_rsc_0_2_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_2_i_s_raddr),
      .s_waddr(xt_rsc_0_2_i_s_waddr),
      .s_din(xt_rsc_0_2_i_s_din),
      .s_dout(xt_rsc_0_2_i_s_dout),
      .s_rrdy(xt_rsc_0_2_i_s_rrdy),
      .s_wrdy(xt_rsc_0_2_i_s_wrdy),
      .is_idle(xt_rsc_0_2_is_idle_1),
      .tr_write_done(xt_rsc_0_2_tr_write_done),
      .s_tdone(xt_rsc_0_2_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_2_i_xt_rsc_0_2_wait_ctrl peaseNTT_core_xt_rsc_0_2_i_xt_rsc_0_2_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_2_i_oswt(xt_rsc_0_2_i_oswt),
      .xt_rsc_0_2_i_oswt_1(xt_rsc_0_2_i_oswt_1),
      .xt_rsc_0_2_i_biwt(xt_rsc_0_2_i_biwt),
      .xt_rsc_0_2_i_bdwt(xt_rsc_0_2_i_bdwt),
      .xt_rsc_0_2_i_bcwt(xt_rsc_0_2_i_bcwt),
      .xt_rsc_0_2_i_s_re_core_sct(xt_rsc_0_2_i_s_re_core_sct),
      .xt_rsc_0_2_i_biwt_1(xt_rsc_0_2_i_biwt_1),
      .xt_rsc_0_2_i_bdwt_2(xt_rsc_0_2_i_bdwt_2),
      .xt_rsc_0_2_i_bcwt_1(xt_rsc_0_2_i_bcwt_1),
      .xt_rsc_0_2_i_s_we_core_sct(xt_rsc_0_2_i_s_we_core_sct),
      .xt_rsc_0_2_i_s_rrdy(xt_rsc_0_2_i_s_rrdy),
      .xt_rsc_0_2_i_s_wrdy(xt_rsc_0_2_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_2_i_xt_rsc_0_2_wait_dp peaseNTT_core_xt_rsc_0_2_i_xt_rsc_0_2_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_2_i_oswt(xt_rsc_0_2_i_oswt),
      .xt_rsc_0_2_i_wen_comp(xt_rsc_0_2_i_wen_comp),
      .xt_rsc_0_2_i_oswt_1(xt_rsc_0_2_i_oswt_1),
      .xt_rsc_0_2_i_wen_comp_1(xt_rsc_0_2_i_wen_comp_1),
      .xt_rsc_0_2_i_s_raddr_core(xt_rsc_0_2_i_s_raddr_core),
      .xt_rsc_0_2_i_s_waddr_core(xt_rsc_0_2_i_s_waddr_core),
      .xt_rsc_0_2_i_s_din_mxwt(xt_rsc_0_2_i_s_din_mxwt),
      .xt_rsc_0_2_i_s_dout_core(xt_rsc_0_2_i_s_dout_core),
      .xt_rsc_0_2_i_biwt(xt_rsc_0_2_i_biwt),
      .xt_rsc_0_2_i_bdwt(xt_rsc_0_2_i_bdwt),
      .xt_rsc_0_2_i_bcwt(xt_rsc_0_2_i_bcwt),
      .xt_rsc_0_2_i_biwt_1(xt_rsc_0_2_i_biwt_1),
      .xt_rsc_0_2_i_bdwt_2(xt_rsc_0_2_i_bdwt_2),
      .xt_rsc_0_2_i_bcwt_1(xt_rsc_0_2_i_bcwt_1),
      .xt_rsc_0_2_i_s_raddr(xt_rsc_0_2_i_s_raddr),
      .xt_rsc_0_2_i_s_raddr_core_sct(xt_rsc_0_2_i_s_re_core_sct),
      .xt_rsc_0_2_i_s_waddr(xt_rsc_0_2_i_s_waddr),
      .xt_rsc_0_2_i_s_waddr_core_sct(xt_rsc_0_2_i_s_we_core_sct),
      .xt_rsc_0_2_i_s_din(xt_rsc_0_2_i_s_din),
      .xt_rsc_0_2_i_s_dout(xt_rsc_0_2_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_1_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_1_i (
  clk, rst, xt_rsc_0_1_s_tdone, xt_rsc_0_1_tr_write_done, xt_rsc_0_1_RREADY, xt_rsc_0_1_RVALID,
      xt_rsc_0_1_RUSER, xt_rsc_0_1_RLAST, xt_rsc_0_1_RRESP, xt_rsc_0_1_RDATA, xt_rsc_0_1_RID,
      xt_rsc_0_1_ARREADY, xt_rsc_0_1_ARVALID, xt_rsc_0_1_ARUSER, xt_rsc_0_1_ARREGION,
      xt_rsc_0_1_ARQOS, xt_rsc_0_1_ARPROT, xt_rsc_0_1_ARCACHE, xt_rsc_0_1_ARLOCK,
      xt_rsc_0_1_ARBURST, xt_rsc_0_1_ARSIZE, xt_rsc_0_1_ARLEN, xt_rsc_0_1_ARADDR,
      xt_rsc_0_1_ARID, xt_rsc_0_1_BREADY, xt_rsc_0_1_BVALID, xt_rsc_0_1_BUSER, xt_rsc_0_1_BRESP,
      xt_rsc_0_1_BID, xt_rsc_0_1_WREADY, xt_rsc_0_1_WVALID, xt_rsc_0_1_WUSER, xt_rsc_0_1_WLAST,
      xt_rsc_0_1_WSTRB, xt_rsc_0_1_WDATA, xt_rsc_0_1_AWREADY, xt_rsc_0_1_AWVALID,
      xt_rsc_0_1_AWUSER, xt_rsc_0_1_AWREGION, xt_rsc_0_1_AWQOS, xt_rsc_0_1_AWPROT,
      xt_rsc_0_1_AWCACHE, xt_rsc_0_1_AWLOCK, xt_rsc_0_1_AWBURST, xt_rsc_0_1_AWSIZE,
      xt_rsc_0_1_AWLEN, xt_rsc_0_1_AWADDR, xt_rsc_0_1_AWID, core_wen, xt_rsc_0_1_i_oswt,
      xt_rsc_0_1_i_wen_comp, xt_rsc_0_1_i_oswt_1, xt_rsc_0_1_i_wen_comp_1, xt_rsc_0_1_i_s_raddr_core,
      xt_rsc_0_1_i_s_waddr_core, xt_rsc_0_1_i_s_din_mxwt, xt_rsc_0_1_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_1_s_tdone;
  input xt_rsc_0_1_tr_write_done;
  input xt_rsc_0_1_RREADY;
  output xt_rsc_0_1_RVALID;
  output xt_rsc_0_1_RUSER;
  output xt_rsc_0_1_RLAST;
  output [1:0] xt_rsc_0_1_RRESP;
  output [31:0] xt_rsc_0_1_RDATA;
  output xt_rsc_0_1_RID;
  output xt_rsc_0_1_ARREADY;
  input xt_rsc_0_1_ARVALID;
  input xt_rsc_0_1_ARUSER;
  input [3:0] xt_rsc_0_1_ARREGION;
  input [3:0] xt_rsc_0_1_ARQOS;
  input [2:0] xt_rsc_0_1_ARPROT;
  input [3:0] xt_rsc_0_1_ARCACHE;
  input xt_rsc_0_1_ARLOCK;
  input [1:0] xt_rsc_0_1_ARBURST;
  input [2:0] xt_rsc_0_1_ARSIZE;
  input [7:0] xt_rsc_0_1_ARLEN;
  input [11:0] xt_rsc_0_1_ARADDR;
  input xt_rsc_0_1_ARID;
  input xt_rsc_0_1_BREADY;
  output xt_rsc_0_1_BVALID;
  output xt_rsc_0_1_BUSER;
  output [1:0] xt_rsc_0_1_BRESP;
  output xt_rsc_0_1_BID;
  output xt_rsc_0_1_WREADY;
  input xt_rsc_0_1_WVALID;
  input xt_rsc_0_1_WUSER;
  input xt_rsc_0_1_WLAST;
  input [3:0] xt_rsc_0_1_WSTRB;
  input [31:0] xt_rsc_0_1_WDATA;
  output xt_rsc_0_1_AWREADY;
  input xt_rsc_0_1_AWVALID;
  input xt_rsc_0_1_AWUSER;
  input [3:0] xt_rsc_0_1_AWREGION;
  input [3:0] xt_rsc_0_1_AWQOS;
  input [2:0] xt_rsc_0_1_AWPROT;
  input [3:0] xt_rsc_0_1_AWCACHE;
  input xt_rsc_0_1_AWLOCK;
  input [1:0] xt_rsc_0_1_AWBURST;
  input [2:0] xt_rsc_0_1_AWSIZE;
  input [7:0] xt_rsc_0_1_AWLEN;
  input [11:0] xt_rsc_0_1_AWADDR;
  input xt_rsc_0_1_AWID;
  input core_wen;
  input xt_rsc_0_1_i_oswt;
  output xt_rsc_0_1_i_wen_comp;
  input xt_rsc_0_1_i_oswt_1;
  output xt_rsc_0_1_i_wen_comp_1;
  input [3:0] xt_rsc_0_1_i_s_raddr_core;
  input [3:0] xt_rsc_0_1_i_s_waddr_core;
  output [31:0] xt_rsc_0_1_i_s_din_mxwt;
  input [31:0] xt_rsc_0_1_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_1_i_biwt;
  wire xt_rsc_0_1_i_bdwt;
  wire xt_rsc_0_1_i_bcwt;
  wire xt_rsc_0_1_i_s_re_core_sct;
  wire xt_rsc_0_1_i_biwt_1;
  wire xt_rsc_0_1_i_bdwt_2;
  wire xt_rsc_0_1_i_bcwt_1;
  wire xt_rsc_0_1_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_1_i_s_raddr;
  wire [3:0] xt_rsc_0_1_i_s_waddr;
  wire [31:0] xt_rsc_0_1_i_s_din;
  wire [31:0] xt_rsc_0_1_i_s_dout;
  wire xt_rsc_0_1_i_s_rrdy;
  wire xt_rsc_0_1_i_s_wrdy;
  wire xt_rsc_0_1_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_1_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_1_AWID),
      .AWADDR(xt_rsc_0_1_AWADDR),
      .AWLEN(xt_rsc_0_1_AWLEN),
      .AWSIZE(xt_rsc_0_1_AWSIZE),
      .AWBURST(xt_rsc_0_1_AWBURST),
      .AWLOCK(xt_rsc_0_1_AWLOCK),
      .AWCACHE(xt_rsc_0_1_AWCACHE),
      .AWPROT(xt_rsc_0_1_AWPROT),
      .AWQOS(xt_rsc_0_1_AWQOS),
      .AWREGION(xt_rsc_0_1_AWREGION),
      .AWUSER(xt_rsc_0_1_AWUSER),
      .AWVALID(xt_rsc_0_1_AWVALID),
      .AWREADY(xt_rsc_0_1_AWREADY),
      .WDATA(xt_rsc_0_1_WDATA),
      .WSTRB(xt_rsc_0_1_WSTRB),
      .WLAST(xt_rsc_0_1_WLAST),
      .WUSER(xt_rsc_0_1_WUSER),
      .WVALID(xt_rsc_0_1_WVALID),
      .WREADY(xt_rsc_0_1_WREADY),
      .BID(xt_rsc_0_1_BID),
      .BRESP(xt_rsc_0_1_BRESP),
      .BUSER(xt_rsc_0_1_BUSER),
      .BVALID(xt_rsc_0_1_BVALID),
      .BREADY(xt_rsc_0_1_BREADY),
      .ARID(xt_rsc_0_1_ARID),
      .ARADDR(xt_rsc_0_1_ARADDR),
      .ARLEN(xt_rsc_0_1_ARLEN),
      .ARSIZE(xt_rsc_0_1_ARSIZE),
      .ARBURST(xt_rsc_0_1_ARBURST),
      .ARLOCK(xt_rsc_0_1_ARLOCK),
      .ARCACHE(xt_rsc_0_1_ARCACHE),
      .ARPROT(xt_rsc_0_1_ARPROT),
      .ARQOS(xt_rsc_0_1_ARQOS),
      .ARREGION(xt_rsc_0_1_ARREGION),
      .ARUSER(xt_rsc_0_1_ARUSER),
      .ARVALID(xt_rsc_0_1_ARVALID),
      .ARREADY(xt_rsc_0_1_ARREADY),
      .RID(xt_rsc_0_1_RID),
      .RDATA(xt_rsc_0_1_RDATA),
      .RRESP(xt_rsc_0_1_RRESP),
      .RLAST(xt_rsc_0_1_RLAST),
      .RUSER(xt_rsc_0_1_RUSER),
      .RVALID(xt_rsc_0_1_RVALID),
      .RREADY(xt_rsc_0_1_RREADY),
      .s_re(xt_rsc_0_1_i_s_re_core_sct),
      .s_we(xt_rsc_0_1_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_1_i_s_raddr),
      .s_waddr(xt_rsc_0_1_i_s_waddr),
      .s_din(xt_rsc_0_1_i_s_din),
      .s_dout(xt_rsc_0_1_i_s_dout),
      .s_rrdy(xt_rsc_0_1_i_s_rrdy),
      .s_wrdy(xt_rsc_0_1_i_s_wrdy),
      .is_idle(xt_rsc_0_1_is_idle_1),
      .tr_write_done(xt_rsc_0_1_tr_write_done),
      .s_tdone(xt_rsc_0_1_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_1_i_xt_rsc_0_1_wait_ctrl peaseNTT_core_xt_rsc_0_1_i_xt_rsc_0_1_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_1_i_oswt(xt_rsc_0_1_i_oswt),
      .xt_rsc_0_1_i_oswt_1(xt_rsc_0_1_i_oswt_1),
      .xt_rsc_0_1_i_biwt(xt_rsc_0_1_i_biwt),
      .xt_rsc_0_1_i_bdwt(xt_rsc_0_1_i_bdwt),
      .xt_rsc_0_1_i_bcwt(xt_rsc_0_1_i_bcwt),
      .xt_rsc_0_1_i_s_re_core_sct(xt_rsc_0_1_i_s_re_core_sct),
      .xt_rsc_0_1_i_biwt_1(xt_rsc_0_1_i_biwt_1),
      .xt_rsc_0_1_i_bdwt_2(xt_rsc_0_1_i_bdwt_2),
      .xt_rsc_0_1_i_bcwt_1(xt_rsc_0_1_i_bcwt_1),
      .xt_rsc_0_1_i_s_we_core_sct(xt_rsc_0_1_i_s_we_core_sct),
      .xt_rsc_0_1_i_s_rrdy(xt_rsc_0_1_i_s_rrdy),
      .xt_rsc_0_1_i_s_wrdy(xt_rsc_0_1_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_1_i_xt_rsc_0_1_wait_dp peaseNTT_core_xt_rsc_0_1_i_xt_rsc_0_1_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_1_i_oswt(xt_rsc_0_1_i_oswt),
      .xt_rsc_0_1_i_wen_comp(xt_rsc_0_1_i_wen_comp),
      .xt_rsc_0_1_i_oswt_1(xt_rsc_0_1_i_oswt_1),
      .xt_rsc_0_1_i_wen_comp_1(xt_rsc_0_1_i_wen_comp_1),
      .xt_rsc_0_1_i_s_raddr_core(xt_rsc_0_1_i_s_raddr_core),
      .xt_rsc_0_1_i_s_waddr_core(xt_rsc_0_1_i_s_waddr_core),
      .xt_rsc_0_1_i_s_din_mxwt(xt_rsc_0_1_i_s_din_mxwt),
      .xt_rsc_0_1_i_s_dout_core(xt_rsc_0_1_i_s_dout_core),
      .xt_rsc_0_1_i_biwt(xt_rsc_0_1_i_biwt),
      .xt_rsc_0_1_i_bdwt(xt_rsc_0_1_i_bdwt),
      .xt_rsc_0_1_i_bcwt(xt_rsc_0_1_i_bcwt),
      .xt_rsc_0_1_i_biwt_1(xt_rsc_0_1_i_biwt_1),
      .xt_rsc_0_1_i_bdwt_2(xt_rsc_0_1_i_bdwt_2),
      .xt_rsc_0_1_i_bcwt_1(xt_rsc_0_1_i_bcwt_1),
      .xt_rsc_0_1_i_s_raddr(xt_rsc_0_1_i_s_raddr),
      .xt_rsc_0_1_i_s_raddr_core_sct(xt_rsc_0_1_i_s_re_core_sct),
      .xt_rsc_0_1_i_s_waddr(xt_rsc_0_1_i_s_waddr),
      .xt_rsc_0_1_i_s_waddr_core_sct(xt_rsc_0_1_i_s_we_core_sct),
      .xt_rsc_0_1_i_s_din(xt_rsc_0_1_i_s_din),
      .xt_rsc_0_1_i_s_dout(xt_rsc_0_1_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core_xt_rsc_0_0_i
// ------------------------------------------------------------------


module peaseNTT_core_xt_rsc_0_0_i (
  clk, rst, xt_rsc_0_0_s_tdone, xt_rsc_0_0_tr_write_done, xt_rsc_0_0_RREADY, xt_rsc_0_0_RVALID,
      xt_rsc_0_0_RUSER, xt_rsc_0_0_RLAST, xt_rsc_0_0_RRESP, xt_rsc_0_0_RDATA, xt_rsc_0_0_RID,
      xt_rsc_0_0_ARREADY, xt_rsc_0_0_ARVALID, xt_rsc_0_0_ARUSER, xt_rsc_0_0_ARREGION,
      xt_rsc_0_0_ARQOS, xt_rsc_0_0_ARPROT, xt_rsc_0_0_ARCACHE, xt_rsc_0_0_ARLOCK,
      xt_rsc_0_0_ARBURST, xt_rsc_0_0_ARSIZE, xt_rsc_0_0_ARLEN, xt_rsc_0_0_ARADDR,
      xt_rsc_0_0_ARID, xt_rsc_0_0_BREADY, xt_rsc_0_0_BVALID, xt_rsc_0_0_BUSER, xt_rsc_0_0_BRESP,
      xt_rsc_0_0_BID, xt_rsc_0_0_WREADY, xt_rsc_0_0_WVALID, xt_rsc_0_0_WUSER, xt_rsc_0_0_WLAST,
      xt_rsc_0_0_WSTRB, xt_rsc_0_0_WDATA, xt_rsc_0_0_AWREADY, xt_rsc_0_0_AWVALID,
      xt_rsc_0_0_AWUSER, xt_rsc_0_0_AWREGION, xt_rsc_0_0_AWQOS, xt_rsc_0_0_AWPROT,
      xt_rsc_0_0_AWCACHE, xt_rsc_0_0_AWLOCK, xt_rsc_0_0_AWBURST, xt_rsc_0_0_AWSIZE,
      xt_rsc_0_0_AWLEN, xt_rsc_0_0_AWADDR, xt_rsc_0_0_AWID, core_wen, xt_rsc_0_0_i_oswt,
      xt_rsc_0_0_i_wen_comp, xt_rsc_0_0_i_oswt_1, xt_rsc_0_0_i_wen_comp_1, xt_rsc_0_0_i_s_raddr_core,
      xt_rsc_0_0_i_s_waddr_core, xt_rsc_0_0_i_s_din_mxwt, xt_rsc_0_0_i_s_dout_core
);
  input clk;
  input rst;
  input xt_rsc_0_0_s_tdone;
  input xt_rsc_0_0_tr_write_done;
  input xt_rsc_0_0_RREADY;
  output xt_rsc_0_0_RVALID;
  output xt_rsc_0_0_RUSER;
  output xt_rsc_0_0_RLAST;
  output [1:0] xt_rsc_0_0_RRESP;
  output [31:0] xt_rsc_0_0_RDATA;
  output xt_rsc_0_0_RID;
  output xt_rsc_0_0_ARREADY;
  input xt_rsc_0_0_ARVALID;
  input xt_rsc_0_0_ARUSER;
  input [3:0] xt_rsc_0_0_ARREGION;
  input [3:0] xt_rsc_0_0_ARQOS;
  input [2:0] xt_rsc_0_0_ARPROT;
  input [3:0] xt_rsc_0_0_ARCACHE;
  input xt_rsc_0_0_ARLOCK;
  input [1:0] xt_rsc_0_0_ARBURST;
  input [2:0] xt_rsc_0_0_ARSIZE;
  input [7:0] xt_rsc_0_0_ARLEN;
  input [11:0] xt_rsc_0_0_ARADDR;
  input xt_rsc_0_0_ARID;
  input xt_rsc_0_0_BREADY;
  output xt_rsc_0_0_BVALID;
  output xt_rsc_0_0_BUSER;
  output [1:0] xt_rsc_0_0_BRESP;
  output xt_rsc_0_0_BID;
  output xt_rsc_0_0_WREADY;
  input xt_rsc_0_0_WVALID;
  input xt_rsc_0_0_WUSER;
  input xt_rsc_0_0_WLAST;
  input [3:0] xt_rsc_0_0_WSTRB;
  input [31:0] xt_rsc_0_0_WDATA;
  output xt_rsc_0_0_AWREADY;
  input xt_rsc_0_0_AWVALID;
  input xt_rsc_0_0_AWUSER;
  input [3:0] xt_rsc_0_0_AWREGION;
  input [3:0] xt_rsc_0_0_AWQOS;
  input [2:0] xt_rsc_0_0_AWPROT;
  input [3:0] xt_rsc_0_0_AWCACHE;
  input xt_rsc_0_0_AWLOCK;
  input [1:0] xt_rsc_0_0_AWBURST;
  input [2:0] xt_rsc_0_0_AWSIZE;
  input [7:0] xt_rsc_0_0_AWLEN;
  input [11:0] xt_rsc_0_0_AWADDR;
  input xt_rsc_0_0_AWID;
  input core_wen;
  input xt_rsc_0_0_i_oswt;
  output xt_rsc_0_0_i_wen_comp;
  input xt_rsc_0_0_i_oswt_1;
  output xt_rsc_0_0_i_wen_comp_1;
  input [3:0] xt_rsc_0_0_i_s_raddr_core;
  input [3:0] xt_rsc_0_0_i_s_waddr_core;
  output [31:0] xt_rsc_0_0_i_s_din_mxwt;
  input [31:0] xt_rsc_0_0_i_s_dout_core;


  // Interconnect Declarations
  wire xt_rsc_0_0_i_biwt;
  wire xt_rsc_0_0_i_bdwt;
  wire xt_rsc_0_0_i_bcwt;
  wire xt_rsc_0_0_i_s_re_core_sct;
  wire xt_rsc_0_0_i_biwt_1;
  wire xt_rsc_0_0_i_bdwt_2;
  wire xt_rsc_0_0_i_bcwt_1;
  wire xt_rsc_0_0_i_s_we_core_sct;
  wire [3:0] xt_rsc_0_0_i_s_raddr;
  wire [3:0] xt_rsc_0_0_i_s_waddr;
  wire [31:0] xt_rsc_0_0_i_s_din;
  wire [31:0] xt_rsc_0_0_i_s_dout;
  wire xt_rsc_0_0_i_s_rrdy;
  wire xt_rsc_0_0_i_s_wrdy;
  wire xt_rsc_0_0_is_idle_1;


  // Interconnect Declarations for Component Instantiations 
  ccs_axi4_slave_mem #(.rscid(32'sd0),
  .depth(32'sd16),
  .op_width(32'sd32),
  .cwidth(32'sd32),
  .addr_w(32'sd4),
  .nopreload(32'sd0),
  .rst_ph(32'sd0),
  .ADDR_WIDTH(32'sd12),
  .DATA_WIDTH(32'sd32),
  .ID_WIDTH(32'sd1),
  .USER_WIDTH(32'sd1),
  .REGION_MAP_SIZE(32'sd1),
  .wBASE_ADDRESS(32'sd0),
  .rBASE_ADDRESS(32'sd0)) xt_rsc_0_0_i (
      .ACLK(clk),
      .ARESETn(1'b1),
      .AWID(xt_rsc_0_0_AWID),
      .AWADDR(xt_rsc_0_0_AWADDR),
      .AWLEN(xt_rsc_0_0_AWLEN),
      .AWSIZE(xt_rsc_0_0_AWSIZE),
      .AWBURST(xt_rsc_0_0_AWBURST),
      .AWLOCK(xt_rsc_0_0_AWLOCK),
      .AWCACHE(xt_rsc_0_0_AWCACHE),
      .AWPROT(xt_rsc_0_0_AWPROT),
      .AWQOS(xt_rsc_0_0_AWQOS),
      .AWREGION(xt_rsc_0_0_AWREGION),
      .AWUSER(xt_rsc_0_0_AWUSER),
      .AWVALID(xt_rsc_0_0_AWVALID),
      .AWREADY(xt_rsc_0_0_AWREADY),
      .WDATA(xt_rsc_0_0_WDATA),
      .WSTRB(xt_rsc_0_0_WSTRB),
      .WLAST(xt_rsc_0_0_WLAST),
      .WUSER(xt_rsc_0_0_WUSER),
      .WVALID(xt_rsc_0_0_WVALID),
      .WREADY(xt_rsc_0_0_WREADY),
      .BID(xt_rsc_0_0_BID),
      .BRESP(xt_rsc_0_0_BRESP),
      .BUSER(xt_rsc_0_0_BUSER),
      .BVALID(xt_rsc_0_0_BVALID),
      .BREADY(xt_rsc_0_0_BREADY),
      .ARID(xt_rsc_0_0_ARID),
      .ARADDR(xt_rsc_0_0_ARADDR),
      .ARLEN(xt_rsc_0_0_ARLEN),
      .ARSIZE(xt_rsc_0_0_ARSIZE),
      .ARBURST(xt_rsc_0_0_ARBURST),
      .ARLOCK(xt_rsc_0_0_ARLOCK),
      .ARCACHE(xt_rsc_0_0_ARCACHE),
      .ARPROT(xt_rsc_0_0_ARPROT),
      .ARQOS(xt_rsc_0_0_ARQOS),
      .ARREGION(xt_rsc_0_0_ARREGION),
      .ARUSER(xt_rsc_0_0_ARUSER),
      .ARVALID(xt_rsc_0_0_ARVALID),
      .ARREADY(xt_rsc_0_0_ARREADY),
      .RID(xt_rsc_0_0_RID),
      .RDATA(xt_rsc_0_0_RDATA),
      .RRESP(xt_rsc_0_0_RRESP),
      .RLAST(xt_rsc_0_0_RLAST),
      .RUSER(xt_rsc_0_0_RUSER),
      .RVALID(xt_rsc_0_0_RVALID),
      .RREADY(xt_rsc_0_0_RREADY),
      .s_re(xt_rsc_0_0_i_s_re_core_sct),
      .s_we(xt_rsc_0_0_i_s_we_core_sct),
      .s_raddr(xt_rsc_0_0_i_s_raddr),
      .s_waddr(xt_rsc_0_0_i_s_waddr),
      .s_din(xt_rsc_0_0_i_s_din),
      .s_dout(xt_rsc_0_0_i_s_dout),
      .s_rrdy(xt_rsc_0_0_i_s_rrdy),
      .s_wrdy(xt_rsc_0_0_i_s_wrdy),
      .is_idle(xt_rsc_0_0_is_idle_1),
      .tr_write_done(xt_rsc_0_0_tr_write_done),
      .s_tdone(xt_rsc_0_0_s_tdone)
    );
  peaseNTT_core_xt_rsc_0_0_i_xt_rsc_0_0_wait_ctrl peaseNTT_core_xt_rsc_0_0_i_xt_rsc_0_0_wait_ctrl_inst
      (
      .core_wen(core_wen),
      .xt_rsc_0_0_i_oswt(xt_rsc_0_0_i_oswt),
      .xt_rsc_0_0_i_oswt_1(xt_rsc_0_0_i_oswt_1),
      .xt_rsc_0_0_i_biwt(xt_rsc_0_0_i_biwt),
      .xt_rsc_0_0_i_bdwt(xt_rsc_0_0_i_bdwt),
      .xt_rsc_0_0_i_bcwt(xt_rsc_0_0_i_bcwt),
      .xt_rsc_0_0_i_s_re_core_sct(xt_rsc_0_0_i_s_re_core_sct),
      .xt_rsc_0_0_i_biwt_1(xt_rsc_0_0_i_biwt_1),
      .xt_rsc_0_0_i_bdwt_2(xt_rsc_0_0_i_bdwt_2),
      .xt_rsc_0_0_i_bcwt_1(xt_rsc_0_0_i_bcwt_1),
      .xt_rsc_0_0_i_s_we_core_sct(xt_rsc_0_0_i_s_we_core_sct),
      .xt_rsc_0_0_i_s_rrdy(xt_rsc_0_0_i_s_rrdy),
      .xt_rsc_0_0_i_s_wrdy(xt_rsc_0_0_i_s_wrdy)
    );
  peaseNTT_core_xt_rsc_0_0_i_xt_rsc_0_0_wait_dp peaseNTT_core_xt_rsc_0_0_i_xt_rsc_0_0_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_0_i_oswt(xt_rsc_0_0_i_oswt),
      .xt_rsc_0_0_i_wen_comp(xt_rsc_0_0_i_wen_comp),
      .xt_rsc_0_0_i_oswt_1(xt_rsc_0_0_i_oswt_1),
      .xt_rsc_0_0_i_wen_comp_1(xt_rsc_0_0_i_wen_comp_1),
      .xt_rsc_0_0_i_s_raddr_core(xt_rsc_0_0_i_s_raddr_core),
      .xt_rsc_0_0_i_s_waddr_core(xt_rsc_0_0_i_s_waddr_core),
      .xt_rsc_0_0_i_s_din_mxwt(xt_rsc_0_0_i_s_din_mxwt),
      .xt_rsc_0_0_i_s_dout_core(xt_rsc_0_0_i_s_dout_core),
      .xt_rsc_0_0_i_biwt(xt_rsc_0_0_i_biwt),
      .xt_rsc_0_0_i_bdwt(xt_rsc_0_0_i_bdwt),
      .xt_rsc_0_0_i_bcwt(xt_rsc_0_0_i_bcwt),
      .xt_rsc_0_0_i_biwt_1(xt_rsc_0_0_i_biwt_1),
      .xt_rsc_0_0_i_bdwt_2(xt_rsc_0_0_i_bdwt_2),
      .xt_rsc_0_0_i_bcwt_1(xt_rsc_0_0_i_bcwt_1),
      .xt_rsc_0_0_i_s_raddr(xt_rsc_0_0_i_s_raddr),
      .xt_rsc_0_0_i_s_raddr_core_sct(xt_rsc_0_0_i_s_re_core_sct),
      .xt_rsc_0_0_i_s_waddr(xt_rsc_0_0_i_s_waddr),
      .xt_rsc_0_0_i_s_waddr_core_sct(xt_rsc_0_0_i_s_we_core_sct),
      .xt_rsc_0_0_i_s_din(xt_rsc_0_0_i_s_din),
      .xt_rsc_0_0_i_s_dout(xt_rsc_0_0_i_s_dout)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT_core
// ------------------------------------------------------------------


module peaseNTT_core (
  clk, rst, xt_rsc_0_0_s_tdone, xt_rsc_0_0_tr_write_done, xt_rsc_0_0_RREADY, xt_rsc_0_0_RVALID,
      xt_rsc_0_0_RUSER, xt_rsc_0_0_RLAST, xt_rsc_0_0_RRESP, xt_rsc_0_0_RDATA, xt_rsc_0_0_RID,
      xt_rsc_0_0_ARREADY, xt_rsc_0_0_ARVALID, xt_rsc_0_0_ARUSER, xt_rsc_0_0_ARREGION,
      xt_rsc_0_0_ARQOS, xt_rsc_0_0_ARPROT, xt_rsc_0_0_ARCACHE, xt_rsc_0_0_ARLOCK,
      xt_rsc_0_0_ARBURST, xt_rsc_0_0_ARSIZE, xt_rsc_0_0_ARLEN, xt_rsc_0_0_ARADDR,
      xt_rsc_0_0_ARID, xt_rsc_0_0_BREADY, xt_rsc_0_0_BVALID, xt_rsc_0_0_BUSER, xt_rsc_0_0_BRESP,
      xt_rsc_0_0_BID, xt_rsc_0_0_WREADY, xt_rsc_0_0_WVALID, xt_rsc_0_0_WUSER, xt_rsc_0_0_WLAST,
      xt_rsc_0_0_WSTRB, xt_rsc_0_0_WDATA, xt_rsc_0_0_AWREADY, xt_rsc_0_0_AWVALID,
      xt_rsc_0_0_AWUSER, xt_rsc_0_0_AWREGION, xt_rsc_0_0_AWQOS, xt_rsc_0_0_AWPROT,
      xt_rsc_0_0_AWCACHE, xt_rsc_0_0_AWLOCK, xt_rsc_0_0_AWBURST, xt_rsc_0_0_AWSIZE,
      xt_rsc_0_0_AWLEN, xt_rsc_0_0_AWADDR, xt_rsc_0_0_AWID, xt_rsc_triosy_0_0_lz,
      xt_rsc_0_1_s_tdone, xt_rsc_0_1_tr_write_done, xt_rsc_0_1_RREADY, xt_rsc_0_1_RVALID,
      xt_rsc_0_1_RUSER, xt_rsc_0_1_RLAST, xt_rsc_0_1_RRESP, xt_rsc_0_1_RDATA, xt_rsc_0_1_RID,
      xt_rsc_0_1_ARREADY, xt_rsc_0_1_ARVALID, xt_rsc_0_1_ARUSER, xt_rsc_0_1_ARREGION,
      xt_rsc_0_1_ARQOS, xt_rsc_0_1_ARPROT, xt_rsc_0_1_ARCACHE, xt_rsc_0_1_ARLOCK,
      xt_rsc_0_1_ARBURST, xt_rsc_0_1_ARSIZE, xt_rsc_0_1_ARLEN, xt_rsc_0_1_ARADDR,
      xt_rsc_0_1_ARID, xt_rsc_0_1_BREADY, xt_rsc_0_1_BVALID, xt_rsc_0_1_BUSER, xt_rsc_0_1_BRESP,
      xt_rsc_0_1_BID, xt_rsc_0_1_WREADY, xt_rsc_0_1_WVALID, xt_rsc_0_1_WUSER, xt_rsc_0_1_WLAST,
      xt_rsc_0_1_WSTRB, xt_rsc_0_1_WDATA, xt_rsc_0_1_AWREADY, xt_rsc_0_1_AWVALID,
      xt_rsc_0_1_AWUSER, xt_rsc_0_1_AWREGION, xt_rsc_0_1_AWQOS, xt_rsc_0_1_AWPROT,
      xt_rsc_0_1_AWCACHE, xt_rsc_0_1_AWLOCK, xt_rsc_0_1_AWBURST, xt_rsc_0_1_AWSIZE,
      xt_rsc_0_1_AWLEN, xt_rsc_0_1_AWADDR, xt_rsc_0_1_AWID, xt_rsc_triosy_0_1_lz,
      xt_rsc_0_2_s_tdone, xt_rsc_0_2_tr_write_done, xt_rsc_0_2_RREADY, xt_rsc_0_2_RVALID,
      xt_rsc_0_2_RUSER, xt_rsc_0_2_RLAST, xt_rsc_0_2_RRESP, xt_rsc_0_2_RDATA, xt_rsc_0_2_RID,
      xt_rsc_0_2_ARREADY, xt_rsc_0_2_ARVALID, xt_rsc_0_2_ARUSER, xt_rsc_0_2_ARREGION,
      xt_rsc_0_2_ARQOS, xt_rsc_0_2_ARPROT, xt_rsc_0_2_ARCACHE, xt_rsc_0_2_ARLOCK,
      xt_rsc_0_2_ARBURST, xt_rsc_0_2_ARSIZE, xt_rsc_0_2_ARLEN, xt_rsc_0_2_ARADDR,
      xt_rsc_0_2_ARID, xt_rsc_0_2_BREADY, xt_rsc_0_2_BVALID, xt_rsc_0_2_BUSER, xt_rsc_0_2_BRESP,
      xt_rsc_0_2_BID, xt_rsc_0_2_WREADY, xt_rsc_0_2_WVALID, xt_rsc_0_2_WUSER, xt_rsc_0_2_WLAST,
      xt_rsc_0_2_WSTRB, xt_rsc_0_2_WDATA, xt_rsc_0_2_AWREADY, xt_rsc_0_2_AWVALID,
      xt_rsc_0_2_AWUSER, xt_rsc_0_2_AWREGION, xt_rsc_0_2_AWQOS, xt_rsc_0_2_AWPROT,
      xt_rsc_0_2_AWCACHE, xt_rsc_0_2_AWLOCK, xt_rsc_0_2_AWBURST, xt_rsc_0_2_AWSIZE,
      xt_rsc_0_2_AWLEN, xt_rsc_0_2_AWADDR, xt_rsc_0_2_AWID, xt_rsc_triosy_0_2_lz,
      xt_rsc_0_3_s_tdone, xt_rsc_0_3_tr_write_done, xt_rsc_0_3_RREADY, xt_rsc_0_3_RVALID,
      xt_rsc_0_3_RUSER, xt_rsc_0_3_RLAST, xt_rsc_0_3_RRESP, xt_rsc_0_3_RDATA, xt_rsc_0_3_RID,
      xt_rsc_0_3_ARREADY, xt_rsc_0_3_ARVALID, xt_rsc_0_3_ARUSER, xt_rsc_0_3_ARREGION,
      xt_rsc_0_3_ARQOS, xt_rsc_0_3_ARPROT, xt_rsc_0_3_ARCACHE, xt_rsc_0_3_ARLOCK,
      xt_rsc_0_3_ARBURST, xt_rsc_0_3_ARSIZE, xt_rsc_0_3_ARLEN, xt_rsc_0_3_ARADDR,
      xt_rsc_0_3_ARID, xt_rsc_0_3_BREADY, xt_rsc_0_3_BVALID, xt_rsc_0_3_BUSER, xt_rsc_0_3_BRESP,
      xt_rsc_0_3_BID, xt_rsc_0_3_WREADY, xt_rsc_0_3_WVALID, xt_rsc_0_3_WUSER, xt_rsc_0_3_WLAST,
      xt_rsc_0_3_WSTRB, xt_rsc_0_3_WDATA, xt_rsc_0_3_AWREADY, xt_rsc_0_3_AWVALID,
      xt_rsc_0_3_AWUSER, xt_rsc_0_3_AWREGION, xt_rsc_0_3_AWQOS, xt_rsc_0_3_AWPROT,
      xt_rsc_0_3_AWCACHE, xt_rsc_0_3_AWLOCK, xt_rsc_0_3_AWBURST, xt_rsc_0_3_AWSIZE,
      xt_rsc_0_3_AWLEN, xt_rsc_0_3_AWADDR, xt_rsc_0_3_AWID, xt_rsc_triosy_0_3_lz,
      xt_rsc_0_4_s_tdone, xt_rsc_0_4_tr_write_done, xt_rsc_0_4_RREADY, xt_rsc_0_4_RVALID,
      xt_rsc_0_4_RUSER, xt_rsc_0_4_RLAST, xt_rsc_0_4_RRESP, xt_rsc_0_4_RDATA, xt_rsc_0_4_RID,
      xt_rsc_0_4_ARREADY, xt_rsc_0_4_ARVALID, xt_rsc_0_4_ARUSER, xt_rsc_0_4_ARREGION,
      xt_rsc_0_4_ARQOS, xt_rsc_0_4_ARPROT, xt_rsc_0_4_ARCACHE, xt_rsc_0_4_ARLOCK,
      xt_rsc_0_4_ARBURST, xt_rsc_0_4_ARSIZE, xt_rsc_0_4_ARLEN, xt_rsc_0_4_ARADDR,
      xt_rsc_0_4_ARID, xt_rsc_0_4_BREADY, xt_rsc_0_4_BVALID, xt_rsc_0_4_BUSER, xt_rsc_0_4_BRESP,
      xt_rsc_0_4_BID, xt_rsc_0_4_WREADY, xt_rsc_0_4_WVALID, xt_rsc_0_4_WUSER, xt_rsc_0_4_WLAST,
      xt_rsc_0_4_WSTRB, xt_rsc_0_4_WDATA, xt_rsc_0_4_AWREADY, xt_rsc_0_4_AWVALID,
      xt_rsc_0_4_AWUSER, xt_rsc_0_4_AWREGION, xt_rsc_0_4_AWQOS, xt_rsc_0_4_AWPROT,
      xt_rsc_0_4_AWCACHE, xt_rsc_0_4_AWLOCK, xt_rsc_0_4_AWBURST, xt_rsc_0_4_AWSIZE,
      xt_rsc_0_4_AWLEN, xt_rsc_0_4_AWADDR, xt_rsc_0_4_AWID, xt_rsc_triosy_0_4_lz,
      xt_rsc_0_5_s_tdone, xt_rsc_0_5_tr_write_done, xt_rsc_0_5_RREADY, xt_rsc_0_5_RVALID,
      xt_rsc_0_5_RUSER, xt_rsc_0_5_RLAST, xt_rsc_0_5_RRESP, xt_rsc_0_5_RDATA, xt_rsc_0_5_RID,
      xt_rsc_0_5_ARREADY, xt_rsc_0_5_ARVALID, xt_rsc_0_5_ARUSER, xt_rsc_0_5_ARREGION,
      xt_rsc_0_5_ARQOS, xt_rsc_0_5_ARPROT, xt_rsc_0_5_ARCACHE, xt_rsc_0_5_ARLOCK,
      xt_rsc_0_5_ARBURST, xt_rsc_0_5_ARSIZE, xt_rsc_0_5_ARLEN, xt_rsc_0_5_ARADDR,
      xt_rsc_0_5_ARID, xt_rsc_0_5_BREADY, xt_rsc_0_5_BVALID, xt_rsc_0_5_BUSER, xt_rsc_0_5_BRESP,
      xt_rsc_0_5_BID, xt_rsc_0_5_WREADY, xt_rsc_0_5_WVALID, xt_rsc_0_5_WUSER, xt_rsc_0_5_WLAST,
      xt_rsc_0_5_WSTRB, xt_rsc_0_5_WDATA, xt_rsc_0_5_AWREADY, xt_rsc_0_5_AWVALID,
      xt_rsc_0_5_AWUSER, xt_rsc_0_5_AWREGION, xt_rsc_0_5_AWQOS, xt_rsc_0_5_AWPROT,
      xt_rsc_0_5_AWCACHE, xt_rsc_0_5_AWLOCK, xt_rsc_0_5_AWBURST, xt_rsc_0_5_AWSIZE,
      xt_rsc_0_5_AWLEN, xt_rsc_0_5_AWADDR, xt_rsc_0_5_AWID, xt_rsc_triosy_0_5_lz,
      xt_rsc_0_6_s_tdone, xt_rsc_0_6_tr_write_done, xt_rsc_0_6_RREADY, xt_rsc_0_6_RVALID,
      xt_rsc_0_6_RUSER, xt_rsc_0_6_RLAST, xt_rsc_0_6_RRESP, xt_rsc_0_6_RDATA, xt_rsc_0_6_RID,
      xt_rsc_0_6_ARREADY, xt_rsc_0_6_ARVALID, xt_rsc_0_6_ARUSER, xt_rsc_0_6_ARREGION,
      xt_rsc_0_6_ARQOS, xt_rsc_0_6_ARPROT, xt_rsc_0_6_ARCACHE, xt_rsc_0_6_ARLOCK,
      xt_rsc_0_6_ARBURST, xt_rsc_0_6_ARSIZE, xt_rsc_0_6_ARLEN, xt_rsc_0_6_ARADDR,
      xt_rsc_0_6_ARID, xt_rsc_0_6_BREADY, xt_rsc_0_6_BVALID, xt_rsc_0_6_BUSER, xt_rsc_0_6_BRESP,
      xt_rsc_0_6_BID, xt_rsc_0_6_WREADY, xt_rsc_0_6_WVALID, xt_rsc_0_6_WUSER, xt_rsc_0_6_WLAST,
      xt_rsc_0_6_WSTRB, xt_rsc_0_6_WDATA, xt_rsc_0_6_AWREADY, xt_rsc_0_6_AWVALID,
      xt_rsc_0_6_AWUSER, xt_rsc_0_6_AWREGION, xt_rsc_0_6_AWQOS, xt_rsc_0_6_AWPROT,
      xt_rsc_0_6_AWCACHE, xt_rsc_0_6_AWLOCK, xt_rsc_0_6_AWBURST, xt_rsc_0_6_AWSIZE,
      xt_rsc_0_6_AWLEN, xt_rsc_0_6_AWADDR, xt_rsc_0_6_AWID, xt_rsc_triosy_0_6_lz,
      xt_rsc_0_7_s_tdone, xt_rsc_0_7_tr_write_done, xt_rsc_0_7_RREADY, xt_rsc_0_7_RVALID,
      xt_rsc_0_7_RUSER, xt_rsc_0_7_RLAST, xt_rsc_0_7_RRESP, xt_rsc_0_7_RDATA, xt_rsc_0_7_RID,
      xt_rsc_0_7_ARREADY, xt_rsc_0_7_ARVALID, xt_rsc_0_7_ARUSER, xt_rsc_0_7_ARREGION,
      xt_rsc_0_7_ARQOS, xt_rsc_0_7_ARPROT, xt_rsc_0_7_ARCACHE, xt_rsc_0_7_ARLOCK,
      xt_rsc_0_7_ARBURST, xt_rsc_0_7_ARSIZE, xt_rsc_0_7_ARLEN, xt_rsc_0_7_ARADDR,
      xt_rsc_0_7_ARID, xt_rsc_0_7_BREADY, xt_rsc_0_7_BVALID, xt_rsc_0_7_BUSER, xt_rsc_0_7_BRESP,
      xt_rsc_0_7_BID, xt_rsc_0_7_WREADY, xt_rsc_0_7_WVALID, xt_rsc_0_7_WUSER, xt_rsc_0_7_WLAST,
      xt_rsc_0_7_WSTRB, xt_rsc_0_7_WDATA, xt_rsc_0_7_AWREADY, xt_rsc_0_7_AWVALID,
      xt_rsc_0_7_AWUSER, xt_rsc_0_7_AWREGION, xt_rsc_0_7_AWQOS, xt_rsc_0_7_AWPROT,
      xt_rsc_0_7_AWCACHE, xt_rsc_0_7_AWLOCK, xt_rsc_0_7_AWBURST, xt_rsc_0_7_AWSIZE,
      xt_rsc_0_7_AWLEN, xt_rsc_0_7_AWADDR, xt_rsc_0_7_AWID, xt_rsc_triosy_0_7_lz,
      xt_rsc_0_8_s_tdone, xt_rsc_0_8_tr_write_done, xt_rsc_0_8_RREADY, xt_rsc_0_8_RVALID,
      xt_rsc_0_8_RUSER, xt_rsc_0_8_RLAST, xt_rsc_0_8_RRESP, xt_rsc_0_8_RDATA, xt_rsc_0_8_RID,
      xt_rsc_0_8_ARREADY, xt_rsc_0_8_ARVALID, xt_rsc_0_8_ARUSER, xt_rsc_0_8_ARREGION,
      xt_rsc_0_8_ARQOS, xt_rsc_0_8_ARPROT, xt_rsc_0_8_ARCACHE, xt_rsc_0_8_ARLOCK,
      xt_rsc_0_8_ARBURST, xt_rsc_0_8_ARSIZE, xt_rsc_0_8_ARLEN, xt_rsc_0_8_ARADDR,
      xt_rsc_0_8_ARID, xt_rsc_0_8_BREADY, xt_rsc_0_8_BVALID, xt_rsc_0_8_BUSER, xt_rsc_0_8_BRESP,
      xt_rsc_0_8_BID, xt_rsc_0_8_WREADY, xt_rsc_0_8_WVALID, xt_rsc_0_8_WUSER, xt_rsc_0_8_WLAST,
      xt_rsc_0_8_WSTRB, xt_rsc_0_8_WDATA, xt_rsc_0_8_AWREADY, xt_rsc_0_8_AWVALID,
      xt_rsc_0_8_AWUSER, xt_rsc_0_8_AWREGION, xt_rsc_0_8_AWQOS, xt_rsc_0_8_AWPROT,
      xt_rsc_0_8_AWCACHE, xt_rsc_0_8_AWLOCK, xt_rsc_0_8_AWBURST, xt_rsc_0_8_AWSIZE,
      xt_rsc_0_8_AWLEN, xt_rsc_0_8_AWADDR, xt_rsc_0_8_AWID, xt_rsc_triosy_0_8_lz,
      xt_rsc_0_9_s_tdone, xt_rsc_0_9_tr_write_done, xt_rsc_0_9_RREADY, xt_rsc_0_9_RVALID,
      xt_rsc_0_9_RUSER, xt_rsc_0_9_RLAST, xt_rsc_0_9_RRESP, xt_rsc_0_9_RDATA, xt_rsc_0_9_RID,
      xt_rsc_0_9_ARREADY, xt_rsc_0_9_ARVALID, xt_rsc_0_9_ARUSER, xt_rsc_0_9_ARREGION,
      xt_rsc_0_9_ARQOS, xt_rsc_0_9_ARPROT, xt_rsc_0_9_ARCACHE, xt_rsc_0_9_ARLOCK,
      xt_rsc_0_9_ARBURST, xt_rsc_0_9_ARSIZE, xt_rsc_0_9_ARLEN, xt_rsc_0_9_ARADDR,
      xt_rsc_0_9_ARID, xt_rsc_0_9_BREADY, xt_rsc_0_9_BVALID, xt_rsc_0_9_BUSER, xt_rsc_0_9_BRESP,
      xt_rsc_0_9_BID, xt_rsc_0_9_WREADY, xt_rsc_0_9_WVALID, xt_rsc_0_9_WUSER, xt_rsc_0_9_WLAST,
      xt_rsc_0_9_WSTRB, xt_rsc_0_9_WDATA, xt_rsc_0_9_AWREADY, xt_rsc_0_9_AWVALID,
      xt_rsc_0_9_AWUSER, xt_rsc_0_9_AWREGION, xt_rsc_0_9_AWQOS, xt_rsc_0_9_AWPROT,
      xt_rsc_0_9_AWCACHE, xt_rsc_0_9_AWLOCK, xt_rsc_0_9_AWBURST, xt_rsc_0_9_AWSIZE,
      xt_rsc_0_9_AWLEN, xt_rsc_0_9_AWADDR, xt_rsc_0_9_AWID, xt_rsc_triosy_0_9_lz,
      xt_rsc_0_10_s_tdone, xt_rsc_0_10_tr_write_done, xt_rsc_0_10_RREADY, xt_rsc_0_10_RVALID,
      xt_rsc_0_10_RUSER, xt_rsc_0_10_RLAST, xt_rsc_0_10_RRESP, xt_rsc_0_10_RDATA,
      xt_rsc_0_10_RID, xt_rsc_0_10_ARREADY, xt_rsc_0_10_ARVALID, xt_rsc_0_10_ARUSER,
      xt_rsc_0_10_ARREGION, xt_rsc_0_10_ARQOS, xt_rsc_0_10_ARPROT, xt_rsc_0_10_ARCACHE,
      xt_rsc_0_10_ARLOCK, xt_rsc_0_10_ARBURST, xt_rsc_0_10_ARSIZE, xt_rsc_0_10_ARLEN,
      xt_rsc_0_10_ARADDR, xt_rsc_0_10_ARID, xt_rsc_0_10_BREADY, xt_rsc_0_10_BVALID,
      xt_rsc_0_10_BUSER, xt_rsc_0_10_BRESP, xt_rsc_0_10_BID, xt_rsc_0_10_WREADY,
      xt_rsc_0_10_WVALID, xt_rsc_0_10_WUSER, xt_rsc_0_10_WLAST, xt_rsc_0_10_WSTRB,
      xt_rsc_0_10_WDATA, xt_rsc_0_10_AWREADY, xt_rsc_0_10_AWVALID, xt_rsc_0_10_AWUSER,
      xt_rsc_0_10_AWREGION, xt_rsc_0_10_AWQOS, xt_rsc_0_10_AWPROT, xt_rsc_0_10_AWCACHE,
      xt_rsc_0_10_AWLOCK, xt_rsc_0_10_AWBURST, xt_rsc_0_10_AWSIZE, xt_rsc_0_10_AWLEN,
      xt_rsc_0_10_AWADDR, xt_rsc_0_10_AWID, xt_rsc_triosy_0_10_lz, xt_rsc_0_11_s_tdone,
      xt_rsc_0_11_tr_write_done, xt_rsc_0_11_RREADY, xt_rsc_0_11_RVALID, xt_rsc_0_11_RUSER,
      xt_rsc_0_11_RLAST, xt_rsc_0_11_RRESP, xt_rsc_0_11_RDATA, xt_rsc_0_11_RID, xt_rsc_0_11_ARREADY,
      xt_rsc_0_11_ARVALID, xt_rsc_0_11_ARUSER, xt_rsc_0_11_ARREGION, xt_rsc_0_11_ARQOS,
      xt_rsc_0_11_ARPROT, xt_rsc_0_11_ARCACHE, xt_rsc_0_11_ARLOCK, xt_rsc_0_11_ARBURST,
      xt_rsc_0_11_ARSIZE, xt_rsc_0_11_ARLEN, xt_rsc_0_11_ARADDR, xt_rsc_0_11_ARID,
      xt_rsc_0_11_BREADY, xt_rsc_0_11_BVALID, xt_rsc_0_11_BUSER, xt_rsc_0_11_BRESP,
      xt_rsc_0_11_BID, xt_rsc_0_11_WREADY, xt_rsc_0_11_WVALID, xt_rsc_0_11_WUSER,
      xt_rsc_0_11_WLAST, xt_rsc_0_11_WSTRB, xt_rsc_0_11_WDATA, xt_rsc_0_11_AWREADY,
      xt_rsc_0_11_AWVALID, xt_rsc_0_11_AWUSER, xt_rsc_0_11_AWREGION, xt_rsc_0_11_AWQOS,
      xt_rsc_0_11_AWPROT, xt_rsc_0_11_AWCACHE, xt_rsc_0_11_AWLOCK, xt_rsc_0_11_AWBURST,
      xt_rsc_0_11_AWSIZE, xt_rsc_0_11_AWLEN, xt_rsc_0_11_AWADDR, xt_rsc_0_11_AWID,
      xt_rsc_triosy_0_11_lz, xt_rsc_0_12_s_tdone, xt_rsc_0_12_tr_write_done, xt_rsc_0_12_RREADY,
      xt_rsc_0_12_RVALID, xt_rsc_0_12_RUSER, xt_rsc_0_12_RLAST, xt_rsc_0_12_RRESP,
      xt_rsc_0_12_RDATA, xt_rsc_0_12_RID, xt_rsc_0_12_ARREADY, xt_rsc_0_12_ARVALID,
      xt_rsc_0_12_ARUSER, xt_rsc_0_12_ARREGION, xt_rsc_0_12_ARQOS, xt_rsc_0_12_ARPROT,
      xt_rsc_0_12_ARCACHE, xt_rsc_0_12_ARLOCK, xt_rsc_0_12_ARBURST, xt_rsc_0_12_ARSIZE,
      xt_rsc_0_12_ARLEN, xt_rsc_0_12_ARADDR, xt_rsc_0_12_ARID, xt_rsc_0_12_BREADY,
      xt_rsc_0_12_BVALID, xt_rsc_0_12_BUSER, xt_rsc_0_12_BRESP, xt_rsc_0_12_BID,
      xt_rsc_0_12_WREADY, xt_rsc_0_12_WVALID, xt_rsc_0_12_WUSER, xt_rsc_0_12_WLAST,
      xt_rsc_0_12_WSTRB, xt_rsc_0_12_WDATA, xt_rsc_0_12_AWREADY, xt_rsc_0_12_AWVALID,
      xt_rsc_0_12_AWUSER, xt_rsc_0_12_AWREGION, xt_rsc_0_12_AWQOS, xt_rsc_0_12_AWPROT,
      xt_rsc_0_12_AWCACHE, xt_rsc_0_12_AWLOCK, xt_rsc_0_12_AWBURST, xt_rsc_0_12_AWSIZE,
      xt_rsc_0_12_AWLEN, xt_rsc_0_12_AWADDR, xt_rsc_0_12_AWID, xt_rsc_triosy_0_12_lz,
      xt_rsc_0_13_s_tdone, xt_rsc_0_13_tr_write_done, xt_rsc_0_13_RREADY, xt_rsc_0_13_RVALID,
      xt_rsc_0_13_RUSER, xt_rsc_0_13_RLAST, xt_rsc_0_13_RRESP, xt_rsc_0_13_RDATA,
      xt_rsc_0_13_RID, xt_rsc_0_13_ARREADY, xt_rsc_0_13_ARVALID, xt_rsc_0_13_ARUSER,
      xt_rsc_0_13_ARREGION, xt_rsc_0_13_ARQOS, xt_rsc_0_13_ARPROT, xt_rsc_0_13_ARCACHE,
      xt_rsc_0_13_ARLOCK, xt_rsc_0_13_ARBURST, xt_rsc_0_13_ARSIZE, xt_rsc_0_13_ARLEN,
      xt_rsc_0_13_ARADDR, xt_rsc_0_13_ARID, xt_rsc_0_13_BREADY, xt_rsc_0_13_BVALID,
      xt_rsc_0_13_BUSER, xt_rsc_0_13_BRESP, xt_rsc_0_13_BID, xt_rsc_0_13_WREADY,
      xt_rsc_0_13_WVALID, xt_rsc_0_13_WUSER, xt_rsc_0_13_WLAST, xt_rsc_0_13_WSTRB,
      xt_rsc_0_13_WDATA, xt_rsc_0_13_AWREADY, xt_rsc_0_13_AWVALID, xt_rsc_0_13_AWUSER,
      xt_rsc_0_13_AWREGION, xt_rsc_0_13_AWQOS, xt_rsc_0_13_AWPROT, xt_rsc_0_13_AWCACHE,
      xt_rsc_0_13_AWLOCK, xt_rsc_0_13_AWBURST, xt_rsc_0_13_AWSIZE, xt_rsc_0_13_AWLEN,
      xt_rsc_0_13_AWADDR, xt_rsc_0_13_AWID, xt_rsc_triosy_0_13_lz, xt_rsc_0_14_s_tdone,
      xt_rsc_0_14_tr_write_done, xt_rsc_0_14_RREADY, xt_rsc_0_14_RVALID, xt_rsc_0_14_RUSER,
      xt_rsc_0_14_RLAST, xt_rsc_0_14_RRESP, xt_rsc_0_14_RDATA, xt_rsc_0_14_RID, xt_rsc_0_14_ARREADY,
      xt_rsc_0_14_ARVALID, xt_rsc_0_14_ARUSER, xt_rsc_0_14_ARREGION, xt_rsc_0_14_ARQOS,
      xt_rsc_0_14_ARPROT, xt_rsc_0_14_ARCACHE, xt_rsc_0_14_ARLOCK, xt_rsc_0_14_ARBURST,
      xt_rsc_0_14_ARSIZE, xt_rsc_0_14_ARLEN, xt_rsc_0_14_ARADDR, xt_rsc_0_14_ARID,
      xt_rsc_0_14_BREADY, xt_rsc_0_14_BVALID, xt_rsc_0_14_BUSER, xt_rsc_0_14_BRESP,
      xt_rsc_0_14_BID, xt_rsc_0_14_WREADY, xt_rsc_0_14_WVALID, xt_rsc_0_14_WUSER,
      xt_rsc_0_14_WLAST, xt_rsc_0_14_WSTRB, xt_rsc_0_14_WDATA, xt_rsc_0_14_AWREADY,
      xt_rsc_0_14_AWVALID, xt_rsc_0_14_AWUSER, xt_rsc_0_14_AWREGION, xt_rsc_0_14_AWQOS,
      xt_rsc_0_14_AWPROT, xt_rsc_0_14_AWCACHE, xt_rsc_0_14_AWLOCK, xt_rsc_0_14_AWBURST,
      xt_rsc_0_14_AWSIZE, xt_rsc_0_14_AWLEN, xt_rsc_0_14_AWADDR, xt_rsc_0_14_AWID,
      xt_rsc_triosy_0_14_lz, xt_rsc_0_15_s_tdone, xt_rsc_0_15_tr_write_done, xt_rsc_0_15_RREADY,
      xt_rsc_0_15_RVALID, xt_rsc_0_15_RUSER, xt_rsc_0_15_RLAST, xt_rsc_0_15_RRESP,
      xt_rsc_0_15_RDATA, xt_rsc_0_15_RID, xt_rsc_0_15_ARREADY, xt_rsc_0_15_ARVALID,
      xt_rsc_0_15_ARUSER, xt_rsc_0_15_ARREGION, xt_rsc_0_15_ARQOS, xt_rsc_0_15_ARPROT,
      xt_rsc_0_15_ARCACHE, xt_rsc_0_15_ARLOCK, xt_rsc_0_15_ARBURST, xt_rsc_0_15_ARSIZE,
      xt_rsc_0_15_ARLEN, xt_rsc_0_15_ARADDR, xt_rsc_0_15_ARID, xt_rsc_0_15_BREADY,
      xt_rsc_0_15_BVALID, xt_rsc_0_15_BUSER, xt_rsc_0_15_BRESP, xt_rsc_0_15_BID,
      xt_rsc_0_15_WREADY, xt_rsc_0_15_WVALID, xt_rsc_0_15_WUSER, xt_rsc_0_15_WLAST,
      xt_rsc_0_15_WSTRB, xt_rsc_0_15_WDATA, xt_rsc_0_15_AWREADY, xt_rsc_0_15_AWVALID,
      xt_rsc_0_15_AWUSER, xt_rsc_0_15_AWREGION, xt_rsc_0_15_AWQOS, xt_rsc_0_15_AWPROT,
      xt_rsc_0_15_AWCACHE, xt_rsc_0_15_AWLOCK, xt_rsc_0_15_AWBURST, xt_rsc_0_15_AWSIZE,
      xt_rsc_0_15_AWLEN, xt_rsc_0_15_AWADDR, xt_rsc_0_15_AWID, xt_rsc_triosy_0_15_lz,
      xt_rsc_0_16_s_tdone, xt_rsc_0_16_tr_write_done, xt_rsc_0_16_RREADY, xt_rsc_0_16_RVALID,
      xt_rsc_0_16_RUSER, xt_rsc_0_16_RLAST, xt_rsc_0_16_RRESP, xt_rsc_0_16_RDATA,
      xt_rsc_0_16_RID, xt_rsc_0_16_ARREADY, xt_rsc_0_16_ARVALID, xt_rsc_0_16_ARUSER,
      xt_rsc_0_16_ARREGION, xt_rsc_0_16_ARQOS, xt_rsc_0_16_ARPROT, xt_rsc_0_16_ARCACHE,
      xt_rsc_0_16_ARLOCK, xt_rsc_0_16_ARBURST, xt_rsc_0_16_ARSIZE, xt_rsc_0_16_ARLEN,
      xt_rsc_0_16_ARADDR, xt_rsc_0_16_ARID, xt_rsc_0_16_BREADY, xt_rsc_0_16_BVALID,
      xt_rsc_0_16_BUSER, xt_rsc_0_16_BRESP, xt_rsc_0_16_BID, xt_rsc_0_16_WREADY,
      xt_rsc_0_16_WVALID, xt_rsc_0_16_WUSER, xt_rsc_0_16_WLAST, xt_rsc_0_16_WSTRB,
      xt_rsc_0_16_WDATA, xt_rsc_0_16_AWREADY, xt_rsc_0_16_AWVALID, xt_rsc_0_16_AWUSER,
      xt_rsc_0_16_AWREGION, xt_rsc_0_16_AWQOS, xt_rsc_0_16_AWPROT, xt_rsc_0_16_AWCACHE,
      xt_rsc_0_16_AWLOCK, xt_rsc_0_16_AWBURST, xt_rsc_0_16_AWSIZE, xt_rsc_0_16_AWLEN,
      xt_rsc_0_16_AWADDR, xt_rsc_0_16_AWID, xt_rsc_triosy_0_16_lz, xt_rsc_0_17_s_tdone,
      xt_rsc_0_17_tr_write_done, xt_rsc_0_17_RREADY, xt_rsc_0_17_RVALID, xt_rsc_0_17_RUSER,
      xt_rsc_0_17_RLAST, xt_rsc_0_17_RRESP, xt_rsc_0_17_RDATA, xt_rsc_0_17_RID, xt_rsc_0_17_ARREADY,
      xt_rsc_0_17_ARVALID, xt_rsc_0_17_ARUSER, xt_rsc_0_17_ARREGION, xt_rsc_0_17_ARQOS,
      xt_rsc_0_17_ARPROT, xt_rsc_0_17_ARCACHE, xt_rsc_0_17_ARLOCK, xt_rsc_0_17_ARBURST,
      xt_rsc_0_17_ARSIZE, xt_rsc_0_17_ARLEN, xt_rsc_0_17_ARADDR, xt_rsc_0_17_ARID,
      xt_rsc_0_17_BREADY, xt_rsc_0_17_BVALID, xt_rsc_0_17_BUSER, xt_rsc_0_17_BRESP,
      xt_rsc_0_17_BID, xt_rsc_0_17_WREADY, xt_rsc_0_17_WVALID, xt_rsc_0_17_WUSER,
      xt_rsc_0_17_WLAST, xt_rsc_0_17_WSTRB, xt_rsc_0_17_WDATA, xt_rsc_0_17_AWREADY,
      xt_rsc_0_17_AWVALID, xt_rsc_0_17_AWUSER, xt_rsc_0_17_AWREGION, xt_rsc_0_17_AWQOS,
      xt_rsc_0_17_AWPROT, xt_rsc_0_17_AWCACHE, xt_rsc_0_17_AWLOCK, xt_rsc_0_17_AWBURST,
      xt_rsc_0_17_AWSIZE, xt_rsc_0_17_AWLEN, xt_rsc_0_17_AWADDR, xt_rsc_0_17_AWID,
      xt_rsc_triosy_0_17_lz, xt_rsc_0_18_s_tdone, xt_rsc_0_18_tr_write_done, xt_rsc_0_18_RREADY,
      xt_rsc_0_18_RVALID, xt_rsc_0_18_RUSER, xt_rsc_0_18_RLAST, xt_rsc_0_18_RRESP,
      xt_rsc_0_18_RDATA, xt_rsc_0_18_RID, xt_rsc_0_18_ARREADY, xt_rsc_0_18_ARVALID,
      xt_rsc_0_18_ARUSER, xt_rsc_0_18_ARREGION, xt_rsc_0_18_ARQOS, xt_rsc_0_18_ARPROT,
      xt_rsc_0_18_ARCACHE, xt_rsc_0_18_ARLOCK, xt_rsc_0_18_ARBURST, xt_rsc_0_18_ARSIZE,
      xt_rsc_0_18_ARLEN, xt_rsc_0_18_ARADDR, xt_rsc_0_18_ARID, xt_rsc_0_18_BREADY,
      xt_rsc_0_18_BVALID, xt_rsc_0_18_BUSER, xt_rsc_0_18_BRESP, xt_rsc_0_18_BID,
      xt_rsc_0_18_WREADY, xt_rsc_0_18_WVALID, xt_rsc_0_18_WUSER, xt_rsc_0_18_WLAST,
      xt_rsc_0_18_WSTRB, xt_rsc_0_18_WDATA, xt_rsc_0_18_AWREADY, xt_rsc_0_18_AWVALID,
      xt_rsc_0_18_AWUSER, xt_rsc_0_18_AWREGION, xt_rsc_0_18_AWQOS, xt_rsc_0_18_AWPROT,
      xt_rsc_0_18_AWCACHE, xt_rsc_0_18_AWLOCK, xt_rsc_0_18_AWBURST, xt_rsc_0_18_AWSIZE,
      xt_rsc_0_18_AWLEN, xt_rsc_0_18_AWADDR, xt_rsc_0_18_AWID, xt_rsc_triosy_0_18_lz,
      xt_rsc_0_19_s_tdone, xt_rsc_0_19_tr_write_done, xt_rsc_0_19_RREADY, xt_rsc_0_19_RVALID,
      xt_rsc_0_19_RUSER, xt_rsc_0_19_RLAST, xt_rsc_0_19_RRESP, xt_rsc_0_19_RDATA,
      xt_rsc_0_19_RID, xt_rsc_0_19_ARREADY, xt_rsc_0_19_ARVALID, xt_rsc_0_19_ARUSER,
      xt_rsc_0_19_ARREGION, xt_rsc_0_19_ARQOS, xt_rsc_0_19_ARPROT, xt_rsc_0_19_ARCACHE,
      xt_rsc_0_19_ARLOCK, xt_rsc_0_19_ARBURST, xt_rsc_0_19_ARSIZE, xt_rsc_0_19_ARLEN,
      xt_rsc_0_19_ARADDR, xt_rsc_0_19_ARID, xt_rsc_0_19_BREADY, xt_rsc_0_19_BVALID,
      xt_rsc_0_19_BUSER, xt_rsc_0_19_BRESP, xt_rsc_0_19_BID, xt_rsc_0_19_WREADY,
      xt_rsc_0_19_WVALID, xt_rsc_0_19_WUSER, xt_rsc_0_19_WLAST, xt_rsc_0_19_WSTRB,
      xt_rsc_0_19_WDATA, xt_rsc_0_19_AWREADY, xt_rsc_0_19_AWVALID, xt_rsc_0_19_AWUSER,
      xt_rsc_0_19_AWREGION, xt_rsc_0_19_AWQOS, xt_rsc_0_19_AWPROT, xt_rsc_0_19_AWCACHE,
      xt_rsc_0_19_AWLOCK, xt_rsc_0_19_AWBURST, xt_rsc_0_19_AWSIZE, xt_rsc_0_19_AWLEN,
      xt_rsc_0_19_AWADDR, xt_rsc_0_19_AWID, xt_rsc_triosy_0_19_lz, xt_rsc_0_20_s_tdone,
      xt_rsc_0_20_tr_write_done, xt_rsc_0_20_RREADY, xt_rsc_0_20_RVALID, xt_rsc_0_20_RUSER,
      xt_rsc_0_20_RLAST, xt_rsc_0_20_RRESP, xt_rsc_0_20_RDATA, xt_rsc_0_20_RID, xt_rsc_0_20_ARREADY,
      xt_rsc_0_20_ARVALID, xt_rsc_0_20_ARUSER, xt_rsc_0_20_ARREGION, xt_rsc_0_20_ARQOS,
      xt_rsc_0_20_ARPROT, xt_rsc_0_20_ARCACHE, xt_rsc_0_20_ARLOCK, xt_rsc_0_20_ARBURST,
      xt_rsc_0_20_ARSIZE, xt_rsc_0_20_ARLEN, xt_rsc_0_20_ARADDR, xt_rsc_0_20_ARID,
      xt_rsc_0_20_BREADY, xt_rsc_0_20_BVALID, xt_rsc_0_20_BUSER, xt_rsc_0_20_BRESP,
      xt_rsc_0_20_BID, xt_rsc_0_20_WREADY, xt_rsc_0_20_WVALID, xt_rsc_0_20_WUSER,
      xt_rsc_0_20_WLAST, xt_rsc_0_20_WSTRB, xt_rsc_0_20_WDATA, xt_rsc_0_20_AWREADY,
      xt_rsc_0_20_AWVALID, xt_rsc_0_20_AWUSER, xt_rsc_0_20_AWREGION, xt_rsc_0_20_AWQOS,
      xt_rsc_0_20_AWPROT, xt_rsc_0_20_AWCACHE, xt_rsc_0_20_AWLOCK, xt_rsc_0_20_AWBURST,
      xt_rsc_0_20_AWSIZE, xt_rsc_0_20_AWLEN, xt_rsc_0_20_AWADDR, xt_rsc_0_20_AWID,
      xt_rsc_triosy_0_20_lz, xt_rsc_0_21_s_tdone, xt_rsc_0_21_tr_write_done, xt_rsc_0_21_RREADY,
      xt_rsc_0_21_RVALID, xt_rsc_0_21_RUSER, xt_rsc_0_21_RLAST, xt_rsc_0_21_RRESP,
      xt_rsc_0_21_RDATA, xt_rsc_0_21_RID, xt_rsc_0_21_ARREADY, xt_rsc_0_21_ARVALID,
      xt_rsc_0_21_ARUSER, xt_rsc_0_21_ARREGION, xt_rsc_0_21_ARQOS, xt_rsc_0_21_ARPROT,
      xt_rsc_0_21_ARCACHE, xt_rsc_0_21_ARLOCK, xt_rsc_0_21_ARBURST, xt_rsc_0_21_ARSIZE,
      xt_rsc_0_21_ARLEN, xt_rsc_0_21_ARADDR, xt_rsc_0_21_ARID, xt_rsc_0_21_BREADY,
      xt_rsc_0_21_BVALID, xt_rsc_0_21_BUSER, xt_rsc_0_21_BRESP, xt_rsc_0_21_BID,
      xt_rsc_0_21_WREADY, xt_rsc_0_21_WVALID, xt_rsc_0_21_WUSER, xt_rsc_0_21_WLAST,
      xt_rsc_0_21_WSTRB, xt_rsc_0_21_WDATA, xt_rsc_0_21_AWREADY, xt_rsc_0_21_AWVALID,
      xt_rsc_0_21_AWUSER, xt_rsc_0_21_AWREGION, xt_rsc_0_21_AWQOS, xt_rsc_0_21_AWPROT,
      xt_rsc_0_21_AWCACHE, xt_rsc_0_21_AWLOCK, xt_rsc_0_21_AWBURST, xt_rsc_0_21_AWSIZE,
      xt_rsc_0_21_AWLEN, xt_rsc_0_21_AWADDR, xt_rsc_0_21_AWID, xt_rsc_triosy_0_21_lz,
      xt_rsc_0_22_s_tdone, xt_rsc_0_22_tr_write_done, xt_rsc_0_22_RREADY, xt_rsc_0_22_RVALID,
      xt_rsc_0_22_RUSER, xt_rsc_0_22_RLAST, xt_rsc_0_22_RRESP, xt_rsc_0_22_RDATA,
      xt_rsc_0_22_RID, xt_rsc_0_22_ARREADY, xt_rsc_0_22_ARVALID, xt_rsc_0_22_ARUSER,
      xt_rsc_0_22_ARREGION, xt_rsc_0_22_ARQOS, xt_rsc_0_22_ARPROT, xt_rsc_0_22_ARCACHE,
      xt_rsc_0_22_ARLOCK, xt_rsc_0_22_ARBURST, xt_rsc_0_22_ARSIZE, xt_rsc_0_22_ARLEN,
      xt_rsc_0_22_ARADDR, xt_rsc_0_22_ARID, xt_rsc_0_22_BREADY, xt_rsc_0_22_BVALID,
      xt_rsc_0_22_BUSER, xt_rsc_0_22_BRESP, xt_rsc_0_22_BID, xt_rsc_0_22_WREADY,
      xt_rsc_0_22_WVALID, xt_rsc_0_22_WUSER, xt_rsc_0_22_WLAST, xt_rsc_0_22_WSTRB,
      xt_rsc_0_22_WDATA, xt_rsc_0_22_AWREADY, xt_rsc_0_22_AWVALID, xt_rsc_0_22_AWUSER,
      xt_rsc_0_22_AWREGION, xt_rsc_0_22_AWQOS, xt_rsc_0_22_AWPROT, xt_rsc_0_22_AWCACHE,
      xt_rsc_0_22_AWLOCK, xt_rsc_0_22_AWBURST, xt_rsc_0_22_AWSIZE, xt_rsc_0_22_AWLEN,
      xt_rsc_0_22_AWADDR, xt_rsc_0_22_AWID, xt_rsc_triosy_0_22_lz, xt_rsc_0_23_s_tdone,
      xt_rsc_0_23_tr_write_done, xt_rsc_0_23_RREADY, xt_rsc_0_23_RVALID, xt_rsc_0_23_RUSER,
      xt_rsc_0_23_RLAST, xt_rsc_0_23_RRESP, xt_rsc_0_23_RDATA, xt_rsc_0_23_RID, xt_rsc_0_23_ARREADY,
      xt_rsc_0_23_ARVALID, xt_rsc_0_23_ARUSER, xt_rsc_0_23_ARREGION, xt_rsc_0_23_ARQOS,
      xt_rsc_0_23_ARPROT, xt_rsc_0_23_ARCACHE, xt_rsc_0_23_ARLOCK, xt_rsc_0_23_ARBURST,
      xt_rsc_0_23_ARSIZE, xt_rsc_0_23_ARLEN, xt_rsc_0_23_ARADDR, xt_rsc_0_23_ARID,
      xt_rsc_0_23_BREADY, xt_rsc_0_23_BVALID, xt_rsc_0_23_BUSER, xt_rsc_0_23_BRESP,
      xt_rsc_0_23_BID, xt_rsc_0_23_WREADY, xt_rsc_0_23_WVALID, xt_rsc_0_23_WUSER,
      xt_rsc_0_23_WLAST, xt_rsc_0_23_WSTRB, xt_rsc_0_23_WDATA, xt_rsc_0_23_AWREADY,
      xt_rsc_0_23_AWVALID, xt_rsc_0_23_AWUSER, xt_rsc_0_23_AWREGION, xt_rsc_0_23_AWQOS,
      xt_rsc_0_23_AWPROT, xt_rsc_0_23_AWCACHE, xt_rsc_0_23_AWLOCK, xt_rsc_0_23_AWBURST,
      xt_rsc_0_23_AWSIZE, xt_rsc_0_23_AWLEN, xt_rsc_0_23_AWADDR, xt_rsc_0_23_AWID,
      xt_rsc_triosy_0_23_lz, xt_rsc_0_24_s_tdone, xt_rsc_0_24_tr_write_done, xt_rsc_0_24_RREADY,
      xt_rsc_0_24_RVALID, xt_rsc_0_24_RUSER, xt_rsc_0_24_RLAST, xt_rsc_0_24_RRESP,
      xt_rsc_0_24_RDATA, xt_rsc_0_24_RID, xt_rsc_0_24_ARREADY, xt_rsc_0_24_ARVALID,
      xt_rsc_0_24_ARUSER, xt_rsc_0_24_ARREGION, xt_rsc_0_24_ARQOS, xt_rsc_0_24_ARPROT,
      xt_rsc_0_24_ARCACHE, xt_rsc_0_24_ARLOCK, xt_rsc_0_24_ARBURST, xt_rsc_0_24_ARSIZE,
      xt_rsc_0_24_ARLEN, xt_rsc_0_24_ARADDR, xt_rsc_0_24_ARID, xt_rsc_0_24_BREADY,
      xt_rsc_0_24_BVALID, xt_rsc_0_24_BUSER, xt_rsc_0_24_BRESP, xt_rsc_0_24_BID,
      xt_rsc_0_24_WREADY, xt_rsc_0_24_WVALID, xt_rsc_0_24_WUSER, xt_rsc_0_24_WLAST,
      xt_rsc_0_24_WSTRB, xt_rsc_0_24_WDATA, xt_rsc_0_24_AWREADY, xt_rsc_0_24_AWVALID,
      xt_rsc_0_24_AWUSER, xt_rsc_0_24_AWREGION, xt_rsc_0_24_AWQOS, xt_rsc_0_24_AWPROT,
      xt_rsc_0_24_AWCACHE, xt_rsc_0_24_AWLOCK, xt_rsc_0_24_AWBURST, xt_rsc_0_24_AWSIZE,
      xt_rsc_0_24_AWLEN, xt_rsc_0_24_AWADDR, xt_rsc_0_24_AWID, xt_rsc_triosy_0_24_lz,
      xt_rsc_0_25_s_tdone, xt_rsc_0_25_tr_write_done, xt_rsc_0_25_RREADY, xt_rsc_0_25_RVALID,
      xt_rsc_0_25_RUSER, xt_rsc_0_25_RLAST, xt_rsc_0_25_RRESP, xt_rsc_0_25_RDATA,
      xt_rsc_0_25_RID, xt_rsc_0_25_ARREADY, xt_rsc_0_25_ARVALID, xt_rsc_0_25_ARUSER,
      xt_rsc_0_25_ARREGION, xt_rsc_0_25_ARQOS, xt_rsc_0_25_ARPROT, xt_rsc_0_25_ARCACHE,
      xt_rsc_0_25_ARLOCK, xt_rsc_0_25_ARBURST, xt_rsc_0_25_ARSIZE, xt_rsc_0_25_ARLEN,
      xt_rsc_0_25_ARADDR, xt_rsc_0_25_ARID, xt_rsc_0_25_BREADY, xt_rsc_0_25_BVALID,
      xt_rsc_0_25_BUSER, xt_rsc_0_25_BRESP, xt_rsc_0_25_BID, xt_rsc_0_25_WREADY,
      xt_rsc_0_25_WVALID, xt_rsc_0_25_WUSER, xt_rsc_0_25_WLAST, xt_rsc_0_25_WSTRB,
      xt_rsc_0_25_WDATA, xt_rsc_0_25_AWREADY, xt_rsc_0_25_AWVALID, xt_rsc_0_25_AWUSER,
      xt_rsc_0_25_AWREGION, xt_rsc_0_25_AWQOS, xt_rsc_0_25_AWPROT, xt_rsc_0_25_AWCACHE,
      xt_rsc_0_25_AWLOCK, xt_rsc_0_25_AWBURST, xt_rsc_0_25_AWSIZE, xt_rsc_0_25_AWLEN,
      xt_rsc_0_25_AWADDR, xt_rsc_0_25_AWID, xt_rsc_triosy_0_25_lz, xt_rsc_0_26_s_tdone,
      xt_rsc_0_26_tr_write_done, xt_rsc_0_26_RREADY, xt_rsc_0_26_RVALID, xt_rsc_0_26_RUSER,
      xt_rsc_0_26_RLAST, xt_rsc_0_26_RRESP, xt_rsc_0_26_RDATA, xt_rsc_0_26_RID, xt_rsc_0_26_ARREADY,
      xt_rsc_0_26_ARVALID, xt_rsc_0_26_ARUSER, xt_rsc_0_26_ARREGION, xt_rsc_0_26_ARQOS,
      xt_rsc_0_26_ARPROT, xt_rsc_0_26_ARCACHE, xt_rsc_0_26_ARLOCK, xt_rsc_0_26_ARBURST,
      xt_rsc_0_26_ARSIZE, xt_rsc_0_26_ARLEN, xt_rsc_0_26_ARADDR, xt_rsc_0_26_ARID,
      xt_rsc_0_26_BREADY, xt_rsc_0_26_BVALID, xt_rsc_0_26_BUSER, xt_rsc_0_26_BRESP,
      xt_rsc_0_26_BID, xt_rsc_0_26_WREADY, xt_rsc_0_26_WVALID, xt_rsc_0_26_WUSER,
      xt_rsc_0_26_WLAST, xt_rsc_0_26_WSTRB, xt_rsc_0_26_WDATA, xt_rsc_0_26_AWREADY,
      xt_rsc_0_26_AWVALID, xt_rsc_0_26_AWUSER, xt_rsc_0_26_AWREGION, xt_rsc_0_26_AWQOS,
      xt_rsc_0_26_AWPROT, xt_rsc_0_26_AWCACHE, xt_rsc_0_26_AWLOCK, xt_rsc_0_26_AWBURST,
      xt_rsc_0_26_AWSIZE, xt_rsc_0_26_AWLEN, xt_rsc_0_26_AWADDR, xt_rsc_0_26_AWID,
      xt_rsc_triosy_0_26_lz, xt_rsc_0_27_s_tdone, xt_rsc_0_27_tr_write_done, xt_rsc_0_27_RREADY,
      xt_rsc_0_27_RVALID, xt_rsc_0_27_RUSER, xt_rsc_0_27_RLAST, xt_rsc_0_27_RRESP,
      xt_rsc_0_27_RDATA, xt_rsc_0_27_RID, xt_rsc_0_27_ARREADY, xt_rsc_0_27_ARVALID,
      xt_rsc_0_27_ARUSER, xt_rsc_0_27_ARREGION, xt_rsc_0_27_ARQOS, xt_rsc_0_27_ARPROT,
      xt_rsc_0_27_ARCACHE, xt_rsc_0_27_ARLOCK, xt_rsc_0_27_ARBURST, xt_rsc_0_27_ARSIZE,
      xt_rsc_0_27_ARLEN, xt_rsc_0_27_ARADDR, xt_rsc_0_27_ARID, xt_rsc_0_27_BREADY,
      xt_rsc_0_27_BVALID, xt_rsc_0_27_BUSER, xt_rsc_0_27_BRESP, xt_rsc_0_27_BID,
      xt_rsc_0_27_WREADY, xt_rsc_0_27_WVALID, xt_rsc_0_27_WUSER, xt_rsc_0_27_WLAST,
      xt_rsc_0_27_WSTRB, xt_rsc_0_27_WDATA, xt_rsc_0_27_AWREADY, xt_rsc_0_27_AWVALID,
      xt_rsc_0_27_AWUSER, xt_rsc_0_27_AWREGION, xt_rsc_0_27_AWQOS, xt_rsc_0_27_AWPROT,
      xt_rsc_0_27_AWCACHE, xt_rsc_0_27_AWLOCK, xt_rsc_0_27_AWBURST, xt_rsc_0_27_AWSIZE,
      xt_rsc_0_27_AWLEN, xt_rsc_0_27_AWADDR, xt_rsc_0_27_AWID, xt_rsc_triosy_0_27_lz,
      xt_rsc_0_28_s_tdone, xt_rsc_0_28_tr_write_done, xt_rsc_0_28_RREADY, xt_rsc_0_28_RVALID,
      xt_rsc_0_28_RUSER, xt_rsc_0_28_RLAST, xt_rsc_0_28_RRESP, xt_rsc_0_28_RDATA,
      xt_rsc_0_28_RID, xt_rsc_0_28_ARREADY, xt_rsc_0_28_ARVALID, xt_rsc_0_28_ARUSER,
      xt_rsc_0_28_ARREGION, xt_rsc_0_28_ARQOS, xt_rsc_0_28_ARPROT, xt_rsc_0_28_ARCACHE,
      xt_rsc_0_28_ARLOCK, xt_rsc_0_28_ARBURST, xt_rsc_0_28_ARSIZE, xt_rsc_0_28_ARLEN,
      xt_rsc_0_28_ARADDR, xt_rsc_0_28_ARID, xt_rsc_0_28_BREADY, xt_rsc_0_28_BVALID,
      xt_rsc_0_28_BUSER, xt_rsc_0_28_BRESP, xt_rsc_0_28_BID, xt_rsc_0_28_WREADY,
      xt_rsc_0_28_WVALID, xt_rsc_0_28_WUSER, xt_rsc_0_28_WLAST, xt_rsc_0_28_WSTRB,
      xt_rsc_0_28_WDATA, xt_rsc_0_28_AWREADY, xt_rsc_0_28_AWVALID, xt_rsc_0_28_AWUSER,
      xt_rsc_0_28_AWREGION, xt_rsc_0_28_AWQOS, xt_rsc_0_28_AWPROT, xt_rsc_0_28_AWCACHE,
      xt_rsc_0_28_AWLOCK, xt_rsc_0_28_AWBURST, xt_rsc_0_28_AWSIZE, xt_rsc_0_28_AWLEN,
      xt_rsc_0_28_AWADDR, xt_rsc_0_28_AWID, xt_rsc_triosy_0_28_lz, xt_rsc_0_29_s_tdone,
      xt_rsc_0_29_tr_write_done, xt_rsc_0_29_RREADY, xt_rsc_0_29_RVALID, xt_rsc_0_29_RUSER,
      xt_rsc_0_29_RLAST, xt_rsc_0_29_RRESP, xt_rsc_0_29_RDATA, xt_rsc_0_29_RID, xt_rsc_0_29_ARREADY,
      xt_rsc_0_29_ARVALID, xt_rsc_0_29_ARUSER, xt_rsc_0_29_ARREGION, xt_rsc_0_29_ARQOS,
      xt_rsc_0_29_ARPROT, xt_rsc_0_29_ARCACHE, xt_rsc_0_29_ARLOCK, xt_rsc_0_29_ARBURST,
      xt_rsc_0_29_ARSIZE, xt_rsc_0_29_ARLEN, xt_rsc_0_29_ARADDR, xt_rsc_0_29_ARID,
      xt_rsc_0_29_BREADY, xt_rsc_0_29_BVALID, xt_rsc_0_29_BUSER, xt_rsc_0_29_BRESP,
      xt_rsc_0_29_BID, xt_rsc_0_29_WREADY, xt_rsc_0_29_WVALID, xt_rsc_0_29_WUSER,
      xt_rsc_0_29_WLAST, xt_rsc_0_29_WSTRB, xt_rsc_0_29_WDATA, xt_rsc_0_29_AWREADY,
      xt_rsc_0_29_AWVALID, xt_rsc_0_29_AWUSER, xt_rsc_0_29_AWREGION, xt_rsc_0_29_AWQOS,
      xt_rsc_0_29_AWPROT, xt_rsc_0_29_AWCACHE, xt_rsc_0_29_AWLOCK, xt_rsc_0_29_AWBURST,
      xt_rsc_0_29_AWSIZE, xt_rsc_0_29_AWLEN, xt_rsc_0_29_AWADDR, xt_rsc_0_29_AWID,
      xt_rsc_triosy_0_29_lz, xt_rsc_0_30_s_tdone, xt_rsc_0_30_tr_write_done, xt_rsc_0_30_RREADY,
      xt_rsc_0_30_RVALID, xt_rsc_0_30_RUSER, xt_rsc_0_30_RLAST, xt_rsc_0_30_RRESP,
      xt_rsc_0_30_RDATA, xt_rsc_0_30_RID, xt_rsc_0_30_ARREADY, xt_rsc_0_30_ARVALID,
      xt_rsc_0_30_ARUSER, xt_rsc_0_30_ARREGION, xt_rsc_0_30_ARQOS, xt_rsc_0_30_ARPROT,
      xt_rsc_0_30_ARCACHE, xt_rsc_0_30_ARLOCK, xt_rsc_0_30_ARBURST, xt_rsc_0_30_ARSIZE,
      xt_rsc_0_30_ARLEN, xt_rsc_0_30_ARADDR, xt_rsc_0_30_ARID, xt_rsc_0_30_BREADY,
      xt_rsc_0_30_BVALID, xt_rsc_0_30_BUSER, xt_rsc_0_30_BRESP, xt_rsc_0_30_BID,
      xt_rsc_0_30_WREADY, xt_rsc_0_30_WVALID, xt_rsc_0_30_WUSER, xt_rsc_0_30_WLAST,
      xt_rsc_0_30_WSTRB, xt_rsc_0_30_WDATA, xt_rsc_0_30_AWREADY, xt_rsc_0_30_AWVALID,
      xt_rsc_0_30_AWUSER, xt_rsc_0_30_AWREGION, xt_rsc_0_30_AWQOS, xt_rsc_0_30_AWPROT,
      xt_rsc_0_30_AWCACHE, xt_rsc_0_30_AWLOCK, xt_rsc_0_30_AWBURST, xt_rsc_0_30_AWSIZE,
      xt_rsc_0_30_AWLEN, xt_rsc_0_30_AWADDR, xt_rsc_0_30_AWID, xt_rsc_triosy_0_30_lz,
      xt_rsc_0_31_s_tdone, xt_rsc_0_31_tr_write_done, xt_rsc_0_31_RREADY, xt_rsc_0_31_RVALID,
      xt_rsc_0_31_RUSER, xt_rsc_0_31_RLAST, xt_rsc_0_31_RRESP, xt_rsc_0_31_RDATA,
      xt_rsc_0_31_RID, xt_rsc_0_31_ARREADY, xt_rsc_0_31_ARVALID, xt_rsc_0_31_ARUSER,
      xt_rsc_0_31_ARREGION, xt_rsc_0_31_ARQOS, xt_rsc_0_31_ARPROT, xt_rsc_0_31_ARCACHE,
      xt_rsc_0_31_ARLOCK, xt_rsc_0_31_ARBURST, xt_rsc_0_31_ARSIZE, xt_rsc_0_31_ARLEN,
      xt_rsc_0_31_ARADDR, xt_rsc_0_31_ARID, xt_rsc_0_31_BREADY, xt_rsc_0_31_BVALID,
      xt_rsc_0_31_BUSER, xt_rsc_0_31_BRESP, xt_rsc_0_31_BID, xt_rsc_0_31_WREADY,
      xt_rsc_0_31_WVALID, xt_rsc_0_31_WUSER, xt_rsc_0_31_WLAST, xt_rsc_0_31_WSTRB,
      xt_rsc_0_31_WDATA, xt_rsc_0_31_AWREADY, xt_rsc_0_31_AWVALID, xt_rsc_0_31_AWUSER,
      xt_rsc_0_31_AWREGION, xt_rsc_0_31_AWQOS, xt_rsc_0_31_AWPROT, xt_rsc_0_31_AWCACHE,
      xt_rsc_0_31_AWLOCK, xt_rsc_0_31_AWBURST, xt_rsc_0_31_AWSIZE, xt_rsc_0_31_AWLEN,
      xt_rsc_0_31_AWADDR, xt_rsc_0_31_AWID, xt_rsc_triosy_0_31_lz, xt_rsc_1_0_s_tdone,
      xt_rsc_1_0_tr_write_done, xt_rsc_1_0_RREADY, xt_rsc_1_0_RVALID, xt_rsc_1_0_RUSER,
      xt_rsc_1_0_RLAST, xt_rsc_1_0_RRESP, xt_rsc_1_0_RDATA, xt_rsc_1_0_RID, xt_rsc_1_0_ARREADY,
      xt_rsc_1_0_ARVALID, xt_rsc_1_0_ARUSER, xt_rsc_1_0_ARREGION, xt_rsc_1_0_ARQOS,
      xt_rsc_1_0_ARPROT, xt_rsc_1_0_ARCACHE, xt_rsc_1_0_ARLOCK, xt_rsc_1_0_ARBURST,
      xt_rsc_1_0_ARSIZE, xt_rsc_1_0_ARLEN, xt_rsc_1_0_ARADDR, xt_rsc_1_0_ARID, xt_rsc_1_0_BREADY,
      xt_rsc_1_0_BVALID, xt_rsc_1_0_BUSER, xt_rsc_1_0_BRESP, xt_rsc_1_0_BID, xt_rsc_1_0_WREADY,
      xt_rsc_1_0_WVALID, xt_rsc_1_0_WUSER, xt_rsc_1_0_WLAST, xt_rsc_1_0_WSTRB, xt_rsc_1_0_WDATA,
      xt_rsc_1_0_AWREADY, xt_rsc_1_0_AWVALID, xt_rsc_1_0_AWUSER, xt_rsc_1_0_AWREGION,
      xt_rsc_1_0_AWQOS, xt_rsc_1_0_AWPROT, xt_rsc_1_0_AWCACHE, xt_rsc_1_0_AWLOCK,
      xt_rsc_1_0_AWBURST, xt_rsc_1_0_AWSIZE, xt_rsc_1_0_AWLEN, xt_rsc_1_0_AWADDR,
      xt_rsc_1_0_AWID, xt_rsc_triosy_1_0_lz, xt_rsc_1_1_s_tdone, xt_rsc_1_1_tr_write_done,
      xt_rsc_1_1_RREADY, xt_rsc_1_1_RVALID, xt_rsc_1_1_RUSER, xt_rsc_1_1_RLAST, xt_rsc_1_1_RRESP,
      xt_rsc_1_1_RDATA, xt_rsc_1_1_RID, xt_rsc_1_1_ARREADY, xt_rsc_1_1_ARVALID, xt_rsc_1_1_ARUSER,
      xt_rsc_1_1_ARREGION, xt_rsc_1_1_ARQOS, xt_rsc_1_1_ARPROT, xt_rsc_1_1_ARCACHE,
      xt_rsc_1_1_ARLOCK, xt_rsc_1_1_ARBURST, xt_rsc_1_1_ARSIZE, xt_rsc_1_1_ARLEN,
      xt_rsc_1_1_ARADDR, xt_rsc_1_1_ARID, xt_rsc_1_1_BREADY, xt_rsc_1_1_BVALID, xt_rsc_1_1_BUSER,
      xt_rsc_1_1_BRESP, xt_rsc_1_1_BID, xt_rsc_1_1_WREADY, xt_rsc_1_1_WVALID, xt_rsc_1_1_WUSER,
      xt_rsc_1_1_WLAST, xt_rsc_1_1_WSTRB, xt_rsc_1_1_WDATA, xt_rsc_1_1_AWREADY, xt_rsc_1_1_AWVALID,
      xt_rsc_1_1_AWUSER, xt_rsc_1_1_AWREGION, xt_rsc_1_1_AWQOS, xt_rsc_1_1_AWPROT,
      xt_rsc_1_1_AWCACHE, xt_rsc_1_1_AWLOCK, xt_rsc_1_1_AWBURST, xt_rsc_1_1_AWSIZE,
      xt_rsc_1_1_AWLEN, xt_rsc_1_1_AWADDR, xt_rsc_1_1_AWID, xt_rsc_triosy_1_1_lz,
      xt_rsc_1_2_s_tdone, xt_rsc_1_2_tr_write_done, xt_rsc_1_2_RREADY, xt_rsc_1_2_RVALID,
      xt_rsc_1_2_RUSER, xt_rsc_1_2_RLAST, xt_rsc_1_2_RRESP, xt_rsc_1_2_RDATA, xt_rsc_1_2_RID,
      xt_rsc_1_2_ARREADY, xt_rsc_1_2_ARVALID, xt_rsc_1_2_ARUSER, xt_rsc_1_2_ARREGION,
      xt_rsc_1_2_ARQOS, xt_rsc_1_2_ARPROT, xt_rsc_1_2_ARCACHE, xt_rsc_1_2_ARLOCK,
      xt_rsc_1_2_ARBURST, xt_rsc_1_2_ARSIZE, xt_rsc_1_2_ARLEN, xt_rsc_1_2_ARADDR,
      xt_rsc_1_2_ARID, xt_rsc_1_2_BREADY, xt_rsc_1_2_BVALID, xt_rsc_1_2_BUSER, xt_rsc_1_2_BRESP,
      xt_rsc_1_2_BID, xt_rsc_1_2_WREADY, xt_rsc_1_2_WVALID, xt_rsc_1_2_WUSER, xt_rsc_1_2_WLAST,
      xt_rsc_1_2_WSTRB, xt_rsc_1_2_WDATA, xt_rsc_1_2_AWREADY, xt_rsc_1_2_AWVALID,
      xt_rsc_1_2_AWUSER, xt_rsc_1_2_AWREGION, xt_rsc_1_2_AWQOS, xt_rsc_1_2_AWPROT,
      xt_rsc_1_2_AWCACHE, xt_rsc_1_2_AWLOCK, xt_rsc_1_2_AWBURST, xt_rsc_1_2_AWSIZE,
      xt_rsc_1_2_AWLEN, xt_rsc_1_2_AWADDR, xt_rsc_1_2_AWID, xt_rsc_triosy_1_2_lz,
      xt_rsc_1_3_s_tdone, xt_rsc_1_3_tr_write_done, xt_rsc_1_3_RREADY, xt_rsc_1_3_RVALID,
      xt_rsc_1_3_RUSER, xt_rsc_1_3_RLAST, xt_rsc_1_3_RRESP, xt_rsc_1_3_RDATA, xt_rsc_1_3_RID,
      xt_rsc_1_3_ARREADY, xt_rsc_1_3_ARVALID, xt_rsc_1_3_ARUSER, xt_rsc_1_3_ARREGION,
      xt_rsc_1_3_ARQOS, xt_rsc_1_3_ARPROT, xt_rsc_1_3_ARCACHE, xt_rsc_1_3_ARLOCK,
      xt_rsc_1_3_ARBURST, xt_rsc_1_3_ARSIZE, xt_rsc_1_3_ARLEN, xt_rsc_1_3_ARADDR,
      xt_rsc_1_3_ARID, xt_rsc_1_3_BREADY, xt_rsc_1_3_BVALID, xt_rsc_1_3_BUSER, xt_rsc_1_3_BRESP,
      xt_rsc_1_3_BID, xt_rsc_1_3_WREADY, xt_rsc_1_3_WVALID, xt_rsc_1_3_WUSER, xt_rsc_1_3_WLAST,
      xt_rsc_1_3_WSTRB, xt_rsc_1_3_WDATA, xt_rsc_1_3_AWREADY, xt_rsc_1_3_AWVALID,
      xt_rsc_1_3_AWUSER, xt_rsc_1_3_AWREGION, xt_rsc_1_3_AWQOS, xt_rsc_1_3_AWPROT,
      xt_rsc_1_3_AWCACHE, xt_rsc_1_3_AWLOCK, xt_rsc_1_3_AWBURST, xt_rsc_1_3_AWSIZE,
      xt_rsc_1_3_AWLEN, xt_rsc_1_3_AWADDR, xt_rsc_1_3_AWID, xt_rsc_triosy_1_3_lz,
      xt_rsc_1_4_s_tdone, xt_rsc_1_4_tr_write_done, xt_rsc_1_4_RREADY, xt_rsc_1_4_RVALID,
      xt_rsc_1_4_RUSER, xt_rsc_1_4_RLAST, xt_rsc_1_4_RRESP, xt_rsc_1_4_RDATA, xt_rsc_1_4_RID,
      xt_rsc_1_4_ARREADY, xt_rsc_1_4_ARVALID, xt_rsc_1_4_ARUSER, xt_rsc_1_4_ARREGION,
      xt_rsc_1_4_ARQOS, xt_rsc_1_4_ARPROT, xt_rsc_1_4_ARCACHE, xt_rsc_1_4_ARLOCK,
      xt_rsc_1_4_ARBURST, xt_rsc_1_4_ARSIZE, xt_rsc_1_4_ARLEN, xt_rsc_1_4_ARADDR,
      xt_rsc_1_4_ARID, xt_rsc_1_4_BREADY, xt_rsc_1_4_BVALID, xt_rsc_1_4_BUSER, xt_rsc_1_4_BRESP,
      xt_rsc_1_4_BID, xt_rsc_1_4_WREADY, xt_rsc_1_4_WVALID, xt_rsc_1_4_WUSER, xt_rsc_1_4_WLAST,
      xt_rsc_1_4_WSTRB, xt_rsc_1_4_WDATA, xt_rsc_1_4_AWREADY, xt_rsc_1_4_AWVALID,
      xt_rsc_1_4_AWUSER, xt_rsc_1_4_AWREGION, xt_rsc_1_4_AWQOS, xt_rsc_1_4_AWPROT,
      xt_rsc_1_4_AWCACHE, xt_rsc_1_4_AWLOCK, xt_rsc_1_4_AWBURST, xt_rsc_1_4_AWSIZE,
      xt_rsc_1_4_AWLEN, xt_rsc_1_4_AWADDR, xt_rsc_1_4_AWID, xt_rsc_triosy_1_4_lz,
      xt_rsc_1_5_s_tdone, xt_rsc_1_5_tr_write_done, xt_rsc_1_5_RREADY, xt_rsc_1_5_RVALID,
      xt_rsc_1_5_RUSER, xt_rsc_1_5_RLAST, xt_rsc_1_5_RRESP, xt_rsc_1_5_RDATA, xt_rsc_1_5_RID,
      xt_rsc_1_5_ARREADY, xt_rsc_1_5_ARVALID, xt_rsc_1_5_ARUSER, xt_rsc_1_5_ARREGION,
      xt_rsc_1_5_ARQOS, xt_rsc_1_5_ARPROT, xt_rsc_1_5_ARCACHE, xt_rsc_1_5_ARLOCK,
      xt_rsc_1_5_ARBURST, xt_rsc_1_5_ARSIZE, xt_rsc_1_5_ARLEN, xt_rsc_1_5_ARADDR,
      xt_rsc_1_5_ARID, xt_rsc_1_5_BREADY, xt_rsc_1_5_BVALID, xt_rsc_1_5_BUSER, xt_rsc_1_5_BRESP,
      xt_rsc_1_5_BID, xt_rsc_1_5_WREADY, xt_rsc_1_5_WVALID, xt_rsc_1_5_WUSER, xt_rsc_1_5_WLAST,
      xt_rsc_1_5_WSTRB, xt_rsc_1_5_WDATA, xt_rsc_1_5_AWREADY, xt_rsc_1_5_AWVALID,
      xt_rsc_1_5_AWUSER, xt_rsc_1_5_AWREGION, xt_rsc_1_5_AWQOS, xt_rsc_1_5_AWPROT,
      xt_rsc_1_5_AWCACHE, xt_rsc_1_5_AWLOCK, xt_rsc_1_5_AWBURST, xt_rsc_1_5_AWSIZE,
      xt_rsc_1_5_AWLEN, xt_rsc_1_5_AWADDR, xt_rsc_1_5_AWID, xt_rsc_triosy_1_5_lz,
      xt_rsc_1_6_s_tdone, xt_rsc_1_6_tr_write_done, xt_rsc_1_6_RREADY, xt_rsc_1_6_RVALID,
      xt_rsc_1_6_RUSER, xt_rsc_1_6_RLAST, xt_rsc_1_6_RRESP, xt_rsc_1_6_RDATA, xt_rsc_1_6_RID,
      xt_rsc_1_6_ARREADY, xt_rsc_1_6_ARVALID, xt_rsc_1_6_ARUSER, xt_rsc_1_6_ARREGION,
      xt_rsc_1_6_ARQOS, xt_rsc_1_6_ARPROT, xt_rsc_1_6_ARCACHE, xt_rsc_1_6_ARLOCK,
      xt_rsc_1_6_ARBURST, xt_rsc_1_6_ARSIZE, xt_rsc_1_6_ARLEN, xt_rsc_1_6_ARADDR,
      xt_rsc_1_6_ARID, xt_rsc_1_6_BREADY, xt_rsc_1_6_BVALID, xt_rsc_1_6_BUSER, xt_rsc_1_6_BRESP,
      xt_rsc_1_6_BID, xt_rsc_1_6_WREADY, xt_rsc_1_6_WVALID, xt_rsc_1_6_WUSER, xt_rsc_1_6_WLAST,
      xt_rsc_1_6_WSTRB, xt_rsc_1_6_WDATA, xt_rsc_1_6_AWREADY, xt_rsc_1_6_AWVALID,
      xt_rsc_1_6_AWUSER, xt_rsc_1_6_AWREGION, xt_rsc_1_6_AWQOS, xt_rsc_1_6_AWPROT,
      xt_rsc_1_6_AWCACHE, xt_rsc_1_6_AWLOCK, xt_rsc_1_6_AWBURST, xt_rsc_1_6_AWSIZE,
      xt_rsc_1_6_AWLEN, xt_rsc_1_6_AWADDR, xt_rsc_1_6_AWID, xt_rsc_triosy_1_6_lz,
      xt_rsc_1_7_s_tdone, xt_rsc_1_7_tr_write_done, xt_rsc_1_7_RREADY, xt_rsc_1_7_RVALID,
      xt_rsc_1_7_RUSER, xt_rsc_1_7_RLAST, xt_rsc_1_7_RRESP, xt_rsc_1_7_RDATA, xt_rsc_1_7_RID,
      xt_rsc_1_7_ARREADY, xt_rsc_1_7_ARVALID, xt_rsc_1_7_ARUSER, xt_rsc_1_7_ARREGION,
      xt_rsc_1_7_ARQOS, xt_rsc_1_7_ARPROT, xt_rsc_1_7_ARCACHE, xt_rsc_1_7_ARLOCK,
      xt_rsc_1_7_ARBURST, xt_rsc_1_7_ARSIZE, xt_rsc_1_7_ARLEN, xt_rsc_1_7_ARADDR,
      xt_rsc_1_7_ARID, xt_rsc_1_7_BREADY, xt_rsc_1_7_BVALID, xt_rsc_1_7_BUSER, xt_rsc_1_7_BRESP,
      xt_rsc_1_7_BID, xt_rsc_1_7_WREADY, xt_rsc_1_7_WVALID, xt_rsc_1_7_WUSER, xt_rsc_1_7_WLAST,
      xt_rsc_1_7_WSTRB, xt_rsc_1_7_WDATA, xt_rsc_1_7_AWREADY, xt_rsc_1_7_AWVALID,
      xt_rsc_1_7_AWUSER, xt_rsc_1_7_AWREGION, xt_rsc_1_7_AWQOS, xt_rsc_1_7_AWPROT,
      xt_rsc_1_7_AWCACHE, xt_rsc_1_7_AWLOCK, xt_rsc_1_7_AWBURST, xt_rsc_1_7_AWSIZE,
      xt_rsc_1_7_AWLEN, xt_rsc_1_7_AWADDR, xt_rsc_1_7_AWID, xt_rsc_triosy_1_7_lz,
      xt_rsc_1_8_s_tdone, xt_rsc_1_8_tr_write_done, xt_rsc_1_8_RREADY, xt_rsc_1_8_RVALID,
      xt_rsc_1_8_RUSER, xt_rsc_1_8_RLAST, xt_rsc_1_8_RRESP, xt_rsc_1_8_RDATA, xt_rsc_1_8_RID,
      xt_rsc_1_8_ARREADY, xt_rsc_1_8_ARVALID, xt_rsc_1_8_ARUSER, xt_rsc_1_8_ARREGION,
      xt_rsc_1_8_ARQOS, xt_rsc_1_8_ARPROT, xt_rsc_1_8_ARCACHE, xt_rsc_1_8_ARLOCK,
      xt_rsc_1_8_ARBURST, xt_rsc_1_8_ARSIZE, xt_rsc_1_8_ARLEN, xt_rsc_1_8_ARADDR,
      xt_rsc_1_8_ARID, xt_rsc_1_8_BREADY, xt_rsc_1_8_BVALID, xt_rsc_1_8_BUSER, xt_rsc_1_8_BRESP,
      xt_rsc_1_8_BID, xt_rsc_1_8_WREADY, xt_rsc_1_8_WVALID, xt_rsc_1_8_WUSER, xt_rsc_1_8_WLAST,
      xt_rsc_1_8_WSTRB, xt_rsc_1_8_WDATA, xt_rsc_1_8_AWREADY, xt_rsc_1_8_AWVALID,
      xt_rsc_1_8_AWUSER, xt_rsc_1_8_AWREGION, xt_rsc_1_8_AWQOS, xt_rsc_1_8_AWPROT,
      xt_rsc_1_8_AWCACHE, xt_rsc_1_8_AWLOCK, xt_rsc_1_8_AWBURST, xt_rsc_1_8_AWSIZE,
      xt_rsc_1_8_AWLEN, xt_rsc_1_8_AWADDR, xt_rsc_1_8_AWID, xt_rsc_triosy_1_8_lz,
      xt_rsc_1_9_s_tdone, xt_rsc_1_9_tr_write_done, xt_rsc_1_9_RREADY, xt_rsc_1_9_RVALID,
      xt_rsc_1_9_RUSER, xt_rsc_1_9_RLAST, xt_rsc_1_9_RRESP, xt_rsc_1_9_RDATA, xt_rsc_1_9_RID,
      xt_rsc_1_9_ARREADY, xt_rsc_1_9_ARVALID, xt_rsc_1_9_ARUSER, xt_rsc_1_9_ARREGION,
      xt_rsc_1_9_ARQOS, xt_rsc_1_9_ARPROT, xt_rsc_1_9_ARCACHE, xt_rsc_1_9_ARLOCK,
      xt_rsc_1_9_ARBURST, xt_rsc_1_9_ARSIZE, xt_rsc_1_9_ARLEN, xt_rsc_1_9_ARADDR,
      xt_rsc_1_9_ARID, xt_rsc_1_9_BREADY, xt_rsc_1_9_BVALID, xt_rsc_1_9_BUSER, xt_rsc_1_9_BRESP,
      xt_rsc_1_9_BID, xt_rsc_1_9_WREADY, xt_rsc_1_9_WVALID, xt_rsc_1_9_WUSER, xt_rsc_1_9_WLAST,
      xt_rsc_1_9_WSTRB, xt_rsc_1_9_WDATA, xt_rsc_1_9_AWREADY, xt_rsc_1_9_AWVALID,
      xt_rsc_1_9_AWUSER, xt_rsc_1_9_AWREGION, xt_rsc_1_9_AWQOS, xt_rsc_1_9_AWPROT,
      xt_rsc_1_9_AWCACHE, xt_rsc_1_9_AWLOCK, xt_rsc_1_9_AWBURST, xt_rsc_1_9_AWSIZE,
      xt_rsc_1_9_AWLEN, xt_rsc_1_9_AWADDR, xt_rsc_1_9_AWID, xt_rsc_triosy_1_9_lz,
      xt_rsc_1_10_s_tdone, xt_rsc_1_10_tr_write_done, xt_rsc_1_10_RREADY, xt_rsc_1_10_RVALID,
      xt_rsc_1_10_RUSER, xt_rsc_1_10_RLAST, xt_rsc_1_10_RRESP, xt_rsc_1_10_RDATA,
      xt_rsc_1_10_RID, xt_rsc_1_10_ARREADY, xt_rsc_1_10_ARVALID, xt_rsc_1_10_ARUSER,
      xt_rsc_1_10_ARREGION, xt_rsc_1_10_ARQOS, xt_rsc_1_10_ARPROT, xt_rsc_1_10_ARCACHE,
      xt_rsc_1_10_ARLOCK, xt_rsc_1_10_ARBURST, xt_rsc_1_10_ARSIZE, xt_rsc_1_10_ARLEN,
      xt_rsc_1_10_ARADDR, xt_rsc_1_10_ARID, xt_rsc_1_10_BREADY, xt_rsc_1_10_BVALID,
      xt_rsc_1_10_BUSER, xt_rsc_1_10_BRESP, xt_rsc_1_10_BID, xt_rsc_1_10_WREADY,
      xt_rsc_1_10_WVALID, xt_rsc_1_10_WUSER, xt_rsc_1_10_WLAST, xt_rsc_1_10_WSTRB,
      xt_rsc_1_10_WDATA, xt_rsc_1_10_AWREADY, xt_rsc_1_10_AWVALID, xt_rsc_1_10_AWUSER,
      xt_rsc_1_10_AWREGION, xt_rsc_1_10_AWQOS, xt_rsc_1_10_AWPROT, xt_rsc_1_10_AWCACHE,
      xt_rsc_1_10_AWLOCK, xt_rsc_1_10_AWBURST, xt_rsc_1_10_AWSIZE, xt_rsc_1_10_AWLEN,
      xt_rsc_1_10_AWADDR, xt_rsc_1_10_AWID, xt_rsc_triosy_1_10_lz, xt_rsc_1_11_s_tdone,
      xt_rsc_1_11_tr_write_done, xt_rsc_1_11_RREADY, xt_rsc_1_11_RVALID, xt_rsc_1_11_RUSER,
      xt_rsc_1_11_RLAST, xt_rsc_1_11_RRESP, xt_rsc_1_11_RDATA, xt_rsc_1_11_RID, xt_rsc_1_11_ARREADY,
      xt_rsc_1_11_ARVALID, xt_rsc_1_11_ARUSER, xt_rsc_1_11_ARREGION, xt_rsc_1_11_ARQOS,
      xt_rsc_1_11_ARPROT, xt_rsc_1_11_ARCACHE, xt_rsc_1_11_ARLOCK, xt_rsc_1_11_ARBURST,
      xt_rsc_1_11_ARSIZE, xt_rsc_1_11_ARLEN, xt_rsc_1_11_ARADDR, xt_rsc_1_11_ARID,
      xt_rsc_1_11_BREADY, xt_rsc_1_11_BVALID, xt_rsc_1_11_BUSER, xt_rsc_1_11_BRESP,
      xt_rsc_1_11_BID, xt_rsc_1_11_WREADY, xt_rsc_1_11_WVALID, xt_rsc_1_11_WUSER,
      xt_rsc_1_11_WLAST, xt_rsc_1_11_WSTRB, xt_rsc_1_11_WDATA, xt_rsc_1_11_AWREADY,
      xt_rsc_1_11_AWVALID, xt_rsc_1_11_AWUSER, xt_rsc_1_11_AWREGION, xt_rsc_1_11_AWQOS,
      xt_rsc_1_11_AWPROT, xt_rsc_1_11_AWCACHE, xt_rsc_1_11_AWLOCK, xt_rsc_1_11_AWBURST,
      xt_rsc_1_11_AWSIZE, xt_rsc_1_11_AWLEN, xt_rsc_1_11_AWADDR, xt_rsc_1_11_AWID,
      xt_rsc_triosy_1_11_lz, xt_rsc_1_12_s_tdone, xt_rsc_1_12_tr_write_done, xt_rsc_1_12_RREADY,
      xt_rsc_1_12_RVALID, xt_rsc_1_12_RUSER, xt_rsc_1_12_RLAST, xt_rsc_1_12_RRESP,
      xt_rsc_1_12_RDATA, xt_rsc_1_12_RID, xt_rsc_1_12_ARREADY, xt_rsc_1_12_ARVALID,
      xt_rsc_1_12_ARUSER, xt_rsc_1_12_ARREGION, xt_rsc_1_12_ARQOS, xt_rsc_1_12_ARPROT,
      xt_rsc_1_12_ARCACHE, xt_rsc_1_12_ARLOCK, xt_rsc_1_12_ARBURST, xt_rsc_1_12_ARSIZE,
      xt_rsc_1_12_ARLEN, xt_rsc_1_12_ARADDR, xt_rsc_1_12_ARID, xt_rsc_1_12_BREADY,
      xt_rsc_1_12_BVALID, xt_rsc_1_12_BUSER, xt_rsc_1_12_BRESP, xt_rsc_1_12_BID,
      xt_rsc_1_12_WREADY, xt_rsc_1_12_WVALID, xt_rsc_1_12_WUSER, xt_rsc_1_12_WLAST,
      xt_rsc_1_12_WSTRB, xt_rsc_1_12_WDATA, xt_rsc_1_12_AWREADY, xt_rsc_1_12_AWVALID,
      xt_rsc_1_12_AWUSER, xt_rsc_1_12_AWREGION, xt_rsc_1_12_AWQOS, xt_rsc_1_12_AWPROT,
      xt_rsc_1_12_AWCACHE, xt_rsc_1_12_AWLOCK, xt_rsc_1_12_AWBURST, xt_rsc_1_12_AWSIZE,
      xt_rsc_1_12_AWLEN, xt_rsc_1_12_AWADDR, xt_rsc_1_12_AWID, xt_rsc_triosy_1_12_lz,
      xt_rsc_1_13_s_tdone, xt_rsc_1_13_tr_write_done, xt_rsc_1_13_RREADY, xt_rsc_1_13_RVALID,
      xt_rsc_1_13_RUSER, xt_rsc_1_13_RLAST, xt_rsc_1_13_RRESP, xt_rsc_1_13_RDATA,
      xt_rsc_1_13_RID, xt_rsc_1_13_ARREADY, xt_rsc_1_13_ARVALID, xt_rsc_1_13_ARUSER,
      xt_rsc_1_13_ARREGION, xt_rsc_1_13_ARQOS, xt_rsc_1_13_ARPROT, xt_rsc_1_13_ARCACHE,
      xt_rsc_1_13_ARLOCK, xt_rsc_1_13_ARBURST, xt_rsc_1_13_ARSIZE, xt_rsc_1_13_ARLEN,
      xt_rsc_1_13_ARADDR, xt_rsc_1_13_ARID, xt_rsc_1_13_BREADY, xt_rsc_1_13_BVALID,
      xt_rsc_1_13_BUSER, xt_rsc_1_13_BRESP, xt_rsc_1_13_BID, xt_rsc_1_13_WREADY,
      xt_rsc_1_13_WVALID, xt_rsc_1_13_WUSER, xt_rsc_1_13_WLAST, xt_rsc_1_13_WSTRB,
      xt_rsc_1_13_WDATA, xt_rsc_1_13_AWREADY, xt_rsc_1_13_AWVALID, xt_rsc_1_13_AWUSER,
      xt_rsc_1_13_AWREGION, xt_rsc_1_13_AWQOS, xt_rsc_1_13_AWPROT, xt_rsc_1_13_AWCACHE,
      xt_rsc_1_13_AWLOCK, xt_rsc_1_13_AWBURST, xt_rsc_1_13_AWSIZE, xt_rsc_1_13_AWLEN,
      xt_rsc_1_13_AWADDR, xt_rsc_1_13_AWID, xt_rsc_triosy_1_13_lz, xt_rsc_1_14_s_tdone,
      xt_rsc_1_14_tr_write_done, xt_rsc_1_14_RREADY, xt_rsc_1_14_RVALID, xt_rsc_1_14_RUSER,
      xt_rsc_1_14_RLAST, xt_rsc_1_14_RRESP, xt_rsc_1_14_RDATA, xt_rsc_1_14_RID, xt_rsc_1_14_ARREADY,
      xt_rsc_1_14_ARVALID, xt_rsc_1_14_ARUSER, xt_rsc_1_14_ARREGION, xt_rsc_1_14_ARQOS,
      xt_rsc_1_14_ARPROT, xt_rsc_1_14_ARCACHE, xt_rsc_1_14_ARLOCK, xt_rsc_1_14_ARBURST,
      xt_rsc_1_14_ARSIZE, xt_rsc_1_14_ARLEN, xt_rsc_1_14_ARADDR, xt_rsc_1_14_ARID,
      xt_rsc_1_14_BREADY, xt_rsc_1_14_BVALID, xt_rsc_1_14_BUSER, xt_rsc_1_14_BRESP,
      xt_rsc_1_14_BID, xt_rsc_1_14_WREADY, xt_rsc_1_14_WVALID, xt_rsc_1_14_WUSER,
      xt_rsc_1_14_WLAST, xt_rsc_1_14_WSTRB, xt_rsc_1_14_WDATA, xt_rsc_1_14_AWREADY,
      xt_rsc_1_14_AWVALID, xt_rsc_1_14_AWUSER, xt_rsc_1_14_AWREGION, xt_rsc_1_14_AWQOS,
      xt_rsc_1_14_AWPROT, xt_rsc_1_14_AWCACHE, xt_rsc_1_14_AWLOCK, xt_rsc_1_14_AWBURST,
      xt_rsc_1_14_AWSIZE, xt_rsc_1_14_AWLEN, xt_rsc_1_14_AWADDR, xt_rsc_1_14_AWID,
      xt_rsc_triosy_1_14_lz, xt_rsc_1_15_s_tdone, xt_rsc_1_15_tr_write_done, xt_rsc_1_15_RREADY,
      xt_rsc_1_15_RVALID, xt_rsc_1_15_RUSER, xt_rsc_1_15_RLAST, xt_rsc_1_15_RRESP,
      xt_rsc_1_15_RDATA, xt_rsc_1_15_RID, xt_rsc_1_15_ARREADY, xt_rsc_1_15_ARVALID,
      xt_rsc_1_15_ARUSER, xt_rsc_1_15_ARREGION, xt_rsc_1_15_ARQOS, xt_rsc_1_15_ARPROT,
      xt_rsc_1_15_ARCACHE, xt_rsc_1_15_ARLOCK, xt_rsc_1_15_ARBURST, xt_rsc_1_15_ARSIZE,
      xt_rsc_1_15_ARLEN, xt_rsc_1_15_ARADDR, xt_rsc_1_15_ARID, xt_rsc_1_15_BREADY,
      xt_rsc_1_15_BVALID, xt_rsc_1_15_BUSER, xt_rsc_1_15_BRESP, xt_rsc_1_15_BID,
      xt_rsc_1_15_WREADY, xt_rsc_1_15_WVALID, xt_rsc_1_15_WUSER, xt_rsc_1_15_WLAST,
      xt_rsc_1_15_WSTRB, xt_rsc_1_15_WDATA, xt_rsc_1_15_AWREADY, xt_rsc_1_15_AWVALID,
      xt_rsc_1_15_AWUSER, xt_rsc_1_15_AWREGION, xt_rsc_1_15_AWQOS, xt_rsc_1_15_AWPROT,
      xt_rsc_1_15_AWCACHE, xt_rsc_1_15_AWLOCK, xt_rsc_1_15_AWBURST, xt_rsc_1_15_AWSIZE,
      xt_rsc_1_15_AWLEN, xt_rsc_1_15_AWADDR, xt_rsc_1_15_AWID, xt_rsc_triosy_1_15_lz,
      xt_rsc_1_16_s_tdone, xt_rsc_1_16_tr_write_done, xt_rsc_1_16_RREADY, xt_rsc_1_16_RVALID,
      xt_rsc_1_16_RUSER, xt_rsc_1_16_RLAST, xt_rsc_1_16_RRESP, xt_rsc_1_16_RDATA,
      xt_rsc_1_16_RID, xt_rsc_1_16_ARREADY, xt_rsc_1_16_ARVALID, xt_rsc_1_16_ARUSER,
      xt_rsc_1_16_ARREGION, xt_rsc_1_16_ARQOS, xt_rsc_1_16_ARPROT, xt_rsc_1_16_ARCACHE,
      xt_rsc_1_16_ARLOCK, xt_rsc_1_16_ARBURST, xt_rsc_1_16_ARSIZE, xt_rsc_1_16_ARLEN,
      xt_rsc_1_16_ARADDR, xt_rsc_1_16_ARID, xt_rsc_1_16_BREADY, xt_rsc_1_16_BVALID,
      xt_rsc_1_16_BUSER, xt_rsc_1_16_BRESP, xt_rsc_1_16_BID, xt_rsc_1_16_WREADY,
      xt_rsc_1_16_WVALID, xt_rsc_1_16_WUSER, xt_rsc_1_16_WLAST, xt_rsc_1_16_WSTRB,
      xt_rsc_1_16_WDATA, xt_rsc_1_16_AWREADY, xt_rsc_1_16_AWVALID, xt_rsc_1_16_AWUSER,
      xt_rsc_1_16_AWREGION, xt_rsc_1_16_AWQOS, xt_rsc_1_16_AWPROT, xt_rsc_1_16_AWCACHE,
      xt_rsc_1_16_AWLOCK, xt_rsc_1_16_AWBURST, xt_rsc_1_16_AWSIZE, xt_rsc_1_16_AWLEN,
      xt_rsc_1_16_AWADDR, xt_rsc_1_16_AWID, xt_rsc_triosy_1_16_lz, xt_rsc_1_17_s_tdone,
      xt_rsc_1_17_tr_write_done, xt_rsc_1_17_RREADY, xt_rsc_1_17_RVALID, xt_rsc_1_17_RUSER,
      xt_rsc_1_17_RLAST, xt_rsc_1_17_RRESP, xt_rsc_1_17_RDATA, xt_rsc_1_17_RID, xt_rsc_1_17_ARREADY,
      xt_rsc_1_17_ARVALID, xt_rsc_1_17_ARUSER, xt_rsc_1_17_ARREGION, xt_rsc_1_17_ARQOS,
      xt_rsc_1_17_ARPROT, xt_rsc_1_17_ARCACHE, xt_rsc_1_17_ARLOCK, xt_rsc_1_17_ARBURST,
      xt_rsc_1_17_ARSIZE, xt_rsc_1_17_ARLEN, xt_rsc_1_17_ARADDR, xt_rsc_1_17_ARID,
      xt_rsc_1_17_BREADY, xt_rsc_1_17_BVALID, xt_rsc_1_17_BUSER, xt_rsc_1_17_BRESP,
      xt_rsc_1_17_BID, xt_rsc_1_17_WREADY, xt_rsc_1_17_WVALID, xt_rsc_1_17_WUSER,
      xt_rsc_1_17_WLAST, xt_rsc_1_17_WSTRB, xt_rsc_1_17_WDATA, xt_rsc_1_17_AWREADY,
      xt_rsc_1_17_AWVALID, xt_rsc_1_17_AWUSER, xt_rsc_1_17_AWREGION, xt_rsc_1_17_AWQOS,
      xt_rsc_1_17_AWPROT, xt_rsc_1_17_AWCACHE, xt_rsc_1_17_AWLOCK, xt_rsc_1_17_AWBURST,
      xt_rsc_1_17_AWSIZE, xt_rsc_1_17_AWLEN, xt_rsc_1_17_AWADDR, xt_rsc_1_17_AWID,
      xt_rsc_triosy_1_17_lz, xt_rsc_1_18_s_tdone, xt_rsc_1_18_tr_write_done, xt_rsc_1_18_RREADY,
      xt_rsc_1_18_RVALID, xt_rsc_1_18_RUSER, xt_rsc_1_18_RLAST, xt_rsc_1_18_RRESP,
      xt_rsc_1_18_RDATA, xt_rsc_1_18_RID, xt_rsc_1_18_ARREADY, xt_rsc_1_18_ARVALID,
      xt_rsc_1_18_ARUSER, xt_rsc_1_18_ARREGION, xt_rsc_1_18_ARQOS, xt_rsc_1_18_ARPROT,
      xt_rsc_1_18_ARCACHE, xt_rsc_1_18_ARLOCK, xt_rsc_1_18_ARBURST, xt_rsc_1_18_ARSIZE,
      xt_rsc_1_18_ARLEN, xt_rsc_1_18_ARADDR, xt_rsc_1_18_ARID, xt_rsc_1_18_BREADY,
      xt_rsc_1_18_BVALID, xt_rsc_1_18_BUSER, xt_rsc_1_18_BRESP, xt_rsc_1_18_BID,
      xt_rsc_1_18_WREADY, xt_rsc_1_18_WVALID, xt_rsc_1_18_WUSER, xt_rsc_1_18_WLAST,
      xt_rsc_1_18_WSTRB, xt_rsc_1_18_WDATA, xt_rsc_1_18_AWREADY, xt_rsc_1_18_AWVALID,
      xt_rsc_1_18_AWUSER, xt_rsc_1_18_AWREGION, xt_rsc_1_18_AWQOS, xt_rsc_1_18_AWPROT,
      xt_rsc_1_18_AWCACHE, xt_rsc_1_18_AWLOCK, xt_rsc_1_18_AWBURST, xt_rsc_1_18_AWSIZE,
      xt_rsc_1_18_AWLEN, xt_rsc_1_18_AWADDR, xt_rsc_1_18_AWID, xt_rsc_triosy_1_18_lz,
      xt_rsc_1_19_s_tdone, xt_rsc_1_19_tr_write_done, xt_rsc_1_19_RREADY, xt_rsc_1_19_RVALID,
      xt_rsc_1_19_RUSER, xt_rsc_1_19_RLAST, xt_rsc_1_19_RRESP, xt_rsc_1_19_RDATA,
      xt_rsc_1_19_RID, xt_rsc_1_19_ARREADY, xt_rsc_1_19_ARVALID, xt_rsc_1_19_ARUSER,
      xt_rsc_1_19_ARREGION, xt_rsc_1_19_ARQOS, xt_rsc_1_19_ARPROT, xt_rsc_1_19_ARCACHE,
      xt_rsc_1_19_ARLOCK, xt_rsc_1_19_ARBURST, xt_rsc_1_19_ARSIZE, xt_rsc_1_19_ARLEN,
      xt_rsc_1_19_ARADDR, xt_rsc_1_19_ARID, xt_rsc_1_19_BREADY, xt_rsc_1_19_BVALID,
      xt_rsc_1_19_BUSER, xt_rsc_1_19_BRESP, xt_rsc_1_19_BID, xt_rsc_1_19_WREADY,
      xt_rsc_1_19_WVALID, xt_rsc_1_19_WUSER, xt_rsc_1_19_WLAST, xt_rsc_1_19_WSTRB,
      xt_rsc_1_19_WDATA, xt_rsc_1_19_AWREADY, xt_rsc_1_19_AWVALID, xt_rsc_1_19_AWUSER,
      xt_rsc_1_19_AWREGION, xt_rsc_1_19_AWQOS, xt_rsc_1_19_AWPROT, xt_rsc_1_19_AWCACHE,
      xt_rsc_1_19_AWLOCK, xt_rsc_1_19_AWBURST, xt_rsc_1_19_AWSIZE, xt_rsc_1_19_AWLEN,
      xt_rsc_1_19_AWADDR, xt_rsc_1_19_AWID, xt_rsc_triosy_1_19_lz, xt_rsc_1_20_s_tdone,
      xt_rsc_1_20_tr_write_done, xt_rsc_1_20_RREADY, xt_rsc_1_20_RVALID, xt_rsc_1_20_RUSER,
      xt_rsc_1_20_RLAST, xt_rsc_1_20_RRESP, xt_rsc_1_20_RDATA, xt_rsc_1_20_RID, xt_rsc_1_20_ARREADY,
      xt_rsc_1_20_ARVALID, xt_rsc_1_20_ARUSER, xt_rsc_1_20_ARREGION, xt_rsc_1_20_ARQOS,
      xt_rsc_1_20_ARPROT, xt_rsc_1_20_ARCACHE, xt_rsc_1_20_ARLOCK, xt_rsc_1_20_ARBURST,
      xt_rsc_1_20_ARSIZE, xt_rsc_1_20_ARLEN, xt_rsc_1_20_ARADDR, xt_rsc_1_20_ARID,
      xt_rsc_1_20_BREADY, xt_rsc_1_20_BVALID, xt_rsc_1_20_BUSER, xt_rsc_1_20_BRESP,
      xt_rsc_1_20_BID, xt_rsc_1_20_WREADY, xt_rsc_1_20_WVALID, xt_rsc_1_20_WUSER,
      xt_rsc_1_20_WLAST, xt_rsc_1_20_WSTRB, xt_rsc_1_20_WDATA, xt_rsc_1_20_AWREADY,
      xt_rsc_1_20_AWVALID, xt_rsc_1_20_AWUSER, xt_rsc_1_20_AWREGION, xt_rsc_1_20_AWQOS,
      xt_rsc_1_20_AWPROT, xt_rsc_1_20_AWCACHE, xt_rsc_1_20_AWLOCK, xt_rsc_1_20_AWBURST,
      xt_rsc_1_20_AWSIZE, xt_rsc_1_20_AWLEN, xt_rsc_1_20_AWADDR, xt_rsc_1_20_AWID,
      xt_rsc_triosy_1_20_lz, xt_rsc_1_21_s_tdone, xt_rsc_1_21_tr_write_done, xt_rsc_1_21_RREADY,
      xt_rsc_1_21_RVALID, xt_rsc_1_21_RUSER, xt_rsc_1_21_RLAST, xt_rsc_1_21_RRESP,
      xt_rsc_1_21_RDATA, xt_rsc_1_21_RID, xt_rsc_1_21_ARREADY, xt_rsc_1_21_ARVALID,
      xt_rsc_1_21_ARUSER, xt_rsc_1_21_ARREGION, xt_rsc_1_21_ARQOS, xt_rsc_1_21_ARPROT,
      xt_rsc_1_21_ARCACHE, xt_rsc_1_21_ARLOCK, xt_rsc_1_21_ARBURST, xt_rsc_1_21_ARSIZE,
      xt_rsc_1_21_ARLEN, xt_rsc_1_21_ARADDR, xt_rsc_1_21_ARID, xt_rsc_1_21_BREADY,
      xt_rsc_1_21_BVALID, xt_rsc_1_21_BUSER, xt_rsc_1_21_BRESP, xt_rsc_1_21_BID,
      xt_rsc_1_21_WREADY, xt_rsc_1_21_WVALID, xt_rsc_1_21_WUSER, xt_rsc_1_21_WLAST,
      xt_rsc_1_21_WSTRB, xt_rsc_1_21_WDATA, xt_rsc_1_21_AWREADY, xt_rsc_1_21_AWVALID,
      xt_rsc_1_21_AWUSER, xt_rsc_1_21_AWREGION, xt_rsc_1_21_AWQOS, xt_rsc_1_21_AWPROT,
      xt_rsc_1_21_AWCACHE, xt_rsc_1_21_AWLOCK, xt_rsc_1_21_AWBURST, xt_rsc_1_21_AWSIZE,
      xt_rsc_1_21_AWLEN, xt_rsc_1_21_AWADDR, xt_rsc_1_21_AWID, xt_rsc_triosy_1_21_lz,
      xt_rsc_1_22_s_tdone, xt_rsc_1_22_tr_write_done, xt_rsc_1_22_RREADY, xt_rsc_1_22_RVALID,
      xt_rsc_1_22_RUSER, xt_rsc_1_22_RLAST, xt_rsc_1_22_RRESP, xt_rsc_1_22_RDATA,
      xt_rsc_1_22_RID, xt_rsc_1_22_ARREADY, xt_rsc_1_22_ARVALID, xt_rsc_1_22_ARUSER,
      xt_rsc_1_22_ARREGION, xt_rsc_1_22_ARQOS, xt_rsc_1_22_ARPROT, xt_rsc_1_22_ARCACHE,
      xt_rsc_1_22_ARLOCK, xt_rsc_1_22_ARBURST, xt_rsc_1_22_ARSIZE, xt_rsc_1_22_ARLEN,
      xt_rsc_1_22_ARADDR, xt_rsc_1_22_ARID, xt_rsc_1_22_BREADY, xt_rsc_1_22_BVALID,
      xt_rsc_1_22_BUSER, xt_rsc_1_22_BRESP, xt_rsc_1_22_BID, xt_rsc_1_22_WREADY,
      xt_rsc_1_22_WVALID, xt_rsc_1_22_WUSER, xt_rsc_1_22_WLAST, xt_rsc_1_22_WSTRB,
      xt_rsc_1_22_WDATA, xt_rsc_1_22_AWREADY, xt_rsc_1_22_AWVALID, xt_rsc_1_22_AWUSER,
      xt_rsc_1_22_AWREGION, xt_rsc_1_22_AWQOS, xt_rsc_1_22_AWPROT, xt_rsc_1_22_AWCACHE,
      xt_rsc_1_22_AWLOCK, xt_rsc_1_22_AWBURST, xt_rsc_1_22_AWSIZE, xt_rsc_1_22_AWLEN,
      xt_rsc_1_22_AWADDR, xt_rsc_1_22_AWID, xt_rsc_triosy_1_22_lz, xt_rsc_1_23_s_tdone,
      xt_rsc_1_23_tr_write_done, xt_rsc_1_23_RREADY, xt_rsc_1_23_RVALID, xt_rsc_1_23_RUSER,
      xt_rsc_1_23_RLAST, xt_rsc_1_23_RRESP, xt_rsc_1_23_RDATA, xt_rsc_1_23_RID, xt_rsc_1_23_ARREADY,
      xt_rsc_1_23_ARVALID, xt_rsc_1_23_ARUSER, xt_rsc_1_23_ARREGION, xt_rsc_1_23_ARQOS,
      xt_rsc_1_23_ARPROT, xt_rsc_1_23_ARCACHE, xt_rsc_1_23_ARLOCK, xt_rsc_1_23_ARBURST,
      xt_rsc_1_23_ARSIZE, xt_rsc_1_23_ARLEN, xt_rsc_1_23_ARADDR, xt_rsc_1_23_ARID,
      xt_rsc_1_23_BREADY, xt_rsc_1_23_BVALID, xt_rsc_1_23_BUSER, xt_rsc_1_23_BRESP,
      xt_rsc_1_23_BID, xt_rsc_1_23_WREADY, xt_rsc_1_23_WVALID, xt_rsc_1_23_WUSER,
      xt_rsc_1_23_WLAST, xt_rsc_1_23_WSTRB, xt_rsc_1_23_WDATA, xt_rsc_1_23_AWREADY,
      xt_rsc_1_23_AWVALID, xt_rsc_1_23_AWUSER, xt_rsc_1_23_AWREGION, xt_rsc_1_23_AWQOS,
      xt_rsc_1_23_AWPROT, xt_rsc_1_23_AWCACHE, xt_rsc_1_23_AWLOCK, xt_rsc_1_23_AWBURST,
      xt_rsc_1_23_AWSIZE, xt_rsc_1_23_AWLEN, xt_rsc_1_23_AWADDR, xt_rsc_1_23_AWID,
      xt_rsc_triosy_1_23_lz, xt_rsc_1_24_s_tdone, xt_rsc_1_24_tr_write_done, xt_rsc_1_24_RREADY,
      xt_rsc_1_24_RVALID, xt_rsc_1_24_RUSER, xt_rsc_1_24_RLAST, xt_rsc_1_24_RRESP,
      xt_rsc_1_24_RDATA, xt_rsc_1_24_RID, xt_rsc_1_24_ARREADY, xt_rsc_1_24_ARVALID,
      xt_rsc_1_24_ARUSER, xt_rsc_1_24_ARREGION, xt_rsc_1_24_ARQOS, xt_rsc_1_24_ARPROT,
      xt_rsc_1_24_ARCACHE, xt_rsc_1_24_ARLOCK, xt_rsc_1_24_ARBURST, xt_rsc_1_24_ARSIZE,
      xt_rsc_1_24_ARLEN, xt_rsc_1_24_ARADDR, xt_rsc_1_24_ARID, xt_rsc_1_24_BREADY,
      xt_rsc_1_24_BVALID, xt_rsc_1_24_BUSER, xt_rsc_1_24_BRESP, xt_rsc_1_24_BID,
      xt_rsc_1_24_WREADY, xt_rsc_1_24_WVALID, xt_rsc_1_24_WUSER, xt_rsc_1_24_WLAST,
      xt_rsc_1_24_WSTRB, xt_rsc_1_24_WDATA, xt_rsc_1_24_AWREADY, xt_rsc_1_24_AWVALID,
      xt_rsc_1_24_AWUSER, xt_rsc_1_24_AWREGION, xt_rsc_1_24_AWQOS, xt_rsc_1_24_AWPROT,
      xt_rsc_1_24_AWCACHE, xt_rsc_1_24_AWLOCK, xt_rsc_1_24_AWBURST, xt_rsc_1_24_AWSIZE,
      xt_rsc_1_24_AWLEN, xt_rsc_1_24_AWADDR, xt_rsc_1_24_AWID, xt_rsc_triosy_1_24_lz,
      xt_rsc_1_25_s_tdone, xt_rsc_1_25_tr_write_done, xt_rsc_1_25_RREADY, xt_rsc_1_25_RVALID,
      xt_rsc_1_25_RUSER, xt_rsc_1_25_RLAST, xt_rsc_1_25_RRESP, xt_rsc_1_25_RDATA,
      xt_rsc_1_25_RID, xt_rsc_1_25_ARREADY, xt_rsc_1_25_ARVALID, xt_rsc_1_25_ARUSER,
      xt_rsc_1_25_ARREGION, xt_rsc_1_25_ARQOS, xt_rsc_1_25_ARPROT, xt_rsc_1_25_ARCACHE,
      xt_rsc_1_25_ARLOCK, xt_rsc_1_25_ARBURST, xt_rsc_1_25_ARSIZE, xt_rsc_1_25_ARLEN,
      xt_rsc_1_25_ARADDR, xt_rsc_1_25_ARID, xt_rsc_1_25_BREADY, xt_rsc_1_25_BVALID,
      xt_rsc_1_25_BUSER, xt_rsc_1_25_BRESP, xt_rsc_1_25_BID, xt_rsc_1_25_WREADY,
      xt_rsc_1_25_WVALID, xt_rsc_1_25_WUSER, xt_rsc_1_25_WLAST, xt_rsc_1_25_WSTRB,
      xt_rsc_1_25_WDATA, xt_rsc_1_25_AWREADY, xt_rsc_1_25_AWVALID, xt_rsc_1_25_AWUSER,
      xt_rsc_1_25_AWREGION, xt_rsc_1_25_AWQOS, xt_rsc_1_25_AWPROT, xt_rsc_1_25_AWCACHE,
      xt_rsc_1_25_AWLOCK, xt_rsc_1_25_AWBURST, xt_rsc_1_25_AWSIZE, xt_rsc_1_25_AWLEN,
      xt_rsc_1_25_AWADDR, xt_rsc_1_25_AWID, xt_rsc_triosy_1_25_lz, xt_rsc_1_26_s_tdone,
      xt_rsc_1_26_tr_write_done, xt_rsc_1_26_RREADY, xt_rsc_1_26_RVALID, xt_rsc_1_26_RUSER,
      xt_rsc_1_26_RLAST, xt_rsc_1_26_RRESP, xt_rsc_1_26_RDATA, xt_rsc_1_26_RID, xt_rsc_1_26_ARREADY,
      xt_rsc_1_26_ARVALID, xt_rsc_1_26_ARUSER, xt_rsc_1_26_ARREGION, xt_rsc_1_26_ARQOS,
      xt_rsc_1_26_ARPROT, xt_rsc_1_26_ARCACHE, xt_rsc_1_26_ARLOCK, xt_rsc_1_26_ARBURST,
      xt_rsc_1_26_ARSIZE, xt_rsc_1_26_ARLEN, xt_rsc_1_26_ARADDR, xt_rsc_1_26_ARID,
      xt_rsc_1_26_BREADY, xt_rsc_1_26_BVALID, xt_rsc_1_26_BUSER, xt_rsc_1_26_BRESP,
      xt_rsc_1_26_BID, xt_rsc_1_26_WREADY, xt_rsc_1_26_WVALID, xt_rsc_1_26_WUSER,
      xt_rsc_1_26_WLAST, xt_rsc_1_26_WSTRB, xt_rsc_1_26_WDATA, xt_rsc_1_26_AWREADY,
      xt_rsc_1_26_AWVALID, xt_rsc_1_26_AWUSER, xt_rsc_1_26_AWREGION, xt_rsc_1_26_AWQOS,
      xt_rsc_1_26_AWPROT, xt_rsc_1_26_AWCACHE, xt_rsc_1_26_AWLOCK, xt_rsc_1_26_AWBURST,
      xt_rsc_1_26_AWSIZE, xt_rsc_1_26_AWLEN, xt_rsc_1_26_AWADDR, xt_rsc_1_26_AWID,
      xt_rsc_triosy_1_26_lz, xt_rsc_1_27_s_tdone, xt_rsc_1_27_tr_write_done, xt_rsc_1_27_RREADY,
      xt_rsc_1_27_RVALID, xt_rsc_1_27_RUSER, xt_rsc_1_27_RLAST, xt_rsc_1_27_RRESP,
      xt_rsc_1_27_RDATA, xt_rsc_1_27_RID, xt_rsc_1_27_ARREADY, xt_rsc_1_27_ARVALID,
      xt_rsc_1_27_ARUSER, xt_rsc_1_27_ARREGION, xt_rsc_1_27_ARQOS, xt_rsc_1_27_ARPROT,
      xt_rsc_1_27_ARCACHE, xt_rsc_1_27_ARLOCK, xt_rsc_1_27_ARBURST, xt_rsc_1_27_ARSIZE,
      xt_rsc_1_27_ARLEN, xt_rsc_1_27_ARADDR, xt_rsc_1_27_ARID, xt_rsc_1_27_BREADY,
      xt_rsc_1_27_BVALID, xt_rsc_1_27_BUSER, xt_rsc_1_27_BRESP, xt_rsc_1_27_BID,
      xt_rsc_1_27_WREADY, xt_rsc_1_27_WVALID, xt_rsc_1_27_WUSER, xt_rsc_1_27_WLAST,
      xt_rsc_1_27_WSTRB, xt_rsc_1_27_WDATA, xt_rsc_1_27_AWREADY, xt_rsc_1_27_AWVALID,
      xt_rsc_1_27_AWUSER, xt_rsc_1_27_AWREGION, xt_rsc_1_27_AWQOS, xt_rsc_1_27_AWPROT,
      xt_rsc_1_27_AWCACHE, xt_rsc_1_27_AWLOCK, xt_rsc_1_27_AWBURST, xt_rsc_1_27_AWSIZE,
      xt_rsc_1_27_AWLEN, xt_rsc_1_27_AWADDR, xt_rsc_1_27_AWID, xt_rsc_triosy_1_27_lz,
      xt_rsc_1_28_s_tdone, xt_rsc_1_28_tr_write_done, xt_rsc_1_28_RREADY, xt_rsc_1_28_RVALID,
      xt_rsc_1_28_RUSER, xt_rsc_1_28_RLAST, xt_rsc_1_28_RRESP, xt_rsc_1_28_RDATA,
      xt_rsc_1_28_RID, xt_rsc_1_28_ARREADY, xt_rsc_1_28_ARVALID, xt_rsc_1_28_ARUSER,
      xt_rsc_1_28_ARREGION, xt_rsc_1_28_ARQOS, xt_rsc_1_28_ARPROT, xt_rsc_1_28_ARCACHE,
      xt_rsc_1_28_ARLOCK, xt_rsc_1_28_ARBURST, xt_rsc_1_28_ARSIZE, xt_rsc_1_28_ARLEN,
      xt_rsc_1_28_ARADDR, xt_rsc_1_28_ARID, xt_rsc_1_28_BREADY, xt_rsc_1_28_BVALID,
      xt_rsc_1_28_BUSER, xt_rsc_1_28_BRESP, xt_rsc_1_28_BID, xt_rsc_1_28_WREADY,
      xt_rsc_1_28_WVALID, xt_rsc_1_28_WUSER, xt_rsc_1_28_WLAST, xt_rsc_1_28_WSTRB,
      xt_rsc_1_28_WDATA, xt_rsc_1_28_AWREADY, xt_rsc_1_28_AWVALID, xt_rsc_1_28_AWUSER,
      xt_rsc_1_28_AWREGION, xt_rsc_1_28_AWQOS, xt_rsc_1_28_AWPROT, xt_rsc_1_28_AWCACHE,
      xt_rsc_1_28_AWLOCK, xt_rsc_1_28_AWBURST, xt_rsc_1_28_AWSIZE, xt_rsc_1_28_AWLEN,
      xt_rsc_1_28_AWADDR, xt_rsc_1_28_AWID, xt_rsc_triosy_1_28_lz, xt_rsc_1_29_s_tdone,
      xt_rsc_1_29_tr_write_done, xt_rsc_1_29_RREADY, xt_rsc_1_29_RVALID, xt_rsc_1_29_RUSER,
      xt_rsc_1_29_RLAST, xt_rsc_1_29_RRESP, xt_rsc_1_29_RDATA, xt_rsc_1_29_RID, xt_rsc_1_29_ARREADY,
      xt_rsc_1_29_ARVALID, xt_rsc_1_29_ARUSER, xt_rsc_1_29_ARREGION, xt_rsc_1_29_ARQOS,
      xt_rsc_1_29_ARPROT, xt_rsc_1_29_ARCACHE, xt_rsc_1_29_ARLOCK, xt_rsc_1_29_ARBURST,
      xt_rsc_1_29_ARSIZE, xt_rsc_1_29_ARLEN, xt_rsc_1_29_ARADDR, xt_rsc_1_29_ARID,
      xt_rsc_1_29_BREADY, xt_rsc_1_29_BVALID, xt_rsc_1_29_BUSER, xt_rsc_1_29_BRESP,
      xt_rsc_1_29_BID, xt_rsc_1_29_WREADY, xt_rsc_1_29_WVALID, xt_rsc_1_29_WUSER,
      xt_rsc_1_29_WLAST, xt_rsc_1_29_WSTRB, xt_rsc_1_29_WDATA, xt_rsc_1_29_AWREADY,
      xt_rsc_1_29_AWVALID, xt_rsc_1_29_AWUSER, xt_rsc_1_29_AWREGION, xt_rsc_1_29_AWQOS,
      xt_rsc_1_29_AWPROT, xt_rsc_1_29_AWCACHE, xt_rsc_1_29_AWLOCK, xt_rsc_1_29_AWBURST,
      xt_rsc_1_29_AWSIZE, xt_rsc_1_29_AWLEN, xt_rsc_1_29_AWADDR, xt_rsc_1_29_AWID,
      xt_rsc_triosy_1_29_lz, xt_rsc_1_30_s_tdone, xt_rsc_1_30_tr_write_done, xt_rsc_1_30_RREADY,
      xt_rsc_1_30_RVALID, xt_rsc_1_30_RUSER, xt_rsc_1_30_RLAST, xt_rsc_1_30_RRESP,
      xt_rsc_1_30_RDATA, xt_rsc_1_30_RID, xt_rsc_1_30_ARREADY, xt_rsc_1_30_ARVALID,
      xt_rsc_1_30_ARUSER, xt_rsc_1_30_ARREGION, xt_rsc_1_30_ARQOS, xt_rsc_1_30_ARPROT,
      xt_rsc_1_30_ARCACHE, xt_rsc_1_30_ARLOCK, xt_rsc_1_30_ARBURST, xt_rsc_1_30_ARSIZE,
      xt_rsc_1_30_ARLEN, xt_rsc_1_30_ARADDR, xt_rsc_1_30_ARID, xt_rsc_1_30_BREADY,
      xt_rsc_1_30_BVALID, xt_rsc_1_30_BUSER, xt_rsc_1_30_BRESP, xt_rsc_1_30_BID,
      xt_rsc_1_30_WREADY, xt_rsc_1_30_WVALID, xt_rsc_1_30_WUSER, xt_rsc_1_30_WLAST,
      xt_rsc_1_30_WSTRB, xt_rsc_1_30_WDATA, xt_rsc_1_30_AWREADY, xt_rsc_1_30_AWVALID,
      xt_rsc_1_30_AWUSER, xt_rsc_1_30_AWREGION, xt_rsc_1_30_AWQOS, xt_rsc_1_30_AWPROT,
      xt_rsc_1_30_AWCACHE, xt_rsc_1_30_AWLOCK, xt_rsc_1_30_AWBURST, xt_rsc_1_30_AWSIZE,
      xt_rsc_1_30_AWLEN, xt_rsc_1_30_AWADDR, xt_rsc_1_30_AWID, xt_rsc_triosy_1_30_lz,
      xt_rsc_1_31_s_tdone, xt_rsc_1_31_tr_write_done, xt_rsc_1_31_RREADY, xt_rsc_1_31_RVALID,
      xt_rsc_1_31_RUSER, xt_rsc_1_31_RLAST, xt_rsc_1_31_RRESP, xt_rsc_1_31_RDATA,
      xt_rsc_1_31_RID, xt_rsc_1_31_ARREADY, xt_rsc_1_31_ARVALID, xt_rsc_1_31_ARUSER,
      xt_rsc_1_31_ARREGION, xt_rsc_1_31_ARQOS, xt_rsc_1_31_ARPROT, xt_rsc_1_31_ARCACHE,
      xt_rsc_1_31_ARLOCK, xt_rsc_1_31_ARBURST, xt_rsc_1_31_ARSIZE, xt_rsc_1_31_ARLEN,
      xt_rsc_1_31_ARADDR, xt_rsc_1_31_ARID, xt_rsc_1_31_BREADY, xt_rsc_1_31_BVALID,
      xt_rsc_1_31_BUSER, xt_rsc_1_31_BRESP, xt_rsc_1_31_BID, xt_rsc_1_31_WREADY,
      xt_rsc_1_31_WVALID, xt_rsc_1_31_WUSER, xt_rsc_1_31_WLAST, xt_rsc_1_31_WSTRB,
      xt_rsc_1_31_WDATA, xt_rsc_1_31_AWREADY, xt_rsc_1_31_AWVALID, xt_rsc_1_31_AWUSER,
      xt_rsc_1_31_AWREGION, xt_rsc_1_31_AWQOS, xt_rsc_1_31_AWPROT, xt_rsc_1_31_AWCACHE,
      xt_rsc_1_31_AWLOCK, xt_rsc_1_31_AWBURST, xt_rsc_1_31_AWSIZE, xt_rsc_1_31_AWLEN,
      xt_rsc_1_31_AWADDR, xt_rsc_1_31_AWID, xt_rsc_triosy_1_31_lz, p_rsc_dat, p_rsc_triosy_lz,
      r_rsc_triosy_lz, twiddle_rsc_0_0_s_tdone, twiddle_rsc_0_0_tr_write_done, twiddle_rsc_0_0_RREADY,
      twiddle_rsc_0_0_RVALID, twiddle_rsc_0_0_RUSER, twiddle_rsc_0_0_RLAST, twiddle_rsc_0_0_RRESP,
      twiddle_rsc_0_0_RDATA, twiddle_rsc_0_0_RID, twiddle_rsc_0_0_ARREADY, twiddle_rsc_0_0_ARVALID,
      twiddle_rsc_0_0_ARUSER, twiddle_rsc_0_0_ARREGION, twiddle_rsc_0_0_ARQOS, twiddle_rsc_0_0_ARPROT,
      twiddle_rsc_0_0_ARCACHE, twiddle_rsc_0_0_ARLOCK, twiddle_rsc_0_0_ARBURST, twiddle_rsc_0_0_ARSIZE,
      twiddle_rsc_0_0_ARLEN, twiddle_rsc_0_0_ARADDR, twiddle_rsc_0_0_ARID, twiddle_rsc_0_0_BREADY,
      twiddle_rsc_0_0_BVALID, twiddle_rsc_0_0_BUSER, twiddle_rsc_0_0_BRESP, twiddle_rsc_0_0_BID,
      twiddle_rsc_0_0_WREADY, twiddle_rsc_0_0_WVALID, twiddle_rsc_0_0_WUSER, twiddle_rsc_0_0_WLAST,
      twiddle_rsc_0_0_WSTRB, twiddle_rsc_0_0_WDATA, twiddle_rsc_0_0_AWREADY, twiddle_rsc_0_0_AWVALID,
      twiddle_rsc_0_0_AWUSER, twiddle_rsc_0_0_AWREGION, twiddle_rsc_0_0_AWQOS, twiddle_rsc_0_0_AWPROT,
      twiddle_rsc_0_0_AWCACHE, twiddle_rsc_0_0_AWLOCK, twiddle_rsc_0_0_AWBURST, twiddle_rsc_0_0_AWSIZE,
      twiddle_rsc_0_0_AWLEN, twiddle_rsc_0_0_AWADDR, twiddle_rsc_0_0_AWID, twiddle_rsc_triosy_0_0_lz,
      twiddle_rsc_0_1_s_tdone, twiddle_rsc_0_1_tr_write_done, twiddle_rsc_0_1_RREADY,
      twiddle_rsc_0_1_RVALID, twiddle_rsc_0_1_RUSER, twiddle_rsc_0_1_RLAST, twiddle_rsc_0_1_RRESP,
      twiddle_rsc_0_1_RDATA, twiddle_rsc_0_1_RID, twiddle_rsc_0_1_ARREADY, twiddle_rsc_0_1_ARVALID,
      twiddle_rsc_0_1_ARUSER, twiddle_rsc_0_1_ARREGION, twiddle_rsc_0_1_ARQOS, twiddle_rsc_0_1_ARPROT,
      twiddle_rsc_0_1_ARCACHE, twiddle_rsc_0_1_ARLOCK, twiddle_rsc_0_1_ARBURST, twiddle_rsc_0_1_ARSIZE,
      twiddle_rsc_0_1_ARLEN, twiddle_rsc_0_1_ARADDR, twiddle_rsc_0_1_ARID, twiddle_rsc_0_1_BREADY,
      twiddle_rsc_0_1_BVALID, twiddle_rsc_0_1_BUSER, twiddle_rsc_0_1_BRESP, twiddle_rsc_0_1_BID,
      twiddle_rsc_0_1_WREADY, twiddle_rsc_0_1_WVALID, twiddle_rsc_0_1_WUSER, twiddle_rsc_0_1_WLAST,
      twiddle_rsc_0_1_WSTRB, twiddle_rsc_0_1_WDATA, twiddle_rsc_0_1_AWREADY, twiddle_rsc_0_1_AWVALID,
      twiddle_rsc_0_1_AWUSER, twiddle_rsc_0_1_AWREGION, twiddle_rsc_0_1_AWQOS, twiddle_rsc_0_1_AWPROT,
      twiddle_rsc_0_1_AWCACHE, twiddle_rsc_0_1_AWLOCK, twiddle_rsc_0_1_AWBURST, twiddle_rsc_0_1_AWSIZE,
      twiddle_rsc_0_1_AWLEN, twiddle_rsc_0_1_AWADDR, twiddle_rsc_0_1_AWID, twiddle_rsc_triosy_0_1_lz,
      twiddle_rsc_0_2_s_tdone, twiddle_rsc_0_2_tr_write_done, twiddle_rsc_0_2_RREADY,
      twiddle_rsc_0_2_RVALID, twiddle_rsc_0_2_RUSER, twiddle_rsc_0_2_RLAST, twiddle_rsc_0_2_RRESP,
      twiddle_rsc_0_2_RDATA, twiddle_rsc_0_2_RID, twiddle_rsc_0_2_ARREADY, twiddle_rsc_0_2_ARVALID,
      twiddle_rsc_0_2_ARUSER, twiddle_rsc_0_2_ARREGION, twiddle_rsc_0_2_ARQOS, twiddle_rsc_0_2_ARPROT,
      twiddle_rsc_0_2_ARCACHE, twiddle_rsc_0_2_ARLOCK, twiddle_rsc_0_2_ARBURST, twiddle_rsc_0_2_ARSIZE,
      twiddle_rsc_0_2_ARLEN, twiddle_rsc_0_2_ARADDR, twiddle_rsc_0_2_ARID, twiddle_rsc_0_2_BREADY,
      twiddle_rsc_0_2_BVALID, twiddle_rsc_0_2_BUSER, twiddle_rsc_0_2_BRESP, twiddle_rsc_0_2_BID,
      twiddle_rsc_0_2_WREADY, twiddle_rsc_0_2_WVALID, twiddle_rsc_0_2_WUSER, twiddle_rsc_0_2_WLAST,
      twiddle_rsc_0_2_WSTRB, twiddle_rsc_0_2_WDATA, twiddle_rsc_0_2_AWREADY, twiddle_rsc_0_2_AWVALID,
      twiddle_rsc_0_2_AWUSER, twiddle_rsc_0_2_AWREGION, twiddle_rsc_0_2_AWQOS, twiddle_rsc_0_2_AWPROT,
      twiddle_rsc_0_2_AWCACHE, twiddle_rsc_0_2_AWLOCK, twiddle_rsc_0_2_AWBURST, twiddle_rsc_0_2_AWSIZE,
      twiddle_rsc_0_2_AWLEN, twiddle_rsc_0_2_AWADDR, twiddle_rsc_0_2_AWID, twiddle_rsc_triosy_0_2_lz,
      twiddle_rsc_0_3_s_tdone, twiddle_rsc_0_3_tr_write_done, twiddle_rsc_0_3_RREADY,
      twiddle_rsc_0_3_RVALID, twiddle_rsc_0_3_RUSER, twiddle_rsc_0_3_RLAST, twiddle_rsc_0_3_RRESP,
      twiddle_rsc_0_3_RDATA, twiddle_rsc_0_3_RID, twiddle_rsc_0_3_ARREADY, twiddle_rsc_0_3_ARVALID,
      twiddle_rsc_0_3_ARUSER, twiddle_rsc_0_3_ARREGION, twiddle_rsc_0_3_ARQOS, twiddle_rsc_0_3_ARPROT,
      twiddle_rsc_0_3_ARCACHE, twiddle_rsc_0_3_ARLOCK, twiddle_rsc_0_3_ARBURST, twiddle_rsc_0_3_ARSIZE,
      twiddle_rsc_0_3_ARLEN, twiddle_rsc_0_3_ARADDR, twiddle_rsc_0_3_ARID, twiddle_rsc_0_3_BREADY,
      twiddle_rsc_0_3_BVALID, twiddle_rsc_0_3_BUSER, twiddle_rsc_0_3_BRESP, twiddle_rsc_0_3_BID,
      twiddle_rsc_0_3_WREADY, twiddle_rsc_0_3_WVALID, twiddle_rsc_0_3_WUSER, twiddle_rsc_0_3_WLAST,
      twiddle_rsc_0_3_WSTRB, twiddle_rsc_0_3_WDATA, twiddle_rsc_0_3_AWREADY, twiddle_rsc_0_3_AWVALID,
      twiddle_rsc_0_3_AWUSER, twiddle_rsc_0_3_AWREGION, twiddle_rsc_0_3_AWQOS, twiddle_rsc_0_3_AWPROT,
      twiddle_rsc_0_3_AWCACHE, twiddle_rsc_0_3_AWLOCK, twiddle_rsc_0_3_AWBURST, twiddle_rsc_0_3_AWSIZE,
      twiddle_rsc_0_3_AWLEN, twiddle_rsc_0_3_AWADDR, twiddle_rsc_0_3_AWID, twiddle_rsc_triosy_0_3_lz,
      twiddle_rsc_0_4_s_tdone, twiddle_rsc_0_4_tr_write_done, twiddle_rsc_0_4_RREADY,
      twiddle_rsc_0_4_RVALID, twiddle_rsc_0_4_RUSER, twiddle_rsc_0_4_RLAST, twiddle_rsc_0_4_RRESP,
      twiddle_rsc_0_4_RDATA, twiddle_rsc_0_4_RID, twiddle_rsc_0_4_ARREADY, twiddle_rsc_0_4_ARVALID,
      twiddle_rsc_0_4_ARUSER, twiddle_rsc_0_4_ARREGION, twiddle_rsc_0_4_ARQOS, twiddle_rsc_0_4_ARPROT,
      twiddle_rsc_0_4_ARCACHE, twiddle_rsc_0_4_ARLOCK, twiddle_rsc_0_4_ARBURST, twiddle_rsc_0_4_ARSIZE,
      twiddle_rsc_0_4_ARLEN, twiddle_rsc_0_4_ARADDR, twiddle_rsc_0_4_ARID, twiddle_rsc_0_4_BREADY,
      twiddle_rsc_0_4_BVALID, twiddle_rsc_0_4_BUSER, twiddle_rsc_0_4_BRESP, twiddle_rsc_0_4_BID,
      twiddle_rsc_0_4_WREADY, twiddle_rsc_0_4_WVALID, twiddle_rsc_0_4_WUSER, twiddle_rsc_0_4_WLAST,
      twiddle_rsc_0_4_WSTRB, twiddle_rsc_0_4_WDATA, twiddle_rsc_0_4_AWREADY, twiddle_rsc_0_4_AWVALID,
      twiddle_rsc_0_4_AWUSER, twiddle_rsc_0_4_AWREGION, twiddle_rsc_0_4_AWQOS, twiddle_rsc_0_4_AWPROT,
      twiddle_rsc_0_4_AWCACHE, twiddle_rsc_0_4_AWLOCK, twiddle_rsc_0_4_AWBURST, twiddle_rsc_0_4_AWSIZE,
      twiddle_rsc_0_4_AWLEN, twiddle_rsc_0_4_AWADDR, twiddle_rsc_0_4_AWID, twiddle_rsc_triosy_0_4_lz,
      twiddle_rsc_0_5_s_tdone, twiddle_rsc_0_5_tr_write_done, twiddle_rsc_0_5_RREADY,
      twiddle_rsc_0_5_RVALID, twiddle_rsc_0_5_RUSER, twiddle_rsc_0_5_RLAST, twiddle_rsc_0_5_RRESP,
      twiddle_rsc_0_5_RDATA, twiddle_rsc_0_5_RID, twiddle_rsc_0_5_ARREADY, twiddle_rsc_0_5_ARVALID,
      twiddle_rsc_0_5_ARUSER, twiddle_rsc_0_5_ARREGION, twiddle_rsc_0_5_ARQOS, twiddle_rsc_0_5_ARPROT,
      twiddle_rsc_0_5_ARCACHE, twiddle_rsc_0_5_ARLOCK, twiddle_rsc_0_5_ARBURST, twiddle_rsc_0_5_ARSIZE,
      twiddle_rsc_0_5_ARLEN, twiddle_rsc_0_5_ARADDR, twiddle_rsc_0_5_ARID, twiddle_rsc_0_5_BREADY,
      twiddle_rsc_0_5_BVALID, twiddle_rsc_0_5_BUSER, twiddle_rsc_0_5_BRESP, twiddle_rsc_0_5_BID,
      twiddle_rsc_0_5_WREADY, twiddle_rsc_0_5_WVALID, twiddle_rsc_0_5_WUSER, twiddle_rsc_0_5_WLAST,
      twiddle_rsc_0_5_WSTRB, twiddle_rsc_0_5_WDATA, twiddle_rsc_0_5_AWREADY, twiddle_rsc_0_5_AWVALID,
      twiddle_rsc_0_5_AWUSER, twiddle_rsc_0_5_AWREGION, twiddle_rsc_0_5_AWQOS, twiddle_rsc_0_5_AWPROT,
      twiddle_rsc_0_5_AWCACHE, twiddle_rsc_0_5_AWLOCK, twiddle_rsc_0_5_AWBURST, twiddle_rsc_0_5_AWSIZE,
      twiddle_rsc_0_5_AWLEN, twiddle_rsc_0_5_AWADDR, twiddle_rsc_0_5_AWID, twiddle_rsc_triosy_0_5_lz,
      twiddle_rsc_0_6_s_tdone, twiddle_rsc_0_6_tr_write_done, twiddle_rsc_0_6_RREADY,
      twiddle_rsc_0_6_RVALID, twiddle_rsc_0_6_RUSER, twiddle_rsc_0_6_RLAST, twiddle_rsc_0_6_RRESP,
      twiddle_rsc_0_6_RDATA, twiddle_rsc_0_6_RID, twiddle_rsc_0_6_ARREADY, twiddle_rsc_0_6_ARVALID,
      twiddle_rsc_0_6_ARUSER, twiddle_rsc_0_6_ARREGION, twiddle_rsc_0_6_ARQOS, twiddle_rsc_0_6_ARPROT,
      twiddle_rsc_0_6_ARCACHE, twiddle_rsc_0_6_ARLOCK, twiddle_rsc_0_6_ARBURST, twiddle_rsc_0_6_ARSIZE,
      twiddle_rsc_0_6_ARLEN, twiddle_rsc_0_6_ARADDR, twiddle_rsc_0_6_ARID, twiddle_rsc_0_6_BREADY,
      twiddle_rsc_0_6_BVALID, twiddle_rsc_0_6_BUSER, twiddle_rsc_0_6_BRESP, twiddle_rsc_0_6_BID,
      twiddle_rsc_0_6_WREADY, twiddle_rsc_0_6_WVALID, twiddle_rsc_0_6_WUSER, twiddle_rsc_0_6_WLAST,
      twiddle_rsc_0_6_WSTRB, twiddle_rsc_0_6_WDATA, twiddle_rsc_0_6_AWREADY, twiddle_rsc_0_6_AWVALID,
      twiddle_rsc_0_6_AWUSER, twiddle_rsc_0_6_AWREGION, twiddle_rsc_0_6_AWQOS, twiddle_rsc_0_6_AWPROT,
      twiddle_rsc_0_6_AWCACHE, twiddle_rsc_0_6_AWLOCK, twiddle_rsc_0_6_AWBURST, twiddle_rsc_0_6_AWSIZE,
      twiddle_rsc_0_6_AWLEN, twiddle_rsc_0_6_AWADDR, twiddle_rsc_0_6_AWID, twiddle_rsc_triosy_0_6_lz,
      twiddle_rsc_0_7_s_tdone, twiddle_rsc_0_7_tr_write_done, twiddle_rsc_0_7_RREADY,
      twiddle_rsc_0_7_RVALID, twiddle_rsc_0_7_RUSER, twiddle_rsc_0_7_RLAST, twiddle_rsc_0_7_RRESP,
      twiddle_rsc_0_7_RDATA, twiddle_rsc_0_7_RID, twiddle_rsc_0_7_ARREADY, twiddle_rsc_0_7_ARVALID,
      twiddle_rsc_0_7_ARUSER, twiddle_rsc_0_7_ARREGION, twiddle_rsc_0_7_ARQOS, twiddle_rsc_0_7_ARPROT,
      twiddle_rsc_0_7_ARCACHE, twiddle_rsc_0_7_ARLOCK, twiddle_rsc_0_7_ARBURST, twiddle_rsc_0_7_ARSIZE,
      twiddle_rsc_0_7_ARLEN, twiddle_rsc_0_7_ARADDR, twiddle_rsc_0_7_ARID, twiddle_rsc_0_7_BREADY,
      twiddle_rsc_0_7_BVALID, twiddle_rsc_0_7_BUSER, twiddle_rsc_0_7_BRESP, twiddle_rsc_0_7_BID,
      twiddle_rsc_0_7_WREADY, twiddle_rsc_0_7_WVALID, twiddle_rsc_0_7_WUSER, twiddle_rsc_0_7_WLAST,
      twiddle_rsc_0_7_WSTRB, twiddle_rsc_0_7_WDATA, twiddle_rsc_0_7_AWREADY, twiddle_rsc_0_7_AWVALID,
      twiddle_rsc_0_7_AWUSER, twiddle_rsc_0_7_AWREGION, twiddle_rsc_0_7_AWQOS, twiddle_rsc_0_7_AWPROT,
      twiddle_rsc_0_7_AWCACHE, twiddle_rsc_0_7_AWLOCK, twiddle_rsc_0_7_AWBURST, twiddle_rsc_0_7_AWSIZE,
      twiddle_rsc_0_7_AWLEN, twiddle_rsc_0_7_AWADDR, twiddle_rsc_0_7_AWID, twiddle_rsc_triosy_0_7_lz,
      twiddle_rsc_0_8_s_tdone, twiddle_rsc_0_8_tr_write_done, twiddle_rsc_0_8_RREADY,
      twiddle_rsc_0_8_RVALID, twiddle_rsc_0_8_RUSER, twiddle_rsc_0_8_RLAST, twiddle_rsc_0_8_RRESP,
      twiddle_rsc_0_8_RDATA, twiddle_rsc_0_8_RID, twiddle_rsc_0_8_ARREADY, twiddle_rsc_0_8_ARVALID,
      twiddle_rsc_0_8_ARUSER, twiddle_rsc_0_8_ARREGION, twiddle_rsc_0_8_ARQOS, twiddle_rsc_0_8_ARPROT,
      twiddle_rsc_0_8_ARCACHE, twiddle_rsc_0_8_ARLOCK, twiddle_rsc_0_8_ARBURST, twiddle_rsc_0_8_ARSIZE,
      twiddle_rsc_0_8_ARLEN, twiddle_rsc_0_8_ARADDR, twiddle_rsc_0_8_ARID, twiddle_rsc_0_8_BREADY,
      twiddle_rsc_0_8_BVALID, twiddle_rsc_0_8_BUSER, twiddle_rsc_0_8_BRESP, twiddle_rsc_0_8_BID,
      twiddle_rsc_0_8_WREADY, twiddle_rsc_0_8_WVALID, twiddle_rsc_0_8_WUSER, twiddle_rsc_0_8_WLAST,
      twiddle_rsc_0_8_WSTRB, twiddle_rsc_0_8_WDATA, twiddle_rsc_0_8_AWREADY, twiddle_rsc_0_8_AWVALID,
      twiddle_rsc_0_8_AWUSER, twiddle_rsc_0_8_AWREGION, twiddle_rsc_0_8_AWQOS, twiddle_rsc_0_8_AWPROT,
      twiddle_rsc_0_8_AWCACHE, twiddle_rsc_0_8_AWLOCK, twiddle_rsc_0_8_AWBURST, twiddle_rsc_0_8_AWSIZE,
      twiddle_rsc_0_8_AWLEN, twiddle_rsc_0_8_AWADDR, twiddle_rsc_0_8_AWID, twiddle_rsc_triosy_0_8_lz,
      twiddle_rsc_0_9_s_tdone, twiddle_rsc_0_9_tr_write_done, twiddle_rsc_0_9_RREADY,
      twiddle_rsc_0_9_RVALID, twiddle_rsc_0_9_RUSER, twiddle_rsc_0_9_RLAST, twiddle_rsc_0_9_RRESP,
      twiddle_rsc_0_9_RDATA, twiddle_rsc_0_9_RID, twiddle_rsc_0_9_ARREADY, twiddle_rsc_0_9_ARVALID,
      twiddle_rsc_0_9_ARUSER, twiddle_rsc_0_9_ARREGION, twiddle_rsc_0_9_ARQOS, twiddle_rsc_0_9_ARPROT,
      twiddle_rsc_0_9_ARCACHE, twiddle_rsc_0_9_ARLOCK, twiddle_rsc_0_9_ARBURST, twiddle_rsc_0_9_ARSIZE,
      twiddle_rsc_0_9_ARLEN, twiddle_rsc_0_9_ARADDR, twiddle_rsc_0_9_ARID, twiddle_rsc_0_9_BREADY,
      twiddle_rsc_0_9_BVALID, twiddle_rsc_0_9_BUSER, twiddle_rsc_0_9_BRESP, twiddle_rsc_0_9_BID,
      twiddle_rsc_0_9_WREADY, twiddle_rsc_0_9_WVALID, twiddle_rsc_0_9_WUSER, twiddle_rsc_0_9_WLAST,
      twiddle_rsc_0_9_WSTRB, twiddle_rsc_0_9_WDATA, twiddle_rsc_0_9_AWREADY, twiddle_rsc_0_9_AWVALID,
      twiddle_rsc_0_9_AWUSER, twiddle_rsc_0_9_AWREGION, twiddle_rsc_0_9_AWQOS, twiddle_rsc_0_9_AWPROT,
      twiddle_rsc_0_9_AWCACHE, twiddle_rsc_0_9_AWLOCK, twiddle_rsc_0_9_AWBURST, twiddle_rsc_0_9_AWSIZE,
      twiddle_rsc_0_9_AWLEN, twiddle_rsc_0_9_AWADDR, twiddle_rsc_0_9_AWID, twiddle_rsc_triosy_0_9_lz,
      twiddle_rsc_0_10_s_tdone, twiddle_rsc_0_10_tr_write_done, twiddle_rsc_0_10_RREADY,
      twiddle_rsc_0_10_RVALID, twiddle_rsc_0_10_RUSER, twiddle_rsc_0_10_RLAST, twiddle_rsc_0_10_RRESP,
      twiddle_rsc_0_10_RDATA, twiddle_rsc_0_10_RID, twiddle_rsc_0_10_ARREADY, twiddle_rsc_0_10_ARVALID,
      twiddle_rsc_0_10_ARUSER, twiddle_rsc_0_10_ARREGION, twiddle_rsc_0_10_ARQOS,
      twiddle_rsc_0_10_ARPROT, twiddle_rsc_0_10_ARCACHE, twiddle_rsc_0_10_ARLOCK,
      twiddle_rsc_0_10_ARBURST, twiddle_rsc_0_10_ARSIZE, twiddle_rsc_0_10_ARLEN,
      twiddle_rsc_0_10_ARADDR, twiddle_rsc_0_10_ARID, twiddle_rsc_0_10_BREADY, twiddle_rsc_0_10_BVALID,
      twiddle_rsc_0_10_BUSER, twiddle_rsc_0_10_BRESP, twiddle_rsc_0_10_BID, twiddle_rsc_0_10_WREADY,
      twiddle_rsc_0_10_WVALID, twiddle_rsc_0_10_WUSER, twiddle_rsc_0_10_WLAST, twiddle_rsc_0_10_WSTRB,
      twiddle_rsc_0_10_WDATA, twiddle_rsc_0_10_AWREADY, twiddle_rsc_0_10_AWVALID,
      twiddle_rsc_0_10_AWUSER, twiddle_rsc_0_10_AWREGION, twiddle_rsc_0_10_AWQOS,
      twiddle_rsc_0_10_AWPROT, twiddle_rsc_0_10_AWCACHE, twiddle_rsc_0_10_AWLOCK,
      twiddle_rsc_0_10_AWBURST, twiddle_rsc_0_10_AWSIZE, twiddle_rsc_0_10_AWLEN,
      twiddle_rsc_0_10_AWADDR, twiddle_rsc_0_10_AWID, twiddle_rsc_triosy_0_10_lz,
      twiddle_rsc_0_11_s_tdone, twiddle_rsc_0_11_tr_write_done, twiddle_rsc_0_11_RREADY,
      twiddle_rsc_0_11_RVALID, twiddle_rsc_0_11_RUSER, twiddle_rsc_0_11_RLAST, twiddle_rsc_0_11_RRESP,
      twiddle_rsc_0_11_RDATA, twiddle_rsc_0_11_RID, twiddle_rsc_0_11_ARREADY, twiddle_rsc_0_11_ARVALID,
      twiddle_rsc_0_11_ARUSER, twiddle_rsc_0_11_ARREGION, twiddle_rsc_0_11_ARQOS,
      twiddle_rsc_0_11_ARPROT, twiddle_rsc_0_11_ARCACHE, twiddle_rsc_0_11_ARLOCK,
      twiddle_rsc_0_11_ARBURST, twiddle_rsc_0_11_ARSIZE, twiddle_rsc_0_11_ARLEN,
      twiddle_rsc_0_11_ARADDR, twiddle_rsc_0_11_ARID, twiddle_rsc_0_11_BREADY, twiddle_rsc_0_11_BVALID,
      twiddle_rsc_0_11_BUSER, twiddle_rsc_0_11_BRESP, twiddle_rsc_0_11_BID, twiddle_rsc_0_11_WREADY,
      twiddle_rsc_0_11_WVALID, twiddle_rsc_0_11_WUSER, twiddle_rsc_0_11_WLAST, twiddle_rsc_0_11_WSTRB,
      twiddle_rsc_0_11_WDATA, twiddle_rsc_0_11_AWREADY, twiddle_rsc_0_11_AWVALID,
      twiddle_rsc_0_11_AWUSER, twiddle_rsc_0_11_AWREGION, twiddle_rsc_0_11_AWQOS,
      twiddle_rsc_0_11_AWPROT, twiddle_rsc_0_11_AWCACHE, twiddle_rsc_0_11_AWLOCK,
      twiddle_rsc_0_11_AWBURST, twiddle_rsc_0_11_AWSIZE, twiddle_rsc_0_11_AWLEN,
      twiddle_rsc_0_11_AWADDR, twiddle_rsc_0_11_AWID, twiddle_rsc_triosy_0_11_lz,
      twiddle_rsc_0_12_s_tdone, twiddle_rsc_0_12_tr_write_done, twiddle_rsc_0_12_RREADY,
      twiddle_rsc_0_12_RVALID, twiddle_rsc_0_12_RUSER, twiddle_rsc_0_12_RLAST, twiddle_rsc_0_12_RRESP,
      twiddle_rsc_0_12_RDATA, twiddle_rsc_0_12_RID, twiddle_rsc_0_12_ARREADY, twiddle_rsc_0_12_ARVALID,
      twiddle_rsc_0_12_ARUSER, twiddle_rsc_0_12_ARREGION, twiddle_rsc_0_12_ARQOS,
      twiddle_rsc_0_12_ARPROT, twiddle_rsc_0_12_ARCACHE, twiddle_rsc_0_12_ARLOCK,
      twiddle_rsc_0_12_ARBURST, twiddle_rsc_0_12_ARSIZE, twiddle_rsc_0_12_ARLEN,
      twiddle_rsc_0_12_ARADDR, twiddle_rsc_0_12_ARID, twiddle_rsc_0_12_BREADY, twiddle_rsc_0_12_BVALID,
      twiddle_rsc_0_12_BUSER, twiddle_rsc_0_12_BRESP, twiddle_rsc_0_12_BID, twiddle_rsc_0_12_WREADY,
      twiddle_rsc_0_12_WVALID, twiddle_rsc_0_12_WUSER, twiddle_rsc_0_12_WLAST, twiddle_rsc_0_12_WSTRB,
      twiddle_rsc_0_12_WDATA, twiddle_rsc_0_12_AWREADY, twiddle_rsc_0_12_AWVALID,
      twiddle_rsc_0_12_AWUSER, twiddle_rsc_0_12_AWREGION, twiddle_rsc_0_12_AWQOS,
      twiddle_rsc_0_12_AWPROT, twiddle_rsc_0_12_AWCACHE, twiddle_rsc_0_12_AWLOCK,
      twiddle_rsc_0_12_AWBURST, twiddle_rsc_0_12_AWSIZE, twiddle_rsc_0_12_AWLEN,
      twiddle_rsc_0_12_AWADDR, twiddle_rsc_0_12_AWID, twiddle_rsc_triosy_0_12_lz,
      twiddle_rsc_0_13_s_tdone, twiddle_rsc_0_13_tr_write_done, twiddle_rsc_0_13_RREADY,
      twiddle_rsc_0_13_RVALID, twiddle_rsc_0_13_RUSER, twiddle_rsc_0_13_RLAST, twiddle_rsc_0_13_RRESP,
      twiddle_rsc_0_13_RDATA, twiddle_rsc_0_13_RID, twiddle_rsc_0_13_ARREADY, twiddle_rsc_0_13_ARVALID,
      twiddle_rsc_0_13_ARUSER, twiddle_rsc_0_13_ARREGION, twiddle_rsc_0_13_ARQOS,
      twiddle_rsc_0_13_ARPROT, twiddle_rsc_0_13_ARCACHE, twiddle_rsc_0_13_ARLOCK,
      twiddle_rsc_0_13_ARBURST, twiddle_rsc_0_13_ARSIZE, twiddle_rsc_0_13_ARLEN,
      twiddle_rsc_0_13_ARADDR, twiddle_rsc_0_13_ARID, twiddle_rsc_0_13_BREADY, twiddle_rsc_0_13_BVALID,
      twiddle_rsc_0_13_BUSER, twiddle_rsc_0_13_BRESP, twiddle_rsc_0_13_BID, twiddle_rsc_0_13_WREADY,
      twiddle_rsc_0_13_WVALID, twiddle_rsc_0_13_WUSER, twiddle_rsc_0_13_WLAST, twiddle_rsc_0_13_WSTRB,
      twiddle_rsc_0_13_WDATA, twiddle_rsc_0_13_AWREADY, twiddle_rsc_0_13_AWVALID,
      twiddle_rsc_0_13_AWUSER, twiddle_rsc_0_13_AWREGION, twiddle_rsc_0_13_AWQOS,
      twiddle_rsc_0_13_AWPROT, twiddle_rsc_0_13_AWCACHE, twiddle_rsc_0_13_AWLOCK,
      twiddle_rsc_0_13_AWBURST, twiddle_rsc_0_13_AWSIZE, twiddle_rsc_0_13_AWLEN,
      twiddle_rsc_0_13_AWADDR, twiddle_rsc_0_13_AWID, twiddle_rsc_triosy_0_13_lz,
      twiddle_rsc_0_14_s_tdone, twiddle_rsc_0_14_tr_write_done, twiddle_rsc_0_14_RREADY,
      twiddle_rsc_0_14_RVALID, twiddle_rsc_0_14_RUSER, twiddle_rsc_0_14_RLAST, twiddle_rsc_0_14_RRESP,
      twiddle_rsc_0_14_RDATA, twiddle_rsc_0_14_RID, twiddle_rsc_0_14_ARREADY, twiddle_rsc_0_14_ARVALID,
      twiddle_rsc_0_14_ARUSER, twiddle_rsc_0_14_ARREGION, twiddle_rsc_0_14_ARQOS,
      twiddle_rsc_0_14_ARPROT, twiddle_rsc_0_14_ARCACHE, twiddle_rsc_0_14_ARLOCK,
      twiddle_rsc_0_14_ARBURST, twiddle_rsc_0_14_ARSIZE, twiddle_rsc_0_14_ARLEN,
      twiddle_rsc_0_14_ARADDR, twiddle_rsc_0_14_ARID, twiddle_rsc_0_14_BREADY, twiddle_rsc_0_14_BVALID,
      twiddle_rsc_0_14_BUSER, twiddle_rsc_0_14_BRESP, twiddle_rsc_0_14_BID, twiddle_rsc_0_14_WREADY,
      twiddle_rsc_0_14_WVALID, twiddle_rsc_0_14_WUSER, twiddle_rsc_0_14_WLAST, twiddle_rsc_0_14_WSTRB,
      twiddle_rsc_0_14_WDATA, twiddle_rsc_0_14_AWREADY, twiddle_rsc_0_14_AWVALID,
      twiddle_rsc_0_14_AWUSER, twiddle_rsc_0_14_AWREGION, twiddle_rsc_0_14_AWQOS,
      twiddle_rsc_0_14_AWPROT, twiddle_rsc_0_14_AWCACHE, twiddle_rsc_0_14_AWLOCK,
      twiddle_rsc_0_14_AWBURST, twiddle_rsc_0_14_AWSIZE, twiddle_rsc_0_14_AWLEN,
      twiddle_rsc_0_14_AWADDR, twiddle_rsc_0_14_AWID, twiddle_rsc_triosy_0_14_lz,
      twiddle_rsc_0_15_s_tdone, twiddle_rsc_0_15_tr_write_done, twiddle_rsc_0_15_RREADY,
      twiddle_rsc_0_15_RVALID, twiddle_rsc_0_15_RUSER, twiddle_rsc_0_15_RLAST, twiddle_rsc_0_15_RRESP,
      twiddle_rsc_0_15_RDATA, twiddle_rsc_0_15_RID, twiddle_rsc_0_15_ARREADY, twiddle_rsc_0_15_ARVALID,
      twiddle_rsc_0_15_ARUSER, twiddle_rsc_0_15_ARREGION, twiddle_rsc_0_15_ARQOS,
      twiddle_rsc_0_15_ARPROT, twiddle_rsc_0_15_ARCACHE, twiddle_rsc_0_15_ARLOCK,
      twiddle_rsc_0_15_ARBURST, twiddle_rsc_0_15_ARSIZE, twiddle_rsc_0_15_ARLEN,
      twiddle_rsc_0_15_ARADDR, twiddle_rsc_0_15_ARID, twiddle_rsc_0_15_BREADY, twiddle_rsc_0_15_BVALID,
      twiddle_rsc_0_15_BUSER, twiddle_rsc_0_15_BRESP, twiddle_rsc_0_15_BID, twiddle_rsc_0_15_WREADY,
      twiddle_rsc_0_15_WVALID, twiddle_rsc_0_15_WUSER, twiddle_rsc_0_15_WLAST, twiddle_rsc_0_15_WSTRB,
      twiddle_rsc_0_15_WDATA, twiddle_rsc_0_15_AWREADY, twiddle_rsc_0_15_AWVALID,
      twiddle_rsc_0_15_AWUSER, twiddle_rsc_0_15_AWREGION, twiddle_rsc_0_15_AWQOS,
      twiddle_rsc_0_15_AWPROT, twiddle_rsc_0_15_AWCACHE, twiddle_rsc_0_15_AWLOCK,
      twiddle_rsc_0_15_AWBURST, twiddle_rsc_0_15_AWSIZE, twiddle_rsc_0_15_AWLEN,
      twiddle_rsc_0_15_AWADDR, twiddle_rsc_0_15_AWID, twiddle_rsc_triosy_0_15_lz,
      twiddle_h_rsc_0_0_s_tdone, twiddle_h_rsc_0_0_tr_write_done, twiddle_h_rsc_0_0_RREADY,
      twiddle_h_rsc_0_0_RVALID, twiddle_h_rsc_0_0_RUSER, twiddle_h_rsc_0_0_RLAST,
      twiddle_h_rsc_0_0_RRESP, twiddle_h_rsc_0_0_RDATA, twiddle_h_rsc_0_0_RID, twiddle_h_rsc_0_0_ARREADY,
      twiddle_h_rsc_0_0_ARVALID, twiddle_h_rsc_0_0_ARUSER, twiddle_h_rsc_0_0_ARREGION,
      twiddle_h_rsc_0_0_ARQOS, twiddle_h_rsc_0_0_ARPROT, twiddle_h_rsc_0_0_ARCACHE,
      twiddle_h_rsc_0_0_ARLOCK, twiddle_h_rsc_0_0_ARBURST, twiddle_h_rsc_0_0_ARSIZE,
      twiddle_h_rsc_0_0_ARLEN, twiddle_h_rsc_0_0_ARADDR, twiddle_h_rsc_0_0_ARID,
      twiddle_h_rsc_0_0_BREADY, twiddle_h_rsc_0_0_BVALID, twiddle_h_rsc_0_0_BUSER,
      twiddle_h_rsc_0_0_BRESP, twiddle_h_rsc_0_0_BID, twiddle_h_rsc_0_0_WREADY, twiddle_h_rsc_0_0_WVALID,
      twiddle_h_rsc_0_0_WUSER, twiddle_h_rsc_0_0_WLAST, twiddle_h_rsc_0_0_WSTRB,
      twiddle_h_rsc_0_0_WDATA, twiddle_h_rsc_0_0_AWREADY, twiddle_h_rsc_0_0_AWVALID,
      twiddle_h_rsc_0_0_AWUSER, twiddle_h_rsc_0_0_AWREGION, twiddle_h_rsc_0_0_AWQOS,
      twiddle_h_rsc_0_0_AWPROT, twiddle_h_rsc_0_0_AWCACHE, twiddle_h_rsc_0_0_AWLOCK,
      twiddle_h_rsc_0_0_AWBURST, twiddle_h_rsc_0_0_AWSIZE, twiddle_h_rsc_0_0_AWLEN,
      twiddle_h_rsc_0_0_AWADDR, twiddle_h_rsc_0_0_AWID, twiddle_h_rsc_triosy_0_0_lz,
      twiddle_h_rsc_0_1_s_tdone, twiddle_h_rsc_0_1_tr_write_done, twiddle_h_rsc_0_1_RREADY,
      twiddle_h_rsc_0_1_RVALID, twiddle_h_rsc_0_1_RUSER, twiddle_h_rsc_0_1_RLAST,
      twiddle_h_rsc_0_1_RRESP, twiddle_h_rsc_0_1_RDATA, twiddle_h_rsc_0_1_RID, twiddle_h_rsc_0_1_ARREADY,
      twiddle_h_rsc_0_1_ARVALID, twiddle_h_rsc_0_1_ARUSER, twiddle_h_rsc_0_1_ARREGION,
      twiddle_h_rsc_0_1_ARQOS, twiddle_h_rsc_0_1_ARPROT, twiddle_h_rsc_0_1_ARCACHE,
      twiddle_h_rsc_0_1_ARLOCK, twiddle_h_rsc_0_1_ARBURST, twiddle_h_rsc_0_1_ARSIZE,
      twiddle_h_rsc_0_1_ARLEN, twiddle_h_rsc_0_1_ARADDR, twiddle_h_rsc_0_1_ARID,
      twiddle_h_rsc_0_1_BREADY, twiddle_h_rsc_0_1_BVALID, twiddle_h_rsc_0_1_BUSER,
      twiddle_h_rsc_0_1_BRESP, twiddle_h_rsc_0_1_BID, twiddle_h_rsc_0_1_WREADY, twiddle_h_rsc_0_1_WVALID,
      twiddle_h_rsc_0_1_WUSER, twiddle_h_rsc_0_1_WLAST, twiddle_h_rsc_0_1_WSTRB,
      twiddle_h_rsc_0_1_WDATA, twiddle_h_rsc_0_1_AWREADY, twiddle_h_rsc_0_1_AWVALID,
      twiddle_h_rsc_0_1_AWUSER, twiddle_h_rsc_0_1_AWREGION, twiddle_h_rsc_0_1_AWQOS,
      twiddle_h_rsc_0_1_AWPROT, twiddle_h_rsc_0_1_AWCACHE, twiddle_h_rsc_0_1_AWLOCK,
      twiddle_h_rsc_0_1_AWBURST, twiddle_h_rsc_0_1_AWSIZE, twiddle_h_rsc_0_1_AWLEN,
      twiddle_h_rsc_0_1_AWADDR, twiddle_h_rsc_0_1_AWID, twiddle_h_rsc_triosy_0_1_lz,
      twiddle_h_rsc_0_2_s_tdone, twiddle_h_rsc_0_2_tr_write_done, twiddle_h_rsc_0_2_RREADY,
      twiddle_h_rsc_0_2_RVALID, twiddle_h_rsc_0_2_RUSER, twiddle_h_rsc_0_2_RLAST,
      twiddle_h_rsc_0_2_RRESP, twiddle_h_rsc_0_2_RDATA, twiddle_h_rsc_0_2_RID, twiddle_h_rsc_0_2_ARREADY,
      twiddle_h_rsc_0_2_ARVALID, twiddle_h_rsc_0_2_ARUSER, twiddle_h_rsc_0_2_ARREGION,
      twiddle_h_rsc_0_2_ARQOS, twiddle_h_rsc_0_2_ARPROT, twiddle_h_rsc_0_2_ARCACHE,
      twiddle_h_rsc_0_2_ARLOCK, twiddle_h_rsc_0_2_ARBURST, twiddle_h_rsc_0_2_ARSIZE,
      twiddle_h_rsc_0_2_ARLEN, twiddle_h_rsc_0_2_ARADDR, twiddle_h_rsc_0_2_ARID,
      twiddle_h_rsc_0_2_BREADY, twiddle_h_rsc_0_2_BVALID, twiddle_h_rsc_0_2_BUSER,
      twiddle_h_rsc_0_2_BRESP, twiddle_h_rsc_0_2_BID, twiddle_h_rsc_0_2_WREADY, twiddle_h_rsc_0_2_WVALID,
      twiddle_h_rsc_0_2_WUSER, twiddle_h_rsc_0_2_WLAST, twiddle_h_rsc_0_2_WSTRB,
      twiddle_h_rsc_0_2_WDATA, twiddle_h_rsc_0_2_AWREADY, twiddle_h_rsc_0_2_AWVALID,
      twiddle_h_rsc_0_2_AWUSER, twiddle_h_rsc_0_2_AWREGION, twiddle_h_rsc_0_2_AWQOS,
      twiddle_h_rsc_0_2_AWPROT, twiddle_h_rsc_0_2_AWCACHE, twiddle_h_rsc_0_2_AWLOCK,
      twiddle_h_rsc_0_2_AWBURST, twiddle_h_rsc_0_2_AWSIZE, twiddle_h_rsc_0_2_AWLEN,
      twiddle_h_rsc_0_2_AWADDR, twiddle_h_rsc_0_2_AWID, twiddle_h_rsc_triosy_0_2_lz,
      twiddle_h_rsc_0_3_s_tdone, twiddle_h_rsc_0_3_tr_write_done, twiddle_h_rsc_0_3_RREADY,
      twiddle_h_rsc_0_3_RVALID, twiddle_h_rsc_0_3_RUSER, twiddle_h_rsc_0_3_RLAST,
      twiddle_h_rsc_0_3_RRESP, twiddle_h_rsc_0_3_RDATA, twiddle_h_rsc_0_3_RID, twiddle_h_rsc_0_3_ARREADY,
      twiddle_h_rsc_0_3_ARVALID, twiddle_h_rsc_0_3_ARUSER, twiddle_h_rsc_0_3_ARREGION,
      twiddle_h_rsc_0_3_ARQOS, twiddle_h_rsc_0_3_ARPROT, twiddle_h_rsc_0_3_ARCACHE,
      twiddle_h_rsc_0_3_ARLOCK, twiddle_h_rsc_0_3_ARBURST, twiddle_h_rsc_0_3_ARSIZE,
      twiddle_h_rsc_0_3_ARLEN, twiddle_h_rsc_0_3_ARADDR, twiddle_h_rsc_0_3_ARID,
      twiddle_h_rsc_0_3_BREADY, twiddle_h_rsc_0_3_BVALID, twiddle_h_rsc_0_3_BUSER,
      twiddle_h_rsc_0_3_BRESP, twiddle_h_rsc_0_3_BID, twiddle_h_rsc_0_3_WREADY, twiddle_h_rsc_0_3_WVALID,
      twiddle_h_rsc_0_3_WUSER, twiddle_h_rsc_0_3_WLAST, twiddle_h_rsc_0_3_WSTRB,
      twiddle_h_rsc_0_3_WDATA, twiddle_h_rsc_0_3_AWREADY, twiddle_h_rsc_0_3_AWVALID,
      twiddle_h_rsc_0_3_AWUSER, twiddle_h_rsc_0_3_AWREGION, twiddle_h_rsc_0_3_AWQOS,
      twiddle_h_rsc_0_3_AWPROT, twiddle_h_rsc_0_3_AWCACHE, twiddle_h_rsc_0_3_AWLOCK,
      twiddle_h_rsc_0_3_AWBURST, twiddle_h_rsc_0_3_AWSIZE, twiddle_h_rsc_0_3_AWLEN,
      twiddle_h_rsc_0_3_AWADDR, twiddle_h_rsc_0_3_AWID, twiddle_h_rsc_triosy_0_3_lz,
      twiddle_h_rsc_0_4_s_tdone, twiddle_h_rsc_0_4_tr_write_done, twiddle_h_rsc_0_4_RREADY,
      twiddle_h_rsc_0_4_RVALID, twiddle_h_rsc_0_4_RUSER, twiddle_h_rsc_0_4_RLAST,
      twiddle_h_rsc_0_4_RRESP, twiddle_h_rsc_0_4_RDATA, twiddle_h_rsc_0_4_RID, twiddle_h_rsc_0_4_ARREADY,
      twiddle_h_rsc_0_4_ARVALID, twiddle_h_rsc_0_4_ARUSER, twiddle_h_rsc_0_4_ARREGION,
      twiddle_h_rsc_0_4_ARQOS, twiddle_h_rsc_0_4_ARPROT, twiddle_h_rsc_0_4_ARCACHE,
      twiddle_h_rsc_0_4_ARLOCK, twiddle_h_rsc_0_4_ARBURST, twiddle_h_rsc_0_4_ARSIZE,
      twiddle_h_rsc_0_4_ARLEN, twiddle_h_rsc_0_4_ARADDR, twiddle_h_rsc_0_4_ARID,
      twiddle_h_rsc_0_4_BREADY, twiddle_h_rsc_0_4_BVALID, twiddle_h_rsc_0_4_BUSER,
      twiddle_h_rsc_0_4_BRESP, twiddle_h_rsc_0_4_BID, twiddle_h_rsc_0_4_WREADY, twiddle_h_rsc_0_4_WVALID,
      twiddle_h_rsc_0_4_WUSER, twiddle_h_rsc_0_4_WLAST, twiddle_h_rsc_0_4_WSTRB,
      twiddle_h_rsc_0_4_WDATA, twiddle_h_rsc_0_4_AWREADY, twiddle_h_rsc_0_4_AWVALID,
      twiddle_h_rsc_0_4_AWUSER, twiddle_h_rsc_0_4_AWREGION, twiddle_h_rsc_0_4_AWQOS,
      twiddle_h_rsc_0_4_AWPROT, twiddle_h_rsc_0_4_AWCACHE, twiddle_h_rsc_0_4_AWLOCK,
      twiddle_h_rsc_0_4_AWBURST, twiddle_h_rsc_0_4_AWSIZE, twiddle_h_rsc_0_4_AWLEN,
      twiddle_h_rsc_0_4_AWADDR, twiddle_h_rsc_0_4_AWID, twiddle_h_rsc_triosy_0_4_lz,
      twiddle_h_rsc_0_5_s_tdone, twiddle_h_rsc_0_5_tr_write_done, twiddle_h_rsc_0_5_RREADY,
      twiddle_h_rsc_0_5_RVALID, twiddle_h_rsc_0_5_RUSER, twiddle_h_rsc_0_5_RLAST,
      twiddle_h_rsc_0_5_RRESP, twiddle_h_rsc_0_5_RDATA, twiddle_h_rsc_0_5_RID, twiddle_h_rsc_0_5_ARREADY,
      twiddle_h_rsc_0_5_ARVALID, twiddle_h_rsc_0_5_ARUSER, twiddle_h_rsc_0_5_ARREGION,
      twiddle_h_rsc_0_5_ARQOS, twiddle_h_rsc_0_5_ARPROT, twiddle_h_rsc_0_5_ARCACHE,
      twiddle_h_rsc_0_5_ARLOCK, twiddle_h_rsc_0_5_ARBURST, twiddle_h_rsc_0_5_ARSIZE,
      twiddle_h_rsc_0_5_ARLEN, twiddle_h_rsc_0_5_ARADDR, twiddle_h_rsc_0_5_ARID,
      twiddle_h_rsc_0_5_BREADY, twiddle_h_rsc_0_5_BVALID, twiddle_h_rsc_0_5_BUSER,
      twiddle_h_rsc_0_5_BRESP, twiddle_h_rsc_0_5_BID, twiddle_h_rsc_0_5_WREADY, twiddle_h_rsc_0_5_WVALID,
      twiddle_h_rsc_0_5_WUSER, twiddle_h_rsc_0_5_WLAST, twiddle_h_rsc_0_5_WSTRB,
      twiddle_h_rsc_0_5_WDATA, twiddle_h_rsc_0_5_AWREADY, twiddle_h_rsc_0_5_AWVALID,
      twiddle_h_rsc_0_5_AWUSER, twiddle_h_rsc_0_5_AWREGION, twiddle_h_rsc_0_5_AWQOS,
      twiddle_h_rsc_0_5_AWPROT, twiddle_h_rsc_0_5_AWCACHE, twiddle_h_rsc_0_5_AWLOCK,
      twiddle_h_rsc_0_5_AWBURST, twiddle_h_rsc_0_5_AWSIZE, twiddle_h_rsc_0_5_AWLEN,
      twiddle_h_rsc_0_5_AWADDR, twiddle_h_rsc_0_5_AWID, twiddle_h_rsc_triosy_0_5_lz,
      twiddle_h_rsc_0_6_s_tdone, twiddle_h_rsc_0_6_tr_write_done, twiddle_h_rsc_0_6_RREADY,
      twiddle_h_rsc_0_6_RVALID, twiddle_h_rsc_0_6_RUSER, twiddle_h_rsc_0_6_RLAST,
      twiddle_h_rsc_0_6_RRESP, twiddle_h_rsc_0_6_RDATA, twiddle_h_rsc_0_6_RID, twiddle_h_rsc_0_6_ARREADY,
      twiddle_h_rsc_0_6_ARVALID, twiddle_h_rsc_0_6_ARUSER, twiddle_h_rsc_0_6_ARREGION,
      twiddle_h_rsc_0_6_ARQOS, twiddle_h_rsc_0_6_ARPROT, twiddle_h_rsc_0_6_ARCACHE,
      twiddle_h_rsc_0_6_ARLOCK, twiddle_h_rsc_0_6_ARBURST, twiddle_h_rsc_0_6_ARSIZE,
      twiddle_h_rsc_0_6_ARLEN, twiddle_h_rsc_0_6_ARADDR, twiddle_h_rsc_0_6_ARID,
      twiddle_h_rsc_0_6_BREADY, twiddle_h_rsc_0_6_BVALID, twiddle_h_rsc_0_6_BUSER,
      twiddle_h_rsc_0_6_BRESP, twiddle_h_rsc_0_6_BID, twiddle_h_rsc_0_6_WREADY, twiddle_h_rsc_0_6_WVALID,
      twiddle_h_rsc_0_6_WUSER, twiddle_h_rsc_0_6_WLAST, twiddle_h_rsc_0_6_WSTRB,
      twiddle_h_rsc_0_6_WDATA, twiddle_h_rsc_0_6_AWREADY, twiddle_h_rsc_0_6_AWVALID,
      twiddle_h_rsc_0_6_AWUSER, twiddle_h_rsc_0_6_AWREGION, twiddle_h_rsc_0_6_AWQOS,
      twiddle_h_rsc_0_6_AWPROT, twiddle_h_rsc_0_6_AWCACHE, twiddle_h_rsc_0_6_AWLOCK,
      twiddle_h_rsc_0_6_AWBURST, twiddle_h_rsc_0_6_AWSIZE, twiddle_h_rsc_0_6_AWLEN,
      twiddle_h_rsc_0_6_AWADDR, twiddle_h_rsc_0_6_AWID, twiddle_h_rsc_triosy_0_6_lz,
      twiddle_h_rsc_0_7_s_tdone, twiddle_h_rsc_0_7_tr_write_done, twiddle_h_rsc_0_7_RREADY,
      twiddle_h_rsc_0_7_RVALID, twiddle_h_rsc_0_7_RUSER, twiddle_h_rsc_0_7_RLAST,
      twiddle_h_rsc_0_7_RRESP, twiddle_h_rsc_0_7_RDATA, twiddle_h_rsc_0_7_RID, twiddle_h_rsc_0_7_ARREADY,
      twiddle_h_rsc_0_7_ARVALID, twiddle_h_rsc_0_7_ARUSER, twiddle_h_rsc_0_7_ARREGION,
      twiddle_h_rsc_0_7_ARQOS, twiddle_h_rsc_0_7_ARPROT, twiddle_h_rsc_0_7_ARCACHE,
      twiddle_h_rsc_0_7_ARLOCK, twiddle_h_rsc_0_7_ARBURST, twiddle_h_rsc_0_7_ARSIZE,
      twiddle_h_rsc_0_7_ARLEN, twiddle_h_rsc_0_7_ARADDR, twiddle_h_rsc_0_7_ARID,
      twiddle_h_rsc_0_7_BREADY, twiddle_h_rsc_0_7_BVALID, twiddle_h_rsc_0_7_BUSER,
      twiddle_h_rsc_0_7_BRESP, twiddle_h_rsc_0_7_BID, twiddle_h_rsc_0_7_WREADY, twiddle_h_rsc_0_7_WVALID,
      twiddle_h_rsc_0_7_WUSER, twiddle_h_rsc_0_7_WLAST, twiddle_h_rsc_0_7_WSTRB,
      twiddle_h_rsc_0_7_WDATA, twiddle_h_rsc_0_7_AWREADY, twiddle_h_rsc_0_7_AWVALID,
      twiddle_h_rsc_0_7_AWUSER, twiddle_h_rsc_0_7_AWREGION, twiddle_h_rsc_0_7_AWQOS,
      twiddle_h_rsc_0_7_AWPROT, twiddle_h_rsc_0_7_AWCACHE, twiddle_h_rsc_0_7_AWLOCK,
      twiddle_h_rsc_0_7_AWBURST, twiddle_h_rsc_0_7_AWSIZE, twiddle_h_rsc_0_7_AWLEN,
      twiddle_h_rsc_0_7_AWADDR, twiddle_h_rsc_0_7_AWID, twiddle_h_rsc_triosy_0_7_lz,
      twiddle_h_rsc_0_8_s_tdone, twiddle_h_rsc_0_8_tr_write_done, twiddle_h_rsc_0_8_RREADY,
      twiddle_h_rsc_0_8_RVALID, twiddle_h_rsc_0_8_RUSER, twiddle_h_rsc_0_8_RLAST,
      twiddle_h_rsc_0_8_RRESP, twiddle_h_rsc_0_8_RDATA, twiddle_h_rsc_0_8_RID, twiddle_h_rsc_0_8_ARREADY,
      twiddle_h_rsc_0_8_ARVALID, twiddle_h_rsc_0_8_ARUSER, twiddle_h_rsc_0_8_ARREGION,
      twiddle_h_rsc_0_8_ARQOS, twiddle_h_rsc_0_8_ARPROT, twiddle_h_rsc_0_8_ARCACHE,
      twiddle_h_rsc_0_8_ARLOCK, twiddle_h_rsc_0_8_ARBURST, twiddle_h_rsc_0_8_ARSIZE,
      twiddle_h_rsc_0_8_ARLEN, twiddle_h_rsc_0_8_ARADDR, twiddle_h_rsc_0_8_ARID,
      twiddle_h_rsc_0_8_BREADY, twiddle_h_rsc_0_8_BVALID, twiddle_h_rsc_0_8_BUSER,
      twiddle_h_rsc_0_8_BRESP, twiddle_h_rsc_0_8_BID, twiddle_h_rsc_0_8_WREADY, twiddle_h_rsc_0_8_WVALID,
      twiddle_h_rsc_0_8_WUSER, twiddle_h_rsc_0_8_WLAST, twiddle_h_rsc_0_8_WSTRB,
      twiddle_h_rsc_0_8_WDATA, twiddle_h_rsc_0_8_AWREADY, twiddle_h_rsc_0_8_AWVALID,
      twiddle_h_rsc_0_8_AWUSER, twiddle_h_rsc_0_8_AWREGION, twiddle_h_rsc_0_8_AWQOS,
      twiddle_h_rsc_0_8_AWPROT, twiddle_h_rsc_0_8_AWCACHE, twiddle_h_rsc_0_8_AWLOCK,
      twiddle_h_rsc_0_8_AWBURST, twiddle_h_rsc_0_8_AWSIZE, twiddle_h_rsc_0_8_AWLEN,
      twiddle_h_rsc_0_8_AWADDR, twiddle_h_rsc_0_8_AWID, twiddle_h_rsc_triosy_0_8_lz,
      twiddle_h_rsc_0_9_s_tdone, twiddle_h_rsc_0_9_tr_write_done, twiddle_h_rsc_0_9_RREADY,
      twiddle_h_rsc_0_9_RVALID, twiddle_h_rsc_0_9_RUSER, twiddle_h_rsc_0_9_RLAST,
      twiddle_h_rsc_0_9_RRESP, twiddle_h_rsc_0_9_RDATA, twiddle_h_rsc_0_9_RID, twiddle_h_rsc_0_9_ARREADY,
      twiddle_h_rsc_0_9_ARVALID, twiddle_h_rsc_0_9_ARUSER, twiddle_h_rsc_0_9_ARREGION,
      twiddle_h_rsc_0_9_ARQOS, twiddle_h_rsc_0_9_ARPROT, twiddle_h_rsc_0_9_ARCACHE,
      twiddle_h_rsc_0_9_ARLOCK, twiddle_h_rsc_0_9_ARBURST, twiddle_h_rsc_0_9_ARSIZE,
      twiddle_h_rsc_0_9_ARLEN, twiddle_h_rsc_0_9_ARADDR, twiddle_h_rsc_0_9_ARID,
      twiddle_h_rsc_0_9_BREADY, twiddle_h_rsc_0_9_BVALID, twiddle_h_rsc_0_9_BUSER,
      twiddle_h_rsc_0_9_BRESP, twiddle_h_rsc_0_9_BID, twiddle_h_rsc_0_9_WREADY, twiddle_h_rsc_0_9_WVALID,
      twiddle_h_rsc_0_9_WUSER, twiddle_h_rsc_0_9_WLAST, twiddle_h_rsc_0_9_WSTRB,
      twiddle_h_rsc_0_9_WDATA, twiddle_h_rsc_0_9_AWREADY, twiddle_h_rsc_0_9_AWVALID,
      twiddle_h_rsc_0_9_AWUSER, twiddle_h_rsc_0_9_AWREGION, twiddle_h_rsc_0_9_AWQOS,
      twiddle_h_rsc_0_9_AWPROT, twiddle_h_rsc_0_9_AWCACHE, twiddle_h_rsc_0_9_AWLOCK,
      twiddle_h_rsc_0_9_AWBURST, twiddle_h_rsc_0_9_AWSIZE, twiddle_h_rsc_0_9_AWLEN,
      twiddle_h_rsc_0_9_AWADDR, twiddle_h_rsc_0_9_AWID, twiddle_h_rsc_triosy_0_9_lz,
      twiddle_h_rsc_0_10_s_tdone, twiddle_h_rsc_0_10_tr_write_done, twiddle_h_rsc_0_10_RREADY,
      twiddle_h_rsc_0_10_RVALID, twiddle_h_rsc_0_10_RUSER, twiddle_h_rsc_0_10_RLAST,
      twiddle_h_rsc_0_10_RRESP, twiddle_h_rsc_0_10_RDATA, twiddle_h_rsc_0_10_RID,
      twiddle_h_rsc_0_10_ARREADY, twiddle_h_rsc_0_10_ARVALID, twiddle_h_rsc_0_10_ARUSER,
      twiddle_h_rsc_0_10_ARREGION, twiddle_h_rsc_0_10_ARQOS, twiddle_h_rsc_0_10_ARPROT,
      twiddle_h_rsc_0_10_ARCACHE, twiddle_h_rsc_0_10_ARLOCK, twiddle_h_rsc_0_10_ARBURST,
      twiddle_h_rsc_0_10_ARSIZE, twiddle_h_rsc_0_10_ARLEN, twiddle_h_rsc_0_10_ARADDR,
      twiddle_h_rsc_0_10_ARID, twiddle_h_rsc_0_10_BREADY, twiddle_h_rsc_0_10_BVALID,
      twiddle_h_rsc_0_10_BUSER, twiddle_h_rsc_0_10_BRESP, twiddle_h_rsc_0_10_BID,
      twiddle_h_rsc_0_10_WREADY, twiddle_h_rsc_0_10_WVALID, twiddle_h_rsc_0_10_WUSER,
      twiddle_h_rsc_0_10_WLAST, twiddle_h_rsc_0_10_WSTRB, twiddle_h_rsc_0_10_WDATA,
      twiddle_h_rsc_0_10_AWREADY, twiddle_h_rsc_0_10_AWVALID, twiddle_h_rsc_0_10_AWUSER,
      twiddle_h_rsc_0_10_AWREGION, twiddle_h_rsc_0_10_AWQOS, twiddle_h_rsc_0_10_AWPROT,
      twiddle_h_rsc_0_10_AWCACHE, twiddle_h_rsc_0_10_AWLOCK, twiddle_h_rsc_0_10_AWBURST,
      twiddle_h_rsc_0_10_AWSIZE, twiddle_h_rsc_0_10_AWLEN, twiddle_h_rsc_0_10_AWADDR,
      twiddle_h_rsc_0_10_AWID, twiddle_h_rsc_triosy_0_10_lz, twiddle_h_rsc_0_11_s_tdone,
      twiddle_h_rsc_0_11_tr_write_done, twiddle_h_rsc_0_11_RREADY, twiddle_h_rsc_0_11_RVALID,
      twiddle_h_rsc_0_11_RUSER, twiddle_h_rsc_0_11_RLAST, twiddle_h_rsc_0_11_RRESP,
      twiddle_h_rsc_0_11_RDATA, twiddle_h_rsc_0_11_RID, twiddle_h_rsc_0_11_ARREADY,
      twiddle_h_rsc_0_11_ARVALID, twiddle_h_rsc_0_11_ARUSER, twiddle_h_rsc_0_11_ARREGION,
      twiddle_h_rsc_0_11_ARQOS, twiddle_h_rsc_0_11_ARPROT, twiddle_h_rsc_0_11_ARCACHE,
      twiddle_h_rsc_0_11_ARLOCK, twiddle_h_rsc_0_11_ARBURST, twiddle_h_rsc_0_11_ARSIZE,
      twiddle_h_rsc_0_11_ARLEN, twiddle_h_rsc_0_11_ARADDR, twiddle_h_rsc_0_11_ARID,
      twiddle_h_rsc_0_11_BREADY, twiddle_h_rsc_0_11_BVALID, twiddle_h_rsc_0_11_BUSER,
      twiddle_h_rsc_0_11_BRESP, twiddle_h_rsc_0_11_BID, twiddle_h_rsc_0_11_WREADY,
      twiddle_h_rsc_0_11_WVALID, twiddle_h_rsc_0_11_WUSER, twiddle_h_rsc_0_11_WLAST,
      twiddle_h_rsc_0_11_WSTRB, twiddle_h_rsc_0_11_WDATA, twiddle_h_rsc_0_11_AWREADY,
      twiddle_h_rsc_0_11_AWVALID, twiddle_h_rsc_0_11_AWUSER, twiddle_h_rsc_0_11_AWREGION,
      twiddle_h_rsc_0_11_AWQOS, twiddle_h_rsc_0_11_AWPROT, twiddle_h_rsc_0_11_AWCACHE,
      twiddle_h_rsc_0_11_AWLOCK, twiddle_h_rsc_0_11_AWBURST, twiddle_h_rsc_0_11_AWSIZE,
      twiddle_h_rsc_0_11_AWLEN, twiddle_h_rsc_0_11_AWADDR, twiddle_h_rsc_0_11_AWID,
      twiddle_h_rsc_triosy_0_11_lz, twiddle_h_rsc_0_12_s_tdone, twiddle_h_rsc_0_12_tr_write_done,
      twiddle_h_rsc_0_12_RREADY, twiddle_h_rsc_0_12_RVALID, twiddle_h_rsc_0_12_RUSER,
      twiddle_h_rsc_0_12_RLAST, twiddle_h_rsc_0_12_RRESP, twiddle_h_rsc_0_12_RDATA,
      twiddle_h_rsc_0_12_RID, twiddle_h_rsc_0_12_ARREADY, twiddle_h_rsc_0_12_ARVALID,
      twiddle_h_rsc_0_12_ARUSER, twiddle_h_rsc_0_12_ARREGION, twiddle_h_rsc_0_12_ARQOS,
      twiddle_h_rsc_0_12_ARPROT, twiddle_h_rsc_0_12_ARCACHE, twiddle_h_rsc_0_12_ARLOCK,
      twiddle_h_rsc_0_12_ARBURST, twiddle_h_rsc_0_12_ARSIZE, twiddle_h_rsc_0_12_ARLEN,
      twiddle_h_rsc_0_12_ARADDR, twiddle_h_rsc_0_12_ARID, twiddle_h_rsc_0_12_BREADY,
      twiddle_h_rsc_0_12_BVALID, twiddle_h_rsc_0_12_BUSER, twiddle_h_rsc_0_12_BRESP,
      twiddle_h_rsc_0_12_BID, twiddle_h_rsc_0_12_WREADY, twiddle_h_rsc_0_12_WVALID,
      twiddle_h_rsc_0_12_WUSER, twiddle_h_rsc_0_12_WLAST, twiddle_h_rsc_0_12_WSTRB,
      twiddle_h_rsc_0_12_WDATA, twiddle_h_rsc_0_12_AWREADY, twiddle_h_rsc_0_12_AWVALID,
      twiddle_h_rsc_0_12_AWUSER, twiddle_h_rsc_0_12_AWREGION, twiddle_h_rsc_0_12_AWQOS,
      twiddle_h_rsc_0_12_AWPROT, twiddle_h_rsc_0_12_AWCACHE, twiddle_h_rsc_0_12_AWLOCK,
      twiddle_h_rsc_0_12_AWBURST, twiddle_h_rsc_0_12_AWSIZE, twiddle_h_rsc_0_12_AWLEN,
      twiddle_h_rsc_0_12_AWADDR, twiddle_h_rsc_0_12_AWID, twiddle_h_rsc_triosy_0_12_lz,
      twiddle_h_rsc_0_13_s_tdone, twiddle_h_rsc_0_13_tr_write_done, twiddle_h_rsc_0_13_RREADY,
      twiddle_h_rsc_0_13_RVALID, twiddle_h_rsc_0_13_RUSER, twiddle_h_rsc_0_13_RLAST,
      twiddle_h_rsc_0_13_RRESP, twiddle_h_rsc_0_13_RDATA, twiddle_h_rsc_0_13_RID,
      twiddle_h_rsc_0_13_ARREADY, twiddle_h_rsc_0_13_ARVALID, twiddle_h_rsc_0_13_ARUSER,
      twiddle_h_rsc_0_13_ARREGION, twiddle_h_rsc_0_13_ARQOS, twiddle_h_rsc_0_13_ARPROT,
      twiddle_h_rsc_0_13_ARCACHE, twiddle_h_rsc_0_13_ARLOCK, twiddle_h_rsc_0_13_ARBURST,
      twiddle_h_rsc_0_13_ARSIZE, twiddle_h_rsc_0_13_ARLEN, twiddle_h_rsc_0_13_ARADDR,
      twiddle_h_rsc_0_13_ARID, twiddle_h_rsc_0_13_BREADY, twiddle_h_rsc_0_13_BVALID,
      twiddle_h_rsc_0_13_BUSER, twiddle_h_rsc_0_13_BRESP, twiddle_h_rsc_0_13_BID,
      twiddle_h_rsc_0_13_WREADY, twiddle_h_rsc_0_13_WVALID, twiddle_h_rsc_0_13_WUSER,
      twiddle_h_rsc_0_13_WLAST, twiddle_h_rsc_0_13_WSTRB, twiddle_h_rsc_0_13_WDATA,
      twiddle_h_rsc_0_13_AWREADY, twiddle_h_rsc_0_13_AWVALID, twiddle_h_rsc_0_13_AWUSER,
      twiddle_h_rsc_0_13_AWREGION, twiddle_h_rsc_0_13_AWQOS, twiddle_h_rsc_0_13_AWPROT,
      twiddle_h_rsc_0_13_AWCACHE, twiddle_h_rsc_0_13_AWLOCK, twiddle_h_rsc_0_13_AWBURST,
      twiddle_h_rsc_0_13_AWSIZE, twiddle_h_rsc_0_13_AWLEN, twiddle_h_rsc_0_13_AWADDR,
      twiddle_h_rsc_0_13_AWID, twiddle_h_rsc_triosy_0_13_lz, twiddle_h_rsc_0_14_s_tdone,
      twiddle_h_rsc_0_14_tr_write_done, twiddle_h_rsc_0_14_RREADY, twiddle_h_rsc_0_14_RVALID,
      twiddle_h_rsc_0_14_RUSER, twiddle_h_rsc_0_14_RLAST, twiddle_h_rsc_0_14_RRESP,
      twiddle_h_rsc_0_14_RDATA, twiddle_h_rsc_0_14_RID, twiddle_h_rsc_0_14_ARREADY,
      twiddle_h_rsc_0_14_ARVALID, twiddle_h_rsc_0_14_ARUSER, twiddle_h_rsc_0_14_ARREGION,
      twiddle_h_rsc_0_14_ARQOS, twiddle_h_rsc_0_14_ARPROT, twiddle_h_rsc_0_14_ARCACHE,
      twiddle_h_rsc_0_14_ARLOCK, twiddle_h_rsc_0_14_ARBURST, twiddle_h_rsc_0_14_ARSIZE,
      twiddle_h_rsc_0_14_ARLEN, twiddle_h_rsc_0_14_ARADDR, twiddle_h_rsc_0_14_ARID,
      twiddle_h_rsc_0_14_BREADY, twiddle_h_rsc_0_14_BVALID, twiddle_h_rsc_0_14_BUSER,
      twiddle_h_rsc_0_14_BRESP, twiddle_h_rsc_0_14_BID, twiddle_h_rsc_0_14_WREADY,
      twiddle_h_rsc_0_14_WVALID, twiddle_h_rsc_0_14_WUSER, twiddle_h_rsc_0_14_WLAST,
      twiddle_h_rsc_0_14_WSTRB, twiddle_h_rsc_0_14_WDATA, twiddle_h_rsc_0_14_AWREADY,
      twiddle_h_rsc_0_14_AWVALID, twiddle_h_rsc_0_14_AWUSER, twiddle_h_rsc_0_14_AWREGION,
      twiddle_h_rsc_0_14_AWQOS, twiddle_h_rsc_0_14_AWPROT, twiddle_h_rsc_0_14_AWCACHE,
      twiddle_h_rsc_0_14_AWLOCK, twiddle_h_rsc_0_14_AWBURST, twiddle_h_rsc_0_14_AWSIZE,
      twiddle_h_rsc_0_14_AWLEN, twiddle_h_rsc_0_14_AWADDR, twiddle_h_rsc_0_14_AWID,
      twiddle_h_rsc_triosy_0_14_lz, twiddle_h_rsc_0_15_s_tdone, twiddle_h_rsc_0_15_tr_write_done,
      twiddle_h_rsc_0_15_RREADY, twiddle_h_rsc_0_15_RVALID, twiddle_h_rsc_0_15_RUSER,
      twiddle_h_rsc_0_15_RLAST, twiddle_h_rsc_0_15_RRESP, twiddle_h_rsc_0_15_RDATA,
      twiddle_h_rsc_0_15_RID, twiddle_h_rsc_0_15_ARREADY, twiddle_h_rsc_0_15_ARVALID,
      twiddle_h_rsc_0_15_ARUSER, twiddle_h_rsc_0_15_ARREGION, twiddle_h_rsc_0_15_ARQOS,
      twiddle_h_rsc_0_15_ARPROT, twiddle_h_rsc_0_15_ARCACHE, twiddle_h_rsc_0_15_ARLOCK,
      twiddle_h_rsc_0_15_ARBURST, twiddle_h_rsc_0_15_ARSIZE, twiddle_h_rsc_0_15_ARLEN,
      twiddle_h_rsc_0_15_ARADDR, twiddle_h_rsc_0_15_ARID, twiddle_h_rsc_0_15_BREADY,
      twiddle_h_rsc_0_15_BVALID, twiddle_h_rsc_0_15_BUSER, twiddle_h_rsc_0_15_BRESP,
      twiddle_h_rsc_0_15_BID, twiddle_h_rsc_0_15_WREADY, twiddle_h_rsc_0_15_WVALID,
      twiddle_h_rsc_0_15_WUSER, twiddle_h_rsc_0_15_WLAST, twiddle_h_rsc_0_15_WSTRB,
      twiddle_h_rsc_0_15_WDATA, twiddle_h_rsc_0_15_AWREADY, twiddle_h_rsc_0_15_AWVALID,
      twiddle_h_rsc_0_15_AWUSER, twiddle_h_rsc_0_15_AWREGION, twiddle_h_rsc_0_15_AWQOS,
      twiddle_h_rsc_0_15_AWPROT, twiddle_h_rsc_0_15_AWCACHE, twiddle_h_rsc_0_15_AWLOCK,
      twiddle_h_rsc_0_15_AWBURST, twiddle_h_rsc_0_15_AWSIZE, twiddle_h_rsc_0_15_AWLEN,
      twiddle_h_rsc_0_15_AWADDR, twiddle_h_rsc_0_15_AWID, twiddle_h_rsc_triosy_0_15_lz,
      yt_rsc_0_0_i_clken_d, yt_rsc_0_0_i_q_d, yt_rsc_0_1_i_q_d, yt_rsc_0_2_i_q_d,
      yt_rsc_0_3_i_q_d, yt_rsc_0_4_i_q_d, yt_rsc_0_5_i_q_d, yt_rsc_0_6_i_q_d, yt_rsc_0_7_i_q_d,
      yt_rsc_0_8_i_q_d, yt_rsc_0_9_i_q_d, yt_rsc_0_10_i_q_d, yt_rsc_0_11_i_q_d, yt_rsc_0_12_i_q_d,
      yt_rsc_0_13_i_q_d, yt_rsc_0_14_i_q_d, yt_rsc_0_15_i_q_d, yt_rsc_0_16_i_clken_d,
      yt_rsc_0_16_i_q_d, yt_rsc_0_17_i_q_d, yt_rsc_0_18_i_q_d, yt_rsc_0_19_i_q_d,
      yt_rsc_0_20_i_q_d, yt_rsc_0_21_i_q_d, yt_rsc_0_22_i_q_d, yt_rsc_0_23_i_q_d,
      yt_rsc_0_24_i_q_d, yt_rsc_0_25_i_q_d, yt_rsc_0_26_i_q_d, yt_rsc_0_27_i_q_d,
      yt_rsc_0_28_i_q_d, yt_rsc_0_29_i_q_d, yt_rsc_0_30_i_q_d, yt_rsc_0_31_i_q_d,
      yt_rsc_1_0_i_clken_d, yt_rsc_1_0_i_d_d, yt_rsc_1_0_i_q_d, yt_rsc_1_1_i_d_d,
      yt_rsc_1_1_i_q_d, yt_rsc_1_2_i_d_d, yt_rsc_1_2_i_q_d, yt_rsc_1_3_i_d_d, yt_rsc_1_3_i_q_d,
      yt_rsc_1_4_i_d_d, yt_rsc_1_4_i_q_d, yt_rsc_1_5_i_d_d, yt_rsc_1_5_i_q_d, yt_rsc_1_6_i_d_d,
      yt_rsc_1_6_i_q_d, yt_rsc_1_7_i_d_d, yt_rsc_1_7_i_q_d, yt_rsc_1_8_i_d_d, yt_rsc_1_8_i_q_d,
      yt_rsc_1_9_i_d_d, yt_rsc_1_9_i_q_d, yt_rsc_1_10_i_d_d, yt_rsc_1_10_i_q_d, yt_rsc_1_11_i_d_d,
      yt_rsc_1_11_i_q_d, yt_rsc_1_12_i_d_d, yt_rsc_1_12_i_q_d, yt_rsc_1_13_i_d_d,
      yt_rsc_1_13_i_q_d, yt_rsc_1_14_i_d_d, yt_rsc_1_14_i_q_d, yt_rsc_1_15_i_d_d,
      yt_rsc_1_15_i_q_d, yt_rsc_1_16_i_clken_d, yt_rsc_1_16_i_d_d, yt_rsc_1_16_i_q_d,
      yt_rsc_1_17_i_d_d, yt_rsc_1_17_i_q_d, yt_rsc_1_18_i_d_d, yt_rsc_1_18_i_q_d,
      yt_rsc_1_19_i_d_d, yt_rsc_1_19_i_q_d, yt_rsc_1_20_i_d_d, yt_rsc_1_20_i_q_d,
      yt_rsc_1_21_i_d_d, yt_rsc_1_21_i_q_d, yt_rsc_1_22_i_d_d, yt_rsc_1_22_i_q_d,
      yt_rsc_1_23_i_d_d, yt_rsc_1_23_i_q_d, yt_rsc_1_24_i_d_d, yt_rsc_1_24_i_q_d,
      yt_rsc_1_25_i_d_d, yt_rsc_1_25_i_q_d, yt_rsc_1_26_i_d_d, yt_rsc_1_26_i_q_d,
      yt_rsc_1_27_i_d_d, yt_rsc_1_27_i_q_d, yt_rsc_1_28_i_d_d, yt_rsc_1_28_i_q_d,
      yt_rsc_1_29_i_d_d, yt_rsc_1_29_i_q_d, yt_rsc_1_30_i_d_d, yt_rsc_1_30_i_q_d,
      yt_rsc_1_31_i_d_d, yt_rsc_1_31_i_q_d, yt_rsc_0_0_i_d_d_pff, yt_rsc_0_0_i_radr_d_pff,
      yt_rsc_0_0_i_wadr_d_pff, yt_rsc_0_0_i_we_d_pff, yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_pff,
      yt_rsc_0_1_i_d_d_pff, yt_rsc_0_2_i_d_d_pff, yt_rsc_0_3_i_d_d_pff, yt_rsc_0_4_i_d_d_pff,
      yt_rsc_0_5_i_d_d_pff, yt_rsc_0_6_i_d_d_pff, yt_rsc_0_7_i_d_d_pff, yt_rsc_0_8_i_d_d_pff,
      yt_rsc_0_9_i_d_d_pff, yt_rsc_0_10_i_d_d_pff, yt_rsc_0_11_i_d_d_pff, yt_rsc_0_12_i_d_d_pff,
      yt_rsc_0_13_i_d_d_pff, yt_rsc_0_14_i_d_d_pff, yt_rsc_0_15_i_d_d_pff, yt_rsc_0_16_i_wadr_d_pff,
      yt_rsc_0_16_i_we_d_pff, yt_rsc_1_0_i_wadr_d_pff, yt_rsc_1_0_i_we_d_pff, yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_pff,
      yt_rsc_1_16_i_wadr_d_pff, yt_rsc_1_16_i_we_d_pff
);
  input clk;
  input rst;
  input xt_rsc_0_0_s_tdone;
  input xt_rsc_0_0_tr_write_done;
  input xt_rsc_0_0_RREADY;
  output xt_rsc_0_0_RVALID;
  output xt_rsc_0_0_RUSER;
  output xt_rsc_0_0_RLAST;
  output [1:0] xt_rsc_0_0_RRESP;
  output [31:0] xt_rsc_0_0_RDATA;
  output xt_rsc_0_0_RID;
  output xt_rsc_0_0_ARREADY;
  input xt_rsc_0_0_ARVALID;
  input xt_rsc_0_0_ARUSER;
  input [3:0] xt_rsc_0_0_ARREGION;
  input [3:0] xt_rsc_0_0_ARQOS;
  input [2:0] xt_rsc_0_0_ARPROT;
  input [3:0] xt_rsc_0_0_ARCACHE;
  input xt_rsc_0_0_ARLOCK;
  input [1:0] xt_rsc_0_0_ARBURST;
  input [2:0] xt_rsc_0_0_ARSIZE;
  input [7:0] xt_rsc_0_0_ARLEN;
  input [11:0] xt_rsc_0_0_ARADDR;
  input xt_rsc_0_0_ARID;
  input xt_rsc_0_0_BREADY;
  output xt_rsc_0_0_BVALID;
  output xt_rsc_0_0_BUSER;
  output [1:0] xt_rsc_0_0_BRESP;
  output xt_rsc_0_0_BID;
  output xt_rsc_0_0_WREADY;
  input xt_rsc_0_0_WVALID;
  input xt_rsc_0_0_WUSER;
  input xt_rsc_0_0_WLAST;
  input [3:0] xt_rsc_0_0_WSTRB;
  input [31:0] xt_rsc_0_0_WDATA;
  output xt_rsc_0_0_AWREADY;
  input xt_rsc_0_0_AWVALID;
  input xt_rsc_0_0_AWUSER;
  input [3:0] xt_rsc_0_0_AWREGION;
  input [3:0] xt_rsc_0_0_AWQOS;
  input [2:0] xt_rsc_0_0_AWPROT;
  input [3:0] xt_rsc_0_0_AWCACHE;
  input xt_rsc_0_0_AWLOCK;
  input [1:0] xt_rsc_0_0_AWBURST;
  input [2:0] xt_rsc_0_0_AWSIZE;
  input [7:0] xt_rsc_0_0_AWLEN;
  input [11:0] xt_rsc_0_0_AWADDR;
  input xt_rsc_0_0_AWID;
  output xt_rsc_triosy_0_0_lz;
  input xt_rsc_0_1_s_tdone;
  input xt_rsc_0_1_tr_write_done;
  input xt_rsc_0_1_RREADY;
  output xt_rsc_0_1_RVALID;
  output xt_rsc_0_1_RUSER;
  output xt_rsc_0_1_RLAST;
  output [1:0] xt_rsc_0_1_RRESP;
  output [31:0] xt_rsc_0_1_RDATA;
  output xt_rsc_0_1_RID;
  output xt_rsc_0_1_ARREADY;
  input xt_rsc_0_1_ARVALID;
  input xt_rsc_0_1_ARUSER;
  input [3:0] xt_rsc_0_1_ARREGION;
  input [3:0] xt_rsc_0_1_ARQOS;
  input [2:0] xt_rsc_0_1_ARPROT;
  input [3:0] xt_rsc_0_1_ARCACHE;
  input xt_rsc_0_1_ARLOCK;
  input [1:0] xt_rsc_0_1_ARBURST;
  input [2:0] xt_rsc_0_1_ARSIZE;
  input [7:0] xt_rsc_0_1_ARLEN;
  input [11:0] xt_rsc_0_1_ARADDR;
  input xt_rsc_0_1_ARID;
  input xt_rsc_0_1_BREADY;
  output xt_rsc_0_1_BVALID;
  output xt_rsc_0_1_BUSER;
  output [1:0] xt_rsc_0_1_BRESP;
  output xt_rsc_0_1_BID;
  output xt_rsc_0_1_WREADY;
  input xt_rsc_0_1_WVALID;
  input xt_rsc_0_1_WUSER;
  input xt_rsc_0_1_WLAST;
  input [3:0] xt_rsc_0_1_WSTRB;
  input [31:0] xt_rsc_0_1_WDATA;
  output xt_rsc_0_1_AWREADY;
  input xt_rsc_0_1_AWVALID;
  input xt_rsc_0_1_AWUSER;
  input [3:0] xt_rsc_0_1_AWREGION;
  input [3:0] xt_rsc_0_1_AWQOS;
  input [2:0] xt_rsc_0_1_AWPROT;
  input [3:0] xt_rsc_0_1_AWCACHE;
  input xt_rsc_0_1_AWLOCK;
  input [1:0] xt_rsc_0_1_AWBURST;
  input [2:0] xt_rsc_0_1_AWSIZE;
  input [7:0] xt_rsc_0_1_AWLEN;
  input [11:0] xt_rsc_0_1_AWADDR;
  input xt_rsc_0_1_AWID;
  output xt_rsc_triosy_0_1_lz;
  input xt_rsc_0_2_s_tdone;
  input xt_rsc_0_2_tr_write_done;
  input xt_rsc_0_2_RREADY;
  output xt_rsc_0_2_RVALID;
  output xt_rsc_0_2_RUSER;
  output xt_rsc_0_2_RLAST;
  output [1:0] xt_rsc_0_2_RRESP;
  output [31:0] xt_rsc_0_2_RDATA;
  output xt_rsc_0_2_RID;
  output xt_rsc_0_2_ARREADY;
  input xt_rsc_0_2_ARVALID;
  input xt_rsc_0_2_ARUSER;
  input [3:0] xt_rsc_0_2_ARREGION;
  input [3:0] xt_rsc_0_2_ARQOS;
  input [2:0] xt_rsc_0_2_ARPROT;
  input [3:0] xt_rsc_0_2_ARCACHE;
  input xt_rsc_0_2_ARLOCK;
  input [1:0] xt_rsc_0_2_ARBURST;
  input [2:0] xt_rsc_0_2_ARSIZE;
  input [7:0] xt_rsc_0_2_ARLEN;
  input [11:0] xt_rsc_0_2_ARADDR;
  input xt_rsc_0_2_ARID;
  input xt_rsc_0_2_BREADY;
  output xt_rsc_0_2_BVALID;
  output xt_rsc_0_2_BUSER;
  output [1:0] xt_rsc_0_2_BRESP;
  output xt_rsc_0_2_BID;
  output xt_rsc_0_2_WREADY;
  input xt_rsc_0_2_WVALID;
  input xt_rsc_0_2_WUSER;
  input xt_rsc_0_2_WLAST;
  input [3:0] xt_rsc_0_2_WSTRB;
  input [31:0] xt_rsc_0_2_WDATA;
  output xt_rsc_0_2_AWREADY;
  input xt_rsc_0_2_AWVALID;
  input xt_rsc_0_2_AWUSER;
  input [3:0] xt_rsc_0_2_AWREGION;
  input [3:0] xt_rsc_0_2_AWQOS;
  input [2:0] xt_rsc_0_2_AWPROT;
  input [3:0] xt_rsc_0_2_AWCACHE;
  input xt_rsc_0_2_AWLOCK;
  input [1:0] xt_rsc_0_2_AWBURST;
  input [2:0] xt_rsc_0_2_AWSIZE;
  input [7:0] xt_rsc_0_2_AWLEN;
  input [11:0] xt_rsc_0_2_AWADDR;
  input xt_rsc_0_2_AWID;
  output xt_rsc_triosy_0_2_lz;
  input xt_rsc_0_3_s_tdone;
  input xt_rsc_0_3_tr_write_done;
  input xt_rsc_0_3_RREADY;
  output xt_rsc_0_3_RVALID;
  output xt_rsc_0_3_RUSER;
  output xt_rsc_0_3_RLAST;
  output [1:0] xt_rsc_0_3_RRESP;
  output [31:0] xt_rsc_0_3_RDATA;
  output xt_rsc_0_3_RID;
  output xt_rsc_0_3_ARREADY;
  input xt_rsc_0_3_ARVALID;
  input xt_rsc_0_3_ARUSER;
  input [3:0] xt_rsc_0_3_ARREGION;
  input [3:0] xt_rsc_0_3_ARQOS;
  input [2:0] xt_rsc_0_3_ARPROT;
  input [3:0] xt_rsc_0_3_ARCACHE;
  input xt_rsc_0_3_ARLOCK;
  input [1:0] xt_rsc_0_3_ARBURST;
  input [2:0] xt_rsc_0_3_ARSIZE;
  input [7:0] xt_rsc_0_3_ARLEN;
  input [11:0] xt_rsc_0_3_ARADDR;
  input xt_rsc_0_3_ARID;
  input xt_rsc_0_3_BREADY;
  output xt_rsc_0_3_BVALID;
  output xt_rsc_0_3_BUSER;
  output [1:0] xt_rsc_0_3_BRESP;
  output xt_rsc_0_3_BID;
  output xt_rsc_0_3_WREADY;
  input xt_rsc_0_3_WVALID;
  input xt_rsc_0_3_WUSER;
  input xt_rsc_0_3_WLAST;
  input [3:0] xt_rsc_0_3_WSTRB;
  input [31:0] xt_rsc_0_3_WDATA;
  output xt_rsc_0_3_AWREADY;
  input xt_rsc_0_3_AWVALID;
  input xt_rsc_0_3_AWUSER;
  input [3:0] xt_rsc_0_3_AWREGION;
  input [3:0] xt_rsc_0_3_AWQOS;
  input [2:0] xt_rsc_0_3_AWPROT;
  input [3:0] xt_rsc_0_3_AWCACHE;
  input xt_rsc_0_3_AWLOCK;
  input [1:0] xt_rsc_0_3_AWBURST;
  input [2:0] xt_rsc_0_3_AWSIZE;
  input [7:0] xt_rsc_0_3_AWLEN;
  input [11:0] xt_rsc_0_3_AWADDR;
  input xt_rsc_0_3_AWID;
  output xt_rsc_triosy_0_3_lz;
  input xt_rsc_0_4_s_tdone;
  input xt_rsc_0_4_tr_write_done;
  input xt_rsc_0_4_RREADY;
  output xt_rsc_0_4_RVALID;
  output xt_rsc_0_4_RUSER;
  output xt_rsc_0_4_RLAST;
  output [1:0] xt_rsc_0_4_RRESP;
  output [31:0] xt_rsc_0_4_RDATA;
  output xt_rsc_0_4_RID;
  output xt_rsc_0_4_ARREADY;
  input xt_rsc_0_4_ARVALID;
  input xt_rsc_0_4_ARUSER;
  input [3:0] xt_rsc_0_4_ARREGION;
  input [3:0] xt_rsc_0_4_ARQOS;
  input [2:0] xt_rsc_0_4_ARPROT;
  input [3:0] xt_rsc_0_4_ARCACHE;
  input xt_rsc_0_4_ARLOCK;
  input [1:0] xt_rsc_0_4_ARBURST;
  input [2:0] xt_rsc_0_4_ARSIZE;
  input [7:0] xt_rsc_0_4_ARLEN;
  input [11:0] xt_rsc_0_4_ARADDR;
  input xt_rsc_0_4_ARID;
  input xt_rsc_0_4_BREADY;
  output xt_rsc_0_4_BVALID;
  output xt_rsc_0_4_BUSER;
  output [1:0] xt_rsc_0_4_BRESP;
  output xt_rsc_0_4_BID;
  output xt_rsc_0_4_WREADY;
  input xt_rsc_0_4_WVALID;
  input xt_rsc_0_4_WUSER;
  input xt_rsc_0_4_WLAST;
  input [3:0] xt_rsc_0_4_WSTRB;
  input [31:0] xt_rsc_0_4_WDATA;
  output xt_rsc_0_4_AWREADY;
  input xt_rsc_0_4_AWVALID;
  input xt_rsc_0_4_AWUSER;
  input [3:0] xt_rsc_0_4_AWREGION;
  input [3:0] xt_rsc_0_4_AWQOS;
  input [2:0] xt_rsc_0_4_AWPROT;
  input [3:0] xt_rsc_0_4_AWCACHE;
  input xt_rsc_0_4_AWLOCK;
  input [1:0] xt_rsc_0_4_AWBURST;
  input [2:0] xt_rsc_0_4_AWSIZE;
  input [7:0] xt_rsc_0_4_AWLEN;
  input [11:0] xt_rsc_0_4_AWADDR;
  input xt_rsc_0_4_AWID;
  output xt_rsc_triosy_0_4_lz;
  input xt_rsc_0_5_s_tdone;
  input xt_rsc_0_5_tr_write_done;
  input xt_rsc_0_5_RREADY;
  output xt_rsc_0_5_RVALID;
  output xt_rsc_0_5_RUSER;
  output xt_rsc_0_5_RLAST;
  output [1:0] xt_rsc_0_5_RRESP;
  output [31:0] xt_rsc_0_5_RDATA;
  output xt_rsc_0_5_RID;
  output xt_rsc_0_5_ARREADY;
  input xt_rsc_0_5_ARVALID;
  input xt_rsc_0_5_ARUSER;
  input [3:0] xt_rsc_0_5_ARREGION;
  input [3:0] xt_rsc_0_5_ARQOS;
  input [2:0] xt_rsc_0_5_ARPROT;
  input [3:0] xt_rsc_0_5_ARCACHE;
  input xt_rsc_0_5_ARLOCK;
  input [1:0] xt_rsc_0_5_ARBURST;
  input [2:0] xt_rsc_0_5_ARSIZE;
  input [7:0] xt_rsc_0_5_ARLEN;
  input [11:0] xt_rsc_0_5_ARADDR;
  input xt_rsc_0_5_ARID;
  input xt_rsc_0_5_BREADY;
  output xt_rsc_0_5_BVALID;
  output xt_rsc_0_5_BUSER;
  output [1:0] xt_rsc_0_5_BRESP;
  output xt_rsc_0_5_BID;
  output xt_rsc_0_5_WREADY;
  input xt_rsc_0_5_WVALID;
  input xt_rsc_0_5_WUSER;
  input xt_rsc_0_5_WLAST;
  input [3:0] xt_rsc_0_5_WSTRB;
  input [31:0] xt_rsc_0_5_WDATA;
  output xt_rsc_0_5_AWREADY;
  input xt_rsc_0_5_AWVALID;
  input xt_rsc_0_5_AWUSER;
  input [3:0] xt_rsc_0_5_AWREGION;
  input [3:0] xt_rsc_0_5_AWQOS;
  input [2:0] xt_rsc_0_5_AWPROT;
  input [3:0] xt_rsc_0_5_AWCACHE;
  input xt_rsc_0_5_AWLOCK;
  input [1:0] xt_rsc_0_5_AWBURST;
  input [2:0] xt_rsc_0_5_AWSIZE;
  input [7:0] xt_rsc_0_5_AWLEN;
  input [11:0] xt_rsc_0_5_AWADDR;
  input xt_rsc_0_5_AWID;
  output xt_rsc_triosy_0_5_lz;
  input xt_rsc_0_6_s_tdone;
  input xt_rsc_0_6_tr_write_done;
  input xt_rsc_0_6_RREADY;
  output xt_rsc_0_6_RVALID;
  output xt_rsc_0_6_RUSER;
  output xt_rsc_0_6_RLAST;
  output [1:0] xt_rsc_0_6_RRESP;
  output [31:0] xt_rsc_0_6_RDATA;
  output xt_rsc_0_6_RID;
  output xt_rsc_0_6_ARREADY;
  input xt_rsc_0_6_ARVALID;
  input xt_rsc_0_6_ARUSER;
  input [3:0] xt_rsc_0_6_ARREGION;
  input [3:0] xt_rsc_0_6_ARQOS;
  input [2:0] xt_rsc_0_6_ARPROT;
  input [3:0] xt_rsc_0_6_ARCACHE;
  input xt_rsc_0_6_ARLOCK;
  input [1:0] xt_rsc_0_6_ARBURST;
  input [2:0] xt_rsc_0_6_ARSIZE;
  input [7:0] xt_rsc_0_6_ARLEN;
  input [11:0] xt_rsc_0_6_ARADDR;
  input xt_rsc_0_6_ARID;
  input xt_rsc_0_6_BREADY;
  output xt_rsc_0_6_BVALID;
  output xt_rsc_0_6_BUSER;
  output [1:0] xt_rsc_0_6_BRESP;
  output xt_rsc_0_6_BID;
  output xt_rsc_0_6_WREADY;
  input xt_rsc_0_6_WVALID;
  input xt_rsc_0_6_WUSER;
  input xt_rsc_0_6_WLAST;
  input [3:0] xt_rsc_0_6_WSTRB;
  input [31:0] xt_rsc_0_6_WDATA;
  output xt_rsc_0_6_AWREADY;
  input xt_rsc_0_6_AWVALID;
  input xt_rsc_0_6_AWUSER;
  input [3:0] xt_rsc_0_6_AWREGION;
  input [3:0] xt_rsc_0_6_AWQOS;
  input [2:0] xt_rsc_0_6_AWPROT;
  input [3:0] xt_rsc_0_6_AWCACHE;
  input xt_rsc_0_6_AWLOCK;
  input [1:0] xt_rsc_0_6_AWBURST;
  input [2:0] xt_rsc_0_6_AWSIZE;
  input [7:0] xt_rsc_0_6_AWLEN;
  input [11:0] xt_rsc_0_6_AWADDR;
  input xt_rsc_0_6_AWID;
  output xt_rsc_triosy_0_6_lz;
  input xt_rsc_0_7_s_tdone;
  input xt_rsc_0_7_tr_write_done;
  input xt_rsc_0_7_RREADY;
  output xt_rsc_0_7_RVALID;
  output xt_rsc_0_7_RUSER;
  output xt_rsc_0_7_RLAST;
  output [1:0] xt_rsc_0_7_RRESP;
  output [31:0] xt_rsc_0_7_RDATA;
  output xt_rsc_0_7_RID;
  output xt_rsc_0_7_ARREADY;
  input xt_rsc_0_7_ARVALID;
  input xt_rsc_0_7_ARUSER;
  input [3:0] xt_rsc_0_7_ARREGION;
  input [3:0] xt_rsc_0_7_ARQOS;
  input [2:0] xt_rsc_0_7_ARPROT;
  input [3:0] xt_rsc_0_7_ARCACHE;
  input xt_rsc_0_7_ARLOCK;
  input [1:0] xt_rsc_0_7_ARBURST;
  input [2:0] xt_rsc_0_7_ARSIZE;
  input [7:0] xt_rsc_0_7_ARLEN;
  input [11:0] xt_rsc_0_7_ARADDR;
  input xt_rsc_0_7_ARID;
  input xt_rsc_0_7_BREADY;
  output xt_rsc_0_7_BVALID;
  output xt_rsc_0_7_BUSER;
  output [1:0] xt_rsc_0_7_BRESP;
  output xt_rsc_0_7_BID;
  output xt_rsc_0_7_WREADY;
  input xt_rsc_0_7_WVALID;
  input xt_rsc_0_7_WUSER;
  input xt_rsc_0_7_WLAST;
  input [3:0] xt_rsc_0_7_WSTRB;
  input [31:0] xt_rsc_0_7_WDATA;
  output xt_rsc_0_7_AWREADY;
  input xt_rsc_0_7_AWVALID;
  input xt_rsc_0_7_AWUSER;
  input [3:0] xt_rsc_0_7_AWREGION;
  input [3:0] xt_rsc_0_7_AWQOS;
  input [2:0] xt_rsc_0_7_AWPROT;
  input [3:0] xt_rsc_0_7_AWCACHE;
  input xt_rsc_0_7_AWLOCK;
  input [1:0] xt_rsc_0_7_AWBURST;
  input [2:0] xt_rsc_0_7_AWSIZE;
  input [7:0] xt_rsc_0_7_AWLEN;
  input [11:0] xt_rsc_0_7_AWADDR;
  input xt_rsc_0_7_AWID;
  output xt_rsc_triosy_0_7_lz;
  input xt_rsc_0_8_s_tdone;
  input xt_rsc_0_8_tr_write_done;
  input xt_rsc_0_8_RREADY;
  output xt_rsc_0_8_RVALID;
  output xt_rsc_0_8_RUSER;
  output xt_rsc_0_8_RLAST;
  output [1:0] xt_rsc_0_8_RRESP;
  output [31:0] xt_rsc_0_8_RDATA;
  output xt_rsc_0_8_RID;
  output xt_rsc_0_8_ARREADY;
  input xt_rsc_0_8_ARVALID;
  input xt_rsc_0_8_ARUSER;
  input [3:0] xt_rsc_0_8_ARREGION;
  input [3:0] xt_rsc_0_8_ARQOS;
  input [2:0] xt_rsc_0_8_ARPROT;
  input [3:0] xt_rsc_0_8_ARCACHE;
  input xt_rsc_0_8_ARLOCK;
  input [1:0] xt_rsc_0_8_ARBURST;
  input [2:0] xt_rsc_0_8_ARSIZE;
  input [7:0] xt_rsc_0_8_ARLEN;
  input [11:0] xt_rsc_0_8_ARADDR;
  input xt_rsc_0_8_ARID;
  input xt_rsc_0_8_BREADY;
  output xt_rsc_0_8_BVALID;
  output xt_rsc_0_8_BUSER;
  output [1:0] xt_rsc_0_8_BRESP;
  output xt_rsc_0_8_BID;
  output xt_rsc_0_8_WREADY;
  input xt_rsc_0_8_WVALID;
  input xt_rsc_0_8_WUSER;
  input xt_rsc_0_8_WLAST;
  input [3:0] xt_rsc_0_8_WSTRB;
  input [31:0] xt_rsc_0_8_WDATA;
  output xt_rsc_0_8_AWREADY;
  input xt_rsc_0_8_AWVALID;
  input xt_rsc_0_8_AWUSER;
  input [3:0] xt_rsc_0_8_AWREGION;
  input [3:0] xt_rsc_0_8_AWQOS;
  input [2:0] xt_rsc_0_8_AWPROT;
  input [3:0] xt_rsc_0_8_AWCACHE;
  input xt_rsc_0_8_AWLOCK;
  input [1:0] xt_rsc_0_8_AWBURST;
  input [2:0] xt_rsc_0_8_AWSIZE;
  input [7:0] xt_rsc_0_8_AWLEN;
  input [11:0] xt_rsc_0_8_AWADDR;
  input xt_rsc_0_8_AWID;
  output xt_rsc_triosy_0_8_lz;
  input xt_rsc_0_9_s_tdone;
  input xt_rsc_0_9_tr_write_done;
  input xt_rsc_0_9_RREADY;
  output xt_rsc_0_9_RVALID;
  output xt_rsc_0_9_RUSER;
  output xt_rsc_0_9_RLAST;
  output [1:0] xt_rsc_0_9_RRESP;
  output [31:0] xt_rsc_0_9_RDATA;
  output xt_rsc_0_9_RID;
  output xt_rsc_0_9_ARREADY;
  input xt_rsc_0_9_ARVALID;
  input xt_rsc_0_9_ARUSER;
  input [3:0] xt_rsc_0_9_ARREGION;
  input [3:0] xt_rsc_0_9_ARQOS;
  input [2:0] xt_rsc_0_9_ARPROT;
  input [3:0] xt_rsc_0_9_ARCACHE;
  input xt_rsc_0_9_ARLOCK;
  input [1:0] xt_rsc_0_9_ARBURST;
  input [2:0] xt_rsc_0_9_ARSIZE;
  input [7:0] xt_rsc_0_9_ARLEN;
  input [11:0] xt_rsc_0_9_ARADDR;
  input xt_rsc_0_9_ARID;
  input xt_rsc_0_9_BREADY;
  output xt_rsc_0_9_BVALID;
  output xt_rsc_0_9_BUSER;
  output [1:0] xt_rsc_0_9_BRESP;
  output xt_rsc_0_9_BID;
  output xt_rsc_0_9_WREADY;
  input xt_rsc_0_9_WVALID;
  input xt_rsc_0_9_WUSER;
  input xt_rsc_0_9_WLAST;
  input [3:0] xt_rsc_0_9_WSTRB;
  input [31:0] xt_rsc_0_9_WDATA;
  output xt_rsc_0_9_AWREADY;
  input xt_rsc_0_9_AWVALID;
  input xt_rsc_0_9_AWUSER;
  input [3:0] xt_rsc_0_9_AWREGION;
  input [3:0] xt_rsc_0_9_AWQOS;
  input [2:0] xt_rsc_0_9_AWPROT;
  input [3:0] xt_rsc_0_9_AWCACHE;
  input xt_rsc_0_9_AWLOCK;
  input [1:0] xt_rsc_0_9_AWBURST;
  input [2:0] xt_rsc_0_9_AWSIZE;
  input [7:0] xt_rsc_0_9_AWLEN;
  input [11:0] xt_rsc_0_9_AWADDR;
  input xt_rsc_0_9_AWID;
  output xt_rsc_triosy_0_9_lz;
  input xt_rsc_0_10_s_tdone;
  input xt_rsc_0_10_tr_write_done;
  input xt_rsc_0_10_RREADY;
  output xt_rsc_0_10_RVALID;
  output xt_rsc_0_10_RUSER;
  output xt_rsc_0_10_RLAST;
  output [1:0] xt_rsc_0_10_RRESP;
  output [31:0] xt_rsc_0_10_RDATA;
  output xt_rsc_0_10_RID;
  output xt_rsc_0_10_ARREADY;
  input xt_rsc_0_10_ARVALID;
  input xt_rsc_0_10_ARUSER;
  input [3:0] xt_rsc_0_10_ARREGION;
  input [3:0] xt_rsc_0_10_ARQOS;
  input [2:0] xt_rsc_0_10_ARPROT;
  input [3:0] xt_rsc_0_10_ARCACHE;
  input xt_rsc_0_10_ARLOCK;
  input [1:0] xt_rsc_0_10_ARBURST;
  input [2:0] xt_rsc_0_10_ARSIZE;
  input [7:0] xt_rsc_0_10_ARLEN;
  input [11:0] xt_rsc_0_10_ARADDR;
  input xt_rsc_0_10_ARID;
  input xt_rsc_0_10_BREADY;
  output xt_rsc_0_10_BVALID;
  output xt_rsc_0_10_BUSER;
  output [1:0] xt_rsc_0_10_BRESP;
  output xt_rsc_0_10_BID;
  output xt_rsc_0_10_WREADY;
  input xt_rsc_0_10_WVALID;
  input xt_rsc_0_10_WUSER;
  input xt_rsc_0_10_WLAST;
  input [3:0] xt_rsc_0_10_WSTRB;
  input [31:0] xt_rsc_0_10_WDATA;
  output xt_rsc_0_10_AWREADY;
  input xt_rsc_0_10_AWVALID;
  input xt_rsc_0_10_AWUSER;
  input [3:0] xt_rsc_0_10_AWREGION;
  input [3:0] xt_rsc_0_10_AWQOS;
  input [2:0] xt_rsc_0_10_AWPROT;
  input [3:0] xt_rsc_0_10_AWCACHE;
  input xt_rsc_0_10_AWLOCK;
  input [1:0] xt_rsc_0_10_AWBURST;
  input [2:0] xt_rsc_0_10_AWSIZE;
  input [7:0] xt_rsc_0_10_AWLEN;
  input [11:0] xt_rsc_0_10_AWADDR;
  input xt_rsc_0_10_AWID;
  output xt_rsc_triosy_0_10_lz;
  input xt_rsc_0_11_s_tdone;
  input xt_rsc_0_11_tr_write_done;
  input xt_rsc_0_11_RREADY;
  output xt_rsc_0_11_RVALID;
  output xt_rsc_0_11_RUSER;
  output xt_rsc_0_11_RLAST;
  output [1:0] xt_rsc_0_11_RRESP;
  output [31:0] xt_rsc_0_11_RDATA;
  output xt_rsc_0_11_RID;
  output xt_rsc_0_11_ARREADY;
  input xt_rsc_0_11_ARVALID;
  input xt_rsc_0_11_ARUSER;
  input [3:0] xt_rsc_0_11_ARREGION;
  input [3:0] xt_rsc_0_11_ARQOS;
  input [2:0] xt_rsc_0_11_ARPROT;
  input [3:0] xt_rsc_0_11_ARCACHE;
  input xt_rsc_0_11_ARLOCK;
  input [1:0] xt_rsc_0_11_ARBURST;
  input [2:0] xt_rsc_0_11_ARSIZE;
  input [7:0] xt_rsc_0_11_ARLEN;
  input [11:0] xt_rsc_0_11_ARADDR;
  input xt_rsc_0_11_ARID;
  input xt_rsc_0_11_BREADY;
  output xt_rsc_0_11_BVALID;
  output xt_rsc_0_11_BUSER;
  output [1:0] xt_rsc_0_11_BRESP;
  output xt_rsc_0_11_BID;
  output xt_rsc_0_11_WREADY;
  input xt_rsc_0_11_WVALID;
  input xt_rsc_0_11_WUSER;
  input xt_rsc_0_11_WLAST;
  input [3:0] xt_rsc_0_11_WSTRB;
  input [31:0] xt_rsc_0_11_WDATA;
  output xt_rsc_0_11_AWREADY;
  input xt_rsc_0_11_AWVALID;
  input xt_rsc_0_11_AWUSER;
  input [3:0] xt_rsc_0_11_AWREGION;
  input [3:0] xt_rsc_0_11_AWQOS;
  input [2:0] xt_rsc_0_11_AWPROT;
  input [3:0] xt_rsc_0_11_AWCACHE;
  input xt_rsc_0_11_AWLOCK;
  input [1:0] xt_rsc_0_11_AWBURST;
  input [2:0] xt_rsc_0_11_AWSIZE;
  input [7:0] xt_rsc_0_11_AWLEN;
  input [11:0] xt_rsc_0_11_AWADDR;
  input xt_rsc_0_11_AWID;
  output xt_rsc_triosy_0_11_lz;
  input xt_rsc_0_12_s_tdone;
  input xt_rsc_0_12_tr_write_done;
  input xt_rsc_0_12_RREADY;
  output xt_rsc_0_12_RVALID;
  output xt_rsc_0_12_RUSER;
  output xt_rsc_0_12_RLAST;
  output [1:0] xt_rsc_0_12_RRESP;
  output [31:0] xt_rsc_0_12_RDATA;
  output xt_rsc_0_12_RID;
  output xt_rsc_0_12_ARREADY;
  input xt_rsc_0_12_ARVALID;
  input xt_rsc_0_12_ARUSER;
  input [3:0] xt_rsc_0_12_ARREGION;
  input [3:0] xt_rsc_0_12_ARQOS;
  input [2:0] xt_rsc_0_12_ARPROT;
  input [3:0] xt_rsc_0_12_ARCACHE;
  input xt_rsc_0_12_ARLOCK;
  input [1:0] xt_rsc_0_12_ARBURST;
  input [2:0] xt_rsc_0_12_ARSIZE;
  input [7:0] xt_rsc_0_12_ARLEN;
  input [11:0] xt_rsc_0_12_ARADDR;
  input xt_rsc_0_12_ARID;
  input xt_rsc_0_12_BREADY;
  output xt_rsc_0_12_BVALID;
  output xt_rsc_0_12_BUSER;
  output [1:0] xt_rsc_0_12_BRESP;
  output xt_rsc_0_12_BID;
  output xt_rsc_0_12_WREADY;
  input xt_rsc_0_12_WVALID;
  input xt_rsc_0_12_WUSER;
  input xt_rsc_0_12_WLAST;
  input [3:0] xt_rsc_0_12_WSTRB;
  input [31:0] xt_rsc_0_12_WDATA;
  output xt_rsc_0_12_AWREADY;
  input xt_rsc_0_12_AWVALID;
  input xt_rsc_0_12_AWUSER;
  input [3:0] xt_rsc_0_12_AWREGION;
  input [3:0] xt_rsc_0_12_AWQOS;
  input [2:0] xt_rsc_0_12_AWPROT;
  input [3:0] xt_rsc_0_12_AWCACHE;
  input xt_rsc_0_12_AWLOCK;
  input [1:0] xt_rsc_0_12_AWBURST;
  input [2:0] xt_rsc_0_12_AWSIZE;
  input [7:0] xt_rsc_0_12_AWLEN;
  input [11:0] xt_rsc_0_12_AWADDR;
  input xt_rsc_0_12_AWID;
  output xt_rsc_triosy_0_12_lz;
  input xt_rsc_0_13_s_tdone;
  input xt_rsc_0_13_tr_write_done;
  input xt_rsc_0_13_RREADY;
  output xt_rsc_0_13_RVALID;
  output xt_rsc_0_13_RUSER;
  output xt_rsc_0_13_RLAST;
  output [1:0] xt_rsc_0_13_RRESP;
  output [31:0] xt_rsc_0_13_RDATA;
  output xt_rsc_0_13_RID;
  output xt_rsc_0_13_ARREADY;
  input xt_rsc_0_13_ARVALID;
  input xt_rsc_0_13_ARUSER;
  input [3:0] xt_rsc_0_13_ARREGION;
  input [3:0] xt_rsc_0_13_ARQOS;
  input [2:0] xt_rsc_0_13_ARPROT;
  input [3:0] xt_rsc_0_13_ARCACHE;
  input xt_rsc_0_13_ARLOCK;
  input [1:0] xt_rsc_0_13_ARBURST;
  input [2:0] xt_rsc_0_13_ARSIZE;
  input [7:0] xt_rsc_0_13_ARLEN;
  input [11:0] xt_rsc_0_13_ARADDR;
  input xt_rsc_0_13_ARID;
  input xt_rsc_0_13_BREADY;
  output xt_rsc_0_13_BVALID;
  output xt_rsc_0_13_BUSER;
  output [1:0] xt_rsc_0_13_BRESP;
  output xt_rsc_0_13_BID;
  output xt_rsc_0_13_WREADY;
  input xt_rsc_0_13_WVALID;
  input xt_rsc_0_13_WUSER;
  input xt_rsc_0_13_WLAST;
  input [3:0] xt_rsc_0_13_WSTRB;
  input [31:0] xt_rsc_0_13_WDATA;
  output xt_rsc_0_13_AWREADY;
  input xt_rsc_0_13_AWVALID;
  input xt_rsc_0_13_AWUSER;
  input [3:0] xt_rsc_0_13_AWREGION;
  input [3:0] xt_rsc_0_13_AWQOS;
  input [2:0] xt_rsc_0_13_AWPROT;
  input [3:0] xt_rsc_0_13_AWCACHE;
  input xt_rsc_0_13_AWLOCK;
  input [1:0] xt_rsc_0_13_AWBURST;
  input [2:0] xt_rsc_0_13_AWSIZE;
  input [7:0] xt_rsc_0_13_AWLEN;
  input [11:0] xt_rsc_0_13_AWADDR;
  input xt_rsc_0_13_AWID;
  output xt_rsc_triosy_0_13_lz;
  input xt_rsc_0_14_s_tdone;
  input xt_rsc_0_14_tr_write_done;
  input xt_rsc_0_14_RREADY;
  output xt_rsc_0_14_RVALID;
  output xt_rsc_0_14_RUSER;
  output xt_rsc_0_14_RLAST;
  output [1:0] xt_rsc_0_14_RRESP;
  output [31:0] xt_rsc_0_14_RDATA;
  output xt_rsc_0_14_RID;
  output xt_rsc_0_14_ARREADY;
  input xt_rsc_0_14_ARVALID;
  input xt_rsc_0_14_ARUSER;
  input [3:0] xt_rsc_0_14_ARREGION;
  input [3:0] xt_rsc_0_14_ARQOS;
  input [2:0] xt_rsc_0_14_ARPROT;
  input [3:0] xt_rsc_0_14_ARCACHE;
  input xt_rsc_0_14_ARLOCK;
  input [1:0] xt_rsc_0_14_ARBURST;
  input [2:0] xt_rsc_0_14_ARSIZE;
  input [7:0] xt_rsc_0_14_ARLEN;
  input [11:0] xt_rsc_0_14_ARADDR;
  input xt_rsc_0_14_ARID;
  input xt_rsc_0_14_BREADY;
  output xt_rsc_0_14_BVALID;
  output xt_rsc_0_14_BUSER;
  output [1:0] xt_rsc_0_14_BRESP;
  output xt_rsc_0_14_BID;
  output xt_rsc_0_14_WREADY;
  input xt_rsc_0_14_WVALID;
  input xt_rsc_0_14_WUSER;
  input xt_rsc_0_14_WLAST;
  input [3:0] xt_rsc_0_14_WSTRB;
  input [31:0] xt_rsc_0_14_WDATA;
  output xt_rsc_0_14_AWREADY;
  input xt_rsc_0_14_AWVALID;
  input xt_rsc_0_14_AWUSER;
  input [3:0] xt_rsc_0_14_AWREGION;
  input [3:0] xt_rsc_0_14_AWQOS;
  input [2:0] xt_rsc_0_14_AWPROT;
  input [3:0] xt_rsc_0_14_AWCACHE;
  input xt_rsc_0_14_AWLOCK;
  input [1:0] xt_rsc_0_14_AWBURST;
  input [2:0] xt_rsc_0_14_AWSIZE;
  input [7:0] xt_rsc_0_14_AWLEN;
  input [11:0] xt_rsc_0_14_AWADDR;
  input xt_rsc_0_14_AWID;
  output xt_rsc_triosy_0_14_lz;
  input xt_rsc_0_15_s_tdone;
  input xt_rsc_0_15_tr_write_done;
  input xt_rsc_0_15_RREADY;
  output xt_rsc_0_15_RVALID;
  output xt_rsc_0_15_RUSER;
  output xt_rsc_0_15_RLAST;
  output [1:0] xt_rsc_0_15_RRESP;
  output [31:0] xt_rsc_0_15_RDATA;
  output xt_rsc_0_15_RID;
  output xt_rsc_0_15_ARREADY;
  input xt_rsc_0_15_ARVALID;
  input xt_rsc_0_15_ARUSER;
  input [3:0] xt_rsc_0_15_ARREGION;
  input [3:0] xt_rsc_0_15_ARQOS;
  input [2:0] xt_rsc_0_15_ARPROT;
  input [3:0] xt_rsc_0_15_ARCACHE;
  input xt_rsc_0_15_ARLOCK;
  input [1:0] xt_rsc_0_15_ARBURST;
  input [2:0] xt_rsc_0_15_ARSIZE;
  input [7:0] xt_rsc_0_15_ARLEN;
  input [11:0] xt_rsc_0_15_ARADDR;
  input xt_rsc_0_15_ARID;
  input xt_rsc_0_15_BREADY;
  output xt_rsc_0_15_BVALID;
  output xt_rsc_0_15_BUSER;
  output [1:0] xt_rsc_0_15_BRESP;
  output xt_rsc_0_15_BID;
  output xt_rsc_0_15_WREADY;
  input xt_rsc_0_15_WVALID;
  input xt_rsc_0_15_WUSER;
  input xt_rsc_0_15_WLAST;
  input [3:0] xt_rsc_0_15_WSTRB;
  input [31:0] xt_rsc_0_15_WDATA;
  output xt_rsc_0_15_AWREADY;
  input xt_rsc_0_15_AWVALID;
  input xt_rsc_0_15_AWUSER;
  input [3:0] xt_rsc_0_15_AWREGION;
  input [3:0] xt_rsc_0_15_AWQOS;
  input [2:0] xt_rsc_0_15_AWPROT;
  input [3:0] xt_rsc_0_15_AWCACHE;
  input xt_rsc_0_15_AWLOCK;
  input [1:0] xt_rsc_0_15_AWBURST;
  input [2:0] xt_rsc_0_15_AWSIZE;
  input [7:0] xt_rsc_0_15_AWLEN;
  input [11:0] xt_rsc_0_15_AWADDR;
  input xt_rsc_0_15_AWID;
  output xt_rsc_triosy_0_15_lz;
  input xt_rsc_0_16_s_tdone;
  input xt_rsc_0_16_tr_write_done;
  input xt_rsc_0_16_RREADY;
  output xt_rsc_0_16_RVALID;
  output xt_rsc_0_16_RUSER;
  output xt_rsc_0_16_RLAST;
  output [1:0] xt_rsc_0_16_RRESP;
  output [31:0] xt_rsc_0_16_RDATA;
  output xt_rsc_0_16_RID;
  output xt_rsc_0_16_ARREADY;
  input xt_rsc_0_16_ARVALID;
  input xt_rsc_0_16_ARUSER;
  input [3:0] xt_rsc_0_16_ARREGION;
  input [3:0] xt_rsc_0_16_ARQOS;
  input [2:0] xt_rsc_0_16_ARPROT;
  input [3:0] xt_rsc_0_16_ARCACHE;
  input xt_rsc_0_16_ARLOCK;
  input [1:0] xt_rsc_0_16_ARBURST;
  input [2:0] xt_rsc_0_16_ARSIZE;
  input [7:0] xt_rsc_0_16_ARLEN;
  input [11:0] xt_rsc_0_16_ARADDR;
  input xt_rsc_0_16_ARID;
  input xt_rsc_0_16_BREADY;
  output xt_rsc_0_16_BVALID;
  output xt_rsc_0_16_BUSER;
  output [1:0] xt_rsc_0_16_BRESP;
  output xt_rsc_0_16_BID;
  output xt_rsc_0_16_WREADY;
  input xt_rsc_0_16_WVALID;
  input xt_rsc_0_16_WUSER;
  input xt_rsc_0_16_WLAST;
  input [3:0] xt_rsc_0_16_WSTRB;
  input [31:0] xt_rsc_0_16_WDATA;
  output xt_rsc_0_16_AWREADY;
  input xt_rsc_0_16_AWVALID;
  input xt_rsc_0_16_AWUSER;
  input [3:0] xt_rsc_0_16_AWREGION;
  input [3:0] xt_rsc_0_16_AWQOS;
  input [2:0] xt_rsc_0_16_AWPROT;
  input [3:0] xt_rsc_0_16_AWCACHE;
  input xt_rsc_0_16_AWLOCK;
  input [1:0] xt_rsc_0_16_AWBURST;
  input [2:0] xt_rsc_0_16_AWSIZE;
  input [7:0] xt_rsc_0_16_AWLEN;
  input [11:0] xt_rsc_0_16_AWADDR;
  input xt_rsc_0_16_AWID;
  output xt_rsc_triosy_0_16_lz;
  input xt_rsc_0_17_s_tdone;
  input xt_rsc_0_17_tr_write_done;
  input xt_rsc_0_17_RREADY;
  output xt_rsc_0_17_RVALID;
  output xt_rsc_0_17_RUSER;
  output xt_rsc_0_17_RLAST;
  output [1:0] xt_rsc_0_17_RRESP;
  output [31:0] xt_rsc_0_17_RDATA;
  output xt_rsc_0_17_RID;
  output xt_rsc_0_17_ARREADY;
  input xt_rsc_0_17_ARVALID;
  input xt_rsc_0_17_ARUSER;
  input [3:0] xt_rsc_0_17_ARREGION;
  input [3:0] xt_rsc_0_17_ARQOS;
  input [2:0] xt_rsc_0_17_ARPROT;
  input [3:0] xt_rsc_0_17_ARCACHE;
  input xt_rsc_0_17_ARLOCK;
  input [1:0] xt_rsc_0_17_ARBURST;
  input [2:0] xt_rsc_0_17_ARSIZE;
  input [7:0] xt_rsc_0_17_ARLEN;
  input [11:0] xt_rsc_0_17_ARADDR;
  input xt_rsc_0_17_ARID;
  input xt_rsc_0_17_BREADY;
  output xt_rsc_0_17_BVALID;
  output xt_rsc_0_17_BUSER;
  output [1:0] xt_rsc_0_17_BRESP;
  output xt_rsc_0_17_BID;
  output xt_rsc_0_17_WREADY;
  input xt_rsc_0_17_WVALID;
  input xt_rsc_0_17_WUSER;
  input xt_rsc_0_17_WLAST;
  input [3:0] xt_rsc_0_17_WSTRB;
  input [31:0] xt_rsc_0_17_WDATA;
  output xt_rsc_0_17_AWREADY;
  input xt_rsc_0_17_AWVALID;
  input xt_rsc_0_17_AWUSER;
  input [3:0] xt_rsc_0_17_AWREGION;
  input [3:0] xt_rsc_0_17_AWQOS;
  input [2:0] xt_rsc_0_17_AWPROT;
  input [3:0] xt_rsc_0_17_AWCACHE;
  input xt_rsc_0_17_AWLOCK;
  input [1:0] xt_rsc_0_17_AWBURST;
  input [2:0] xt_rsc_0_17_AWSIZE;
  input [7:0] xt_rsc_0_17_AWLEN;
  input [11:0] xt_rsc_0_17_AWADDR;
  input xt_rsc_0_17_AWID;
  output xt_rsc_triosy_0_17_lz;
  input xt_rsc_0_18_s_tdone;
  input xt_rsc_0_18_tr_write_done;
  input xt_rsc_0_18_RREADY;
  output xt_rsc_0_18_RVALID;
  output xt_rsc_0_18_RUSER;
  output xt_rsc_0_18_RLAST;
  output [1:0] xt_rsc_0_18_RRESP;
  output [31:0] xt_rsc_0_18_RDATA;
  output xt_rsc_0_18_RID;
  output xt_rsc_0_18_ARREADY;
  input xt_rsc_0_18_ARVALID;
  input xt_rsc_0_18_ARUSER;
  input [3:0] xt_rsc_0_18_ARREGION;
  input [3:0] xt_rsc_0_18_ARQOS;
  input [2:0] xt_rsc_0_18_ARPROT;
  input [3:0] xt_rsc_0_18_ARCACHE;
  input xt_rsc_0_18_ARLOCK;
  input [1:0] xt_rsc_0_18_ARBURST;
  input [2:0] xt_rsc_0_18_ARSIZE;
  input [7:0] xt_rsc_0_18_ARLEN;
  input [11:0] xt_rsc_0_18_ARADDR;
  input xt_rsc_0_18_ARID;
  input xt_rsc_0_18_BREADY;
  output xt_rsc_0_18_BVALID;
  output xt_rsc_0_18_BUSER;
  output [1:0] xt_rsc_0_18_BRESP;
  output xt_rsc_0_18_BID;
  output xt_rsc_0_18_WREADY;
  input xt_rsc_0_18_WVALID;
  input xt_rsc_0_18_WUSER;
  input xt_rsc_0_18_WLAST;
  input [3:0] xt_rsc_0_18_WSTRB;
  input [31:0] xt_rsc_0_18_WDATA;
  output xt_rsc_0_18_AWREADY;
  input xt_rsc_0_18_AWVALID;
  input xt_rsc_0_18_AWUSER;
  input [3:0] xt_rsc_0_18_AWREGION;
  input [3:0] xt_rsc_0_18_AWQOS;
  input [2:0] xt_rsc_0_18_AWPROT;
  input [3:0] xt_rsc_0_18_AWCACHE;
  input xt_rsc_0_18_AWLOCK;
  input [1:0] xt_rsc_0_18_AWBURST;
  input [2:0] xt_rsc_0_18_AWSIZE;
  input [7:0] xt_rsc_0_18_AWLEN;
  input [11:0] xt_rsc_0_18_AWADDR;
  input xt_rsc_0_18_AWID;
  output xt_rsc_triosy_0_18_lz;
  input xt_rsc_0_19_s_tdone;
  input xt_rsc_0_19_tr_write_done;
  input xt_rsc_0_19_RREADY;
  output xt_rsc_0_19_RVALID;
  output xt_rsc_0_19_RUSER;
  output xt_rsc_0_19_RLAST;
  output [1:0] xt_rsc_0_19_RRESP;
  output [31:0] xt_rsc_0_19_RDATA;
  output xt_rsc_0_19_RID;
  output xt_rsc_0_19_ARREADY;
  input xt_rsc_0_19_ARVALID;
  input xt_rsc_0_19_ARUSER;
  input [3:0] xt_rsc_0_19_ARREGION;
  input [3:0] xt_rsc_0_19_ARQOS;
  input [2:0] xt_rsc_0_19_ARPROT;
  input [3:0] xt_rsc_0_19_ARCACHE;
  input xt_rsc_0_19_ARLOCK;
  input [1:0] xt_rsc_0_19_ARBURST;
  input [2:0] xt_rsc_0_19_ARSIZE;
  input [7:0] xt_rsc_0_19_ARLEN;
  input [11:0] xt_rsc_0_19_ARADDR;
  input xt_rsc_0_19_ARID;
  input xt_rsc_0_19_BREADY;
  output xt_rsc_0_19_BVALID;
  output xt_rsc_0_19_BUSER;
  output [1:0] xt_rsc_0_19_BRESP;
  output xt_rsc_0_19_BID;
  output xt_rsc_0_19_WREADY;
  input xt_rsc_0_19_WVALID;
  input xt_rsc_0_19_WUSER;
  input xt_rsc_0_19_WLAST;
  input [3:0] xt_rsc_0_19_WSTRB;
  input [31:0] xt_rsc_0_19_WDATA;
  output xt_rsc_0_19_AWREADY;
  input xt_rsc_0_19_AWVALID;
  input xt_rsc_0_19_AWUSER;
  input [3:0] xt_rsc_0_19_AWREGION;
  input [3:0] xt_rsc_0_19_AWQOS;
  input [2:0] xt_rsc_0_19_AWPROT;
  input [3:0] xt_rsc_0_19_AWCACHE;
  input xt_rsc_0_19_AWLOCK;
  input [1:0] xt_rsc_0_19_AWBURST;
  input [2:0] xt_rsc_0_19_AWSIZE;
  input [7:0] xt_rsc_0_19_AWLEN;
  input [11:0] xt_rsc_0_19_AWADDR;
  input xt_rsc_0_19_AWID;
  output xt_rsc_triosy_0_19_lz;
  input xt_rsc_0_20_s_tdone;
  input xt_rsc_0_20_tr_write_done;
  input xt_rsc_0_20_RREADY;
  output xt_rsc_0_20_RVALID;
  output xt_rsc_0_20_RUSER;
  output xt_rsc_0_20_RLAST;
  output [1:0] xt_rsc_0_20_RRESP;
  output [31:0] xt_rsc_0_20_RDATA;
  output xt_rsc_0_20_RID;
  output xt_rsc_0_20_ARREADY;
  input xt_rsc_0_20_ARVALID;
  input xt_rsc_0_20_ARUSER;
  input [3:0] xt_rsc_0_20_ARREGION;
  input [3:0] xt_rsc_0_20_ARQOS;
  input [2:0] xt_rsc_0_20_ARPROT;
  input [3:0] xt_rsc_0_20_ARCACHE;
  input xt_rsc_0_20_ARLOCK;
  input [1:0] xt_rsc_0_20_ARBURST;
  input [2:0] xt_rsc_0_20_ARSIZE;
  input [7:0] xt_rsc_0_20_ARLEN;
  input [11:0] xt_rsc_0_20_ARADDR;
  input xt_rsc_0_20_ARID;
  input xt_rsc_0_20_BREADY;
  output xt_rsc_0_20_BVALID;
  output xt_rsc_0_20_BUSER;
  output [1:0] xt_rsc_0_20_BRESP;
  output xt_rsc_0_20_BID;
  output xt_rsc_0_20_WREADY;
  input xt_rsc_0_20_WVALID;
  input xt_rsc_0_20_WUSER;
  input xt_rsc_0_20_WLAST;
  input [3:0] xt_rsc_0_20_WSTRB;
  input [31:0] xt_rsc_0_20_WDATA;
  output xt_rsc_0_20_AWREADY;
  input xt_rsc_0_20_AWVALID;
  input xt_rsc_0_20_AWUSER;
  input [3:0] xt_rsc_0_20_AWREGION;
  input [3:0] xt_rsc_0_20_AWQOS;
  input [2:0] xt_rsc_0_20_AWPROT;
  input [3:0] xt_rsc_0_20_AWCACHE;
  input xt_rsc_0_20_AWLOCK;
  input [1:0] xt_rsc_0_20_AWBURST;
  input [2:0] xt_rsc_0_20_AWSIZE;
  input [7:0] xt_rsc_0_20_AWLEN;
  input [11:0] xt_rsc_0_20_AWADDR;
  input xt_rsc_0_20_AWID;
  output xt_rsc_triosy_0_20_lz;
  input xt_rsc_0_21_s_tdone;
  input xt_rsc_0_21_tr_write_done;
  input xt_rsc_0_21_RREADY;
  output xt_rsc_0_21_RVALID;
  output xt_rsc_0_21_RUSER;
  output xt_rsc_0_21_RLAST;
  output [1:0] xt_rsc_0_21_RRESP;
  output [31:0] xt_rsc_0_21_RDATA;
  output xt_rsc_0_21_RID;
  output xt_rsc_0_21_ARREADY;
  input xt_rsc_0_21_ARVALID;
  input xt_rsc_0_21_ARUSER;
  input [3:0] xt_rsc_0_21_ARREGION;
  input [3:0] xt_rsc_0_21_ARQOS;
  input [2:0] xt_rsc_0_21_ARPROT;
  input [3:0] xt_rsc_0_21_ARCACHE;
  input xt_rsc_0_21_ARLOCK;
  input [1:0] xt_rsc_0_21_ARBURST;
  input [2:0] xt_rsc_0_21_ARSIZE;
  input [7:0] xt_rsc_0_21_ARLEN;
  input [11:0] xt_rsc_0_21_ARADDR;
  input xt_rsc_0_21_ARID;
  input xt_rsc_0_21_BREADY;
  output xt_rsc_0_21_BVALID;
  output xt_rsc_0_21_BUSER;
  output [1:0] xt_rsc_0_21_BRESP;
  output xt_rsc_0_21_BID;
  output xt_rsc_0_21_WREADY;
  input xt_rsc_0_21_WVALID;
  input xt_rsc_0_21_WUSER;
  input xt_rsc_0_21_WLAST;
  input [3:0] xt_rsc_0_21_WSTRB;
  input [31:0] xt_rsc_0_21_WDATA;
  output xt_rsc_0_21_AWREADY;
  input xt_rsc_0_21_AWVALID;
  input xt_rsc_0_21_AWUSER;
  input [3:0] xt_rsc_0_21_AWREGION;
  input [3:0] xt_rsc_0_21_AWQOS;
  input [2:0] xt_rsc_0_21_AWPROT;
  input [3:0] xt_rsc_0_21_AWCACHE;
  input xt_rsc_0_21_AWLOCK;
  input [1:0] xt_rsc_0_21_AWBURST;
  input [2:0] xt_rsc_0_21_AWSIZE;
  input [7:0] xt_rsc_0_21_AWLEN;
  input [11:0] xt_rsc_0_21_AWADDR;
  input xt_rsc_0_21_AWID;
  output xt_rsc_triosy_0_21_lz;
  input xt_rsc_0_22_s_tdone;
  input xt_rsc_0_22_tr_write_done;
  input xt_rsc_0_22_RREADY;
  output xt_rsc_0_22_RVALID;
  output xt_rsc_0_22_RUSER;
  output xt_rsc_0_22_RLAST;
  output [1:0] xt_rsc_0_22_RRESP;
  output [31:0] xt_rsc_0_22_RDATA;
  output xt_rsc_0_22_RID;
  output xt_rsc_0_22_ARREADY;
  input xt_rsc_0_22_ARVALID;
  input xt_rsc_0_22_ARUSER;
  input [3:0] xt_rsc_0_22_ARREGION;
  input [3:0] xt_rsc_0_22_ARQOS;
  input [2:0] xt_rsc_0_22_ARPROT;
  input [3:0] xt_rsc_0_22_ARCACHE;
  input xt_rsc_0_22_ARLOCK;
  input [1:0] xt_rsc_0_22_ARBURST;
  input [2:0] xt_rsc_0_22_ARSIZE;
  input [7:0] xt_rsc_0_22_ARLEN;
  input [11:0] xt_rsc_0_22_ARADDR;
  input xt_rsc_0_22_ARID;
  input xt_rsc_0_22_BREADY;
  output xt_rsc_0_22_BVALID;
  output xt_rsc_0_22_BUSER;
  output [1:0] xt_rsc_0_22_BRESP;
  output xt_rsc_0_22_BID;
  output xt_rsc_0_22_WREADY;
  input xt_rsc_0_22_WVALID;
  input xt_rsc_0_22_WUSER;
  input xt_rsc_0_22_WLAST;
  input [3:0] xt_rsc_0_22_WSTRB;
  input [31:0] xt_rsc_0_22_WDATA;
  output xt_rsc_0_22_AWREADY;
  input xt_rsc_0_22_AWVALID;
  input xt_rsc_0_22_AWUSER;
  input [3:0] xt_rsc_0_22_AWREGION;
  input [3:0] xt_rsc_0_22_AWQOS;
  input [2:0] xt_rsc_0_22_AWPROT;
  input [3:0] xt_rsc_0_22_AWCACHE;
  input xt_rsc_0_22_AWLOCK;
  input [1:0] xt_rsc_0_22_AWBURST;
  input [2:0] xt_rsc_0_22_AWSIZE;
  input [7:0] xt_rsc_0_22_AWLEN;
  input [11:0] xt_rsc_0_22_AWADDR;
  input xt_rsc_0_22_AWID;
  output xt_rsc_triosy_0_22_lz;
  input xt_rsc_0_23_s_tdone;
  input xt_rsc_0_23_tr_write_done;
  input xt_rsc_0_23_RREADY;
  output xt_rsc_0_23_RVALID;
  output xt_rsc_0_23_RUSER;
  output xt_rsc_0_23_RLAST;
  output [1:0] xt_rsc_0_23_RRESP;
  output [31:0] xt_rsc_0_23_RDATA;
  output xt_rsc_0_23_RID;
  output xt_rsc_0_23_ARREADY;
  input xt_rsc_0_23_ARVALID;
  input xt_rsc_0_23_ARUSER;
  input [3:0] xt_rsc_0_23_ARREGION;
  input [3:0] xt_rsc_0_23_ARQOS;
  input [2:0] xt_rsc_0_23_ARPROT;
  input [3:0] xt_rsc_0_23_ARCACHE;
  input xt_rsc_0_23_ARLOCK;
  input [1:0] xt_rsc_0_23_ARBURST;
  input [2:0] xt_rsc_0_23_ARSIZE;
  input [7:0] xt_rsc_0_23_ARLEN;
  input [11:0] xt_rsc_0_23_ARADDR;
  input xt_rsc_0_23_ARID;
  input xt_rsc_0_23_BREADY;
  output xt_rsc_0_23_BVALID;
  output xt_rsc_0_23_BUSER;
  output [1:0] xt_rsc_0_23_BRESP;
  output xt_rsc_0_23_BID;
  output xt_rsc_0_23_WREADY;
  input xt_rsc_0_23_WVALID;
  input xt_rsc_0_23_WUSER;
  input xt_rsc_0_23_WLAST;
  input [3:0] xt_rsc_0_23_WSTRB;
  input [31:0] xt_rsc_0_23_WDATA;
  output xt_rsc_0_23_AWREADY;
  input xt_rsc_0_23_AWVALID;
  input xt_rsc_0_23_AWUSER;
  input [3:0] xt_rsc_0_23_AWREGION;
  input [3:0] xt_rsc_0_23_AWQOS;
  input [2:0] xt_rsc_0_23_AWPROT;
  input [3:0] xt_rsc_0_23_AWCACHE;
  input xt_rsc_0_23_AWLOCK;
  input [1:0] xt_rsc_0_23_AWBURST;
  input [2:0] xt_rsc_0_23_AWSIZE;
  input [7:0] xt_rsc_0_23_AWLEN;
  input [11:0] xt_rsc_0_23_AWADDR;
  input xt_rsc_0_23_AWID;
  output xt_rsc_triosy_0_23_lz;
  input xt_rsc_0_24_s_tdone;
  input xt_rsc_0_24_tr_write_done;
  input xt_rsc_0_24_RREADY;
  output xt_rsc_0_24_RVALID;
  output xt_rsc_0_24_RUSER;
  output xt_rsc_0_24_RLAST;
  output [1:0] xt_rsc_0_24_RRESP;
  output [31:0] xt_rsc_0_24_RDATA;
  output xt_rsc_0_24_RID;
  output xt_rsc_0_24_ARREADY;
  input xt_rsc_0_24_ARVALID;
  input xt_rsc_0_24_ARUSER;
  input [3:0] xt_rsc_0_24_ARREGION;
  input [3:0] xt_rsc_0_24_ARQOS;
  input [2:0] xt_rsc_0_24_ARPROT;
  input [3:0] xt_rsc_0_24_ARCACHE;
  input xt_rsc_0_24_ARLOCK;
  input [1:0] xt_rsc_0_24_ARBURST;
  input [2:0] xt_rsc_0_24_ARSIZE;
  input [7:0] xt_rsc_0_24_ARLEN;
  input [11:0] xt_rsc_0_24_ARADDR;
  input xt_rsc_0_24_ARID;
  input xt_rsc_0_24_BREADY;
  output xt_rsc_0_24_BVALID;
  output xt_rsc_0_24_BUSER;
  output [1:0] xt_rsc_0_24_BRESP;
  output xt_rsc_0_24_BID;
  output xt_rsc_0_24_WREADY;
  input xt_rsc_0_24_WVALID;
  input xt_rsc_0_24_WUSER;
  input xt_rsc_0_24_WLAST;
  input [3:0] xt_rsc_0_24_WSTRB;
  input [31:0] xt_rsc_0_24_WDATA;
  output xt_rsc_0_24_AWREADY;
  input xt_rsc_0_24_AWVALID;
  input xt_rsc_0_24_AWUSER;
  input [3:0] xt_rsc_0_24_AWREGION;
  input [3:0] xt_rsc_0_24_AWQOS;
  input [2:0] xt_rsc_0_24_AWPROT;
  input [3:0] xt_rsc_0_24_AWCACHE;
  input xt_rsc_0_24_AWLOCK;
  input [1:0] xt_rsc_0_24_AWBURST;
  input [2:0] xt_rsc_0_24_AWSIZE;
  input [7:0] xt_rsc_0_24_AWLEN;
  input [11:0] xt_rsc_0_24_AWADDR;
  input xt_rsc_0_24_AWID;
  output xt_rsc_triosy_0_24_lz;
  input xt_rsc_0_25_s_tdone;
  input xt_rsc_0_25_tr_write_done;
  input xt_rsc_0_25_RREADY;
  output xt_rsc_0_25_RVALID;
  output xt_rsc_0_25_RUSER;
  output xt_rsc_0_25_RLAST;
  output [1:0] xt_rsc_0_25_RRESP;
  output [31:0] xt_rsc_0_25_RDATA;
  output xt_rsc_0_25_RID;
  output xt_rsc_0_25_ARREADY;
  input xt_rsc_0_25_ARVALID;
  input xt_rsc_0_25_ARUSER;
  input [3:0] xt_rsc_0_25_ARREGION;
  input [3:0] xt_rsc_0_25_ARQOS;
  input [2:0] xt_rsc_0_25_ARPROT;
  input [3:0] xt_rsc_0_25_ARCACHE;
  input xt_rsc_0_25_ARLOCK;
  input [1:0] xt_rsc_0_25_ARBURST;
  input [2:0] xt_rsc_0_25_ARSIZE;
  input [7:0] xt_rsc_0_25_ARLEN;
  input [11:0] xt_rsc_0_25_ARADDR;
  input xt_rsc_0_25_ARID;
  input xt_rsc_0_25_BREADY;
  output xt_rsc_0_25_BVALID;
  output xt_rsc_0_25_BUSER;
  output [1:0] xt_rsc_0_25_BRESP;
  output xt_rsc_0_25_BID;
  output xt_rsc_0_25_WREADY;
  input xt_rsc_0_25_WVALID;
  input xt_rsc_0_25_WUSER;
  input xt_rsc_0_25_WLAST;
  input [3:0] xt_rsc_0_25_WSTRB;
  input [31:0] xt_rsc_0_25_WDATA;
  output xt_rsc_0_25_AWREADY;
  input xt_rsc_0_25_AWVALID;
  input xt_rsc_0_25_AWUSER;
  input [3:0] xt_rsc_0_25_AWREGION;
  input [3:0] xt_rsc_0_25_AWQOS;
  input [2:0] xt_rsc_0_25_AWPROT;
  input [3:0] xt_rsc_0_25_AWCACHE;
  input xt_rsc_0_25_AWLOCK;
  input [1:0] xt_rsc_0_25_AWBURST;
  input [2:0] xt_rsc_0_25_AWSIZE;
  input [7:0] xt_rsc_0_25_AWLEN;
  input [11:0] xt_rsc_0_25_AWADDR;
  input xt_rsc_0_25_AWID;
  output xt_rsc_triosy_0_25_lz;
  input xt_rsc_0_26_s_tdone;
  input xt_rsc_0_26_tr_write_done;
  input xt_rsc_0_26_RREADY;
  output xt_rsc_0_26_RVALID;
  output xt_rsc_0_26_RUSER;
  output xt_rsc_0_26_RLAST;
  output [1:0] xt_rsc_0_26_RRESP;
  output [31:0] xt_rsc_0_26_RDATA;
  output xt_rsc_0_26_RID;
  output xt_rsc_0_26_ARREADY;
  input xt_rsc_0_26_ARVALID;
  input xt_rsc_0_26_ARUSER;
  input [3:0] xt_rsc_0_26_ARREGION;
  input [3:0] xt_rsc_0_26_ARQOS;
  input [2:0] xt_rsc_0_26_ARPROT;
  input [3:0] xt_rsc_0_26_ARCACHE;
  input xt_rsc_0_26_ARLOCK;
  input [1:0] xt_rsc_0_26_ARBURST;
  input [2:0] xt_rsc_0_26_ARSIZE;
  input [7:0] xt_rsc_0_26_ARLEN;
  input [11:0] xt_rsc_0_26_ARADDR;
  input xt_rsc_0_26_ARID;
  input xt_rsc_0_26_BREADY;
  output xt_rsc_0_26_BVALID;
  output xt_rsc_0_26_BUSER;
  output [1:0] xt_rsc_0_26_BRESP;
  output xt_rsc_0_26_BID;
  output xt_rsc_0_26_WREADY;
  input xt_rsc_0_26_WVALID;
  input xt_rsc_0_26_WUSER;
  input xt_rsc_0_26_WLAST;
  input [3:0] xt_rsc_0_26_WSTRB;
  input [31:0] xt_rsc_0_26_WDATA;
  output xt_rsc_0_26_AWREADY;
  input xt_rsc_0_26_AWVALID;
  input xt_rsc_0_26_AWUSER;
  input [3:0] xt_rsc_0_26_AWREGION;
  input [3:0] xt_rsc_0_26_AWQOS;
  input [2:0] xt_rsc_0_26_AWPROT;
  input [3:0] xt_rsc_0_26_AWCACHE;
  input xt_rsc_0_26_AWLOCK;
  input [1:0] xt_rsc_0_26_AWBURST;
  input [2:0] xt_rsc_0_26_AWSIZE;
  input [7:0] xt_rsc_0_26_AWLEN;
  input [11:0] xt_rsc_0_26_AWADDR;
  input xt_rsc_0_26_AWID;
  output xt_rsc_triosy_0_26_lz;
  input xt_rsc_0_27_s_tdone;
  input xt_rsc_0_27_tr_write_done;
  input xt_rsc_0_27_RREADY;
  output xt_rsc_0_27_RVALID;
  output xt_rsc_0_27_RUSER;
  output xt_rsc_0_27_RLAST;
  output [1:0] xt_rsc_0_27_RRESP;
  output [31:0] xt_rsc_0_27_RDATA;
  output xt_rsc_0_27_RID;
  output xt_rsc_0_27_ARREADY;
  input xt_rsc_0_27_ARVALID;
  input xt_rsc_0_27_ARUSER;
  input [3:0] xt_rsc_0_27_ARREGION;
  input [3:0] xt_rsc_0_27_ARQOS;
  input [2:0] xt_rsc_0_27_ARPROT;
  input [3:0] xt_rsc_0_27_ARCACHE;
  input xt_rsc_0_27_ARLOCK;
  input [1:0] xt_rsc_0_27_ARBURST;
  input [2:0] xt_rsc_0_27_ARSIZE;
  input [7:0] xt_rsc_0_27_ARLEN;
  input [11:0] xt_rsc_0_27_ARADDR;
  input xt_rsc_0_27_ARID;
  input xt_rsc_0_27_BREADY;
  output xt_rsc_0_27_BVALID;
  output xt_rsc_0_27_BUSER;
  output [1:0] xt_rsc_0_27_BRESP;
  output xt_rsc_0_27_BID;
  output xt_rsc_0_27_WREADY;
  input xt_rsc_0_27_WVALID;
  input xt_rsc_0_27_WUSER;
  input xt_rsc_0_27_WLAST;
  input [3:0] xt_rsc_0_27_WSTRB;
  input [31:0] xt_rsc_0_27_WDATA;
  output xt_rsc_0_27_AWREADY;
  input xt_rsc_0_27_AWVALID;
  input xt_rsc_0_27_AWUSER;
  input [3:0] xt_rsc_0_27_AWREGION;
  input [3:0] xt_rsc_0_27_AWQOS;
  input [2:0] xt_rsc_0_27_AWPROT;
  input [3:0] xt_rsc_0_27_AWCACHE;
  input xt_rsc_0_27_AWLOCK;
  input [1:0] xt_rsc_0_27_AWBURST;
  input [2:0] xt_rsc_0_27_AWSIZE;
  input [7:0] xt_rsc_0_27_AWLEN;
  input [11:0] xt_rsc_0_27_AWADDR;
  input xt_rsc_0_27_AWID;
  output xt_rsc_triosy_0_27_lz;
  input xt_rsc_0_28_s_tdone;
  input xt_rsc_0_28_tr_write_done;
  input xt_rsc_0_28_RREADY;
  output xt_rsc_0_28_RVALID;
  output xt_rsc_0_28_RUSER;
  output xt_rsc_0_28_RLAST;
  output [1:0] xt_rsc_0_28_RRESP;
  output [31:0] xt_rsc_0_28_RDATA;
  output xt_rsc_0_28_RID;
  output xt_rsc_0_28_ARREADY;
  input xt_rsc_0_28_ARVALID;
  input xt_rsc_0_28_ARUSER;
  input [3:0] xt_rsc_0_28_ARREGION;
  input [3:0] xt_rsc_0_28_ARQOS;
  input [2:0] xt_rsc_0_28_ARPROT;
  input [3:0] xt_rsc_0_28_ARCACHE;
  input xt_rsc_0_28_ARLOCK;
  input [1:0] xt_rsc_0_28_ARBURST;
  input [2:0] xt_rsc_0_28_ARSIZE;
  input [7:0] xt_rsc_0_28_ARLEN;
  input [11:0] xt_rsc_0_28_ARADDR;
  input xt_rsc_0_28_ARID;
  input xt_rsc_0_28_BREADY;
  output xt_rsc_0_28_BVALID;
  output xt_rsc_0_28_BUSER;
  output [1:0] xt_rsc_0_28_BRESP;
  output xt_rsc_0_28_BID;
  output xt_rsc_0_28_WREADY;
  input xt_rsc_0_28_WVALID;
  input xt_rsc_0_28_WUSER;
  input xt_rsc_0_28_WLAST;
  input [3:0] xt_rsc_0_28_WSTRB;
  input [31:0] xt_rsc_0_28_WDATA;
  output xt_rsc_0_28_AWREADY;
  input xt_rsc_0_28_AWVALID;
  input xt_rsc_0_28_AWUSER;
  input [3:0] xt_rsc_0_28_AWREGION;
  input [3:0] xt_rsc_0_28_AWQOS;
  input [2:0] xt_rsc_0_28_AWPROT;
  input [3:0] xt_rsc_0_28_AWCACHE;
  input xt_rsc_0_28_AWLOCK;
  input [1:0] xt_rsc_0_28_AWBURST;
  input [2:0] xt_rsc_0_28_AWSIZE;
  input [7:0] xt_rsc_0_28_AWLEN;
  input [11:0] xt_rsc_0_28_AWADDR;
  input xt_rsc_0_28_AWID;
  output xt_rsc_triosy_0_28_lz;
  input xt_rsc_0_29_s_tdone;
  input xt_rsc_0_29_tr_write_done;
  input xt_rsc_0_29_RREADY;
  output xt_rsc_0_29_RVALID;
  output xt_rsc_0_29_RUSER;
  output xt_rsc_0_29_RLAST;
  output [1:0] xt_rsc_0_29_RRESP;
  output [31:0] xt_rsc_0_29_RDATA;
  output xt_rsc_0_29_RID;
  output xt_rsc_0_29_ARREADY;
  input xt_rsc_0_29_ARVALID;
  input xt_rsc_0_29_ARUSER;
  input [3:0] xt_rsc_0_29_ARREGION;
  input [3:0] xt_rsc_0_29_ARQOS;
  input [2:0] xt_rsc_0_29_ARPROT;
  input [3:0] xt_rsc_0_29_ARCACHE;
  input xt_rsc_0_29_ARLOCK;
  input [1:0] xt_rsc_0_29_ARBURST;
  input [2:0] xt_rsc_0_29_ARSIZE;
  input [7:0] xt_rsc_0_29_ARLEN;
  input [11:0] xt_rsc_0_29_ARADDR;
  input xt_rsc_0_29_ARID;
  input xt_rsc_0_29_BREADY;
  output xt_rsc_0_29_BVALID;
  output xt_rsc_0_29_BUSER;
  output [1:0] xt_rsc_0_29_BRESP;
  output xt_rsc_0_29_BID;
  output xt_rsc_0_29_WREADY;
  input xt_rsc_0_29_WVALID;
  input xt_rsc_0_29_WUSER;
  input xt_rsc_0_29_WLAST;
  input [3:0] xt_rsc_0_29_WSTRB;
  input [31:0] xt_rsc_0_29_WDATA;
  output xt_rsc_0_29_AWREADY;
  input xt_rsc_0_29_AWVALID;
  input xt_rsc_0_29_AWUSER;
  input [3:0] xt_rsc_0_29_AWREGION;
  input [3:0] xt_rsc_0_29_AWQOS;
  input [2:0] xt_rsc_0_29_AWPROT;
  input [3:0] xt_rsc_0_29_AWCACHE;
  input xt_rsc_0_29_AWLOCK;
  input [1:0] xt_rsc_0_29_AWBURST;
  input [2:0] xt_rsc_0_29_AWSIZE;
  input [7:0] xt_rsc_0_29_AWLEN;
  input [11:0] xt_rsc_0_29_AWADDR;
  input xt_rsc_0_29_AWID;
  output xt_rsc_triosy_0_29_lz;
  input xt_rsc_0_30_s_tdone;
  input xt_rsc_0_30_tr_write_done;
  input xt_rsc_0_30_RREADY;
  output xt_rsc_0_30_RVALID;
  output xt_rsc_0_30_RUSER;
  output xt_rsc_0_30_RLAST;
  output [1:0] xt_rsc_0_30_RRESP;
  output [31:0] xt_rsc_0_30_RDATA;
  output xt_rsc_0_30_RID;
  output xt_rsc_0_30_ARREADY;
  input xt_rsc_0_30_ARVALID;
  input xt_rsc_0_30_ARUSER;
  input [3:0] xt_rsc_0_30_ARREGION;
  input [3:0] xt_rsc_0_30_ARQOS;
  input [2:0] xt_rsc_0_30_ARPROT;
  input [3:0] xt_rsc_0_30_ARCACHE;
  input xt_rsc_0_30_ARLOCK;
  input [1:0] xt_rsc_0_30_ARBURST;
  input [2:0] xt_rsc_0_30_ARSIZE;
  input [7:0] xt_rsc_0_30_ARLEN;
  input [11:0] xt_rsc_0_30_ARADDR;
  input xt_rsc_0_30_ARID;
  input xt_rsc_0_30_BREADY;
  output xt_rsc_0_30_BVALID;
  output xt_rsc_0_30_BUSER;
  output [1:0] xt_rsc_0_30_BRESP;
  output xt_rsc_0_30_BID;
  output xt_rsc_0_30_WREADY;
  input xt_rsc_0_30_WVALID;
  input xt_rsc_0_30_WUSER;
  input xt_rsc_0_30_WLAST;
  input [3:0] xt_rsc_0_30_WSTRB;
  input [31:0] xt_rsc_0_30_WDATA;
  output xt_rsc_0_30_AWREADY;
  input xt_rsc_0_30_AWVALID;
  input xt_rsc_0_30_AWUSER;
  input [3:0] xt_rsc_0_30_AWREGION;
  input [3:0] xt_rsc_0_30_AWQOS;
  input [2:0] xt_rsc_0_30_AWPROT;
  input [3:0] xt_rsc_0_30_AWCACHE;
  input xt_rsc_0_30_AWLOCK;
  input [1:0] xt_rsc_0_30_AWBURST;
  input [2:0] xt_rsc_0_30_AWSIZE;
  input [7:0] xt_rsc_0_30_AWLEN;
  input [11:0] xt_rsc_0_30_AWADDR;
  input xt_rsc_0_30_AWID;
  output xt_rsc_triosy_0_30_lz;
  input xt_rsc_0_31_s_tdone;
  input xt_rsc_0_31_tr_write_done;
  input xt_rsc_0_31_RREADY;
  output xt_rsc_0_31_RVALID;
  output xt_rsc_0_31_RUSER;
  output xt_rsc_0_31_RLAST;
  output [1:0] xt_rsc_0_31_RRESP;
  output [31:0] xt_rsc_0_31_RDATA;
  output xt_rsc_0_31_RID;
  output xt_rsc_0_31_ARREADY;
  input xt_rsc_0_31_ARVALID;
  input xt_rsc_0_31_ARUSER;
  input [3:0] xt_rsc_0_31_ARREGION;
  input [3:0] xt_rsc_0_31_ARQOS;
  input [2:0] xt_rsc_0_31_ARPROT;
  input [3:0] xt_rsc_0_31_ARCACHE;
  input xt_rsc_0_31_ARLOCK;
  input [1:0] xt_rsc_0_31_ARBURST;
  input [2:0] xt_rsc_0_31_ARSIZE;
  input [7:0] xt_rsc_0_31_ARLEN;
  input [11:0] xt_rsc_0_31_ARADDR;
  input xt_rsc_0_31_ARID;
  input xt_rsc_0_31_BREADY;
  output xt_rsc_0_31_BVALID;
  output xt_rsc_0_31_BUSER;
  output [1:0] xt_rsc_0_31_BRESP;
  output xt_rsc_0_31_BID;
  output xt_rsc_0_31_WREADY;
  input xt_rsc_0_31_WVALID;
  input xt_rsc_0_31_WUSER;
  input xt_rsc_0_31_WLAST;
  input [3:0] xt_rsc_0_31_WSTRB;
  input [31:0] xt_rsc_0_31_WDATA;
  output xt_rsc_0_31_AWREADY;
  input xt_rsc_0_31_AWVALID;
  input xt_rsc_0_31_AWUSER;
  input [3:0] xt_rsc_0_31_AWREGION;
  input [3:0] xt_rsc_0_31_AWQOS;
  input [2:0] xt_rsc_0_31_AWPROT;
  input [3:0] xt_rsc_0_31_AWCACHE;
  input xt_rsc_0_31_AWLOCK;
  input [1:0] xt_rsc_0_31_AWBURST;
  input [2:0] xt_rsc_0_31_AWSIZE;
  input [7:0] xt_rsc_0_31_AWLEN;
  input [11:0] xt_rsc_0_31_AWADDR;
  input xt_rsc_0_31_AWID;
  output xt_rsc_triosy_0_31_lz;
  input xt_rsc_1_0_s_tdone;
  input xt_rsc_1_0_tr_write_done;
  input xt_rsc_1_0_RREADY;
  output xt_rsc_1_0_RVALID;
  output xt_rsc_1_0_RUSER;
  output xt_rsc_1_0_RLAST;
  output [1:0] xt_rsc_1_0_RRESP;
  output [31:0] xt_rsc_1_0_RDATA;
  output xt_rsc_1_0_RID;
  output xt_rsc_1_0_ARREADY;
  input xt_rsc_1_0_ARVALID;
  input xt_rsc_1_0_ARUSER;
  input [3:0] xt_rsc_1_0_ARREGION;
  input [3:0] xt_rsc_1_0_ARQOS;
  input [2:0] xt_rsc_1_0_ARPROT;
  input [3:0] xt_rsc_1_0_ARCACHE;
  input xt_rsc_1_0_ARLOCK;
  input [1:0] xt_rsc_1_0_ARBURST;
  input [2:0] xt_rsc_1_0_ARSIZE;
  input [7:0] xt_rsc_1_0_ARLEN;
  input [11:0] xt_rsc_1_0_ARADDR;
  input xt_rsc_1_0_ARID;
  input xt_rsc_1_0_BREADY;
  output xt_rsc_1_0_BVALID;
  output xt_rsc_1_0_BUSER;
  output [1:0] xt_rsc_1_0_BRESP;
  output xt_rsc_1_0_BID;
  output xt_rsc_1_0_WREADY;
  input xt_rsc_1_0_WVALID;
  input xt_rsc_1_0_WUSER;
  input xt_rsc_1_0_WLAST;
  input [3:0] xt_rsc_1_0_WSTRB;
  input [31:0] xt_rsc_1_0_WDATA;
  output xt_rsc_1_0_AWREADY;
  input xt_rsc_1_0_AWVALID;
  input xt_rsc_1_0_AWUSER;
  input [3:0] xt_rsc_1_0_AWREGION;
  input [3:0] xt_rsc_1_0_AWQOS;
  input [2:0] xt_rsc_1_0_AWPROT;
  input [3:0] xt_rsc_1_0_AWCACHE;
  input xt_rsc_1_0_AWLOCK;
  input [1:0] xt_rsc_1_0_AWBURST;
  input [2:0] xt_rsc_1_0_AWSIZE;
  input [7:0] xt_rsc_1_0_AWLEN;
  input [11:0] xt_rsc_1_0_AWADDR;
  input xt_rsc_1_0_AWID;
  output xt_rsc_triosy_1_0_lz;
  input xt_rsc_1_1_s_tdone;
  input xt_rsc_1_1_tr_write_done;
  input xt_rsc_1_1_RREADY;
  output xt_rsc_1_1_RVALID;
  output xt_rsc_1_1_RUSER;
  output xt_rsc_1_1_RLAST;
  output [1:0] xt_rsc_1_1_RRESP;
  output [31:0] xt_rsc_1_1_RDATA;
  output xt_rsc_1_1_RID;
  output xt_rsc_1_1_ARREADY;
  input xt_rsc_1_1_ARVALID;
  input xt_rsc_1_1_ARUSER;
  input [3:0] xt_rsc_1_1_ARREGION;
  input [3:0] xt_rsc_1_1_ARQOS;
  input [2:0] xt_rsc_1_1_ARPROT;
  input [3:0] xt_rsc_1_1_ARCACHE;
  input xt_rsc_1_1_ARLOCK;
  input [1:0] xt_rsc_1_1_ARBURST;
  input [2:0] xt_rsc_1_1_ARSIZE;
  input [7:0] xt_rsc_1_1_ARLEN;
  input [11:0] xt_rsc_1_1_ARADDR;
  input xt_rsc_1_1_ARID;
  input xt_rsc_1_1_BREADY;
  output xt_rsc_1_1_BVALID;
  output xt_rsc_1_1_BUSER;
  output [1:0] xt_rsc_1_1_BRESP;
  output xt_rsc_1_1_BID;
  output xt_rsc_1_1_WREADY;
  input xt_rsc_1_1_WVALID;
  input xt_rsc_1_1_WUSER;
  input xt_rsc_1_1_WLAST;
  input [3:0] xt_rsc_1_1_WSTRB;
  input [31:0] xt_rsc_1_1_WDATA;
  output xt_rsc_1_1_AWREADY;
  input xt_rsc_1_1_AWVALID;
  input xt_rsc_1_1_AWUSER;
  input [3:0] xt_rsc_1_1_AWREGION;
  input [3:0] xt_rsc_1_1_AWQOS;
  input [2:0] xt_rsc_1_1_AWPROT;
  input [3:0] xt_rsc_1_1_AWCACHE;
  input xt_rsc_1_1_AWLOCK;
  input [1:0] xt_rsc_1_1_AWBURST;
  input [2:0] xt_rsc_1_1_AWSIZE;
  input [7:0] xt_rsc_1_1_AWLEN;
  input [11:0] xt_rsc_1_1_AWADDR;
  input xt_rsc_1_1_AWID;
  output xt_rsc_triosy_1_1_lz;
  input xt_rsc_1_2_s_tdone;
  input xt_rsc_1_2_tr_write_done;
  input xt_rsc_1_2_RREADY;
  output xt_rsc_1_2_RVALID;
  output xt_rsc_1_2_RUSER;
  output xt_rsc_1_2_RLAST;
  output [1:0] xt_rsc_1_2_RRESP;
  output [31:0] xt_rsc_1_2_RDATA;
  output xt_rsc_1_2_RID;
  output xt_rsc_1_2_ARREADY;
  input xt_rsc_1_2_ARVALID;
  input xt_rsc_1_2_ARUSER;
  input [3:0] xt_rsc_1_2_ARREGION;
  input [3:0] xt_rsc_1_2_ARQOS;
  input [2:0] xt_rsc_1_2_ARPROT;
  input [3:0] xt_rsc_1_2_ARCACHE;
  input xt_rsc_1_2_ARLOCK;
  input [1:0] xt_rsc_1_2_ARBURST;
  input [2:0] xt_rsc_1_2_ARSIZE;
  input [7:0] xt_rsc_1_2_ARLEN;
  input [11:0] xt_rsc_1_2_ARADDR;
  input xt_rsc_1_2_ARID;
  input xt_rsc_1_2_BREADY;
  output xt_rsc_1_2_BVALID;
  output xt_rsc_1_2_BUSER;
  output [1:0] xt_rsc_1_2_BRESP;
  output xt_rsc_1_2_BID;
  output xt_rsc_1_2_WREADY;
  input xt_rsc_1_2_WVALID;
  input xt_rsc_1_2_WUSER;
  input xt_rsc_1_2_WLAST;
  input [3:0] xt_rsc_1_2_WSTRB;
  input [31:0] xt_rsc_1_2_WDATA;
  output xt_rsc_1_2_AWREADY;
  input xt_rsc_1_2_AWVALID;
  input xt_rsc_1_2_AWUSER;
  input [3:0] xt_rsc_1_2_AWREGION;
  input [3:0] xt_rsc_1_2_AWQOS;
  input [2:0] xt_rsc_1_2_AWPROT;
  input [3:0] xt_rsc_1_2_AWCACHE;
  input xt_rsc_1_2_AWLOCK;
  input [1:0] xt_rsc_1_2_AWBURST;
  input [2:0] xt_rsc_1_2_AWSIZE;
  input [7:0] xt_rsc_1_2_AWLEN;
  input [11:0] xt_rsc_1_2_AWADDR;
  input xt_rsc_1_2_AWID;
  output xt_rsc_triosy_1_2_lz;
  input xt_rsc_1_3_s_tdone;
  input xt_rsc_1_3_tr_write_done;
  input xt_rsc_1_3_RREADY;
  output xt_rsc_1_3_RVALID;
  output xt_rsc_1_3_RUSER;
  output xt_rsc_1_3_RLAST;
  output [1:0] xt_rsc_1_3_RRESP;
  output [31:0] xt_rsc_1_3_RDATA;
  output xt_rsc_1_3_RID;
  output xt_rsc_1_3_ARREADY;
  input xt_rsc_1_3_ARVALID;
  input xt_rsc_1_3_ARUSER;
  input [3:0] xt_rsc_1_3_ARREGION;
  input [3:0] xt_rsc_1_3_ARQOS;
  input [2:0] xt_rsc_1_3_ARPROT;
  input [3:0] xt_rsc_1_3_ARCACHE;
  input xt_rsc_1_3_ARLOCK;
  input [1:0] xt_rsc_1_3_ARBURST;
  input [2:0] xt_rsc_1_3_ARSIZE;
  input [7:0] xt_rsc_1_3_ARLEN;
  input [11:0] xt_rsc_1_3_ARADDR;
  input xt_rsc_1_3_ARID;
  input xt_rsc_1_3_BREADY;
  output xt_rsc_1_3_BVALID;
  output xt_rsc_1_3_BUSER;
  output [1:0] xt_rsc_1_3_BRESP;
  output xt_rsc_1_3_BID;
  output xt_rsc_1_3_WREADY;
  input xt_rsc_1_3_WVALID;
  input xt_rsc_1_3_WUSER;
  input xt_rsc_1_3_WLAST;
  input [3:0] xt_rsc_1_3_WSTRB;
  input [31:0] xt_rsc_1_3_WDATA;
  output xt_rsc_1_3_AWREADY;
  input xt_rsc_1_3_AWVALID;
  input xt_rsc_1_3_AWUSER;
  input [3:0] xt_rsc_1_3_AWREGION;
  input [3:0] xt_rsc_1_3_AWQOS;
  input [2:0] xt_rsc_1_3_AWPROT;
  input [3:0] xt_rsc_1_3_AWCACHE;
  input xt_rsc_1_3_AWLOCK;
  input [1:0] xt_rsc_1_3_AWBURST;
  input [2:0] xt_rsc_1_3_AWSIZE;
  input [7:0] xt_rsc_1_3_AWLEN;
  input [11:0] xt_rsc_1_3_AWADDR;
  input xt_rsc_1_3_AWID;
  output xt_rsc_triosy_1_3_lz;
  input xt_rsc_1_4_s_tdone;
  input xt_rsc_1_4_tr_write_done;
  input xt_rsc_1_4_RREADY;
  output xt_rsc_1_4_RVALID;
  output xt_rsc_1_4_RUSER;
  output xt_rsc_1_4_RLAST;
  output [1:0] xt_rsc_1_4_RRESP;
  output [31:0] xt_rsc_1_4_RDATA;
  output xt_rsc_1_4_RID;
  output xt_rsc_1_4_ARREADY;
  input xt_rsc_1_4_ARVALID;
  input xt_rsc_1_4_ARUSER;
  input [3:0] xt_rsc_1_4_ARREGION;
  input [3:0] xt_rsc_1_4_ARQOS;
  input [2:0] xt_rsc_1_4_ARPROT;
  input [3:0] xt_rsc_1_4_ARCACHE;
  input xt_rsc_1_4_ARLOCK;
  input [1:0] xt_rsc_1_4_ARBURST;
  input [2:0] xt_rsc_1_4_ARSIZE;
  input [7:0] xt_rsc_1_4_ARLEN;
  input [11:0] xt_rsc_1_4_ARADDR;
  input xt_rsc_1_4_ARID;
  input xt_rsc_1_4_BREADY;
  output xt_rsc_1_4_BVALID;
  output xt_rsc_1_4_BUSER;
  output [1:0] xt_rsc_1_4_BRESP;
  output xt_rsc_1_4_BID;
  output xt_rsc_1_4_WREADY;
  input xt_rsc_1_4_WVALID;
  input xt_rsc_1_4_WUSER;
  input xt_rsc_1_4_WLAST;
  input [3:0] xt_rsc_1_4_WSTRB;
  input [31:0] xt_rsc_1_4_WDATA;
  output xt_rsc_1_4_AWREADY;
  input xt_rsc_1_4_AWVALID;
  input xt_rsc_1_4_AWUSER;
  input [3:0] xt_rsc_1_4_AWREGION;
  input [3:0] xt_rsc_1_4_AWQOS;
  input [2:0] xt_rsc_1_4_AWPROT;
  input [3:0] xt_rsc_1_4_AWCACHE;
  input xt_rsc_1_4_AWLOCK;
  input [1:0] xt_rsc_1_4_AWBURST;
  input [2:0] xt_rsc_1_4_AWSIZE;
  input [7:0] xt_rsc_1_4_AWLEN;
  input [11:0] xt_rsc_1_4_AWADDR;
  input xt_rsc_1_4_AWID;
  output xt_rsc_triosy_1_4_lz;
  input xt_rsc_1_5_s_tdone;
  input xt_rsc_1_5_tr_write_done;
  input xt_rsc_1_5_RREADY;
  output xt_rsc_1_5_RVALID;
  output xt_rsc_1_5_RUSER;
  output xt_rsc_1_5_RLAST;
  output [1:0] xt_rsc_1_5_RRESP;
  output [31:0] xt_rsc_1_5_RDATA;
  output xt_rsc_1_5_RID;
  output xt_rsc_1_5_ARREADY;
  input xt_rsc_1_5_ARVALID;
  input xt_rsc_1_5_ARUSER;
  input [3:0] xt_rsc_1_5_ARREGION;
  input [3:0] xt_rsc_1_5_ARQOS;
  input [2:0] xt_rsc_1_5_ARPROT;
  input [3:0] xt_rsc_1_5_ARCACHE;
  input xt_rsc_1_5_ARLOCK;
  input [1:0] xt_rsc_1_5_ARBURST;
  input [2:0] xt_rsc_1_5_ARSIZE;
  input [7:0] xt_rsc_1_5_ARLEN;
  input [11:0] xt_rsc_1_5_ARADDR;
  input xt_rsc_1_5_ARID;
  input xt_rsc_1_5_BREADY;
  output xt_rsc_1_5_BVALID;
  output xt_rsc_1_5_BUSER;
  output [1:0] xt_rsc_1_5_BRESP;
  output xt_rsc_1_5_BID;
  output xt_rsc_1_5_WREADY;
  input xt_rsc_1_5_WVALID;
  input xt_rsc_1_5_WUSER;
  input xt_rsc_1_5_WLAST;
  input [3:0] xt_rsc_1_5_WSTRB;
  input [31:0] xt_rsc_1_5_WDATA;
  output xt_rsc_1_5_AWREADY;
  input xt_rsc_1_5_AWVALID;
  input xt_rsc_1_5_AWUSER;
  input [3:0] xt_rsc_1_5_AWREGION;
  input [3:0] xt_rsc_1_5_AWQOS;
  input [2:0] xt_rsc_1_5_AWPROT;
  input [3:0] xt_rsc_1_5_AWCACHE;
  input xt_rsc_1_5_AWLOCK;
  input [1:0] xt_rsc_1_5_AWBURST;
  input [2:0] xt_rsc_1_5_AWSIZE;
  input [7:0] xt_rsc_1_5_AWLEN;
  input [11:0] xt_rsc_1_5_AWADDR;
  input xt_rsc_1_5_AWID;
  output xt_rsc_triosy_1_5_lz;
  input xt_rsc_1_6_s_tdone;
  input xt_rsc_1_6_tr_write_done;
  input xt_rsc_1_6_RREADY;
  output xt_rsc_1_6_RVALID;
  output xt_rsc_1_6_RUSER;
  output xt_rsc_1_6_RLAST;
  output [1:0] xt_rsc_1_6_RRESP;
  output [31:0] xt_rsc_1_6_RDATA;
  output xt_rsc_1_6_RID;
  output xt_rsc_1_6_ARREADY;
  input xt_rsc_1_6_ARVALID;
  input xt_rsc_1_6_ARUSER;
  input [3:0] xt_rsc_1_6_ARREGION;
  input [3:0] xt_rsc_1_6_ARQOS;
  input [2:0] xt_rsc_1_6_ARPROT;
  input [3:0] xt_rsc_1_6_ARCACHE;
  input xt_rsc_1_6_ARLOCK;
  input [1:0] xt_rsc_1_6_ARBURST;
  input [2:0] xt_rsc_1_6_ARSIZE;
  input [7:0] xt_rsc_1_6_ARLEN;
  input [11:0] xt_rsc_1_6_ARADDR;
  input xt_rsc_1_6_ARID;
  input xt_rsc_1_6_BREADY;
  output xt_rsc_1_6_BVALID;
  output xt_rsc_1_6_BUSER;
  output [1:0] xt_rsc_1_6_BRESP;
  output xt_rsc_1_6_BID;
  output xt_rsc_1_6_WREADY;
  input xt_rsc_1_6_WVALID;
  input xt_rsc_1_6_WUSER;
  input xt_rsc_1_6_WLAST;
  input [3:0] xt_rsc_1_6_WSTRB;
  input [31:0] xt_rsc_1_6_WDATA;
  output xt_rsc_1_6_AWREADY;
  input xt_rsc_1_6_AWVALID;
  input xt_rsc_1_6_AWUSER;
  input [3:0] xt_rsc_1_6_AWREGION;
  input [3:0] xt_rsc_1_6_AWQOS;
  input [2:0] xt_rsc_1_6_AWPROT;
  input [3:0] xt_rsc_1_6_AWCACHE;
  input xt_rsc_1_6_AWLOCK;
  input [1:0] xt_rsc_1_6_AWBURST;
  input [2:0] xt_rsc_1_6_AWSIZE;
  input [7:0] xt_rsc_1_6_AWLEN;
  input [11:0] xt_rsc_1_6_AWADDR;
  input xt_rsc_1_6_AWID;
  output xt_rsc_triosy_1_6_lz;
  input xt_rsc_1_7_s_tdone;
  input xt_rsc_1_7_tr_write_done;
  input xt_rsc_1_7_RREADY;
  output xt_rsc_1_7_RVALID;
  output xt_rsc_1_7_RUSER;
  output xt_rsc_1_7_RLAST;
  output [1:0] xt_rsc_1_7_RRESP;
  output [31:0] xt_rsc_1_7_RDATA;
  output xt_rsc_1_7_RID;
  output xt_rsc_1_7_ARREADY;
  input xt_rsc_1_7_ARVALID;
  input xt_rsc_1_7_ARUSER;
  input [3:0] xt_rsc_1_7_ARREGION;
  input [3:0] xt_rsc_1_7_ARQOS;
  input [2:0] xt_rsc_1_7_ARPROT;
  input [3:0] xt_rsc_1_7_ARCACHE;
  input xt_rsc_1_7_ARLOCK;
  input [1:0] xt_rsc_1_7_ARBURST;
  input [2:0] xt_rsc_1_7_ARSIZE;
  input [7:0] xt_rsc_1_7_ARLEN;
  input [11:0] xt_rsc_1_7_ARADDR;
  input xt_rsc_1_7_ARID;
  input xt_rsc_1_7_BREADY;
  output xt_rsc_1_7_BVALID;
  output xt_rsc_1_7_BUSER;
  output [1:0] xt_rsc_1_7_BRESP;
  output xt_rsc_1_7_BID;
  output xt_rsc_1_7_WREADY;
  input xt_rsc_1_7_WVALID;
  input xt_rsc_1_7_WUSER;
  input xt_rsc_1_7_WLAST;
  input [3:0] xt_rsc_1_7_WSTRB;
  input [31:0] xt_rsc_1_7_WDATA;
  output xt_rsc_1_7_AWREADY;
  input xt_rsc_1_7_AWVALID;
  input xt_rsc_1_7_AWUSER;
  input [3:0] xt_rsc_1_7_AWREGION;
  input [3:0] xt_rsc_1_7_AWQOS;
  input [2:0] xt_rsc_1_7_AWPROT;
  input [3:0] xt_rsc_1_7_AWCACHE;
  input xt_rsc_1_7_AWLOCK;
  input [1:0] xt_rsc_1_7_AWBURST;
  input [2:0] xt_rsc_1_7_AWSIZE;
  input [7:0] xt_rsc_1_7_AWLEN;
  input [11:0] xt_rsc_1_7_AWADDR;
  input xt_rsc_1_7_AWID;
  output xt_rsc_triosy_1_7_lz;
  input xt_rsc_1_8_s_tdone;
  input xt_rsc_1_8_tr_write_done;
  input xt_rsc_1_8_RREADY;
  output xt_rsc_1_8_RVALID;
  output xt_rsc_1_8_RUSER;
  output xt_rsc_1_8_RLAST;
  output [1:0] xt_rsc_1_8_RRESP;
  output [31:0] xt_rsc_1_8_RDATA;
  output xt_rsc_1_8_RID;
  output xt_rsc_1_8_ARREADY;
  input xt_rsc_1_8_ARVALID;
  input xt_rsc_1_8_ARUSER;
  input [3:0] xt_rsc_1_8_ARREGION;
  input [3:0] xt_rsc_1_8_ARQOS;
  input [2:0] xt_rsc_1_8_ARPROT;
  input [3:0] xt_rsc_1_8_ARCACHE;
  input xt_rsc_1_8_ARLOCK;
  input [1:0] xt_rsc_1_8_ARBURST;
  input [2:0] xt_rsc_1_8_ARSIZE;
  input [7:0] xt_rsc_1_8_ARLEN;
  input [11:0] xt_rsc_1_8_ARADDR;
  input xt_rsc_1_8_ARID;
  input xt_rsc_1_8_BREADY;
  output xt_rsc_1_8_BVALID;
  output xt_rsc_1_8_BUSER;
  output [1:0] xt_rsc_1_8_BRESP;
  output xt_rsc_1_8_BID;
  output xt_rsc_1_8_WREADY;
  input xt_rsc_1_8_WVALID;
  input xt_rsc_1_8_WUSER;
  input xt_rsc_1_8_WLAST;
  input [3:0] xt_rsc_1_8_WSTRB;
  input [31:0] xt_rsc_1_8_WDATA;
  output xt_rsc_1_8_AWREADY;
  input xt_rsc_1_8_AWVALID;
  input xt_rsc_1_8_AWUSER;
  input [3:0] xt_rsc_1_8_AWREGION;
  input [3:0] xt_rsc_1_8_AWQOS;
  input [2:0] xt_rsc_1_8_AWPROT;
  input [3:0] xt_rsc_1_8_AWCACHE;
  input xt_rsc_1_8_AWLOCK;
  input [1:0] xt_rsc_1_8_AWBURST;
  input [2:0] xt_rsc_1_8_AWSIZE;
  input [7:0] xt_rsc_1_8_AWLEN;
  input [11:0] xt_rsc_1_8_AWADDR;
  input xt_rsc_1_8_AWID;
  output xt_rsc_triosy_1_8_lz;
  input xt_rsc_1_9_s_tdone;
  input xt_rsc_1_9_tr_write_done;
  input xt_rsc_1_9_RREADY;
  output xt_rsc_1_9_RVALID;
  output xt_rsc_1_9_RUSER;
  output xt_rsc_1_9_RLAST;
  output [1:0] xt_rsc_1_9_RRESP;
  output [31:0] xt_rsc_1_9_RDATA;
  output xt_rsc_1_9_RID;
  output xt_rsc_1_9_ARREADY;
  input xt_rsc_1_9_ARVALID;
  input xt_rsc_1_9_ARUSER;
  input [3:0] xt_rsc_1_9_ARREGION;
  input [3:0] xt_rsc_1_9_ARQOS;
  input [2:0] xt_rsc_1_9_ARPROT;
  input [3:0] xt_rsc_1_9_ARCACHE;
  input xt_rsc_1_9_ARLOCK;
  input [1:0] xt_rsc_1_9_ARBURST;
  input [2:0] xt_rsc_1_9_ARSIZE;
  input [7:0] xt_rsc_1_9_ARLEN;
  input [11:0] xt_rsc_1_9_ARADDR;
  input xt_rsc_1_9_ARID;
  input xt_rsc_1_9_BREADY;
  output xt_rsc_1_9_BVALID;
  output xt_rsc_1_9_BUSER;
  output [1:0] xt_rsc_1_9_BRESP;
  output xt_rsc_1_9_BID;
  output xt_rsc_1_9_WREADY;
  input xt_rsc_1_9_WVALID;
  input xt_rsc_1_9_WUSER;
  input xt_rsc_1_9_WLAST;
  input [3:0] xt_rsc_1_9_WSTRB;
  input [31:0] xt_rsc_1_9_WDATA;
  output xt_rsc_1_9_AWREADY;
  input xt_rsc_1_9_AWVALID;
  input xt_rsc_1_9_AWUSER;
  input [3:0] xt_rsc_1_9_AWREGION;
  input [3:0] xt_rsc_1_9_AWQOS;
  input [2:0] xt_rsc_1_9_AWPROT;
  input [3:0] xt_rsc_1_9_AWCACHE;
  input xt_rsc_1_9_AWLOCK;
  input [1:0] xt_rsc_1_9_AWBURST;
  input [2:0] xt_rsc_1_9_AWSIZE;
  input [7:0] xt_rsc_1_9_AWLEN;
  input [11:0] xt_rsc_1_9_AWADDR;
  input xt_rsc_1_9_AWID;
  output xt_rsc_triosy_1_9_lz;
  input xt_rsc_1_10_s_tdone;
  input xt_rsc_1_10_tr_write_done;
  input xt_rsc_1_10_RREADY;
  output xt_rsc_1_10_RVALID;
  output xt_rsc_1_10_RUSER;
  output xt_rsc_1_10_RLAST;
  output [1:0] xt_rsc_1_10_RRESP;
  output [31:0] xt_rsc_1_10_RDATA;
  output xt_rsc_1_10_RID;
  output xt_rsc_1_10_ARREADY;
  input xt_rsc_1_10_ARVALID;
  input xt_rsc_1_10_ARUSER;
  input [3:0] xt_rsc_1_10_ARREGION;
  input [3:0] xt_rsc_1_10_ARQOS;
  input [2:0] xt_rsc_1_10_ARPROT;
  input [3:0] xt_rsc_1_10_ARCACHE;
  input xt_rsc_1_10_ARLOCK;
  input [1:0] xt_rsc_1_10_ARBURST;
  input [2:0] xt_rsc_1_10_ARSIZE;
  input [7:0] xt_rsc_1_10_ARLEN;
  input [11:0] xt_rsc_1_10_ARADDR;
  input xt_rsc_1_10_ARID;
  input xt_rsc_1_10_BREADY;
  output xt_rsc_1_10_BVALID;
  output xt_rsc_1_10_BUSER;
  output [1:0] xt_rsc_1_10_BRESP;
  output xt_rsc_1_10_BID;
  output xt_rsc_1_10_WREADY;
  input xt_rsc_1_10_WVALID;
  input xt_rsc_1_10_WUSER;
  input xt_rsc_1_10_WLAST;
  input [3:0] xt_rsc_1_10_WSTRB;
  input [31:0] xt_rsc_1_10_WDATA;
  output xt_rsc_1_10_AWREADY;
  input xt_rsc_1_10_AWVALID;
  input xt_rsc_1_10_AWUSER;
  input [3:0] xt_rsc_1_10_AWREGION;
  input [3:0] xt_rsc_1_10_AWQOS;
  input [2:0] xt_rsc_1_10_AWPROT;
  input [3:0] xt_rsc_1_10_AWCACHE;
  input xt_rsc_1_10_AWLOCK;
  input [1:0] xt_rsc_1_10_AWBURST;
  input [2:0] xt_rsc_1_10_AWSIZE;
  input [7:0] xt_rsc_1_10_AWLEN;
  input [11:0] xt_rsc_1_10_AWADDR;
  input xt_rsc_1_10_AWID;
  output xt_rsc_triosy_1_10_lz;
  input xt_rsc_1_11_s_tdone;
  input xt_rsc_1_11_tr_write_done;
  input xt_rsc_1_11_RREADY;
  output xt_rsc_1_11_RVALID;
  output xt_rsc_1_11_RUSER;
  output xt_rsc_1_11_RLAST;
  output [1:0] xt_rsc_1_11_RRESP;
  output [31:0] xt_rsc_1_11_RDATA;
  output xt_rsc_1_11_RID;
  output xt_rsc_1_11_ARREADY;
  input xt_rsc_1_11_ARVALID;
  input xt_rsc_1_11_ARUSER;
  input [3:0] xt_rsc_1_11_ARREGION;
  input [3:0] xt_rsc_1_11_ARQOS;
  input [2:0] xt_rsc_1_11_ARPROT;
  input [3:0] xt_rsc_1_11_ARCACHE;
  input xt_rsc_1_11_ARLOCK;
  input [1:0] xt_rsc_1_11_ARBURST;
  input [2:0] xt_rsc_1_11_ARSIZE;
  input [7:0] xt_rsc_1_11_ARLEN;
  input [11:0] xt_rsc_1_11_ARADDR;
  input xt_rsc_1_11_ARID;
  input xt_rsc_1_11_BREADY;
  output xt_rsc_1_11_BVALID;
  output xt_rsc_1_11_BUSER;
  output [1:0] xt_rsc_1_11_BRESP;
  output xt_rsc_1_11_BID;
  output xt_rsc_1_11_WREADY;
  input xt_rsc_1_11_WVALID;
  input xt_rsc_1_11_WUSER;
  input xt_rsc_1_11_WLAST;
  input [3:0] xt_rsc_1_11_WSTRB;
  input [31:0] xt_rsc_1_11_WDATA;
  output xt_rsc_1_11_AWREADY;
  input xt_rsc_1_11_AWVALID;
  input xt_rsc_1_11_AWUSER;
  input [3:0] xt_rsc_1_11_AWREGION;
  input [3:0] xt_rsc_1_11_AWQOS;
  input [2:0] xt_rsc_1_11_AWPROT;
  input [3:0] xt_rsc_1_11_AWCACHE;
  input xt_rsc_1_11_AWLOCK;
  input [1:0] xt_rsc_1_11_AWBURST;
  input [2:0] xt_rsc_1_11_AWSIZE;
  input [7:0] xt_rsc_1_11_AWLEN;
  input [11:0] xt_rsc_1_11_AWADDR;
  input xt_rsc_1_11_AWID;
  output xt_rsc_triosy_1_11_lz;
  input xt_rsc_1_12_s_tdone;
  input xt_rsc_1_12_tr_write_done;
  input xt_rsc_1_12_RREADY;
  output xt_rsc_1_12_RVALID;
  output xt_rsc_1_12_RUSER;
  output xt_rsc_1_12_RLAST;
  output [1:0] xt_rsc_1_12_RRESP;
  output [31:0] xt_rsc_1_12_RDATA;
  output xt_rsc_1_12_RID;
  output xt_rsc_1_12_ARREADY;
  input xt_rsc_1_12_ARVALID;
  input xt_rsc_1_12_ARUSER;
  input [3:0] xt_rsc_1_12_ARREGION;
  input [3:0] xt_rsc_1_12_ARQOS;
  input [2:0] xt_rsc_1_12_ARPROT;
  input [3:0] xt_rsc_1_12_ARCACHE;
  input xt_rsc_1_12_ARLOCK;
  input [1:0] xt_rsc_1_12_ARBURST;
  input [2:0] xt_rsc_1_12_ARSIZE;
  input [7:0] xt_rsc_1_12_ARLEN;
  input [11:0] xt_rsc_1_12_ARADDR;
  input xt_rsc_1_12_ARID;
  input xt_rsc_1_12_BREADY;
  output xt_rsc_1_12_BVALID;
  output xt_rsc_1_12_BUSER;
  output [1:0] xt_rsc_1_12_BRESP;
  output xt_rsc_1_12_BID;
  output xt_rsc_1_12_WREADY;
  input xt_rsc_1_12_WVALID;
  input xt_rsc_1_12_WUSER;
  input xt_rsc_1_12_WLAST;
  input [3:0] xt_rsc_1_12_WSTRB;
  input [31:0] xt_rsc_1_12_WDATA;
  output xt_rsc_1_12_AWREADY;
  input xt_rsc_1_12_AWVALID;
  input xt_rsc_1_12_AWUSER;
  input [3:0] xt_rsc_1_12_AWREGION;
  input [3:0] xt_rsc_1_12_AWQOS;
  input [2:0] xt_rsc_1_12_AWPROT;
  input [3:0] xt_rsc_1_12_AWCACHE;
  input xt_rsc_1_12_AWLOCK;
  input [1:0] xt_rsc_1_12_AWBURST;
  input [2:0] xt_rsc_1_12_AWSIZE;
  input [7:0] xt_rsc_1_12_AWLEN;
  input [11:0] xt_rsc_1_12_AWADDR;
  input xt_rsc_1_12_AWID;
  output xt_rsc_triosy_1_12_lz;
  input xt_rsc_1_13_s_tdone;
  input xt_rsc_1_13_tr_write_done;
  input xt_rsc_1_13_RREADY;
  output xt_rsc_1_13_RVALID;
  output xt_rsc_1_13_RUSER;
  output xt_rsc_1_13_RLAST;
  output [1:0] xt_rsc_1_13_RRESP;
  output [31:0] xt_rsc_1_13_RDATA;
  output xt_rsc_1_13_RID;
  output xt_rsc_1_13_ARREADY;
  input xt_rsc_1_13_ARVALID;
  input xt_rsc_1_13_ARUSER;
  input [3:0] xt_rsc_1_13_ARREGION;
  input [3:0] xt_rsc_1_13_ARQOS;
  input [2:0] xt_rsc_1_13_ARPROT;
  input [3:0] xt_rsc_1_13_ARCACHE;
  input xt_rsc_1_13_ARLOCK;
  input [1:0] xt_rsc_1_13_ARBURST;
  input [2:0] xt_rsc_1_13_ARSIZE;
  input [7:0] xt_rsc_1_13_ARLEN;
  input [11:0] xt_rsc_1_13_ARADDR;
  input xt_rsc_1_13_ARID;
  input xt_rsc_1_13_BREADY;
  output xt_rsc_1_13_BVALID;
  output xt_rsc_1_13_BUSER;
  output [1:0] xt_rsc_1_13_BRESP;
  output xt_rsc_1_13_BID;
  output xt_rsc_1_13_WREADY;
  input xt_rsc_1_13_WVALID;
  input xt_rsc_1_13_WUSER;
  input xt_rsc_1_13_WLAST;
  input [3:0] xt_rsc_1_13_WSTRB;
  input [31:0] xt_rsc_1_13_WDATA;
  output xt_rsc_1_13_AWREADY;
  input xt_rsc_1_13_AWVALID;
  input xt_rsc_1_13_AWUSER;
  input [3:0] xt_rsc_1_13_AWREGION;
  input [3:0] xt_rsc_1_13_AWQOS;
  input [2:0] xt_rsc_1_13_AWPROT;
  input [3:0] xt_rsc_1_13_AWCACHE;
  input xt_rsc_1_13_AWLOCK;
  input [1:0] xt_rsc_1_13_AWBURST;
  input [2:0] xt_rsc_1_13_AWSIZE;
  input [7:0] xt_rsc_1_13_AWLEN;
  input [11:0] xt_rsc_1_13_AWADDR;
  input xt_rsc_1_13_AWID;
  output xt_rsc_triosy_1_13_lz;
  input xt_rsc_1_14_s_tdone;
  input xt_rsc_1_14_tr_write_done;
  input xt_rsc_1_14_RREADY;
  output xt_rsc_1_14_RVALID;
  output xt_rsc_1_14_RUSER;
  output xt_rsc_1_14_RLAST;
  output [1:0] xt_rsc_1_14_RRESP;
  output [31:0] xt_rsc_1_14_RDATA;
  output xt_rsc_1_14_RID;
  output xt_rsc_1_14_ARREADY;
  input xt_rsc_1_14_ARVALID;
  input xt_rsc_1_14_ARUSER;
  input [3:0] xt_rsc_1_14_ARREGION;
  input [3:0] xt_rsc_1_14_ARQOS;
  input [2:0] xt_rsc_1_14_ARPROT;
  input [3:0] xt_rsc_1_14_ARCACHE;
  input xt_rsc_1_14_ARLOCK;
  input [1:0] xt_rsc_1_14_ARBURST;
  input [2:0] xt_rsc_1_14_ARSIZE;
  input [7:0] xt_rsc_1_14_ARLEN;
  input [11:0] xt_rsc_1_14_ARADDR;
  input xt_rsc_1_14_ARID;
  input xt_rsc_1_14_BREADY;
  output xt_rsc_1_14_BVALID;
  output xt_rsc_1_14_BUSER;
  output [1:0] xt_rsc_1_14_BRESP;
  output xt_rsc_1_14_BID;
  output xt_rsc_1_14_WREADY;
  input xt_rsc_1_14_WVALID;
  input xt_rsc_1_14_WUSER;
  input xt_rsc_1_14_WLAST;
  input [3:0] xt_rsc_1_14_WSTRB;
  input [31:0] xt_rsc_1_14_WDATA;
  output xt_rsc_1_14_AWREADY;
  input xt_rsc_1_14_AWVALID;
  input xt_rsc_1_14_AWUSER;
  input [3:0] xt_rsc_1_14_AWREGION;
  input [3:0] xt_rsc_1_14_AWQOS;
  input [2:0] xt_rsc_1_14_AWPROT;
  input [3:0] xt_rsc_1_14_AWCACHE;
  input xt_rsc_1_14_AWLOCK;
  input [1:0] xt_rsc_1_14_AWBURST;
  input [2:0] xt_rsc_1_14_AWSIZE;
  input [7:0] xt_rsc_1_14_AWLEN;
  input [11:0] xt_rsc_1_14_AWADDR;
  input xt_rsc_1_14_AWID;
  output xt_rsc_triosy_1_14_lz;
  input xt_rsc_1_15_s_tdone;
  input xt_rsc_1_15_tr_write_done;
  input xt_rsc_1_15_RREADY;
  output xt_rsc_1_15_RVALID;
  output xt_rsc_1_15_RUSER;
  output xt_rsc_1_15_RLAST;
  output [1:0] xt_rsc_1_15_RRESP;
  output [31:0] xt_rsc_1_15_RDATA;
  output xt_rsc_1_15_RID;
  output xt_rsc_1_15_ARREADY;
  input xt_rsc_1_15_ARVALID;
  input xt_rsc_1_15_ARUSER;
  input [3:0] xt_rsc_1_15_ARREGION;
  input [3:0] xt_rsc_1_15_ARQOS;
  input [2:0] xt_rsc_1_15_ARPROT;
  input [3:0] xt_rsc_1_15_ARCACHE;
  input xt_rsc_1_15_ARLOCK;
  input [1:0] xt_rsc_1_15_ARBURST;
  input [2:0] xt_rsc_1_15_ARSIZE;
  input [7:0] xt_rsc_1_15_ARLEN;
  input [11:0] xt_rsc_1_15_ARADDR;
  input xt_rsc_1_15_ARID;
  input xt_rsc_1_15_BREADY;
  output xt_rsc_1_15_BVALID;
  output xt_rsc_1_15_BUSER;
  output [1:0] xt_rsc_1_15_BRESP;
  output xt_rsc_1_15_BID;
  output xt_rsc_1_15_WREADY;
  input xt_rsc_1_15_WVALID;
  input xt_rsc_1_15_WUSER;
  input xt_rsc_1_15_WLAST;
  input [3:0] xt_rsc_1_15_WSTRB;
  input [31:0] xt_rsc_1_15_WDATA;
  output xt_rsc_1_15_AWREADY;
  input xt_rsc_1_15_AWVALID;
  input xt_rsc_1_15_AWUSER;
  input [3:0] xt_rsc_1_15_AWREGION;
  input [3:0] xt_rsc_1_15_AWQOS;
  input [2:0] xt_rsc_1_15_AWPROT;
  input [3:0] xt_rsc_1_15_AWCACHE;
  input xt_rsc_1_15_AWLOCK;
  input [1:0] xt_rsc_1_15_AWBURST;
  input [2:0] xt_rsc_1_15_AWSIZE;
  input [7:0] xt_rsc_1_15_AWLEN;
  input [11:0] xt_rsc_1_15_AWADDR;
  input xt_rsc_1_15_AWID;
  output xt_rsc_triosy_1_15_lz;
  input xt_rsc_1_16_s_tdone;
  input xt_rsc_1_16_tr_write_done;
  input xt_rsc_1_16_RREADY;
  output xt_rsc_1_16_RVALID;
  output xt_rsc_1_16_RUSER;
  output xt_rsc_1_16_RLAST;
  output [1:0] xt_rsc_1_16_RRESP;
  output [31:0] xt_rsc_1_16_RDATA;
  output xt_rsc_1_16_RID;
  output xt_rsc_1_16_ARREADY;
  input xt_rsc_1_16_ARVALID;
  input xt_rsc_1_16_ARUSER;
  input [3:0] xt_rsc_1_16_ARREGION;
  input [3:0] xt_rsc_1_16_ARQOS;
  input [2:0] xt_rsc_1_16_ARPROT;
  input [3:0] xt_rsc_1_16_ARCACHE;
  input xt_rsc_1_16_ARLOCK;
  input [1:0] xt_rsc_1_16_ARBURST;
  input [2:0] xt_rsc_1_16_ARSIZE;
  input [7:0] xt_rsc_1_16_ARLEN;
  input [11:0] xt_rsc_1_16_ARADDR;
  input xt_rsc_1_16_ARID;
  input xt_rsc_1_16_BREADY;
  output xt_rsc_1_16_BVALID;
  output xt_rsc_1_16_BUSER;
  output [1:0] xt_rsc_1_16_BRESP;
  output xt_rsc_1_16_BID;
  output xt_rsc_1_16_WREADY;
  input xt_rsc_1_16_WVALID;
  input xt_rsc_1_16_WUSER;
  input xt_rsc_1_16_WLAST;
  input [3:0] xt_rsc_1_16_WSTRB;
  input [31:0] xt_rsc_1_16_WDATA;
  output xt_rsc_1_16_AWREADY;
  input xt_rsc_1_16_AWVALID;
  input xt_rsc_1_16_AWUSER;
  input [3:0] xt_rsc_1_16_AWREGION;
  input [3:0] xt_rsc_1_16_AWQOS;
  input [2:0] xt_rsc_1_16_AWPROT;
  input [3:0] xt_rsc_1_16_AWCACHE;
  input xt_rsc_1_16_AWLOCK;
  input [1:0] xt_rsc_1_16_AWBURST;
  input [2:0] xt_rsc_1_16_AWSIZE;
  input [7:0] xt_rsc_1_16_AWLEN;
  input [11:0] xt_rsc_1_16_AWADDR;
  input xt_rsc_1_16_AWID;
  output xt_rsc_triosy_1_16_lz;
  input xt_rsc_1_17_s_tdone;
  input xt_rsc_1_17_tr_write_done;
  input xt_rsc_1_17_RREADY;
  output xt_rsc_1_17_RVALID;
  output xt_rsc_1_17_RUSER;
  output xt_rsc_1_17_RLAST;
  output [1:0] xt_rsc_1_17_RRESP;
  output [31:0] xt_rsc_1_17_RDATA;
  output xt_rsc_1_17_RID;
  output xt_rsc_1_17_ARREADY;
  input xt_rsc_1_17_ARVALID;
  input xt_rsc_1_17_ARUSER;
  input [3:0] xt_rsc_1_17_ARREGION;
  input [3:0] xt_rsc_1_17_ARQOS;
  input [2:0] xt_rsc_1_17_ARPROT;
  input [3:0] xt_rsc_1_17_ARCACHE;
  input xt_rsc_1_17_ARLOCK;
  input [1:0] xt_rsc_1_17_ARBURST;
  input [2:0] xt_rsc_1_17_ARSIZE;
  input [7:0] xt_rsc_1_17_ARLEN;
  input [11:0] xt_rsc_1_17_ARADDR;
  input xt_rsc_1_17_ARID;
  input xt_rsc_1_17_BREADY;
  output xt_rsc_1_17_BVALID;
  output xt_rsc_1_17_BUSER;
  output [1:0] xt_rsc_1_17_BRESP;
  output xt_rsc_1_17_BID;
  output xt_rsc_1_17_WREADY;
  input xt_rsc_1_17_WVALID;
  input xt_rsc_1_17_WUSER;
  input xt_rsc_1_17_WLAST;
  input [3:0] xt_rsc_1_17_WSTRB;
  input [31:0] xt_rsc_1_17_WDATA;
  output xt_rsc_1_17_AWREADY;
  input xt_rsc_1_17_AWVALID;
  input xt_rsc_1_17_AWUSER;
  input [3:0] xt_rsc_1_17_AWREGION;
  input [3:0] xt_rsc_1_17_AWQOS;
  input [2:0] xt_rsc_1_17_AWPROT;
  input [3:0] xt_rsc_1_17_AWCACHE;
  input xt_rsc_1_17_AWLOCK;
  input [1:0] xt_rsc_1_17_AWBURST;
  input [2:0] xt_rsc_1_17_AWSIZE;
  input [7:0] xt_rsc_1_17_AWLEN;
  input [11:0] xt_rsc_1_17_AWADDR;
  input xt_rsc_1_17_AWID;
  output xt_rsc_triosy_1_17_lz;
  input xt_rsc_1_18_s_tdone;
  input xt_rsc_1_18_tr_write_done;
  input xt_rsc_1_18_RREADY;
  output xt_rsc_1_18_RVALID;
  output xt_rsc_1_18_RUSER;
  output xt_rsc_1_18_RLAST;
  output [1:0] xt_rsc_1_18_RRESP;
  output [31:0] xt_rsc_1_18_RDATA;
  output xt_rsc_1_18_RID;
  output xt_rsc_1_18_ARREADY;
  input xt_rsc_1_18_ARVALID;
  input xt_rsc_1_18_ARUSER;
  input [3:0] xt_rsc_1_18_ARREGION;
  input [3:0] xt_rsc_1_18_ARQOS;
  input [2:0] xt_rsc_1_18_ARPROT;
  input [3:0] xt_rsc_1_18_ARCACHE;
  input xt_rsc_1_18_ARLOCK;
  input [1:0] xt_rsc_1_18_ARBURST;
  input [2:0] xt_rsc_1_18_ARSIZE;
  input [7:0] xt_rsc_1_18_ARLEN;
  input [11:0] xt_rsc_1_18_ARADDR;
  input xt_rsc_1_18_ARID;
  input xt_rsc_1_18_BREADY;
  output xt_rsc_1_18_BVALID;
  output xt_rsc_1_18_BUSER;
  output [1:0] xt_rsc_1_18_BRESP;
  output xt_rsc_1_18_BID;
  output xt_rsc_1_18_WREADY;
  input xt_rsc_1_18_WVALID;
  input xt_rsc_1_18_WUSER;
  input xt_rsc_1_18_WLAST;
  input [3:0] xt_rsc_1_18_WSTRB;
  input [31:0] xt_rsc_1_18_WDATA;
  output xt_rsc_1_18_AWREADY;
  input xt_rsc_1_18_AWVALID;
  input xt_rsc_1_18_AWUSER;
  input [3:0] xt_rsc_1_18_AWREGION;
  input [3:0] xt_rsc_1_18_AWQOS;
  input [2:0] xt_rsc_1_18_AWPROT;
  input [3:0] xt_rsc_1_18_AWCACHE;
  input xt_rsc_1_18_AWLOCK;
  input [1:0] xt_rsc_1_18_AWBURST;
  input [2:0] xt_rsc_1_18_AWSIZE;
  input [7:0] xt_rsc_1_18_AWLEN;
  input [11:0] xt_rsc_1_18_AWADDR;
  input xt_rsc_1_18_AWID;
  output xt_rsc_triosy_1_18_lz;
  input xt_rsc_1_19_s_tdone;
  input xt_rsc_1_19_tr_write_done;
  input xt_rsc_1_19_RREADY;
  output xt_rsc_1_19_RVALID;
  output xt_rsc_1_19_RUSER;
  output xt_rsc_1_19_RLAST;
  output [1:0] xt_rsc_1_19_RRESP;
  output [31:0] xt_rsc_1_19_RDATA;
  output xt_rsc_1_19_RID;
  output xt_rsc_1_19_ARREADY;
  input xt_rsc_1_19_ARVALID;
  input xt_rsc_1_19_ARUSER;
  input [3:0] xt_rsc_1_19_ARREGION;
  input [3:0] xt_rsc_1_19_ARQOS;
  input [2:0] xt_rsc_1_19_ARPROT;
  input [3:0] xt_rsc_1_19_ARCACHE;
  input xt_rsc_1_19_ARLOCK;
  input [1:0] xt_rsc_1_19_ARBURST;
  input [2:0] xt_rsc_1_19_ARSIZE;
  input [7:0] xt_rsc_1_19_ARLEN;
  input [11:0] xt_rsc_1_19_ARADDR;
  input xt_rsc_1_19_ARID;
  input xt_rsc_1_19_BREADY;
  output xt_rsc_1_19_BVALID;
  output xt_rsc_1_19_BUSER;
  output [1:0] xt_rsc_1_19_BRESP;
  output xt_rsc_1_19_BID;
  output xt_rsc_1_19_WREADY;
  input xt_rsc_1_19_WVALID;
  input xt_rsc_1_19_WUSER;
  input xt_rsc_1_19_WLAST;
  input [3:0] xt_rsc_1_19_WSTRB;
  input [31:0] xt_rsc_1_19_WDATA;
  output xt_rsc_1_19_AWREADY;
  input xt_rsc_1_19_AWVALID;
  input xt_rsc_1_19_AWUSER;
  input [3:0] xt_rsc_1_19_AWREGION;
  input [3:0] xt_rsc_1_19_AWQOS;
  input [2:0] xt_rsc_1_19_AWPROT;
  input [3:0] xt_rsc_1_19_AWCACHE;
  input xt_rsc_1_19_AWLOCK;
  input [1:0] xt_rsc_1_19_AWBURST;
  input [2:0] xt_rsc_1_19_AWSIZE;
  input [7:0] xt_rsc_1_19_AWLEN;
  input [11:0] xt_rsc_1_19_AWADDR;
  input xt_rsc_1_19_AWID;
  output xt_rsc_triosy_1_19_lz;
  input xt_rsc_1_20_s_tdone;
  input xt_rsc_1_20_tr_write_done;
  input xt_rsc_1_20_RREADY;
  output xt_rsc_1_20_RVALID;
  output xt_rsc_1_20_RUSER;
  output xt_rsc_1_20_RLAST;
  output [1:0] xt_rsc_1_20_RRESP;
  output [31:0] xt_rsc_1_20_RDATA;
  output xt_rsc_1_20_RID;
  output xt_rsc_1_20_ARREADY;
  input xt_rsc_1_20_ARVALID;
  input xt_rsc_1_20_ARUSER;
  input [3:0] xt_rsc_1_20_ARREGION;
  input [3:0] xt_rsc_1_20_ARQOS;
  input [2:0] xt_rsc_1_20_ARPROT;
  input [3:0] xt_rsc_1_20_ARCACHE;
  input xt_rsc_1_20_ARLOCK;
  input [1:0] xt_rsc_1_20_ARBURST;
  input [2:0] xt_rsc_1_20_ARSIZE;
  input [7:0] xt_rsc_1_20_ARLEN;
  input [11:0] xt_rsc_1_20_ARADDR;
  input xt_rsc_1_20_ARID;
  input xt_rsc_1_20_BREADY;
  output xt_rsc_1_20_BVALID;
  output xt_rsc_1_20_BUSER;
  output [1:0] xt_rsc_1_20_BRESP;
  output xt_rsc_1_20_BID;
  output xt_rsc_1_20_WREADY;
  input xt_rsc_1_20_WVALID;
  input xt_rsc_1_20_WUSER;
  input xt_rsc_1_20_WLAST;
  input [3:0] xt_rsc_1_20_WSTRB;
  input [31:0] xt_rsc_1_20_WDATA;
  output xt_rsc_1_20_AWREADY;
  input xt_rsc_1_20_AWVALID;
  input xt_rsc_1_20_AWUSER;
  input [3:0] xt_rsc_1_20_AWREGION;
  input [3:0] xt_rsc_1_20_AWQOS;
  input [2:0] xt_rsc_1_20_AWPROT;
  input [3:0] xt_rsc_1_20_AWCACHE;
  input xt_rsc_1_20_AWLOCK;
  input [1:0] xt_rsc_1_20_AWBURST;
  input [2:0] xt_rsc_1_20_AWSIZE;
  input [7:0] xt_rsc_1_20_AWLEN;
  input [11:0] xt_rsc_1_20_AWADDR;
  input xt_rsc_1_20_AWID;
  output xt_rsc_triosy_1_20_lz;
  input xt_rsc_1_21_s_tdone;
  input xt_rsc_1_21_tr_write_done;
  input xt_rsc_1_21_RREADY;
  output xt_rsc_1_21_RVALID;
  output xt_rsc_1_21_RUSER;
  output xt_rsc_1_21_RLAST;
  output [1:0] xt_rsc_1_21_RRESP;
  output [31:0] xt_rsc_1_21_RDATA;
  output xt_rsc_1_21_RID;
  output xt_rsc_1_21_ARREADY;
  input xt_rsc_1_21_ARVALID;
  input xt_rsc_1_21_ARUSER;
  input [3:0] xt_rsc_1_21_ARREGION;
  input [3:0] xt_rsc_1_21_ARQOS;
  input [2:0] xt_rsc_1_21_ARPROT;
  input [3:0] xt_rsc_1_21_ARCACHE;
  input xt_rsc_1_21_ARLOCK;
  input [1:0] xt_rsc_1_21_ARBURST;
  input [2:0] xt_rsc_1_21_ARSIZE;
  input [7:0] xt_rsc_1_21_ARLEN;
  input [11:0] xt_rsc_1_21_ARADDR;
  input xt_rsc_1_21_ARID;
  input xt_rsc_1_21_BREADY;
  output xt_rsc_1_21_BVALID;
  output xt_rsc_1_21_BUSER;
  output [1:0] xt_rsc_1_21_BRESP;
  output xt_rsc_1_21_BID;
  output xt_rsc_1_21_WREADY;
  input xt_rsc_1_21_WVALID;
  input xt_rsc_1_21_WUSER;
  input xt_rsc_1_21_WLAST;
  input [3:0] xt_rsc_1_21_WSTRB;
  input [31:0] xt_rsc_1_21_WDATA;
  output xt_rsc_1_21_AWREADY;
  input xt_rsc_1_21_AWVALID;
  input xt_rsc_1_21_AWUSER;
  input [3:0] xt_rsc_1_21_AWREGION;
  input [3:0] xt_rsc_1_21_AWQOS;
  input [2:0] xt_rsc_1_21_AWPROT;
  input [3:0] xt_rsc_1_21_AWCACHE;
  input xt_rsc_1_21_AWLOCK;
  input [1:0] xt_rsc_1_21_AWBURST;
  input [2:0] xt_rsc_1_21_AWSIZE;
  input [7:0] xt_rsc_1_21_AWLEN;
  input [11:0] xt_rsc_1_21_AWADDR;
  input xt_rsc_1_21_AWID;
  output xt_rsc_triosy_1_21_lz;
  input xt_rsc_1_22_s_tdone;
  input xt_rsc_1_22_tr_write_done;
  input xt_rsc_1_22_RREADY;
  output xt_rsc_1_22_RVALID;
  output xt_rsc_1_22_RUSER;
  output xt_rsc_1_22_RLAST;
  output [1:0] xt_rsc_1_22_RRESP;
  output [31:0] xt_rsc_1_22_RDATA;
  output xt_rsc_1_22_RID;
  output xt_rsc_1_22_ARREADY;
  input xt_rsc_1_22_ARVALID;
  input xt_rsc_1_22_ARUSER;
  input [3:0] xt_rsc_1_22_ARREGION;
  input [3:0] xt_rsc_1_22_ARQOS;
  input [2:0] xt_rsc_1_22_ARPROT;
  input [3:0] xt_rsc_1_22_ARCACHE;
  input xt_rsc_1_22_ARLOCK;
  input [1:0] xt_rsc_1_22_ARBURST;
  input [2:0] xt_rsc_1_22_ARSIZE;
  input [7:0] xt_rsc_1_22_ARLEN;
  input [11:0] xt_rsc_1_22_ARADDR;
  input xt_rsc_1_22_ARID;
  input xt_rsc_1_22_BREADY;
  output xt_rsc_1_22_BVALID;
  output xt_rsc_1_22_BUSER;
  output [1:0] xt_rsc_1_22_BRESP;
  output xt_rsc_1_22_BID;
  output xt_rsc_1_22_WREADY;
  input xt_rsc_1_22_WVALID;
  input xt_rsc_1_22_WUSER;
  input xt_rsc_1_22_WLAST;
  input [3:0] xt_rsc_1_22_WSTRB;
  input [31:0] xt_rsc_1_22_WDATA;
  output xt_rsc_1_22_AWREADY;
  input xt_rsc_1_22_AWVALID;
  input xt_rsc_1_22_AWUSER;
  input [3:0] xt_rsc_1_22_AWREGION;
  input [3:0] xt_rsc_1_22_AWQOS;
  input [2:0] xt_rsc_1_22_AWPROT;
  input [3:0] xt_rsc_1_22_AWCACHE;
  input xt_rsc_1_22_AWLOCK;
  input [1:0] xt_rsc_1_22_AWBURST;
  input [2:0] xt_rsc_1_22_AWSIZE;
  input [7:0] xt_rsc_1_22_AWLEN;
  input [11:0] xt_rsc_1_22_AWADDR;
  input xt_rsc_1_22_AWID;
  output xt_rsc_triosy_1_22_lz;
  input xt_rsc_1_23_s_tdone;
  input xt_rsc_1_23_tr_write_done;
  input xt_rsc_1_23_RREADY;
  output xt_rsc_1_23_RVALID;
  output xt_rsc_1_23_RUSER;
  output xt_rsc_1_23_RLAST;
  output [1:0] xt_rsc_1_23_RRESP;
  output [31:0] xt_rsc_1_23_RDATA;
  output xt_rsc_1_23_RID;
  output xt_rsc_1_23_ARREADY;
  input xt_rsc_1_23_ARVALID;
  input xt_rsc_1_23_ARUSER;
  input [3:0] xt_rsc_1_23_ARREGION;
  input [3:0] xt_rsc_1_23_ARQOS;
  input [2:0] xt_rsc_1_23_ARPROT;
  input [3:0] xt_rsc_1_23_ARCACHE;
  input xt_rsc_1_23_ARLOCK;
  input [1:0] xt_rsc_1_23_ARBURST;
  input [2:0] xt_rsc_1_23_ARSIZE;
  input [7:0] xt_rsc_1_23_ARLEN;
  input [11:0] xt_rsc_1_23_ARADDR;
  input xt_rsc_1_23_ARID;
  input xt_rsc_1_23_BREADY;
  output xt_rsc_1_23_BVALID;
  output xt_rsc_1_23_BUSER;
  output [1:0] xt_rsc_1_23_BRESP;
  output xt_rsc_1_23_BID;
  output xt_rsc_1_23_WREADY;
  input xt_rsc_1_23_WVALID;
  input xt_rsc_1_23_WUSER;
  input xt_rsc_1_23_WLAST;
  input [3:0] xt_rsc_1_23_WSTRB;
  input [31:0] xt_rsc_1_23_WDATA;
  output xt_rsc_1_23_AWREADY;
  input xt_rsc_1_23_AWVALID;
  input xt_rsc_1_23_AWUSER;
  input [3:0] xt_rsc_1_23_AWREGION;
  input [3:0] xt_rsc_1_23_AWQOS;
  input [2:0] xt_rsc_1_23_AWPROT;
  input [3:0] xt_rsc_1_23_AWCACHE;
  input xt_rsc_1_23_AWLOCK;
  input [1:0] xt_rsc_1_23_AWBURST;
  input [2:0] xt_rsc_1_23_AWSIZE;
  input [7:0] xt_rsc_1_23_AWLEN;
  input [11:0] xt_rsc_1_23_AWADDR;
  input xt_rsc_1_23_AWID;
  output xt_rsc_triosy_1_23_lz;
  input xt_rsc_1_24_s_tdone;
  input xt_rsc_1_24_tr_write_done;
  input xt_rsc_1_24_RREADY;
  output xt_rsc_1_24_RVALID;
  output xt_rsc_1_24_RUSER;
  output xt_rsc_1_24_RLAST;
  output [1:0] xt_rsc_1_24_RRESP;
  output [31:0] xt_rsc_1_24_RDATA;
  output xt_rsc_1_24_RID;
  output xt_rsc_1_24_ARREADY;
  input xt_rsc_1_24_ARVALID;
  input xt_rsc_1_24_ARUSER;
  input [3:0] xt_rsc_1_24_ARREGION;
  input [3:0] xt_rsc_1_24_ARQOS;
  input [2:0] xt_rsc_1_24_ARPROT;
  input [3:0] xt_rsc_1_24_ARCACHE;
  input xt_rsc_1_24_ARLOCK;
  input [1:0] xt_rsc_1_24_ARBURST;
  input [2:0] xt_rsc_1_24_ARSIZE;
  input [7:0] xt_rsc_1_24_ARLEN;
  input [11:0] xt_rsc_1_24_ARADDR;
  input xt_rsc_1_24_ARID;
  input xt_rsc_1_24_BREADY;
  output xt_rsc_1_24_BVALID;
  output xt_rsc_1_24_BUSER;
  output [1:0] xt_rsc_1_24_BRESP;
  output xt_rsc_1_24_BID;
  output xt_rsc_1_24_WREADY;
  input xt_rsc_1_24_WVALID;
  input xt_rsc_1_24_WUSER;
  input xt_rsc_1_24_WLAST;
  input [3:0] xt_rsc_1_24_WSTRB;
  input [31:0] xt_rsc_1_24_WDATA;
  output xt_rsc_1_24_AWREADY;
  input xt_rsc_1_24_AWVALID;
  input xt_rsc_1_24_AWUSER;
  input [3:0] xt_rsc_1_24_AWREGION;
  input [3:0] xt_rsc_1_24_AWQOS;
  input [2:0] xt_rsc_1_24_AWPROT;
  input [3:0] xt_rsc_1_24_AWCACHE;
  input xt_rsc_1_24_AWLOCK;
  input [1:0] xt_rsc_1_24_AWBURST;
  input [2:0] xt_rsc_1_24_AWSIZE;
  input [7:0] xt_rsc_1_24_AWLEN;
  input [11:0] xt_rsc_1_24_AWADDR;
  input xt_rsc_1_24_AWID;
  output xt_rsc_triosy_1_24_lz;
  input xt_rsc_1_25_s_tdone;
  input xt_rsc_1_25_tr_write_done;
  input xt_rsc_1_25_RREADY;
  output xt_rsc_1_25_RVALID;
  output xt_rsc_1_25_RUSER;
  output xt_rsc_1_25_RLAST;
  output [1:0] xt_rsc_1_25_RRESP;
  output [31:0] xt_rsc_1_25_RDATA;
  output xt_rsc_1_25_RID;
  output xt_rsc_1_25_ARREADY;
  input xt_rsc_1_25_ARVALID;
  input xt_rsc_1_25_ARUSER;
  input [3:0] xt_rsc_1_25_ARREGION;
  input [3:0] xt_rsc_1_25_ARQOS;
  input [2:0] xt_rsc_1_25_ARPROT;
  input [3:0] xt_rsc_1_25_ARCACHE;
  input xt_rsc_1_25_ARLOCK;
  input [1:0] xt_rsc_1_25_ARBURST;
  input [2:0] xt_rsc_1_25_ARSIZE;
  input [7:0] xt_rsc_1_25_ARLEN;
  input [11:0] xt_rsc_1_25_ARADDR;
  input xt_rsc_1_25_ARID;
  input xt_rsc_1_25_BREADY;
  output xt_rsc_1_25_BVALID;
  output xt_rsc_1_25_BUSER;
  output [1:0] xt_rsc_1_25_BRESP;
  output xt_rsc_1_25_BID;
  output xt_rsc_1_25_WREADY;
  input xt_rsc_1_25_WVALID;
  input xt_rsc_1_25_WUSER;
  input xt_rsc_1_25_WLAST;
  input [3:0] xt_rsc_1_25_WSTRB;
  input [31:0] xt_rsc_1_25_WDATA;
  output xt_rsc_1_25_AWREADY;
  input xt_rsc_1_25_AWVALID;
  input xt_rsc_1_25_AWUSER;
  input [3:0] xt_rsc_1_25_AWREGION;
  input [3:0] xt_rsc_1_25_AWQOS;
  input [2:0] xt_rsc_1_25_AWPROT;
  input [3:0] xt_rsc_1_25_AWCACHE;
  input xt_rsc_1_25_AWLOCK;
  input [1:0] xt_rsc_1_25_AWBURST;
  input [2:0] xt_rsc_1_25_AWSIZE;
  input [7:0] xt_rsc_1_25_AWLEN;
  input [11:0] xt_rsc_1_25_AWADDR;
  input xt_rsc_1_25_AWID;
  output xt_rsc_triosy_1_25_lz;
  input xt_rsc_1_26_s_tdone;
  input xt_rsc_1_26_tr_write_done;
  input xt_rsc_1_26_RREADY;
  output xt_rsc_1_26_RVALID;
  output xt_rsc_1_26_RUSER;
  output xt_rsc_1_26_RLAST;
  output [1:0] xt_rsc_1_26_RRESP;
  output [31:0] xt_rsc_1_26_RDATA;
  output xt_rsc_1_26_RID;
  output xt_rsc_1_26_ARREADY;
  input xt_rsc_1_26_ARVALID;
  input xt_rsc_1_26_ARUSER;
  input [3:0] xt_rsc_1_26_ARREGION;
  input [3:0] xt_rsc_1_26_ARQOS;
  input [2:0] xt_rsc_1_26_ARPROT;
  input [3:0] xt_rsc_1_26_ARCACHE;
  input xt_rsc_1_26_ARLOCK;
  input [1:0] xt_rsc_1_26_ARBURST;
  input [2:0] xt_rsc_1_26_ARSIZE;
  input [7:0] xt_rsc_1_26_ARLEN;
  input [11:0] xt_rsc_1_26_ARADDR;
  input xt_rsc_1_26_ARID;
  input xt_rsc_1_26_BREADY;
  output xt_rsc_1_26_BVALID;
  output xt_rsc_1_26_BUSER;
  output [1:0] xt_rsc_1_26_BRESP;
  output xt_rsc_1_26_BID;
  output xt_rsc_1_26_WREADY;
  input xt_rsc_1_26_WVALID;
  input xt_rsc_1_26_WUSER;
  input xt_rsc_1_26_WLAST;
  input [3:0] xt_rsc_1_26_WSTRB;
  input [31:0] xt_rsc_1_26_WDATA;
  output xt_rsc_1_26_AWREADY;
  input xt_rsc_1_26_AWVALID;
  input xt_rsc_1_26_AWUSER;
  input [3:0] xt_rsc_1_26_AWREGION;
  input [3:0] xt_rsc_1_26_AWQOS;
  input [2:0] xt_rsc_1_26_AWPROT;
  input [3:0] xt_rsc_1_26_AWCACHE;
  input xt_rsc_1_26_AWLOCK;
  input [1:0] xt_rsc_1_26_AWBURST;
  input [2:0] xt_rsc_1_26_AWSIZE;
  input [7:0] xt_rsc_1_26_AWLEN;
  input [11:0] xt_rsc_1_26_AWADDR;
  input xt_rsc_1_26_AWID;
  output xt_rsc_triosy_1_26_lz;
  input xt_rsc_1_27_s_tdone;
  input xt_rsc_1_27_tr_write_done;
  input xt_rsc_1_27_RREADY;
  output xt_rsc_1_27_RVALID;
  output xt_rsc_1_27_RUSER;
  output xt_rsc_1_27_RLAST;
  output [1:0] xt_rsc_1_27_RRESP;
  output [31:0] xt_rsc_1_27_RDATA;
  output xt_rsc_1_27_RID;
  output xt_rsc_1_27_ARREADY;
  input xt_rsc_1_27_ARVALID;
  input xt_rsc_1_27_ARUSER;
  input [3:0] xt_rsc_1_27_ARREGION;
  input [3:0] xt_rsc_1_27_ARQOS;
  input [2:0] xt_rsc_1_27_ARPROT;
  input [3:0] xt_rsc_1_27_ARCACHE;
  input xt_rsc_1_27_ARLOCK;
  input [1:0] xt_rsc_1_27_ARBURST;
  input [2:0] xt_rsc_1_27_ARSIZE;
  input [7:0] xt_rsc_1_27_ARLEN;
  input [11:0] xt_rsc_1_27_ARADDR;
  input xt_rsc_1_27_ARID;
  input xt_rsc_1_27_BREADY;
  output xt_rsc_1_27_BVALID;
  output xt_rsc_1_27_BUSER;
  output [1:0] xt_rsc_1_27_BRESP;
  output xt_rsc_1_27_BID;
  output xt_rsc_1_27_WREADY;
  input xt_rsc_1_27_WVALID;
  input xt_rsc_1_27_WUSER;
  input xt_rsc_1_27_WLAST;
  input [3:0] xt_rsc_1_27_WSTRB;
  input [31:0] xt_rsc_1_27_WDATA;
  output xt_rsc_1_27_AWREADY;
  input xt_rsc_1_27_AWVALID;
  input xt_rsc_1_27_AWUSER;
  input [3:0] xt_rsc_1_27_AWREGION;
  input [3:0] xt_rsc_1_27_AWQOS;
  input [2:0] xt_rsc_1_27_AWPROT;
  input [3:0] xt_rsc_1_27_AWCACHE;
  input xt_rsc_1_27_AWLOCK;
  input [1:0] xt_rsc_1_27_AWBURST;
  input [2:0] xt_rsc_1_27_AWSIZE;
  input [7:0] xt_rsc_1_27_AWLEN;
  input [11:0] xt_rsc_1_27_AWADDR;
  input xt_rsc_1_27_AWID;
  output xt_rsc_triosy_1_27_lz;
  input xt_rsc_1_28_s_tdone;
  input xt_rsc_1_28_tr_write_done;
  input xt_rsc_1_28_RREADY;
  output xt_rsc_1_28_RVALID;
  output xt_rsc_1_28_RUSER;
  output xt_rsc_1_28_RLAST;
  output [1:0] xt_rsc_1_28_RRESP;
  output [31:0] xt_rsc_1_28_RDATA;
  output xt_rsc_1_28_RID;
  output xt_rsc_1_28_ARREADY;
  input xt_rsc_1_28_ARVALID;
  input xt_rsc_1_28_ARUSER;
  input [3:0] xt_rsc_1_28_ARREGION;
  input [3:0] xt_rsc_1_28_ARQOS;
  input [2:0] xt_rsc_1_28_ARPROT;
  input [3:0] xt_rsc_1_28_ARCACHE;
  input xt_rsc_1_28_ARLOCK;
  input [1:0] xt_rsc_1_28_ARBURST;
  input [2:0] xt_rsc_1_28_ARSIZE;
  input [7:0] xt_rsc_1_28_ARLEN;
  input [11:0] xt_rsc_1_28_ARADDR;
  input xt_rsc_1_28_ARID;
  input xt_rsc_1_28_BREADY;
  output xt_rsc_1_28_BVALID;
  output xt_rsc_1_28_BUSER;
  output [1:0] xt_rsc_1_28_BRESP;
  output xt_rsc_1_28_BID;
  output xt_rsc_1_28_WREADY;
  input xt_rsc_1_28_WVALID;
  input xt_rsc_1_28_WUSER;
  input xt_rsc_1_28_WLAST;
  input [3:0] xt_rsc_1_28_WSTRB;
  input [31:0] xt_rsc_1_28_WDATA;
  output xt_rsc_1_28_AWREADY;
  input xt_rsc_1_28_AWVALID;
  input xt_rsc_1_28_AWUSER;
  input [3:0] xt_rsc_1_28_AWREGION;
  input [3:0] xt_rsc_1_28_AWQOS;
  input [2:0] xt_rsc_1_28_AWPROT;
  input [3:0] xt_rsc_1_28_AWCACHE;
  input xt_rsc_1_28_AWLOCK;
  input [1:0] xt_rsc_1_28_AWBURST;
  input [2:0] xt_rsc_1_28_AWSIZE;
  input [7:0] xt_rsc_1_28_AWLEN;
  input [11:0] xt_rsc_1_28_AWADDR;
  input xt_rsc_1_28_AWID;
  output xt_rsc_triosy_1_28_lz;
  input xt_rsc_1_29_s_tdone;
  input xt_rsc_1_29_tr_write_done;
  input xt_rsc_1_29_RREADY;
  output xt_rsc_1_29_RVALID;
  output xt_rsc_1_29_RUSER;
  output xt_rsc_1_29_RLAST;
  output [1:0] xt_rsc_1_29_RRESP;
  output [31:0] xt_rsc_1_29_RDATA;
  output xt_rsc_1_29_RID;
  output xt_rsc_1_29_ARREADY;
  input xt_rsc_1_29_ARVALID;
  input xt_rsc_1_29_ARUSER;
  input [3:0] xt_rsc_1_29_ARREGION;
  input [3:0] xt_rsc_1_29_ARQOS;
  input [2:0] xt_rsc_1_29_ARPROT;
  input [3:0] xt_rsc_1_29_ARCACHE;
  input xt_rsc_1_29_ARLOCK;
  input [1:0] xt_rsc_1_29_ARBURST;
  input [2:0] xt_rsc_1_29_ARSIZE;
  input [7:0] xt_rsc_1_29_ARLEN;
  input [11:0] xt_rsc_1_29_ARADDR;
  input xt_rsc_1_29_ARID;
  input xt_rsc_1_29_BREADY;
  output xt_rsc_1_29_BVALID;
  output xt_rsc_1_29_BUSER;
  output [1:0] xt_rsc_1_29_BRESP;
  output xt_rsc_1_29_BID;
  output xt_rsc_1_29_WREADY;
  input xt_rsc_1_29_WVALID;
  input xt_rsc_1_29_WUSER;
  input xt_rsc_1_29_WLAST;
  input [3:0] xt_rsc_1_29_WSTRB;
  input [31:0] xt_rsc_1_29_WDATA;
  output xt_rsc_1_29_AWREADY;
  input xt_rsc_1_29_AWVALID;
  input xt_rsc_1_29_AWUSER;
  input [3:0] xt_rsc_1_29_AWREGION;
  input [3:0] xt_rsc_1_29_AWQOS;
  input [2:0] xt_rsc_1_29_AWPROT;
  input [3:0] xt_rsc_1_29_AWCACHE;
  input xt_rsc_1_29_AWLOCK;
  input [1:0] xt_rsc_1_29_AWBURST;
  input [2:0] xt_rsc_1_29_AWSIZE;
  input [7:0] xt_rsc_1_29_AWLEN;
  input [11:0] xt_rsc_1_29_AWADDR;
  input xt_rsc_1_29_AWID;
  output xt_rsc_triosy_1_29_lz;
  input xt_rsc_1_30_s_tdone;
  input xt_rsc_1_30_tr_write_done;
  input xt_rsc_1_30_RREADY;
  output xt_rsc_1_30_RVALID;
  output xt_rsc_1_30_RUSER;
  output xt_rsc_1_30_RLAST;
  output [1:0] xt_rsc_1_30_RRESP;
  output [31:0] xt_rsc_1_30_RDATA;
  output xt_rsc_1_30_RID;
  output xt_rsc_1_30_ARREADY;
  input xt_rsc_1_30_ARVALID;
  input xt_rsc_1_30_ARUSER;
  input [3:0] xt_rsc_1_30_ARREGION;
  input [3:0] xt_rsc_1_30_ARQOS;
  input [2:0] xt_rsc_1_30_ARPROT;
  input [3:0] xt_rsc_1_30_ARCACHE;
  input xt_rsc_1_30_ARLOCK;
  input [1:0] xt_rsc_1_30_ARBURST;
  input [2:0] xt_rsc_1_30_ARSIZE;
  input [7:0] xt_rsc_1_30_ARLEN;
  input [11:0] xt_rsc_1_30_ARADDR;
  input xt_rsc_1_30_ARID;
  input xt_rsc_1_30_BREADY;
  output xt_rsc_1_30_BVALID;
  output xt_rsc_1_30_BUSER;
  output [1:0] xt_rsc_1_30_BRESP;
  output xt_rsc_1_30_BID;
  output xt_rsc_1_30_WREADY;
  input xt_rsc_1_30_WVALID;
  input xt_rsc_1_30_WUSER;
  input xt_rsc_1_30_WLAST;
  input [3:0] xt_rsc_1_30_WSTRB;
  input [31:0] xt_rsc_1_30_WDATA;
  output xt_rsc_1_30_AWREADY;
  input xt_rsc_1_30_AWVALID;
  input xt_rsc_1_30_AWUSER;
  input [3:0] xt_rsc_1_30_AWREGION;
  input [3:0] xt_rsc_1_30_AWQOS;
  input [2:0] xt_rsc_1_30_AWPROT;
  input [3:0] xt_rsc_1_30_AWCACHE;
  input xt_rsc_1_30_AWLOCK;
  input [1:0] xt_rsc_1_30_AWBURST;
  input [2:0] xt_rsc_1_30_AWSIZE;
  input [7:0] xt_rsc_1_30_AWLEN;
  input [11:0] xt_rsc_1_30_AWADDR;
  input xt_rsc_1_30_AWID;
  output xt_rsc_triosy_1_30_lz;
  input xt_rsc_1_31_s_tdone;
  input xt_rsc_1_31_tr_write_done;
  input xt_rsc_1_31_RREADY;
  output xt_rsc_1_31_RVALID;
  output xt_rsc_1_31_RUSER;
  output xt_rsc_1_31_RLAST;
  output [1:0] xt_rsc_1_31_RRESP;
  output [31:0] xt_rsc_1_31_RDATA;
  output xt_rsc_1_31_RID;
  output xt_rsc_1_31_ARREADY;
  input xt_rsc_1_31_ARVALID;
  input xt_rsc_1_31_ARUSER;
  input [3:0] xt_rsc_1_31_ARREGION;
  input [3:0] xt_rsc_1_31_ARQOS;
  input [2:0] xt_rsc_1_31_ARPROT;
  input [3:0] xt_rsc_1_31_ARCACHE;
  input xt_rsc_1_31_ARLOCK;
  input [1:0] xt_rsc_1_31_ARBURST;
  input [2:0] xt_rsc_1_31_ARSIZE;
  input [7:0] xt_rsc_1_31_ARLEN;
  input [11:0] xt_rsc_1_31_ARADDR;
  input xt_rsc_1_31_ARID;
  input xt_rsc_1_31_BREADY;
  output xt_rsc_1_31_BVALID;
  output xt_rsc_1_31_BUSER;
  output [1:0] xt_rsc_1_31_BRESP;
  output xt_rsc_1_31_BID;
  output xt_rsc_1_31_WREADY;
  input xt_rsc_1_31_WVALID;
  input xt_rsc_1_31_WUSER;
  input xt_rsc_1_31_WLAST;
  input [3:0] xt_rsc_1_31_WSTRB;
  input [31:0] xt_rsc_1_31_WDATA;
  output xt_rsc_1_31_AWREADY;
  input xt_rsc_1_31_AWVALID;
  input xt_rsc_1_31_AWUSER;
  input [3:0] xt_rsc_1_31_AWREGION;
  input [3:0] xt_rsc_1_31_AWQOS;
  input [2:0] xt_rsc_1_31_AWPROT;
  input [3:0] xt_rsc_1_31_AWCACHE;
  input xt_rsc_1_31_AWLOCK;
  input [1:0] xt_rsc_1_31_AWBURST;
  input [2:0] xt_rsc_1_31_AWSIZE;
  input [7:0] xt_rsc_1_31_AWLEN;
  input [11:0] xt_rsc_1_31_AWADDR;
  input xt_rsc_1_31_AWID;
  output xt_rsc_triosy_1_31_lz;
  input [31:0] p_rsc_dat;
  output p_rsc_triosy_lz;
  output r_rsc_triosy_lz;
  input twiddle_rsc_0_0_s_tdone;
  input twiddle_rsc_0_0_tr_write_done;
  input twiddle_rsc_0_0_RREADY;
  output twiddle_rsc_0_0_RVALID;
  output twiddle_rsc_0_0_RUSER;
  output twiddle_rsc_0_0_RLAST;
  output [1:0] twiddle_rsc_0_0_RRESP;
  output [31:0] twiddle_rsc_0_0_RDATA;
  output twiddle_rsc_0_0_RID;
  output twiddle_rsc_0_0_ARREADY;
  input twiddle_rsc_0_0_ARVALID;
  input twiddle_rsc_0_0_ARUSER;
  input [3:0] twiddle_rsc_0_0_ARREGION;
  input [3:0] twiddle_rsc_0_0_ARQOS;
  input [2:0] twiddle_rsc_0_0_ARPROT;
  input [3:0] twiddle_rsc_0_0_ARCACHE;
  input twiddle_rsc_0_0_ARLOCK;
  input [1:0] twiddle_rsc_0_0_ARBURST;
  input [2:0] twiddle_rsc_0_0_ARSIZE;
  input [7:0] twiddle_rsc_0_0_ARLEN;
  input [11:0] twiddle_rsc_0_0_ARADDR;
  input twiddle_rsc_0_0_ARID;
  input twiddle_rsc_0_0_BREADY;
  output twiddle_rsc_0_0_BVALID;
  output twiddle_rsc_0_0_BUSER;
  output [1:0] twiddle_rsc_0_0_BRESP;
  output twiddle_rsc_0_0_BID;
  output twiddle_rsc_0_0_WREADY;
  input twiddle_rsc_0_0_WVALID;
  input twiddle_rsc_0_0_WUSER;
  input twiddle_rsc_0_0_WLAST;
  input [3:0] twiddle_rsc_0_0_WSTRB;
  input [31:0] twiddle_rsc_0_0_WDATA;
  output twiddle_rsc_0_0_AWREADY;
  input twiddle_rsc_0_0_AWVALID;
  input twiddle_rsc_0_0_AWUSER;
  input [3:0] twiddle_rsc_0_0_AWREGION;
  input [3:0] twiddle_rsc_0_0_AWQOS;
  input [2:0] twiddle_rsc_0_0_AWPROT;
  input [3:0] twiddle_rsc_0_0_AWCACHE;
  input twiddle_rsc_0_0_AWLOCK;
  input [1:0] twiddle_rsc_0_0_AWBURST;
  input [2:0] twiddle_rsc_0_0_AWSIZE;
  input [7:0] twiddle_rsc_0_0_AWLEN;
  input [11:0] twiddle_rsc_0_0_AWADDR;
  input twiddle_rsc_0_0_AWID;
  output twiddle_rsc_triosy_0_0_lz;
  input twiddle_rsc_0_1_s_tdone;
  input twiddle_rsc_0_1_tr_write_done;
  input twiddle_rsc_0_1_RREADY;
  output twiddle_rsc_0_1_RVALID;
  output twiddle_rsc_0_1_RUSER;
  output twiddle_rsc_0_1_RLAST;
  output [1:0] twiddle_rsc_0_1_RRESP;
  output [31:0] twiddle_rsc_0_1_RDATA;
  output twiddle_rsc_0_1_RID;
  output twiddle_rsc_0_1_ARREADY;
  input twiddle_rsc_0_1_ARVALID;
  input twiddle_rsc_0_1_ARUSER;
  input [3:0] twiddle_rsc_0_1_ARREGION;
  input [3:0] twiddle_rsc_0_1_ARQOS;
  input [2:0] twiddle_rsc_0_1_ARPROT;
  input [3:0] twiddle_rsc_0_1_ARCACHE;
  input twiddle_rsc_0_1_ARLOCK;
  input [1:0] twiddle_rsc_0_1_ARBURST;
  input [2:0] twiddle_rsc_0_1_ARSIZE;
  input [7:0] twiddle_rsc_0_1_ARLEN;
  input [11:0] twiddle_rsc_0_1_ARADDR;
  input twiddle_rsc_0_1_ARID;
  input twiddle_rsc_0_1_BREADY;
  output twiddle_rsc_0_1_BVALID;
  output twiddle_rsc_0_1_BUSER;
  output [1:0] twiddle_rsc_0_1_BRESP;
  output twiddle_rsc_0_1_BID;
  output twiddle_rsc_0_1_WREADY;
  input twiddle_rsc_0_1_WVALID;
  input twiddle_rsc_0_1_WUSER;
  input twiddle_rsc_0_1_WLAST;
  input [3:0] twiddle_rsc_0_1_WSTRB;
  input [31:0] twiddle_rsc_0_1_WDATA;
  output twiddle_rsc_0_1_AWREADY;
  input twiddle_rsc_0_1_AWVALID;
  input twiddle_rsc_0_1_AWUSER;
  input [3:0] twiddle_rsc_0_1_AWREGION;
  input [3:0] twiddle_rsc_0_1_AWQOS;
  input [2:0] twiddle_rsc_0_1_AWPROT;
  input [3:0] twiddle_rsc_0_1_AWCACHE;
  input twiddle_rsc_0_1_AWLOCK;
  input [1:0] twiddle_rsc_0_1_AWBURST;
  input [2:0] twiddle_rsc_0_1_AWSIZE;
  input [7:0] twiddle_rsc_0_1_AWLEN;
  input [11:0] twiddle_rsc_0_1_AWADDR;
  input twiddle_rsc_0_1_AWID;
  output twiddle_rsc_triosy_0_1_lz;
  input twiddle_rsc_0_2_s_tdone;
  input twiddle_rsc_0_2_tr_write_done;
  input twiddle_rsc_0_2_RREADY;
  output twiddle_rsc_0_2_RVALID;
  output twiddle_rsc_0_2_RUSER;
  output twiddle_rsc_0_2_RLAST;
  output [1:0] twiddle_rsc_0_2_RRESP;
  output [31:0] twiddle_rsc_0_2_RDATA;
  output twiddle_rsc_0_2_RID;
  output twiddle_rsc_0_2_ARREADY;
  input twiddle_rsc_0_2_ARVALID;
  input twiddle_rsc_0_2_ARUSER;
  input [3:0] twiddle_rsc_0_2_ARREGION;
  input [3:0] twiddle_rsc_0_2_ARQOS;
  input [2:0] twiddle_rsc_0_2_ARPROT;
  input [3:0] twiddle_rsc_0_2_ARCACHE;
  input twiddle_rsc_0_2_ARLOCK;
  input [1:0] twiddle_rsc_0_2_ARBURST;
  input [2:0] twiddle_rsc_0_2_ARSIZE;
  input [7:0] twiddle_rsc_0_2_ARLEN;
  input [11:0] twiddle_rsc_0_2_ARADDR;
  input twiddle_rsc_0_2_ARID;
  input twiddle_rsc_0_2_BREADY;
  output twiddle_rsc_0_2_BVALID;
  output twiddle_rsc_0_2_BUSER;
  output [1:0] twiddle_rsc_0_2_BRESP;
  output twiddle_rsc_0_2_BID;
  output twiddle_rsc_0_2_WREADY;
  input twiddle_rsc_0_2_WVALID;
  input twiddle_rsc_0_2_WUSER;
  input twiddle_rsc_0_2_WLAST;
  input [3:0] twiddle_rsc_0_2_WSTRB;
  input [31:0] twiddle_rsc_0_2_WDATA;
  output twiddle_rsc_0_2_AWREADY;
  input twiddle_rsc_0_2_AWVALID;
  input twiddle_rsc_0_2_AWUSER;
  input [3:0] twiddle_rsc_0_2_AWREGION;
  input [3:0] twiddle_rsc_0_2_AWQOS;
  input [2:0] twiddle_rsc_0_2_AWPROT;
  input [3:0] twiddle_rsc_0_2_AWCACHE;
  input twiddle_rsc_0_2_AWLOCK;
  input [1:0] twiddle_rsc_0_2_AWBURST;
  input [2:0] twiddle_rsc_0_2_AWSIZE;
  input [7:0] twiddle_rsc_0_2_AWLEN;
  input [11:0] twiddle_rsc_0_2_AWADDR;
  input twiddle_rsc_0_2_AWID;
  output twiddle_rsc_triosy_0_2_lz;
  input twiddle_rsc_0_3_s_tdone;
  input twiddle_rsc_0_3_tr_write_done;
  input twiddle_rsc_0_3_RREADY;
  output twiddle_rsc_0_3_RVALID;
  output twiddle_rsc_0_3_RUSER;
  output twiddle_rsc_0_3_RLAST;
  output [1:0] twiddle_rsc_0_3_RRESP;
  output [31:0] twiddle_rsc_0_3_RDATA;
  output twiddle_rsc_0_3_RID;
  output twiddle_rsc_0_3_ARREADY;
  input twiddle_rsc_0_3_ARVALID;
  input twiddle_rsc_0_3_ARUSER;
  input [3:0] twiddle_rsc_0_3_ARREGION;
  input [3:0] twiddle_rsc_0_3_ARQOS;
  input [2:0] twiddle_rsc_0_3_ARPROT;
  input [3:0] twiddle_rsc_0_3_ARCACHE;
  input twiddle_rsc_0_3_ARLOCK;
  input [1:0] twiddle_rsc_0_3_ARBURST;
  input [2:0] twiddle_rsc_0_3_ARSIZE;
  input [7:0] twiddle_rsc_0_3_ARLEN;
  input [11:0] twiddle_rsc_0_3_ARADDR;
  input twiddle_rsc_0_3_ARID;
  input twiddle_rsc_0_3_BREADY;
  output twiddle_rsc_0_3_BVALID;
  output twiddle_rsc_0_3_BUSER;
  output [1:0] twiddle_rsc_0_3_BRESP;
  output twiddle_rsc_0_3_BID;
  output twiddle_rsc_0_3_WREADY;
  input twiddle_rsc_0_3_WVALID;
  input twiddle_rsc_0_3_WUSER;
  input twiddle_rsc_0_3_WLAST;
  input [3:0] twiddle_rsc_0_3_WSTRB;
  input [31:0] twiddle_rsc_0_3_WDATA;
  output twiddle_rsc_0_3_AWREADY;
  input twiddle_rsc_0_3_AWVALID;
  input twiddle_rsc_0_3_AWUSER;
  input [3:0] twiddle_rsc_0_3_AWREGION;
  input [3:0] twiddle_rsc_0_3_AWQOS;
  input [2:0] twiddle_rsc_0_3_AWPROT;
  input [3:0] twiddle_rsc_0_3_AWCACHE;
  input twiddle_rsc_0_3_AWLOCK;
  input [1:0] twiddle_rsc_0_3_AWBURST;
  input [2:0] twiddle_rsc_0_3_AWSIZE;
  input [7:0] twiddle_rsc_0_3_AWLEN;
  input [11:0] twiddle_rsc_0_3_AWADDR;
  input twiddle_rsc_0_3_AWID;
  output twiddle_rsc_triosy_0_3_lz;
  input twiddle_rsc_0_4_s_tdone;
  input twiddle_rsc_0_4_tr_write_done;
  input twiddle_rsc_0_4_RREADY;
  output twiddle_rsc_0_4_RVALID;
  output twiddle_rsc_0_4_RUSER;
  output twiddle_rsc_0_4_RLAST;
  output [1:0] twiddle_rsc_0_4_RRESP;
  output [31:0] twiddle_rsc_0_4_RDATA;
  output twiddle_rsc_0_4_RID;
  output twiddle_rsc_0_4_ARREADY;
  input twiddle_rsc_0_4_ARVALID;
  input twiddle_rsc_0_4_ARUSER;
  input [3:0] twiddle_rsc_0_4_ARREGION;
  input [3:0] twiddle_rsc_0_4_ARQOS;
  input [2:0] twiddle_rsc_0_4_ARPROT;
  input [3:0] twiddle_rsc_0_4_ARCACHE;
  input twiddle_rsc_0_4_ARLOCK;
  input [1:0] twiddle_rsc_0_4_ARBURST;
  input [2:0] twiddle_rsc_0_4_ARSIZE;
  input [7:0] twiddle_rsc_0_4_ARLEN;
  input [11:0] twiddle_rsc_0_4_ARADDR;
  input twiddle_rsc_0_4_ARID;
  input twiddle_rsc_0_4_BREADY;
  output twiddle_rsc_0_4_BVALID;
  output twiddle_rsc_0_4_BUSER;
  output [1:0] twiddle_rsc_0_4_BRESP;
  output twiddle_rsc_0_4_BID;
  output twiddle_rsc_0_4_WREADY;
  input twiddle_rsc_0_4_WVALID;
  input twiddle_rsc_0_4_WUSER;
  input twiddle_rsc_0_4_WLAST;
  input [3:0] twiddle_rsc_0_4_WSTRB;
  input [31:0] twiddle_rsc_0_4_WDATA;
  output twiddle_rsc_0_4_AWREADY;
  input twiddle_rsc_0_4_AWVALID;
  input twiddle_rsc_0_4_AWUSER;
  input [3:0] twiddle_rsc_0_4_AWREGION;
  input [3:0] twiddle_rsc_0_4_AWQOS;
  input [2:0] twiddle_rsc_0_4_AWPROT;
  input [3:0] twiddle_rsc_0_4_AWCACHE;
  input twiddle_rsc_0_4_AWLOCK;
  input [1:0] twiddle_rsc_0_4_AWBURST;
  input [2:0] twiddle_rsc_0_4_AWSIZE;
  input [7:0] twiddle_rsc_0_4_AWLEN;
  input [11:0] twiddle_rsc_0_4_AWADDR;
  input twiddle_rsc_0_4_AWID;
  output twiddle_rsc_triosy_0_4_lz;
  input twiddle_rsc_0_5_s_tdone;
  input twiddle_rsc_0_5_tr_write_done;
  input twiddle_rsc_0_5_RREADY;
  output twiddle_rsc_0_5_RVALID;
  output twiddle_rsc_0_5_RUSER;
  output twiddle_rsc_0_5_RLAST;
  output [1:0] twiddle_rsc_0_5_RRESP;
  output [31:0] twiddle_rsc_0_5_RDATA;
  output twiddle_rsc_0_5_RID;
  output twiddle_rsc_0_5_ARREADY;
  input twiddle_rsc_0_5_ARVALID;
  input twiddle_rsc_0_5_ARUSER;
  input [3:0] twiddle_rsc_0_5_ARREGION;
  input [3:0] twiddle_rsc_0_5_ARQOS;
  input [2:0] twiddle_rsc_0_5_ARPROT;
  input [3:0] twiddle_rsc_0_5_ARCACHE;
  input twiddle_rsc_0_5_ARLOCK;
  input [1:0] twiddle_rsc_0_5_ARBURST;
  input [2:0] twiddle_rsc_0_5_ARSIZE;
  input [7:0] twiddle_rsc_0_5_ARLEN;
  input [11:0] twiddle_rsc_0_5_ARADDR;
  input twiddle_rsc_0_5_ARID;
  input twiddle_rsc_0_5_BREADY;
  output twiddle_rsc_0_5_BVALID;
  output twiddle_rsc_0_5_BUSER;
  output [1:0] twiddle_rsc_0_5_BRESP;
  output twiddle_rsc_0_5_BID;
  output twiddle_rsc_0_5_WREADY;
  input twiddle_rsc_0_5_WVALID;
  input twiddle_rsc_0_5_WUSER;
  input twiddle_rsc_0_5_WLAST;
  input [3:0] twiddle_rsc_0_5_WSTRB;
  input [31:0] twiddle_rsc_0_5_WDATA;
  output twiddle_rsc_0_5_AWREADY;
  input twiddle_rsc_0_5_AWVALID;
  input twiddle_rsc_0_5_AWUSER;
  input [3:0] twiddle_rsc_0_5_AWREGION;
  input [3:0] twiddle_rsc_0_5_AWQOS;
  input [2:0] twiddle_rsc_0_5_AWPROT;
  input [3:0] twiddle_rsc_0_5_AWCACHE;
  input twiddle_rsc_0_5_AWLOCK;
  input [1:0] twiddle_rsc_0_5_AWBURST;
  input [2:0] twiddle_rsc_0_5_AWSIZE;
  input [7:0] twiddle_rsc_0_5_AWLEN;
  input [11:0] twiddle_rsc_0_5_AWADDR;
  input twiddle_rsc_0_5_AWID;
  output twiddle_rsc_triosy_0_5_lz;
  input twiddle_rsc_0_6_s_tdone;
  input twiddle_rsc_0_6_tr_write_done;
  input twiddle_rsc_0_6_RREADY;
  output twiddle_rsc_0_6_RVALID;
  output twiddle_rsc_0_6_RUSER;
  output twiddle_rsc_0_6_RLAST;
  output [1:0] twiddle_rsc_0_6_RRESP;
  output [31:0] twiddle_rsc_0_6_RDATA;
  output twiddle_rsc_0_6_RID;
  output twiddle_rsc_0_6_ARREADY;
  input twiddle_rsc_0_6_ARVALID;
  input twiddle_rsc_0_6_ARUSER;
  input [3:0] twiddle_rsc_0_6_ARREGION;
  input [3:0] twiddle_rsc_0_6_ARQOS;
  input [2:0] twiddle_rsc_0_6_ARPROT;
  input [3:0] twiddle_rsc_0_6_ARCACHE;
  input twiddle_rsc_0_6_ARLOCK;
  input [1:0] twiddle_rsc_0_6_ARBURST;
  input [2:0] twiddle_rsc_0_6_ARSIZE;
  input [7:0] twiddle_rsc_0_6_ARLEN;
  input [11:0] twiddle_rsc_0_6_ARADDR;
  input twiddle_rsc_0_6_ARID;
  input twiddle_rsc_0_6_BREADY;
  output twiddle_rsc_0_6_BVALID;
  output twiddle_rsc_0_6_BUSER;
  output [1:0] twiddle_rsc_0_6_BRESP;
  output twiddle_rsc_0_6_BID;
  output twiddle_rsc_0_6_WREADY;
  input twiddle_rsc_0_6_WVALID;
  input twiddle_rsc_0_6_WUSER;
  input twiddle_rsc_0_6_WLAST;
  input [3:0] twiddle_rsc_0_6_WSTRB;
  input [31:0] twiddle_rsc_0_6_WDATA;
  output twiddle_rsc_0_6_AWREADY;
  input twiddle_rsc_0_6_AWVALID;
  input twiddle_rsc_0_6_AWUSER;
  input [3:0] twiddle_rsc_0_6_AWREGION;
  input [3:0] twiddle_rsc_0_6_AWQOS;
  input [2:0] twiddle_rsc_0_6_AWPROT;
  input [3:0] twiddle_rsc_0_6_AWCACHE;
  input twiddle_rsc_0_6_AWLOCK;
  input [1:0] twiddle_rsc_0_6_AWBURST;
  input [2:0] twiddle_rsc_0_6_AWSIZE;
  input [7:0] twiddle_rsc_0_6_AWLEN;
  input [11:0] twiddle_rsc_0_6_AWADDR;
  input twiddle_rsc_0_6_AWID;
  output twiddle_rsc_triosy_0_6_lz;
  input twiddle_rsc_0_7_s_tdone;
  input twiddle_rsc_0_7_tr_write_done;
  input twiddle_rsc_0_7_RREADY;
  output twiddle_rsc_0_7_RVALID;
  output twiddle_rsc_0_7_RUSER;
  output twiddle_rsc_0_7_RLAST;
  output [1:0] twiddle_rsc_0_7_RRESP;
  output [31:0] twiddle_rsc_0_7_RDATA;
  output twiddle_rsc_0_7_RID;
  output twiddle_rsc_0_7_ARREADY;
  input twiddle_rsc_0_7_ARVALID;
  input twiddle_rsc_0_7_ARUSER;
  input [3:0] twiddle_rsc_0_7_ARREGION;
  input [3:0] twiddle_rsc_0_7_ARQOS;
  input [2:0] twiddle_rsc_0_7_ARPROT;
  input [3:0] twiddle_rsc_0_7_ARCACHE;
  input twiddle_rsc_0_7_ARLOCK;
  input [1:0] twiddle_rsc_0_7_ARBURST;
  input [2:0] twiddle_rsc_0_7_ARSIZE;
  input [7:0] twiddle_rsc_0_7_ARLEN;
  input [11:0] twiddle_rsc_0_7_ARADDR;
  input twiddle_rsc_0_7_ARID;
  input twiddle_rsc_0_7_BREADY;
  output twiddle_rsc_0_7_BVALID;
  output twiddle_rsc_0_7_BUSER;
  output [1:0] twiddle_rsc_0_7_BRESP;
  output twiddle_rsc_0_7_BID;
  output twiddle_rsc_0_7_WREADY;
  input twiddle_rsc_0_7_WVALID;
  input twiddle_rsc_0_7_WUSER;
  input twiddle_rsc_0_7_WLAST;
  input [3:0] twiddle_rsc_0_7_WSTRB;
  input [31:0] twiddle_rsc_0_7_WDATA;
  output twiddle_rsc_0_7_AWREADY;
  input twiddle_rsc_0_7_AWVALID;
  input twiddle_rsc_0_7_AWUSER;
  input [3:0] twiddle_rsc_0_7_AWREGION;
  input [3:0] twiddle_rsc_0_7_AWQOS;
  input [2:0] twiddle_rsc_0_7_AWPROT;
  input [3:0] twiddle_rsc_0_7_AWCACHE;
  input twiddle_rsc_0_7_AWLOCK;
  input [1:0] twiddle_rsc_0_7_AWBURST;
  input [2:0] twiddle_rsc_0_7_AWSIZE;
  input [7:0] twiddle_rsc_0_7_AWLEN;
  input [11:0] twiddle_rsc_0_7_AWADDR;
  input twiddle_rsc_0_7_AWID;
  output twiddle_rsc_triosy_0_7_lz;
  input twiddle_rsc_0_8_s_tdone;
  input twiddle_rsc_0_8_tr_write_done;
  input twiddle_rsc_0_8_RREADY;
  output twiddle_rsc_0_8_RVALID;
  output twiddle_rsc_0_8_RUSER;
  output twiddle_rsc_0_8_RLAST;
  output [1:0] twiddle_rsc_0_8_RRESP;
  output [31:0] twiddle_rsc_0_8_RDATA;
  output twiddle_rsc_0_8_RID;
  output twiddle_rsc_0_8_ARREADY;
  input twiddle_rsc_0_8_ARVALID;
  input twiddle_rsc_0_8_ARUSER;
  input [3:0] twiddle_rsc_0_8_ARREGION;
  input [3:0] twiddle_rsc_0_8_ARQOS;
  input [2:0] twiddle_rsc_0_8_ARPROT;
  input [3:0] twiddle_rsc_0_8_ARCACHE;
  input twiddle_rsc_0_8_ARLOCK;
  input [1:0] twiddle_rsc_0_8_ARBURST;
  input [2:0] twiddle_rsc_0_8_ARSIZE;
  input [7:0] twiddle_rsc_0_8_ARLEN;
  input [11:0] twiddle_rsc_0_8_ARADDR;
  input twiddle_rsc_0_8_ARID;
  input twiddle_rsc_0_8_BREADY;
  output twiddle_rsc_0_8_BVALID;
  output twiddle_rsc_0_8_BUSER;
  output [1:0] twiddle_rsc_0_8_BRESP;
  output twiddle_rsc_0_8_BID;
  output twiddle_rsc_0_8_WREADY;
  input twiddle_rsc_0_8_WVALID;
  input twiddle_rsc_0_8_WUSER;
  input twiddle_rsc_0_8_WLAST;
  input [3:0] twiddle_rsc_0_8_WSTRB;
  input [31:0] twiddle_rsc_0_8_WDATA;
  output twiddle_rsc_0_8_AWREADY;
  input twiddle_rsc_0_8_AWVALID;
  input twiddle_rsc_0_8_AWUSER;
  input [3:0] twiddle_rsc_0_8_AWREGION;
  input [3:0] twiddle_rsc_0_8_AWQOS;
  input [2:0] twiddle_rsc_0_8_AWPROT;
  input [3:0] twiddle_rsc_0_8_AWCACHE;
  input twiddle_rsc_0_8_AWLOCK;
  input [1:0] twiddle_rsc_0_8_AWBURST;
  input [2:0] twiddle_rsc_0_8_AWSIZE;
  input [7:0] twiddle_rsc_0_8_AWLEN;
  input [11:0] twiddle_rsc_0_8_AWADDR;
  input twiddle_rsc_0_8_AWID;
  output twiddle_rsc_triosy_0_8_lz;
  input twiddle_rsc_0_9_s_tdone;
  input twiddle_rsc_0_9_tr_write_done;
  input twiddle_rsc_0_9_RREADY;
  output twiddle_rsc_0_9_RVALID;
  output twiddle_rsc_0_9_RUSER;
  output twiddle_rsc_0_9_RLAST;
  output [1:0] twiddle_rsc_0_9_RRESP;
  output [31:0] twiddle_rsc_0_9_RDATA;
  output twiddle_rsc_0_9_RID;
  output twiddle_rsc_0_9_ARREADY;
  input twiddle_rsc_0_9_ARVALID;
  input twiddle_rsc_0_9_ARUSER;
  input [3:0] twiddle_rsc_0_9_ARREGION;
  input [3:0] twiddle_rsc_0_9_ARQOS;
  input [2:0] twiddle_rsc_0_9_ARPROT;
  input [3:0] twiddle_rsc_0_9_ARCACHE;
  input twiddle_rsc_0_9_ARLOCK;
  input [1:0] twiddle_rsc_0_9_ARBURST;
  input [2:0] twiddle_rsc_0_9_ARSIZE;
  input [7:0] twiddle_rsc_0_9_ARLEN;
  input [11:0] twiddle_rsc_0_9_ARADDR;
  input twiddle_rsc_0_9_ARID;
  input twiddle_rsc_0_9_BREADY;
  output twiddle_rsc_0_9_BVALID;
  output twiddle_rsc_0_9_BUSER;
  output [1:0] twiddle_rsc_0_9_BRESP;
  output twiddle_rsc_0_9_BID;
  output twiddle_rsc_0_9_WREADY;
  input twiddle_rsc_0_9_WVALID;
  input twiddle_rsc_0_9_WUSER;
  input twiddle_rsc_0_9_WLAST;
  input [3:0] twiddle_rsc_0_9_WSTRB;
  input [31:0] twiddle_rsc_0_9_WDATA;
  output twiddle_rsc_0_9_AWREADY;
  input twiddle_rsc_0_9_AWVALID;
  input twiddle_rsc_0_9_AWUSER;
  input [3:0] twiddle_rsc_0_9_AWREGION;
  input [3:0] twiddle_rsc_0_9_AWQOS;
  input [2:0] twiddle_rsc_0_9_AWPROT;
  input [3:0] twiddle_rsc_0_9_AWCACHE;
  input twiddle_rsc_0_9_AWLOCK;
  input [1:0] twiddle_rsc_0_9_AWBURST;
  input [2:0] twiddle_rsc_0_9_AWSIZE;
  input [7:0] twiddle_rsc_0_9_AWLEN;
  input [11:0] twiddle_rsc_0_9_AWADDR;
  input twiddle_rsc_0_9_AWID;
  output twiddle_rsc_triosy_0_9_lz;
  input twiddle_rsc_0_10_s_tdone;
  input twiddle_rsc_0_10_tr_write_done;
  input twiddle_rsc_0_10_RREADY;
  output twiddle_rsc_0_10_RVALID;
  output twiddle_rsc_0_10_RUSER;
  output twiddle_rsc_0_10_RLAST;
  output [1:0] twiddle_rsc_0_10_RRESP;
  output [31:0] twiddle_rsc_0_10_RDATA;
  output twiddle_rsc_0_10_RID;
  output twiddle_rsc_0_10_ARREADY;
  input twiddle_rsc_0_10_ARVALID;
  input twiddle_rsc_0_10_ARUSER;
  input [3:0] twiddle_rsc_0_10_ARREGION;
  input [3:0] twiddle_rsc_0_10_ARQOS;
  input [2:0] twiddle_rsc_0_10_ARPROT;
  input [3:0] twiddle_rsc_0_10_ARCACHE;
  input twiddle_rsc_0_10_ARLOCK;
  input [1:0] twiddle_rsc_0_10_ARBURST;
  input [2:0] twiddle_rsc_0_10_ARSIZE;
  input [7:0] twiddle_rsc_0_10_ARLEN;
  input [11:0] twiddle_rsc_0_10_ARADDR;
  input twiddle_rsc_0_10_ARID;
  input twiddle_rsc_0_10_BREADY;
  output twiddle_rsc_0_10_BVALID;
  output twiddle_rsc_0_10_BUSER;
  output [1:0] twiddle_rsc_0_10_BRESP;
  output twiddle_rsc_0_10_BID;
  output twiddle_rsc_0_10_WREADY;
  input twiddle_rsc_0_10_WVALID;
  input twiddle_rsc_0_10_WUSER;
  input twiddle_rsc_0_10_WLAST;
  input [3:0] twiddle_rsc_0_10_WSTRB;
  input [31:0] twiddle_rsc_0_10_WDATA;
  output twiddle_rsc_0_10_AWREADY;
  input twiddle_rsc_0_10_AWVALID;
  input twiddle_rsc_0_10_AWUSER;
  input [3:0] twiddle_rsc_0_10_AWREGION;
  input [3:0] twiddle_rsc_0_10_AWQOS;
  input [2:0] twiddle_rsc_0_10_AWPROT;
  input [3:0] twiddle_rsc_0_10_AWCACHE;
  input twiddle_rsc_0_10_AWLOCK;
  input [1:0] twiddle_rsc_0_10_AWBURST;
  input [2:0] twiddle_rsc_0_10_AWSIZE;
  input [7:0] twiddle_rsc_0_10_AWLEN;
  input [11:0] twiddle_rsc_0_10_AWADDR;
  input twiddle_rsc_0_10_AWID;
  output twiddle_rsc_triosy_0_10_lz;
  input twiddle_rsc_0_11_s_tdone;
  input twiddle_rsc_0_11_tr_write_done;
  input twiddle_rsc_0_11_RREADY;
  output twiddle_rsc_0_11_RVALID;
  output twiddle_rsc_0_11_RUSER;
  output twiddle_rsc_0_11_RLAST;
  output [1:0] twiddle_rsc_0_11_RRESP;
  output [31:0] twiddle_rsc_0_11_RDATA;
  output twiddle_rsc_0_11_RID;
  output twiddle_rsc_0_11_ARREADY;
  input twiddle_rsc_0_11_ARVALID;
  input twiddle_rsc_0_11_ARUSER;
  input [3:0] twiddle_rsc_0_11_ARREGION;
  input [3:0] twiddle_rsc_0_11_ARQOS;
  input [2:0] twiddle_rsc_0_11_ARPROT;
  input [3:0] twiddle_rsc_0_11_ARCACHE;
  input twiddle_rsc_0_11_ARLOCK;
  input [1:0] twiddle_rsc_0_11_ARBURST;
  input [2:0] twiddle_rsc_0_11_ARSIZE;
  input [7:0] twiddle_rsc_0_11_ARLEN;
  input [11:0] twiddle_rsc_0_11_ARADDR;
  input twiddle_rsc_0_11_ARID;
  input twiddle_rsc_0_11_BREADY;
  output twiddle_rsc_0_11_BVALID;
  output twiddle_rsc_0_11_BUSER;
  output [1:0] twiddle_rsc_0_11_BRESP;
  output twiddle_rsc_0_11_BID;
  output twiddle_rsc_0_11_WREADY;
  input twiddle_rsc_0_11_WVALID;
  input twiddle_rsc_0_11_WUSER;
  input twiddle_rsc_0_11_WLAST;
  input [3:0] twiddle_rsc_0_11_WSTRB;
  input [31:0] twiddle_rsc_0_11_WDATA;
  output twiddle_rsc_0_11_AWREADY;
  input twiddle_rsc_0_11_AWVALID;
  input twiddle_rsc_0_11_AWUSER;
  input [3:0] twiddle_rsc_0_11_AWREGION;
  input [3:0] twiddle_rsc_0_11_AWQOS;
  input [2:0] twiddle_rsc_0_11_AWPROT;
  input [3:0] twiddle_rsc_0_11_AWCACHE;
  input twiddle_rsc_0_11_AWLOCK;
  input [1:0] twiddle_rsc_0_11_AWBURST;
  input [2:0] twiddle_rsc_0_11_AWSIZE;
  input [7:0] twiddle_rsc_0_11_AWLEN;
  input [11:0] twiddle_rsc_0_11_AWADDR;
  input twiddle_rsc_0_11_AWID;
  output twiddle_rsc_triosy_0_11_lz;
  input twiddle_rsc_0_12_s_tdone;
  input twiddle_rsc_0_12_tr_write_done;
  input twiddle_rsc_0_12_RREADY;
  output twiddle_rsc_0_12_RVALID;
  output twiddle_rsc_0_12_RUSER;
  output twiddle_rsc_0_12_RLAST;
  output [1:0] twiddle_rsc_0_12_RRESP;
  output [31:0] twiddle_rsc_0_12_RDATA;
  output twiddle_rsc_0_12_RID;
  output twiddle_rsc_0_12_ARREADY;
  input twiddle_rsc_0_12_ARVALID;
  input twiddle_rsc_0_12_ARUSER;
  input [3:0] twiddle_rsc_0_12_ARREGION;
  input [3:0] twiddle_rsc_0_12_ARQOS;
  input [2:0] twiddle_rsc_0_12_ARPROT;
  input [3:0] twiddle_rsc_0_12_ARCACHE;
  input twiddle_rsc_0_12_ARLOCK;
  input [1:0] twiddle_rsc_0_12_ARBURST;
  input [2:0] twiddle_rsc_0_12_ARSIZE;
  input [7:0] twiddle_rsc_0_12_ARLEN;
  input [11:0] twiddle_rsc_0_12_ARADDR;
  input twiddle_rsc_0_12_ARID;
  input twiddle_rsc_0_12_BREADY;
  output twiddle_rsc_0_12_BVALID;
  output twiddle_rsc_0_12_BUSER;
  output [1:0] twiddle_rsc_0_12_BRESP;
  output twiddle_rsc_0_12_BID;
  output twiddle_rsc_0_12_WREADY;
  input twiddle_rsc_0_12_WVALID;
  input twiddle_rsc_0_12_WUSER;
  input twiddle_rsc_0_12_WLAST;
  input [3:0] twiddle_rsc_0_12_WSTRB;
  input [31:0] twiddle_rsc_0_12_WDATA;
  output twiddle_rsc_0_12_AWREADY;
  input twiddle_rsc_0_12_AWVALID;
  input twiddle_rsc_0_12_AWUSER;
  input [3:0] twiddle_rsc_0_12_AWREGION;
  input [3:0] twiddle_rsc_0_12_AWQOS;
  input [2:0] twiddle_rsc_0_12_AWPROT;
  input [3:0] twiddle_rsc_0_12_AWCACHE;
  input twiddle_rsc_0_12_AWLOCK;
  input [1:0] twiddle_rsc_0_12_AWBURST;
  input [2:0] twiddle_rsc_0_12_AWSIZE;
  input [7:0] twiddle_rsc_0_12_AWLEN;
  input [11:0] twiddle_rsc_0_12_AWADDR;
  input twiddle_rsc_0_12_AWID;
  output twiddle_rsc_triosy_0_12_lz;
  input twiddle_rsc_0_13_s_tdone;
  input twiddle_rsc_0_13_tr_write_done;
  input twiddle_rsc_0_13_RREADY;
  output twiddle_rsc_0_13_RVALID;
  output twiddle_rsc_0_13_RUSER;
  output twiddle_rsc_0_13_RLAST;
  output [1:0] twiddle_rsc_0_13_RRESP;
  output [31:0] twiddle_rsc_0_13_RDATA;
  output twiddle_rsc_0_13_RID;
  output twiddle_rsc_0_13_ARREADY;
  input twiddle_rsc_0_13_ARVALID;
  input twiddle_rsc_0_13_ARUSER;
  input [3:0] twiddle_rsc_0_13_ARREGION;
  input [3:0] twiddle_rsc_0_13_ARQOS;
  input [2:0] twiddle_rsc_0_13_ARPROT;
  input [3:0] twiddle_rsc_0_13_ARCACHE;
  input twiddle_rsc_0_13_ARLOCK;
  input [1:0] twiddle_rsc_0_13_ARBURST;
  input [2:0] twiddle_rsc_0_13_ARSIZE;
  input [7:0] twiddle_rsc_0_13_ARLEN;
  input [11:0] twiddle_rsc_0_13_ARADDR;
  input twiddle_rsc_0_13_ARID;
  input twiddle_rsc_0_13_BREADY;
  output twiddle_rsc_0_13_BVALID;
  output twiddle_rsc_0_13_BUSER;
  output [1:0] twiddle_rsc_0_13_BRESP;
  output twiddle_rsc_0_13_BID;
  output twiddle_rsc_0_13_WREADY;
  input twiddle_rsc_0_13_WVALID;
  input twiddle_rsc_0_13_WUSER;
  input twiddle_rsc_0_13_WLAST;
  input [3:0] twiddle_rsc_0_13_WSTRB;
  input [31:0] twiddle_rsc_0_13_WDATA;
  output twiddle_rsc_0_13_AWREADY;
  input twiddle_rsc_0_13_AWVALID;
  input twiddle_rsc_0_13_AWUSER;
  input [3:0] twiddle_rsc_0_13_AWREGION;
  input [3:0] twiddle_rsc_0_13_AWQOS;
  input [2:0] twiddle_rsc_0_13_AWPROT;
  input [3:0] twiddle_rsc_0_13_AWCACHE;
  input twiddle_rsc_0_13_AWLOCK;
  input [1:0] twiddle_rsc_0_13_AWBURST;
  input [2:0] twiddle_rsc_0_13_AWSIZE;
  input [7:0] twiddle_rsc_0_13_AWLEN;
  input [11:0] twiddle_rsc_0_13_AWADDR;
  input twiddle_rsc_0_13_AWID;
  output twiddle_rsc_triosy_0_13_lz;
  input twiddle_rsc_0_14_s_tdone;
  input twiddle_rsc_0_14_tr_write_done;
  input twiddle_rsc_0_14_RREADY;
  output twiddle_rsc_0_14_RVALID;
  output twiddle_rsc_0_14_RUSER;
  output twiddle_rsc_0_14_RLAST;
  output [1:0] twiddle_rsc_0_14_RRESP;
  output [31:0] twiddle_rsc_0_14_RDATA;
  output twiddle_rsc_0_14_RID;
  output twiddle_rsc_0_14_ARREADY;
  input twiddle_rsc_0_14_ARVALID;
  input twiddle_rsc_0_14_ARUSER;
  input [3:0] twiddle_rsc_0_14_ARREGION;
  input [3:0] twiddle_rsc_0_14_ARQOS;
  input [2:0] twiddle_rsc_0_14_ARPROT;
  input [3:0] twiddle_rsc_0_14_ARCACHE;
  input twiddle_rsc_0_14_ARLOCK;
  input [1:0] twiddle_rsc_0_14_ARBURST;
  input [2:0] twiddle_rsc_0_14_ARSIZE;
  input [7:0] twiddle_rsc_0_14_ARLEN;
  input [11:0] twiddle_rsc_0_14_ARADDR;
  input twiddle_rsc_0_14_ARID;
  input twiddle_rsc_0_14_BREADY;
  output twiddle_rsc_0_14_BVALID;
  output twiddle_rsc_0_14_BUSER;
  output [1:0] twiddle_rsc_0_14_BRESP;
  output twiddle_rsc_0_14_BID;
  output twiddle_rsc_0_14_WREADY;
  input twiddle_rsc_0_14_WVALID;
  input twiddle_rsc_0_14_WUSER;
  input twiddle_rsc_0_14_WLAST;
  input [3:0] twiddle_rsc_0_14_WSTRB;
  input [31:0] twiddle_rsc_0_14_WDATA;
  output twiddle_rsc_0_14_AWREADY;
  input twiddle_rsc_0_14_AWVALID;
  input twiddle_rsc_0_14_AWUSER;
  input [3:0] twiddle_rsc_0_14_AWREGION;
  input [3:0] twiddle_rsc_0_14_AWQOS;
  input [2:0] twiddle_rsc_0_14_AWPROT;
  input [3:0] twiddle_rsc_0_14_AWCACHE;
  input twiddle_rsc_0_14_AWLOCK;
  input [1:0] twiddle_rsc_0_14_AWBURST;
  input [2:0] twiddle_rsc_0_14_AWSIZE;
  input [7:0] twiddle_rsc_0_14_AWLEN;
  input [11:0] twiddle_rsc_0_14_AWADDR;
  input twiddle_rsc_0_14_AWID;
  output twiddle_rsc_triosy_0_14_lz;
  input twiddle_rsc_0_15_s_tdone;
  input twiddle_rsc_0_15_tr_write_done;
  input twiddle_rsc_0_15_RREADY;
  output twiddle_rsc_0_15_RVALID;
  output twiddle_rsc_0_15_RUSER;
  output twiddle_rsc_0_15_RLAST;
  output [1:0] twiddle_rsc_0_15_RRESP;
  output [31:0] twiddle_rsc_0_15_RDATA;
  output twiddle_rsc_0_15_RID;
  output twiddle_rsc_0_15_ARREADY;
  input twiddle_rsc_0_15_ARVALID;
  input twiddle_rsc_0_15_ARUSER;
  input [3:0] twiddle_rsc_0_15_ARREGION;
  input [3:0] twiddle_rsc_0_15_ARQOS;
  input [2:0] twiddle_rsc_0_15_ARPROT;
  input [3:0] twiddle_rsc_0_15_ARCACHE;
  input twiddle_rsc_0_15_ARLOCK;
  input [1:0] twiddle_rsc_0_15_ARBURST;
  input [2:0] twiddle_rsc_0_15_ARSIZE;
  input [7:0] twiddle_rsc_0_15_ARLEN;
  input [11:0] twiddle_rsc_0_15_ARADDR;
  input twiddle_rsc_0_15_ARID;
  input twiddle_rsc_0_15_BREADY;
  output twiddle_rsc_0_15_BVALID;
  output twiddle_rsc_0_15_BUSER;
  output [1:0] twiddle_rsc_0_15_BRESP;
  output twiddle_rsc_0_15_BID;
  output twiddle_rsc_0_15_WREADY;
  input twiddle_rsc_0_15_WVALID;
  input twiddle_rsc_0_15_WUSER;
  input twiddle_rsc_0_15_WLAST;
  input [3:0] twiddle_rsc_0_15_WSTRB;
  input [31:0] twiddle_rsc_0_15_WDATA;
  output twiddle_rsc_0_15_AWREADY;
  input twiddle_rsc_0_15_AWVALID;
  input twiddle_rsc_0_15_AWUSER;
  input [3:0] twiddle_rsc_0_15_AWREGION;
  input [3:0] twiddle_rsc_0_15_AWQOS;
  input [2:0] twiddle_rsc_0_15_AWPROT;
  input [3:0] twiddle_rsc_0_15_AWCACHE;
  input twiddle_rsc_0_15_AWLOCK;
  input [1:0] twiddle_rsc_0_15_AWBURST;
  input [2:0] twiddle_rsc_0_15_AWSIZE;
  input [7:0] twiddle_rsc_0_15_AWLEN;
  input [11:0] twiddle_rsc_0_15_AWADDR;
  input twiddle_rsc_0_15_AWID;
  output twiddle_rsc_triosy_0_15_lz;
  input twiddle_h_rsc_0_0_s_tdone;
  input twiddle_h_rsc_0_0_tr_write_done;
  input twiddle_h_rsc_0_0_RREADY;
  output twiddle_h_rsc_0_0_RVALID;
  output twiddle_h_rsc_0_0_RUSER;
  output twiddle_h_rsc_0_0_RLAST;
  output [1:0] twiddle_h_rsc_0_0_RRESP;
  output [31:0] twiddle_h_rsc_0_0_RDATA;
  output twiddle_h_rsc_0_0_RID;
  output twiddle_h_rsc_0_0_ARREADY;
  input twiddle_h_rsc_0_0_ARVALID;
  input twiddle_h_rsc_0_0_ARUSER;
  input [3:0] twiddle_h_rsc_0_0_ARREGION;
  input [3:0] twiddle_h_rsc_0_0_ARQOS;
  input [2:0] twiddle_h_rsc_0_0_ARPROT;
  input [3:0] twiddle_h_rsc_0_0_ARCACHE;
  input twiddle_h_rsc_0_0_ARLOCK;
  input [1:0] twiddle_h_rsc_0_0_ARBURST;
  input [2:0] twiddle_h_rsc_0_0_ARSIZE;
  input [7:0] twiddle_h_rsc_0_0_ARLEN;
  input [11:0] twiddle_h_rsc_0_0_ARADDR;
  input twiddle_h_rsc_0_0_ARID;
  input twiddle_h_rsc_0_0_BREADY;
  output twiddle_h_rsc_0_0_BVALID;
  output twiddle_h_rsc_0_0_BUSER;
  output [1:0] twiddle_h_rsc_0_0_BRESP;
  output twiddle_h_rsc_0_0_BID;
  output twiddle_h_rsc_0_0_WREADY;
  input twiddle_h_rsc_0_0_WVALID;
  input twiddle_h_rsc_0_0_WUSER;
  input twiddle_h_rsc_0_0_WLAST;
  input [3:0] twiddle_h_rsc_0_0_WSTRB;
  input [31:0] twiddle_h_rsc_0_0_WDATA;
  output twiddle_h_rsc_0_0_AWREADY;
  input twiddle_h_rsc_0_0_AWVALID;
  input twiddle_h_rsc_0_0_AWUSER;
  input [3:0] twiddle_h_rsc_0_0_AWREGION;
  input [3:0] twiddle_h_rsc_0_0_AWQOS;
  input [2:0] twiddle_h_rsc_0_0_AWPROT;
  input [3:0] twiddle_h_rsc_0_0_AWCACHE;
  input twiddle_h_rsc_0_0_AWLOCK;
  input [1:0] twiddle_h_rsc_0_0_AWBURST;
  input [2:0] twiddle_h_rsc_0_0_AWSIZE;
  input [7:0] twiddle_h_rsc_0_0_AWLEN;
  input [11:0] twiddle_h_rsc_0_0_AWADDR;
  input twiddle_h_rsc_0_0_AWID;
  output twiddle_h_rsc_triosy_0_0_lz;
  input twiddle_h_rsc_0_1_s_tdone;
  input twiddle_h_rsc_0_1_tr_write_done;
  input twiddle_h_rsc_0_1_RREADY;
  output twiddle_h_rsc_0_1_RVALID;
  output twiddle_h_rsc_0_1_RUSER;
  output twiddle_h_rsc_0_1_RLAST;
  output [1:0] twiddle_h_rsc_0_1_RRESP;
  output [31:0] twiddle_h_rsc_0_1_RDATA;
  output twiddle_h_rsc_0_1_RID;
  output twiddle_h_rsc_0_1_ARREADY;
  input twiddle_h_rsc_0_1_ARVALID;
  input twiddle_h_rsc_0_1_ARUSER;
  input [3:0] twiddle_h_rsc_0_1_ARREGION;
  input [3:0] twiddle_h_rsc_0_1_ARQOS;
  input [2:0] twiddle_h_rsc_0_1_ARPROT;
  input [3:0] twiddle_h_rsc_0_1_ARCACHE;
  input twiddle_h_rsc_0_1_ARLOCK;
  input [1:0] twiddle_h_rsc_0_1_ARBURST;
  input [2:0] twiddle_h_rsc_0_1_ARSIZE;
  input [7:0] twiddle_h_rsc_0_1_ARLEN;
  input [11:0] twiddle_h_rsc_0_1_ARADDR;
  input twiddle_h_rsc_0_1_ARID;
  input twiddle_h_rsc_0_1_BREADY;
  output twiddle_h_rsc_0_1_BVALID;
  output twiddle_h_rsc_0_1_BUSER;
  output [1:0] twiddle_h_rsc_0_1_BRESP;
  output twiddle_h_rsc_0_1_BID;
  output twiddle_h_rsc_0_1_WREADY;
  input twiddle_h_rsc_0_1_WVALID;
  input twiddle_h_rsc_0_1_WUSER;
  input twiddle_h_rsc_0_1_WLAST;
  input [3:0] twiddle_h_rsc_0_1_WSTRB;
  input [31:0] twiddle_h_rsc_0_1_WDATA;
  output twiddle_h_rsc_0_1_AWREADY;
  input twiddle_h_rsc_0_1_AWVALID;
  input twiddle_h_rsc_0_1_AWUSER;
  input [3:0] twiddle_h_rsc_0_1_AWREGION;
  input [3:0] twiddle_h_rsc_0_1_AWQOS;
  input [2:0] twiddle_h_rsc_0_1_AWPROT;
  input [3:0] twiddle_h_rsc_0_1_AWCACHE;
  input twiddle_h_rsc_0_1_AWLOCK;
  input [1:0] twiddle_h_rsc_0_1_AWBURST;
  input [2:0] twiddle_h_rsc_0_1_AWSIZE;
  input [7:0] twiddle_h_rsc_0_1_AWLEN;
  input [11:0] twiddle_h_rsc_0_1_AWADDR;
  input twiddle_h_rsc_0_1_AWID;
  output twiddle_h_rsc_triosy_0_1_lz;
  input twiddle_h_rsc_0_2_s_tdone;
  input twiddle_h_rsc_0_2_tr_write_done;
  input twiddle_h_rsc_0_2_RREADY;
  output twiddle_h_rsc_0_2_RVALID;
  output twiddle_h_rsc_0_2_RUSER;
  output twiddle_h_rsc_0_2_RLAST;
  output [1:0] twiddle_h_rsc_0_2_RRESP;
  output [31:0] twiddle_h_rsc_0_2_RDATA;
  output twiddle_h_rsc_0_2_RID;
  output twiddle_h_rsc_0_2_ARREADY;
  input twiddle_h_rsc_0_2_ARVALID;
  input twiddle_h_rsc_0_2_ARUSER;
  input [3:0] twiddle_h_rsc_0_2_ARREGION;
  input [3:0] twiddle_h_rsc_0_2_ARQOS;
  input [2:0] twiddle_h_rsc_0_2_ARPROT;
  input [3:0] twiddle_h_rsc_0_2_ARCACHE;
  input twiddle_h_rsc_0_2_ARLOCK;
  input [1:0] twiddle_h_rsc_0_2_ARBURST;
  input [2:0] twiddle_h_rsc_0_2_ARSIZE;
  input [7:0] twiddle_h_rsc_0_2_ARLEN;
  input [11:0] twiddle_h_rsc_0_2_ARADDR;
  input twiddle_h_rsc_0_2_ARID;
  input twiddle_h_rsc_0_2_BREADY;
  output twiddle_h_rsc_0_2_BVALID;
  output twiddle_h_rsc_0_2_BUSER;
  output [1:0] twiddle_h_rsc_0_2_BRESP;
  output twiddle_h_rsc_0_2_BID;
  output twiddle_h_rsc_0_2_WREADY;
  input twiddle_h_rsc_0_2_WVALID;
  input twiddle_h_rsc_0_2_WUSER;
  input twiddle_h_rsc_0_2_WLAST;
  input [3:0] twiddle_h_rsc_0_2_WSTRB;
  input [31:0] twiddle_h_rsc_0_2_WDATA;
  output twiddle_h_rsc_0_2_AWREADY;
  input twiddle_h_rsc_0_2_AWVALID;
  input twiddle_h_rsc_0_2_AWUSER;
  input [3:0] twiddle_h_rsc_0_2_AWREGION;
  input [3:0] twiddle_h_rsc_0_2_AWQOS;
  input [2:0] twiddle_h_rsc_0_2_AWPROT;
  input [3:0] twiddle_h_rsc_0_2_AWCACHE;
  input twiddle_h_rsc_0_2_AWLOCK;
  input [1:0] twiddle_h_rsc_0_2_AWBURST;
  input [2:0] twiddle_h_rsc_0_2_AWSIZE;
  input [7:0] twiddle_h_rsc_0_2_AWLEN;
  input [11:0] twiddle_h_rsc_0_2_AWADDR;
  input twiddle_h_rsc_0_2_AWID;
  output twiddle_h_rsc_triosy_0_2_lz;
  input twiddle_h_rsc_0_3_s_tdone;
  input twiddle_h_rsc_0_3_tr_write_done;
  input twiddle_h_rsc_0_3_RREADY;
  output twiddle_h_rsc_0_3_RVALID;
  output twiddle_h_rsc_0_3_RUSER;
  output twiddle_h_rsc_0_3_RLAST;
  output [1:0] twiddle_h_rsc_0_3_RRESP;
  output [31:0] twiddle_h_rsc_0_3_RDATA;
  output twiddle_h_rsc_0_3_RID;
  output twiddle_h_rsc_0_3_ARREADY;
  input twiddle_h_rsc_0_3_ARVALID;
  input twiddle_h_rsc_0_3_ARUSER;
  input [3:0] twiddle_h_rsc_0_3_ARREGION;
  input [3:0] twiddle_h_rsc_0_3_ARQOS;
  input [2:0] twiddle_h_rsc_0_3_ARPROT;
  input [3:0] twiddle_h_rsc_0_3_ARCACHE;
  input twiddle_h_rsc_0_3_ARLOCK;
  input [1:0] twiddle_h_rsc_0_3_ARBURST;
  input [2:0] twiddle_h_rsc_0_3_ARSIZE;
  input [7:0] twiddle_h_rsc_0_3_ARLEN;
  input [11:0] twiddle_h_rsc_0_3_ARADDR;
  input twiddle_h_rsc_0_3_ARID;
  input twiddle_h_rsc_0_3_BREADY;
  output twiddle_h_rsc_0_3_BVALID;
  output twiddle_h_rsc_0_3_BUSER;
  output [1:0] twiddle_h_rsc_0_3_BRESP;
  output twiddle_h_rsc_0_3_BID;
  output twiddle_h_rsc_0_3_WREADY;
  input twiddle_h_rsc_0_3_WVALID;
  input twiddle_h_rsc_0_3_WUSER;
  input twiddle_h_rsc_0_3_WLAST;
  input [3:0] twiddle_h_rsc_0_3_WSTRB;
  input [31:0] twiddle_h_rsc_0_3_WDATA;
  output twiddle_h_rsc_0_3_AWREADY;
  input twiddle_h_rsc_0_3_AWVALID;
  input twiddle_h_rsc_0_3_AWUSER;
  input [3:0] twiddle_h_rsc_0_3_AWREGION;
  input [3:0] twiddle_h_rsc_0_3_AWQOS;
  input [2:0] twiddle_h_rsc_0_3_AWPROT;
  input [3:0] twiddle_h_rsc_0_3_AWCACHE;
  input twiddle_h_rsc_0_3_AWLOCK;
  input [1:0] twiddle_h_rsc_0_3_AWBURST;
  input [2:0] twiddle_h_rsc_0_3_AWSIZE;
  input [7:0] twiddle_h_rsc_0_3_AWLEN;
  input [11:0] twiddle_h_rsc_0_3_AWADDR;
  input twiddle_h_rsc_0_3_AWID;
  output twiddle_h_rsc_triosy_0_3_lz;
  input twiddle_h_rsc_0_4_s_tdone;
  input twiddle_h_rsc_0_4_tr_write_done;
  input twiddle_h_rsc_0_4_RREADY;
  output twiddle_h_rsc_0_4_RVALID;
  output twiddle_h_rsc_0_4_RUSER;
  output twiddle_h_rsc_0_4_RLAST;
  output [1:0] twiddle_h_rsc_0_4_RRESP;
  output [31:0] twiddle_h_rsc_0_4_RDATA;
  output twiddle_h_rsc_0_4_RID;
  output twiddle_h_rsc_0_4_ARREADY;
  input twiddle_h_rsc_0_4_ARVALID;
  input twiddle_h_rsc_0_4_ARUSER;
  input [3:0] twiddle_h_rsc_0_4_ARREGION;
  input [3:0] twiddle_h_rsc_0_4_ARQOS;
  input [2:0] twiddle_h_rsc_0_4_ARPROT;
  input [3:0] twiddle_h_rsc_0_4_ARCACHE;
  input twiddle_h_rsc_0_4_ARLOCK;
  input [1:0] twiddle_h_rsc_0_4_ARBURST;
  input [2:0] twiddle_h_rsc_0_4_ARSIZE;
  input [7:0] twiddle_h_rsc_0_4_ARLEN;
  input [11:0] twiddle_h_rsc_0_4_ARADDR;
  input twiddle_h_rsc_0_4_ARID;
  input twiddle_h_rsc_0_4_BREADY;
  output twiddle_h_rsc_0_4_BVALID;
  output twiddle_h_rsc_0_4_BUSER;
  output [1:0] twiddle_h_rsc_0_4_BRESP;
  output twiddle_h_rsc_0_4_BID;
  output twiddle_h_rsc_0_4_WREADY;
  input twiddle_h_rsc_0_4_WVALID;
  input twiddle_h_rsc_0_4_WUSER;
  input twiddle_h_rsc_0_4_WLAST;
  input [3:0] twiddle_h_rsc_0_4_WSTRB;
  input [31:0] twiddle_h_rsc_0_4_WDATA;
  output twiddle_h_rsc_0_4_AWREADY;
  input twiddle_h_rsc_0_4_AWVALID;
  input twiddle_h_rsc_0_4_AWUSER;
  input [3:0] twiddle_h_rsc_0_4_AWREGION;
  input [3:0] twiddle_h_rsc_0_4_AWQOS;
  input [2:0] twiddle_h_rsc_0_4_AWPROT;
  input [3:0] twiddle_h_rsc_0_4_AWCACHE;
  input twiddle_h_rsc_0_4_AWLOCK;
  input [1:0] twiddle_h_rsc_0_4_AWBURST;
  input [2:0] twiddle_h_rsc_0_4_AWSIZE;
  input [7:0] twiddle_h_rsc_0_4_AWLEN;
  input [11:0] twiddle_h_rsc_0_4_AWADDR;
  input twiddle_h_rsc_0_4_AWID;
  output twiddle_h_rsc_triosy_0_4_lz;
  input twiddle_h_rsc_0_5_s_tdone;
  input twiddle_h_rsc_0_5_tr_write_done;
  input twiddle_h_rsc_0_5_RREADY;
  output twiddle_h_rsc_0_5_RVALID;
  output twiddle_h_rsc_0_5_RUSER;
  output twiddle_h_rsc_0_5_RLAST;
  output [1:0] twiddle_h_rsc_0_5_RRESP;
  output [31:0] twiddle_h_rsc_0_5_RDATA;
  output twiddle_h_rsc_0_5_RID;
  output twiddle_h_rsc_0_5_ARREADY;
  input twiddle_h_rsc_0_5_ARVALID;
  input twiddle_h_rsc_0_5_ARUSER;
  input [3:0] twiddle_h_rsc_0_5_ARREGION;
  input [3:0] twiddle_h_rsc_0_5_ARQOS;
  input [2:0] twiddle_h_rsc_0_5_ARPROT;
  input [3:0] twiddle_h_rsc_0_5_ARCACHE;
  input twiddle_h_rsc_0_5_ARLOCK;
  input [1:0] twiddle_h_rsc_0_5_ARBURST;
  input [2:0] twiddle_h_rsc_0_5_ARSIZE;
  input [7:0] twiddle_h_rsc_0_5_ARLEN;
  input [11:0] twiddle_h_rsc_0_5_ARADDR;
  input twiddle_h_rsc_0_5_ARID;
  input twiddle_h_rsc_0_5_BREADY;
  output twiddle_h_rsc_0_5_BVALID;
  output twiddle_h_rsc_0_5_BUSER;
  output [1:0] twiddle_h_rsc_0_5_BRESP;
  output twiddle_h_rsc_0_5_BID;
  output twiddle_h_rsc_0_5_WREADY;
  input twiddle_h_rsc_0_5_WVALID;
  input twiddle_h_rsc_0_5_WUSER;
  input twiddle_h_rsc_0_5_WLAST;
  input [3:0] twiddle_h_rsc_0_5_WSTRB;
  input [31:0] twiddle_h_rsc_0_5_WDATA;
  output twiddle_h_rsc_0_5_AWREADY;
  input twiddle_h_rsc_0_5_AWVALID;
  input twiddle_h_rsc_0_5_AWUSER;
  input [3:0] twiddle_h_rsc_0_5_AWREGION;
  input [3:0] twiddle_h_rsc_0_5_AWQOS;
  input [2:0] twiddle_h_rsc_0_5_AWPROT;
  input [3:0] twiddle_h_rsc_0_5_AWCACHE;
  input twiddle_h_rsc_0_5_AWLOCK;
  input [1:0] twiddle_h_rsc_0_5_AWBURST;
  input [2:0] twiddle_h_rsc_0_5_AWSIZE;
  input [7:0] twiddle_h_rsc_0_5_AWLEN;
  input [11:0] twiddle_h_rsc_0_5_AWADDR;
  input twiddle_h_rsc_0_5_AWID;
  output twiddle_h_rsc_triosy_0_5_lz;
  input twiddle_h_rsc_0_6_s_tdone;
  input twiddle_h_rsc_0_6_tr_write_done;
  input twiddle_h_rsc_0_6_RREADY;
  output twiddle_h_rsc_0_6_RVALID;
  output twiddle_h_rsc_0_6_RUSER;
  output twiddle_h_rsc_0_6_RLAST;
  output [1:0] twiddle_h_rsc_0_6_RRESP;
  output [31:0] twiddle_h_rsc_0_6_RDATA;
  output twiddle_h_rsc_0_6_RID;
  output twiddle_h_rsc_0_6_ARREADY;
  input twiddle_h_rsc_0_6_ARVALID;
  input twiddle_h_rsc_0_6_ARUSER;
  input [3:0] twiddle_h_rsc_0_6_ARREGION;
  input [3:0] twiddle_h_rsc_0_6_ARQOS;
  input [2:0] twiddle_h_rsc_0_6_ARPROT;
  input [3:0] twiddle_h_rsc_0_6_ARCACHE;
  input twiddle_h_rsc_0_6_ARLOCK;
  input [1:0] twiddle_h_rsc_0_6_ARBURST;
  input [2:0] twiddle_h_rsc_0_6_ARSIZE;
  input [7:0] twiddle_h_rsc_0_6_ARLEN;
  input [11:0] twiddle_h_rsc_0_6_ARADDR;
  input twiddle_h_rsc_0_6_ARID;
  input twiddle_h_rsc_0_6_BREADY;
  output twiddle_h_rsc_0_6_BVALID;
  output twiddle_h_rsc_0_6_BUSER;
  output [1:0] twiddle_h_rsc_0_6_BRESP;
  output twiddle_h_rsc_0_6_BID;
  output twiddle_h_rsc_0_6_WREADY;
  input twiddle_h_rsc_0_6_WVALID;
  input twiddle_h_rsc_0_6_WUSER;
  input twiddle_h_rsc_0_6_WLAST;
  input [3:0] twiddle_h_rsc_0_6_WSTRB;
  input [31:0] twiddle_h_rsc_0_6_WDATA;
  output twiddle_h_rsc_0_6_AWREADY;
  input twiddle_h_rsc_0_6_AWVALID;
  input twiddle_h_rsc_0_6_AWUSER;
  input [3:0] twiddle_h_rsc_0_6_AWREGION;
  input [3:0] twiddle_h_rsc_0_6_AWQOS;
  input [2:0] twiddle_h_rsc_0_6_AWPROT;
  input [3:0] twiddle_h_rsc_0_6_AWCACHE;
  input twiddle_h_rsc_0_6_AWLOCK;
  input [1:0] twiddle_h_rsc_0_6_AWBURST;
  input [2:0] twiddle_h_rsc_0_6_AWSIZE;
  input [7:0] twiddle_h_rsc_0_6_AWLEN;
  input [11:0] twiddle_h_rsc_0_6_AWADDR;
  input twiddle_h_rsc_0_6_AWID;
  output twiddle_h_rsc_triosy_0_6_lz;
  input twiddle_h_rsc_0_7_s_tdone;
  input twiddle_h_rsc_0_7_tr_write_done;
  input twiddle_h_rsc_0_7_RREADY;
  output twiddle_h_rsc_0_7_RVALID;
  output twiddle_h_rsc_0_7_RUSER;
  output twiddle_h_rsc_0_7_RLAST;
  output [1:0] twiddle_h_rsc_0_7_RRESP;
  output [31:0] twiddle_h_rsc_0_7_RDATA;
  output twiddle_h_rsc_0_7_RID;
  output twiddle_h_rsc_0_7_ARREADY;
  input twiddle_h_rsc_0_7_ARVALID;
  input twiddle_h_rsc_0_7_ARUSER;
  input [3:0] twiddle_h_rsc_0_7_ARREGION;
  input [3:0] twiddle_h_rsc_0_7_ARQOS;
  input [2:0] twiddle_h_rsc_0_7_ARPROT;
  input [3:0] twiddle_h_rsc_0_7_ARCACHE;
  input twiddle_h_rsc_0_7_ARLOCK;
  input [1:0] twiddle_h_rsc_0_7_ARBURST;
  input [2:0] twiddle_h_rsc_0_7_ARSIZE;
  input [7:0] twiddle_h_rsc_0_7_ARLEN;
  input [11:0] twiddle_h_rsc_0_7_ARADDR;
  input twiddle_h_rsc_0_7_ARID;
  input twiddle_h_rsc_0_7_BREADY;
  output twiddle_h_rsc_0_7_BVALID;
  output twiddle_h_rsc_0_7_BUSER;
  output [1:0] twiddle_h_rsc_0_7_BRESP;
  output twiddle_h_rsc_0_7_BID;
  output twiddle_h_rsc_0_7_WREADY;
  input twiddle_h_rsc_0_7_WVALID;
  input twiddle_h_rsc_0_7_WUSER;
  input twiddle_h_rsc_0_7_WLAST;
  input [3:0] twiddle_h_rsc_0_7_WSTRB;
  input [31:0] twiddle_h_rsc_0_7_WDATA;
  output twiddle_h_rsc_0_7_AWREADY;
  input twiddle_h_rsc_0_7_AWVALID;
  input twiddle_h_rsc_0_7_AWUSER;
  input [3:0] twiddle_h_rsc_0_7_AWREGION;
  input [3:0] twiddle_h_rsc_0_7_AWQOS;
  input [2:0] twiddle_h_rsc_0_7_AWPROT;
  input [3:0] twiddle_h_rsc_0_7_AWCACHE;
  input twiddle_h_rsc_0_7_AWLOCK;
  input [1:0] twiddle_h_rsc_0_7_AWBURST;
  input [2:0] twiddle_h_rsc_0_7_AWSIZE;
  input [7:0] twiddle_h_rsc_0_7_AWLEN;
  input [11:0] twiddle_h_rsc_0_7_AWADDR;
  input twiddle_h_rsc_0_7_AWID;
  output twiddle_h_rsc_triosy_0_7_lz;
  input twiddle_h_rsc_0_8_s_tdone;
  input twiddle_h_rsc_0_8_tr_write_done;
  input twiddle_h_rsc_0_8_RREADY;
  output twiddle_h_rsc_0_8_RVALID;
  output twiddle_h_rsc_0_8_RUSER;
  output twiddle_h_rsc_0_8_RLAST;
  output [1:0] twiddle_h_rsc_0_8_RRESP;
  output [31:0] twiddle_h_rsc_0_8_RDATA;
  output twiddle_h_rsc_0_8_RID;
  output twiddle_h_rsc_0_8_ARREADY;
  input twiddle_h_rsc_0_8_ARVALID;
  input twiddle_h_rsc_0_8_ARUSER;
  input [3:0] twiddle_h_rsc_0_8_ARREGION;
  input [3:0] twiddle_h_rsc_0_8_ARQOS;
  input [2:0] twiddle_h_rsc_0_8_ARPROT;
  input [3:0] twiddle_h_rsc_0_8_ARCACHE;
  input twiddle_h_rsc_0_8_ARLOCK;
  input [1:0] twiddle_h_rsc_0_8_ARBURST;
  input [2:0] twiddle_h_rsc_0_8_ARSIZE;
  input [7:0] twiddle_h_rsc_0_8_ARLEN;
  input [11:0] twiddle_h_rsc_0_8_ARADDR;
  input twiddle_h_rsc_0_8_ARID;
  input twiddle_h_rsc_0_8_BREADY;
  output twiddle_h_rsc_0_8_BVALID;
  output twiddle_h_rsc_0_8_BUSER;
  output [1:0] twiddle_h_rsc_0_8_BRESP;
  output twiddle_h_rsc_0_8_BID;
  output twiddle_h_rsc_0_8_WREADY;
  input twiddle_h_rsc_0_8_WVALID;
  input twiddle_h_rsc_0_8_WUSER;
  input twiddle_h_rsc_0_8_WLAST;
  input [3:0] twiddle_h_rsc_0_8_WSTRB;
  input [31:0] twiddle_h_rsc_0_8_WDATA;
  output twiddle_h_rsc_0_8_AWREADY;
  input twiddle_h_rsc_0_8_AWVALID;
  input twiddle_h_rsc_0_8_AWUSER;
  input [3:0] twiddle_h_rsc_0_8_AWREGION;
  input [3:0] twiddle_h_rsc_0_8_AWQOS;
  input [2:0] twiddle_h_rsc_0_8_AWPROT;
  input [3:0] twiddle_h_rsc_0_8_AWCACHE;
  input twiddle_h_rsc_0_8_AWLOCK;
  input [1:0] twiddle_h_rsc_0_8_AWBURST;
  input [2:0] twiddle_h_rsc_0_8_AWSIZE;
  input [7:0] twiddle_h_rsc_0_8_AWLEN;
  input [11:0] twiddle_h_rsc_0_8_AWADDR;
  input twiddle_h_rsc_0_8_AWID;
  output twiddle_h_rsc_triosy_0_8_lz;
  input twiddle_h_rsc_0_9_s_tdone;
  input twiddle_h_rsc_0_9_tr_write_done;
  input twiddle_h_rsc_0_9_RREADY;
  output twiddle_h_rsc_0_9_RVALID;
  output twiddle_h_rsc_0_9_RUSER;
  output twiddle_h_rsc_0_9_RLAST;
  output [1:0] twiddle_h_rsc_0_9_RRESP;
  output [31:0] twiddle_h_rsc_0_9_RDATA;
  output twiddle_h_rsc_0_9_RID;
  output twiddle_h_rsc_0_9_ARREADY;
  input twiddle_h_rsc_0_9_ARVALID;
  input twiddle_h_rsc_0_9_ARUSER;
  input [3:0] twiddle_h_rsc_0_9_ARREGION;
  input [3:0] twiddle_h_rsc_0_9_ARQOS;
  input [2:0] twiddle_h_rsc_0_9_ARPROT;
  input [3:0] twiddle_h_rsc_0_9_ARCACHE;
  input twiddle_h_rsc_0_9_ARLOCK;
  input [1:0] twiddle_h_rsc_0_9_ARBURST;
  input [2:0] twiddle_h_rsc_0_9_ARSIZE;
  input [7:0] twiddle_h_rsc_0_9_ARLEN;
  input [11:0] twiddle_h_rsc_0_9_ARADDR;
  input twiddle_h_rsc_0_9_ARID;
  input twiddle_h_rsc_0_9_BREADY;
  output twiddle_h_rsc_0_9_BVALID;
  output twiddle_h_rsc_0_9_BUSER;
  output [1:0] twiddle_h_rsc_0_9_BRESP;
  output twiddle_h_rsc_0_9_BID;
  output twiddle_h_rsc_0_9_WREADY;
  input twiddle_h_rsc_0_9_WVALID;
  input twiddle_h_rsc_0_9_WUSER;
  input twiddle_h_rsc_0_9_WLAST;
  input [3:0] twiddle_h_rsc_0_9_WSTRB;
  input [31:0] twiddle_h_rsc_0_9_WDATA;
  output twiddle_h_rsc_0_9_AWREADY;
  input twiddle_h_rsc_0_9_AWVALID;
  input twiddle_h_rsc_0_9_AWUSER;
  input [3:0] twiddle_h_rsc_0_9_AWREGION;
  input [3:0] twiddle_h_rsc_0_9_AWQOS;
  input [2:0] twiddle_h_rsc_0_9_AWPROT;
  input [3:0] twiddle_h_rsc_0_9_AWCACHE;
  input twiddle_h_rsc_0_9_AWLOCK;
  input [1:0] twiddle_h_rsc_0_9_AWBURST;
  input [2:0] twiddle_h_rsc_0_9_AWSIZE;
  input [7:0] twiddle_h_rsc_0_9_AWLEN;
  input [11:0] twiddle_h_rsc_0_9_AWADDR;
  input twiddle_h_rsc_0_9_AWID;
  output twiddle_h_rsc_triosy_0_9_lz;
  input twiddle_h_rsc_0_10_s_tdone;
  input twiddle_h_rsc_0_10_tr_write_done;
  input twiddle_h_rsc_0_10_RREADY;
  output twiddle_h_rsc_0_10_RVALID;
  output twiddle_h_rsc_0_10_RUSER;
  output twiddle_h_rsc_0_10_RLAST;
  output [1:0] twiddle_h_rsc_0_10_RRESP;
  output [31:0] twiddle_h_rsc_0_10_RDATA;
  output twiddle_h_rsc_0_10_RID;
  output twiddle_h_rsc_0_10_ARREADY;
  input twiddle_h_rsc_0_10_ARVALID;
  input twiddle_h_rsc_0_10_ARUSER;
  input [3:0] twiddle_h_rsc_0_10_ARREGION;
  input [3:0] twiddle_h_rsc_0_10_ARQOS;
  input [2:0] twiddle_h_rsc_0_10_ARPROT;
  input [3:0] twiddle_h_rsc_0_10_ARCACHE;
  input twiddle_h_rsc_0_10_ARLOCK;
  input [1:0] twiddle_h_rsc_0_10_ARBURST;
  input [2:0] twiddle_h_rsc_0_10_ARSIZE;
  input [7:0] twiddle_h_rsc_0_10_ARLEN;
  input [11:0] twiddle_h_rsc_0_10_ARADDR;
  input twiddle_h_rsc_0_10_ARID;
  input twiddle_h_rsc_0_10_BREADY;
  output twiddle_h_rsc_0_10_BVALID;
  output twiddle_h_rsc_0_10_BUSER;
  output [1:0] twiddle_h_rsc_0_10_BRESP;
  output twiddle_h_rsc_0_10_BID;
  output twiddle_h_rsc_0_10_WREADY;
  input twiddle_h_rsc_0_10_WVALID;
  input twiddle_h_rsc_0_10_WUSER;
  input twiddle_h_rsc_0_10_WLAST;
  input [3:0] twiddle_h_rsc_0_10_WSTRB;
  input [31:0] twiddle_h_rsc_0_10_WDATA;
  output twiddle_h_rsc_0_10_AWREADY;
  input twiddle_h_rsc_0_10_AWVALID;
  input twiddle_h_rsc_0_10_AWUSER;
  input [3:0] twiddle_h_rsc_0_10_AWREGION;
  input [3:0] twiddle_h_rsc_0_10_AWQOS;
  input [2:0] twiddle_h_rsc_0_10_AWPROT;
  input [3:0] twiddle_h_rsc_0_10_AWCACHE;
  input twiddle_h_rsc_0_10_AWLOCK;
  input [1:0] twiddle_h_rsc_0_10_AWBURST;
  input [2:0] twiddle_h_rsc_0_10_AWSIZE;
  input [7:0] twiddle_h_rsc_0_10_AWLEN;
  input [11:0] twiddle_h_rsc_0_10_AWADDR;
  input twiddle_h_rsc_0_10_AWID;
  output twiddle_h_rsc_triosy_0_10_lz;
  input twiddle_h_rsc_0_11_s_tdone;
  input twiddle_h_rsc_0_11_tr_write_done;
  input twiddle_h_rsc_0_11_RREADY;
  output twiddle_h_rsc_0_11_RVALID;
  output twiddle_h_rsc_0_11_RUSER;
  output twiddle_h_rsc_0_11_RLAST;
  output [1:0] twiddle_h_rsc_0_11_RRESP;
  output [31:0] twiddle_h_rsc_0_11_RDATA;
  output twiddle_h_rsc_0_11_RID;
  output twiddle_h_rsc_0_11_ARREADY;
  input twiddle_h_rsc_0_11_ARVALID;
  input twiddle_h_rsc_0_11_ARUSER;
  input [3:0] twiddle_h_rsc_0_11_ARREGION;
  input [3:0] twiddle_h_rsc_0_11_ARQOS;
  input [2:0] twiddle_h_rsc_0_11_ARPROT;
  input [3:0] twiddle_h_rsc_0_11_ARCACHE;
  input twiddle_h_rsc_0_11_ARLOCK;
  input [1:0] twiddle_h_rsc_0_11_ARBURST;
  input [2:0] twiddle_h_rsc_0_11_ARSIZE;
  input [7:0] twiddle_h_rsc_0_11_ARLEN;
  input [11:0] twiddle_h_rsc_0_11_ARADDR;
  input twiddle_h_rsc_0_11_ARID;
  input twiddle_h_rsc_0_11_BREADY;
  output twiddle_h_rsc_0_11_BVALID;
  output twiddle_h_rsc_0_11_BUSER;
  output [1:0] twiddle_h_rsc_0_11_BRESP;
  output twiddle_h_rsc_0_11_BID;
  output twiddle_h_rsc_0_11_WREADY;
  input twiddle_h_rsc_0_11_WVALID;
  input twiddle_h_rsc_0_11_WUSER;
  input twiddle_h_rsc_0_11_WLAST;
  input [3:0] twiddle_h_rsc_0_11_WSTRB;
  input [31:0] twiddle_h_rsc_0_11_WDATA;
  output twiddle_h_rsc_0_11_AWREADY;
  input twiddle_h_rsc_0_11_AWVALID;
  input twiddle_h_rsc_0_11_AWUSER;
  input [3:0] twiddle_h_rsc_0_11_AWREGION;
  input [3:0] twiddle_h_rsc_0_11_AWQOS;
  input [2:0] twiddle_h_rsc_0_11_AWPROT;
  input [3:0] twiddle_h_rsc_0_11_AWCACHE;
  input twiddle_h_rsc_0_11_AWLOCK;
  input [1:0] twiddle_h_rsc_0_11_AWBURST;
  input [2:0] twiddle_h_rsc_0_11_AWSIZE;
  input [7:0] twiddle_h_rsc_0_11_AWLEN;
  input [11:0] twiddle_h_rsc_0_11_AWADDR;
  input twiddle_h_rsc_0_11_AWID;
  output twiddle_h_rsc_triosy_0_11_lz;
  input twiddle_h_rsc_0_12_s_tdone;
  input twiddle_h_rsc_0_12_tr_write_done;
  input twiddle_h_rsc_0_12_RREADY;
  output twiddle_h_rsc_0_12_RVALID;
  output twiddle_h_rsc_0_12_RUSER;
  output twiddle_h_rsc_0_12_RLAST;
  output [1:0] twiddle_h_rsc_0_12_RRESP;
  output [31:0] twiddle_h_rsc_0_12_RDATA;
  output twiddle_h_rsc_0_12_RID;
  output twiddle_h_rsc_0_12_ARREADY;
  input twiddle_h_rsc_0_12_ARVALID;
  input twiddle_h_rsc_0_12_ARUSER;
  input [3:0] twiddle_h_rsc_0_12_ARREGION;
  input [3:0] twiddle_h_rsc_0_12_ARQOS;
  input [2:0] twiddle_h_rsc_0_12_ARPROT;
  input [3:0] twiddle_h_rsc_0_12_ARCACHE;
  input twiddle_h_rsc_0_12_ARLOCK;
  input [1:0] twiddle_h_rsc_0_12_ARBURST;
  input [2:0] twiddle_h_rsc_0_12_ARSIZE;
  input [7:0] twiddle_h_rsc_0_12_ARLEN;
  input [11:0] twiddle_h_rsc_0_12_ARADDR;
  input twiddle_h_rsc_0_12_ARID;
  input twiddle_h_rsc_0_12_BREADY;
  output twiddle_h_rsc_0_12_BVALID;
  output twiddle_h_rsc_0_12_BUSER;
  output [1:0] twiddle_h_rsc_0_12_BRESP;
  output twiddle_h_rsc_0_12_BID;
  output twiddle_h_rsc_0_12_WREADY;
  input twiddle_h_rsc_0_12_WVALID;
  input twiddle_h_rsc_0_12_WUSER;
  input twiddle_h_rsc_0_12_WLAST;
  input [3:0] twiddle_h_rsc_0_12_WSTRB;
  input [31:0] twiddle_h_rsc_0_12_WDATA;
  output twiddle_h_rsc_0_12_AWREADY;
  input twiddle_h_rsc_0_12_AWVALID;
  input twiddle_h_rsc_0_12_AWUSER;
  input [3:0] twiddle_h_rsc_0_12_AWREGION;
  input [3:0] twiddle_h_rsc_0_12_AWQOS;
  input [2:0] twiddle_h_rsc_0_12_AWPROT;
  input [3:0] twiddle_h_rsc_0_12_AWCACHE;
  input twiddle_h_rsc_0_12_AWLOCK;
  input [1:0] twiddle_h_rsc_0_12_AWBURST;
  input [2:0] twiddle_h_rsc_0_12_AWSIZE;
  input [7:0] twiddle_h_rsc_0_12_AWLEN;
  input [11:0] twiddle_h_rsc_0_12_AWADDR;
  input twiddle_h_rsc_0_12_AWID;
  output twiddle_h_rsc_triosy_0_12_lz;
  input twiddle_h_rsc_0_13_s_tdone;
  input twiddle_h_rsc_0_13_tr_write_done;
  input twiddle_h_rsc_0_13_RREADY;
  output twiddle_h_rsc_0_13_RVALID;
  output twiddle_h_rsc_0_13_RUSER;
  output twiddle_h_rsc_0_13_RLAST;
  output [1:0] twiddle_h_rsc_0_13_RRESP;
  output [31:0] twiddle_h_rsc_0_13_RDATA;
  output twiddle_h_rsc_0_13_RID;
  output twiddle_h_rsc_0_13_ARREADY;
  input twiddle_h_rsc_0_13_ARVALID;
  input twiddle_h_rsc_0_13_ARUSER;
  input [3:0] twiddle_h_rsc_0_13_ARREGION;
  input [3:0] twiddle_h_rsc_0_13_ARQOS;
  input [2:0] twiddle_h_rsc_0_13_ARPROT;
  input [3:0] twiddle_h_rsc_0_13_ARCACHE;
  input twiddle_h_rsc_0_13_ARLOCK;
  input [1:0] twiddle_h_rsc_0_13_ARBURST;
  input [2:0] twiddle_h_rsc_0_13_ARSIZE;
  input [7:0] twiddle_h_rsc_0_13_ARLEN;
  input [11:0] twiddle_h_rsc_0_13_ARADDR;
  input twiddle_h_rsc_0_13_ARID;
  input twiddle_h_rsc_0_13_BREADY;
  output twiddle_h_rsc_0_13_BVALID;
  output twiddle_h_rsc_0_13_BUSER;
  output [1:0] twiddle_h_rsc_0_13_BRESP;
  output twiddle_h_rsc_0_13_BID;
  output twiddle_h_rsc_0_13_WREADY;
  input twiddle_h_rsc_0_13_WVALID;
  input twiddle_h_rsc_0_13_WUSER;
  input twiddle_h_rsc_0_13_WLAST;
  input [3:0] twiddle_h_rsc_0_13_WSTRB;
  input [31:0] twiddle_h_rsc_0_13_WDATA;
  output twiddle_h_rsc_0_13_AWREADY;
  input twiddle_h_rsc_0_13_AWVALID;
  input twiddle_h_rsc_0_13_AWUSER;
  input [3:0] twiddle_h_rsc_0_13_AWREGION;
  input [3:0] twiddle_h_rsc_0_13_AWQOS;
  input [2:0] twiddle_h_rsc_0_13_AWPROT;
  input [3:0] twiddle_h_rsc_0_13_AWCACHE;
  input twiddle_h_rsc_0_13_AWLOCK;
  input [1:0] twiddle_h_rsc_0_13_AWBURST;
  input [2:0] twiddle_h_rsc_0_13_AWSIZE;
  input [7:0] twiddle_h_rsc_0_13_AWLEN;
  input [11:0] twiddle_h_rsc_0_13_AWADDR;
  input twiddle_h_rsc_0_13_AWID;
  output twiddle_h_rsc_triosy_0_13_lz;
  input twiddle_h_rsc_0_14_s_tdone;
  input twiddle_h_rsc_0_14_tr_write_done;
  input twiddle_h_rsc_0_14_RREADY;
  output twiddle_h_rsc_0_14_RVALID;
  output twiddle_h_rsc_0_14_RUSER;
  output twiddle_h_rsc_0_14_RLAST;
  output [1:0] twiddle_h_rsc_0_14_RRESP;
  output [31:0] twiddle_h_rsc_0_14_RDATA;
  output twiddle_h_rsc_0_14_RID;
  output twiddle_h_rsc_0_14_ARREADY;
  input twiddle_h_rsc_0_14_ARVALID;
  input twiddle_h_rsc_0_14_ARUSER;
  input [3:0] twiddle_h_rsc_0_14_ARREGION;
  input [3:0] twiddle_h_rsc_0_14_ARQOS;
  input [2:0] twiddle_h_rsc_0_14_ARPROT;
  input [3:0] twiddle_h_rsc_0_14_ARCACHE;
  input twiddle_h_rsc_0_14_ARLOCK;
  input [1:0] twiddle_h_rsc_0_14_ARBURST;
  input [2:0] twiddle_h_rsc_0_14_ARSIZE;
  input [7:0] twiddle_h_rsc_0_14_ARLEN;
  input [11:0] twiddle_h_rsc_0_14_ARADDR;
  input twiddle_h_rsc_0_14_ARID;
  input twiddle_h_rsc_0_14_BREADY;
  output twiddle_h_rsc_0_14_BVALID;
  output twiddle_h_rsc_0_14_BUSER;
  output [1:0] twiddle_h_rsc_0_14_BRESP;
  output twiddle_h_rsc_0_14_BID;
  output twiddle_h_rsc_0_14_WREADY;
  input twiddle_h_rsc_0_14_WVALID;
  input twiddle_h_rsc_0_14_WUSER;
  input twiddle_h_rsc_0_14_WLAST;
  input [3:0] twiddle_h_rsc_0_14_WSTRB;
  input [31:0] twiddle_h_rsc_0_14_WDATA;
  output twiddle_h_rsc_0_14_AWREADY;
  input twiddle_h_rsc_0_14_AWVALID;
  input twiddle_h_rsc_0_14_AWUSER;
  input [3:0] twiddle_h_rsc_0_14_AWREGION;
  input [3:0] twiddle_h_rsc_0_14_AWQOS;
  input [2:0] twiddle_h_rsc_0_14_AWPROT;
  input [3:0] twiddle_h_rsc_0_14_AWCACHE;
  input twiddle_h_rsc_0_14_AWLOCK;
  input [1:0] twiddle_h_rsc_0_14_AWBURST;
  input [2:0] twiddle_h_rsc_0_14_AWSIZE;
  input [7:0] twiddle_h_rsc_0_14_AWLEN;
  input [11:0] twiddle_h_rsc_0_14_AWADDR;
  input twiddle_h_rsc_0_14_AWID;
  output twiddle_h_rsc_triosy_0_14_lz;
  input twiddle_h_rsc_0_15_s_tdone;
  input twiddle_h_rsc_0_15_tr_write_done;
  input twiddle_h_rsc_0_15_RREADY;
  output twiddle_h_rsc_0_15_RVALID;
  output twiddle_h_rsc_0_15_RUSER;
  output twiddle_h_rsc_0_15_RLAST;
  output [1:0] twiddle_h_rsc_0_15_RRESP;
  output [31:0] twiddle_h_rsc_0_15_RDATA;
  output twiddle_h_rsc_0_15_RID;
  output twiddle_h_rsc_0_15_ARREADY;
  input twiddle_h_rsc_0_15_ARVALID;
  input twiddle_h_rsc_0_15_ARUSER;
  input [3:0] twiddle_h_rsc_0_15_ARREGION;
  input [3:0] twiddle_h_rsc_0_15_ARQOS;
  input [2:0] twiddle_h_rsc_0_15_ARPROT;
  input [3:0] twiddle_h_rsc_0_15_ARCACHE;
  input twiddle_h_rsc_0_15_ARLOCK;
  input [1:0] twiddle_h_rsc_0_15_ARBURST;
  input [2:0] twiddle_h_rsc_0_15_ARSIZE;
  input [7:0] twiddle_h_rsc_0_15_ARLEN;
  input [11:0] twiddle_h_rsc_0_15_ARADDR;
  input twiddle_h_rsc_0_15_ARID;
  input twiddle_h_rsc_0_15_BREADY;
  output twiddle_h_rsc_0_15_BVALID;
  output twiddle_h_rsc_0_15_BUSER;
  output [1:0] twiddle_h_rsc_0_15_BRESP;
  output twiddle_h_rsc_0_15_BID;
  output twiddle_h_rsc_0_15_WREADY;
  input twiddle_h_rsc_0_15_WVALID;
  input twiddle_h_rsc_0_15_WUSER;
  input twiddle_h_rsc_0_15_WLAST;
  input [3:0] twiddle_h_rsc_0_15_WSTRB;
  input [31:0] twiddle_h_rsc_0_15_WDATA;
  output twiddle_h_rsc_0_15_AWREADY;
  input twiddle_h_rsc_0_15_AWVALID;
  input twiddle_h_rsc_0_15_AWUSER;
  input [3:0] twiddle_h_rsc_0_15_AWREGION;
  input [3:0] twiddle_h_rsc_0_15_AWQOS;
  input [2:0] twiddle_h_rsc_0_15_AWPROT;
  input [3:0] twiddle_h_rsc_0_15_AWCACHE;
  input twiddle_h_rsc_0_15_AWLOCK;
  input [1:0] twiddle_h_rsc_0_15_AWBURST;
  input [2:0] twiddle_h_rsc_0_15_AWSIZE;
  input [7:0] twiddle_h_rsc_0_15_AWLEN;
  input [11:0] twiddle_h_rsc_0_15_AWADDR;
  input twiddle_h_rsc_0_15_AWID;
  output twiddle_h_rsc_triosy_0_15_lz;
  output yt_rsc_0_0_i_clken_d;
  input [31:0] yt_rsc_0_0_i_q_d;
  input [31:0] yt_rsc_0_1_i_q_d;
  input [31:0] yt_rsc_0_2_i_q_d;
  input [31:0] yt_rsc_0_3_i_q_d;
  input [31:0] yt_rsc_0_4_i_q_d;
  input [31:0] yt_rsc_0_5_i_q_d;
  input [31:0] yt_rsc_0_6_i_q_d;
  input [31:0] yt_rsc_0_7_i_q_d;
  input [31:0] yt_rsc_0_8_i_q_d;
  input [31:0] yt_rsc_0_9_i_q_d;
  input [31:0] yt_rsc_0_10_i_q_d;
  input [31:0] yt_rsc_0_11_i_q_d;
  input [31:0] yt_rsc_0_12_i_q_d;
  input [31:0] yt_rsc_0_13_i_q_d;
  input [31:0] yt_rsc_0_14_i_q_d;
  input [31:0] yt_rsc_0_15_i_q_d;
  output yt_rsc_0_16_i_clken_d;
  input [31:0] yt_rsc_0_16_i_q_d;
  input [31:0] yt_rsc_0_17_i_q_d;
  input [31:0] yt_rsc_0_18_i_q_d;
  input [31:0] yt_rsc_0_19_i_q_d;
  input [31:0] yt_rsc_0_20_i_q_d;
  input [31:0] yt_rsc_0_21_i_q_d;
  input [31:0] yt_rsc_0_22_i_q_d;
  input [31:0] yt_rsc_0_23_i_q_d;
  input [31:0] yt_rsc_0_24_i_q_d;
  input [31:0] yt_rsc_0_25_i_q_d;
  input [31:0] yt_rsc_0_26_i_q_d;
  input [31:0] yt_rsc_0_27_i_q_d;
  input [31:0] yt_rsc_0_28_i_q_d;
  input [31:0] yt_rsc_0_29_i_q_d;
  input [31:0] yt_rsc_0_30_i_q_d;
  input [31:0] yt_rsc_0_31_i_q_d;
  output yt_rsc_1_0_i_clken_d;
  output [31:0] yt_rsc_1_0_i_d_d;
  input [31:0] yt_rsc_1_0_i_q_d;
  output [31:0] yt_rsc_1_1_i_d_d;
  input [31:0] yt_rsc_1_1_i_q_d;
  output [31:0] yt_rsc_1_2_i_d_d;
  input [31:0] yt_rsc_1_2_i_q_d;
  output [31:0] yt_rsc_1_3_i_d_d;
  input [31:0] yt_rsc_1_3_i_q_d;
  output [31:0] yt_rsc_1_4_i_d_d;
  input [31:0] yt_rsc_1_4_i_q_d;
  output [31:0] yt_rsc_1_5_i_d_d;
  input [31:0] yt_rsc_1_5_i_q_d;
  output [31:0] yt_rsc_1_6_i_d_d;
  input [31:0] yt_rsc_1_6_i_q_d;
  output [31:0] yt_rsc_1_7_i_d_d;
  input [31:0] yt_rsc_1_7_i_q_d;
  output [31:0] yt_rsc_1_8_i_d_d;
  input [31:0] yt_rsc_1_8_i_q_d;
  output [31:0] yt_rsc_1_9_i_d_d;
  input [31:0] yt_rsc_1_9_i_q_d;
  output [31:0] yt_rsc_1_10_i_d_d;
  input [31:0] yt_rsc_1_10_i_q_d;
  output [31:0] yt_rsc_1_11_i_d_d;
  input [31:0] yt_rsc_1_11_i_q_d;
  output [31:0] yt_rsc_1_12_i_d_d;
  input [31:0] yt_rsc_1_12_i_q_d;
  output [31:0] yt_rsc_1_13_i_d_d;
  input [31:0] yt_rsc_1_13_i_q_d;
  output [31:0] yt_rsc_1_14_i_d_d;
  input [31:0] yt_rsc_1_14_i_q_d;
  output [31:0] yt_rsc_1_15_i_d_d;
  input [31:0] yt_rsc_1_15_i_q_d;
  output yt_rsc_1_16_i_clken_d;
  output [31:0] yt_rsc_1_16_i_d_d;
  input [31:0] yt_rsc_1_16_i_q_d;
  output [31:0] yt_rsc_1_17_i_d_d;
  input [31:0] yt_rsc_1_17_i_q_d;
  output [31:0] yt_rsc_1_18_i_d_d;
  input [31:0] yt_rsc_1_18_i_q_d;
  output [31:0] yt_rsc_1_19_i_d_d;
  input [31:0] yt_rsc_1_19_i_q_d;
  output [31:0] yt_rsc_1_20_i_d_d;
  input [31:0] yt_rsc_1_20_i_q_d;
  output [31:0] yt_rsc_1_21_i_d_d;
  input [31:0] yt_rsc_1_21_i_q_d;
  output [31:0] yt_rsc_1_22_i_d_d;
  input [31:0] yt_rsc_1_22_i_q_d;
  output [31:0] yt_rsc_1_23_i_d_d;
  input [31:0] yt_rsc_1_23_i_q_d;
  output [31:0] yt_rsc_1_24_i_d_d;
  input [31:0] yt_rsc_1_24_i_q_d;
  output [31:0] yt_rsc_1_25_i_d_d;
  input [31:0] yt_rsc_1_25_i_q_d;
  output [31:0] yt_rsc_1_26_i_d_d;
  input [31:0] yt_rsc_1_26_i_q_d;
  output [31:0] yt_rsc_1_27_i_d_d;
  input [31:0] yt_rsc_1_27_i_q_d;
  output [31:0] yt_rsc_1_28_i_d_d;
  input [31:0] yt_rsc_1_28_i_q_d;
  output [31:0] yt_rsc_1_29_i_d_d;
  input [31:0] yt_rsc_1_29_i_q_d;
  output [31:0] yt_rsc_1_30_i_d_d;
  input [31:0] yt_rsc_1_30_i_q_d;
  output [31:0] yt_rsc_1_31_i_d_d;
  input [31:0] yt_rsc_1_31_i_q_d;
  output [31:0] yt_rsc_0_0_i_d_d_pff;
  output [3:0] yt_rsc_0_0_i_radr_d_pff;
  output [3:0] yt_rsc_0_0_i_wadr_d_pff;
  output yt_rsc_0_0_i_we_d_pff;
  output yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_pff;
  output [31:0] yt_rsc_0_1_i_d_d_pff;
  output [31:0] yt_rsc_0_2_i_d_d_pff;
  output [31:0] yt_rsc_0_3_i_d_d_pff;
  output [31:0] yt_rsc_0_4_i_d_d_pff;
  output [31:0] yt_rsc_0_5_i_d_d_pff;
  output [31:0] yt_rsc_0_6_i_d_d_pff;
  output [31:0] yt_rsc_0_7_i_d_d_pff;
  output [31:0] yt_rsc_0_8_i_d_d_pff;
  output [31:0] yt_rsc_0_9_i_d_d_pff;
  output [31:0] yt_rsc_0_10_i_d_d_pff;
  output [31:0] yt_rsc_0_11_i_d_d_pff;
  output [31:0] yt_rsc_0_12_i_d_d_pff;
  output [31:0] yt_rsc_0_13_i_d_d_pff;
  output [31:0] yt_rsc_0_14_i_d_d_pff;
  output [31:0] yt_rsc_0_15_i_d_d_pff;
  output [3:0] yt_rsc_0_16_i_wadr_d_pff;
  output yt_rsc_0_16_i_we_d_pff;
  output [3:0] yt_rsc_1_0_i_wadr_d_pff;
  output yt_rsc_1_0_i_we_d_pff;
  output yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_pff;
  output [3:0] yt_rsc_1_16_i_wadr_d_pff;
  output yt_rsc_1_16_i_we_d_pff;


  // Interconnect Declarations
  wire core_wen;
  wire [31:0] p_rsci_idat;
  wire core_wten;
  wire xt_rsc_0_0_i_wen_comp;
  wire xt_rsc_0_0_i_wen_comp_1;
  wire [31:0] xt_rsc_0_0_i_s_din_mxwt;
  wire xt_rsc_0_1_i_wen_comp;
  wire xt_rsc_0_1_i_wen_comp_1;
  wire [31:0] xt_rsc_0_1_i_s_din_mxwt;
  wire xt_rsc_0_2_i_wen_comp;
  wire xt_rsc_0_2_i_wen_comp_1;
  wire [31:0] xt_rsc_0_2_i_s_din_mxwt;
  wire xt_rsc_0_3_i_wen_comp;
  wire xt_rsc_0_3_i_wen_comp_1;
  wire [31:0] xt_rsc_0_3_i_s_din_mxwt;
  wire xt_rsc_0_4_i_wen_comp;
  wire xt_rsc_0_4_i_wen_comp_1;
  wire [31:0] xt_rsc_0_4_i_s_din_mxwt;
  wire xt_rsc_0_5_i_wen_comp;
  wire xt_rsc_0_5_i_wen_comp_1;
  wire [31:0] xt_rsc_0_5_i_s_din_mxwt;
  wire xt_rsc_0_6_i_wen_comp;
  wire xt_rsc_0_6_i_wen_comp_1;
  wire [31:0] xt_rsc_0_6_i_s_din_mxwt;
  wire xt_rsc_0_7_i_wen_comp;
  wire xt_rsc_0_7_i_wen_comp_1;
  wire [31:0] xt_rsc_0_7_i_s_din_mxwt;
  wire xt_rsc_0_8_i_wen_comp;
  wire xt_rsc_0_8_i_wen_comp_1;
  wire [31:0] xt_rsc_0_8_i_s_din_mxwt;
  wire xt_rsc_0_9_i_wen_comp;
  wire xt_rsc_0_9_i_wen_comp_1;
  wire [31:0] xt_rsc_0_9_i_s_din_mxwt;
  wire xt_rsc_0_10_i_wen_comp;
  wire xt_rsc_0_10_i_wen_comp_1;
  wire [31:0] xt_rsc_0_10_i_s_din_mxwt;
  wire xt_rsc_0_11_i_wen_comp;
  wire xt_rsc_0_11_i_wen_comp_1;
  wire [31:0] xt_rsc_0_11_i_s_din_mxwt;
  wire xt_rsc_0_12_i_wen_comp;
  wire xt_rsc_0_12_i_wen_comp_1;
  wire [31:0] xt_rsc_0_12_i_s_din_mxwt;
  wire xt_rsc_0_13_i_wen_comp;
  wire xt_rsc_0_13_i_wen_comp_1;
  wire [31:0] xt_rsc_0_13_i_s_din_mxwt;
  wire xt_rsc_0_14_i_wen_comp;
  wire xt_rsc_0_14_i_wen_comp_1;
  wire [31:0] xt_rsc_0_14_i_s_din_mxwt;
  wire xt_rsc_0_15_i_wen_comp;
  wire xt_rsc_0_15_i_wen_comp_1;
  wire [31:0] xt_rsc_0_15_i_s_din_mxwt;
  wire xt_rsc_0_16_i_wen_comp;
  wire xt_rsc_0_16_i_wen_comp_1;
  wire [31:0] xt_rsc_0_16_i_s_din_mxwt;
  wire xt_rsc_0_17_i_wen_comp;
  wire xt_rsc_0_17_i_wen_comp_1;
  wire [31:0] xt_rsc_0_17_i_s_din_mxwt;
  wire xt_rsc_0_18_i_wen_comp;
  wire xt_rsc_0_18_i_wen_comp_1;
  wire [31:0] xt_rsc_0_18_i_s_din_mxwt;
  wire xt_rsc_0_19_i_wen_comp;
  wire xt_rsc_0_19_i_wen_comp_1;
  wire [31:0] xt_rsc_0_19_i_s_din_mxwt;
  wire xt_rsc_0_20_i_wen_comp;
  wire xt_rsc_0_20_i_wen_comp_1;
  wire [31:0] xt_rsc_0_20_i_s_din_mxwt;
  wire xt_rsc_0_21_i_wen_comp;
  wire xt_rsc_0_21_i_wen_comp_1;
  wire [31:0] xt_rsc_0_21_i_s_din_mxwt;
  wire xt_rsc_0_22_i_wen_comp;
  wire xt_rsc_0_22_i_wen_comp_1;
  wire [31:0] xt_rsc_0_22_i_s_din_mxwt;
  wire xt_rsc_0_23_i_wen_comp;
  wire xt_rsc_0_23_i_wen_comp_1;
  wire [31:0] xt_rsc_0_23_i_s_din_mxwt;
  wire xt_rsc_0_24_i_wen_comp;
  wire xt_rsc_0_24_i_wen_comp_1;
  wire [31:0] xt_rsc_0_24_i_s_din_mxwt;
  wire xt_rsc_0_25_i_wen_comp;
  wire xt_rsc_0_25_i_wen_comp_1;
  wire [31:0] xt_rsc_0_25_i_s_din_mxwt;
  wire xt_rsc_0_26_i_wen_comp;
  wire xt_rsc_0_26_i_wen_comp_1;
  wire [31:0] xt_rsc_0_26_i_s_din_mxwt;
  wire xt_rsc_0_27_i_wen_comp;
  wire xt_rsc_0_27_i_wen_comp_1;
  wire [31:0] xt_rsc_0_27_i_s_din_mxwt;
  wire xt_rsc_0_28_i_wen_comp;
  wire xt_rsc_0_28_i_wen_comp_1;
  wire [31:0] xt_rsc_0_28_i_s_din_mxwt;
  wire xt_rsc_0_29_i_wen_comp;
  wire xt_rsc_0_29_i_wen_comp_1;
  wire [31:0] xt_rsc_0_29_i_s_din_mxwt;
  wire xt_rsc_0_30_i_wen_comp;
  wire xt_rsc_0_30_i_wen_comp_1;
  wire [31:0] xt_rsc_0_30_i_s_din_mxwt;
  wire xt_rsc_0_31_i_wen_comp;
  wire xt_rsc_0_31_i_wen_comp_1;
  wire [31:0] xt_rsc_0_31_i_s_din_mxwt;
  wire xt_rsc_1_0_i_wen_comp;
  wire xt_rsc_1_0_i_wen_comp_1;
  wire [31:0] xt_rsc_1_0_i_s_din_mxwt;
  wire xt_rsc_1_1_i_wen_comp;
  wire xt_rsc_1_1_i_wen_comp_1;
  wire [31:0] xt_rsc_1_1_i_s_din_mxwt;
  wire xt_rsc_1_2_i_wen_comp;
  wire xt_rsc_1_2_i_wen_comp_1;
  wire [31:0] xt_rsc_1_2_i_s_din_mxwt;
  wire xt_rsc_1_3_i_wen_comp;
  wire xt_rsc_1_3_i_wen_comp_1;
  wire [31:0] xt_rsc_1_3_i_s_din_mxwt;
  wire xt_rsc_1_4_i_wen_comp;
  wire xt_rsc_1_4_i_wen_comp_1;
  wire [31:0] xt_rsc_1_4_i_s_din_mxwt;
  wire xt_rsc_1_5_i_wen_comp;
  wire xt_rsc_1_5_i_wen_comp_1;
  wire [31:0] xt_rsc_1_5_i_s_din_mxwt;
  wire xt_rsc_1_6_i_wen_comp;
  wire xt_rsc_1_6_i_wen_comp_1;
  wire [31:0] xt_rsc_1_6_i_s_din_mxwt;
  wire xt_rsc_1_7_i_wen_comp;
  wire xt_rsc_1_7_i_wen_comp_1;
  wire [31:0] xt_rsc_1_7_i_s_din_mxwt;
  wire xt_rsc_1_8_i_wen_comp;
  wire xt_rsc_1_8_i_wen_comp_1;
  wire [31:0] xt_rsc_1_8_i_s_din_mxwt;
  wire xt_rsc_1_9_i_wen_comp;
  wire xt_rsc_1_9_i_wen_comp_1;
  wire [31:0] xt_rsc_1_9_i_s_din_mxwt;
  wire xt_rsc_1_10_i_wen_comp;
  wire xt_rsc_1_10_i_wen_comp_1;
  wire [31:0] xt_rsc_1_10_i_s_din_mxwt;
  wire xt_rsc_1_11_i_wen_comp;
  wire xt_rsc_1_11_i_wen_comp_1;
  wire [31:0] xt_rsc_1_11_i_s_din_mxwt;
  wire xt_rsc_1_12_i_wen_comp;
  wire xt_rsc_1_12_i_wen_comp_1;
  wire [31:0] xt_rsc_1_12_i_s_din_mxwt;
  wire xt_rsc_1_13_i_wen_comp;
  wire xt_rsc_1_13_i_wen_comp_1;
  wire [31:0] xt_rsc_1_13_i_s_din_mxwt;
  wire xt_rsc_1_14_i_wen_comp;
  wire xt_rsc_1_14_i_wen_comp_1;
  wire [31:0] xt_rsc_1_14_i_s_din_mxwt;
  wire xt_rsc_1_15_i_wen_comp;
  wire xt_rsc_1_15_i_wen_comp_1;
  wire [31:0] xt_rsc_1_15_i_s_din_mxwt;
  wire xt_rsc_1_16_i_wen_comp;
  wire xt_rsc_1_16_i_wen_comp_1;
  wire [31:0] xt_rsc_1_16_i_s_din_mxwt;
  wire xt_rsc_1_17_i_wen_comp;
  wire xt_rsc_1_17_i_wen_comp_1;
  wire [31:0] xt_rsc_1_17_i_s_din_mxwt;
  wire xt_rsc_1_18_i_wen_comp;
  wire xt_rsc_1_18_i_wen_comp_1;
  wire [31:0] xt_rsc_1_18_i_s_din_mxwt;
  wire xt_rsc_1_19_i_wen_comp;
  wire xt_rsc_1_19_i_wen_comp_1;
  wire [31:0] xt_rsc_1_19_i_s_din_mxwt;
  wire xt_rsc_1_20_i_wen_comp;
  wire xt_rsc_1_20_i_wen_comp_1;
  wire [31:0] xt_rsc_1_20_i_s_din_mxwt;
  wire xt_rsc_1_21_i_wen_comp;
  wire xt_rsc_1_21_i_wen_comp_1;
  wire [31:0] xt_rsc_1_21_i_s_din_mxwt;
  wire xt_rsc_1_22_i_wen_comp;
  wire xt_rsc_1_22_i_wen_comp_1;
  wire [31:0] xt_rsc_1_22_i_s_din_mxwt;
  wire xt_rsc_1_23_i_wen_comp;
  wire xt_rsc_1_23_i_wen_comp_1;
  wire [31:0] xt_rsc_1_23_i_s_din_mxwt;
  wire xt_rsc_1_24_i_wen_comp;
  wire xt_rsc_1_24_i_wen_comp_1;
  wire [31:0] xt_rsc_1_24_i_s_din_mxwt;
  wire xt_rsc_1_25_i_wen_comp;
  wire xt_rsc_1_25_i_wen_comp_1;
  wire [31:0] xt_rsc_1_25_i_s_din_mxwt;
  wire xt_rsc_1_26_i_wen_comp;
  wire xt_rsc_1_26_i_wen_comp_1;
  wire [31:0] xt_rsc_1_26_i_s_din_mxwt;
  wire xt_rsc_1_27_i_wen_comp;
  wire xt_rsc_1_27_i_wen_comp_1;
  wire [31:0] xt_rsc_1_27_i_s_din_mxwt;
  wire xt_rsc_1_28_i_wen_comp;
  wire xt_rsc_1_28_i_wen_comp_1;
  wire [31:0] xt_rsc_1_28_i_s_din_mxwt;
  wire xt_rsc_1_29_i_wen_comp;
  wire xt_rsc_1_29_i_wen_comp_1;
  wire [31:0] xt_rsc_1_29_i_s_din_mxwt;
  wire xt_rsc_1_30_i_wen_comp;
  wire xt_rsc_1_30_i_wen_comp_1;
  wire [31:0] xt_rsc_1_30_i_s_din_mxwt;
  wire xt_rsc_1_31_i_wen_comp;
  wire xt_rsc_1_31_i_wen_comp_1;
  wire [31:0] xt_rsc_1_31_i_s_din_mxwt;
  wire twiddle_rsc_0_0_i_wen_comp;
  wire [31:0] twiddle_rsc_0_0_i_s_din_mxwt;
  wire twiddle_rsc_0_1_i_wen_comp;
  wire [31:0] twiddle_rsc_0_1_i_s_din_mxwt;
  wire twiddle_rsc_0_2_i_wen_comp;
  wire [31:0] twiddle_rsc_0_2_i_s_din_mxwt;
  wire twiddle_rsc_0_3_i_wen_comp;
  wire [31:0] twiddle_rsc_0_3_i_s_din_mxwt;
  wire twiddle_rsc_0_4_i_wen_comp;
  wire [31:0] twiddle_rsc_0_4_i_s_din_mxwt;
  wire twiddle_rsc_0_5_i_wen_comp;
  wire [31:0] twiddle_rsc_0_5_i_s_din_mxwt;
  wire twiddle_rsc_0_6_i_wen_comp;
  wire [31:0] twiddle_rsc_0_6_i_s_din_mxwt;
  wire twiddle_rsc_0_7_i_wen_comp;
  wire [31:0] twiddle_rsc_0_7_i_s_din_mxwt;
  wire twiddle_rsc_0_8_i_wen_comp;
  wire [31:0] twiddle_rsc_0_8_i_s_din_mxwt;
  wire twiddle_rsc_0_9_i_wen_comp;
  wire [31:0] twiddle_rsc_0_9_i_s_din_mxwt;
  wire twiddle_rsc_0_10_i_wen_comp;
  wire [31:0] twiddle_rsc_0_10_i_s_din_mxwt;
  wire twiddle_rsc_0_11_i_wen_comp;
  wire [31:0] twiddle_rsc_0_11_i_s_din_mxwt;
  wire twiddle_rsc_0_12_i_wen_comp;
  wire [31:0] twiddle_rsc_0_12_i_s_din_mxwt;
  wire twiddle_rsc_0_13_i_wen_comp;
  wire [31:0] twiddle_rsc_0_13_i_s_din_mxwt;
  wire twiddle_rsc_0_14_i_wen_comp;
  wire [31:0] twiddle_rsc_0_14_i_s_din_mxwt;
  wire twiddle_rsc_0_15_i_wen_comp;
  wire [31:0] twiddle_rsc_0_15_i_s_din_mxwt;
  wire twiddle_h_rsc_0_0_i_wen_comp;
  wire [31:0] twiddle_h_rsc_0_0_i_s_din_mxwt;
  wire twiddle_h_rsc_0_1_i_wen_comp;
  wire [31:0] twiddle_h_rsc_0_1_i_s_din_mxwt;
  wire twiddle_h_rsc_0_2_i_wen_comp;
  wire [31:0] twiddle_h_rsc_0_2_i_s_din_mxwt;
  wire twiddle_h_rsc_0_3_i_wen_comp;
  wire [31:0] twiddle_h_rsc_0_3_i_s_din_mxwt;
  wire twiddle_h_rsc_0_4_i_wen_comp;
  wire [31:0] twiddle_h_rsc_0_4_i_s_din_mxwt;
  wire twiddle_h_rsc_0_5_i_wen_comp;
  wire [31:0] twiddle_h_rsc_0_5_i_s_din_mxwt;
  wire twiddle_h_rsc_0_6_i_wen_comp;
  wire [31:0] twiddle_h_rsc_0_6_i_s_din_mxwt;
  wire twiddle_h_rsc_0_7_i_wen_comp;
  wire [31:0] twiddle_h_rsc_0_7_i_s_din_mxwt;
  wire twiddle_h_rsc_0_8_i_wen_comp;
  wire [31:0] twiddle_h_rsc_0_8_i_s_din_mxwt;
  wire twiddle_h_rsc_0_9_i_wen_comp;
  wire [31:0] twiddle_h_rsc_0_9_i_s_din_mxwt;
  wire twiddle_h_rsc_0_10_i_wen_comp;
  wire [31:0] twiddle_h_rsc_0_10_i_s_din_mxwt;
  wire twiddle_h_rsc_0_11_i_wen_comp;
  wire [31:0] twiddle_h_rsc_0_11_i_s_din_mxwt;
  wire twiddle_h_rsc_0_12_i_wen_comp;
  wire [31:0] twiddle_h_rsc_0_12_i_s_din_mxwt;
  wire twiddle_h_rsc_0_13_i_wen_comp;
  wire [31:0] twiddle_h_rsc_0_13_i_s_din_mxwt;
  wire twiddle_h_rsc_0_14_i_wen_comp;
  wire [31:0] twiddle_h_rsc_0_14_i_s_din_mxwt;
  wire twiddle_h_rsc_0_15_i_wen_comp;
  wire [31:0] twiddle_h_rsc_0_15_i_s_din_mxwt;
  wire mult_t_mul_cmp_en;
  wire [51:0] mult_t_mul_cmp_z;
  wire [51:0] mult_t_mul_cmp_1_z;
  wire [51:0] mult_t_mul_cmp_2_z;
  wire [51:0] mult_t_mul_cmp_3_z;
  wire [51:0] mult_t_mul_cmp_4_z;
  wire [51:0] mult_t_mul_cmp_5_z;
  wire [51:0] mult_t_mul_cmp_6_z;
  wire [51:0] mult_t_mul_cmp_7_z;
  wire [51:0] mult_t_mul_cmp_8_z;
  wire [51:0] mult_t_mul_cmp_9_z;
  wire [51:0] mult_t_mul_cmp_10_z;
  wire [51:0] mult_t_mul_cmp_11_z;
  wire [51:0] mult_t_mul_cmp_12_z;
  wire [51:0] mult_t_mul_cmp_13_z;
  wire [51:0] mult_t_mul_cmp_14_z;
  wire [51:0] mult_t_mul_cmp_15_z;
  wire [31:0] mult_z_mul_cmp_z;
  wire mult_z_mul_cmp_1_en;
  wire [31:0] mult_z_mul_cmp_1_z;
  wire [31:0] mult_z_mul_cmp_2_z;
  wire [31:0] mult_z_mul_cmp_3_z;
  wire [31:0] mult_z_mul_cmp_4_z;
  wire [31:0] mult_z_mul_cmp_5_z;
  wire [31:0] mult_z_mul_cmp_6_z;
  wire [31:0] mult_z_mul_cmp_7_z;
  wire [31:0] mult_z_mul_cmp_8_z;
  wire [31:0] mult_z_mul_cmp_9_z;
  wire [31:0] mult_z_mul_cmp_10_z;
  wire [31:0] mult_z_mul_cmp_11_z;
  wire [31:0] mult_z_mul_cmp_12_z;
  wire [31:0] mult_z_mul_cmp_13_z;
  wire [31:0] mult_z_mul_cmp_14_z;
  wire [31:0] mult_z_mul_cmp_15_z;
  wire [31:0] mult_z_mul_cmp_16_z;
  wire [31:0] mult_z_mul_cmp_17_z;
  wire [31:0] mult_z_mul_cmp_18_z;
  wire [31:0] mult_z_mul_cmp_19_z;
  wire [31:0] mult_z_mul_cmp_20_z;
  wire [31:0] mult_z_mul_cmp_21_z;
  wire [31:0] mult_z_mul_cmp_22_z;
  wire [31:0] mult_z_mul_cmp_23_z;
  wire [31:0] mult_z_mul_cmp_24_z;
  wire [31:0] mult_z_mul_cmp_25_z;
  wire [31:0] mult_z_mul_cmp_26_z;
  wire [31:0] mult_z_mul_cmp_27_z;
  wire [31:0] mult_z_mul_cmp_28_z;
  wire [31:0] mult_z_mul_cmp_29_z;
  wire [31:0] mult_z_mul_cmp_30_z;
  wire [31:0] mult_z_mul_cmp_31_z;
  reg twiddle_h_rsc_0_0_i_s_raddr_core_4;
  wire [9:0] fsm_output;
  wire INNER_LOOP4_nor_tmp;
  wire INNER_LOOP2_nor_tmp;
  wire INNER_LOOP1_nor_tmp;
  wire and_dcpl_139;
  wire and_dcpl_142;
  wire and_dcpl_144;
  wire and_dcpl_146;
  wire and_dcpl_148;
  wire and_dcpl_150;
  wire and_dcpl_152;
  wire and_dcpl_153;
  wire and_dcpl_154;
  wire and_dcpl_156;
  wire and_dcpl_158;
  wire and_dcpl_159;
  wire and_dcpl_160;
  wire and_dcpl_169;
  wire and_dcpl_170;
  wire and_dcpl_171;
  wire or_dcpl_29;
  wire or_tmp_418;
  wire or_tmp_420;
  wire or_tmp_426;
  wire or_tmp_428;
  wire or_tmp_441;
  wire or_tmp_449;
  wire or_tmp_502;
  wire or_tmp_509;
  wire and_247_cse;
  wire and_248_cse;
  wire and_460_cse;
  wire and_461_cse;
  wire and_897_cse;
  wire and_906_cse;
  wire and_915_cse;
  wire and_1140_cse;
  wire and_1155_cse;
  wire and_1159_cse;
  wire and_1189_cse;
  wire and_1205_cse;
  reg [4:0] INNER_LOOP4_r_9_4_sva_4_0;
  reg [31:0] tmp_62_lpi_3_dfm_8;
  wire [31:0] mult_63_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_60_lpi_3_dfm_8;
  wire [31:0] mult_62_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_58_lpi_3_dfm_8;
  wire [31:0] mult_61_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_56_lpi_3_dfm_8;
  wire [31:0] mult_60_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_54_lpi_3_dfm_8;
  wire [31:0] mult_59_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_52_lpi_3_dfm_8;
  wire [31:0] mult_58_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_50_lpi_3_dfm_8;
  wire [31:0] mult_57_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_48_lpi_3_dfm_8;
  wire [31:0] mult_56_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_46_lpi_3_dfm_8;
  wire [31:0] mult_55_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_44_lpi_3_dfm_8;
  wire [31:0] mult_54_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_42_lpi_3_dfm_8;
  wire [31:0] mult_53_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_40_lpi_3_dfm_8;
  wire [31:0] mult_52_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_38_lpi_3_dfm_8;
  wire [31:0] mult_51_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_36_lpi_3_dfm_8;
  wire [31:0] mult_50_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_34_lpi_3_dfm_8;
  wire [31:0] mult_49_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_32_lpi_3_dfm_8;
  wire [31:0] mult_48_res_lpi_3_dfm_mx0;
  reg [4:0] INNER_LOOP3_r_9_4_sva_4_0;
  reg [31:0] tmp_126_lpi_3_dfm_8;
  wire [31:0] mult_47_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_124_lpi_3_dfm_8;
  wire [31:0] mult_46_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_122_lpi_3_dfm_8;
  wire [31:0] mult_45_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_120_lpi_3_dfm_8;
  wire [31:0] mult_44_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_118_lpi_3_dfm_8;
  wire [31:0] mult_43_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_116_lpi_3_dfm_8;
  wire [31:0] mult_42_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_114_lpi_3_dfm_8;
  wire [31:0] mult_41_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_112_lpi_3_dfm_8;
  wire [31:0] mult_40_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_110_lpi_3_dfm_8;
  wire [31:0] mult_39_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_108_lpi_3_dfm_8;
  wire [31:0] mult_38_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_106_lpi_3_dfm_8;
  wire [31:0] mult_37_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_104_lpi_3_dfm_8;
  wire [31:0] mult_36_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_102_lpi_3_dfm_8;
  wire [31:0] mult_35_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_100_lpi_3_dfm_8;
  wire [31:0] mult_34_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_98_lpi_3_dfm_8;
  wire [31:0] mult_33_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_96_lpi_3_dfm_8;
  wire [31:0] mult_32_res_lpi_3_dfm_mx0;
  reg [4:0] INNER_LOOP2_r_9_4_sva_4_0;
  reg [31:0] tmp_30_lpi_3_dfm_8;
  wire [31:0] mult_31_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_28_lpi_3_dfm_8;
  wire [31:0] mult_30_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_26_lpi_3_dfm_8;
  wire [31:0] mult_29_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_24_lpi_3_dfm_8;
  wire [31:0] mult_28_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_22_lpi_3_dfm_8;
  wire [31:0] mult_27_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_20_lpi_3_dfm_8;
  wire [31:0] mult_26_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_18_lpi_3_dfm_8;
  wire [31:0] mult_25_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_16_lpi_3_dfm_8;
  wire [31:0] mult_24_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_14_lpi_3_dfm_8;
  wire [31:0] mult_23_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_12_lpi_3_dfm_8;
  wire [31:0] mult_22_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_10_lpi_3_dfm_8;
  wire [31:0] mult_21_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_8_lpi_3_dfm_8;
  wire [31:0] mult_20_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_6_lpi_3_dfm_8;
  wire [31:0] mult_19_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_4_lpi_3_dfm_8;
  wire [31:0] mult_18_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_2_lpi_3_dfm_8;
  wire [31:0] mult_17_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_lpi_3_dfm_8;
  wire [31:0] mult_16_res_lpi_3_dfm_mx0;
  reg [4:0] INNER_LOOP1_r_9_4_sva_4_0;
  reg [31:0] tmp_94_lpi_3_dfm_8;
  wire [31:0] mult_15_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_92_lpi_3_dfm_8;
  wire [31:0] mult_14_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_90_lpi_3_dfm_8;
  wire [31:0] mult_13_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_88_lpi_3_dfm_8;
  wire [31:0] mult_12_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_86_lpi_3_dfm_8;
  wire [31:0] mult_11_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_84_lpi_3_dfm_8;
  wire [31:0] mult_10_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_82_lpi_3_dfm_8;
  wire [31:0] mult_9_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_80_lpi_3_dfm_8;
  wire [31:0] mult_8_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_78_lpi_3_dfm_8;
  wire [31:0] mult_7_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_76_lpi_3_dfm_8;
  wire [31:0] mult_6_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_74_lpi_3_dfm_8;
  wire [31:0] mult_5_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_72_lpi_3_dfm_8;
  wire [31:0] mult_4_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_70_lpi_3_dfm_8;
  wire [31:0] mult_3_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_68_lpi_3_dfm_8;
  wire [31:0] mult_2_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_66_lpi_3_dfm_8;
  wire [31:0] mult_1_res_lpi_3_dfm_mx0;
  reg [31:0] tmp_64_lpi_3_dfm_8;
  wire [31:0] mult_res_lpi_3_dfm_mx0;
  reg [1:0] butterFly2_19_tw_asn_itm;
  reg c_1_sva;
  reg INNER_LOOP1_stage_0_12;
  reg INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_10;
  reg INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_9;
  reg INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_8;
  reg INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_7;
  reg INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_6;
  reg INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_5;
  reg INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_4;
  reg INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_3;
  reg INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_2;
  reg INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_1;
  reg INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm;
  reg INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_9;
  reg INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_8;
  reg INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_7;
  reg INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_6;
  reg INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_5;
  reg INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_4;
  reg INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_3;
  reg INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_2;
  reg INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_1;
  reg INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm;
  reg INNER_LOOP3_stage_0_12;
  reg INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_10;
  reg INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_9;
  reg INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_8;
  reg INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_7;
  reg INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_6;
  reg INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_5;
  reg INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_4;
  reg INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_3;
  reg INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_2;
  reg INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_1;
  reg INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm;
  reg c_1_sva_1;
  reg INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_9;
  reg INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_8;
  reg INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_7;
  reg INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_6;
  reg INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_5;
  reg INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_4;
  reg INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_3;
  reg INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_2;
  reg INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_1;
  reg INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm;
  reg INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_191_itm_12;
  reg INNER_LOOP3_stage_0_13;
  reg INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_11;
  reg INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_160_itm_12;
  reg INNER_LOOP1_stage_0_13;
  reg INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_11;
  reg INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4302_itm_1;
  reg INNER_LOOP2_stage_0_2;
  reg INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4377_itm_1;
  reg INNER_LOOP4_stage_0_2;
  reg INNER_LOOP3_stage_0;
  reg INNER_LOOP1_stage_0;
  reg INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_10;
  reg INNER_LOOP2_stage_0_11;
  reg INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_10;
  reg INNER_LOOP4_stage_0_11;
  reg [2:0] operator_33_true_2_lshift_psp_2_0_sva;
  reg [1:0] operator_33_true_3_lshift_psp_1_0_sva;
  reg INNER_LOOP4_stage_0;
  reg INNER_LOOP3_stage_0_2;
  reg INNER_LOOP3_stage_0_4;
  reg INNER_LOOP3_stage_0_3;
  reg INNER_LOOP1_stage_0_3;
  reg INNER_LOOP1_stage_0_4;
  reg INNER_LOOP1_stage_0_2;
  reg INNER_LOOP2_stage_0_3;
  reg INNER_LOOP2_stage_0_4;
  reg INNER_LOOP4_stage_0_4;
  reg INNER_LOOP4_stage_0_3;
  reg INNER_LOOP3_stage_0_5;
  reg INNER_LOOP3_stage_0_6;
  reg INNER_LOOP3_stage_0_7;
  reg INNER_LOOP1_stage_0_5;
  reg INNER_LOOP1_stage_0_6;
  reg INNER_LOOP1_stage_0_7;
  reg INNER_LOOP2_stage_0_6;
  reg INNER_LOOP2_stage_0_7;
  reg INNER_LOOP2_stage_0_5;
  reg INNER_LOOP4_stage_0_5;
  reg INNER_LOOP4_stage_0_7;
  reg INNER_LOOP4_stage_0_6;
  reg INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1;
  reg [31:0] modulo_sub_base_sva_1;
  wire [32:0] nl_modulo_sub_base_sva_1;
  reg [31:0] modulo_sub_base_1_sva_1;
  wire [32:0] nl_modulo_sub_base_1_sva_1;
  reg [31:0] modulo_sub_base_2_sva_1;
  wire [32:0] nl_modulo_sub_base_2_sva_1;
  reg [31:0] modulo_sub_base_3_sva_1;
  wire [32:0] nl_modulo_sub_base_3_sva_1;
  reg [31:0] modulo_sub_base_4_sva_1;
  wire [32:0] nl_modulo_sub_base_4_sva_1;
  reg [31:0] modulo_sub_base_5_sva_1;
  wire [32:0] nl_modulo_sub_base_5_sva_1;
  reg [31:0] modulo_sub_base_6_sva_1;
  reg [31:0] modulo_sub_base_7_sva_1;
  wire [32:0] nl_modulo_sub_base_7_sva_1;
  reg [31:0] modulo_sub_base_8_sva_1;
  wire [32:0] nl_modulo_sub_base_8_sva_1;
  reg [31:0] modulo_sub_base_9_sva_1;
  wire [32:0] nl_modulo_sub_base_9_sva_1;
  reg [31:0] modulo_sub_base_10_sva_1;
  wire [32:0] nl_modulo_sub_base_10_sva_1;
  reg [31:0] modulo_sub_base_11_sva_1;
  wire [32:0] nl_modulo_sub_base_11_sva_1;
  reg [31:0] modulo_sub_base_12_sva_1;
  wire [32:0] nl_modulo_sub_base_12_sva_1;
  reg [31:0] modulo_sub_base_13_sva_1;
  wire [32:0] nl_modulo_sub_base_13_sva_1;
  reg [31:0] modulo_sub_base_14_sva_1;
  wire [32:0] nl_modulo_sub_base_14_sva_1;
  reg [31:0] modulo_sub_base_15_sva_1;
  wire [32:0] nl_modulo_sub_base_15_sva_1;
  reg mult_15_slc_32_svs_st_1;
  reg mult_14_slc_32_svs_st_1;
  reg mult_13_slc_32_svs_st_1;
  reg mult_12_slc_32_svs_st_1;
  reg mult_11_slc_32_svs_st_1;
  reg mult_10_slc_32_svs_st_1;
  reg mult_9_slc_32_svs_st_1;
  reg mult_8_slc_32_svs_st_1;
  reg mult_7_slc_32_svs_st_1;
  reg mult_6_slc_32_svs_st_1;
  reg mult_5_slc_32_svs_st_1;
  reg mult_4_slc_32_svs_st_1;
  reg mult_3_slc_32_svs_st_1;
  reg mult_2_slc_32_svs_st_1;
  reg mult_1_slc_32_svs_st_1;
  reg mult_slc_32_svs_st_1;
  reg INNER_LOOP2_stage_0;
  reg [31:0] modulo_sub_base_16_sva_1;
  wire [32:0] nl_modulo_sub_base_16_sva_1;
  reg [31:0] modulo_sub_base_17_sva_1;
  wire [32:0] nl_modulo_sub_base_17_sva_1;
  reg [31:0] modulo_sub_base_18_sva_1;
  wire [32:0] nl_modulo_sub_base_18_sva_1;
  reg [31:0] modulo_sub_base_19_sva_1;
  wire [32:0] nl_modulo_sub_base_19_sva_1;
  reg [31:0] modulo_sub_base_20_sva_1;
  wire [32:0] nl_modulo_sub_base_20_sva_1;
  reg [31:0] modulo_sub_base_21_sva_1;
  wire [32:0] nl_modulo_sub_base_21_sva_1;
  reg [31:0] modulo_sub_base_22_sva_1;
  reg [31:0] modulo_sub_base_23_sva_1;
  reg [31:0] modulo_sub_base_24_sva_1;
  reg [31:0] modulo_sub_base_25_sva_1;
  reg [31:0] modulo_sub_base_26_sva_1;
  reg [31:0] modulo_sub_base_27_sva_1;
  wire [32:0] nl_modulo_sub_base_27_sva_1;
  reg [31:0] modulo_sub_base_28_sva_1;
  wire [32:0] nl_modulo_sub_base_28_sva_1;
  reg [31:0] modulo_sub_base_29_sva_1;
  wire [32:0] nl_modulo_sub_base_29_sva_1;
  reg [31:0] modulo_sub_base_30_sva_1;
  wire [32:0] nl_modulo_sub_base_30_sva_1;
  reg [31:0] modulo_sub_base_31_sva_1;
  wire [32:0] nl_modulo_sub_base_31_sva_1;
  reg mult_31_slc_32_svs_st_1;
  reg mult_30_slc_32_svs_st_1;
  reg mult_29_slc_32_svs_st_1;
  reg mult_28_slc_32_svs_st_1;
  reg mult_27_slc_32_svs_st_1;
  reg mult_26_slc_32_svs_st_1;
  reg mult_25_slc_32_svs_st_1;
  reg mult_24_slc_32_svs_st_1;
  reg mult_23_slc_32_svs_st_1;
  reg mult_22_slc_32_svs_st_1;
  reg mult_21_slc_32_svs_st_1;
  reg mult_20_slc_32_svs_st_1;
  reg mult_19_slc_32_svs_st_1;
  reg mult_18_slc_32_svs_st_1;
  reg mult_17_slc_32_svs_st_1;
  reg mult_16_slc_32_svs_st_1;
  reg [31:0] modulo_sub_base_32_sva_1;
  reg [31:0] modulo_sub_base_33_sva_1;
  reg [31:0] modulo_sub_base_34_sva_1;
  reg [31:0] modulo_sub_base_35_sva_1;
  reg [31:0] modulo_sub_base_36_sva_1;
  reg [31:0] modulo_sub_base_37_sva_1;
  reg [31:0] modulo_sub_base_38_sva_1;
  reg [31:0] modulo_sub_base_39_sva_1;
  wire [32:0] nl_modulo_sub_base_39_sva_1;
  reg [31:0] modulo_sub_base_40_sva_1;
  wire [32:0] nl_modulo_sub_base_40_sva_1;
  reg [31:0] modulo_sub_base_41_sva_1;
  wire [32:0] nl_modulo_sub_base_41_sva_1;
  reg [31:0] modulo_sub_base_42_sva_1;
  wire [32:0] nl_modulo_sub_base_42_sva_1;
  reg [31:0] modulo_sub_base_43_sva_1;
  wire [32:0] nl_modulo_sub_base_43_sva_1;
  reg [31:0] modulo_sub_base_44_sva_1;
  wire [32:0] nl_modulo_sub_base_44_sva_1;
  reg [31:0] modulo_sub_base_45_sva_1;
  wire [32:0] nl_modulo_sub_base_45_sva_1;
  reg [31:0] modulo_sub_base_46_sva_1;
  wire [32:0] nl_modulo_sub_base_46_sva_1;
  reg [31:0] modulo_sub_base_47_sva_1;
  wire [32:0] nl_modulo_sub_base_47_sva_1;
  reg mult_47_slc_32_svs_st_1;
  reg mult_46_slc_32_svs_st_1;
  reg mult_45_slc_32_svs_st_1;
  reg mult_44_slc_32_svs_st_1;
  reg mult_43_slc_32_svs_st_1;
  reg mult_42_slc_32_svs_st_1;
  reg mult_41_slc_32_svs_st_1;
  reg mult_40_slc_32_svs_st_1;
  reg mult_39_slc_32_svs_st_1;
  reg mult_38_slc_32_svs_st_1;
  reg mult_37_slc_32_svs_st_1;
  reg mult_36_slc_32_svs_st_1;
  reg mult_35_slc_32_svs_st_1;
  reg mult_34_slc_32_svs_st_1;
  reg mult_33_slc_32_svs_st_1;
  reg mult_32_slc_32_svs_st_1;
  reg [31:0] modulo_sub_base_48_sva_1;
  reg [31:0] modulo_sub_base_49_sva_1;
  reg [31:0] modulo_sub_base_50_sva_1;
  reg [31:0] modulo_sub_base_51_sva_1;
  reg [31:0] modulo_sub_base_52_sva_1;
  reg [31:0] modulo_sub_base_53_sva_1;
  reg [31:0] modulo_sub_base_54_sva_1;
  wire [32:0] nl_modulo_sub_base_54_sva_1;
  reg [31:0] modulo_sub_base_55_sva_1;
  wire [32:0] nl_modulo_sub_base_55_sva_1;
  reg [31:0] modulo_sub_base_56_sva_1;
  wire [32:0] nl_modulo_sub_base_56_sva_1;
  reg [31:0] modulo_sub_base_57_sva_1;
  wire [32:0] nl_modulo_sub_base_57_sva_1;
  reg [31:0] modulo_sub_base_58_sva_1;
  wire [32:0] nl_modulo_sub_base_58_sva_1;
  reg [31:0] modulo_sub_base_59_sva_1;
  wire [32:0] nl_modulo_sub_base_59_sva_1;
  reg [31:0] modulo_sub_base_60_sva_1;
  wire [32:0] nl_modulo_sub_base_60_sva_1;
  reg [31:0] modulo_sub_base_61_sva_1;
  wire [32:0] nl_modulo_sub_base_61_sva_1;
  reg [31:0] modulo_sub_base_62_sva_1;
  wire [32:0] nl_modulo_sub_base_62_sva_1;
  reg [31:0] modulo_sub_base_63_sva_1;
  wire [32:0] nl_modulo_sub_base_63_sva_1;
  reg mult_63_slc_32_svs_st_1;
  reg mult_62_slc_32_svs_st_1;
  reg mult_61_slc_32_svs_st_1;
  reg mult_60_slc_32_svs_st_1;
  reg mult_59_slc_32_svs_st_1;
  reg mult_58_slc_32_svs_st_1;
  reg mult_57_slc_32_svs_st_1;
  reg mult_56_slc_32_svs_st_1;
  reg mult_55_slc_32_svs_st_1;
  reg mult_54_slc_32_svs_st_1;
  reg mult_53_slc_32_svs_st_1;
  reg mult_52_slc_32_svs_st_1;
  reg mult_51_slc_32_svs_st_1;
  reg mult_50_slc_32_svs_st_1;
  reg mult_49_slc_32_svs_st_1;
  reg mult_48_slc_32_svs_st_1;
  reg [31:0] modulo_add_base_63_sva_1;
  wire [32:0] nl_modulo_add_base_63_sva_1;
  reg [31:0] modulo_add_base_62_sva_1;
  wire [32:0] nl_modulo_add_base_62_sva_1;
  reg [31:0] modulo_add_base_61_sva_1;
  wire [32:0] nl_modulo_add_base_61_sva_1;
  reg [31:0] modulo_add_base_60_sva_1;
  wire [32:0] nl_modulo_add_base_60_sva_1;
  reg [31:0] modulo_add_base_59_sva_1;
  wire [32:0] nl_modulo_add_base_59_sva_1;
  reg [31:0] modulo_add_base_58_sva_1;
  wire [32:0] nl_modulo_add_base_58_sva_1;
  reg [31:0] modulo_add_base_57_sva_1;
  wire [32:0] nl_modulo_add_base_57_sva_1;
  reg [31:0] modulo_add_base_56_sva_1;
  wire [32:0] nl_modulo_add_base_56_sva_1;
  reg [31:0] modulo_add_base_55_sva_1;
  wire [32:0] nl_modulo_add_base_55_sva_1;
  reg [31:0] modulo_add_base_54_sva_1;
  wire [32:0] nl_modulo_add_base_54_sva_1;
  reg [31:0] modulo_add_base_53_sva_1;
  wire [32:0] nl_modulo_add_base_53_sva_1;
  reg [31:0] modulo_add_base_52_sva_1;
  wire [32:0] nl_modulo_add_base_52_sva_1;
  reg [31:0] modulo_add_base_51_sva_1;
  wire [32:0] nl_modulo_add_base_51_sva_1;
  reg [31:0] modulo_add_base_50_sva_1;
  wire [32:0] nl_modulo_add_base_50_sva_1;
  reg [31:0] modulo_add_base_49_sva_1;
  reg [31:0] modulo_add_base_48_sva_1;
  wire [31:0] mult_63_res_sva_2;
  wire [32:0] nl_mult_63_res_sva_2;
  wire [31:0] mult_62_res_sva_2;
  wire [32:0] nl_mult_62_res_sva_2;
  wire [31:0] mult_61_res_sva_2;
  wire [32:0] nl_mult_61_res_sva_2;
  wire [31:0] mult_60_res_sva_2;
  wire [32:0] nl_mult_60_res_sva_2;
  wire [31:0] mult_59_res_sva_2;
  wire [32:0] nl_mult_59_res_sva_2;
  wire [31:0] mult_58_res_sva_2;
  wire [32:0] nl_mult_58_res_sva_2;
  wire [31:0] mult_57_res_sva_2;
  wire [32:0] nl_mult_57_res_sva_2;
  wire [31:0] mult_56_res_sva_2;
  wire [32:0] nl_mult_56_res_sva_2;
  wire [31:0] mult_55_res_sva_2;
  wire [32:0] nl_mult_55_res_sva_2;
  wire [31:0] mult_54_res_sva_2;
  wire [32:0] nl_mult_54_res_sva_2;
  wire [31:0] mult_53_res_sva_2;
  wire [32:0] nl_mult_53_res_sva_2;
  wire [31:0] mult_52_res_sva_2;
  wire [32:0] nl_mult_52_res_sva_2;
  wire [31:0] mult_51_res_sva_2;
  wire [32:0] nl_mult_51_res_sva_2;
  wire [31:0] mult_50_res_sva_2;
  wire [32:0] nl_mult_50_res_sva_2;
  wire [31:0] mult_49_res_sva_2;
  wire [32:0] nl_mult_49_res_sva_2;
  wire [31:0] mult_48_res_sva_2;
  wire [32:0] nl_mult_48_res_sva_2;
  reg [31:0] modulo_add_base_47_sva_1;
  wire [32:0] nl_modulo_add_base_47_sva_1;
  reg [31:0] modulo_add_base_46_sva_1;
  wire [32:0] nl_modulo_add_base_46_sva_1;
  reg [31:0] modulo_add_base_45_sva_1;
  wire [32:0] nl_modulo_add_base_45_sva_1;
  reg [31:0] modulo_add_base_44_sva_1;
  wire [32:0] nl_modulo_add_base_44_sva_1;
  reg [31:0] modulo_add_base_43_sva_1;
  wire [32:0] nl_modulo_add_base_43_sva_1;
  reg [31:0] modulo_add_base_42_sva_1;
  wire [32:0] nl_modulo_add_base_42_sva_1;
  reg [31:0] modulo_add_base_41_sva_1;
  wire [32:0] nl_modulo_add_base_41_sva_1;
  reg [31:0] modulo_add_base_40_sva_1;
  wire [32:0] nl_modulo_add_base_40_sva_1;
  reg [31:0] modulo_add_base_39_sva_1;
  wire [32:0] nl_modulo_add_base_39_sva_1;
  reg [31:0] modulo_add_base_38_sva_1;
  reg [31:0] modulo_add_base_37_sva_1;
  reg [31:0] modulo_add_base_36_sva_1;
  reg [31:0] modulo_add_base_35_sva_1;
  reg [31:0] modulo_add_base_34_sva_1;
  reg [31:0] modulo_add_base_33_sva_1;
  reg [31:0] modulo_add_base_32_sva_1;
  wire [31:0] mult_47_res_sva_2;
  wire [32:0] nl_mult_47_res_sva_2;
  wire [31:0] mult_46_res_sva_2;
  wire [32:0] nl_mult_46_res_sva_2;
  wire [31:0] mult_45_res_sva_2;
  wire [32:0] nl_mult_45_res_sva_2;
  wire [31:0] mult_44_res_sva_2;
  wire [32:0] nl_mult_44_res_sva_2;
  wire [31:0] mult_43_res_sva_2;
  wire [32:0] nl_mult_43_res_sva_2;
  wire [31:0] mult_42_res_sva_2;
  wire [32:0] nl_mult_42_res_sva_2;
  wire [31:0] mult_41_res_sva_2;
  wire [32:0] nl_mult_41_res_sva_2;
  reg [31:0] modulo_add_base_31_sva_1;
  wire [32:0] nl_modulo_add_base_31_sva_1;
  reg [31:0] modulo_add_base_30_sva_1;
  wire [32:0] nl_modulo_add_base_30_sva_1;
  reg [31:0] modulo_add_base_29_sva_1;
  wire [32:0] nl_modulo_add_base_29_sva_1;
  reg [31:0] modulo_add_base_28_sva_1;
  wire [32:0] nl_modulo_add_base_28_sva_1;
  reg [31:0] modulo_add_base_27_sva_1;
  wire [32:0] nl_modulo_add_base_27_sva_1;
  reg [31:0] modulo_add_base_26_sva_1;
  reg [31:0] modulo_add_base_25_sva_1;
  reg [31:0] modulo_add_base_24_sva_1;
  reg [31:0] modulo_add_base_23_sva_1;
  reg [31:0] modulo_add_base_22_sva_1;
  reg [31:0] modulo_add_base_21_sva_1;
  wire [32:0] nl_modulo_add_base_21_sva_1;
  reg [31:0] modulo_add_base_20_sva_1;
  wire [32:0] nl_modulo_add_base_20_sva_1;
  reg [31:0] modulo_add_base_19_sva_1;
  wire [32:0] nl_modulo_add_base_19_sva_1;
  reg [31:0] modulo_add_base_18_sva_1;
  wire [32:0] nl_modulo_add_base_18_sva_1;
  reg [31:0] modulo_add_base_17_sva_1;
  wire [32:0] nl_modulo_add_base_17_sva_1;
  reg [31:0] modulo_add_base_16_sva_1;
  wire [32:0] nl_modulo_add_base_16_sva_1;
  wire [31:0] mult_31_res_sva_2;
  wire [32:0] nl_mult_31_res_sva_2;
  wire [31:0] mult_30_res_sva_2;
  wire [32:0] nl_mult_30_res_sva_2;
  wire [31:0] mult_29_res_sva_2;
  wire [32:0] nl_mult_29_res_sva_2;
  wire [31:0] mult_28_res_sva_2;
  wire [32:0] nl_mult_28_res_sva_2;
  wire [31:0] mult_27_res_sva_2;
  wire [32:0] nl_mult_27_res_sva_2;
  wire [31:0] mult_26_res_sva_2;
  wire [32:0] nl_mult_26_res_sva_2;
  wire [31:0] mult_25_res_sva_2;
  wire [32:0] nl_mult_25_res_sva_2;
  wire [31:0] mult_24_res_sva_2;
  wire [32:0] nl_mult_24_res_sva_2;
  wire [31:0] mult_23_res_sva_2;
  wire [32:0] nl_mult_23_res_sva_2;
  wire [31:0] mult_22_res_sva_2;
  wire [32:0] nl_mult_22_res_sva_2;
  wire [31:0] mult_21_res_sva_2;
  wire [32:0] nl_mult_21_res_sva_2;
  wire [31:0] mult_20_res_sva_2;
  wire [32:0] nl_mult_20_res_sva_2;
  wire [31:0] mult_19_res_sva_2;
  wire [32:0] nl_mult_19_res_sva_2;
  wire [31:0] mult_18_res_sva_2;
  wire [32:0] nl_mult_18_res_sva_2;
  wire [31:0] mult_17_res_sva_2;
  wire [32:0] nl_mult_17_res_sva_2;
  wire [31:0] mult_16_res_sva_2;
  wire [32:0] nl_mult_16_res_sva_2;
  reg [31:0] modulo_add_base_15_sva_1;
  wire [32:0] nl_modulo_add_base_15_sva_1;
  reg [31:0] modulo_add_base_14_sva_1;
  wire [32:0] nl_modulo_add_base_14_sva_1;
  reg [31:0] modulo_add_base_13_sva_1;
  wire [32:0] nl_modulo_add_base_13_sva_1;
  reg [31:0] modulo_add_base_12_sva_1;
  wire [32:0] nl_modulo_add_base_12_sva_1;
  reg [31:0] modulo_add_base_11_sva_1;
  wire [32:0] nl_modulo_add_base_11_sva_1;
  reg [31:0] modulo_add_base_10_sva_1;
  wire [32:0] nl_modulo_add_base_10_sva_1;
  reg [31:0] modulo_add_base_9_sva_1;
  wire [32:0] nl_modulo_add_base_9_sva_1;
  reg [31:0] modulo_add_base_8_sva_1;
  wire [32:0] nl_modulo_add_base_8_sva_1;
  reg [31:0] modulo_add_base_7_sva_1;
  wire [32:0] nl_modulo_add_base_7_sva_1;
  reg [31:0] modulo_add_base_6_sva_1;
  reg [31:0] modulo_add_base_5_sva_1;
  wire [32:0] nl_modulo_add_base_5_sva_1;
  reg [31:0] modulo_add_base_4_sva_1;
  wire [32:0] nl_modulo_add_base_4_sva_1;
  reg [31:0] modulo_add_base_3_sva_1;
  wire [32:0] nl_modulo_add_base_3_sva_1;
  reg [31:0] modulo_add_base_2_sva_1;
  wire [32:0] nl_modulo_add_base_2_sva_1;
  reg [31:0] modulo_add_base_1_sva_1;
  wire [32:0] nl_modulo_add_base_1_sva_1;
  reg [31:0] modulo_add_base_sva_1;
  wire [32:0] nl_modulo_add_base_sva_1;
  wire [31:0] mult_15_res_sva_2;
  wire [32:0] nl_mult_15_res_sva_2;
  wire [31:0] mult_14_res_sva_2;
  wire [32:0] nl_mult_14_res_sva_2;
  wire [31:0] mult_13_res_sva_2;
  wire [32:0] nl_mult_13_res_sva_2;
  wire [31:0] mult_12_res_sva_2;
  wire [32:0] nl_mult_12_res_sva_2;
  wire [31:0] mult_11_res_sva_2;
  wire [32:0] nl_mult_11_res_sva_2;
  wire [31:0] mult_10_res_sva_2;
  wire [32:0] nl_mult_10_res_sva_2;
  wire [31:0] mult_9_res_sva_2;
  wire [32:0] nl_mult_9_res_sva_2;
  wire [31:0] mult_8_res_sva_2;
  wire [32:0] nl_mult_8_res_sva_2;
  wire [31:0] mult_7_res_sva_2;
  wire [32:0] nl_mult_7_res_sva_2;
  wire [31:0] mult_6_res_sva_2;
  wire [32:0] nl_mult_6_res_sva_2;
  wire [31:0] mult_5_res_sva_2;
  wire [32:0] nl_mult_5_res_sva_2;
  wire [31:0] mult_4_res_sva_2;
  wire [32:0] nl_mult_4_res_sva_2;
  wire [31:0] mult_3_res_sva_2;
  wire [32:0] nl_mult_3_res_sva_2;
  wire [31:0] mult_2_res_sva_2;
  wire [32:0] nl_mult_2_res_sva_2;
  wire [31:0] mult_1_res_sva_2;
  wire [32:0] nl_mult_1_res_sva_2;
  wire [31:0] mult_res_sva_2;
  wire [32:0] nl_mult_res_sva_2;
  reg [31:0] p_sva;
  wire butterFly1_7_f2_and_ssc;
  wire butterFly1_7_f2_and_ssc_2;
  wire butterFly1_7_f2_and_ssc_3;
  wire butterFly1_7_f1_and_ssc;
  wire butterFly1_7_f1_and_ssc_2;
  wire butterFly1_7_f1_and_ssc_3;
  wire butterFly1_6_f2_and_ssc;
  wire butterFly1_6_f2_and_ssc_2;
  wire butterFly1_6_f2_and_ssc_3;
  wire butterFly1_6_f1_and_ssc;
  wire butterFly1_6_f1_and_ssc_2;
  wire butterFly1_6_f1_and_ssc_3;
  wire butterFly1_5_f2_and_ssc;
  wire butterFly1_5_f2_and_ssc_2;
  wire butterFly1_5_f2_and_ssc_3;
  wire butterFly1_5_f1_and_ssc;
  wire butterFly1_5_f1_and_ssc_2;
  wire butterFly1_5_f1_and_ssc_3;
  wire butterFly1_4_f2_and_ssc;
  wire butterFly1_4_f2_and_ssc_2;
  wire butterFly1_4_f2_and_ssc_3;
  wire butterFly1_4_f1_and_ssc;
  wire butterFly1_4_f1_and_ssc_2;
  wire butterFly1_4_f1_and_ssc_3;
  wire butterFly1_3_f2_and_ssc;
  wire butterFly1_3_f2_and_ssc_2;
  wire butterFly1_3_f2_and_ssc_3;
  wire butterFly1_3_f1_and_ssc;
  wire butterFly1_3_f1_and_ssc_2;
  wire butterFly1_3_f1_and_ssc_3;
  wire butterFly1_2_f2_and_ssc;
  wire butterFly1_2_f2_and_ssc_2;
  wire butterFly1_2_f2_and_ssc_3;
  wire butterFly1_2_f1_and_ssc;
  wire butterFly1_2_f1_and_ssc_2;
  wire butterFly1_2_f1_and_ssc_3;
  wire butterFly1_1_f2_and_ssc;
  wire butterFly1_1_f2_and_ssc_2;
  wire butterFly1_1_f2_and_ssc_3;
  wire butterFly1_1_f1_and_ssc;
  wire butterFly1_1_f1_and_ssc_2;
  wire butterFly1_1_f1_and_ssc_3;
  wire butterFly1_f2_and_ssc;
  wire butterFly1_f2_and_ssc_2;
  wire butterFly1_f2_and_ssc_3;
  wire butterFly1_f1_and_ssc;
  wire butterFly1_f1_and_ssc_2;
  wire butterFly1_f1_and_ssc_3;
  wire butterFly1_15_and_ssc;
  wire butterFly1_15_and_ssc_2;
  wire butterFly1_15_and_ssc_3;
  wire butterFly1_14_and_ssc;
  wire butterFly1_14_and_ssc_2;
  wire butterFly1_14_and_ssc_3;
  wire butterFly1_13_and_ssc;
  wire butterFly1_13_and_ssc_2;
  wire butterFly1_13_and_ssc_3;
  wire butterFly1_12_and_ssc;
  wire butterFly1_12_and_ssc_2;
  wire butterFly1_12_and_ssc_3;
  wire butterFly1_11_and_ssc;
  wire butterFly1_11_and_ssc_2;
  wire butterFly1_11_and_ssc_3;
  wire butterFly1_10_and_ssc;
  wire butterFly1_10_and_ssc_2;
  wire butterFly1_10_and_ssc_3;
  wire butterFly1_9_and_ssc;
  wire butterFly1_9_and_ssc_2;
  wire butterFly1_9_and_ssc_3;
  wire butterFly1_8_and_ssc;
  wire butterFly1_8_and_ssc_2;
  wire butterFly1_8_and_ssc_3;
  wire butterFly1_7_and_ssc;
  wire butterFly1_7_and_ssc_2;
  wire butterFly1_7_and_ssc_3;
  wire butterFly1_6_and_ssc;
  wire butterFly1_6_and_ssc_2;
  wire butterFly1_6_and_ssc_3;
  wire butterFly1_5_and_ssc;
  wire butterFly1_5_and_ssc_2;
  wire butterFly1_5_and_ssc_3;
  wire butterFly1_4_and_ssc;
  wire butterFly1_4_and_ssc_2;
  wire butterFly1_4_and_ssc_3;
  wire butterFly1_3_and_ssc;
  wire butterFly1_3_and_ssc_2;
  wire butterFly1_3_and_ssc_3;
  wire butterFly1_2_and_ssc;
  wire butterFly1_2_and_ssc_2;
  wire butterFly1_2_and_ssc_3;
  wire butterFly1_1_and_ssc;
  wire butterFly1_1_and_ssc_2;
  wire butterFly1_1_and_ssc_3;
  wire butterFly1_and_ssc;
  wire butterFly1_and_ssc_2;
  wire butterFly1_and_ssc_3;
  reg reg_yt_rsc_0_0_cgo_cse;
  reg reg_yt_rsc_0_16_cgo_cse;
  reg reg_yt_rsc_1_0_cgo_cse;
  reg reg_yt_rsc_1_16_cgo_cse;
  reg reg_xt_rsc_0_0_i_oswt_cse;
  reg reg_xt_rsc_0_0_i_oswt_1_cse;
  reg [3:0] reg_xt_rsc_0_0_i_s_raddr_core_cse;
  reg reg_xt_rsc_0_16_i_oswt_1_cse;
  reg [31:0] reg_xt_rsc_0_0_i_s_dout_core_cse;
  reg [31:0] reg_xt_rsc_0_1_i_s_dout_core_cse;
  reg [31:0] reg_xt_rsc_0_2_i_s_dout_core_cse;
  reg [31:0] reg_xt_rsc_0_3_i_s_dout_core_cse;
  reg [31:0] reg_xt_rsc_0_4_i_s_dout_core_cse;
  reg [31:0] reg_xt_rsc_0_5_i_s_dout_core_cse;
  reg [31:0] reg_xt_rsc_0_6_i_s_dout_core_cse;
  reg [31:0] reg_xt_rsc_0_7_i_s_dout_core_cse;
  reg [31:0] reg_xt_rsc_0_8_i_s_dout_core_cse;
  reg [31:0] reg_xt_rsc_0_9_i_s_dout_core_cse;
  reg [31:0] reg_xt_rsc_0_10_i_s_dout_core_cse;
  reg [31:0] reg_xt_rsc_0_11_i_s_dout_core_cse;
  reg [31:0] reg_xt_rsc_0_12_i_s_dout_core_cse;
  reg [31:0] reg_xt_rsc_0_13_i_s_dout_core_cse;
  reg [31:0] reg_xt_rsc_0_14_i_s_dout_core_cse;
  reg [31:0] reg_xt_rsc_0_15_i_s_dout_core_cse;
  reg reg_xt_rsc_1_0_i_oswt_cse;
  reg reg_twiddle_rsc_0_0_i_oswt_cse;
  reg reg_twiddle_rsc_0_1_i_oswt_cse;
  reg reg_twiddle_rsc_0_2_i_oswt_cse;
  reg [4:0] reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse;
  reg reg_twiddle_rsc_0_3_i_oswt_cse;
  reg reg_twiddle_rsc_0_4_i_oswt_cse;
  reg reg_twiddle_rsc_0_5_i_oswt_cse;
  reg reg_twiddle_rsc_0_6_i_oswt_cse;
  reg reg_twiddle_rsc_0_7_i_oswt_cse;
  reg reg_twiddle_rsc_0_8_i_oswt_cse;
  reg [3:0] reg_twiddle_rsc_0_0_i_s_raddr_core_3_0_cse;
  reg reg_xt_rsc_triosy_1_31_obj_iswt0_cse;
  reg reg_ensig_cgo_cse;
  wire INNER_LOOP1_tw_h_and_49_cse;
  wire INNER_LOOP1_tw_h_and_51_cse;
  wire INNER_LOOP1_tw_h_and_53_cse;
  wire INNER_LOOP1_tw_h_and_55_cse;
  wire INNER_LOOP1_tw_h_and_44_cse;
  wire INNER_LOOP1_tw_h_and_45_cse;
  wire INNER_LOOP1_tw_h_and_46_cse;
  wire INNER_LOOP1_tw_h_and_47_cse;
  wire INNER_LOOP1_tw_h_and_48_cse;
  wire INNER_LOOP1_tw_h_and_50_cse;
  wire INNER_LOOP1_tw_h_and_52_cse;
  wire INNER_LOOP1_tw_h_and_54_cse;
  reg reg_ensig_cgo_17_cse;
  reg [31:0] reg_mult_15_z_asn_itm_1_cse;
  reg [31:0] reg_mult_14_z_asn_itm_1_cse;
  reg [31:0] reg_mult_13_z_asn_itm_1_cse;
  reg [31:0] reg_mult_12_z_asn_itm_1_cse;
  reg [31:0] reg_mult_11_z_asn_itm_1_cse;
  reg [31:0] reg_mult_10_z_asn_itm_1_cse;
  reg [31:0] reg_mult_9_z_asn_itm_1_cse;
  reg [31:0] reg_mult_8_z_asn_itm_1_cse;
  reg [31:0] reg_mult_7_z_asn_itm_1_cse;
  reg [31:0] reg_mult_6_z_asn_itm_1_cse;
  reg [31:0] reg_mult_5_z_asn_itm_1_cse;
  reg [31:0] reg_mult_4_z_asn_itm_1_cse;
  reg [31:0] reg_mult_3_z_asn_itm_1_cse;
  reg [31:0] reg_mult_2_z_asn_itm_1_cse;
  reg [31:0] reg_mult_1_z_asn_itm_1_cse;
  reg [31:0] reg_mult_z_asn_itm_1_cse;
  reg reg_xt_rsc_1_0_i_s_dout_core_cse_rsp_0;
  reg [30:0] reg_xt_rsc_1_0_i_s_dout_core_cse_rsp_1;
  reg reg_xt_rsc_1_1_i_s_dout_core_cse_rsp_0;
  reg [30:0] reg_xt_rsc_1_1_i_s_dout_core_cse_rsp_1;
  reg reg_xt_rsc_1_2_i_s_dout_core_cse_rsp_0;
  reg [30:0] reg_xt_rsc_1_2_i_s_dout_core_cse_rsp_1;
  reg reg_xt_rsc_1_3_i_s_dout_core_cse_rsp_0;
  reg [30:0] reg_xt_rsc_1_3_i_s_dout_core_cse_rsp_1;
  reg reg_xt_rsc_1_4_i_s_dout_core_cse_rsp_0;
  reg [30:0] reg_xt_rsc_1_4_i_s_dout_core_cse_rsp_1;
  reg reg_xt_rsc_1_5_i_s_dout_core_cse_rsp_0;
  reg [30:0] reg_xt_rsc_1_5_i_s_dout_core_cse_rsp_1;
  reg reg_xt_rsc_1_6_i_s_dout_core_cse_rsp_0;
  reg [30:0] reg_xt_rsc_1_6_i_s_dout_core_cse_rsp_1;
  reg reg_xt_rsc_1_7_i_s_dout_core_cse_rsp_0;
  reg [30:0] reg_xt_rsc_1_7_i_s_dout_core_cse_rsp_1;
  reg reg_xt_rsc_1_8_i_s_dout_core_cse_rsp_0;
  reg [30:0] reg_xt_rsc_1_8_i_s_dout_core_cse_rsp_1;
  reg reg_xt_rsc_1_9_i_s_dout_core_cse_rsp_0;
  reg [30:0] reg_xt_rsc_1_9_i_s_dout_core_cse_rsp_1;
  reg reg_xt_rsc_1_10_i_s_dout_core_cse_rsp_0;
  reg [30:0] reg_xt_rsc_1_10_i_s_dout_core_cse_rsp_1;
  reg reg_xt_rsc_1_11_i_s_dout_core_cse_rsp_0;
  reg [30:0] reg_xt_rsc_1_11_i_s_dout_core_cse_rsp_1;
  reg reg_xt_rsc_1_12_i_s_dout_core_cse_rsp_0;
  reg [30:0] reg_xt_rsc_1_12_i_s_dout_core_cse_rsp_1;
  reg reg_xt_rsc_1_13_i_s_dout_core_cse_rsp_0;
  reg [30:0] reg_xt_rsc_1_13_i_s_dout_core_cse_rsp_1;
  reg reg_xt_rsc_1_14_i_s_dout_core_cse_rsp_0;
  reg [30:0] reg_xt_rsc_1_14_i_s_dout_core_cse_rsp_1;
  reg reg_xt_rsc_1_15_i_s_dout_core_cse_rsp_0;
  reg [30:0] reg_xt_rsc_1_15_i_s_dout_core_cse_rsp_1;
  wire butterFly2_7_tw_nor_cse;
  wire butterFly2_7_tw_nor_1_cse;
  wire butterFly2_7_tw_nor_2_cse;
  wire INNER_LOOP1_tw_h_or_9_cse;
  wire INNER_LOOP1_tw_h_or_10_cse;
  wire INNER_LOOP1_tw_h_or_11_cse;
  wire INNER_LOOP1_tw_h_or_12_cse;
  wire INNER_LOOP1_tw_h_and_41_cse;
  wire INNER_LOOP1_tw_h_and_42_cse;
  wire INNER_LOOP1_tw_h_and_43_cse;
  wire INNER_LOOP1_tw_h_and_37_cse;
  wire INNER_LOOP1_tw_h_and_38_cse;
  wire INNER_LOOP1_tw_h_and_39_cse;
  wire INNER_LOOP1_tw_h_and_30_cse;
  wire INNER_LOOP1_tw_h_and_31_cse;
  wire INNER_LOOP1_tw_h_and_32_cse;
  wire INNER_LOOP1_tw_h_or_3_cse;
  wire INNER_LOOP1_tw_h_and_40_cse;
  wire INNER_LOOP1_tw_h_and_36_cse;
  wire INNER_LOOP1_tw_h_and_29_cse;
  wire c_or_cse;
  wire INNER_LOOP1_tw_h_or_1_cse;
  wire INNER_LOOP1_tw_h_or_cse;
  reg [3:0] reg_xt_rsc_0_0_i_s_waddr_core_cse;
  reg [3:0] reg_xt_rsc_0_16_i_s_waddr_core_cse;
  wire or_67_rmff;
  wire or_119_rmff;
  wire or_153_rmff;
  wire butterFly1_and_4_rmff;
  wire [30:0] butterFly1_mux1h_2_rmff;
  wire butterFly1_1_and_4_rmff;
  wire [30:0] butterFly1_1_mux1h_2_rmff;
  wire butterFly1_2_and_4_rmff;
  wire [30:0] butterFly1_2_mux1h_2_rmff;
  wire butterFly1_3_and_4_rmff;
  wire [30:0] butterFly1_3_mux1h_2_rmff;
  wire butterFly1_4_and_4_rmff;
  wire [30:0] butterFly1_4_mux1h_2_rmff;
  wire butterFly1_5_and_4_rmff;
  wire [30:0] butterFly1_5_mux1h_2_rmff;
  wire butterFly1_6_and_4_rmff;
  wire [30:0] butterFly1_6_mux1h_2_rmff;
  wire butterFly1_7_and_4_rmff;
  wire [30:0] butterFly1_7_mux1h_2_rmff;
  wire butterFly1_8_and_4_rmff;
  wire [30:0] butterFly1_8_mux1h_2_rmff;
  wire butterFly1_9_and_4_rmff;
  wire [30:0] butterFly1_9_mux1h_2_rmff;
  wire butterFly1_10_and_4_rmff;
  wire [30:0] butterFly1_10_mux1h_2_rmff;
  wire butterFly1_11_and_4_rmff;
  wire [30:0] butterFly1_11_mux1h_2_rmff;
  wire butterFly1_12_and_4_rmff;
  wire [30:0] butterFly1_12_mux1h_2_rmff;
  wire butterFly1_13_and_4_rmff;
  wire [30:0] butterFly1_13_mux1h_2_rmff;
  wire butterFly1_14_and_4_rmff;
  wire [30:0] butterFly1_14_mux1h_2_rmff;
  wire butterFly1_15_and_4_rmff;
  wire [30:0] butterFly1_15_mux1h_2_rmff;
  wire or_204_rmff;
  wire or_447_rmff;
  wire or_570_rmff;
  wire [31:0] mult_4_t_mux1h_rmff;
  wire [31:0] tmp_65_lpi_3_dfm_mx0;
  wire [31:0] tmp_1_lpi_3_dfm_mx0;
  wire [31:0] mult_t_mul_cmp_a_mx0w2;
  wire [31:0] tmp_31_lpi_3_dfm_mx0;
  wire [31:0] mult_t_mul_cmp_1_a_mx0w0;
  wire [31:0] tmp_125_lpi_3_dfm_mx0;
  wire [31:0] tmp_93_lpi_3_dfm_mx0;
  wire [31:0] tmp_29_lpi_3_dfm_mx0;
  wire [31:0] mult_t_mul_cmp_2_a_mx0w2;
  wire [31:0] tmp_3_lpi_3_dfm_mx0;
  wire [31:0] tmp_91_lpi_3_dfm_mx0;
  wire [31:0] tmp_27_lpi_3_dfm_mx0;
  wire [31:0] tmp_121_lpi_3_dfm_mx0;
  wire [31:0] tmp_5_lpi_3_dfm_mx0;
  wire [31:0] tmp_89_lpi_3_dfm_mx0;
  wire [31:0] tmp_25_lpi_3_dfm_mx0;
  wire [31:0] mult_t_mul_cmp_4_a_mx0w2;
  wire [31:0] tmp_7_lpi_3_dfm_mx0;
  wire [31:0] tmp_87_lpi_3_dfm_mx0;
  wire [31:0] tmp_23_lpi_3_dfm_mx0;
  wire [31:0] mult_t_mul_cmp_5_a_mx0w2;
  wire [31:0] mult_t_mul_cmp_12_a_mx0w3;
  wire [31:0] tmp_85_lpi_3_dfm_mx0;
  wire [31:0] tmp_21_lpi_3_dfm_mx0;
  wire [31:0] mult_t_mul_cmp_6_a_mx0w2;
  wire [31:0] mult_t_mul_cmp_11_a_mx0w3;
  wire [31:0] tmp_83_lpi_3_dfm_mx0;
  wire [31:0] tmp_19_lpi_3_dfm_mx0;
  wire [31:0] mult_t_mul_cmp_7_a_mx0w2;
  wire [31:0] mult_t_mul_cmp_10_a_mx0w3;
  wire [31:0] tmp_81_lpi_3_dfm_mx0;
  wire [31:0] tmp_17_lpi_3_dfm_mx0;
  wire [31:0] mult_t_mul_cmp_8_a_mx0w2;
  wire [31:0] mult_t_mul_cmp_9_a_mx0w3;
  wire [31:0] mult_t_mul_cmp_9_a_mx0w0;
  wire [31:0] mult_t_mul_cmp_9_a_mx0w2;
  wire [31:0] mult_t_mul_cmp_10_a_mx0w0;
  wire [31:0] mult_t_mul_cmp_10_a_mx0w2;
  wire [31:0] mult_t_mul_cmp_11_a_mx0w0;
  wire [31:0] mult_t_mul_cmp_11_a_mx0w2;
  wire [31:0] mult_t_mul_cmp_13_a_mx0w0;
  wire [31:0] mult_t_mul_cmp_13_a_mx0w2;
  wire [31:0] mult_t_mul_cmp_14_a_mx0w0;
  wire [31:0] mult_t_mul_cmp_14_a_mx0w2;
  wire [31:0] mult_t_mul_cmp_15_a_mx0w0;
  wire [31:0] mult_t_mul_cmp_15_a_mx0w2;
  reg [31:0] modulo_add_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_32_qr_lpi_3_dfm_1;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_290_itm_11;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_321_itm_11;
  reg [31:0] modulo_add_1_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_33_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_2_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_34_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_3_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_35_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_4_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_36_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_5_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_37_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_6_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_38_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_7_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_39_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_8_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_40_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_9_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_41_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_10_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_42_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_11_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_43_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_12_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_44_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_13_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_45_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_14_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_46_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_15_qr_lpi_3_dfm_1;
  reg [31:0] modulo_add_47_qr_lpi_3_dfm_1;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_306_itm_11;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_337_itm_11;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_385_itm_10;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_416_itm_10;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_401_itm_10;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_432_itm_10;
  wire [8:0] z_out_48;
  wire [5:0] z_out_49;
  wire [6:0] nl_z_out_49;
  wire [5:0] z_out_50;
  wire [6:0] nl_z_out_50;
  wire [31:0] z_out_51;
  wire [31:0] z_out_52;
  wire [31:0] z_out_53;
  wire [31:0] z_out_54;
  wire [31:0] z_out_55;
  wire [31:0] z_out_56;
  wire [31:0] z_out_57;
  wire [31:0] z_out_58;
  wire [31:0] z_out_59;
  wire [31:0] z_out_60;
  wire [31:0] z_out_61;
  wire [32:0] nl_z_out_61;
  wire [31:0] z_out_62;
  wire [31:0] z_out_63;
  wire [31:0] z_out_64;
  wire [31:0] z_out_65;
  wire [31:0] z_out_66;
  wire [31:0] z_out_67;
  wire [31:0] z_out_68;
  wire [31:0] z_out_69;
  wire [31:0] z_out_70;
  wire [31:0] z_out_71;
  wire [32:0] nl_z_out_71;
  wire [31:0] z_out_72;
  wire [32:0] nl_z_out_72;
  wire [31:0] z_out_73;
  wire [32:0] nl_z_out_73;
  wire [31:0] z_out_74;
  wire [32:0] nl_z_out_74;
  wire [31:0] z_out_75;
  wire [32:0] nl_z_out_75;
  wire [31:0] z_out_76;
  wire [32:0] nl_z_out_76;
  wire [31:0] z_out_77;
  wire [32:0] nl_z_out_77;
  wire [31:0] z_out_78;
  wire [32:0] nl_z_out_78;
  wire [31:0] z_out_79;
  wire [32:0] nl_z_out_79;
  wire [31:0] z_out_80;
  wire [32:0] nl_z_out_80;
  wire [31:0] z_out_81;
  wire [32:0] nl_z_out_81;
  wire [31:0] z_out_82;
  wire [32:0] nl_z_out_82;
  wire [31:0] z_out_83;
  wire [32:0] nl_z_out_83;
  wire [31:0] z_out_84;
  wire [32:0] nl_z_out_84;
  wire [31:0] z_out_85;
  wire [32:0] nl_z_out_85;
  wire [31:0] z_out_86;
  wire [32:0] nl_z_out_86;
  wire [31:0] z_out_87;
  wire [32:0] nl_z_out_87;
  wire [31:0] z_out_88;
  wire [32:0] nl_z_out_88;
  wire [31:0] z_out_89;
  wire [32:0] nl_z_out_89;
  wire [31:0] z_out_90;
  wire [32:0] nl_z_out_90;
  wire [31:0] z_out_91;
  wire [32:0] nl_z_out_91;
  wire [31:0] z_out_92;
  wire [32:0] nl_z_out_92;
  wire [31:0] z_out_93;
  wire [32:0] nl_z_out_93;
  wire [31:0] z_out_94;
  wire [32:0] nl_z_out_94;
  wire [31:0] z_out_95;
  wire [32:0] nl_z_out_95;
  wire [31:0] z_out_96;
  wire [32:0] nl_z_out_96;
  wire [31:0] z_out_97;
  wire [32:0] nl_z_out_97;
  wire [31:0] z_out_98;
  wire [32:0] nl_z_out_98;
  wire [31:0] z_out_99;
  wire [32:0] nl_z_out_99;
  wire [31:0] z_out_100;
  wire [32:0] nl_z_out_100;
  wire [31:0] z_out_101;
  wire [32:0] nl_z_out_101;
  wire [31:0] z_out_102;
  wire [32:0] nl_z_out_102;
  wire [31:0] z_out_103;
  wire [32:0] nl_z_out_103;
  wire [31:0] z_out_104;
  wire [31:0] z_out_105;
  wire [31:0] z_out_106;
  wire [31:0] z_out_107;
  wire [31:0] z_out_108;
  wire [31:0] z_out_109;
  wire [31:0] z_out_110;
  wire [31:0] z_out_111;
  wire [31:0] z_out_112;
  wire [31:0] z_out_113;
  wire [31:0] z_out_114;
  wire [31:0] z_out_115;
  wire [31:0] z_out_116;
  wire [31:0] z_out_117;
  wire [31:0] z_out_118;
  wire [31:0] z_out_119;
  wire [31:0] z_out_120;
  wire [31:0] z_out_121;
  wire [31:0] z_out_122;
  wire [31:0] z_out_123;
  wire [31:0] z_out_124;
  wire [31:0] z_out_125;
  wire [31:0] z_out_126;
  wire [31:0] z_out_127;
  wire [31:0] z_out_128;
  wire [31:0] z_out_129;
  wire [31:0] z_out_130;
  wire [31:0] z_out_131;
  wire [31:0] z_out_132;
  wire [31:0] z_out_133;
  wire [32:0] nl_z_out_133;
  wire [31:0] z_out_134;
  wire [31:0] z_out_135;
  wire [31:0] z_out_136;
  wire [32:0] nl_z_out_136;
  wire [31:0] z_out_137;
  wire [31:0] z_out_138;
  wire [32:0] nl_z_out_138;
  wire [31:0] z_out_139;
  wire [31:0] z_out_140;
  wire [32:0] nl_z_out_140;
  wire [31:0] z_out_141;
  wire [31:0] z_out_142;
  wire [31:0] z_out_143;
  wire [31:0] z_out_144;
  wire [31:0] z_out_145;
  wire [31:0] z_out_146;
  reg [2:0] operator_20_false_acc_cse_sva;
  reg [4:0] operator_33_true_return_8_4_sva;
  reg [3:0] operator_33_true_1_lshift_psp_7_4_sva;
  reg INNER_LOOP1_stage_0_8;
  reg INNER_LOOP1_stage_0_9;
  reg INNER_LOOP1_stage_0_10;
  reg INNER_LOOP1_stage_0_11;
  reg [31:0] tmp_64_lpi_3_dfm_1;
  reg [31:0] tmp_64_lpi_3_dfm_2;
  reg [31:0] tmp_64_lpi_3_dfm_3;
  reg [31:0] tmp_64_lpi_3_dfm_4;
  reg [31:0] tmp_64_lpi_3_dfm_5;
  reg [31:0] tmp_64_lpi_3_dfm_6;
  reg [31:0] tmp_64_lpi_3_dfm_7;
  reg [31:0] mult_res_sva_1;
  reg [31:0] tmp_66_lpi_3_dfm_1;
  reg [31:0] tmp_66_lpi_3_dfm_2;
  reg [31:0] tmp_66_lpi_3_dfm_3;
  reg [31:0] tmp_66_lpi_3_dfm_4;
  reg [31:0] tmp_66_lpi_3_dfm_5;
  reg [31:0] tmp_66_lpi_3_dfm_6;
  reg [31:0] tmp_66_lpi_3_dfm_7;
  reg [31:0] mult_1_res_sva_1;
  reg [31:0] tmp_68_lpi_3_dfm_1;
  reg [31:0] tmp_68_lpi_3_dfm_2;
  reg [31:0] tmp_68_lpi_3_dfm_3;
  reg [31:0] tmp_68_lpi_3_dfm_4;
  reg [31:0] tmp_68_lpi_3_dfm_5;
  reg [31:0] tmp_68_lpi_3_dfm_6;
  reg [31:0] tmp_68_lpi_3_dfm_7;
  reg [31:0] mult_2_res_sva_1;
  reg [31:0] tmp_70_lpi_3_dfm_1;
  reg [31:0] tmp_70_lpi_3_dfm_2;
  reg [31:0] tmp_70_lpi_3_dfm_3;
  reg [31:0] tmp_70_lpi_3_dfm_4;
  reg [31:0] tmp_70_lpi_3_dfm_5;
  reg [31:0] tmp_70_lpi_3_dfm_6;
  reg [31:0] tmp_70_lpi_3_dfm_7;
  reg [31:0] mult_3_res_sva_1;
  reg [31:0] tmp_72_lpi_3_dfm_1;
  reg [31:0] tmp_72_lpi_3_dfm_2;
  reg [31:0] tmp_72_lpi_3_dfm_3;
  reg [31:0] tmp_72_lpi_3_dfm_4;
  reg [31:0] tmp_72_lpi_3_dfm_5;
  reg [31:0] tmp_72_lpi_3_dfm_6;
  reg [31:0] tmp_72_lpi_3_dfm_7;
  reg [31:0] mult_4_res_sva_1;
  reg [31:0] tmp_74_lpi_3_dfm_1;
  reg [31:0] tmp_74_lpi_3_dfm_2;
  reg [31:0] tmp_74_lpi_3_dfm_3;
  reg [31:0] tmp_74_lpi_3_dfm_4;
  reg [31:0] tmp_74_lpi_3_dfm_5;
  reg [31:0] tmp_74_lpi_3_dfm_6;
  reg [31:0] tmp_74_lpi_3_dfm_7;
  reg [31:0] mult_5_res_sva_1;
  reg [31:0] tmp_76_lpi_3_dfm_1;
  reg [31:0] tmp_76_lpi_3_dfm_2;
  reg [31:0] tmp_76_lpi_3_dfm_3;
  reg [31:0] tmp_76_lpi_3_dfm_4;
  reg [31:0] tmp_76_lpi_3_dfm_5;
  reg [31:0] tmp_76_lpi_3_dfm_6;
  reg [31:0] tmp_76_lpi_3_dfm_7;
  reg [31:0] mult_6_res_sva_1;
  reg [31:0] tmp_78_lpi_3_dfm_1;
  reg [31:0] tmp_78_lpi_3_dfm_2;
  reg [31:0] tmp_78_lpi_3_dfm_3;
  reg [31:0] tmp_78_lpi_3_dfm_4;
  reg [31:0] tmp_78_lpi_3_dfm_5;
  reg [31:0] tmp_78_lpi_3_dfm_6;
  reg [31:0] tmp_78_lpi_3_dfm_7;
  reg [31:0] mult_7_res_sva_1;
  reg [31:0] tmp_80_lpi_3_dfm_1;
  reg [31:0] tmp_80_lpi_3_dfm_2;
  reg [31:0] tmp_80_lpi_3_dfm_3;
  reg [31:0] tmp_80_lpi_3_dfm_4;
  reg [31:0] tmp_80_lpi_3_dfm_5;
  reg [31:0] tmp_80_lpi_3_dfm_6;
  reg [31:0] tmp_80_lpi_3_dfm_7;
  reg [31:0] mult_8_res_sva_1;
  reg [31:0] tmp_82_lpi_3_dfm_1;
  reg [31:0] tmp_82_lpi_3_dfm_2;
  reg [31:0] tmp_82_lpi_3_dfm_3;
  reg [31:0] tmp_82_lpi_3_dfm_4;
  reg [31:0] tmp_82_lpi_3_dfm_5;
  reg [31:0] tmp_82_lpi_3_dfm_6;
  reg [31:0] tmp_82_lpi_3_dfm_7;
  reg [31:0] mult_9_res_sva_1;
  reg [31:0] tmp_84_lpi_3_dfm_1;
  reg [31:0] tmp_84_lpi_3_dfm_2;
  reg [31:0] tmp_84_lpi_3_dfm_3;
  reg [31:0] tmp_84_lpi_3_dfm_4;
  reg [31:0] tmp_84_lpi_3_dfm_5;
  reg [31:0] tmp_84_lpi_3_dfm_6;
  reg [31:0] tmp_84_lpi_3_dfm_7;
  reg [31:0] mult_10_res_sva_1;
  reg [31:0] tmp_86_lpi_3_dfm_1;
  reg [31:0] tmp_86_lpi_3_dfm_2;
  reg [31:0] tmp_86_lpi_3_dfm_3;
  reg [31:0] tmp_86_lpi_3_dfm_4;
  reg [31:0] tmp_86_lpi_3_dfm_5;
  reg [31:0] tmp_86_lpi_3_dfm_6;
  reg [31:0] tmp_86_lpi_3_dfm_7;
  reg [31:0] mult_11_res_sva_1;
  reg [31:0] tmp_88_lpi_3_dfm_1;
  reg [31:0] tmp_88_lpi_3_dfm_2;
  reg [31:0] tmp_88_lpi_3_dfm_3;
  reg [31:0] tmp_88_lpi_3_dfm_4;
  reg [31:0] tmp_88_lpi_3_dfm_5;
  reg [31:0] tmp_88_lpi_3_dfm_6;
  reg [31:0] tmp_88_lpi_3_dfm_7;
  reg [31:0] mult_12_res_sva_1;
  reg [31:0] tmp_90_lpi_3_dfm_1;
  reg [31:0] tmp_90_lpi_3_dfm_2;
  reg [31:0] tmp_90_lpi_3_dfm_3;
  reg [31:0] tmp_90_lpi_3_dfm_4;
  reg [31:0] tmp_90_lpi_3_dfm_5;
  reg [31:0] tmp_90_lpi_3_dfm_6;
  reg [31:0] tmp_90_lpi_3_dfm_7;
  reg [31:0] mult_13_res_sva_1;
  reg [31:0] tmp_92_lpi_3_dfm_1;
  reg [31:0] tmp_92_lpi_3_dfm_2;
  reg [31:0] tmp_92_lpi_3_dfm_3;
  reg [31:0] tmp_92_lpi_3_dfm_4;
  reg [31:0] tmp_92_lpi_3_dfm_5;
  reg [31:0] tmp_92_lpi_3_dfm_6;
  reg [31:0] tmp_92_lpi_3_dfm_7;
  reg [31:0] mult_14_res_sva_1;
  reg [31:0] tmp_94_lpi_3_dfm_1;
  reg [31:0] tmp_94_lpi_3_dfm_2;
  reg [31:0] tmp_94_lpi_3_dfm_3;
  reg [31:0] tmp_94_lpi_3_dfm_4;
  reg [31:0] tmp_94_lpi_3_dfm_5;
  reg [31:0] tmp_94_lpi_3_dfm_6;
  reg [31:0] tmp_94_lpi_3_dfm_7;
  reg [31:0] mult_15_res_sva_1;
  reg [31:0] mult_z_asn_itm_1;
  reg [31:0] mult_z_asn_itm_2;
  reg [31:0] mult_z_asn_itm_3;
  reg [31:0] mult_z_asn_itm_4;
  reg [31:0] mult_1_z_asn_itm_1;
  reg [31:0] mult_1_z_asn_itm_2;
  reg [31:0] mult_1_z_asn_itm_3;
  reg [31:0] mult_1_z_asn_itm_4;
  reg [31:0] mult_2_z_asn_itm_1;
  reg [31:0] mult_2_z_asn_itm_2;
  reg [31:0] mult_2_z_asn_itm_3;
  reg [31:0] mult_2_z_asn_itm_4;
  reg [31:0] mult_3_z_asn_itm_1;
  reg [31:0] mult_3_z_asn_itm_2;
  reg [31:0] mult_3_z_asn_itm_3;
  reg [31:0] mult_3_z_asn_itm_4;
  reg [31:0] mult_4_z_asn_itm_1;
  reg [31:0] mult_4_z_asn_itm_2;
  reg [31:0] mult_4_z_asn_itm_3;
  reg [31:0] mult_4_z_asn_itm_4;
  reg [31:0] mult_5_z_asn_itm_1;
  reg [31:0] mult_5_z_asn_itm_2;
  reg [31:0] mult_5_z_asn_itm_3;
  reg [31:0] mult_5_z_asn_itm_4;
  reg [31:0] mult_6_z_asn_itm_1;
  reg [31:0] mult_6_z_asn_itm_2;
  reg [31:0] mult_6_z_asn_itm_3;
  reg [31:0] mult_6_z_asn_itm_4;
  reg [31:0] mult_7_z_asn_itm_1;
  reg [31:0] mult_7_z_asn_itm_2;
  reg [31:0] mult_7_z_asn_itm_3;
  reg [31:0] mult_7_z_asn_itm_4;
  reg [31:0] mult_8_z_asn_itm_1;
  reg [31:0] mult_8_z_asn_itm_2;
  reg [31:0] mult_8_z_asn_itm_3;
  reg [31:0] mult_8_z_asn_itm_4;
  reg [31:0] mult_9_z_asn_itm_1;
  reg [31:0] mult_9_z_asn_itm_2;
  reg [31:0] mult_9_z_asn_itm_3;
  reg [31:0] mult_9_z_asn_itm_4;
  reg [31:0] mult_10_z_asn_itm_1;
  reg [31:0] mult_10_z_asn_itm_2;
  reg [31:0] mult_10_z_asn_itm_3;
  reg [31:0] mult_10_z_asn_itm_4;
  reg [31:0] mult_11_z_asn_itm_1;
  reg [31:0] mult_11_z_asn_itm_2;
  reg [31:0] mult_11_z_asn_itm_3;
  reg [31:0] mult_11_z_asn_itm_4;
  reg [31:0] mult_12_z_asn_itm_1;
  reg [31:0] mult_12_z_asn_itm_2;
  reg [31:0] mult_12_z_asn_itm_3;
  reg [31:0] mult_12_z_asn_itm_4;
  reg [31:0] mult_13_z_asn_itm_1;
  reg [31:0] mult_13_z_asn_itm_2;
  reg [31:0] mult_13_z_asn_itm_3;
  reg [31:0] mult_13_z_asn_itm_4;
  reg [31:0] mult_14_z_asn_itm_1;
  reg [31:0] mult_14_z_asn_itm_2;
  reg [31:0] mult_14_z_asn_itm_3;
  reg [31:0] mult_14_z_asn_itm_4;
  reg [31:0] mult_15_z_asn_itm_1;
  reg [31:0] mult_15_z_asn_itm_2;
  reg [31:0] mult_15_z_asn_itm_3;
  reg [31:0] mult_15_z_asn_itm_4;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_1;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_2;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_3;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_4;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_5;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_6;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_7;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_8;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_9;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_1;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_2;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_3;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_4;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_5;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_6;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_7;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_8;
  reg [3:0] INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_9;
  reg INNER_LOOP2_stage_0_8;
  reg INNER_LOOP2_stage_0_9;
  reg INNER_LOOP2_stage_0_10;
  reg INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4302_itm;
  reg [31:0] tmp_lpi_3_dfm_1;
  reg [31:0] tmp_lpi_3_dfm_2;
  reg [31:0] tmp_lpi_3_dfm_3;
  reg [31:0] tmp_lpi_3_dfm_4;
  reg [31:0] tmp_lpi_3_dfm_5;
  reg [31:0] tmp_lpi_3_dfm_6;
  reg [31:0] tmp_lpi_3_dfm_7;
  reg [31:0] mult_16_res_sva_1;
  reg [31:0] tmp_2_lpi_3_dfm_1;
  reg [31:0] tmp_2_lpi_3_dfm_2;
  reg [31:0] tmp_2_lpi_3_dfm_3;
  reg [31:0] tmp_2_lpi_3_dfm_4;
  reg [31:0] tmp_2_lpi_3_dfm_5;
  reg [31:0] tmp_2_lpi_3_dfm_6;
  reg [31:0] tmp_2_lpi_3_dfm_7;
  reg [31:0] mult_17_res_sva_1;
  reg [31:0] tmp_4_lpi_3_dfm_1;
  reg [31:0] tmp_4_lpi_3_dfm_2;
  reg [31:0] tmp_4_lpi_3_dfm_3;
  reg [31:0] tmp_4_lpi_3_dfm_4;
  reg [31:0] tmp_4_lpi_3_dfm_5;
  reg [31:0] tmp_4_lpi_3_dfm_6;
  reg [31:0] tmp_4_lpi_3_dfm_7;
  reg [31:0] mult_18_res_sva_1;
  reg [31:0] tmp_6_lpi_3_dfm_1;
  reg [31:0] tmp_6_lpi_3_dfm_2;
  reg [31:0] tmp_6_lpi_3_dfm_3;
  reg [31:0] tmp_6_lpi_3_dfm_4;
  reg [31:0] tmp_6_lpi_3_dfm_5;
  reg [31:0] tmp_6_lpi_3_dfm_6;
  reg [31:0] tmp_6_lpi_3_dfm_7;
  reg [31:0] mult_19_res_sva_1;
  reg [31:0] tmp_8_lpi_3_dfm_1;
  reg [31:0] tmp_8_lpi_3_dfm_2;
  reg [31:0] tmp_8_lpi_3_dfm_3;
  reg [31:0] tmp_8_lpi_3_dfm_4;
  reg [31:0] tmp_8_lpi_3_dfm_5;
  reg [31:0] tmp_8_lpi_3_dfm_6;
  reg [31:0] tmp_8_lpi_3_dfm_7;
  reg [31:0] mult_20_res_sva_1;
  reg [31:0] tmp_10_lpi_3_dfm_1;
  reg [31:0] tmp_10_lpi_3_dfm_2;
  reg [31:0] tmp_10_lpi_3_dfm_3;
  reg [31:0] tmp_10_lpi_3_dfm_4;
  reg [31:0] tmp_10_lpi_3_dfm_5;
  reg [31:0] tmp_10_lpi_3_dfm_6;
  reg [31:0] tmp_10_lpi_3_dfm_7;
  reg [31:0] mult_21_res_sva_1;
  reg [31:0] tmp_12_lpi_3_dfm_1;
  reg [31:0] tmp_12_lpi_3_dfm_2;
  reg [31:0] tmp_12_lpi_3_dfm_3;
  reg [31:0] tmp_12_lpi_3_dfm_4;
  reg [31:0] tmp_12_lpi_3_dfm_5;
  reg [31:0] tmp_12_lpi_3_dfm_6;
  reg [31:0] tmp_12_lpi_3_dfm_7;
  reg [31:0] mult_22_res_sva_1;
  reg [31:0] tmp_14_lpi_3_dfm_1;
  reg [31:0] tmp_14_lpi_3_dfm_2;
  reg [31:0] tmp_14_lpi_3_dfm_3;
  reg [31:0] tmp_14_lpi_3_dfm_4;
  reg [31:0] tmp_14_lpi_3_dfm_5;
  reg [31:0] tmp_14_lpi_3_dfm_6;
  reg [31:0] tmp_14_lpi_3_dfm_7;
  reg [31:0] mult_23_res_sva_1;
  reg [31:0] tmp_16_lpi_3_dfm_1;
  reg [31:0] tmp_16_lpi_3_dfm_2;
  reg [31:0] tmp_16_lpi_3_dfm_3;
  reg [31:0] tmp_16_lpi_3_dfm_4;
  reg [31:0] tmp_16_lpi_3_dfm_5;
  reg [31:0] tmp_16_lpi_3_dfm_6;
  reg [31:0] tmp_16_lpi_3_dfm_7;
  reg [31:0] mult_24_res_sva_1;
  reg [31:0] tmp_18_lpi_3_dfm_1;
  reg [31:0] tmp_18_lpi_3_dfm_2;
  reg [31:0] tmp_18_lpi_3_dfm_3;
  reg [31:0] tmp_18_lpi_3_dfm_4;
  reg [31:0] tmp_18_lpi_3_dfm_5;
  reg [31:0] tmp_18_lpi_3_dfm_6;
  reg [31:0] tmp_18_lpi_3_dfm_7;
  reg [31:0] mult_25_res_sva_1;
  reg [31:0] tmp_20_lpi_3_dfm_1;
  reg [31:0] tmp_20_lpi_3_dfm_2;
  reg [31:0] tmp_20_lpi_3_dfm_3;
  reg [31:0] tmp_20_lpi_3_dfm_4;
  reg [31:0] tmp_20_lpi_3_dfm_5;
  reg [31:0] tmp_20_lpi_3_dfm_6;
  reg [31:0] tmp_20_lpi_3_dfm_7;
  reg [31:0] mult_26_res_sva_1;
  reg [31:0] tmp_22_lpi_3_dfm_1;
  reg [31:0] tmp_22_lpi_3_dfm_2;
  reg [31:0] tmp_22_lpi_3_dfm_3;
  reg [31:0] tmp_22_lpi_3_dfm_4;
  reg [31:0] tmp_22_lpi_3_dfm_5;
  reg [31:0] tmp_22_lpi_3_dfm_6;
  reg [31:0] tmp_22_lpi_3_dfm_7;
  reg [31:0] mult_27_res_sva_1;
  reg [31:0] tmp_24_lpi_3_dfm_1;
  reg [31:0] tmp_24_lpi_3_dfm_2;
  reg [31:0] tmp_24_lpi_3_dfm_3;
  reg [31:0] tmp_24_lpi_3_dfm_4;
  reg [31:0] tmp_24_lpi_3_dfm_5;
  reg [31:0] tmp_24_lpi_3_dfm_6;
  reg [31:0] tmp_24_lpi_3_dfm_7;
  reg [31:0] mult_28_res_sva_1;
  reg [31:0] tmp_26_lpi_3_dfm_1;
  reg [31:0] tmp_26_lpi_3_dfm_2;
  reg [31:0] tmp_26_lpi_3_dfm_3;
  reg [31:0] tmp_26_lpi_3_dfm_4;
  reg [31:0] tmp_26_lpi_3_dfm_5;
  reg [31:0] tmp_26_lpi_3_dfm_6;
  reg [31:0] tmp_26_lpi_3_dfm_7;
  reg [31:0] mult_29_res_sva_1;
  reg [31:0] tmp_28_lpi_3_dfm_1;
  reg [31:0] tmp_28_lpi_3_dfm_2;
  reg [31:0] tmp_28_lpi_3_dfm_3;
  reg [31:0] tmp_28_lpi_3_dfm_4;
  reg [31:0] tmp_28_lpi_3_dfm_5;
  reg [31:0] tmp_28_lpi_3_dfm_6;
  reg [31:0] tmp_28_lpi_3_dfm_7;
  reg [31:0] mult_30_res_sva_1;
  reg [31:0] tmp_30_lpi_3_dfm_1;
  reg [31:0] tmp_30_lpi_3_dfm_2;
  reg [31:0] tmp_30_lpi_3_dfm_3;
  reg [31:0] tmp_30_lpi_3_dfm_4;
  reg [31:0] tmp_30_lpi_3_dfm_5;
  reg [31:0] tmp_30_lpi_3_dfm_6;
  reg [31:0] tmp_30_lpi_3_dfm_7;
  reg [31:0] mult_31_res_sva_1;
  reg [31:0] mult_16_z_asn_itm_2;
  reg [31:0] mult_16_z_asn_itm_3;
  reg [31:0] mult_16_z_asn_itm_4;
  reg [3:0] INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_290_itm_10;
  reg [3:0] INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_306_itm_10;
  reg [31:0] mult_17_z_asn_itm_2;
  reg [31:0] mult_17_z_asn_itm_3;
  reg [31:0] mult_17_z_asn_itm_4;
  reg [31:0] mult_18_z_asn_itm_2;
  reg [31:0] mult_18_z_asn_itm_3;
  reg [31:0] mult_18_z_asn_itm_4;
  reg [31:0] mult_19_z_asn_itm_2;
  reg [31:0] mult_19_z_asn_itm_3;
  reg [31:0] mult_19_z_asn_itm_4;
  reg [31:0] mult_20_z_asn_itm_2;
  reg [31:0] mult_20_z_asn_itm_3;
  reg [31:0] mult_20_z_asn_itm_4;
  reg [31:0] mult_21_z_asn_itm_2;
  reg [31:0] mult_21_z_asn_itm_3;
  reg [31:0] mult_21_z_asn_itm_4;
  reg [31:0] mult_22_z_asn_itm_2;
  reg [31:0] mult_22_z_asn_itm_3;
  reg [31:0] mult_22_z_asn_itm_4;
  reg [31:0] mult_23_z_asn_itm_2;
  reg [31:0] mult_23_z_asn_itm_3;
  reg [31:0] mult_23_z_asn_itm_4;
  reg [31:0] mult_24_z_asn_itm_2;
  reg [31:0] mult_24_z_asn_itm_3;
  reg [31:0] mult_24_z_asn_itm_4;
  reg [31:0] mult_25_z_asn_itm_2;
  reg [31:0] mult_25_z_asn_itm_3;
  reg [31:0] mult_25_z_asn_itm_4;
  reg [31:0] mult_26_z_asn_itm_2;
  reg [31:0] mult_26_z_asn_itm_3;
  reg [31:0] mult_26_z_asn_itm_4;
  reg [31:0] mult_27_z_asn_itm_2;
  reg [31:0] mult_27_z_asn_itm_3;
  reg [31:0] mult_27_z_asn_itm_4;
  reg [31:0] mult_28_z_asn_itm_2;
  reg [31:0] mult_28_z_asn_itm_3;
  reg [31:0] mult_28_z_asn_itm_4;
  reg [31:0] mult_29_z_asn_itm_2;
  reg [31:0] mult_29_z_asn_itm_3;
  reg [31:0] mult_29_z_asn_itm_4;
  reg [31:0] mult_30_z_asn_itm_2;
  reg [31:0] mult_30_z_asn_itm_3;
  reg [31:0] mult_30_z_asn_itm_4;
  reg [31:0] mult_31_z_asn_itm_2;
  reg [31:0] mult_31_z_asn_itm_3;
  reg [31:0] mult_31_z_asn_itm_4;
  reg [3:0] INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_1;
  reg [3:0] INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_2;
  reg [3:0] INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_3;
  reg [3:0] INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_4;
  reg [3:0] INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_5;
  reg [3:0] INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_6;
  reg [3:0] INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_7;
  reg [3:0] INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_8;
  reg [3:0] INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_9;
  reg [3:0] INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_1;
  reg [3:0] INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_2;
  reg [3:0] INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_3;
  reg [3:0] INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_4;
  reg [3:0] INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_5;
  reg [3:0] INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_6;
  reg [3:0] INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_7;
  reg [3:0] INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_8;
  reg [3:0] INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_9;
  reg INNER_LOOP3_stage_0_8;
  reg INNER_LOOP3_stage_0_9;
  reg INNER_LOOP3_stage_0_10;
  reg INNER_LOOP3_stage_0_11;
  reg [31:0] tmp_96_lpi_3_dfm_1;
  reg [31:0] tmp_96_lpi_3_dfm_2;
  reg [31:0] tmp_96_lpi_3_dfm_3;
  reg [31:0] tmp_96_lpi_3_dfm_4;
  reg [31:0] tmp_96_lpi_3_dfm_5;
  reg [31:0] tmp_96_lpi_3_dfm_6;
  reg [31:0] tmp_96_lpi_3_dfm_7;
  reg [31:0] mult_32_res_sva_1;
  reg [31:0] tmp_98_lpi_3_dfm_1;
  reg [31:0] tmp_98_lpi_3_dfm_2;
  reg [31:0] tmp_98_lpi_3_dfm_3;
  reg [31:0] tmp_98_lpi_3_dfm_4;
  reg [31:0] tmp_98_lpi_3_dfm_5;
  reg [31:0] tmp_98_lpi_3_dfm_6;
  reg [31:0] tmp_98_lpi_3_dfm_7;
  reg [31:0] mult_33_res_sva_1;
  reg [31:0] tmp_100_lpi_3_dfm_1;
  reg [31:0] tmp_100_lpi_3_dfm_2;
  reg [31:0] tmp_100_lpi_3_dfm_3;
  reg [31:0] tmp_100_lpi_3_dfm_4;
  reg [31:0] tmp_100_lpi_3_dfm_5;
  reg [31:0] tmp_100_lpi_3_dfm_6;
  reg [31:0] tmp_100_lpi_3_dfm_7;
  reg [31:0] mult_34_res_sva_1;
  reg [31:0] tmp_102_lpi_3_dfm_1;
  reg [31:0] tmp_102_lpi_3_dfm_2;
  reg [31:0] tmp_102_lpi_3_dfm_3;
  reg [31:0] tmp_102_lpi_3_dfm_4;
  reg [31:0] tmp_102_lpi_3_dfm_5;
  reg [31:0] tmp_102_lpi_3_dfm_6;
  reg [31:0] tmp_102_lpi_3_dfm_7;
  reg [31:0] mult_35_res_sva_1;
  reg [31:0] tmp_104_lpi_3_dfm_1;
  reg [31:0] tmp_104_lpi_3_dfm_2;
  reg [31:0] tmp_104_lpi_3_dfm_3;
  reg [31:0] tmp_104_lpi_3_dfm_4;
  reg [31:0] tmp_104_lpi_3_dfm_5;
  reg [31:0] tmp_104_lpi_3_dfm_6;
  reg [31:0] tmp_104_lpi_3_dfm_7;
  reg [31:0] mult_36_res_sva_1;
  reg [31:0] tmp_106_lpi_3_dfm_1;
  reg [31:0] tmp_106_lpi_3_dfm_2;
  reg [31:0] tmp_106_lpi_3_dfm_3;
  reg [31:0] tmp_106_lpi_3_dfm_4;
  reg [31:0] tmp_106_lpi_3_dfm_5;
  reg [31:0] tmp_106_lpi_3_dfm_6;
  reg [31:0] tmp_106_lpi_3_dfm_7;
  reg [31:0] mult_37_res_sva_1;
  reg [31:0] tmp_108_lpi_3_dfm_1;
  reg [31:0] tmp_108_lpi_3_dfm_2;
  reg [31:0] tmp_108_lpi_3_dfm_3;
  reg [31:0] tmp_108_lpi_3_dfm_4;
  reg [31:0] tmp_108_lpi_3_dfm_5;
  reg [31:0] tmp_108_lpi_3_dfm_6;
  reg [31:0] tmp_108_lpi_3_dfm_7;
  reg [31:0] mult_38_res_sva_1;
  reg [31:0] tmp_110_lpi_3_dfm_1;
  reg [31:0] tmp_110_lpi_3_dfm_2;
  reg [31:0] tmp_110_lpi_3_dfm_3;
  reg [31:0] tmp_110_lpi_3_dfm_4;
  reg [31:0] tmp_110_lpi_3_dfm_5;
  reg [31:0] tmp_110_lpi_3_dfm_6;
  reg [31:0] tmp_110_lpi_3_dfm_7;
  reg [31:0] mult_39_res_sva_1;
  reg [31:0] tmp_112_lpi_3_dfm_1;
  reg [31:0] tmp_112_lpi_3_dfm_2;
  reg [31:0] tmp_112_lpi_3_dfm_3;
  reg [31:0] tmp_112_lpi_3_dfm_4;
  reg [31:0] tmp_112_lpi_3_dfm_5;
  reg [31:0] tmp_112_lpi_3_dfm_6;
  reg [31:0] tmp_112_lpi_3_dfm_7;
  reg [31:0] mult_40_res_sva_1;
  reg [31:0] tmp_114_lpi_3_dfm_1;
  reg [31:0] tmp_114_lpi_3_dfm_2;
  reg [31:0] tmp_114_lpi_3_dfm_3;
  reg [31:0] tmp_114_lpi_3_dfm_4;
  reg [31:0] tmp_114_lpi_3_dfm_5;
  reg [31:0] tmp_114_lpi_3_dfm_6;
  reg [31:0] tmp_114_lpi_3_dfm_7;
  reg [31:0] mult_41_res_sva_1;
  reg [31:0] tmp_116_lpi_3_dfm_1;
  reg [31:0] tmp_116_lpi_3_dfm_2;
  reg [31:0] tmp_116_lpi_3_dfm_3;
  reg [31:0] tmp_116_lpi_3_dfm_4;
  reg [31:0] tmp_116_lpi_3_dfm_5;
  reg [31:0] tmp_116_lpi_3_dfm_6;
  reg [31:0] tmp_116_lpi_3_dfm_7;
  reg [31:0] mult_42_res_sva_1;
  reg [31:0] tmp_118_lpi_3_dfm_1;
  reg [31:0] tmp_118_lpi_3_dfm_2;
  reg [31:0] tmp_118_lpi_3_dfm_3;
  reg [31:0] tmp_118_lpi_3_dfm_4;
  reg [31:0] tmp_118_lpi_3_dfm_5;
  reg [31:0] tmp_118_lpi_3_dfm_6;
  reg [31:0] tmp_118_lpi_3_dfm_7;
  reg [31:0] mult_43_res_sva_1;
  reg [31:0] tmp_120_lpi_3_dfm_1;
  reg [31:0] tmp_120_lpi_3_dfm_2;
  reg [31:0] tmp_120_lpi_3_dfm_3;
  reg [31:0] tmp_120_lpi_3_dfm_4;
  reg [31:0] tmp_120_lpi_3_dfm_5;
  reg [31:0] tmp_120_lpi_3_dfm_6;
  reg [31:0] tmp_120_lpi_3_dfm_7;
  reg [31:0] mult_44_res_sva_1;
  reg [31:0] tmp_122_lpi_3_dfm_1;
  reg [31:0] tmp_122_lpi_3_dfm_2;
  reg [31:0] tmp_122_lpi_3_dfm_3;
  reg [31:0] tmp_122_lpi_3_dfm_4;
  reg [31:0] tmp_122_lpi_3_dfm_5;
  reg [31:0] tmp_122_lpi_3_dfm_6;
  reg [31:0] tmp_122_lpi_3_dfm_7;
  reg [31:0] mult_45_res_sva_1;
  reg [31:0] tmp_124_lpi_3_dfm_1;
  reg [31:0] tmp_124_lpi_3_dfm_2;
  reg [31:0] tmp_124_lpi_3_dfm_3;
  reg [31:0] tmp_124_lpi_3_dfm_4;
  reg [31:0] tmp_124_lpi_3_dfm_5;
  reg [31:0] tmp_124_lpi_3_dfm_6;
  reg [31:0] tmp_124_lpi_3_dfm_7;
  reg [31:0] mult_46_res_sva_1;
  reg [31:0] tmp_126_lpi_3_dfm_1;
  reg [31:0] tmp_126_lpi_3_dfm_2;
  reg [31:0] tmp_126_lpi_3_dfm_3;
  reg [31:0] tmp_126_lpi_3_dfm_4;
  reg [31:0] tmp_126_lpi_3_dfm_5;
  reg [31:0] tmp_126_lpi_3_dfm_6;
  reg [31:0] tmp_126_lpi_3_dfm_7;
  reg butterFly2_15_tw_equal_tmp_1;
  reg butterFly2_15_tw_equal_tmp_3_1;
  reg butterFly2_15_tw_equal_tmp_5_1;
  reg butterFly2_15_tw_equal_tmp_6_1;
  reg butterFly2_15_tw_equal_tmp_7_1;
  reg [31:0] mult_47_res_sva_1;
  reg [31:0] mult_32_z_asn_itm_2;
  reg [31:0] mult_32_z_asn_itm_3;
  reg [31:0] mult_32_z_asn_itm_4;
  reg [31:0] mult_33_z_asn_itm_2;
  reg [31:0] mult_33_z_asn_itm_3;
  reg [31:0] mult_33_z_asn_itm_4;
  reg [31:0] mult_34_z_asn_itm_2;
  reg [31:0] mult_34_z_asn_itm_3;
  reg [31:0] mult_34_z_asn_itm_4;
  reg [31:0] mult_35_z_asn_itm_2;
  reg [31:0] mult_35_z_asn_itm_3;
  reg [31:0] mult_35_z_asn_itm_4;
  reg [31:0] mult_36_z_asn_itm_2;
  reg [31:0] mult_36_z_asn_itm_3;
  reg [31:0] mult_36_z_asn_itm_4;
  reg [31:0] mult_37_z_asn_itm_2;
  reg [31:0] mult_37_z_asn_itm_3;
  reg [31:0] mult_37_z_asn_itm_4;
  reg [31:0] mult_38_z_asn_itm_2;
  reg [31:0] mult_38_z_asn_itm_3;
  reg [31:0] mult_38_z_asn_itm_4;
  reg [31:0] mult_39_z_asn_itm_2;
  reg [31:0] mult_39_z_asn_itm_3;
  reg [31:0] mult_39_z_asn_itm_4;
  reg [31:0] mult_40_z_asn_itm_2;
  reg [31:0] mult_40_z_asn_itm_3;
  reg [31:0] mult_40_z_asn_itm_4;
  reg [31:0] mult_41_z_asn_itm_2;
  reg [31:0] mult_41_z_asn_itm_3;
  reg [31:0] mult_41_z_asn_itm_4;
  reg [31:0] mult_42_z_asn_itm_2;
  reg [31:0] mult_42_z_asn_itm_3;
  reg [31:0] mult_42_z_asn_itm_4;
  reg [31:0] mult_43_z_asn_itm_2;
  reg [31:0] mult_43_z_asn_itm_3;
  reg [31:0] mult_43_z_asn_itm_4;
  reg [31:0] mult_44_z_asn_itm_2;
  reg [31:0] mult_44_z_asn_itm_3;
  reg [31:0] mult_44_z_asn_itm_4;
  reg [31:0] mult_45_z_asn_itm_2;
  reg [31:0] mult_45_z_asn_itm_3;
  reg [31:0] mult_45_z_asn_itm_4;
  reg [31:0] mult_46_z_asn_itm_2;
  reg [31:0] mult_46_z_asn_itm_3;
  reg [31:0] mult_46_z_asn_itm_4;
  reg [31:0] mult_47_z_asn_itm_2;
  reg [31:0] mult_47_z_asn_itm_3;
  reg [31:0] mult_47_z_asn_itm_4;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_1;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_2;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_3;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_4;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_5;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_6;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_7;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_8;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_9;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_1;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_2;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_3;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_4;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_5;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_6;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_7;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_8;
  reg [3:0] INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_9;
  reg INNER_LOOP4_stage_0_8;
  reg INNER_LOOP4_stage_0_9;
  reg INNER_LOOP4_stage_0_10;
  reg INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4377_itm;
  reg [31:0] tmp_32_lpi_3_dfm_2;
  reg [31:0] tmp_32_lpi_3_dfm_3;
  reg [31:0] tmp_32_lpi_3_dfm_4;
  reg [31:0] tmp_32_lpi_3_dfm_5;
  reg [31:0] tmp_32_lpi_3_dfm_6;
  reg [31:0] tmp_32_lpi_3_dfm_7;
  reg [31:0] mult_48_res_sva_1;
  reg [31:0] tmp_34_lpi_3_dfm_2;
  reg [31:0] tmp_34_lpi_3_dfm_3;
  reg [31:0] tmp_34_lpi_3_dfm_4;
  reg [31:0] tmp_34_lpi_3_dfm_5;
  reg [31:0] tmp_34_lpi_3_dfm_6;
  reg [31:0] tmp_34_lpi_3_dfm_7;
  reg [31:0] mult_49_res_sva_1;
  reg [31:0] tmp_36_lpi_3_dfm_2;
  reg [31:0] tmp_36_lpi_3_dfm_3;
  reg [31:0] tmp_36_lpi_3_dfm_4;
  reg [31:0] tmp_36_lpi_3_dfm_5;
  reg [31:0] tmp_36_lpi_3_dfm_6;
  reg [31:0] tmp_36_lpi_3_dfm_7;
  reg [31:0] mult_50_res_sva_1;
  reg [31:0] tmp_38_lpi_3_dfm_2;
  reg [31:0] tmp_38_lpi_3_dfm_3;
  reg [31:0] tmp_38_lpi_3_dfm_4;
  reg [31:0] tmp_38_lpi_3_dfm_5;
  reg [31:0] tmp_38_lpi_3_dfm_6;
  reg [31:0] tmp_38_lpi_3_dfm_7;
  reg [31:0] mult_51_res_sva_1;
  reg [31:0] tmp_40_lpi_3_dfm_2;
  reg [31:0] tmp_40_lpi_3_dfm_3;
  reg [31:0] tmp_40_lpi_3_dfm_4;
  reg [31:0] tmp_40_lpi_3_dfm_5;
  reg [31:0] tmp_40_lpi_3_dfm_6;
  reg [31:0] tmp_40_lpi_3_dfm_7;
  reg [31:0] mult_52_res_sva_1;
  reg [31:0] tmp_42_lpi_3_dfm_2;
  reg [31:0] tmp_42_lpi_3_dfm_3;
  reg [31:0] tmp_42_lpi_3_dfm_4;
  reg [31:0] tmp_42_lpi_3_dfm_5;
  reg [31:0] tmp_42_lpi_3_dfm_6;
  reg [31:0] tmp_42_lpi_3_dfm_7;
  reg [31:0] mult_53_res_sva_1;
  reg [31:0] tmp_44_lpi_3_dfm_2;
  reg [31:0] tmp_44_lpi_3_dfm_3;
  reg [31:0] tmp_44_lpi_3_dfm_4;
  reg [31:0] tmp_44_lpi_3_dfm_5;
  reg [31:0] tmp_44_lpi_3_dfm_6;
  reg [31:0] tmp_44_lpi_3_dfm_7;
  reg [31:0] mult_54_res_sva_1;
  reg [31:0] tmp_46_lpi_3_dfm_2;
  reg [31:0] tmp_46_lpi_3_dfm_3;
  reg [31:0] tmp_46_lpi_3_dfm_4;
  reg [31:0] tmp_46_lpi_3_dfm_5;
  reg [31:0] tmp_46_lpi_3_dfm_6;
  reg [31:0] tmp_46_lpi_3_dfm_7;
  reg [31:0] mult_55_res_sva_1;
  reg [31:0] tmp_48_lpi_3_dfm_2;
  reg [31:0] tmp_48_lpi_3_dfm_3;
  reg [31:0] tmp_48_lpi_3_dfm_4;
  reg [31:0] tmp_48_lpi_3_dfm_5;
  reg [31:0] tmp_48_lpi_3_dfm_6;
  reg [31:0] tmp_48_lpi_3_dfm_7;
  reg [31:0] mult_56_res_sva_1;
  reg [31:0] tmp_50_lpi_3_dfm_2;
  reg [31:0] tmp_50_lpi_3_dfm_3;
  reg [31:0] tmp_50_lpi_3_dfm_4;
  reg [31:0] tmp_50_lpi_3_dfm_5;
  reg [31:0] tmp_50_lpi_3_dfm_6;
  reg [31:0] tmp_50_lpi_3_dfm_7;
  reg [31:0] mult_57_res_sva_1;
  reg [31:0] tmp_52_lpi_3_dfm_2;
  reg [31:0] tmp_52_lpi_3_dfm_3;
  reg [31:0] tmp_52_lpi_3_dfm_4;
  reg [31:0] tmp_52_lpi_3_dfm_5;
  reg [31:0] tmp_52_lpi_3_dfm_6;
  reg [31:0] tmp_52_lpi_3_dfm_7;
  reg [31:0] mult_58_res_sva_1;
  reg [31:0] tmp_54_lpi_3_dfm_2;
  reg [31:0] tmp_54_lpi_3_dfm_3;
  reg [31:0] tmp_54_lpi_3_dfm_4;
  reg [31:0] tmp_54_lpi_3_dfm_5;
  reg [31:0] tmp_54_lpi_3_dfm_6;
  reg [31:0] tmp_54_lpi_3_dfm_7;
  reg [31:0] mult_59_res_sva_1;
  reg [31:0] tmp_56_lpi_3_dfm_2;
  reg [31:0] tmp_56_lpi_3_dfm_3;
  reg [31:0] tmp_56_lpi_3_dfm_4;
  reg [31:0] tmp_56_lpi_3_dfm_5;
  reg [31:0] tmp_56_lpi_3_dfm_6;
  reg [31:0] tmp_56_lpi_3_dfm_7;
  reg [31:0] mult_60_res_sva_1;
  reg [31:0] tmp_58_lpi_3_dfm_2;
  reg [31:0] tmp_58_lpi_3_dfm_3;
  reg [31:0] tmp_58_lpi_3_dfm_4;
  reg [31:0] tmp_58_lpi_3_dfm_5;
  reg [31:0] tmp_58_lpi_3_dfm_6;
  reg [31:0] tmp_58_lpi_3_dfm_7;
  reg [31:0] mult_61_res_sva_1;
  reg [31:0] tmp_60_lpi_3_dfm_2;
  reg [31:0] tmp_60_lpi_3_dfm_3;
  reg [31:0] tmp_60_lpi_3_dfm_4;
  reg [31:0] tmp_60_lpi_3_dfm_5;
  reg [31:0] tmp_60_lpi_3_dfm_6;
  reg [31:0] tmp_60_lpi_3_dfm_7;
  reg [31:0] mult_62_res_sva_1;
  reg [31:0] tmp_62_lpi_3_dfm_2;
  reg [31:0] tmp_62_lpi_3_dfm_3;
  reg [31:0] tmp_62_lpi_3_dfm_4;
  reg [31:0] tmp_62_lpi_3_dfm_5;
  reg [31:0] tmp_62_lpi_3_dfm_6;
  reg [31:0] tmp_62_lpi_3_dfm_7;
  reg [31:0] mult_63_res_sva_1;
  reg [31:0] mult_48_z_asn_itm_2;
  reg [31:0] mult_48_z_asn_itm_3;
  reg [31:0] mult_48_z_asn_itm_4;
  reg [3:0] INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_321_itm_10;
  reg [3:0] INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_337_itm_10;
  reg [31:0] mult_49_z_asn_itm_2;
  reg [31:0] mult_49_z_asn_itm_3;
  reg [31:0] mult_49_z_asn_itm_4;
  reg [31:0] mult_50_z_asn_itm_2;
  reg [31:0] mult_50_z_asn_itm_3;
  reg [31:0] mult_50_z_asn_itm_4;
  reg [31:0] mult_51_z_asn_itm_2;
  reg [31:0] mult_51_z_asn_itm_3;
  reg [31:0] mult_51_z_asn_itm_4;
  reg [31:0] mult_52_z_asn_itm_2;
  reg [31:0] mult_52_z_asn_itm_3;
  reg [31:0] mult_52_z_asn_itm_4;
  reg [31:0] mult_53_z_asn_itm_2;
  reg [31:0] mult_53_z_asn_itm_3;
  reg [31:0] mult_53_z_asn_itm_4;
  reg [31:0] mult_54_z_asn_itm_2;
  reg [31:0] mult_54_z_asn_itm_3;
  reg [31:0] mult_54_z_asn_itm_4;
  reg [31:0] mult_55_z_asn_itm_2;
  reg [31:0] mult_55_z_asn_itm_3;
  reg [31:0] mult_55_z_asn_itm_4;
  reg [31:0] mult_56_z_asn_itm_2;
  reg [31:0] mult_56_z_asn_itm_3;
  reg [31:0] mult_56_z_asn_itm_4;
  reg [31:0] mult_57_z_asn_itm_2;
  reg [31:0] mult_57_z_asn_itm_3;
  reg [31:0] mult_57_z_asn_itm_4;
  reg [31:0] mult_58_z_asn_itm_2;
  reg [31:0] mult_58_z_asn_itm_3;
  reg [31:0] mult_58_z_asn_itm_4;
  reg [31:0] mult_59_z_asn_itm_2;
  reg [31:0] mult_59_z_asn_itm_3;
  reg [31:0] mult_59_z_asn_itm_4;
  reg [31:0] mult_60_z_asn_itm_2;
  reg [31:0] mult_60_z_asn_itm_3;
  reg [31:0] mult_60_z_asn_itm_4;
  reg [31:0] mult_61_z_asn_itm_2;
  reg [31:0] mult_61_z_asn_itm_3;
  reg [31:0] mult_61_z_asn_itm_4;
  reg [31:0] mult_62_z_asn_itm_2;
  reg [31:0] mult_62_z_asn_itm_3;
  reg [31:0] mult_62_z_asn_itm_4;
  reg [31:0] mult_63_z_asn_itm_2;
  reg [31:0] mult_63_z_asn_itm_3;
  reg [31:0] mult_63_z_asn_itm_4;
  reg [3:0] INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_1;
  reg [3:0] INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_2;
  reg [3:0] INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_3;
  reg [3:0] INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_4;
  reg [3:0] INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_5;
  reg [3:0] INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_6;
  reg [3:0] INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_7;
  reg [3:0] INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_8;
  reg [3:0] INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_9;
  reg [3:0] INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_1;
  reg [3:0] INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_2;
  reg [3:0] INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_3;
  reg [3:0] INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_4;
  reg [3:0] INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_5;
  reg [3:0] INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_6;
  reg [3:0] INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_7;
  reg [3:0] INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_8;
  reg [3:0] INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_9;
  wire [1:0] operator_33_true_3_lshift_psp_1_0_sva_mx0w2;
  wire [2:0] operator_20_false_acc_cse_sva_mx0w0;
  wire [3:0] nl_operator_20_false_acc_cse_sva_mx0w0;
  wire [4:0] INNER_LOOP1_tw_and_psp_sva_1;
  wire modulo_add_qelse_and_cse;
  wire butterFly1_and_cse;
  wire mult_15_if_and_cse;
  wire and_876_cse;
  wire mult_15_z_and_cse;
  wire mult_15_z_and_cse_1;
  wire mult_15_z_and_1_cse;
  wire mult_15_z_and_2_cse;
  wire mult_15_z_and_3_cse;
  wire INNER_LOOP1_r_and_20_cse;
  wire INNER_LOOP1_r_and_23_cse;
  wire INNER_LOOP1_r_and_26_cse;
  wire INNER_LOOP1_r_and_29_cse;
  wire INNER_LOOP1_r_and_7_cse;
  wire butterFly1_16_and_cse;
  wire mult_31_if_and_cse;
  wire and_877_cse;
  wire mult_31_z_and_cse;
  wire mult_31_z_and_1_cse;
  wire mult_31_z_and_2_cse;
  wire INNER_LOOP2_r_and_17_cse;
  wire INNER_LOOP2_r_and_20_cse;
  wire INNER_LOOP2_r_and_23_cse;
  wire butterFly1_31_f1_and_7_cse;
  wire INNER_LOOP2_r_and_3_cse;
  wire INNER_LOOP2_r_and_4_cse;
  wire modulo_add_32_qelse_and_cse;
  wire butterFly2_and_cse;
  wire mult_47_if_and_cse;
  wire butterFly2_15_tw_and_cse;
  wire mult_47_z_and_cse;
  wire mult_47_z_and_1_cse;
  wire mult_47_z_and_2_cse;
  wire INNER_LOOP3_r_and_19_cse;
  wire INNER_LOOP3_r_and_22_cse;
  wire INNER_LOOP3_r_and_25_cse;
  wire INNER_LOOP3_r_and_28_cse;
  wire butterFly2_16_and_cse;
  wire mult_63_if_and_cse;
  wire mult_63_z_and_cse;
  wire mult_63_z_and_1_cse;
  wire mult_63_z_and_2_cse;
  wire INNER_LOOP4_r_and_17_cse;
  wire INNER_LOOP4_r_and_20_cse;
  wire INNER_LOOP4_r_and_23_cse;
  wire INNER_LOOP4_r_and_3_cse;
  wire INNER_LOOP4_r_and_4_cse;
  wire [4:0] INNER_LOOP1_r_INNER_LOOP1_r_and_2_cse;
  wire [4:0] INNER_LOOP1_r_INNER_LOOP1_r_and_6_cse;
  wire INNER_LOOP4_INNER_LOOP4_and_1_cse;
  wire INNER_LOOP3_INNER_LOOP3_and_1_cse;
  wire z_out_32;
  wire z_out_1_32;
  wire z_out_2_32;
  wire z_out_3_32;
  wire z_out_4_32;
  wire z_out_5_32;
  wire z_out_6_32;
  wire z_out_7_32;
  wire z_out_8_32;
  wire z_out_9_32;
  wire z_out_10_32;
  wire z_out_11_32;
  wire z_out_12_32;
  wire z_out_13_32;
  wire z_out_14_32;
  wire z_out_15_32;
  wire z_out_16_32;
  wire z_out_17_32;
  wire z_out_18_32;
  wire z_out_19_32;
  wire z_out_20_32;
  wire z_out_21_32;
  wire z_out_22_32;
  wire z_out_23_32;
  wire z_out_24_32;
  wire z_out_25_32;
  wire z_out_26_32;
  wire z_out_27_32;
  wire z_out_28_32;
  wire z_out_29_32;
  wire z_out_30_32;
  wire z_out_31_32;
  wire z_out_32_32;
  wire z_out_33_32;
  wire z_out_34_32;
  wire z_out_35_32;
  wire z_out_36_32;
  wire z_out_37_32;
  wire z_out_38_32;
  wire z_out_39_32;
  wire z_out_40_32;
  wire z_out_41_32;
  wire z_out_42_32;
  wire z_out_43_32;
  wire z_out_44_32;
  wire z_out_45_32;
  wire z_out_46_32;
  wire z_out_47_32;
  wire [4:0] butterFly2_1_tw_butterFly2_1_tw_mux_cse;
  wire butterFly1_24_or_1_cse;

  wire[0:0] butterFly1_f1_butterFly1_f1_nor_nl;
  wire[0:0] butterFly1_f1_or_nl;
  wire[0:0] butterFly1_f1_and_7_nl;
  wire[0:0] butterFly1_f2_butterFly1_f2_nor_nl;
  wire[0:0] butterFly1_f2_or_nl;
  wire[0:0] butterFly1_f2_and_7_nl;
  wire[0:0] butterFly1_1_f1_butterFly1_1_f1_nor_nl;
  wire[0:0] butterFly1_1_f1_or_nl;
  wire[0:0] butterFly1_1_f1_and_7_nl;
  wire[0:0] butterFly1_1_f2_butterFly1_1_f2_nor_nl;
  wire[0:0] butterFly1_1_f2_or_nl;
  wire[0:0] butterFly1_1_f2_and_7_nl;
  wire[0:0] butterFly1_2_f1_butterFly1_2_f1_nor_nl;
  wire[0:0] butterFly1_2_f1_or_nl;
  wire[0:0] butterFly1_2_f1_and_7_nl;
  wire[0:0] butterFly1_2_f2_butterFly1_2_f2_nor_nl;
  wire[0:0] butterFly1_2_f2_and_6_nl;
  wire[0:0] butterFly1_2_f2_and_7_nl;
  wire[0:0] butterFly1_2_f2_and_8_nl;
  wire[0:0] butterFly1_3_f1_butterFly1_3_f1_nor_nl;
  wire[0:0] butterFly1_3_f1_and_6_nl;
  wire[0:0] butterFly1_3_f1_and_7_nl;
  wire[0:0] butterFly1_3_f1_and_8_nl;
  wire[0:0] butterFly1_3_f2_butterFly1_3_f2_nor_nl;
  wire[0:0] butterFly1_3_f2_and_6_nl;
  wire[0:0] butterFly1_3_f2_and_7_nl;
  wire[0:0] butterFly1_3_f2_and_8_nl;
  wire[0:0] butterFly1_4_f1_butterFly1_4_f1_nor_nl;
  wire[0:0] butterFly1_4_f1_and_6_nl;
  wire[0:0] butterFly1_4_f1_and_7_nl;
  wire[0:0] butterFly1_4_f1_and_8_nl;
  wire[0:0] butterFly1_4_f2_butterFly1_4_f2_nor_nl;
  wire[0:0] butterFly1_4_f2_and_6_nl;
  wire[0:0] butterFly1_4_f2_and_7_nl;
  wire[0:0] butterFly1_4_f2_and_8_nl;
  wire[0:0] butterFly1_5_f1_butterFly1_5_f1_nor_nl;
  wire[0:0] butterFly1_5_f1_and_6_nl;
  wire[0:0] butterFly1_5_f1_and_7_nl;
  wire[0:0] butterFly1_5_f1_and_8_nl;
  wire[0:0] butterFly1_5_f2_butterFly1_5_f2_nor_nl;
  wire[0:0] butterFly1_5_f2_and_6_nl;
  wire[0:0] butterFly1_5_f2_and_7_nl;
  wire[0:0] butterFly1_5_f2_and_8_nl;
  wire[0:0] butterFly1_6_f1_butterFly1_6_f1_nor_nl;
  wire[0:0] butterFly1_6_f1_and_6_nl;
  wire[0:0] butterFly1_6_f1_and_7_nl;
  wire[0:0] butterFly1_6_f1_and_8_nl;
  wire[0:0] butterFly1_6_f2_butterFly1_6_f2_nor_nl;
  wire[0:0] butterFly1_6_f2_and_6_nl;
  wire[0:0] butterFly1_6_f2_and_7_nl;
  wire[0:0] butterFly1_6_f2_and_8_nl;
  wire[0:0] butterFly1_7_f1_butterFly1_7_f1_nor_nl;
  wire[0:0] butterFly1_7_f1_and_6_nl;
  wire[0:0] butterFly1_7_f1_and_7_nl;
  wire[0:0] butterFly1_7_f1_and_8_nl;
  wire[0:0] butterFly1_7_f2_butterFly1_7_f2_nor_nl;
  wire[0:0] butterFly1_7_f2_and_6_nl;
  wire[0:0] butterFly1_7_f2_and_7_nl;
  wire[0:0] butterFly1_7_f2_and_8_nl;
  wire[3:0] INNER_LOOP2_tw_and_nl;
  wire[0:0] mult_4_t_and_nl;
  wire[0:0] mult_4_t_and_1_nl;
  wire[0:0] mult_4_t_and_2_nl;
  wire[0:0] mult_4_t_and_3_nl;
  wire[0:0] nor_4_nl;
  wire[0:0] butterFly2_21_tw_butterFly2_21_tw_or_nl;
  wire[31:0] modulo_add_34_qif_acc_nl;
  wire[32:0] nl_modulo_add_34_qif_acc_nl;
  wire[31:0] modulo_add_35_qif_acc_nl;
  wire[32:0] nl_modulo_add_35_qif_acc_nl;
  wire[31:0] modulo_add_37_qif_acc_nl;
  wire[32:0] nl_modulo_add_37_qif_acc_nl;
  wire[31:0] modulo_add_39_qif_acc_nl;
  wire[32:0] nl_modulo_add_39_qif_acc_nl;
  wire[31:0] modulo_add_41_qif_acc_nl;
  wire[32:0] nl_modulo_add_41_qif_acc_nl;
  wire[31:0] modulo_add_43_qif_acc_nl;
  wire[32:0] nl_modulo_add_43_qif_acc_nl;
  wire[31:0] modulo_add_44_qif_acc_nl;
  wire[32:0] nl_modulo_add_44_qif_acc_nl;
  wire[31:0] modulo_add_45_qif_acc_nl;
  wire[32:0] nl_modulo_add_45_qif_acc_nl;
  wire[31:0] modulo_add_47_qif_acc_nl;
  wire[32:0] nl_modulo_add_47_qif_acc_nl;
  wire[32:0] mult_47_if_acc_1_nl;
  wire[33:0] nl_mult_47_if_acc_1_nl;
  wire[32:0] mult_46_if_acc_1_nl;
  wire[33:0] nl_mult_46_if_acc_1_nl;
  wire[32:0] mult_45_if_acc_1_nl;
  wire[33:0] nl_mult_45_if_acc_1_nl;
  wire[32:0] mult_44_if_acc_1_nl;
  wire[33:0] nl_mult_44_if_acc_1_nl;
  wire[32:0] mult_43_if_acc_1_nl;
  wire[33:0] nl_mult_43_if_acc_1_nl;
  wire[32:0] mult_42_if_acc_1_nl;
  wire[33:0] nl_mult_42_if_acc_1_nl;
  wire[32:0] mult_41_if_acc_1_nl;
  wire[33:0] nl_mult_41_if_acc_1_nl;
  wire[32:0] mult_40_if_acc_1_nl;
  wire[33:0] nl_mult_40_if_acc_1_nl;
  wire[32:0] mult_39_if_acc_1_nl;
  wire[33:0] nl_mult_39_if_acc_1_nl;
  wire[32:0] mult_38_if_acc_1_nl;
  wire[33:0] nl_mult_38_if_acc_1_nl;
  wire[32:0] mult_37_if_acc_1_nl;
  wire[33:0] nl_mult_37_if_acc_1_nl;
  wire[32:0] mult_36_if_acc_1_nl;
  wire[33:0] nl_mult_36_if_acc_1_nl;
  wire[32:0] mult_35_if_acc_1_nl;
  wire[33:0] nl_mult_35_if_acc_1_nl;
  wire[32:0] mult_34_if_acc_1_nl;
  wire[33:0] nl_mult_34_if_acc_1_nl;
  wire[32:0] mult_33_if_acc_1_nl;
  wire[33:0] nl_mult_33_if_acc_1_nl;
  wire[32:0] mult_32_if_acc_1_nl;
  wire[33:0] nl_mult_32_if_acc_1_nl;
  wire[31:0] mult_37_if_acc_nl;
  wire[32:0] nl_mult_37_if_acc_nl;
  wire[31:0] mult_35_if_acc_nl;
  wire[32:0] nl_mult_35_if_acc_nl;
  wire[31:0] mult_33_if_acc_nl;
  wire[32:0] nl_mult_33_if_acc_nl;
  wire[0:0] butterFly1_mux_nl;
  wire[0:0] butterFly1_and_1_nl;
  wire[0:0] butterFly1_1_mux_4_nl;
  wire[0:0] butterFly1_1_and_1_nl;
  wire[0:0] butterFly1_2_mux_nl;
  wire[0:0] butterFly1_2_and_1_nl;
  wire[0:0] butterFly1_3_mux_nl;
  wire[0:0] butterFly1_3_and_1_nl;
  wire[0:0] butterFly1_4_mux_nl;
  wire[0:0] butterFly1_4_and_1_nl;
  wire[0:0] butterFly1_5_mux_nl;
  wire[0:0] butterFly1_5_and_1_nl;
  wire[0:0] butterFly1_6_mux_nl;
  wire[0:0] butterFly1_6_and_1_nl;
  wire[0:0] butterFly1_7_mux_nl;
  wire[0:0] butterFly1_7_and_1_nl;
  wire[0:0] butterFly1_8_mux_nl;
  wire[0:0] butterFly1_8_and_1_nl;
  wire[0:0] butterFly1_9_mux_nl;
  wire[0:0] butterFly1_9_and_1_nl;
  wire[0:0] butterFly1_10_mux_nl;
  wire[0:0] butterFly1_10_and_1_nl;
  wire[0:0] butterFly1_11_mux_nl;
  wire[0:0] butterFly1_11_and_1_nl;
  wire[0:0] butterFly1_12_mux_nl;
  wire[0:0] butterFly1_12_and_1_nl;
  wire[0:0] butterFly1_13_mux_nl;
  wire[0:0] butterFly1_13_and_1_nl;
  wire[0:0] butterFly1_14_mux_nl;
  wire[0:0] butterFly1_14_and_1_nl;
  wire[0:0] butterFly1_15_mux_nl;
  wire[0:0] butterFly1_15_and_1_nl;
  wire[0:0] butterFly1_f1_mux_4_nl;
  wire[0:0] butterFly1_f1_and_1_nl;
  wire[0:0] butterFly1_f2_mux_5_nl;
  wire[0:0] butterFly1_f2_and_1_nl;
  wire[0:0] butterFly1_1_f1_mux_4_nl;
  wire[0:0] butterFly1_1_f1_and_1_nl;
  wire[0:0] butterFly1_1_f2_mux_4_nl;
  wire[0:0] butterFly1_1_f2_and_1_nl;
  wire[0:0] butterFly1_2_f1_mux_4_nl;
  wire[0:0] butterFly1_2_f1_and_1_nl;
  wire[0:0] butterFly1_2_f2_mux_4_nl;
  wire[0:0] butterFly1_2_f2_and_1_nl;
  wire[0:0] butterFly1_3_f1_mux_4_nl;
  wire[0:0] butterFly1_3_f1_and_1_nl;
  wire[0:0] butterFly1_3_f2_mux_4_nl;
  wire[0:0] butterFly1_3_f2_and_1_nl;
  wire[0:0] butterFly1_4_f1_mux_4_nl;
  wire[0:0] butterFly1_4_f1_and_1_nl;
  wire[0:0] butterFly1_4_f2_mux_4_nl;
  wire[0:0] butterFly1_4_f2_and_1_nl;
  wire[0:0] butterFly1_5_f1_mux_4_nl;
  wire[0:0] butterFly1_5_f1_and_1_nl;
  wire[0:0] butterFly1_5_f2_mux_4_nl;
  wire[0:0] butterFly1_5_f2_and_1_nl;
  wire[0:0] butterFly1_6_f1_mux_4_nl;
  wire[0:0] butterFly1_6_f1_and_1_nl;
  wire[0:0] butterFly1_6_f2_mux_4_nl;
  wire[0:0] butterFly1_6_f2_and_1_nl;
  wire[0:0] butterFly1_7_f1_mux_4_nl;
  wire[0:0] butterFly1_7_f1_and_1_nl;
  wire[0:0] butterFly1_7_f2_mux_4_nl;
  wire[0:0] butterFly1_7_f2_and_1_nl;
  wire[33:0] acc_nl;
  wire[34:0] nl_acc_nl;
  wire[31:0] modulo_add_mux_3_nl;
  wire[33:0] acc_1_nl;
  wire[34:0] nl_acc_1_nl;
  wire[31:0] modulo_add_1_mux_3_nl;
  wire[33:0] acc_2_nl;
  wire[34:0] nl_acc_2_nl;
  wire[31:0] modulo_add_2_mux_3_nl;
  wire[33:0] acc_3_nl;
  wire[34:0] nl_acc_3_nl;
  wire[31:0] modulo_add_3_mux_3_nl;
  wire[33:0] acc_4_nl;
  wire[34:0] nl_acc_4_nl;
  wire[31:0] modulo_add_4_mux_3_nl;
  wire[33:0] acc_5_nl;
  wire[34:0] nl_acc_5_nl;
  wire[31:0] modulo_add_5_mux_3_nl;
  wire[33:0] acc_6_nl;
  wire[34:0] nl_acc_6_nl;
  wire[31:0] modulo_add_6_mux_3_nl;
  wire[33:0] acc_7_nl;
  wire[34:0] nl_acc_7_nl;
  wire[31:0] modulo_add_7_mux_3_nl;
  wire[33:0] acc_8_nl;
  wire[34:0] nl_acc_8_nl;
  wire[31:0] modulo_add_8_mux_3_nl;
  wire[33:0] acc_9_nl;
  wire[34:0] nl_acc_9_nl;
  wire[31:0] modulo_add_9_mux_3_nl;
  wire[33:0] acc_10_nl;
  wire[34:0] nl_acc_10_nl;
  wire[31:0] modulo_add_10_mux_3_nl;
  wire[33:0] acc_11_nl;
  wire[34:0] nl_acc_11_nl;
  wire[31:0] modulo_add_11_mux_3_nl;
  wire[33:0] acc_12_nl;
  wire[34:0] nl_acc_12_nl;
  wire[31:0] modulo_add_12_mux_3_nl;
  wire[33:0] acc_13_nl;
  wire[34:0] nl_acc_13_nl;
  wire[31:0] modulo_add_13_mux_3_nl;
  wire[33:0] acc_14_nl;
  wire[34:0] nl_acc_14_nl;
  wire[31:0] modulo_add_14_mux_3_nl;
  wire[33:0] acc_15_nl;
  wire[34:0] nl_acc_15_nl;
  wire[31:0] modulo_add_15_mux_3_nl;
  wire[33:0] acc_16_nl;
  wire[34:0] nl_acc_16_nl;
  wire[31:0] mult_15_if_mux1h_6_nl;
  wire[33:0] acc_17_nl;
  wire[34:0] nl_acc_17_nl;
  wire[31:0] mult_14_if_mux1h_6_nl;
  wire[33:0] acc_18_nl;
  wire[34:0] nl_acc_18_nl;
  wire[31:0] mult_13_if_mux1h_6_nl;
  wire[33:0] acc_19_nl;
  wire[34:0] nl_acc_19_nl;
  wire[31:0] mult_12_if_mux1h_6_nl;
  wire[33:0] acc_20_nl;
  wire[34:0] nl_acc_20_nl;
  wire[31:0] mult_11_if_mux1h_6_nl;
  wire[33:0] acc_21_nl;
  wire[34:0] nl_acc_21_nl;
  wire[31:0] mult_10_if_mux1h_6_nl;
  wire[33:0] acc_22_nl;
  wire[34:0] nl_acc_22_nl;
  wire[31:0] mult_9_if_mux1h_6_nl;
  wire[33:0] acc_23_nl;
  wire[34:0] nl_acc_23_nl;
  wire[31:0] mult_8_if_mux1h_6_nl;
  wire[33:0] acc_24_nl;
  wire[34:0] nl_acc_24_nl;
  wire[31:0] mult_7_if_mux1h_6_nl;
  wire[33:0] acc_25_nl;
  wire[34:0] nl_acc_25_nl;
  wire[31:0] mult_6_if_mux1h_4_nl;
  wire[33:0] acc_26_nl;
  wire[34:0] nl_acc_26_nl;
  wire[31:0] mult_5_if_mux1h_4_nl;
  wire[33:0] acc_27_nl;
  wire[34:0] nl_acc_27_nl;
  wire[31:0] mult_4_if_mux1h_4_nl;
  wire[33:0] acc_28_nl;
  wire[34:0] nl_acc_28_nl;
  wire[31:0] mult_3_if_mux1h_4_nl;
  wire[33:0] acc_29_nl;
  wire[34:0] nl_acc_29_nl;
  wire[31:0] mult_2_if_mux1h_4_nl;
  wire[33:0] acc_30_nl;
  wire[34:0] nl_acc_30_nl;
  wire[31:0] mult_1_if_mux1h_4_nl;
  wire[33:0] acc_31_nl;
  wire[34:0] nl_acc_31_nl;
  wire[31:0] mult_if_mux1h_4_nl;
  wire[33:0] acc_32_nl;
  wire[34:0] nl_acc_32_nl;
  wire[31:0] modulo_add_31_mux_3_nl;
  wire[33:0] acc_33_nl;
  wire[34:0] nl_acc_33_nl;
  wire[31:0] modulo_add_55_mux_3_nl;
  wire[33:0] acc_34_nl;
  wire[34:0] nl_acc_34_nl;
  wire[31:0] modulo_add_23_mux_3_nl;
  wire[33:0] acc_35_nl;
  wire[34:0] nl_acc_35_nl;
  wire[31:0] modulo_add_54_mux_3_nl;
  wire[33:0] acc_36_nl;
  wire[34:0] nl_acc_36_nl;
  wire[31:0] modulo_add_22_mux_3_nl;
  wire[33:0] acc_37_nl;
  wire[34:0] nl_acc_37_nl;
  wire[31:0] modulo_add_53_mux_3_nl;
  wire[33:0] acc_38_nl;
  wire[34:0] nl_acc_38_nl;
  wire[31:0] modulo_add_21_mux_3_nl;
  wire[33:0] acc_39_nl;
  wire[34:0] nl_acc_39_nl;
  wire[31:0] modulo_add_52_mux_3_nl;
  wire[33:0] acc_40_nl;
  wire[34:0] nl_acc_40_nl;
  wire[31:0] modulo_add_20_mux_3_nl;
  wire[33:0] acc_41_nl;
  wire[34:0] nl_acc_41_nl;
  wire[31:0] modulo_add_51_mux_3_nl;
  wire[33:0] acc_42_nl;
  wire[34:0] nl_acc_42_nl;
  wire[31:0] modulo_add_19_mux_3_nl;
  wire[33:0] acc_43_nl;
  wire[34:0] nl_acc_43_nl;
  wire[31:0] modulo_add_50_mux_3_nl;
  wire[33:0] acc_44_nl;
  wire[34:0] nl_acc_44_nl;
  wire[31:0] modulo_add_18_mux_3_nl;
  wire[33:0] acc_45_nl;
  wire[34:0] nl_acc_45_nl;
  wire[31:0] modulo_add_49_mux_3_nl;
  wire[33:0] acc_46_nl;
  wire[34:0] nl_acc_46_nl;
  wire[31:0] modulo_add_17_mux_3_nl;
  wire[33:0] acc_47_nl;
  wire[34:0] nl_acc_47_nl;
  wire[31:0] modulo_add_16_mux_3_nl;
  wire[4:0] operator_20_false_mux_2_nl;
  wire[32:0] acc_50_nl;
  wire[33:0] nl_acc_50_nl;
  wire[31:0] mult_15_if_mux1h_7_nl;
  wire[32:0] acc_51_nl;
  wire[33:0] nl_acc_51_nl;
  wire[31:0] mult_14_if_mux1h_7_nl;
  wire[32:0] acc_52_nl;
  wire[33:0] nl_acc_52_nl;
  wire[31:0] mult_13_if_mux1h_7_nl;
  wire[32:0] acc_53_nl;
  wire[33:0] nl_acc_53_nl;
  wire[31:0] mult_12_if_mux1h_7_nl;
  wire[32:0] acc_54_nl;
  wire[33:0] nl_acc_54_nl;
  wire[31:0] mult_11_if_mux1h_7_nl;
  wire[32:0] acc_55_nl;
  wire[33:0] nl_acc_55_nl;
  wire[31:0] mult_10_if_mux1h_7_nl;
  wire[32:0] acc_56_nl;
  wire[33:0] nl_acc_56_nl;
  wire[31:0] mult_9_if_mux1h_7_nl;
  wire[32:0] acc_57_nl;
  wire[33:0] nl_acc_57_nl;
  wire[31:0] mult_8_if_mux1h_7_nl;
  wire[32:0] acc_58_nl;
  wire[33:0] nl_acc_58_nl;
  wire[31:0] mult_7_if_mux1h_7_nl;
  wire[32:0] acc_59_nl;
  wire[33:0] nl_acc_59_nl;
  wire[31:0] mult_6_if_mux_2_nl;
  wire[30:0] modulo_sub_12_qif_mux_2_nl;
  wire[32:0] acc_61_nl;
  wire[33:0] nl_acc_61_nl;
  wire[31:0] mult_30_if_mux_2_nl;
  wire[31:0] mult_30_if_mux_3_nl;
  wire[32:0] acc_62_nl;
  wire[33:0] nl_acc_62_nl;
  wire[31:0] mult_29_if_mux_2_nl;
  wire[31:0] mult_29_if_mux_3_nl;
  wire[32:0] acc_63_nl;
  wire[33:0] nl_acc_63_nl;
  wire[31:0] mult_28_if_mux_2_nl;
  wire[31:0] mult_28_if_mux_3_nl;
  wire[32:0] acc_64_nl;
  wire[33:0] nl_acc_64_nl;
  wire[31:0] mult_27_if_mux_2_nl;
  wire[31:0] mult_27_if_mux_3_nl;
  wire[32:0] acc_65_nl;
  wire[33:0] nl_acc_65_nl;
  wire[31:0] mult_26_if_mux_2_nl;
  wire[31:0] mult_26_if_mux_3_nl;
  wire[32:0] acc_66_nl;
  wire[33:0] nl_acc_66_nl;
  wire[31:0] mult_25_if_mux_2_nl;
  wire[31:0] mult_25_if_mux_3_nl;
  wire[32:0] acc_67_nl;
  wire[33:0] nl_acc_67_nl;
  wire[31:0] mult_24_if_mux_2_nl;
  wire[31:0] mult_24_if_mux_3_nl;
  wire[32:0] acc_68_nl;
  wire[33:0] nl_acc_68_nl;
  wire[31:0] mult_23_if_mux_2_nl;
  wire[31:0] mult_23_if_mux_3_nl;
  wire[32:0] acc_69_nl;
  wire[33:0] nl_acc_69_nl;
  wire[31:0] mult_22_if_mux_2_nl;
  wire[31:0] mult_22_if_mux_3_nl;
  wire[30:0] modulo_sub_41_qif_mux_2_nl;
  wire[30:0] modulo_sub_47_qif_mux_2_nl;
  wire[30:0] modulo_sub_9_qif_mux_2_nl;
  wire[30:0] modulo_sub_40_qif_mux_2_nl;
  wire[30:0] modulo_sub_8_qif_mux_2_nl;
  wire[30:0] modulo_sub_39_qif_mux_2_nl;
  wire[30:0] modulo_sub_7_qif_mux_2_nl;
  wire[30:0] modulo_sub_38_qif_mux_2_nl;
  wire[30:0] modulo_sub_6_qif_mux_2_nl;
  wire[30:0] modulo_sub_46_qif_mux_2_nl;
  wire[30:0] modulo_sub_42_qif_mux_2_nl;
  wire[30:0] modulo_sub_45_qif_mux_2_nl;
  wire[30:0] modulo_sub_43_qif_mux_2_nl;
  wire[30:0] modulo_sub_44_qif_mux_2_nl;
  wire[30:0] modulo_sub_10_qif_mux_2_nl;
  wire[30:0] modulo_sub_15_qif_mux_2_nl;
  wire[30:0] modulo_sub_11_qif_mux_2_nl;
  wire[30:0] modulo_sub_14_qif_mux_2_nl;
  wire[30:0] modulo_sub_qif_mux_2_nl;
  wire[30:0] modulo_sub_32_qif_mux_2_nl;
  wire[30:0] modulo_sub_1_qif_mux_2_nl;
  wire[30:0] modulo_sub_33_qif_mux_2_nl;
  wire[30:0] modulo_sub_2_qif_mux_2_nl;
  wire[30:0] modulo_sub_34_qif_mux_2_nl;
  wire[30:0] modulo_sub_3_qif_mux_2_nl;
  wire[30:0] modulo_sub_35_qif_mux_2_nl;
  wire[30:0] modulo_sub_4_qif_mux_2_nl;
  wire[30:0] modulo_sub_36_qif_mux_2_nl;
  wire[30:0] modulo_sub_5_qif_mux_2_nl;
  wire[30:0] modulo_sub_13_qif_mux_2_nl;
  wire[30:0] modulo_sub_37_qif_mux_2_nl;
  wire[31:0] butterFly1_22_mux_4_nl;
  wire[31:0] butterFly1_22_mux_5_nl;
  wire[31:0] butterFly1_23_mux_4_nl;
  wire[31:0] butterFly1_23_mux_5_nl;
  wire[32:0] acc_103_nl;
  wire[33:0] nl_acc_103_nl;
  wire[31:0] modulo_add_16_qif_mux1h_2_nl;
  wire[32:0] acc_104_nl;
  wire[33:0] nl_acc_104_nl;
  wire[31:0] modulo_add_17_qif_mux1h_2_nl;
  wire[32:0] acc_105_nl;
  wire[33:0] nl_acc_105_nl;
  wire[31:0] modulo_add_18_qif_mux1h_2_nl;
  wire[32:0] acc_106_nl;
  wire[33:0] nl_acc_106_nl;
  wire[31:0] modulo_add_19_qif_mux1h_2_nl;
  wire[32:0] acc_107_nl;
  wire[33:0] nl_acc_107_nl;
  wire[31:0] modulo_add_20_qif_mux1h_2_nl;
  wire[32:0] acc_108_nl;
  wire[33:0] nl_acc_108_nl;
  wire[31:0] modulo_add_53_qif_mux1h_2_nl;
  wire[32:0] acc_109_nl;
  wire[33:0] nl_acc_109_nl;
  wire[31:0] modulo_add_54_qif_mux1h_2_nl;
  wire[32:0] acc_110_nl;
  wire[33:0] nl_acc_110_nl;
  wire[31:0] modulo_add_55_qif_mux1h_2_nl;
  wire[32:0] acc_111_nl;
  wire[33:0] nl_acc_111_nl;
  wire[31:0] modulo_add_56_qif_mux1h_2_nl;
  wire[32:0] acc_112_nl;
  wire[33:0] nl_acc_112_nl;
  wire[31:0] modulo_add_21_qif_mux1h_2_nl;
  wire[32:0] acc_113_nl;
  wire[33:0] nl_acc_113_nl;
  wire[31:0] modulo_add_58_qif_mux1h_2_nl;
  wire[32:0] acc_114_nl;
  wire[33:0] nl_acc_114_nl;
  wire[31:0] modulo_add_22_qif_mux1h_2_nl;
  wire[32:0] acc_115_nl;
  wire[33:0] nl_acc_115_nl;
  wire[31:0] modulo_add_6_qif_mux1h_2_nl;
  wire[32:0] acc_116_nl;
  wire[33:0] nl_acc_116_nl;
  wire[31:0] modulo_add_23_qif_mux1h_2_nl;
  wire[32:0] acc_117_nl;
  wire[33:0] nl_acc_117_nl;
  wire[31:0] mult_38_if_mux_2_nl;
  wire[32:0] acc_118_nl;
  wire[33:0] nl_acc_118_nl;
  wire[31:0] modulo_add_24_qif_mux1h_2_nl;
  wire[32:0] acc_119_nl;
  wire[33:0] nl_acc_119_nl;
  wire[31:0] mult_36_if_mux_2_nl;
  wire[32:0] acc_120_nl;
  wire[33:0] nl_acc_120_nl;
  wire[31:0] modulo_add_25_qif_mux1h_2_nl;
  wire[32:0] acc_121_nl;
  wire[33:0] nl_acc_121_nl;
  wire[31:0] mult_34_if_mux_2_nl;
  wire[32:0] acc_122_nl;
  wire[33:0] nl_acc_122_nl;
  wire[31:0] modulo_add_26_qif_mux1h_2_nl;
  wire[32:0] acc_123_nl;
  wire[33:0] nl_acc_123_nl;
  wire[31:0] mult_32_if_mux_2_nl;
  wire[32:0] acc_124_nl;
  wire[33:0] nl_acc_124_nl;
  wire[31:0] modulo_add_27_qif_mux1h_2_nl;
  wire[32:0] acc_125_nl;
  wire[33:0] nl_acc_125_nl;
  wire[31:0] modulo_add_33_qif_mux_2_nl;
  wire[32:0] acc_126_nl;
  wire[33:0] nl_acc_126_nl;
  wire[31:0] modulo_add_28_qif_mux1h_2_nl;
  wire[32:0] acc_127_nl;
  wire[33:0] nl_acc_127_nl;
  wire[31:0] modulo_add_32_qif_mux_2_nl;
  wire[32:0] acc_128_nl;
  wire[33:0] nl_acc_128_nl;
  wire[31:0] modulo_add_29_qif_mux1h_2_nl;
  wire[32:0] acc_129_nl;
  wire[33:0] nl_acc_129_nl;
  wire[31:0] modulo_add_30_qif_mux1h_2_nl;
  wire[32:0] acc_130_nl;
  wire[33:0] nl_acc_130_nl;
  wire[31:0] modulo_add_31_qif_mux1h_2_nl;
  wire[32:0] acc_131_nl;
  wire[33:0] nl_acc_131_nl;
  wire[31:0] butterFly1_6_mux_7_nl;
  wire[31:0] butterFly1_6_mux_8_nl;
  wire[31:0] butterFly1_6_mux_9_nl;
  wire[31:0] butterFly1_6_mux_10_nl;
  wire[32:0] acc_133_nl;
  wire[33:0] nl_acc_133_nl;
  wire[31:0] butterFly1_22_mux_6_nl;
  wire[31:0] butterFly1_22_mux_7_nl;
  wire[32:0] acc_134_nl;
  wire[33:0] nl_acc_134_nl;
  wire[31:0] butterFly1_23_mux_6_nl;
  wire[31:0] butterFly1_23_mux_7_nl;
  wire[31:0] butterFly1_24_mux_4_nl;
  wire[31:0] butterFly1_24_mux_5_nl;
  wire[32:0] acc_136_nl;
  wire[33:0] nl_acc_136_nl;
  wire[31:0] butterFly1_24_mux_6_nl;
  wire[31:0] butterFly1_24_mux_7_nl;
  wire[31:0] butterFly1_25_mux_4_nl;
  wire[31:0] butterFly1_25_mux_5_nl;
  wire[32:0] acc_138_nl;
  wire[33:0] nl_acc_138_nl;
  wire[31:0] butterFly1_25_mux_6_nl;
  wire[31:0] butterFly1_25_mux_7_nl;
  wire[31:0] butterFly1_26_mux_4_nl;
  wire[31:0] butterFly1_26_mux_5_nl;
  wire[32:0] acc_140_nl;
  wire[33:0] nl_acc_140_nl;
  wire[31:0] butterFly1_26_mux_6_nl;
  wire[31:0] butterFly1_26_mux_7_nl;
  wire[32:0] acc_141_nl;
  wire[33:0] nl_acc_141_nl;
  wire[31:0] butterFly2_mux_2_nl;
  wire[31:0] butterFly2_mux_3_nl;
  wire[32:0] acc_142_nl;
  wire[33:0] nl_acc_142_nl;
  wire[31:0] butterFly2_1_mux_2_nl;
  wire[31:0] butterFly2_1_mux_3_nl;
  wire[32:0] acc_143_nl;
  wire[33:0] nl_acc_143_nl;
  wire[31:0] butterFly2_2_mux_2_nl;
  wire[31:0] butterFly2_2_mux_3_nl;
  wire[32:0] acc_144_nl;
  wire[33:0] nl_acc_144_nl;
  wire[31:0] butterFly2_3_mux_2_nl;
  wire[31:0] butterFly2_3_mux_3_nl;
  wire[32:0] acc_145_nl;
  wire[33:0] nl_acc_145_nl;
  wire[31:0] butterFly2_4_mux_2_nl;
  wire[31:0] butterFly2_4_mux_3_nl;

  // Interconnect Declarations for Component Instantiations 
  wire [31:0] nl_mult_t_mul_cmp_a;
  assign nl_mult_t_mul_cmp_a = MUX1HOT_v_32_4_2(tmp_65_lpi_3_dfm_mx0, tmp_1_lpi_3_dfm_mx0,
      mult_t_mul_cmp_a_mx0w2, tmp_31_lpi_3_dfm_mx0, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_t_mul_cmp_b;
  assign nl_mult_t_mul_cmp_b = MUX1HOT_v_32_9_2(twiddle_h_rsc_0_0_i_s_din_mxwt, twiddle_h_rsc_0_8_i_s_din_mxwt,
      twiddle_h_rsc_0_9_i_s_din_mxwt, twiddle_h_rsc_0_10_i_s_din_mxwt, twiddle_h_rsc_0_11_i_s_din_mxwt,
      twiddle_h_rsc_0_12_i_s_din_mxwt, twiddle_h_rsc_0_13_i_s_din_mxwt, twiddle_h_rsc_0_14_i_s_din_mxwt,
      twiddle_h_rsc_0_15_i_s_din_mxwt, {or_dcpl_29 , INNER_LOOP1_tw_h_and_44_cse
      , INNER_LOOP1_tw_h_and_45_cse , INNER_LOOP1_tw_h_and_46_cse , INNER_LOOP1_tw_h_and_47_cse
      , INNER_LOOP1_tw_h_or_9_cse , INNER_LOOP1_tw_h_or_10_cse , INNER_LOOP1_tw_h_or_11_cse
      , INNER_LOOP1_tw_h_or_12_cse});
  wire [31:0] nl_mult_t_mul_cmp_1_a;
  assign nl_mult_t_mul_cmp_1_a = MUX1HOT_v_32_4_2(mult_t_mul_cmp_1_a_mx0w0, tmp_31_lpi_3_dfm_mx0,
      tmp_125_lpi_3_dfm_mx0, tmp_1_lpi_3_dfm_mx0, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_t_mul_cmp_1_b;
  assign nl_mult_t_mul_cmp_1_b = MUX1HOT_v_32_5_2(twiddle_h_rsc_0_0_i_s_din_mxwt,
      twiddle_h_rsc_0_8_i_s_din_mxwt, twiddle_h_rsc_0_10_i_s_din_mxwt, twiddle_h_rsc_0_12_i_s_din_mxwt,
      twiddle_h_rsc_0_14_i_s_din_mxwt, {(~ (fsm_output[6])) , INNER_LOOP1_tw_h_and_40_cse
      , INNER_LOOP1_tw_h_and_41_cse , INNER_LOOP1_tw_h_and_42_cse , INNER_LOOP1_tw_h_and_43_cse});
  wire [31:0] nl_mult_t_mul_cmp_2_a;
  assign nl_mult_t_mul_cmp_2_a = MUX1HOT_v_32_4_2(tmp_93_lpi_3_dfm_mx0, tmp_29_lpi_3_dfm_mx0,
      mult_t_mul_cmp_2_a_mx0w2, tmp_3_lpi_3_dfm_mx0, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_t_mul_cmp_2_b;
  assign nl_mult_t_mul_cmp_2_b = MUX1HOT_v_32_6_2(twiddle_h_rsc_0_0_i_s_din_mxwt,
      twiddle_h_rsc_0_8_i_s_din_mxwt, twiddle_h_rsc_0_9_i_s_din_mxwt, twiddle_h_rsc_0_12_i_s_din_mxwt,
      twiddle_h_rsc_0_13_i_s_din_mxwt, twiddle_h_rsc_0_1_i_s_din_mxwt, {or_tmp_418
      , INNER_LOOP1_tw_h_and_36_cse , INNER_LOOP1_tw_h_and_37_cse , INNER_LOOP1_tw_h_and_38_cse
      , INNER_LOOP1_tw_h_and_39_cse , or_tmp_420});
  wire [31:0] nl_mult_t_mul_cmp_3_a;
  assign nl_mult_t_mul_cmp_3_a = MUX1HOT_v_32_4_2(tmp_91_lpi_3_dfm_mx0, tmp_27_lpi_3_dfm_mx0,
      tmp_121_lpi_3_dfm_mx0, tmp_5_lpi_3_dfm_mx0, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire[0:0] or_471_nl;
  wire [31:0] nl_mult_t_mul_cmp_3_b;
  assign or_471_nl = or_dcpl_29 | and_1155_cse;
  assign nl_mult_t_mul_cmp_3_b = MUX1HOT_v_32_4_2(twiddle_h_rsc_0_0_i_s_din_mxwt,
      twiddle_h_rsc_0_12_i_s_din_mxwt, twiddle_h_rsc_0_8_i_s_din_mxwt, twiddle_h_rsc_0_2_i_s_din_mxwt,
      {or_471_nl , or_tmp_426 , and_1159_cse , or_tmp_428});
  wire [31:0] nl_mult_t_mul_cmp_4_a;
  assign nl_mult_t_mul_cmp_4_a = MUX1HOT_v_32_4_2(tmp_89_lpi_3_dfm_mx0, tmp_25_lpi_3_dfm_mx0,
      mult_t_mul_cmp_4_a_mx0w2, tmp_7_lpi_3_dfm_mx0, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire[0:0] INNER_LOOP1_tw_h_or_8_nl;
  wire [31:0] nl_mult_t_mul_cmp_4_b;
  assign INNER_LOOP1_tw_h_or_8_nl = or_dcpl_29 | INNER_LOOP1_tw_h_and_49_cse;
  assign nl_mult_t_mul_cmp_4_b = MUX1HOT_v_32_8_2(twiddle_h_rsc_0_0_i_s_din_mxwt,
      twiddle_h_rsc_0_8_i_s_din_mxwt, twiddle_h_rsc_0_9_i_s_din_mxwt, twiddle_h_rsc_0_10_i_s_din_mxwt,
      twiddle_h_rsc_0_11_i_s_din_mxwt, twiddle_h_rsc_0_1_i_s_din_mxwt, twiddle_h_rsc_0_2_i_s_din_mxwt,
      twiddle_h_rsc_0_3_i_s_din_mxwt, {INNER_LOOP1_tw_h_or_8_nl , INNER_LOOP1_tw_h_and_29_cse
      , INNER_LOOP1_tw_h_and_30_cse , INNER_LOOP1_tw_h_and_31_cse , INNER_LOOP1_tw_h_and_32_cse
      , INNER_LOOP1_tw_h_and_51_cse , INNER_LOOP1_tw_h_and_53_cse , INNER_LOOP1_tw_h_and_55_cse});
  wire [31:0] nl_mult_t_mul_cmp_5_a;
  assign nl_mult_t_mul_cmp_5_a = MUX1HOT_v_32_4_2(tmp_87_lpi_3_dfm_mx0, tmp_23_lpi_3_dfm_mx0,
      mult_t_mul_cmp_5_a_mx0w2, mult_t_mul_cmp_12_a_mx0w3, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_t_mul_cmp_5_b;
  assign nl_mult_t_mul_cmp_5_b = MUX1HOT_v_32_4_2(twiddle_h_rsc_0_0_i_s_din_mxwt,
      twiddle_h_rsc_0_10_i_s_din_mxwt, twiddle_h_rsc_0_8_i_s_din_mxwt, twiddle_h_rsc_0_4_i_s_din_mxwt,
      {or_dcpl_29 , or_tmp_441 , and_1189_cse , (fsm_output[8])});
  wire [31:0] nl_mult_t_mul_cmp_6_a;
  assign nl_mult_t_mul_cmp_6_a = MUX1HOT_v_32_4_2(tmp_85_lpi_3_dfm_mx0, tmp_21_lpi_3_dfm_mx0,
      mult_t_mul_cmp_6_a_mx0w2, mult_t_mul_cmp_11_a_mx0w3, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_t_mul_cmp_6_b;
  assign nl_mult_t_mul_cmp_6_b = MUX1HOT_v_32_5_2(twiddle_h_rsc_0_0_i_s_din_mxwt,
      twiddle_h_rsc_0_9_i_s_din_mxwt, twiddle_h_rsc_0_8_i_s_din_mxwt, twiddle_h_rsc_0_5_i_s_din_mxwt,
      twiddle_h_rsc_0_4_i_s_din_mxwt, {or_dcpl_29 , or_tmp_449 , and_1205_cse , or_tmp_420
      , and_1140_cse});
  wire [31:0] nl_mult_t_mul_cmp_7_a;
  assign nl_mult_t_mul_cmp_7_a = MUX1HOT_v_32_4_2(tmp_83_lpi_3_dfm_mx0, tmp_19_lpi_3_dfm_mx0,
      mult_t_mul_cmp_7_a_mx0w2, mult_t_mul_cmp_10_a_mx0w3, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_t_mul_cmp_7_b;
  assign nl_mult_t_mul_cmp_7_b = MUX1HOT_v_32_4_2(twiddle_h_rsc_0_0_i_s_din_mxwt,
      twiddle_h_rsc_0_8_i_s_din_mxwt, twiddle_h_rsc_0_6_i_s_din_mxwt, twiddle_h_rsc_0_4_i_s_din_mxwt,
      {or_dcpl_29 , (fsm_output[6]) , or_tmp_428 , and_1155_cse});
  wire [31:0] nl_mult_t_mul_cmp_8_a;
  assign nl_mult_t_mul_cmp_8_a = MUX1HOT_v_32_4_2(tmp_81_lpi_3_dfm_mx0, tmp_17_lpi_3_dfm_mx0,
      mult_t_mul_cmp_8_a_mx0w2, mult_t_mul_cmp_9_a_mx0w3, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_t_mul_cmp_8_b;
  assign nl_mult_t_mul_cmp_8_b = MUX1HOT_v_32_8_2(twiddle_h_rsc_0_0_i_s_din_mxwt,
      twiddle_h_rsc_0_1_i_s_din_mxwt, twiddle_h_rsc_0_2_i_s_din_mxwt, twiddle_h_rsc_0_3_i_s_din_mxwt,
      twiddle_h_rsc_0_4_i_s_din_mxwt, twiddle_h_rsc_0_5_i_s_din_mxwt, twiddle_h_rsc_0_6_i_s_din_mxwt,
      twiddle_h_rsc_0_7_i_s_din_mxwt, {INNER_LOOP1_tw_h_or_3_cse , INNER_LOOP1_tw_h_and_45_cse
      , INNER_LOOP1_tw_h_and_46_cse , INNER_LOOP1_tw_h_and_47_cse , INNER_LOOP1_tw_h_or_9_cse
      , INNER_LOOP1_tw_h_or_10_cse , INNER_LOOP1_tw_h_or_11_cse , INNER_LOOP1_tw_h_or_12_cse});
  wire [31:0] nl_mult_t_mul_cmp_9_a;
  assign nl_mult_t_mul_cmp_9_a = MUX1HOT_v_32_4_2(mult_t_mul_cmp_9_a_mx0w0, mult_t_mul_cmp_9_a_mx0w3,
      mult_t_mul_cmp_9_a_mx0w2, tmp_17_lpi_3_dfm_mx0, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire[0:0] INNER_LOOP1_tw_h_or_2_nl;
  wire [31:0] nl_mult_t_mul_cmp_9_b;
  assign INNER_LOOP1_tw_h_or_2_nl = or_dcpl_29 | INNER_LOOP1_tw_h_and_40_cse;
  assign nl_mult_t_mul_cmp_9_b = MUX1HOT_v_32_5_2(twiddle_h_rsc_0_0_i_s_din_mxwt,
      twiddle_h_rsc_0_2_i_s_din_mxwt, twiddle_h_rsc_0_4_i_s_din_mxwt, twiddle_h_rsc_0_6_i_s_din_mxwt,
      twiddle_h_rsc_0_8_i_s_din_mxwt, {INNER_LOOP1_tw_h_or_2_nl , INNER_LOOP1_tw_h_and_41_cse
      , INNER_LOOP1_tw_h_and_42_cse , INNER_LOOP1_tw_h_and_43_cse , (fsm_output[8])});
  wire [31:0] nl_mult_t_mul_cmp_10_a;
  assign nl_mult_t_mul_cmp_10_a = MUX1HOT_v_32_4_2(mult_t_mul_cmp_10_a_mx0w0, mult_t_mul_cmp_10_a_mx0w3,
      mult_t_mul_cmp_10_a_mx0w2, tmp_19_lpi_3_dfm_mx0, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_t_mul_cmp_10_b;
  assign nl_mult_t_mul_cmp_10_b = MUX1HOT_v_32_6_2(twiddle_h_rsc_0_0_i_s_din_mxwt,
      twiddle_h_rsc_0_1_i_s_din_mxwt, twiddle_h_rsc_0_4_i_s_din_mxwt, twiddle_h_rsc_0_5_i_s_din_mxwt,
      twiddle_h_rsc_0_9_i_s_din_mxwt, twiddle_h_rsc_0_8_i_s_din_mxwt, {INNER_LOOP1_tw_h_or_1_cse
      , INNER_LOOP1_tw_h_and_37_cse , INNER_LOOP1_tw_h_and_38_cse , INNER_LOOP1_tw_h_and_39_cse
      , or_tmp_420 , and_1140_cse});
  wire [31:0] nl_mult_t_mul_cmp_11_a;
  assign nl_mult_t_mul_cmp_11_a = MUX1HOT_v_32_4_2(mult_t_mul_cmp_11_a_mx0w0, mult_t_mul_cmp_11_a_mx0w3,
      mult_t_mul_cmp_11_a_mx0w2, tmp_21_lpi_3_dfm_mx0, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire[0:0] or_533_nl;
  wire [31:0] nl_mult_t_mul_cmp_11_b;
  assign or_533_nl = and_1159_cse | or_dcpl_29;
  assign nl_mult_t_mul_cmp_11_b = MUX1HOT_v_32_4_2(twiddle_h_rsc_0_0_i_s_din_mxwt,
      twiddle_h_rsc_0_4_i_s_din_mxwt, twiddle_h_rsc_0_10_i_s_din_mxwt, twiddle_h_rsc_0_8_i_s_din_mxwt,
      {or_533_nl , or_tmp_426 , or_tmp_428 , and_1155_cse});
  wire [31:0] nl_mult_t_mul_cmp_12_b;
  assign nl_mult_t_mul_cmp_12_b = MUX1HOT_v_32_8_2(twiddle_h_rsc_0_0_i_s_din_mxwt,
      twiddle_h_rsc_0_1_i_s_din_mxwt, twiddle_h_rsc_0_2_i_s_din_mxwt, twiddle_h_rsc_0_3_i_s_din_mxwt,
      twiddle_h_rsc_0_8_i_s_din_mxwt, twiddle_h_rsc_0_9_i_s_din_mxwt, twiddle_h_rsc_0_10_i_s_din_mxwt,
      twiddle_h_rsc_0_11_i_s_din_mxwt, {INNER_LOOP1_tw_h_or_cse , INNER_LOOP1_tw_h_and_30_cse
      , INNER_LOOP1_tw_h_and_31_cse , INNER_LOOP1_tw_h_and_32_cse , INNER_LOOP1_tw_h_and_49_cse
      , INNER_LOOP1_tw_h_and_51_cse , INNER_LOOP1_tw_h_and_53_cse , INNER_LOOP1_tw_h_and_55_cse});
  wire [31:0] nl_mult_t_mul_cmp_13_a;
  assign nl_mult_t_mul_cmp_13_a = MUX1HOT_v_32_4_2(mult_t_mul_cmp_13_a_mx0w0, tmp_7_lpi_3_dfm_mx0,
      mult_t_mul_cmp_13_a_mx0w2, tmp_25_lpi_3_dfm_mx0, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_t_mul_cmp_13_b;
  assign nl_mult_t_mul_cmp_13_b = MUX1HOT_v_32_3_2(twiddle_h_rsc_0_0_i_s_din_mxwt,
      twiddle_h_rsc_0_2_i_s_din_mxwt, twiddle_h_rsc_0_12_i_s_din_mxwt, {or_tmp_502
      , or_tmp_441 , (fsm_output[8])});
  wire [31:0] nl_mult_t_mul_cmp_14_a;
  assign nl_mult_t_mul_cmp_14_a = MUX1HOT_v_32_4_2(mult_t_mul_cmp_14_a_mx0w0, tmp_5_lpi_3_dfm_mx0,
      mult_t_mul_cmp_14_a_mx0w2, tmp_27_lpi_3_dfm_mx0, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_t_mul_cmp_14_b;
  assign nl_mult_t_mul_cmp_14_b = MUX1HOT_v_32_4_2(twiddle_h_rsc_0_0_i_s_din_mxwt,
      twiddle_h_rsc_0_1_i_s_din_mxwt, twiddle_h_rsc_0_13_i_s_din_mxwt, twiddle_h_rsc_0_12_i_s_din_mxwt,
      {or_tmp_509 , or_tmp_449 , or_tmp_420 , and_1140_cse});
  wire [31:0] nl_mult_t_mul_cmp_15_a;
  assign nl_mult_t_mul_cmp_15_a = MUX1HOT_v_32_4_2(mult_t_mul_cmp_15_a_mx0w0, tmp_3_lpi_3_dfm_mx0,
      mult_t_mul_cmp_15_a_mx0w2, tmp_29_lpi_3_dfm_mx0, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire[0:0] or_563_nl;
  wire [31:0] nl_mult_t_mul_cmp_15_b;
  assign or_563_nl = or_dcpl_29 | (fsm_output[6]);
  assign nl_mult_t_mul_cmp_15_b = MUX1HOT_v_32_3_2(twiddle_h_rsc_0_0_i_s_din_mxwt,
      twiddle_h_rsc_0_14_i_s_din_mxwt, twiddle_h_rsc_0_12_i_s_din_mxwt, {or_563_nl
      , or_tmp_428 , and_1155_cse});
  wire [31:0] nl_mult_z_mul_cmp_a;
  assign nl_mult_z_mul_cmp_a = MUX1HOT_v_32_3_2(tmp_65_lpi_3_dfm_mx0, tmp_1_lpi_3_dfm_mx0,
      mult_t_mul_cmp_a_mx0w2, {(fsm_output[2]) , c_or_cse , (fsm_output[6])});
  wire [31:0] nl_mult_z_mul_cmp_b;
  assign nl_mult_z_mul_cmp_b = MUX1HOT_v_32_9_2(twiddle_rsc_0_0_i_s_din_mxwt, twiddle_rsc_0_8_i_s_din_mxwt,
      twiddle_rsc_0_9_i_s_din_mxwt, twiddle_rsc_0_10_i_s_din_mxwt, twiddle_rsc_0_11_i_s_din_mxwt,
      twiddle_rsc_0_12_i_s_din_mxwt, twiddle_rsc_0_13_i_s_din_mxwt, twiddle_rsc_0_14_i_s_din_mxwt,
      twiddle_rsc_0_15_i_s_din_mxwt, {(~ (fsm_output[6])) , INNER_LOOP1_tw_h_and_44_cse
      , INNER_LOOP1_tw_h_and_45_cse , INNER_LOOP1_tw_h_and_46_cse , INNER_LOOP1_tw_h_and_47_cse
      , INNER_LOOP1_tw_h_and_48_cse , INNER_LOOP1_tw_h_and_50_cse , INNER_LOOP1_tw_h_and_52_cse
      , INNER_LOOP1_tw_h_and_54_cse});
  wire [31:0] nl_mult_z_mul_cmp_1_a;
  assign nl_mult_z_mul_cmp_1_a = MUX1HOT_v_32_3_2((mult_t_mul_cmp_1_z[51:20]), (mult_t_mul_cmp_11_z[51:20]),
      (mult_t_mul_cmp_12_z[51:20]), {or_dcpl_29 , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_1_b;
  assign nl_mult_z_mul_cmp_1_b = p_sva;
  wire [31:0] nl_mult_z_mul_cmp_2_a;
  assign nl_mult_z_mul_cmp_2_a = MUX1HOT_v_32_4_2(mult_t_mul_cmp_1_a_mx0w0, tmp_31_lpi_3_dfm_mx0,
      mult_t_mul_cmp_15_a_mx0w2, tmp_17_lpi_3_dfm_mx0, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_2_b;
  assign nl_mult_z_mul_cmp_2_b = MUX_v_32_2_2(twiddle_rsc_0_0_i_s_din_mxwt, twiddle_rsc_0_8_i_s_din_mxwt,
      fsm_output[8]);
  wire [31:0] nl_mult_z_mul_cmp_3_a;
  assign nl_mult_z_mul_cmp_3_a = MUX1HOT_v_32_3_2((mult_t_mul_cmp_2_z[51:20]), (mult_t_mul_cmp_5_z[51:20]),
      (mult_t_mul_cmp_6_z[51:20]), {or_dcpl_29 , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_3_b;
  assign nl_mult_z_mul_cmp_3_b = p_sva;
  wire [31:0] nl_mult_z_mul_cmp_4_a;
  assign nl_mult_z_mul_cmp_4_a = MUX1HOT_v_32_4_2(tmp_93_lpi_3_dfm_mx0, tmp_29_lpi_3_dfm_mx0,
      tmp_125_lpi_3_dfm_mx0, mult_t_mul_cmp_12_a_mx0w3, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_4_b;
  assign nl_mult_z_mul_cmp_4_b = MUX1HOT_v_32_6_2(twiddle_rsc_0_0_i_s_din_mxwt, twiddle_rsc_0_8_i_s_din_mxwt,
      twiddle_rsc_0_10_i_s_din_mxwt, twiddle_rsc_0_12_i_s_din_mxwt, twiddle_rsc_0_14_i_s_din_mxwt,
      twiddle_rsc_0_4_i_s_din_mxwt, {or_dcpl_29 , INNER_LOOP1_tw_h_and_40_cse , INNER_LOOP1_tw_h_and_41_cse
      , INNER_LOOP1_tw_h_and_42_cse , INNER_LOOP1_tw_h_and_43_cse , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_5_a;
  assign nl_mult_z_mul_cmp_5_a = MUX1HOT_v_32_3_2((mult_t_mul_cmp_3_z[51:20]), (mult_t_mul_cmp_12_z[51:20]),
      (mult_t_mul_cmp_13_z[51:20]), {or_dcpl_29 , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_5_b;
  assign nl_mult_z_mul_cmp_5_b = p_sva;
  wire [31:0] nl_mult_z_mul_cmp_6_a;
  assign nl_mult_z_mul_cmp_6_a = MUX1HOT_v_32_4_2(tmp_91_lpi_3_dfm_mx0, tmp_27_lpi_3_dfm_mx0,
      mult_t_mul_cmp_8_a_mx0w2, tmp_31_lpi_3_dfm_mx0, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_6_b;
  assign nl_mult_z_mul_cmp_6_b = MUX1HOT_v_32_12_2(twiddle_rsc_0_0_i_s_din_mxwt,
      twiddle_rsc_0_1_i_s_din_mxwt, twiddle_rsc_0_2_i_s_din_mxwt, twiddle_rsc_0_3_i_s_din_mxwt,
      twiddle_rsc_0_4_i_s_din_mxwt, twiddle_rsc_0_5_i_s_din_mxwt, twiddle_rsc_0_6_i_s_din_mxwt,
      twiddle_rsc_0_7_i_s_din_mxwt, twiddle_rsc_0_12_i_s_din_mxwt, twiddle_rsc_0_13_i_s_din_mxwt,
      twiddle_rsc_0_14_i_s_din_mxwt, twiddle_rsc_0_15_i_s_din_mxwt, {INNER_LOOP1_tw_h_or_3_cse
      , INNER_LOOP1_tw_h_and_45_cse , INNER_LOOP1_tw_h_and_46_cse , INNER_LOOP1_tw_h_and_47_cse
      , INNER_LOOP1_tw_h_and_48_cse , INNER_LOOP1_tw_h_and_50_cse , INNER_LOOP1_tw_h_and_52_cse
      , INNER_LOOP1_tw_h_and_54_cse , INNER_LOOP1_tw_h_and_49_cse , INNER_LOOP1_tw_h_and_51_cse
      , INNER_LOOP1_tw_h_and_53_cse , INNER_LOOP1_tw_h_and_55_cse});
  wire [31:0] nl_mult_z_mul_cmp_7_a;
  assign nl_mult_z_mul_cmp_7_a = MUX1HOT_v_32_3_2((mult_t_mul_cmp_4_z[51:20]), (mult_t_mul_cmp_2_z[51:20]),
      (mult_t_mul_cmp_3_z[51:20]), {or_dcpl_29 , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_7_b;
  assign nl_mult_z_mul_cmp_7_b = p_sva;
  wire [31:0] nl_mult_z_mul_cmp_8_a;
  assign nl_mult_z_mul_cmp_8_a = MUX1HOT_v_32_4_2(tmp_89_lpi_3_dfm_mx0, tmp_25_lpi_3_dfm_mx0,
      mult_t_mul_cmp_14_a_mx0w2, tmp_19_lpi_3_dfm_mx0, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_8_b;
  assign nl_mult_z_mul_cmp_8_b = MUX1HOT_v_32_4_2(twiddle_rsc_0_0_i_s_din_mxwt, twiddle_rsc_0_1_i_s_din_mxwt,
      twiddle_rsc_0_9_i_s_din_mxwt, twiddle_rsc_0_8_i_s_din_mxwt, {or_tmp_509 , or_tmp_449
      , or_tmp_420 , and_1140_cse});
  wire [31:0] nl_mult_z_mul_cmp_9_a;
  assign nl_mult_z_mul_cmp_9_a = MUX1HOT_v_32_3_2((mult_t_mul_cmp_5_z[51:20]), (mult_t_mul_cmp_10_z[51:20]),
      (mult_t_mul_cmp_11_z[51:20]), {or_dcpl_29 , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_9_b;
  assign nl_mult_z_mul_cmp_9_b = p_sva;
  wire [31:0] nl_mult_z_mul_cmp_10_a;
  assign nl_mult_z_mul_cmp_10_a = MUX1HOT_v_32_4_2(tmp_87_lpi_3_dfm_mx0, tmp_23_lpi_3_dfm_mx0,
      mult_t_mul_cmp_7_a_mx0w2, mult_t_mul_cmp_9_a_mx0w3, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_10_b;
  assign nl_mult_z_mul_cmp_10_b = MUX1HOT_v_32_6_2(twiddle_rsc_0_0_i_s_din_mxwt,
      twiddle_rsc_0_8_i_s_din_mxwt, twiddle_rsc_0_4_i_s_din_mxwt, twiddle_rsc_0_5_i_s_din_mxwt,
      twiddle_rsc_0_6_i_s_din_mxwt, twiddle_rsc_0_7_i_s_din_mxwt, {or_dcpl_29 , (fsm_output[6])
      , INNER_LOOP1_tw_h_and_49_cse , INNER_LOOP1_tw_h_and_51_cse , INNER_LOOP1_tw_h_and_53_cse
      , INNER_LOOP1_tw_h_and_55_cse});
  wire [31:0] nl_mult_z_mul_cmp_11_a;
  assign nl_mult_z_mul_cmp_11_a = MUX_v_32_2_2((mult_t_mul_cmp_6_z[51:20]), (mult_t_mul_cmp_7_z[51:20]),
      fsm_output[8]);
  wire [31:0] nl_mult_z_mul_cmp_11_b;
  assign nl_mult_z_mul_cmp_11_b = p_sva;
  wire [31:0] nl_mult_z_mul_cmp_12_a;
  assign nl_mult_z_mul_cmp_12_a = MUX1HOT_v_32_4_2(tmp_85_lpi_3_dfm_mx0, tmp_21_lpi_3_dfm_mx0,
      mult_t_mul_cmp_13_a_mx0w2, tmp_7_lpi_3_dfm_mx0, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire[0:0] INNER_LOOP1_tw_or_4_nl;
  wire[0:0] INNER_LOOP1_tw_or_5_nl;
  wire [31:0] nl_mult_z_mul_cmp_12_b;
  assign INNER_LOOP1_tw_or_4_nl = or_tmp_502 | INNER_LOOP1_tw_h_and_49_cse;
  assign INNER_LOOP1_tw_or_5_nl = or_tmp_441 | INNER_LOOP1_tw_h_and_53_cse;
  assign nl_mult_z_mul_cmp_12_b = MUX1HOT_v_32_4_2(twiddle_rsc_0_0_i_s_din_mxwt,
      twiddle_rsc_0_2_i_s_din_mxwt, twiddle_rsc_0_1_i_s_din_mxwt, twiddle_rsc_0_3_i_s_din_mxwt,
      {INNER_LOOP1_tw_or_4_nl , INNER_LOOP1_tw_or_5_nl , INNER_LOOP1_tw_h_and_51_cse
      , INNER_LOOP1_tw_h_and_55_cse});
  wire [31:0] nl_mult_z_mul_cmp_13_a;
  assign nl_mult_z_mul_cmp_13_a = MUX1HOT_v_32_3_2((mult_t_mul_cmp_7_z[51:20]), (mult_t_mul_cmp_1_z[51:20]),
      (mult_t_mul_cmp_2_z[51:20]), {or_dcpl_29 , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_13_b;
  assign nl_mult_z_mul_cmp_13_b = p_sva;
  wire [31:0] nl_mult_z_mul_cmp_14_a;
  assign nl_mult_z_mul_cmp_14_a = MUX1HOT_v_32_4_2(tmp_83_lpi_3_dfm_mx0, tmp_19_lpi_3_dfm_mx0,
      mult_t_mul_cmp_2_a_mx0w2, tmp_29_lpi_3_dfm_mx0, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire[0:0] INNER_LOOP1_tw_or_3_nl;
  wire [31:0] nl_mult_z_mul_cmp_14_b;
  assign INNER_LOOP1_tw_or_3_nl = INNER_LOOP1_tw_h_and_38_cse | and_1155_cse;
  assign nl_mult_z_mul_cmp_14_b = MUX1HOT_v_32_6_2(twiddle_rsc_0_0_i_s_din_mxwt,
      twiddle_rsc_0_8_i_s_din_mxwt, twiddle_rsc_0_9_i_s_din_mxwt, twiddle_rsc_0_12_i_s_din_mxwt,
      twiddle_rsc_0_13_i_s_din_mxwt, twiddle_rsc_0_14_i_s_din_mxwt, {or_dcpl_29 ,
      INNER_LOOP1_tw_h_and_36_cse , INNER_LOOP1_tw_h_and_37_cse , INNER_LOOP1_tw_or_3_nl
      , INNER_LOOP1_tw_h_and_39_cse , or_tmp_428});
  wire [31:0] nl_mult_z_mul_cmp_15_a;
  assign nl_mult_z_mul_cmp_15_a = MUX1HOT_v_32_3_2((mult_t_mul_cmp_8_z[51:20]), (mult_t_mul_cmp_13_z[51:20]),
      (mult_t_mul_cmp_14_z[51:20]), {or_dcpl_29 , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_15_b;
  assign nl_mult_z_mul_cmp_15_b = p_sva;
  wire [31:0] nl_mult_z_mul_cmp_16_a;
  assign nl_mult_z_mul_cmp_16_a = MUX1HOT_v_32_4_2(tmp_81_lpi_3_dfm_mx0, tmp_17_lpi_3_dfm_mx0,
      mult_t_mul_cmp_9_a_mx0w2, tmp_3_lpi_3_dfm_mx0, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire[0:0] INNER_LOOP1_tw_or_2_nl;
  wire [31:0] nl_mult_z_mul_cmp_16_b;
  assign INNER_LOOP1_tw_or_2_nl = or_tmp_418 | INNER_LOOP1_tw_h_and_40_cse;
  assign nl_mult_z_mul_cmp_16_b = MUX1HOT_v_32_5_2(twiddle_rsc_0_0_i_s_din_mxwt,
      twiddle_rsc_0_2_i_s_din_mxwt, twiddle_rsc_0_4_i_s_din_mxwt, twiddle_rsc_0_6_i_s_din_mxwt,
      twiddle_rsc_0_1_i_s_din_mxwt, {INNER_LOOP1_tw_or_2_nl , INNER_LOOP1_tw_h_and_41_cse
      , INNER_LOOP1_tw_h_and_42_cse , INNER_LOOP1_tw_h_and_43_cse , or_tmp_420});
  wire [31:0] nl_mult_z_mul_cmp_17_a;
  assign nl_mult_z_mul_cmp_17_a = MUX_v_32_2_2((mult_t_mul_cmp_9_z[51:20]), (mult_t_mul_cmp_10_z[51:20]),
      fsm_output[8]);
  wire [31:0] nl_mult_z_mul_cmp_17_b;
  assign nl_mult_z_mul_cmp_17_b = p_sva;
  wire [31:0] nl_mult_z_mul_cmp_18_a;
  assign nl_mult_z_mul_cmp_18_a = MUX1HOT_v_32_4_2(mult_t_mul_cmp_9_a_mx0w0, mult_t_mul_cmp_9_a_mx0w3,
      mult_t_mul_cmp_6_a_mx0w2, tmp_21_lpi_3_dfm_mx0, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire[0:0] or_656_nl;
  wire [31:0] nl_mult_z_mul_cmp_18_b;
  assign or_656_nl = and_1205_cse | and_1155_cse;
  assign nl_mult_z_mul_cmp_18_b = MUX1HOT_v_32_4_2(twiddle_rsc_0_0_i_s_din_mxwt,
      twiddle_rsc_0_9_i_s_din_mxwt, twiddle_rsc_0_8_i_s_din_mxwt, twiddle_rsc_0_10_i_s_din_mxwt,
      {or_dcpl_29 , or_tmp_449 , or_656_nl , or_tmp_428});
  wire [31:0] nl_mult_z_mul_cmp_19_a;
  assign nl_mult_z_mul_cmp_19_a = MUX1HOT_v_32_3_2((mult_t_mul_cmp_10_z[51:20]),
      (mult_t_mul_cmp_4_z[51:20]), (mult_t_mul_cmp_5_z[51:20]), {or_dcpl_29 , (fsm_output[6])
      , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_19_b;
  assign nl_mult_z_mul_cmp_19_b = p_sva;
  wire [31:0] nl_mult_z_mul_cmp_20_a;
  assign nl_mult_z_mul_cmp_20_a = MUX1HOT_v_32_4_2(mult_t_mul_cmp_10_a_mx0w0, mult_t_mul_cmp_10_a_mx0w3,
      tmp_121_lpi_3_dfm_mx0, mult_t_mul_cmp_11_a_mx0w3, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_20_b;
  assign nl_mult_z_mul_cmp_20_b = MUX1HOT_v_32_5_2(twiddle_rsc_0_0_i_s_din_mxwt,
      twiddle_rsc_0_12_i_s_din_mxwt, twiddle_rsc_0_8_i_s_din_mxwt, twiddle_rsc_0_5_i_s_din_mxwt,
      twiddle_rsc_0_4_i_s_din_mxwt, {or_dcpl_29 , or_tmp_426 , and_1159_cse , or_tmp_420
      , and_1140_cse});
  wire [31:0] nl_mult_z_mul_cmp_21_a;
  assign nl_mult_z_mul_cmp_21_a = MUX1HOT_v_32_3_2((mult_t_mul_cmp_11_z[51:20]),
      (mult_t_mul_cmp_14_z[51:20]), (mult_t_mul_cmp_15_z[51:20]), {or_dcpl_29 , (fsm_output[6])
      , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_21_b;
  assign nl_mult_z_mul_cmp_21_b = p_sva;
  wire [31:0] nl_mult_z_mul_cmp_22_a;
  assign nl_mult_z_mul_cmp_22_a = MUX1HOT_v_32_4_2(mult_t_mul_cmp_11_a_mx0w0, mult_t_mul_cmp_11_a_mx0w3,
      mult_t_mul_cmp_10_a_mx0w2, tmp_27_lpi_3_dfm_mx0, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_22_b;
  assign nl_mult_z_mul_cmp_22_b = MUX1HOT_v_32_6_2(twiddle_rsc_0_0_i_s_din_mxwt,
      twiddle_rsc_0_1_i_s_din_mxwt, twiddle_rsc_0_4_i_s_din_mxwt, twiddle_rsc_0_5_i_s_din_mxwt,
      twiddle_rsc_0_13_i_s_din_mxwt, twiddle_rsc_0_12_i_s_din_mxwt, {INNER_LOOP1_tw_h_or_1_cse
      , INNER_LOOP1_tw_h_and_37_cse , INNER_LOOP1_tw_h_and_38_cse , INNER_LOOP1_tw_h_and_39_cse
      , or_tmp_420 , and_1140_cse});
  wire [31:0] nl_mult_z_mul_cmp_23_a;
  assign nl_mult_z_mul_cmp_23_a = MUX1HOT_v_32_3_2((mult_t_mul_cmp_12_z[51:20]),
      (mult_t_mul_cmp_3_z[51:20]), (mult_t_mul_cmp_4_z[51:20]), {or_dcpl_29 , (fsm_output[6])
      , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_23_b;
  assign nl_mult_z_mul_cmp_23_b = p_sva;
  wire [31:0] nl_mult_z_mul_cmp_24_b;
  assign nl_mult_z_mul_cmp_24_b = MUX1HOT_v_32_8_2(twiddle_rsc_0_0_i_s_din_mxwt,
      twiddle_rsc_0_1_i_s_din_mxwt, twiddle_rsc_0_2_i_s_din_mxwt, twiddle_rsc_0_3_i_s_din_mxwt,
      twiddle_rsc_0_8_i_s_din_mxwt, twiddle_rsc_0_9_i_s_din_mxwt, twiddle_rsc_0_10_i_s_din_mxwt,
      twiddle_rsc_0_11_i_s_din_mxwt, {INNER_LOOP1_tw_h_or_cse , INNER_LOOP1_tw_h_and_30_cse
      , INNER_LOOP1_tw_h_and_31_cse , INNER_LOOP1_tw_h_and_32_cse , INNER_LOOP1_tw_h_and_49_cse
      , INNER_LOOP1_tw_h_and_51_cse , INNER_LOOP1_tw_h_and_53_cse , INNER_LOOP1_tw_h_and_55_cse});
  wire [31:0] nl_mult_z_mul_cmp_25_a;
  assign nl_mult_z_mul_cmp_25_a = MUX1HOT_v_32_3_2((mult_t_mul_cmp_13_z[51:20]),
      (mult_t_mul_cmp_8_z[51:20]), (mult_t_mul_cmp_9_z[51:20]), {or_dcpl_29 , (fsm_output[6])
      , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_25_b;
  assign nl_mult_z_mul_cmp_25_b = p_sva;
  wire [31:0] nl_mult_z_mul_cmp_26_a;
  assign nl_mult_z_mul_cmp_26_a = MUX1HOT_v_32_4_2(mult_t_mul_cmp_13_a_mx0w0, tmp_7_lpi_3_dfm_mx0,
      mult_t_mul_cmp_5_a_mx0w2, mult_t_mul_cmp_10_a_mx0w3, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_26_b;
  assign nl_mult_z_mul_cmp_26_b = MUX1HOT_v_32_5_2(twiddle_rsc_0_0_i_s_din_mxwt,
      twiddle_rsc_0_10_i_s_din_mxwt, twiddle_rsc_0_8_i_s_din_mxwt, twiddle_rsc_0_6_i_s_din_mxwt,
      twiddle_rsc_0_4_i_s_din_mxwt, {or_dcpl_29 , or_tmp_441 , and_1189_cse , or_tmp_428
      , and_1155_cse});
  wire [31:0] nl_mult_z_mul_cmp_27_a;
  assign nl_mult_z_mul_cmp_27_a = MUX1HOT_v_32_3_2((mult_t_mul_cmp_14_z[51:20]),
      (mult_t_mul_cmp_7_z[51:20]), (mult_t_mul_cmp_8_z[51:20]), {or_dcpl_29 , (fsm_output[6])
      , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_27_b;
  assign nl_mult_z_mul_cmp_27_b = p_sva;
  wire [31:0] nl_mult_z_mul_cmp_28_a;
  assign nl_mult_z_mul_cmp_28_a = MUX1HOT_v_32_3_2(mult_t_mul_cmp_14_a_mx0w0, tmp_5_lpi_3_dfm_mx0,
      mult_t_mul_cmp_11_a_mx0w2, {(fsm_output[2]) , c_or_cse , (fsm_output[6])});
  wire[0:0] or_705_nl;
  wire [31:0] nl_mult_z_mul_cmp_28_b;
  assign or_705_nl = and_1159_cse | or_dcpl_29 | and_1155_cse;
  assign nl_mult_z_mul_cmp_28_b = MUX1HOT_v_32_3_2(twiddle_rsc_0_0_i_s_din_mxwt,
      twiddle_rsc_0_4_i_s_din_mxwt, twiddle_rsc_0_2_i_s_din_mxwt, {or_705_nl , or_tmp_426
      , or_tmp_428});
  wire [31:0] nl_mult_z_mul_cmp_29_a;
  assign nl_mult_z_mul_cmp_29_a = MUX1HOT_v_32_3_2((mult_t_mul_cmp_15_z[51:20]),
      (mult_t_mul_cmp_z[51:20]), (mult_t_mul_cmp_1_z[51:20]), {or_dcpl_29 , (fsm_output[6])
      , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_29_b;
  assign nl_mult_z_mul_cmp_29_b = p_sva;
  wire [31:0] nl_mult_z_mul_cmp_30_a;
  assign nl_mult_z_mul_cmp_30_a = MUX1HOT_v_32_4_2(mult_t_mul_cmp_15_a_mx0w0, tmp_3_lpi_3_dfm_mx0,
      mult_t_mul_cmp_4_a_mx0w2, tmp_25_lpi_3_dfm_mx0, {(fsm_output[2]) , (fsm_output[4])
      , (fsm_output[6]) , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_30_b;
  assign nl_mult_z_mul_cmp_30_b = MUX1HOT_v_32_6_2(twiddle_rsc_0_0_i_s_din_mxwt,
      twiddle_rsc_0_8_i_s_din_mxwt, twiddle_rsc_0_9_i_s_din_mxwt, twiddle_rsc_0_10_i_s_din_mxwt,
      twiddle_rsc_0_11_i_s_din_mxwt, twiddle_rsc_0_12_i_s_din_mxwt, {or_dcpl_29 ,
      INNER_LOOP1_tw_h_and_29_cse , INNER_LOOP1_tw_h_and_30_cse , INNER_LOOP1_tw_h_and_31_cse
      , INNER_LOOP1_tw_h_and_32_cse , (fsm_output[8])});
  wire [31:0] nl_mult_z_mul_cmp_31_a;
  assign nl_mult_z_mul_cmp_31_a = MUX_v_32_2_2((mult_t_mul_cmp_z[51:20]), (mult_t_mul_cmp_15_z[51:20]),
      fsm_output[6]);
  wire [31:0] nl_mult_z_mul_cmp_31_b;
  assign nl_mult_z_mul_cmp_31_b = p_sva;
  wire [2:0] nl_operator_33_true_3_lshift_rg_s;
  assign nl_operator_33_true_3_lshift_rg_s = {1'b0 , (~ c_1_sva_1) , 1'b0};
  wire[2:0] operator_33_true_mux1h_nl;
  wire[0:0] operator_33_true_operator_33_true_or_nl;
  wire [3:0] nl_operator_33_true_1_lshift_rg_s;
  assign operator_33_true_mux1h_nl = MUX1HOT_v_3_3_2(operator_20_false_acc_cse_sva_mx0w0,
      operator_20_false_acc_cse_sva, ({2'b00 , (~ c_1_sva_1)}), {(fsm_output[1])
      , (fsm_output[3]) , (fsm_output[5])});
  assign operator_33_true_operator_33_true_or_nl = (~ (fsm_output[3])) | (fsm_output[1])
      | (fsm_output[5]);
  assign nl_operator_33_true_1_lshift_rg_s = {operator_33_true_mux1h_nl , operator_33_true_operator_33_true_or_nl};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_0_i_inst_xt_rsc_1_0_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_0_i_inst_xt_rsc_1_0_i_s_dout_core = {reg_xt_rsc_1_0_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_0_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_1_i_inst_xt_rsc_1_1_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_1_i_inst_xt_rsc_1_1_i_s_dout_core = {reg_xt_rsc_1_1_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_1_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_2_i_inst_xt_rsc_1_2_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_2_i_inst_xt_rsc_1_2_i_s_dout_core = {reg_xt_rsc_1_2_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_2_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_3_i_inst_xt_rsc_1_3_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_3_i_inst_xt_rsc_1_3_i_s_dout_core = {reg_xt_rsc_1_3_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_3_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_4_i_inst_xt_rsc_1_4_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_4_i_inst_xt_rsc_1_4_i_s_dout_core = {reg_xt_rsc_1_4_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_4_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_5_i_inst_xt_rsc_1_5_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_5_i_inst_xt_rsc_1_5_i_s_dout_core = {reg_xt_rsc_1_5_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_5_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_6_i_inst_xt_rsc_1_6_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_6_i_inst_xt_rsc_1_6_i_s_dout_core = {reg_xt_rsc_1_6_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_6_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_7_i_inst_xt_rsc_1_7_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_7_i_inst_xt_rsc_1_7_i_s_dout_core = {reg_xt_rsc_1_7_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_7_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_8_i_inst_xt_rsc_1_8_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_8_i_inst_xt_rsc_1_8_i_s_dout_core = {reg_xt_rsc_1_8_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_8_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_9_i_inst_xt_rsc_1_9_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_9_i_inst_xt_rsc_1_9_i_s_dout_core = {reg_xt_rsc_1_9_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_9_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_10_i_inst_xt_rsc_1_10_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_10_i_inst_xt_rsc_1_10_i_s_dout_core = {reg_xt_rsc_1_10_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_10_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_11_i_inst_xt_rsc_1_11_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_11_i_inst_xt_rsc_1_11_i_s_dout_core = {reg_xt_rsc_1_11_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_11_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_12_i_inst_xt_rsc_1_12_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_12_i_inst_xt_rsc_1_12_i_s_dout_core = {reg_xt_rsc_1_12_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_12_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_13_i_inst_xt_rsc_1_13_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_13_i_inst_xt_rsc_1_13_i_s_dout_core = {reg_xt_rsc_1_13_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_13_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_14_i_inst_xt_rsc_1_14_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_14_i_inst_xt_rsc_1_14_i_s_dout_core = {reg_xt_rsc_1_14_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_14_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_15_i_inst_xt_rsc_1_15_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_15_i_inst_xt_rsc_1_15_i_s_dout_core = {reg_xt_rsc_1_15_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_15_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_16_i_inst_xt_rsc_1_16_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_16_i_inst_xt_rsc_1_16_i_s_dout_core = {reg_xt_rsc_1_0_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_0_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_17_i_inst_xt_rsc_1_17_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_17_i_inst_xt_rsc_1_17_i_s_dout_core = {reg_xt_rsc_1_1_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_1_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_18_i_inst_xt_rsc_1_18_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_18_i_inst_xt_rsc_1_18_i_s_dout_core = {reg_xt_rsc_1_2_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_2_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_19_i_inst_xt_rsc_1_19_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_19_i_inst_xt_rsc_1_19_i_s_dout_core = {reg_xt_rsc_1_3_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_3_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_20_i_inst_xt_rsc_1_20_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_20_i_inst_xt_rsc_1_20_i_s_dout_core = {reg_xt_rsc_1_4_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_4_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_21_i_inst_xt_rsc_1_21_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_21_i_inst_xt_rsc_1_21_i_s_dout_core = {reg_xt_rsc_1_5_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_5_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_22_i_inst_xt_rsc_1_22_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_22_i_inst_xt_rsc_1_22_i_s_dout_core = {reg_xt_rsc_1_6_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_6_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_23_i_inst_xt_rsc_1_23_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_23_i_inst_xt_rsc_1_23_i_s_dout_core = {reg_xt_rsc_1_7_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_7_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_24_i_inst_xt_rsc_1_24_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_24_i_inst_xt_rsc_1_24_i_s_dout_core = {reg_xt_rsc_1_8_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_8_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_25_i_inst_xt_rsc_1_25_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_25_i_inst_xt_rsc_1_25_i_s_dout_core = {reg_xt_rsc_1_9_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_9_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_26_i_inst_xt_rsc_1_26_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_26_i_inst_xt_rsc_1_26_i_s_dout_core = {reg_xt_rsc_1_10_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_10_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_27_i_inst_xt_rsc_1_27_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_27_i_inst_xt_rsc_1_27_i_s_dout_core = {reg_xt_rsc_1_11_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_11_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_28_i_inst_xt_rsc_1_28_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_28_i_inst_xt_rsc_1_28_i_s_dout_core = {reg_xt_rsc_1_12_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_12_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_29_i_inst_xt_rsc_1_29_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_29_i_inst_xt_rsc_1_29_i_s_dout_core = {reg_xt_rsc_1_13_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_13_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_30_i_inst_xt_rsc_1_30_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_30_i_inst_xt_rsc_1_30_i_s_dout_core = {reg_xt_rsc_1_14_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_14_i_s_dout_core_cse_rsp_1};
  wire [31:0] nl_peaseNTT_core_xt_rsc_1_31_i_inst_xt_rsc_1_31_i_s_dout_core;
  assign nl_peaseNTT_core_xt_rsc_1_31_i_inst_xt_rsc_1_31_i_s_dout_core = {reg_xt_rsc_1_15_i_s_dout_core_cse_rsp_0
      , reg_xt_rsc_1_15_i_s_dout_core_cse_rsp_1};
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_i_s_raddr_core =
      {1'b0 , twiddle_h_rsc_0_0_i_s_raddr_core_4 , reg_twiddle_rsc_0_0_i_s_raddr_core_3_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_i_s_raddr_core =
      {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_2_i_inst_twiddle_rsc_0_2_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_2_i_inst_twiddle_rsc_0_2_i_s_raddr_core =
      {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_3_i_inst_twiddle_rsc_0_3_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_3_i_inst_twiddle_rsc_0_3_i_s_raddr_core =
      {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_4_i_inst_twiddle_rsc_0_4_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_4_i_inst_twiddle_rsc_0_4_i_s_raddr_core =
      {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_5_i_inst_twiddle_rsc_0_5_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_5_i_inst_twiddle_rsc_0_5_i_s_raddr_core =
      {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_6_i_inst_twiddle_rsc_0_6_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_6_i_inst_twiddle_rsc_0_6_i_s_raddr_core =
      {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_7_i_inst_twiddle_rsc_0_7_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_7_i_inst_twiddle_rsc_0_7_i_s_raddr_core =
      {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_8_i_inst_twiddle_rsc_0_8_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_8_i_inst_twiddle_rsc_0_8_i_s_raddr_core =
      {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_9_i_inst_twiddle_rsc_0_9_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_9_i_inst_twiddle_rsc_0_9_i_s_raddr_core =
      {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_10_i_inst_twiddle_rsc_0_10_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_10_i_inst_twiddle_rsc_0_10_i_s_raddr_core
      = {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_11_i_inst_twiddle_rsc_0_11_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_11_i_inst_twiddle_rsc_0_11_i_s_raddr_core
      = {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_12_i_inst_twiddle_rsc_0_12_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_12_i_inst_twiddle_rsc_0_12_i_s_raddr_core
      = {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_13_i_inst_twiddle_rsc_0_13_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_13_i_inst_twiddle_rsc_0_13_i_s_raddr_core
      = {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_14_i_inst_twiddle_rsc_0_14_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_14_i_inst_twiddle_rsc_0_14_i_s_raddr_core
      = {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_rsc_0_15_i_inst_twiddle_rsc_0_15_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_rsc_0_15_i_inst_twiddle_rsc_0_15_i_s_raddr_core
      = {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_0_i_inst_twiddle_h_rsc_0_0_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_0_i_inst_twiddle_h_rsc_0_0_i_s_raddr_core
      = {1'b0 , twiddle_h_rsc_0_0_i_s_raddr_core_4 , reg_twiddle_rsc_0_0_i_s_raddr_core_3_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_1_i_inst_twiddle_h_rsc_0_1_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_1_i_inst_twiddle_h_rsc_0_1_i_s_raddr_core
      = {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_2_i_inst_twiddle_h_rsc_0_2_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_2_i_inst_twiddle_h_rsc_0_2_i_s_raddr_core
      = {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_3_i_inst_twiddle_h_rsc_0_3_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_3_i_inst_twiddle_h_rsc_0_3_i_s_raddr_core
      = {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_4_i_inst_twiddle_h_rsc_0_4_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_4_i_inst_twiddle_h_rsc_0_4_i_s_raddr_core
      = {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_5_i_inst_twiddle_h_rsc_0_5_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_5_i_inst_twiddle_h_rsc_0_5_i_s_raddr_core
      = {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_6_i_inst_twiddle_h_rsc_0_6_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_6_i_inst_twiddle_h_rsc_0_6_i_s_raddr_core
      = {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_7_i_inst_twiddle_h_rsc_0_7_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_7_i_inst_twiddle_h_rsc_0_7_i_s_raddr_core
      = {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_8_i_inst_twiddle_h_rsc_0_8_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_8_i_inst_twiddle_h_rsc_0_8_i_s_raddr_core
      = {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_9_i_inst_twiddle_h_rsc_0_9_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_9_i_inst_twiddle_h_rsc_0_9_i_s_raddr_core
      = {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_10_i_inst_twiddle_h_rsc_0_10_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_10_i_inst_twiddle_h_rsc_0_10_i_s_raddr_core
      = {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_11_i_inst_twiddle_h_rsc_0_11_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_11_i_inst_twiddle_h_rsc_0_11_i_s_raddr_core
      = {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_12_i_inst_twiddle_h_rsc_0_12_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_12_i_inst_twiddle_h_rsc_0_12_i_s_raddr_core
      = {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_13_i_inst_twiddle_h_rsc_0_13_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_13_i_inst_twiddle_h_rsc_0_13_i_s_raddr_core
      = {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_14_i_inst_twiddle_h_rsc_0_14_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_14_i_inst_twiddle_h_rsc_0_14_i_s_raddr_core
      = {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [5:0] nl_peaseNTT_core_twiddle_h_rsc_0_15_i_inst_twiddle_h_rsc_0_15_i_s_raddr_core;
  assign nl_peaseNTT_core_twiddle_h_rsc_0_15_i_inst_twiddle_h_rsc_0_15_i_s_raddr_core
      = {1'b0, reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse};
  wire [0:0] nl_peaseNTT_core_core_fsm_inst_INNER_LOOP2_C_0_tr0;
  assign nl_peaseNTT_core_core_fsm_inst_INNER_LOOP2_C_0_tr0 = INNER_LOOP2_nor_tmp
      & ((operator_20_false_acc_cse_sva[0]) ^ (operator_20_false_acc_cse_sva[1]));
  wire [0:0] nl_peaseNTT_core_core_fsm_inst_INNER_LOOP2_C_0_tr1;
  assign nl_peaseNTT_core_core_fsm_inst_INNER_LOOP2_C_0_tr1 = ~ INNER_LOOP2_nor_tmp;
  wire [0:0] nl_peaseNTT_core_core_fsm_inst_INNER_LOOP3_C_0_tr0;
  assign nl_peaseNTT_core_core_fsm_inst_INNER_LOOP3_C_0_tr0 = ~(INNER_LOOP3_stage_0
      | INNER_LOOP3_stage_0_2 | INNER_LOOP3_stage_0_3 | INNER_LOOP3_stage_0_4 | INNER_LOOP3_stage_0_5
      | INNER_LOOP3_stage_0_6 | INNER_LOOP3_stage_0_7 | INNER_LOOP3_stage_0_8 | INNER_LOOP3_stage_0_9
      | INNER_LOOP3_stage_0_10 | INNER_LOOP3_stage_0_11 | INNER_LOOP3_stage_0_12);
  wire [0:0] nl_peaseNTT_core_core_fsm_inst_INNER_LOOP4_C_0_tr1;
  assign nl_peaseNTT_core_core_fsm_inst_INNER_LOOP4_C_0_tr1 = ~ INNER_LOOP4_nor_tmp;
  ccs_in_v1 #(.rscid(32'sd2),
  .width(32'sd32)) p_rsci (
      .dat(p_rsc_dat),
      .idat(p_rsci_idat)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd52),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_t_mul_cmp (
      .a(nl_mult_t_mul_cmp_a[31:0]),
      .b(nl_mult_t_mul_cmp_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_t_mul_cmp_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd52),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_t_mul_cmp_1 (
      .a(nl_mult_t_mul_cmp_1_a[31:0]),
      .b(nl_mult_t_mul_cmp_1_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_t_mul_cmp_1_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd52),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_t_mul_cmp_2 (
      .a(nl_mult_t_mul_cmp_2_a[31:0]),
      .b(nl_mult_t_mul_cmp_2_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_t_mul_cmp_2_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd52),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_t_mul_cmp_3 (
      .a(nl_mult_t_mul_cmp_3_a[31:0]),
      .b(nl_mult_t_mul_cmp_3_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_t_mul_cmp_3_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd52),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_t_mul_cmp_4 (
      .a(nl_mult_t_mul_cmp_4_a[31:0]),
      .b(nl_mult_t_mul_cmp_4_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_t_mul_cmp_4_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd52),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_t_mul_cmp_5 (
      .a(nl_mult_t_mul_cmp_5_a[31:0]),
      .b(nl_mult_t_mul_cmp_5_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_t_mul_cmp_5_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd52),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_t_mul_cmp_6 (
      .a(nl_mult_t_mul_cmp_6_a[31:0]),
      .b(nl_mult_t_mul_cmp_6_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_t_mul_cmp_6_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd52),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_t_mul_cmp_7 (
      .a(nl_mult_t_mul_cmp_7_a[31:0]),
      .b(nl_mult_t_mul_cmp_7_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_t_mul_cmp_7_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd52),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_t_mul_cmp_8 (
      .a(nl_mult_t_mul_cmp_8_a[31:0]),
      .b(nl_mult_t_mul_cmp_8_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_t_mul_cmp_8_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd52),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_t_mul_cmp_9 (
      .a(nl_mult_t_mul_cmp_9_a[31:0]),
      .b(nl_mult_t_mul_cmp_9_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_t_mul_cmp_9_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd52),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_t_mul_cmp_10 (
      .a(nl_mult_t_mul_cmp_10_a[31:0]),
      .b(nl_mult_t_mul_cmp_10_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_t_mul_cmp_10_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd52),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_t_mul_cmp_11 (
      .a(nl_mult_t_mul_cmp_11_a[31:0]),
      .b(nl_mult_t_mul_cmp_11_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_t_mul_cmp_11_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd52),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_t_mul_cmp_12 (
      .a(mult_4_t_mux1h_rmff),
      .b(nl_mult_t_mul_cmp_12_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_t_mul_cmp_12_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd52),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_t_mul_cmp_13 (
      .a(nl_mult_t_mul_cmp_13_a[31:0]),
      .b(nl_mult_t_mul_cmp_13_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_t_mul_cmp_13_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd52),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_t_mul_cmp_14 (
      .a(nl_mult_t_mul_cmp_14_a[31:0]),
      .b(nl_mult_t_mul_cmp_14_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_t_mul_cmp_14_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd52),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_t_mul_cmp_15 (
      .a(nl_mult_t_mul_cmp_15_a[31:0]),
      .b(nl_mult_t_mul_cmp_15_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_t_mul_cmp_15_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp (
      .a(nl_mult_z_mul_cmp_a[31:0]),
      .b(nl_mult_z_mul_cmp_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_1 (
      .a(nl_mult_z_mul_cmp_1_a[31:0]),
      .b(nl_mult_z_mul_cmp_1_b[31:0]),
      .clk(clk),
      .en(mult_z_mul_cmp_1_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_1_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_2 (
      .a(nl_mult_z_mul_cmp_2_a[31:0]),
      .b(nl_mult_z_mul_cmp_2_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_2_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_3 (
      .a(nl_mult_z_mul_cmp_3_a[31:0]),
      .b(nl_mult_z_mul_cmp_3_b[31:0]),
      .clk(clk),
      .en(mult_z_mul_cmp_1_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_3_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_4 (
      .a(nl_mult_z_mul_cmp_4_a[31:0]),
      .b(nl_mult_z_mul_cmp_4_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_4_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_5 (
      .a(nl_mult_z_mul_cmp_5_a[31:0]),
      .b(nl_mult_z_mul_cmp_5_b[31:0]),
      .clk(clk),
      .en(mult_z_mul_cmp_1_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_5_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_6 (
      .a(nl_mult_z_mul_cmp_6_a[31:0]),
      .b(nl_mult_z_mul_cmp_6_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_6_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_7 (
      .a(nl_mult_z_mul_cmp_7_a[31:0]),
      .b(nl_mult_z_mul_cmp_7_b[31:0]),
      .clk(clk),
      .en(mult_z_mul_cmp_1_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_7_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_8 (
      .a(nl_mult_z_mul_cmp_8_a[31:0]),
      .b(nl_mult_z_mul_cmp_8_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_8_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_9 (
      .a(nl_mult_z_mul_cmp_9_a[31:0]),
      .b(nl_mult_z_mul_cmp_9_b[31:0]),
      .clk(clk),
      .en(mult_z_mul_cmp_1_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_9_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_10 (
      .a(nl_mult_z_mul_cmp_10_a[31:0]),
      .b(nl_mult_z_mul_cmp_10_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_10_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_11 (
      .a(nl_mult_z_mul_cmp_11_a[31:0]),
      .b(nl_mult_z_mul_cmp_11_b[31:0]),
      .clk(clk),
      .en(mult_z_mul_cmp_1_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_11_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_12 (
      .a(nl_mult_z_mul_cmp_12_a[31:0]),
      .b(nl_mult_z_mul_cmp_12_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_12_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_13 (
      .a(nl_mult_z_mul_cmp_13_a[31:0]),
      .b(nl_mult_z_mul_cmp_13_b[31:0]),
      .clk(clk),
      .en(mult_z_mul_cmp_1_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_13_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_14 (
      .a(nl_mult_z_mul_cmp_14_a[31:0]),
      .b(nl_mult_z_mul_cmp_14_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_14_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_15 (
      .a(nl_mult_z_mul_cmp_15_a[31:0]),
      .b(nl_mult_z_mul_cmp_15_b[31:0]),
      .clk(clk),
      .en(mult_z_mul_cmp_1_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_15_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_16 (
      .a(nl_mult_z_mul_cmp_16_a[31:0]),
      .b(nl_mult_z_mul_cmp_16_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_16_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_17 (
      .a(nl_mult_z_mul_cmp_17_a[31:0]),
      .b(nl_mult_z_mul_cmp_17_b[31:0]),
      .clk(clk),
      .en(mult_z_mul_cmp_1_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_17_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_18 (
      .a(nl_mult_z_mul_cmp_18_a[31:0]),
      .b(nl_mult_z_mul_cmp_18_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_18_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_19 (
      .a(nl_mult_z_mul_cmp_19_a[31:0]),
      .b(nl_mult_z_mul_cmp_19_b[31:0]),
      .clk(clk),
      .en(mult_z_mul_cmp_1_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_19_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_20 (
      .a(nl_mult_z_mul_cmp_20_a[31:0]),
      .b(nl_mult_z_mul_cmp_20_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_20_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_21 (
      .a(nl_mult_z_mul_cmp_21_a[31:0]),
      .b(nl_mult_z_mul_cmp_21_b[31:0]),
      .clk(clk),
      .en(mult_z_mul_cmp_1_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_21_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_22 (
      .a(nl_mult_z_mul_cmp_22_a[31:0]),
      .b(nl_mult_z_mul_cmp_22_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_22_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_23 (
      .a(nl_mult_z_mul_cmp_23_a[31:0]),
      .b(nl_mult_z_mul_cmp_23_b[31:0]),
      .clk(clk),
      .en(mult_z_mul_cmp_1_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_23_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_24 (
      .a(mult_4_t_mux1h_rmff),
      .b(nl_mult_z_mul_cmp_24_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_24_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_25 (
      .a(nl_mult_z_mul_cmp_25_a[31:0]),
      .b(nl_mult_z_mul_cmp_25_b[31:0]),
      .clk(clk),
      .en(mult_z_mul_cmp_1_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_25_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_26 (
      .a(nl_mult_z_mul_cmp_26_a[31:0]),
      .b(nl_mult_z_mul_cmp_26_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_26_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_27 (
      .a(nl_mult_z_mul_cmp_27_a[31:0]),
      .b(nl_mult_z_mul_cmp_27_b[31:0]),
      .clk(clk),
      .en(mult_z_mul_cmp_1_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_27_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_28 (
      .a(nl_mult_z_mul_cmp_28_a[31:0]),
      .b(nl_mult_z_mul_cmp_28_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_28_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_29 (
      .a(nl_mult_z_mul_cmp_29_a[31:0]),
      .b(nl_mult_z_mul_cmp_29_b[31:0]),
      .clk(clk),
      .en(mult_z_mul_cmp_1_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_29_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_30 (
      .a(nl_mult_z_mul_cmp_30_a[31:0]),
      .b(nl_mult_z_mul_cmp_30_b[31:0]),
      .clk(clk),
      .en(mult_t_mul_cmp_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_30_z)
    );
  mgc_mul_pipe #(.width_a(32'sd32),
  .signd_a(32'sd0),
  .width_b(32'sd32),
  .signd_b(32'sd0),
  .width_z(32'sd32),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd1),
  .stages(32'sd2),
  .n_inreg(32'sd2)) mult_z_mul_cmp_31 (
      .a(nl_mult_z_mul_cmp_31_a[31:0]),
      .b(nl_mult_z_mul_cmp_31_b[31:0]),
      .clk(clk),
      .en(mult_z_mul_cmp_1_en),
      .a_rst(1'b1),
      .s_rst(rst),
      .z(mult_z_mul_cmp_31_z)
    );
  mgc_shift_bl_v5 #(.width_a(32'sd1),
  .signd_a(32'sd1),
  .width_s(32'sd3),
  .width_z(32'sd2)) operator_33_true_3_lshift_rg (
      .a(1'b1),
      .s(nl_operator_33_true_3_lshift_rg_s[2:0]),
      .z(operator_33_true_3_lshift_psp_1_0_sva_mx0w2)
    );
  mgc_shift_l_v5 #(.width_a(32'sd1),
  .signd_a(32'sd1),
  .width_s(32'sd4),
  .width_z(32'sd9)) operator_33_true_1_lshift_rg (
      .a(1'b1),
      .s(nl_operator_33_true_1_lshift_rg_s[3:0]),
      .z(z_out_48)
    );
  peaseNTT_core_wait_dp peaseNTT_core_wait_dp_inst (
      .yt_rsc_0_0_cgo_iro(or_67_rmff),
      .yt_rsc_0_0_i_clken_d(yt_rsc_0_0_i_clken_d),
      .yt_rsc_0_16_cgo_iro(or_119_rmff),
      .yt_rsc_0_16_i_clken_d(yt_rsc_0_16_i_clken_d),
      .yt_rsc_1_0_cgo_iro(or_153_rmff),
      .yt_rsc_1_0_i_clken_d(yt_rsc_1_0_i_clken_d),
      .yt_rsc_1_16_cgo_iro(or_204_rmff),
      .yt_rsc_1_16_i_clken_d(yt_rsc_1_16_i_clken_d),
      .ensig_cgo_iro(or_447_rmff),
      .ensig_cgo_iro_17(or_570_rmff),
      .core_wen(core_wen),
      .yt_rsc_0_0_cgo(reg_yt_rsc_0_0_cgo_cse),
      .yt_rsc_0_16_cgo(reg_yt_rsc_0_16_cgo_cse),
      .yt_rsc_1_0_cgo(reg_yt_rsc_1_0_cgo_cse),
      .yt_rsc_1_16_cgo(reg_yt_rsc_1_16_cgo_cse),
      .ensig_cgo(reg_ensig_cgo_cse),
      .mult_t_mul_cmp_en(mult_t_mul_cmp_en),
      .ensig_cgo_17(reg_ensig_cgo_17_cse),
      .mult_z_mul_cmp_1_en(mult_z_mul_cmp_1_en)
    );
  peaseNTT_core_xt_rsc_0_0_i peaseNTT_core_xt_rsc_0_0_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_0_s_tdone(xt_rsc_0_0_s_tdone),
      .xt_rsc_0_0_tr_write_done(xt_rsc_0_0_tr_write_done),
      .xt_rsc_0_0_RREADY(xt_rsc_0_0_RREADY),
      .xt_rsc_0_0_RVALID(xt_rsc_0_0_RVALID),
      .xt_rsc_0_0_RUSER(xt_rsc_0_0_RUSER),
      .xt_rsc_0_0_RLAST(xt_rsc_0_0_RLAST),
      .xt_rsc_0_0_RRESP(xt_rsc_0_0_RRESP),
      .xt_rsc_0_0_RDATA(xt_rsc_0_0_RDATA),
      .xt_rsc_0_0_RID(xt_rsc_0_0_RID),
      .xt_rsc_0_0_ARREADY(xt_rsc_0_0_ARREADY),
      .xt_rsc_0_0_ARVALID(xt_rsc_0_0_ARVALID),
      .xt_rsc_0_0_ARUSER(xt_rsc_0_0_ARUSER),
      .xt_rsc_0_0_ARREGION(xt_rsc_0_0_ARREGION),
      .xt_rsc_0_0_ARQOS(xt_rsc_0_0_ARQOS),
      .xt_rsc_0_0_ARPROT(xt_rsc_0_0_ARPROT),
      .xt_rsc_0_0_ARCACHE(xt_rsc_0_0_ARCACHE),
      .xt_rsc_0_0_ARLOCK(xt_rsc_0_0_ARLOCK),
      .xt_rsc_0_0_ARBURST(xt_rsc_0_0_ARBURST),
      .xt_rsc_0_0_ARSIZE(xt_rsc_0_0_ARSIZE),
      .xt_rsc_0_0_ARLEN(xt_rsc_0_0_ARLEN),
      .xt_rsc_0_0_ARADDR(xt_rsc_0_0_ARADDR),
      .xt_rsc_0_0_ARID(xt_rsc_0_0_ARID),
      .xt_rsc_0_0_BREADY(xt_rsc_0_0_BREADY),
      .xt_rsc_0_0_BVALID(xt_rsc_0_0_BVALID),
      .xt_rsc_0_0_BUSER(xt_rsc_0_0_BUSER),
      .xt_rsc_0_0_BRESP(xt_rsc_0_0_BRESP),
      .xt_rsc_0_0_BID(xt_rsc_0_0_BID),
      .xt_rsc_0_0_WREADY(xt_rsc_0_0_WREADY),
      .xt_rsc_0_0_WVALID(xt_rsc_0_0_WVALID),
      .xt_rsc_0_0_WUSER(xt_rsc_0_0_WUSER),
      .xt_rsc_0_0_WLAST(xt_rsc_0_0_WLAST),
      .xt_rsc_0_0_WSTRB(xt_rsc_0_0_WSTRB),
      .xt_rsc_0_0_WDATA(xt_rsc_0_0_WDATA),
      .xt_rsc_0_0_AWREADY(xt_rsc_0_0_AWREADY),
      .xt_rsc_0_0_AWVALID(xt_rsc_0_0_AWVALID),
      .xt_rsc_0_0_AWUSER(xt_rsc_0_0_AWUSER),
      .xt_rsc_0_0_AWREGION(xt_rsc_0_0_AWREGION),
      .xt_rsc_0_0_AWQOS(xt_rsc_0_0_AWQOS),
      .xt_rsc_0_0_AWPROT(xt_rsc_0_0_AWPROT),
      .xt_rsc_0_0_AWCACHE(xt_rsc_0_0_AWCACHE),
      .xt_rsc_0_0_AWLOCK(xt_rsc_0_0_AWLOCK),
      .xt_rsc_0_0_AWBURST(xt_rsc_0_0_AWBURST),
      .xt_rsc_0_0_AWSIZE(xt_rsc_0_0_AWSIZE),
      .xt_rsc_0_0_AWLEN(xt_rsc_0_0_AWLEN),
      .xt_rsc_0_0_AWADDR(xt_rsc_0_0_AWADDR),
      .xt_rsc_0_0_AWID(xt_rsc_0_0_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_0_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_0_i_wen_comp(xt_rsc_0_0_i_wen_comp),
      .xt_rsc_0_0_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_0_0_i_wen_comp_1(xt_rsc_0_0_i_wen_comp_1),
      .xt_rsc_0_0_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_0_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_0_0_i_s_din_mxwt(xt_rsc_0_0_i_s_din_mxwt),
      .xt_rsc_0_0_i_s_dout_core(reg_xt_rsc_0_0_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_1_i peaseNTT_core_xt_rsc_0_1_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_1_s_tdone(xt_rsc_0_1_s_tdone),
      .xt_rsc_0_1_tr_write_done(xt_rsc_0_1_tr_write_done),
      .xt_rsc_0_1_RREADY(xt_rsc_0_1_RREADY),
      .xt_rsc_0_1_RVALID(xt_rsc_0_1_RVALID),
      .xt_rsc_0_1_RUSER(xt_rsc_0_1_RUSER),
      .xt_rsc_0_1_RLAST(xt_rsc_0_1_RLAST),
      .xt_rsc_0_1_RRESP(xt_rsc_0_1_RRESP),
      .xt_rsc_0_1_RDATA(xt_rsc_0_1_RDATA),
      .xt_rsc_0_1_RID(xt_rsc_0_1_RID),
      .xt_rsc_0_1_ARREADY(xt_rsc_0_1_ARREADY),
      .xt_rsc_0_1_ARVALID(xt_rsc_0_1_ARVALID),
      .xt_rsc_0_1_ARUSER(xt_rsc_0_1_ARUSER),
      .xt_rsc_0_1_ARREGION(xt_rsc_0_1_ARREGION),
      .xt_rsc_0_1_ARQOS(xt_rsc_0_1_ARQOS),
      .xt_rsc_0_1_ARPROT(xt_rsc_0_1_ARPROT),
      .xt_rsc_0_1_ARCACHE(xt_rsc_0_1_ARCACHE),
      .xt_rsc_0_1_ARLOCK(xt_rsc_0_1_ARLOCK),
      .xt_rsc_0_1_ARBURST(xt_rsc_0_1_ARBURST),
      .xt_rsc_0_1_ARSIZE(xt_rsc_0_1_ARSIZE),
      .xt_rsc_0_1_ARLEN(xt_rsc_0_1_ARLEN),
      .xt_rsc_0_1_ARADDR(xt_rsc_0_1_ARADDR),
      .xt_rsc_0_1_ARID(xt_rsc_0_1_ARID),
      .xt_rsc_0_1_BREADY(xt_rsc_0_1_BREADY),
      .xt_rsc_0_1_BVALID(xt_rsc_0_1_BVALID),
      .xt_rsc_0_1_BUSER(xt_rsc_0_1_BUSER),
      .xt_rsc_0_1_BRESP(xt_rsc_0_1_BRESP),
      .xt_rsc_0_1_BID(xt_rsc_0_1_BID),
      .xt_rsc_0_1_WREADY(xt_rsc_0_1_WREADY),
      .xt_rsc_0_1_WVALID(xt_rsc_0_1_WVALID),
      .xt_rsc_0_1_WUSER(xt_rsc_0_1_WUSER),
      .xt_rsc_0_1_WLAST(xt_rsc_0_1_WLAST),
      .xt_rsc_0_1_WSTRB(xt_rsc_0_1_WSTRB),
      .xt_rsc_0_1_WDATA(xt_rsc_0_1_WDATA),
      .xt_rsc_0_1_AWREADY(xt_rsc_0_1_AWREADY),
      .xt_rsc_0_1_AWVALID(xt_rsc_0_1_AWVALID),
      .xt_rsc_0_1_AWUSER(xt_rsc_0_1_AWUSER),
      .xt_rsc_0_1_AWREGION(xt_rsc_0_1_AWREGION),
      .xt_rsc_0_1_AWQOS(xt_rsc_0_1_AWQOS),
      .xt_rsc_0_1_AWPROT(xt_rsc_0_1_AWPROT),
      .xt_rsc_0_1_AWCACHE(xt_rsc_0_1_AWCACHE),
      .xt_rsc_0_1_AWLOCK(xt_rsc_0_1_AWLOCK),
      .xt_rsc_0_1_AWBURST(xt_rsc_0_1_AWBURST),
      .xt_rsc_0_1_AWSIZE(xt_rsc_0_1_AWSIZE),
      .xt_rsc_0_1_AWLEN(xt_rsc_0_1_AWLEN),
      .xt_rsc_0_1_AWADDR(xt_rsc_0_1_AWADDR),
      .xt_rsc_0_1_AWID(xt_rsc_0_1_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_1_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_1_i_wen_comp(xt_rsc_0_1_i_wen_comp),
      .xt_rsc_0_1_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_0_1_i_wen_comp_1(xt_rsc_0_1_i_wen_comp_1),
      .xt_rsc_0_1_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_1_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_0_1_i_s_din_mxwt(xt_rsc_0_1_i_s_din_mxwt),
      .xt_rsc_0_1_i_s_dout_core(reg_xt_rsc_0_1_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_2_i peaseNTT_core_xt_rsc_0_2_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_2_s_tdone(xt_rsc_0_2_s_tdone),
      .xt_rsc_0_2_tr_write_done(xt_rsc_0_2_tr_write_done),
      .xt_rsc_0_2_RREADY(xt_rsc_0_2_RREADY),
      .xt_rsc_0_2_RVALID(xt_rsc_0_2_RVALID),
      .xt_rsc_0_2_RUSER(xt_rsc_0_2_RUSER),
      .xt_rsc_0_2_RLAST(xt_rsc_0_2_RLAST),
      .xt_rsc_0_2_RRESP(xt_rsc_0_2_RRESP),
      .xt_rsc_0_2_RDATA(xt_rsc_0_2_RDATA),
      .xt_rsc_0_2_RID(xt_rsc_0_2_RID),
      .xt_rsc_0_2_ARREADY(xt_rsc_0_2_ARREADY),
      .xt_rsc_0_2_ARVALID(xt_rsc_0_2_ARVALID),
      .xt_rsc_0_2_ARUSER(xt_rsc_0_2_ARUSER),
      .xt_rsc_0_2_ARREGION(xt_rsc_0_2_ARREGION),
      .xt_rsc_0_2_ARQOS(xt_rsc_0_2_ARQOS),
      .xt_rsc_0_2_ARPROT(xt_rsc_0_2_ARPROT),
      .xt_rsc_0_2_ARCACHE(xt_rsc_0_2_ARCACHE),
      .xt_rsc_0_2_ARLOCK(xt_rsc_0_2_ARLOCK),
      .xt_rsc_0_2_ARBURST(xt_rsc_0_2_ARBURST),
      .xt_rsc_0_2_ARSIZE(xt_rsc_0_2_ARSIZE),
      .xt_rsc_0_2_ARLEN(xt_rsc_0_2_ARLEN),
      .xt_rsc_0_2_ARADDR(xt_rsc_0_2_ARADDR),
      .xt_rsc_0_2_ARID(xt_rsc_0_2_ARID),
      .xt_rsc_0_2_BREADY(xt_rsc_0_2_BREADY),
      .xt_rsc_0_2_BVALID(xt_rsc_0_2_BVALID),
      .xt_rsc_0_2_BUSER(xt_rsc_0_2_BUSER),
      .xt_rsc_0_2_BRESP(xt_rsc_0_2_BRESP),
      .xt_rsc_0_2_BID(xt_rsc_0_2_BID),
      .xt_rsc_0_2_WREADY(xt_rsc_0_2_WREADY),
      .xt_rsc_0_2_WVALID(xt_rsc_0_2_WVALID),
      .xt_rsc_0_2_WUSER(xt_rsc_0_2_WUSER),
      .xt_rsc_0_2_WLAST(xt_rsc_0_2_WLAST),
      .xt_rsc_0_2_WSTRB(xt_rsc_0_2_WSTRB),
      .xt_rsc_0_2_WDATA(xt_rsc_0_2_WDATA),
      .xt_rsc_0_2_AWREADY(xt_rsc_0_2_AWREADY),
      .xt_rsc_0_2_AWVALID(xt_rsc_0_2_AWVALID),
      .xt_rsc_0_2_AWUSER(xt_rsc_0_2_AWUSER),
      .xt_rsc_0_2_AWREGION(xt_rsc_0_2_AWREGION),
      .xt_rsc_0_2_AWQOS(xt_rsc_0_2_AWQOS),
      .xt_rsc_0_2_AWPROT(xt_rsc_0_2_AWPROT),
      .xt_rsc_0_2_AWCACHE(xt_rsc_0_2_AWCACHE),
      .xt_rsc_0_2_AWLOCK(xt_rsc_0_2_AWLOCK),
      .xt_rsc_0_2_AWBURST(xt_rsc_0_2_AWBURST),
      .xt_rsc_0_2_AWSIZE(xt_rsc_0_2_AWSIZE),
      .xt_rsc_0_2_AWLEN(xt_rsc_0_2_AWLEN),
      .xt_rsc_0_2_AWADDR(xt_rsc_0_2_AWADDR),
      .xt_rsc_0_2_AWID(xt_rsc_0_2_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_2_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_2_i_wen_comp(xt_rsc_0_2_i_wen_comp),
      .xt_rsc_0_2_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_0_2_i_wen_comp_1(xt_rsc_0_2_i_wen_comp_1),
      .xt_rsc_0_2_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_2_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_0_2_i_s_din_mxwt(xt_rsc_0_2_i_s_din_mxwt),
      .xt_rsc_0_2_i_s_dout_core(reg_xt_rsc_0_2_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_3_i peaseNTT_core_xt_rsc_0_3_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_3_s_tdone(xt_rsc_0_3_s_tdone),
      .xt_rsc_0_3_tr_write_done(xt_rsc_0_3_tr_write_done),
      .xt_rsc_0_3_RREADY(xt_rsc_0_3_RREADY),
      .xt_rsc_0_3_RVALID(xt_rsc_0_3_RVALID),
      .xt_rsc_0_3_RUSER(xt_rsc_0_3_RUSER),
      .xt_rsc_0_3_RLAST(xt_rsc_0_3_RLAST),
      .xt_rsc_0_3_RRESP(xt_rsc_0_3_RRESP),
      .xt_rsc_0_3_RDATA(xt_rsc_0_3_RDATA),
      .xt_rsc_0_3_RID(xt_rsc_0_3_RID),
      .xt_rsc_0_3_ARREADY(xt_rsc_0_3_ARREADY),
      .xt_rsc_0_3_ARVALID(xt_rsc_0_3_ARVALID),
      .xt_rsc_0_3_ARUSER(xt_rsc_0_3_ARUSER),
      .xt_rsc_0_3_ARREGION(xt_rsc_0_3_ARREGION),
      .xt_rsc_0_3_ARQOS(xt_rsc_0_3_ARQOS),
      .xt_rsc_0_3_ARPROT(xt_rsc_0_3_ARPROT),
      .xt_rsc_0_3_ARCACHE(xt_rsc_0_3_ARCACHE),
      .xt_rsc_0_3_ARLOCK(xt_rsc_0_3_ARLOCK),
      .xt_rsc_0_3_ARBURST(xt_rsc_0_3_ARBURST),
      .xt_rsc_0_3_ARSIZE(xt_rsc_0_3_ARSIZE),
      .xt_rsc_0_3_ARLEN(xt_rsc_0_3_ARLEN),
      .xt_rsc_0_3_ARADDR(xt_rsc_0_3_ARADDR),
      .xt_rsc_0_3_ARID(xt_rsc_0_3_ARID),
      .xt_rsc_0_3_BREADY(xt_rsc_0_3_BREADY),
      .xt_rsc_0_3_BVALID(xt_rsc_0_3_BVALID),
      .xt_rsc_0_3_BUSER(xt_rsc_0_3_BUSER),
      .xt_rsc_0_3_BRESP(xt_rsc_0_3_BRESP),
      .xt_rsc_0_3_BID(xt_rsc_0_3_BID),
      .xt_rsc_0_3_WREADY(xt_rsc_0_3_WREADY),
      .xt_rsc_0_3_WVALID(xt_rsc_0_3_WVALID),
      .xt_rsc_0_3_WUSER(xt_rsc_0_3_WUSER),
      .xt_rsc_0_3_WLAST(xt_rsc_0_3_WLAST),
      .xt_rsc_0_3_WSTRB(xt_rsc_0_3_WSTRB),
      .xt_rsc_0_3_WDATA(xt_rsc_0_3_WDATA),
      .xt_rsc_0_3_AWREADY(xt_rsc_0_3_AWREADY),
      .xt_rsc_0_3_AWVALID(xt_rsc_0_3_AWVALID),
      .xt_rsc_0_3_AWUSER(xt_rsc_0_3_AWUSER),
      .xt_rsc_0_3_AWREGION(xt_rsc_0_3_AWREGION),
      .xt_rsc_0_3_AWQOS(xt_rsc_0_3_AWQOS),
      .xt_rsc_0_3_AWPROT(xt_rsc_0_3_AWPROT),
      .xt_rsc_0_3_AWCACHE(xt_rsc_0_3_AWCACHE),
      .xt_rsc_0_3_AWLOCK(xt_rsc_0_3_AWLOCK),
      .xt_rsc_0_3_AWBURST(xt_rsc_0_3_AWBURST),
      .xt_rsc_0_3_AWSIZE(xt_rsc_0_3_AWSIZE),
      .xt_rsc_0_3_AWLEN(xt_rsc_0_3_AWLEN),
      .xt_rsc_0_3_AWADDR(xt_rsc_0_3_AWADDR),
      .xt_rsc_0_3_AWID(xt_rsc_0_3_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_3_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_3_i_wen_comp(xt_rsc_0_3_i_wen_comp),
      .xt_rsc_0_3_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_0_3_i_wen_comp_1(xt_rsc_0_3_i_wen_comp_1),
      .xt_rsc_0_3_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_3_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_0_3_i_s_din_mxwt(xt_rsc_0_3_i_s_din_mxwt),
      .xt_rsc_0_3_i_s_dout_core(reg_xt_rsc_0_3_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_4_i peaseNTT_core_xt_rsc_0_4_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_4_s_tdone(xt_rsc_0_4_s_tdone),
      .xt_rsc_0_4_tr_write_done(xt_rsc_0_4_tr_write_done),
      .xt_rsc_0_4_RREADY(xt_rsc_0_4_RREADY),
      .xt_rsc_0_4_RVALID(xt_rsc_0_4_RVALID),
      .xt_rsc_0_4_RUSER(xt_rsc_0_4_RUSER),
      .xt_rsc_0_4_RLAST(xt_rsc_0_4_RLAST),
      .xt_rsc_0_4_RRESP(xt_rsc_0_4_RRESP),
      .xt_rsc_0_4_RDATA(xt_rsc_0_4_RDATA),
      .xt_rsc_0_4_RID(xt_rsc_0_4_RID),
      .xt_rsc_0_4_ARREADY(xt_rsc_0_4_ARREADY),
      .xt_rsc_0_4_ARVALID(xt_rsc_0_4_ARVALID),
      .xt_rsc_0_4_ARUSER(xt_rsc_0_4_ARUSER),
      .xt_rsc_0_4_ARREGION(xt_rsc_0_4_ARREGION),
      .xt_rsc_0_4_ARQOS(xt_rsc_0_4_ARQOS),
      .xt_rsc_0_4_ARPROT(xt_rsc_0_4_ARPROT),
      .xt_rsc_0_4_ARCACHE(xt_rsc_0_4_ARCACHE),
      .xt_rsc_0_4_ARLOCK(xt_rsc_0_4_ARLOCK),
      .xt_rsc_0_4_ARBURST(xt_rsc_0_4_ARBURST),
      .xt_rsc_0_4_ARSIZE(xt_rsc_0_4_ARSIZE),
      .xt_rsc_0_4_ARLEN(xt_rsc_0_4_ARLEN),
      .xt_rsc_0_4_ARADDR(xt_rsc_0_4_ARADDR),
      .xt_rsc_0_4_ARID(xt_rsc_0_4_ARID),
      .xt_rsc_0_4_BREADY(xt_rsc_0_4_BREADY),
      .xt_rsc_0_4_BVALID(xt_rsc_0_4_BVALID),
      .xt_rsc_0_4_BUSER(xt_rsc_0_4_BUSER),
      .xt_rsc_0_4_BRESP(xt_rsc_0_4_BRESP),
      .xt_rsc_0_4_BID(xt_rsc_0_4_BID),
      .xt_rsc_0_4_WREADY(xt_rsc_0_4_WREADY),
      .xt_rsc_0_4_WVALID(xt_rsc_0_4_WVALID),
      .xt_rsc_0_4_WUSER(xt_rsc_0_4_WUSER),
      .xt_rsc_0_4_WLAST(xt_rsc_0_4_WLAST),
      .xt_rsc_0_4_WSTRB(xt_rsc_0_4_WSTRB),
      .xt_rsc_0_4_WDATA(xt_rsc_0_4_WDATA),
      .xt_rsc_0_4_AWREADY(xt_rsc_0_4_AWREADY),
      .xt_rsc_0_4_AWVALID(xt_rsc_0_4_AWVALID),
      .xt_rsc_0_4_AWUSER(xt_rsc_0_4_AWUSER),
      .xt_rsc_0_4_AWREGION(xt_rsc_0_4_AWREGION),
      .xt_rsc_0_4_AWQOS(xt_rsc_0_4_AWQOS),
      .xt_rsc_0_4_AWPROT(xt_rsc_0_4_AWPROT),
      .xt_rsc_0_4_AWCACHE(xt_rsc_0_4_AWCACHE),
      .xt_rsc_0_4_AWLOCK(xt_rsc_0_4_AWLOCK),
      .xt_rsc_0_4_AWBURST(xt_rsc_0_4_AWBURST),
      .xt_rsc_0_4_AWSIZE(xt_rsc_0_4_AWSIZE),
      .xt_rsc_0_4_AWLEN(xt_rsc_0_4_AWLEN),
      .xt_rsc_0_4_AWADDR(xt_rsc_0_4_AWADDR),
      .xt_rsc_0_4_AWID(xt_rsc_0_4_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_4_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_4_i_wen_comp(xt_rsc_0_4_i_wen_comp),
      .xt_rsc_0_4_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_0_4_i_wen_comp_1(xt_rsc_0_4_i_wen_comp_1),
      .xt_rsc_0_4_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_4_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_0_4_i_s_din_mxwt(xt_rsc_0_4_i_s_din_mxwt),
      .xt_rsc_0_4_i_s_dout_core(reg_xt_rsc_0_4_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_5_i peaseNTT_core_xt_rsc_0_5_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_5_s_tdone(xt_rsc_0_5_s_tdone),
      .xt_rsc_0_5_tr_write_done(xt_rsc_0_5_tr_write_done),
      .xt_rsc_0_5_RREADY(xt_rsc_0_5_RREADY),
      .xt_rsc_0_5_RVALID(xt_rsc_0_5_RVALID),
      .xt_rsc_0_5_RUSER(xt_rsc_0_5_RUSER),
      .xt_rsc_0_5_RLAST(xt_rsc_0_5_RLAST),
      .xt_rsc_0_5_RRESP(xt_rsc_0_5_RRESP),
      .xt_rsc_0_5_RDATA(xt_rsc_0_5_RDATA),
      .xt_rsc_0_5_RID(xt_rsc_0_5_RID),
      .xt_rsc_0_5_ARREADY(xt_rsc_0_5_ARREADY),
      .xt_rsc_0_5_ARVALID(xt_rsc_0_5_ARVALID),
      .xt_rsc_0_5_ARUSER(xt_rsc_0_5_ARUSER),
      .xt_rsc_0_5_ARREGION(xt_rsc_0_5_ARREGION),
      .xt_rsc_0_5_ARQOS(xt_rsc_0_5_ARQOS),
      .xt_rsc_0_5_ARPROT(xt_rsc_0_5_ARPROT),
      .xt_rsc_0_5_ARCACHE(xt_rsc_0_5_ARCACHE),
      .xt_rsc_0_5_ARLOCK(xt_rsc_0_5_ARLOCK),
      .xt_rsc_0_5_ARBURST(xt_rsc_0_5_ARBURST),
      .xt_rsc_0_5_ARSIZE(xt_rsc_0_5_ARSIZE),
      .xt_rsc_0_5_ARLEN(xt_rsc_0_5_ARLEN),
      .xt_rsc_0_5_ARADDR(xt_rsc_0_5_ARADDR),
      .xt_rsc_0_5_ARID(xt_rsc_0_5_ARID),
      .xt_rsc_0_5_BREADY(xt_rsc_0_5_BREADY),
      .xt_rsc_0_5_BVALID(xt_rsc_0_5_BVALID),
      .xt_rsc_0_5_BUSER(xt_rsc_0_5_BUSER),
      .xt_rsc_0_5_BRESP(xt_rsc_0_5_BRESP),
      .xt_rsc_0_5_BID(xt_rsc_0_5_BID),
      .xt_rsc_0_5_WREADY(xt_rsc_0_5_WREADY),
      .xt_rsc_0_5_WVALID(xt_rsc_0_5_WVALID),
      .xt_rsc_0_5_WUSER(xt_rsc_0_5_WUSER),
      .xt_rsc_0_5_WLAST(xt_rsc_0_5_WLAST),
      .xt_rsc_0_5_WSTRB(xt_rsc_0_5_WSTRB),
      .xt_rsc_0_5_WDATA(xt_rsc_0_5_WDATA),
      .xt_rsc_0_5_AWREADY(xt_rsc_0_5_AWREADY),
      .xt_rsc_0_5_AWVALID(xt_rsc_0_5_AWVALID),
      .xt_rsc_0_5_AWUSER(xt_rsc_0_5_AWUSER),
      .xt_rsc_0_5_AWREGION(xt_rsc_0_5_AWREGION),
      .xt_rsc_0_5_AWQOS(xt_rsc_0_5_AWQOS),
      .xt_rsc_0_5_AWPROT(xt_rsc_0_5_AWPROT),
      .xt_rsc_0_5_AWCACHE(xt_rsc_0_5_AWCACHE),
      .xt_rsc_0_5_AWLOCK(xt_rsc_0_5_AWLOCK),
      .xt_rsc_0_5_AWBURST(xt_rsc_0_5_AWBURST),
      .xt_rsc_0_5_AWSIZE(xt_rsc_0_5_AWSIZE),
      .xt_rsc_0_5_AWLEN(xt_rsc_0_5_AWLEN),
      .xt_rsc_0_5_AWADDR(xt_rsc_0_5_AWADDR),
      .xt_rsc_0_5_AWID(xt_rsc_0_5_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_5_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_5_i_wen_comp(xt_rsc_0_5_i_wen_comp),
      .xt_rsc_0_5_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_0_5_i_wen_comp_1(xt_rsc_0_5_i_wen_comp_1),
      .xt_rsc_0_5_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_5_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_0_5_i_s_din_mxwt(xt_rsc_0_5_i_s_din_mxwt),
      .xt_rsc_0_5_i_s_dout_core(reg_xt_rsc_0_5_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_6_i peaseNTT_core_xt_rsc_0_6_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_6_s_tdone(xt_rsc_0_6_s_tdone),
      .xt_rsc_0_6_tr_write_done(xt_rsc_0_6_tr_write_done),
      .xt_rsc_0_6_RREADY(xt_rsc_0_6_RREADY),
      .xt_rsc_0_6_RVALID(xt_rsc_0_6_RVALID),
      .xt_rsc_0_6_RUSER(xt_rsc_0_6_RUSER),
      .xt_rsc_0_6_RLAST(xt_rsc_0_6_RLAST),
      .xt_rsc_0_6_RRESP(xt_rsc_0_6_RRESP),
      .xt_rsc_0_6_RDATA(xt_rsc_0_6_RDATA),
      .xt_rsc_0_6_RID(xt_rsc_0_6_RID),
      .xt_rsc_0_6_ARREADY(xt_rsc_0_6_ARREADY),
      .xt_rsc_0_6_ARVALID(xt_rsc_0_6_ARVALID),
      .xt_rsc_0_6_ARUSER(xt_rsc_0_6_ARUSER),
      .xt_rsc_0_6_ARREGION(xt_rsc_0_6_ARREGION),
      .xt_rsc_0_6_ARQOS(xt_rsc_0_6_ARQOS),
      .xt_rsc_0_6_ARPROT(xt_rsc_0_6_ARPROT),
      .xt_rsc_0_6_ARCACHE(xt_rsc_0_6_ARCACHE),
      .xt_rsc_0_6_ARLOCK(xt_rsc_0_6_ARLOCK),
      .xt_rsc_0_6_ARBURST(xt_rsc_0_6_ARBURST),
      .xt_rsc_0_6_ARSIZE(xt_rsc_0_6_ARSIZE),
      .xt_rsc_0_6_ARLEN(xt_rsc_0_6_ARLEN),
      .xt_rsc_0_6_ARADDR(xt_rsc_0_6_ARADDR),
      .xt_rsc_0_6_ARID(xt_rsc_0_6_ARID),
      .xt_rsc_0_6_BREADY(xt_rsc_0_6_BREADY),
      .xt_rsc_0_6_BVALID(xt_rsc_0_6_BVALID),
      .xt_rsc_0_6_BUSER(xt_rsc_0_6_BUSER),
      .xt_rsc_0_6_BRESP(xt_rsc_0_6_BRESP),
      .xt_rsc_0_6_BID(xt_rsc_0_6_BID),
      .xt_rsc_0_6_WREADY(xt_rsc_0_6_WREADY),
      .xt_rsc_0_6_WVALID(xt_rsc_0_6_WVALID),
      .xt_rsc_0_6_WUSER(xt_rsc_0_6_WUSER),
      .xt_rsc_0_6_WLAST(xt_rsc_0_6_WLAST),
      .xt_rsc_0_6_WSTRB(xt_rsc_0_6_WSTRB),
      .xt_rsc_0_6_WDATA(xt_rsc_0_6_WDATA),
      .xt_rsc_0_6_AWREADY(xt_rsc_0_6_AWREADY),
      .xt_rsc_0_6_AWVALID(xt_rsc_0_6_AWVALID),
      .xt_rsc_0_6_AWUSER(xt_rsc_0_6_AWUSER),
      .xt_rsc_0_6_AWREGION(xt_rsc_0_6_AWREGION),
      .xt_rsc_0_6_AWQOS(xt_rsc_0_6_AWQOS),
      .xt_rsc_0_6_AWPROT(xt_rsc_0_6_AWPROT),
      .xt_rsc_0_6_AWCACHE(xt_rsc_0_6_AWCACHE),
      .xt_rsc_0_6_AWLOCK(xt_rsc_0_6_AWLOCK),
      .xt_rsc_0_6_AWBURST(xt_rsc_0_6_AWBURST),
      .xt_rsc_0_6_AWSIZE(xt_rsc_0_6_AWSIZE),
      .xt_rsc_0_6_AWLEN(xt_rsc_0_6_AWLEN),
      .xt_rsc_0_6_AWADDR(xt_rsc_0_6_AWADDR),
      .xt_rsc_0_6_AWID(xt_rsc_0_6_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_6_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_6_i_wen_comp(xt_rsc_0_6_i_wen_comp),
      .xt_rsc_0_6_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_0_6_i_wen_comp_1(xt_rsc_0_6_i_wen_comp_1),
      .xt_rsc_0_6_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_6_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_0_6_i_s_din_mxwt(xt_rsc_0_6_i_s_din_mxwt),
      .xt_rsc_0_6_i_s_dout_core(reg_xt_rsc_0_6_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_7_i peaseNTT_core_xt_rsc_0_7_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_7_s_tdone(xt_rsc_0_7_s_tdone),
      .xt_rsc_0_7_tr_write_done(xt_rsc_0_7_tr_write_done),
      .xt_rsc_0_7_RREADY(xt_rsc_0_7_RREADY),
      .xt_rsc_0_7_RVALID(xt_rsc_0_7_RVALID),
      .xt_rsc_0_7_RUSER(xt_rsc_0_7_RUSER),
      .xt_rsc_0_7_RLAST(xt_rsc_0_7_RLAST),
      .xt_rsc_0_7_RRESP(xt_rsc_0_7_RRESP),
      .xt_rsc_0_7_RDATA(xt_rsc_0_7_RDATA),
      .xt_rsc_0_7_RID(xt_rsc_0_7_RID),
      .xt_rsc_0_7_ARREADY(xt_rsc_0_7_ARREADY),
      .xt_rsc_0_7_ARVALID(xt_rsc_0_7_ARVALID),
      .xt_rsc_0_7_ARUSER(xt_rsc_0_7_ARUSER),
      .xt_rsc_0_7_ARREGION(xt_rsc_0_7_ARREGION),
      .xt_rsc_0_7_ARQOS(xt_rsc_0_7_ARQOS),
      .xt_rsc_0_7_ARPROT(xt_rsc_0_7_ARPROT),
      .xt_rsc_0_7_ARCACHE(xt_rsc_0_7_ARCACHE),
      .xt_rsc_0_7_ARLOCK(xt_rsc_0_7_ARLOCK),
      .xt_rsc_0_7_ARBURST(xt_rsc_0_7_ARBURST),
      .xt_rsc_0_7_ARSIZE(xt_rsc_0_7_ARSIZE),
      .xt_rsc_0_7_ARLEN(xt_rsc_0_7_ARLEN),
      .xt_rsc_0_7_ARADDR(xt_rsc_0_7_ARADDR),
      .xt_rsc_0_7_ARID(xt_rsc_0_7_ARID),
      .xt_rsc_0_7_BREADY(xt_rsc_0_7_BREADY),
      .xt_rsc_0_7_BVALID(xt_rsc_0_7_BVALID),
      .xt_rsc_0_7_BUSER(xt_rsc_0_7_BUSER),
      .xt_rsc_0_7_BRESP(xt_rsc_0_7_BRESP),
      .xt_rsc_0_7_BID(xt_rsc_0_7_BID),
      .xt_rsc_0_7_WREADY(xt_rsc_0_7_WREADY),
      .xt_rsc_0_7_WVALID(xt_rsc_0_7_WVALID),
      .xt_rsc_0_7_WUSER(xt_rsc_0_7_WUSER),
      .xt_rsc_0_7_WLAST(xt_rsc_0_7_WLAST),
      .xt_rsc_0_7_WSTRB(xt_rsc_0_7_WSTRB),
      .xt_rsc_0_7_WDATA(xt_rsc_0_7_WDATA),
      .xt_rsc_0_7_AWREADY(xt_rsc_0_7_AWREADY),
      .xt_rsc_0_7_AWVALID(xt_rsc_0_7_AWVALID),
      .xt_rsc_0_7_AWUSER(xt_rsc_0_7_AWUSER),
      .xt_rsc_0_7_AWREGION(xt_rsc_0_7_AWREGION),
      .xt_rsc_0_7_AWQOS(xt_rsc_0_7_AWQOS),
      .xt_rsc_0_7_AWPROT(xt_rsc_0_7_AWPROT),
      .xt_rsc_0_7_AWCACHE(xt_rsc_0_7_AWCACHE),
      .xt_rsc_0_7_AWLOCK(xt_rsc_0_7_AWLOCK),
      .xt_rsc_0_7_AWBURST(xt_rsc_0_7_AWBURST),
      .xt_rsc_0_7_AWSIZE(xt_rsc_0_7_AWSIZE),
      .xt_rsc_0_7_AWLEN(xt_rsc_0_7_AWLEN),
      .xt_rsc_0_7_AWADDR(xt_rsc_0_7_AWADDR),
      .xt_rsc_0_7_AWID(xt_rsc_0_7_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_7_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_7_i_wen_comp(xt_rsc_0_7_i_wen_comp),
      .xt_rsc_0_7_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_0_7_i_wen_comp_1(xt_rsc_0_7_i_wen_comp_1),
      .xt_rsc_0_7_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_7_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_0_7_i_s_din_mxwt(xt_rsc_0_7_i_s_din_mxwt),
      .xt_rsc_0_7_i_s_dout_core(reg_xt_rsc_0_7_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_8_i peaseNTT_core_xt_rsc_0_8_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_8_s_tdone(xt_rsc_0_8_s_tdone),
      .xt_rsc_0_8_tr_write_done(xt_rsc_0_8_tr_write_done),
      .xt_rsc_0_8_RREADY(xt_rsc_0_8_RREADY),
      .xt_rsc_0_8_RVALID(xt_rsc_0_8_RVALID),
      .xt_rsc_0_8_RUSER(xt_rsc_0_8_RUSER),
      .xt_rsc_0_8_RLAST(xt_rsc_0_8_RLAST),
      .xt_rsc_0_8_RRESP(xt_rsc_0_8_RRESP),
      .xt_rsc_0_8_RDATA(xt_rsc_0_8_RDATA),
      .xt_rsc_0_8_RID(xt_rsc_0_8_RID),
      .xt_rsc_0_8_ARREADY(xt_rsc_0_8_ARREADY),
      .xt_rsc_0_8_ARVALID(xt_rsc_0_8_ARVALID),
      .xt_rsc_0_8_ARUSER(xt_rsc_0_8_ARUSER),
      .xt_rsc_0_8_ARREGION(xt_rsc_0_8_ARREGION),
      .xt_rsc_0_8_ARQOS(xt_rsc_0_8_ARQOS),
      .xt_rsc_0_8_ARPROT(xt_rsc_0_8_ARPROT),
      .xt_rsc_0_8_ARCACHE(xt_rsc_0_8_ARCACHE),
      .xt_rsc_0_8_ARLOCK(xt_rsc_0_8_ARLOCK),
      .xt_rsc_0_8_ARBURST(xt_rsc_0_8_ARBURST),
      .xt_rsc_0_8_ARSIZE(xt_rsc_0_8_ARSIZE),
      .xt_rsc_0_8_ARLEN(xt_rsc_0_8_ARLEN),
      .xt_rsc_0_8_ARADDR(xt_rsc_0_8_ARADDR),
      .xt_rsc_0_8_ARID(xt_rsc_0_8_ARID),
      .xt_rsc_0_8_BREADY(xt_rsc_0_8_BREADY),
      .xt_rsc_0_8_BVALID(xt_rsc_0_8_BVALID),
      .xt_rsc_0_8_BUSER(xt_rsc_0_8_BUSER),
      .xt_rsc_0_8_BRESP(xt_rsc_0_8_BRESP),
      .xt_rsc_0_8_BID(xt_rsc_0_8_BID),
      .xt_rsc_0_8_WREADY(xt_rsc_0_8_WREADY),
      .xt_rsc_0_8_WVALID(xt_rsc_0_8_WVALID),
      .xt_rsc_0_8_WUSER(xt_rsc_0_8_WUSER),
      .xt_rsc_0_8_WLAST(xt_rsc_0_8_WLAST),
      .xt_rsc_0_8_WSTRB(xt_rsc_0_8_WSTRB),
      .xt_rsc_0_8_WDATA(xt_rsc_0_8_WDATA),
      .xt_rsc_0_8_AWREADY(xt_rsc_0_8_AWREADY),
      .xt_rsc_0_8_AWVALID(xt_rsc_0_8_AWVALID),
      .xt_rsc_0_8_AWUSER(xt_rsc_0_8_AWUSER),
      .xt_rsc_0_8_AWREGION(xt_rsc_0_8_AWREGION),
      .xt_rsc_0_8_AWQOS(xt_rsc_0_8_AWQOS),
      .xt_rsc_0_8_AWPROT(xt_rsc_0_8_AWPROT),
      .xt_rsc_0_8_AWCACHE(xt_rsc_0_8_AWCACHE),
      .xt_rsc_0_8_AWLOCK(xt_rsc_0_8_AWLOCK),
      .xt_rsc_0_8_AWBURST(xt_rsc_0_8_AWBURST),
      .xt_rsc_0_8_AWSIZE(xt_rsc_0_8_AWSIZE),
      .xt_rsc_0_8_AWLEN(xt_rsc_0_8_AWLEN),
      .xt_rsc_0_8_AWADDR(xt_rsc_0_8_AWADDR),
      .xt_rsc_0_8_AWID(xt_rsc_0_8_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_8_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_8_i_wen_comp(xt_rsc_0_8_i_wen_comp),
      .xt_rsc_0_8_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_0_8_i_wen_comp_1(xt_rsc_0_8_i_wen_comp_1),
      .xt_rsc_0_8_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_8_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_0_8_i_s_din_mxwt(xt_rsc_0_8_i_s_din_mxwt),
      .xt_rsc_0_8_i_s_dout_core(reg_xt_rsc_0_8_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_9_i peaseNTT_core_xt_rsc_0_9_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_9_s_tdone(xt_rsc_0_9_s_tdone),
      .xt_rsc_0_9_tr_write_done(xt_rsc_0_9_tr_write_done),
      .xt_rsc_0_9_RREADY(xt_rsc_0_9_RREADY),
      .xt_rsc_0_9_RVALID(xt_rsc_0_9_RVALID),
      .xt_rsc_0_9_RUSER(xt_rsc_0_9_RUSER),
      .xt_rsc_0_9_RLAST(xt_rsc_0_9_RLAST),
      .xt_rsc_0_9_RRESP(xt_rsc_0_9_RRESP),
      .xt_rsc_0_9_RDATA(xt_rsc_0_9_RDATA),
      .xt_rsc_0_9_RID(xt_rsc_0_9_RID),
      .xt_rsc_0_9_ARREADY(xt_rsc_0_9_ARREADY),
      .xt_rsc_0_9_ARVALID(xt_rsc_0_9_ARVALID),
      .xt_rsc_0_9_ARUSER(xt_rsc_0_9_ARUSER),
      .xt_rsc_0_9_ARREGION(xt_rsc_0_9_ARREGION),
      .xt_rsc_0_9_ARQOS(xt_rsc_0_9_ARQOS),
      .xt_rsc_0_9_ARPROT(xt_rsc_0_9_ARPROT),
      .xt_rsc_0_9_ARCACHE(xt_rsc_0_9_ARCACHE),
      .xt_rsc_0_9_ARLOCK(xt_rsc_0_9_ARLOCK),
      .xt_rsc_0_9_ARBURST(xt_rsc_0_9_ARBURST),
      .xt_rsc_0_9_ARSIZE(xt_rsc_0_9_ARSIZE),
      .xt_rsc_0_9_ARLEN(xt_rsc_0_9_ARLEN),
      .xt_rsc_0_9_ARADDR(xt_rsc_0_9_ARADDR),
      .xt_rsc_0_9_ARID(xt_rsc_0_9_ARID),
      .xt_rsc_0_9_BREADY(xt_rsc_0_9_BREADY),
      .xt_rsc_0_9_BVALID(xt_rsc_0_9_BVALID),
      .xt_rsc_0_9_BUSER(xt_rsc_0_9_BUSER),
      .xt_rsc_0_9_BRESP(xt_rsc_0_9_BRESP),
      .xt_rsc_0_9_BID(xt_rsc_0_9_BID),
      .xt_rsc_0_9_WREADY(xt_rsc_0_9_WREADY),
      .xt_rsc_0_9_WVALID(xt_rsc_0_9_WVALID),
      .xt_rsc_0_9_WUSER(xt_rsc_0_9_WUSER),
      .xt_rsc_0_9_WLAST(xt_rsc_0_9_WLAST),
      .xt_rsc_0_9_WSTRB(xt_rsc_0_9_WSTRB),
      .xt_rsc_0_9_WDATA(xt_rsc_0_9_WDATA),
      .xt_rsc_0_9_AWREADY(xt_rsc_0_9_AWREADY),
      .xt_rsc_0_9_AWVALID(xt_rsc_0_9_AWVALID),
      .xt_rsc_0_9_AWUSER(xt_rsc_0_9_AWUSER),
      .xt_rsc_0_9_AWREGION(xt_rsc_0_9_AWREGION),
      .xt_rsc_0_9_AWQOS(xt_rsc_0_9_AWQOS),
      .xt_rsc_0_9_AWPROT(xt_rsc_0_9_AWPROT),
      .xt_rsc_0_9_AWCACHE(xt_rsc_0_9_AWCACHE),
      .xt_rsc_0_9_AWLOCK(xt_rsc_0_9_AWLOCK),
      .xt_rsc_0_9_AWBURST(xt_rsc_0_9_AWBURST),
      .xt_rsc_0_9_AWSIZE(xt_rsc_0_9_AWSIZE),
      .xt_rsc_0_9_AWLEN(xt_rsc_0_9_AWLEN),
      .xt_rsc_0_9_AWADDR(xt_rsc_0_9_AWADDR),
      .xt_rsc_0_9_AWID(xt_rsc_0_9_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_9_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_9_i_wen_comp(xt_rsc_0_9_i_wen_comp),
      .xt_rsc_0_9_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_0_9_i_wen_comp_1(xt_rsc_0_9_i_wen_comp_1),
      .xt_rsc_0_9_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_9_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_0_9_i_s_din_mxwt(xt_rsc_0_9_i_s_din_mxwt),
      .xt_rsc_0_9_i_s_dout_core(reg_xt_rsc_0_9_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_10_i peaseNTT_core_xt_rsc_0_10_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_10_s_tdone(xt_rsc_0_10_s_tdone),
      .xt_rsc_0_10_tr_write_done(xt_rsc_0_10_tr_write_done),
      .xt_rsc_0_10_RREADY(xt_rsc_0_10_RREADY),
      .xt_rsc_0_10_RVALID(xt_rsc_0_10_RVALID),
      .xt_rsc_0_10_RUSER(xt_rsc_0_10_RUSER),
      .xt_rsc_0_10_RLAST(xt_rsc_0_10_RLAST),
      .xt_rsc_0_10_RRESP(xt_rsc_0_10_RRESP),
      .xt_rsc_0_10_RDATA(xt_rsc_0_10_RDATA),
      .xt_rsc_0_10_RID(xt_rsc_0_10_RID),
      .xt_rsc_0_10_ARREADY(xt_rsc_0_10_ARREADY),
      .xt_rsc_0_10_ARVALID(xt_rsc_0_10_ARVALID),
      .xt_rsc_0_10_ARUSER(xt_rsc_0_10_ARUSER),
      .xt_rsc_0_10_ARREGION(xt_rsc_0_10_ARREGION),
      .xt_rsc_0_10_ARQOS(xt_rsc_0_10_ARQOS),
      .xt_rsc_0_10_ARPROT(xt_rsc_0_10_ARPROT),
      .xt_rsc_0_10_ARCACHE(xt_rsc_0_10_ARCACHE),
      .xt_rsc_0_10_ARLOCK(xt_rsc_0_10_ARLOCK),
      .xt_rsc_0_10_ARBURST(xt_rsc_0_10_ARBURST),
      .xt_rsc_0_10_ARSIZE(xt_rsc_0_10_ARSIZE),
      .xt_rsc_0_10_ARLEN(xt_rsc_0_10_ARLEN),
      .xt_rsc_0_10_ARADDR(xt_rsc_0_10_ARADDR),
      .xt_rsc_0_10_ARID(xt_rsc_0_10_ARID),
      .xt_rsc_0_10_BREADY(xt_rsc_0_10_BREADY),
      .xt_rsc_0_10_BVALID(xt_rsc_0_10_BVALID),
      .xt_rsc_0_10_BUSER(xt_rsc_0_10_BUSER),
      .xt_rsc_0_10_BRESP(xt_rsc_0_10_BRESP),
      .xt_rsc_0_10_BID(xt_rsc_0_10_BID),
      .xt_rsc_0_10_WREADY(xt_rsc_0_10_WREADY),
      .xt_rsc_0_10_WVALID(xt_rsc_0_10_WVALID),
      .xt_rsc_0_10_WUSER(xt_rsc_0_10_WUSER),
      .xt_rsc_0_10_WLAST(xt_rsc_0_10_WLAST),
      .xt_rsc_0_10_WSTRB(xt_rsc_0_10_WSTRB),
      .xt_rsc_0_10_WDATA(xt_rsc_0_10_WDATA),
      .xt_rsc_0_10_AWREADY(xt_rsc_0_10_AWREADY),
      .xt_rsc_0_10_AWVALID(xt_rsc_0_10_AWVALID),
      .xt_rsc_0_10_AWUSER(xt_rsc_0_10_AWUSER),
      .xt_rsc_0_10_AWREGION(xt_rsc_0_10_AWREGION),
      .xt_rsc_0_10_AWQOS(xt_rsc_0_10_AWQOS),
      .xt_rsc_0_10_AWPROT(xt_rsc_0_10_AWPROT),
      .xt_rsc_0_10_AWCACHE(xt_rsc_0_10_AWCACHE),
      .xt_rsc_0_10_AWLOCK(xt_rsc_0_10_AWLOCK),
      .xt_rsc_0_10_AWBURST(xt_rsc_0_10_AWBURST),
      .xt_rsc_0_10_AWSIZE(xt_rsc_0_10_AWSIZE),
      .xt_rsc_0_10_AWLEN(xt_rsc_0_10_AWLEN),
      .xt_rsc_0_10_AWADDR(xt_rsc_0_10_AWADDR),
      .xt_rsc_0_10_AWID(xt_rsc_0_10_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_10_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_10_i_wen_comp(xt_rsc_0_10_i_wen_comp),
      .xt_rsc_0_10_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_0_10_i_wen_comp_1(xt_rsc_0_10_i_wen_comp_1),
      .xt_rsc_0_10_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_10_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_0_10_i_s_din_mxwt(xt_rsc_0_10_i_s_din_mxwt),
      .xt_rsc_0_10_i_s_dout_core(reg_xt_rsc_0_10_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_11_i peaseNTT_core_xt_rsc_0_11_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_11_s_tdone(xt_rsc_0_11_s_tdone),
      .xt_rsc_0_11_tr_write_done(xt_rsc_0_11_tr_write_done),
      .xt_rsc_0_11_RREADY(xt_rsc_0_11_RREADY),
      .xt_rsc_0_11_RVALID(xt_rsc_0_11_RVALID),
      .xt_rsc_0_11_RUSER(xt_rsc_0_11_RUSER),
      .xt_rsc_0_11_RLAST(xt_rsc_0_11_RLAST),
      .xt_rsc_0_11_RRESP(xt_rsc_0_11_RRESP),
      .xt_rsc_0_11_RDATA(xt_rsc_0_11_RDATA),
      .xt_rsc_0_11_RID(xt_rsc_0_11_RID),
      .xt_rsc_0_11_ARREADY(xt_rsc_0_11_ARREADY),
      .xt_rsc_0_11_ARVALID(xt_rsc_0_11_ARVALID),
      .xt_rsc_0_11_ARUSER(xt_rsc_0_11_ARUSER),
      .xt_rsc_0_11_ARREGION(xt_rsc_0_11_ARREGION),
      .xt_rsc_0_11_ARQOS(xt_rsc_0_11_ARQOS),
      .xt_rsc_0_11_ARPROT(xt_rsc_0_11_ARPROT),
      .xt_rsc_0_11_ARCACHE(xt_rsc_0_11_ARCACHE),
      .xt_rsc_0_11_ARLOCK(xt_rsc_0_11_ARLOCK),
      .xt_rsc_0_11_ARBURST(xt_rsc_0_11_ARBURST),
      .xt_rsc_0_11_ARSIZE(xt_rsc_0_11_ARSIZE),
      .xt_rsc_0_11_ARLEN(xt_rsc_0_11_ARLEN),
      .xt_rsc_0_11_ARADDR(xt_rsc_0_11_ARADDR),
      .xt_rsc_0_11_ARID(xt_rsc_0_11_ARID),
      .xt_rsc_0_11_BREADY(xt_rsc_0_11_BREADY),
      .xt_rsc_0_11_BVALID(xt_rsc_0_11_BVALID),
      .xt_rsc_0_11_BUSER(xt_rsc_0_11_BUSER),
      .xt_rsc_0_11_BRESP(xt_rsc_0_11_BRESP),
      .xt_rsc_0_11_BID(xt_rsc_0_11_BID),
      .xt_rsc_0_11_WREADY(xt_rsc_0_11_WREADY),
      .xt_rsc_0_11_WVALID(xt_rsc_0_11_WVALID),
      .xt_rsc_0_11_WUSER(xt_rsc_0_11_WUSER),
      .xt_rsc_0_11_WLAST(xt_rsc_0_11_WLAST),
      .xt_rsc_0_11_WSTRB(xt_rsc_0_11_WSTRB),
      .xt_rsc_0_11_WDATA(xt_rsc_0_11_WDATA),
      .xt_rsc_0_11_AWREADY(xt_rsc_0_11_AWREADY),
      .xt_rsc_0_11_AWVALID(xt_rsc_0_11_AWVALID),
      .xt_rsc_0_11_AWUSER(xt_rsc_0_11_AWUSER),
      .xt_rsc_0_11_AWREGION(xt_rsc_0_11_AWREGION),
      .xt_rsc_0_11_AWQOS(xt_rsc_0_11_AWQOS),
      .xt_rsc_0_11_AWPROT(xt_rsc_0_11_AWPROT),
      .xt_rsc_0_11_AWCACHE(xt_rsc_0_11_AWCACHE),
      .xt_rsc_0_11_AWLOCK(xt_rsc_0_11_AWLOCK),
      .xt_rsc_0_11_AWBURST(xt_rsc_0_11_AWBURST),
      .xt_rsc_0_11_AWSIZE(xt_rsc_0_11_AWSIZE),
      .xt_rsc_0_11_AWLEN(xt_rsc_0_11_AWLEN),
      .xt_rsc_0_11_AWADDR(xt_rsc_0_11_AWADDR),
      .xt_rsc_0_11_AWID(xt_rsc_0_11_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_11_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_11_i_wen_comp(xt_rsc_0_11_i_wen_comp),
      .xt_rsc_0_11_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_0_11_i_wen_comp_1(xt_rsc_0_11_i_wen_comp_1),
      .xt_rsc_0_11_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_11_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_0_11_i_s_din_mxwt(xt_rsc_0_11_i_s_din_mxwt),
      .xt_rsc_0_11_i_s_dout_core(reg_xt_rsc_0_11_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_12_i peaseNTT_core_xt_rsc_0_12_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_12_s_tdone(xt_rsc_0_12_s_tdone),
      .xt_rsc_0_12_tr_write_done(xt_rsc_0_12_tr_write_done),
      .xt_rsc_0_12_RREADY(xt_rsc_0_12_RREADY),
      .xt_rsc_0_12_RVALID(xt_rsc_0_12_RVALID),
      .xt_rsc_0_12_RUSER(xt_rsc_0_12_RUSER),
      .xt_rsc_0_12_RLAST(xt_rsc_0_12_RLAST),
      .xt_rsc_0_12_RRESP(xt_rsc_0_12_RRESP),
      .xt_rsc_0_12_RDATA(xt_rsc_0_12_RDATA),
      .xt_rsc_0_12_RID(xt_rsc_0_12_RID),
      .xt_rsc_0_12_ARREADY(xt_rsc_0_12_ARREADY),
      .xt_rsc_0_12_ARVALID(xt_rsc_0_12_ARVALID),
      .xt_rsc_0_12_ARUSER(xt_rsc_0_12_ARUSER),
      .xt_rsc_0_12_ARREGION(xt_rsc_0_12_ARREGION),
      .xt_rsc_0_12_ARQOS(xt_rsc_0_12_ARQOS),
      .xt_rsc_0_12_ARPROT(xt_rsc_0_12_ARPROT),
      .xt_rsc_0_12_ARCACHE(xt_rsc_0_12_ARCACHE),
      .xt_rsc_0_12_ARLOCK(xt_rsc_0_12_ARLOCK),
      .xt_rsc_0_12_ARBURST(xt_rsc_0_12_ARBURST),
      .xt_rsc_0_12_ARSIZE(xt_rsc_0_12_ARSIZE),
      .xt_rsc_0_12_ARLEN(xt_rsc_0_12_ARLEN),
      .xt_rsc_0_12_ARADDR(xt_rsc_0_12_ARADDR),
      .xt_rsc_0_12_ARID(xt_rsc_0_12_ARID),
      .xt_rsc_0_12_BREADY(xt_rsc_0_12_BREADY),
      .xt_rsc_0_12_BVALID(xt_rsc_0_12_BVALID),
      .xt_rsc_0_12_BUSER(xt_rsc_0_12_BUSER),
      .xt_rsc_0_12_BRESP(xt_rsc_0_12_BRESP),
      .xt_rsc_0_12_BID(xt_rsc_0_12_BID),
      .xt_rsc_0_12_WREADY(xt_rsc_0_12_WREADY),
      .xt_rsc_0_12_WVALID(xt_rsc_0_12_WVALID),
      .xt_rsc_0_12_WUSER(xt_rsc_0_12_WUSER),
      .xt_rsc_0_12_WLAST(xt_rsc_0_12_WLAST),
      .xt_rsc_0_12_WSTRB(xt_rsc_0_12_WSTRB),
      .xt_rsc_0_12_WDATA(xt_rsc_0_12_WDATA),
      .xt_rsc_0_12_AWREADY(xt_rsc_0_12_AWREADY),
      .xt_rsc_0_12_AWVALID(xt_rsc_0_12_AWVALID),
      .xt_rsc_0_12_AWUSER(xt_rsc_0_12_AWUSER),
      .xt_rsc_0_12_AWREGION(xt_rsc_0_12_AWREGION),
      .xt_rsc_0_12_AWQOS(xt_rsc_0_12_AWQOS),
      .xt_rsc_0_12_AWPROT(xt_rsc_0_12_AWPROT),
      .xt_rsc_0_12_AWCACHE(xt_rsc_0_12_AWCACHE),
      .xt_rsc_0_12_AWLOCK(xt_rsc_0_12_AWLOCK),
      .xt_rsc_0_12_AWBURST(xt_rsc_0_12_AWBURST),
      .xt_rsc_0_12_AWSIZE(xt_rsc_0_12_AWSIZE),
      .xt_rsc_0_12_AWLEN(xt_rsc_0_12_AWLEN),
      .xt_rsc_0_12_AWADDR(xt_rsc_0_12_AWADDR),
      .xt_rsc_0_12_AWID(xt_rsc_0_12_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_12_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_12_i_wen_comp(xt_rsc_0_12_i_wen_comp),
      .xt_rsc_0_12_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_0_12_i_wen_comp_1(xt_rsc_0_12_i_wen_comp_1),
      .xt_rsc_0_12_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_12_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_0_12_i_s_din_mxwt(xt_rsc_0_12_i_s_din_mxwt),
      .xt_rsc_0_12_i_s_dout_core(reg_xt_rsc_0_12_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_13_i peaseNTT_core_xt_rsc_0_13_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_13_s_tdone(xt_rsc_0_13_s_tdone),
      .xt_rsc_0_13_tr_write_done(xt_rsc_0_13_tr_write_done),
      .xt_rsc_0_13_RREADY(xt_rsc_0_13_RREADY),
      .xt_rsc_0_13_RVALID(xt_rsc_0_13_RVALID),
      .xt_rsc_0_13_RUSER(xt_rsc_0_13_RUSER),
      .xt_rsc_0_13_RLAST(xt_rsc_0_13_RLAST),
      .xt_rsc_0_13_RRESP(xt_rsc_0_13_RRESP),
      .xt_rsc_0_13_RDATA(xt_rsc_0_13_RDATA),
      .xt_rsc_0_13_RID(xt_rsc_0_13_RID),
      .xt_rsc_0_13_ARREADY(xt_rsc_0_13_ARREADY),
      .xt_rsc_0_13_ARVALID(xt_rsc_0_13_ARVALID),
      .xt_rsc_0_13_ARUSER(xt_rsc_0_13_ARUSER),
      .xt_rsc_0_13_ARREGION(xt_rsc_0_13_ARREGION),
      .xt_rsc_0_13_ARQOS(xt_rsc_0_13_ARQOS),
      .xt_rsc_0_13_ARPROT(xt_rsc_0_13_ARPROT),
      .xt_rsc_0_13_ARCACHE(xt_rsc_0_13_ARCACHE),
      .xt_rsc_0_13_ARLOCK(xt_rsc_0_13_ARLOCK),
      .xt_rsc_0_13_ARBURST(xt_rsc_0_13_ARBURST),
      .xt_rsc_0_13_ARSIZE(xt_rsc_0_13_ARSIZE),
      .xt_rsc_0_13_ARLEN(xt_rsc_0_13_ARLEN),
      .xt_rsc_0_13_ARADDR(xt_rsc_0_13_ARADDR),
      .xt_rsc_0_13_ARID(xt_rsc_0_13_ARID),
      .xt_rsc_0_13_BREADY(xt_rsc_0_13_BREADY),
      .xt_rsc_0_13_BVALID(xt_rsc_0_13_BVALID),
      .xt_rsc_0_13_BUSER(xt_rsc_0_13_BUSER),
      .xt_rsc_0_13_BRESP(xt_rsc_0_13_BRESP),
      .xt_rsc_0_13_BID(xt_rsc_0_13_BID),
      .xt_rsc_0_13_WREADY(xt_rsc_0_13_WREADY),
      .xt_rsc_0_13_WVALID(xt_rsc_0_13_WVALID),
      .xt_rsc_0_13_WUSER(xt_rsc_0_13_WUSER),
      .xt_rsc_0_13_WLAST(xt_rsc_0_13_WLAST),
      .xt_rsc_0_13_WSTRB(xt_rsc_0_13_WSTRB),
      .xt_rsc_0_13_WDATA(xt_rsc_0_13_WDATA),
      .xt_rsc_0_13_AWREADY(xt_rsc_0_13_AWREADY),
      .xt_rsc_0_13_AWVALID(xt_rsc_0_13_AWVALID),
      .xt_rsc_0_13_AWUSER(xt_rsc_0_13_AWUSER),
      .xt_rsc_0_13_AWREGION(xt_rsc_0_13_AWREGION),
      .xt_rsc_0_13_AWQOS(xt_rsc_0_13_AWQOS),
      .xt_rsc_0_13_AWPROT(xt_rsc_0_13_AWPROT),
      .xt_rsc_0_13_AWCACHE(xt_rsc_0_13_AWCACHE),
      .xt_rsc_0_13_AWLOCK(xt_rsc_0_13_AWLOCK),
      .xt_rsc_0_13_AWBURST(xt_rsc_0_13_AWBURST),
      .xt_rsc_0_13_AWSIZE(xt_rsc_0_13_AWSIZE),
      .xt_rsc_0_13_AWLEN(xt_rsc_0_13_AWLEN),
      .xt_rsc_0_13_AWADDR(xt_rsc_0_13_AWADDR),
      .xt_rsc_0_13_AWID(xt_rsc_0_13_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_13_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_13_i_wen_comp(xt_rsc_0_13_i_wen_comp),
      .xt_rsc_0_13_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_0_13_i_wen_comp_1(xt_rsc_0_13_i_wen_comp_1),
      .xt_rsc_0_13_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_13_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_0_13_i_s_din_mxwt(xt_rsc_0_13_i_s_din_mxwt),
      .xt_rsc_0_13_i_s_dout_core(reg_xt_rsc_0_13_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_14_i peaseNTT_core_xt_rsc_0_14_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_14_s_tdone(xt_rsc_0_14_s_tdone),
      .xt_rsc_0_14_tr_write_done(xt_rsc_0_14_tr_write_done),
      .xt_rsc_0_14_RREADY(xt_rsc_0_14_RREADY),
      .xt_rsc_0_14_RVALID(xt_rsc_0_14_RVALID),
      .xt_rsc_0_14_RUSER(xt_rsc_0_14_RUSER),
      .xt_rsc_0_14_RLAST(xt_rsc_0_14_RLAST),
      .xt_rsc_0_14_RRESP(xt_rsc_0_14_RRESP),
      .xt_rsc_0_14_RDATA(xt_rsc_0_14_RDATA),
      .xt_rsc_0_14_RID(xt_rsc_0_14_RID),
      .xt_rsc_0_14_ARREADY(xt_rsc_0_14_ARREADY),
      .xt_rsc_0_14_ARVALID(xt_rsc_0_14_ARVALID),
      .xt_rsc_0_14_ARUSER(xt_rsc_0_14_ARUSER),
      .xt_rsc_0_14_ARREGION(xt_rsc_0_14_ARREGION),
      .xt_rsc_0_14_ARQOS(xt_rsc_0_14_ARQOS),
      .xt_rsc_0_14_ARPROT(xt_rsc_0_14_ARPROT),
      .xt_rsc_0_14_ARCACHE(xt_rsc_0_14_ARCACHE),
      .xt_rsc_0_14_ARLOCK(xt_rsc_0_14_ARLOCK),
      .xt_rsc_0_14_ARBURST(xt_rsc_0_14_ARBURST),
      .xt_rsc_0_14_ARSIZE(xt_rsc_0_14_ARSIZE),
      .xt_rsc_0_14_ARLEN(xt_rsc_0_14_ARLEN),
      .xt_rsc_0_14_ARADDR(xt_rsc_0_14_ARADDR),
      .xt_rsc_0_14_ARID(xt_rsc_0_14_ARID),
      .xt_rsc_0_14_BREADY(xt_rsc_0_14_BREADY),
      .xt_rsc_0_14_BVALID(xt_rsc_0_14_BVALID),
      .xt_rsc_0_14_BUSER(xt_rsc_0_14_BUSER),
      .xt_rsc_0_14_BRESP(xt_rsc_0_14_BRESP),
      .xt_rsc_0_14_BID(xt_rsc_0_14_BID),
      .xt_rsc_0_14_WREADY(xt_rsc_0_14_WREADY),
      .xt_rsc_0_14_WVALID(xt_rsc_0_14_WVALID),
      .xt_rsc_0_14_WUSER(xt_rsc_0_14_WUSER),
      .xt_rsc_0_14_WLAST(xt_rsc_0_14_WLAST),
      .xt_rsc_0_14_WSTRB(xt_rsc_0_14_WSTRB),
      .xt_rsc_0_14_WDATA(xt_rsc_0_14_WDATA),
      .xt_rsc_0_14_AWREADY(xt_rsc_0_14_AWREADY),
      .xt_rsc_0_14_AWVALID(xt_rsc_0_14_AWVALID),
      .xt_rsc_0_14_AWUSER(xt_rsc_0_14_AWUSER),
      .xt_rsc_0_14_AWREGION(xt_rsc_0_14_AWREGION),
      .xt_rsc_0_14_AWQOS(xt_rsc_0_14_AWQOS),
      .xt_rsc_0_14_AWPROT(xt_rsc_0_14_AWPROT),
      .xt_rsc_0_14_AWCACHE(xt_rsc_0_14_AWCACHE),
      .xt_rsc_0_14_AWLOCK(xt_rsc_0_14_AWLOCK),
      .xt_rsc_0_14_AWBURST(xt_rsc_0_14_AWBURST),
      .xt_rsc_0_14_AWSIZE(xt_rsc_0_14_AWSIZE),
      .xt_rsc_0_14_AWLEN(xt_rsc_0_14_AWLEN),
      .xt_rsc_0_14_AWADDR(xt_rsc_0_14_AWADDR),
      .xt_rsc_0_14_AWID(xt_rsc_0_14_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_14_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_14_i_wen_comp(xt_rsc_0_14_i_wen_comp),
      .xt_rsc_0_14_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_0_14_i_wen_comp_1(xt_rsc_0_14_i_wen_comp_1),
      .xt_rsc_0_14_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_14_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_0_14_i_s_din_mxwt(xt_rsc_0_14_i_s_din_mxwt),
      .xt_rsc_0_14_i_s_dout_core(reg_xt_rsc_0_14_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_15_i peaseNTT_core_xt_rsc_0_15_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_15_s_tdone(xt_rsc_0_15_s_tdone),
      .xt_rsc_0_15_tr_write_done(xt_rsc_0_15_tr_write_done),
      .xt_rsc_0_15_RREADY(xt_rsc_0_15_RREADY),
      .xt_rsc_0_15_RVALID(xt_rsc_0_15_RVALID),
      .xt_rsc_0_15_RUSER(xt_rsc_0_15_RUSER),
      .xt_rsc_0_15_RLAST(xt_rsc_0_15_RLAST),
      .xt_rsc_0_15_RRESP(xt_rsc_0_15_RRESP),
      .xt_rsc_0_15_RDATA(xt_rsc_0_15_RDATA),
      .xt_rsc_0_15_RID(xt_rsc_0_15_RID),
      .xt_rsc_0_15_ARREADY(xt_rsc_0_15_ARREADY),
      .xt_rsc_0_15_ARVALID(xt_rsc_0_15_ARVALID),
      .xt_rsc_0_15_ARUSER(xt_rsc_0_15_ARUSER),
      .xt_rsc_0_15_ARREGION(xt_rsc_0_15_ARREGION),
      .xt_rsc_0_15_ARQOS(xt_rsc_0_15_ARQOS),
      .xt_rsc_0_15_ARPROT(xt_rsc_0_15_ARPROT),
      .xt_rsc_0_15_ARCACHE(xt_rsc_0_15_ARCACHE),
      .xt_rsc_0_15_ARLOCK(xt_rsc_0_15_ARLOCK),
      .xt_rsc_0_15_ARBURST(xt_rsc_0_15_ARBURST),
      .xt_rsc_0_15_ARSIZE(xt_rsc_0_15_ARSIZE),
      .xt_rsc_0_15_ARLEN(xt_rsc_0_15_ARLEN),
      .xt_rsc_0_15_ARADDR(xt_rsc_0_15_ARADDR),
      .xt_rsc_0_15_ARID(xt_rsc_0_15_ARID),
      .xt_rsc_0_15_BREADY(xt_rsc_0_15_BREADY),
      .xt_rsc_0_15_BVALID(xt_rsc_0_15_BVALID),
      .xt_rsc_0_15_BUSER(xt_rsc_0_15_BUSER),
      .xt_rsc_0_15_BRESP(xt_rsc_0_15_BRESP),
      .xt_rsc_0_15_BID(xt_rsc_0_15_BID),
      .xt_rsc_0_15_WREADY(xt_rsc_0_15_WREADY),
      .xt_rsc_0_15_WVALID(xt_rsc_0_15_WVALID),
      .xt_rsc_0_15_WUSER(xt_rsc_0_15_WUSER),
      .xt_rsc_0_15_WLAST(xt_rsc_0_15_WLAST),
      .xt_rsc_0_15_WSTRB(xt_rsc_0_15_WSTRB),
      .xt_rsc_0_15_WDATA(xt_rsc_0_15_WDATA),
      .xt_rsc_0_15_AWREADY(xt_rsc_0_15_AWREADY),
      .xt_rsc_0_15_AWVALID(xt_rsc_0_15_AWVALID),
      .xt_rsc_0_15_AWUSER(xt_rsc_0_15_AWUSER),
      .xt_rsc_0_15_AWREGION(xt_rsc_0_15_AWREGION),
      .xt_rsc_0_15_AWQOS(xt_rsc_0_15_AWQOS),
      .xt_rsc_0_15_AWPROT(xt_rsc_0_15_AWPROT),
      .xt_rsc_0_15_AWCACHE(xt_rsc_0_15_AWCACHE),
      .xt_rsc_0_15_AWLOCK(xt_rsc_0_15_AWLOCK),
      .xt_rsc_0_15_AWBURST(xt_rsc_0_15_AWBURST),
      .xt_rsc_0_15_AWSIZE(xt_rsc_0_15_AWSIZE),
      .xt_rsc_0_15_AWLEN(xt_rsc_0_15_AWLEN),
      .xt_rsc_0_15_AWADDR(xt_rsc_0_15_AWADDR),
      .xt_rsc_0_15_AWID(xt_rsc_0_15_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_15_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_15_i_wen_comp(xt_rsc_0_15_i_wen_comp),
      .xt_rsc_0_15_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_0_15_i_wen_comp_1(xt_rsc_0_15_i_wen_comp_1),
      .xt_rsc_0_15_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_15_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_0_15_i_s_din_mxwt(xt_rsc_0_15_i_s_din_mxwt),
      .xt_rsc_0_15_i_s_dout_core(reg_xt_rsc_0_15_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_16_i peaseNTT_core_xt_rsc_0_16_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_16_s_tdone(xt_rsc_0_16_s_tdone),
      .xt_rsc_0_16_tr_write_done(xt_rsc_0_16_tr_write_done),
      .xt_rsc_0_16_RREADY(xt_rsc_0_16_RREADY),
      .xt_rsc_0_16_RVALID(xt_rsc_0_16_RVALID),
      .xt_rsc_0_16_RUSER(xt_rsc_0_16_RUSER),
      .xt_rsc_0_16_RLAST(xt_rsc_0_16_RLAST),
      .xt_rsc_0_16_RRESP(xt_rsc_0_16_RRESP),
      .xt_rsc_0_16_RDATA(xt_rsc_0_16_RDATA),
      .xt_rsc_0_16_RID(xt_rsc_0_16_RID),
      .xt_rsc_0_16_ARREADY(xt_rsc_0_16_ARREADY),
      .xt_rsc_0_16_ARVALID(xt_rsc_0_16_ARVALID),
      .xt_rsc_0_16_ARUSER(xt_rsc_0_16_ARUSER),
      .xt_rsc_0_16_ARREGION(xt_rsc_0_16_ARREGION),
      .xt_rsc_0_16_ARQOS(xt_rsc_0_16_ARQOS),
      .xt_rsc_0_16_ARPROT(xt_rsc_0_16_ARPROT),
      .xt_rsc_0_16_ARCACHE(xt_rsc_0_16_ARCACHE),
      .xt_rsc_0_16_ARLOCK(xt_rsc_0_16_ARLOCK),
      .xt_rsc_0_16_ARBURST(xt_rsc_0_16_ARBURST),
      .xt_rsc_0_16_ARSIZE(xt_rsc_0_16_ARSIZE),
      .xt_rsc_0_16_ARLEN(xt_rsc_0_16_ARLEN),
      .xt_rsc_0_16_ARADDR(xt_rsc_0_16_ARADDR),
      .xt_rsc_0_16_ARID(xt_rsc_0_16_ARID),
      .xt_rsc_0_16_BREADY(xt_rsc_0_16_BREADY),
      .xt_rsc_0_16_BVALID(xt_rsc_0_16_BVALID),
      .xt_rsc_0_16_BUSER(xt_rsc_0_16_BUSER),
      .xt_rsc_0_16_BRESP(xt_rsc_0_16_BRESP),
      .xt_rsc_0_16_BID(xt_rsc_0_16_BID),
      .xt_rsc_0_16_WREADY(xt_rsc_0_16_WREADY),
      .xt_rsc_0_16_WVALID(xt_rsc_0_16_WVALID),
      .xt_rsc_0_16_WUSER(xt_rsc_0_16_WUSER),
      .xt_rsc_0_16_WLAST(xt_rsc_0_16_WLAST),
      .xt_rsc_0_16_WSTRB(xt_rsc_0_16_WSTRB),
      .xt_rsc_0_16_WDATA(xt_rsc_0_16_WDATA),
      .xt_rsc_0_16_AWREADY(xt_rsc_0_16_AWREADY),
      .xt_rsc_0_16_AWVALID(xt_rsc_0_16_AWVALID),
      .xt_rsc_0_16_AWUSER(xt_rsc_0_16_AWUSER),
      .xt_rsc_0_16_AWREGION(xt_rsc_0_16_AWREGION),
      .xt_rsc_0_16_AWQOS(xt_rsc_0_16_AWQOS),
      .xt_rsc_0_16_AWPROT(xt_rsc_0_16_AWPROT),
      .xt_rsc_0_16_AWCACHE(xt_rsc_0_16_AWCACHE),
      .xt_rsc_0_16_AWLOCK(xt_rsc_0_16_AWLOCK),
      .xt_rsc_0_16_AWBURST(xt_rsc_0_16_AWBURST),
      .xt_rsc_0_16_AWSIZE(xt_rsc_0_16_AWSIZE),
      .xt_rsc_0_16_AWLEN(xt_rsc_0_16_AWLEN),
      .xt_rsc_0_16_AWADDR(xt_rsc_0_16_AWADDR),
      .xt_rsc_0_16_AWID(xt_rsc_0_16_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_16_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_16_i_wen_comp(xt_rsc_0_16_i_wen_comp),
      .xt_rsc_0_16_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_0_16_i_wen_comp_1(xt_rsc_0_16_i_wen_comp_1),
      .xt_rsc_0_16_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_16_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_0_16_i_s_din_mxwt(xt_rsc_0_16_i_s_din_mxwt),
      .xt_rsc_0_16_i_s_dout_core(reg_xt_rsc_0_0_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_17_i peaseNTT_core_xt_rsc_0_17_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_17_s_tdone(xt_rsc_0_17_s_tdone),
      .xt_rsc_0_17_tr_write_done(xt_rsc_0_17_tr_write_done),
      .xt_rsc_0_17_RREADY(xt_rsc_0_17_RREADY),
      .xt_rsc_0_17_RVALID(xt_rsc_0_17_RVALID),
      .xt_rsc_0_17_RUSER(xt_rsc_0_17_RUSER),
      .xt_rsc_0_17_RLAST(xt_rsc_0_17_RLAST),
      .xt_rsc_0_17_RRESP(xt_rsc_0_17_RRESP),
      .xt_rsc_0_17_RDATA(xt_rsc_0_17_RDATA),
      .xt_rsc_0_17_RID(xt_rsc_0_17_RID),
      .xt_rsc_0_17_ARREADY(xt_rsc_0_17_ARREADY),
      .xt_rsc_0_17_ARVALID(xt_rsc_0_17_ARVALID),
      .xt_rsc_0_17_ARUSER(xt_rsc_0_17_ARUSER),
      .xt_rsc_0_17_ARREGION(xt_rsc_0_17_ARREGION),
      .xt_rsc_0_17_ARQOS(xt_rsc_0_17_ARQOS),
      .xt_rsc_0_17_ARPROT(xt_rsc_0_17_ARPROT),
      .xt_rsc_0_17_ARCACHE(xt_rsc_0_17_ARCACHE),
      .xt_rsc_0_17_ARLOCK(xt_rsc_0_17_ARLOCK),
      .xt_rsc_0_17_ARBURST(xt_rsc_0_17_ARBURST),
      .xt_rsc_0_17_ARSIZE(xt_rsc_0_17_ARSIZE),
      .xt_rsc_0_17_ARLEN(xt_rsc_0_17_ARLEN),
      .xt_rsc_0_17_ARADDR(xt_rsc_0_17_ARADDR),
      .xt_rsc_0_17_ARID(xt_rsc_0_17_ARID),
      .xt_rsc_0_17_BREADY(xt_rsc_0_17_BREADY),
      .xt_rsc_0_17_BVALID(xt_rsc_0_17_BVALID),
      .xt_rsc_0_17_BUSER(xt_rsc_0_17_BUSER),
      .xt_rsc_0_17_BRESP(xt_rsc_0_17_BRESP),
      .xt_rsc_0_17_BID(xt_rsc_0_17_BID),
      .xt_rsc_0_17_WREADY(xt_rsc_0_17_WREADY),
      .xt_rsc_0_17_WVALID(xt_rsc_0_17_WVALID),
      .xt_rsc_0_17_WUSER(xt_rsc_0_17_WUSER),
      .xt_rsc_0_17_WLAST(xt_rsc_0_17_WLAST),
      .xt_rsc_0_17_WSTRB(xt_rsc_0_17_WSTRB),
      .xt_rsc_0_17_WDATA(xt_rsc_0_17_WDATA),
      .xt_rsc_0_17_AWREADY(xt_rsc_0_17_AWREADY),
      .xt_rsc_0_17_AWVALID(xt_rsc_0_17_AWVALID),
      .xt_rsc_0_17_AWUSER(xt_rsc_0_17_AWUSER),
      .xt_rsc_0_17_AWREGION(xt_rsc_0_17_AWREGION),
      .xt_rsc_0_17_AWQOS(xt_rsc_0_17_AWQOS),
      .xt_rsc_0_17_AWPROT(xt_rsc_0_17_AWPROT),
      .xt_rsc_0_17_AWCACHE(xt_rsc_0_17_AWCACHE),
      .xt_rsc_0_17_AWLOCK(xt_rsc_0_17_AWLOCK),
      .xt_rsc_0_17_AWBURST(xt_rsc_0_17_AWBURST),
      .xt_rsc_0_17_AWSIZE(xt_rsc_0_17_AWSIZE),
      .xt_rsc_0_17_AWLEN(xt_rsc_0_17_AWLEN),
      .xt_rsc_0_17_AWADDR(xt_rsc_0_17_AWADDR),
      .xt_rsc_0_17_AWID(xt_rsc_0_17_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_17_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_17_i_wen_comp(xt_rsc_0_17_i_wen_comp),
      .xt_rsc_0_17_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_0_17_i_wen_comp_1(xt_rsc_0_17_i_wen_comp_1),
      .xt_rsc_0_17_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_17_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_0_17_i_s_din_mxwt(xt_rsc_0_17_i_s_din_mxwt),
      .xt_rsc_0_17_i_s_dout_core(reg_xt_rsc_0_1_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_18_i peaseNTT_core_xt_rsc_0_18_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_18_s_tdone(xt_rsc_0_18_s_tdone),
      .xt_rsc_0_18_tr_write_done(xt_rsc_0_18_tr_write_done),
      .xt_rsc_0_18_RREADY(xt_rsc_0_18_RREADY),
      .xt_rsc_0_18_RVALID(xt_rsc_0_18_RVALID),
      .xt_rsc_0_18_RUSER(xt_rsc_0_18_RUSER),
      .xt_rsc_0_18_RLAST(xt_rsc_0_18_RLAST),
      .xt_rsc_0_18_RRESP(xt_rsc_0_18_RRESP),
      .xt_rsc_0_18_RDATA(xt_rsc_0_18_RDATA),
      .xt_rsc_0_18_RID(xt_rsc_0_18_RID),
      .xt_rsc_0_18_ARREADY(xt_rsc_0_18_ARREADY),
      .xt_rsc_0_18_ARVALID(xt_rsc_0_18_ARVALID),
      .xt_rsc_0_18_ARUSER(xt_rsc_0_18_ARUSER),
      .xt_rsc_0_18_ARREGION(xt_rsc_0_18_ARREGION),
      .xt_rsc_0_18_ARQOS(xt_rsc_0_18_ARQOS),
      .xt_rsc_0_18_ARPROT(xt_rsc_0_18_ARPROT),
      .xt_rsc_0_18_ARCACHE(xt_rsc_0_18_ARCACHE),
      .xt_rsc_0_18_ARLOCK(xt_rsc_0_18_ARLOCK),
      .xt_rsc_0_18_ARBURST(xt_rsc_0_18_ARBURST),
      .xt_rsc_0_18_ARSIZE(xt_rsc_0_18_ARSIZE),
      .xt_rsc_0_18_ARLEN(xt_rsc_0_18_ARLEN),
      .xt_rsc_0_18_ARADDR(xt_rsc_0_18_ARADDR),
      .xt_rsc_0_18_ARID(xt_rsc_0_18_ARID),
      .xt_rsc_0_18_BREADY(xt_rsc_0_18_BREADY),
      .xt_rsc_0_18_BVALID(xt_rsc_0_18_BVALID),
      .xt_rsc_0_18_BUSER(xt_rsc_0_18_BUSER),
      .xt_rsc_0_18_BRESP(xt_rsc_0_18_BRESP),
      .xt_rsc_0_18_BID(xt_rsc_0_18_BID),
      .xt_rsc_0_18_WREADY(xt_rsc_0_18_WREADY),
      .xt_rsc_0_18_WVALID(xt_rsc_0_18_WVALID),
      .xt_rsc_0_18_WUSER(xt_rsc_0_18_WUSER),
      .xt_rsc_0_18_WLAST(xt_rsc_0_18_WLAST),
      .xt_rsc_0_18_WSTRB(xt_rsc_0_18_WSTRB),
      .xt_rsc_0_18_WDATA(xt_rsc_0_18_WDATA),
      .xt_rsc_0_18_AWREADY(xt_rsc_0_18_AWREADY),
      .xt_rsc_0_18_AWVALID(xt_rsc_0_18_AWVALID),
      .xt_rsc_0_18_AWUSER(xt_rsc_0_18_AWUSER),
      .xt_rsc_0_18_AWREGION(xt_rsc_0_18_AWREGION),
      .xt_rsc_0_18_AWQOS(xt_rsc_0_18_AWQOS),
      .xt_rsc_0_18_AWPROT(xt_rsc_0_18_AWPROT),
      .xt_rsc_0_18_AWCACHE(xt_rsc_0_18_AWCACHE),
      .xt_rsc_0_18_AWLOCK(xt_rsc_0_18_AWLOCK),
      .xt_rsc_0_18_AWBURST(xt_rsc_0_18_AWBURST),
      .xt_rsc_0_18_AWSIZE(xt_rsc_0_18_AWSIZE),
      .xt_rsc_0_18_AWLEN(xt_rsc_0_18_AWLEN),
      .xt_rsc_0_18_AWADDR(xt_rsc_0_18_AWADDR),
      .xt_rsc_0_18_AWID(xt_rsc_0_18_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_18_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_18_i_wen_comp(xt_rsc_0_18_i_wen_comp),
      .xt_rsc_0_18_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_0_18_i_wen_comp_1(xt_rsc_0_18_i_wen_comp_1),
      .xt_rsc_0_18_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_18_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_0_18_i_s_din_mxwt(xt_rsc_0_18_i_s_din_mxwt),
      .xt_rsc_0_18_i_s_dout_core(reg_xt_rsc_0_2_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_19_i peaseNTT_core_xt_rsc_0_19_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_19_s_tdone(xt_rsc_0_19_s_tdone),
      .xt_rsc_0_19_tr_write_done(xt_rsc_0_19_tr_write_done),
      .xt_rsc_0_19_RREADY(xt_rsc_0_19_RREADY),
      .xt_rsc_0_19_RVALID(xt_rsc_0_19_RVALID),
      .xt_rsc_0_19_RUSER(xt_rsc_0_19_RUSER),
      .xt_rsc_0_19_RLAST(xt_rsc_0_19_RLAST),
      .xt_rsc_0_19_RRESP(xt_rsc_0_19_RRESP),
      .xt_rsc_0_19_RDATA(xt_rsc_0_19_RDATA),
      .xt_rsc_0_19_RID(xt_rsc_0_19_RID),
      .xt_rsc_0_19_ARREADY(xt_rsc_0_19_ARREADY),
      .xt_rsc_0_19_ARVALID(xt_rsc_0_19_ARVALID),
      .xt_rsc_0_19_ARUSER(xt_rsc_0_19_ARUSER),
      .xt_rsc_0_19_ARREGION(xt_rsc_0_19_ARREGION),
      .xt_rsc_0_19_ARQOS(xt_rsc_0_19_ARQOS),
      .xt_rsc_0_19_ARPROT(xt_rsc_0_19_ARPROT),
      .xt_rsc_0_19_ARCACHE(xt_rsc_0_19_ARCACHE),
      .xt_rsc_0_19_ARLOCK(xt_rsc_0_19_ARLOCK),
      .xt_rsc_0_19_ARBURST(xt_rsc_0_19_ARBURST),
      .xt_rsc_0_19_ARSIZE(xt_rsc_0_19_ARSIZE),
      .xt_rsc_0_19_ARLEN(xt_rsc_0_19_ARLEN),
      .xt_rsc_0_19_ARADDR(xt_rsc_0_19_ARADDR),
      .xt_rsc_0_19_ARID(xt_rsc_0_19_ARID),
      .xt_rsc_0_19_BREADY(xt_rsc_0_19_BREADY),
      .xt_rsc_0_19_BVALID(xt_rsc_0_19_BVALID),
      .xt_rsc_0_19_BUSER(xt_rsc_0_19_BUSER),
      .xt_rsc_0_19_BRESP(xt_rsc_0_19_BRESP),
      .xt_rsc_0_19_BID(xt_rsc_0_19_BID),
      .xt_rsc_0_19_WREADY(xt_rsc_0_19_WREADY),
      .xt_rsc_0_19_WVALID(xt_rsc_0_19_WVALID),
      .xt_rsc_0_19_WUSER(xt_rsc_0_19_WUSER),
      .xt_rsc_0_19_WLAST(xt_rsc_0_19_WLAST),
      .xt_rsc_0_19_WSTRB(xt_rsc_0_19_WSTRB),
      .xt_rsc_0_19_WDATA(xt_rsc_0_19_WDATA),
      .xt_rsc_0_19_AWREADY(xt_rsc_0_19_AWREADY),
      .xt_rsc_0_19_AWVALID(xt_rsc_0_19_AWVALID),
      .xt_rsc_0_19_AWUSER(xt_rsc_0_19_AWUSER),
      .xt_rsc_0_19_AWREGION(xt_rsc_0_19_AWREGION),
      .xt_rsc_0_19_AWQOS(xt_rsc_0_19_AWQOS),
      .xt_rsc_0_19_AWPROT(xt_rsc_0_19_AWPROT),
      .xt_rsc_0_19_AWCACHE(xt_rsc_0_19_AWCACHE),
      .xt_rsc_0_19_AWLOCK(xt_rsc_0_19_AWLOCK),
      .xt_rsc_0_19_AWBURST(xt_rsc_0_19_AWBURST),
      .xt_rsc_0_19_AWSIZE(xt_rsc_0_19_AWSIZE),
      .xt_rsc_0_19_AWLEN(xt_rsc_0_19_AWLEN),
      .xt_rsc_0_19_AWADDR(xt_rsc_0_19_AWADDR),
      .xt_rsc_0_19_AWID(xt_rsc_0_19_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_19_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_19_i_wen_comp(xt_rsc_0_19_i_wen_comp),
      .xt_rsc_0_19_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_0_19_i_wen_comp_1(xt_rsc_0_19_i_wen_comp_1),
      .xt_rsc_0_19_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_19_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_0_19_i_s_din_mxwt(xt_rsc_0_19_i_s_din_mxwt),
      .xt_rsc_0_19_i_s_dout_core(reg_xt_rsc_0_3_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_20_i peaseNTT_core_xt_rsc_0_20_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_20_s_tdone(xt_rsc_0_20_s_tdone),
      .xt_rsc_0_20_tr_write_done(xt_rsc_0_20_tr_write_done),
      .xt_rsc_0_20_RREADY(xt_rsc_0_20_RREADY),
      .xt_rsc_0_20_RVALID(xt_rsc_0_20_RVALID),
      .xt_rsc_0_20_RUSER(xt_rsc_0_20_RUSER),
      .xt_rsc_0_20_RLAST(xt_rsc_0_20_RLAST),
      .xt_rsc_0_20_RRESP(xt_rsc_0_20_RRESP),
      .xt_rsc_0_20_RDATA(xt_rsc_0_20_RDATA),
      .xt_rsc_0_20_RID(xt_rsc_0_20_RID),
      .xt_rsc_0_20_ARREADY(xt_rsc_0_20_ARREADY),
      .xt_rsc_0_20_ARVALID(xt_rsc_0_20_ARVALID),
      .xt_rsc_0_20_ARUSER(xt_rsc_0_20_ARUSER),
      .xt_rsc_0_20_ARREGION(xt_rsc_0_20_ARREGION),
      .xt_rsc_0_20_ARQOS(xt_rsc_0_20_ARQOS),
      .xt_rsc_0_20_ARPROT(xt_rsc_0_20_ARPROT),
      .xt_rsc_0_20_ARCACHE(xt_rsc_0_20_ARCACHE),
      .xt_rsc_0_20_ARLOCK(xt_rsc_0_20_ARLOCK),
      .xt_rsc_0_20_ARBURST(xt_rsc_0_20_ARBURST),
      .xt_rsc_0_20_ARSIZE(xt_rsc_0_20_ARSIZE),
      .xt_rsc_0_20_ARLEN(xt_rsc_0_20_ARLEN),
      .xt_rsc_0_20_ARADDR(xt_rsc_0_20_ARADDR),
      .xt_rsc_0_20_ARID(xt_rsc_0_20_ARID),
      .xt_rsc_0_20_BREADY(xt_rsc_0_20_BREADY),
      .xt_rsc_0_20_BVALID(xt_rsc_0_20_BVALID),
      .xt_rsc_0_20_BUSER(xt_rsc_0_20_BUSER),
      .xt_rsc_0_20_BRESP(xt_rsc_0_20_BRESP),
      .xt_rsc_0_20_BID(xt_rsc_0_20_BID),
      .xt_rsc_0_20_WREADY(xt_rsc_0_20_WREADY),
      .xt_rsc_0_20_WVALID(xt_rsc_0_20_WVALID),
      .xt_rsc_0_20_WUSER(xt_rsc_0_20_WUSER),
      .xt_rsc_0_20_WLAST(xt_rsc_0_20_WLAST),
      .xt_rsc_0_20_WSTRB(xt_rsc_0_20_WSTRB),
      .xt_rsc_0_20_WDATA(xt_rsc_0_20_WDATA),
      .xt_rsc_0_20_AWREADY(xt_rsc_0_20_AWREADY),
      .xt_rsc_0_20_AWVALID(xt_rsc_0_20_AWVALID),
      .xt_rsc_0_20_AWUSER(xt_rsc_0_20_AWUSER),
      .xt_rsc_0_20_AWREGION(xt_rsc_0_20_AWREGION),
      .xt_rsc_0_20_AWQOS(xt_rsc_0_20_AWQOS),
      .xt_rsc_0_20_AWPROT(xt_rsc_0_20_AWPROT),
      .xt_rsc_0_20_AWCACHE(xt_rsc_0_20_AWCACHE),
      .xt_rsc_0_20_AWLOCK(xt_rsc_0_20_AWLOCK),
      .xt_rsc_0_20_AWBURST(xt_rsc_0_20_AWBURST),
      .xt_rsc_0_20_AWSIZE(xt_rsc_0_20_AWSIZE),
      .xt_rsc_0_20_AWLEN(xt_rsc_0_20_AWLEN),
      .xt_rsc_0_20_AWADDR(xt_rsc_0_20_AWADDR),
      .xt_rsc_0_20_AWID(xt_rsc_0_20_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_20_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_20_i_wen_comp(xt_rsc_0_20_i_wen_comp),
      .xt_rsc_0_20_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_0_20_i_wen_comp_1(xt_rsc_0_20_i_wen_comp_1),
      .xt_rsc_0_20_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_20_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_0_20_i_s_din_mxwt(xt_rsc_0_20_i_s_din_mxwt),
      .xt_rsc_0_20_i_s_dout_core(reg_xt_rsc_0_4_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_21_i peaseNTT_core_xt_rsc_0_21_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_21_s_tdone(xt_rsc_0_21_s_tdone),
      .xt_rsc_0_21_tr_write_done(xt_rsc_0_21_tr_write_done),
      .xt_rsc_0_21_RREADY(xt_rsc_0_21_RREADY),
      .xt_rsc_0_21_RVALID(xt_rsc_0_21_RVALID),
      .xt_rsc_0_21_RUSER(xt_rsc_0_21_RUSER),
      .xt_rsc_0_21_RLAST(xt_rsc_0_21_RLAST),
      .xt_rsc_0_21_RRESP(xt_rsc_0_21_RRESP),
      .xt_rsc_0_21_RDATA(xt_rsc_0_21_RDATA),
      .xt_rsc_0_21_RID(xt_rsc_0_21_RID),
      .xt_rsc_0_21_ARREADY(xt_rsc_0_21_ARREADY),
      .xt_rsc_0_21_ARVALID(xt_rsc_0_21_ARVALID),
      .xt_rsc_0_21_ARUSER(xt_rsc_0_21_ARUSER),
      .xt_rsc_0_21_ARREGION(xt_rsc_0_21_ARREGION),
      .xt_rsc_0_21_ARQOS(xt_rsc_0_21_ARQOS),
      .xt_rsc_0_21_ARPROT(xt_rsc_0_21_ARPROT),
      .xt_rsc_0_21_ARCACHE(xt_rsc_0_21_ARCACHE),
      .xt_rsc_0_21_ARLOCK(xt_rsc_0_21_ARLOCK),
      .xt_rsc_0_21_ARBURST(xt_rsc_0_21_ARBURST),
      .xt_rsc_0_21_ARSIZE(xt_rsc_0_21_ARSIZE),
      .xt_rsc_0_21_ARLEN(xt_rsc_0_21_ARLEN),
      .xt_rsc_0_21_ARADDR(xt_rsc_0_21_ARADDR),
      .xt_rsc_0_21_ARID(xt_rsc_0_21_ARID),
      .xt_rsc_0_21_BREADY(xt_rsc_0_21_BREADY),
      .xt_rsc_0_21_BVALID(xt_rsc_0_21_BVALID),
      .xt_rsc_0_21_BUSER(xt_rsc_0_21_BUSER),
      .xt_rsc_0_21_BRESP(xt_rsc_0_21_BRESP),
      .xt_rsc_0_21_BID(xt_rsc_0_21_BID),
      .xt_rsc_0_21_WREADY(xt_rsc_0_21_WREADY),
      .xt_rsc_0_21_WVALID(xt_rsc_0_21_WVALID),
      .xt_rsc_0_21_WUSER(xt_rsc_0_21_WUSER),
      .xt_rsc_0_21_WLAST(xt_rsc_0_21_WLAST),
      .xt_rsc_0_21_WSTRB(xt_rsc_0_21_WSTRB),
      .xt_rsc_0_21_WDATA(xt_rsc_0_21_WDATA),
      .xt_rsc_0_21_AWREADY(xt_rsc_0_21_AWREADY),
      .xt_rsc_0_21_AWVALID(xt_rsc_0_21_AWVALID),
      .xt_rsc_0_21_AWUSER(xt_rsc_0_21_AWUSER),
      .xt_rsc_0_21_AWREGION(xt_rsc_0_21_AWREGION),
      .xt_rsc_0_21_AWQOS(xt_rsc_0_21_AWQOS),
      .xt_rsc_0_21_AWPROT(xt_rsc_0_21_AWPROT),
      .xt_rsc_0_21_AWCACHE(xt_rsc_0_21_AWCACHE),
      .xt_rsc_0_21_AWLOCK(xt_rsc_0_21_AWLOCK),
      .xt_rsc_0_21_AWBURST(xt_rsc_0_21_AWBURST),
      .xt_rsc_0_21_AWSIZE(xt_rsc_0_21_AWSIZE),
      .xt_rsc_0_21_AWLEN(xt_rsc_0_21_AWLEN),
      .xt_rsc_0_21_AWADDR(xt_rsc_0_21_AWADDR),
      .xt_rsc_0_21_AWID(xt_rsc_0_21_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_21_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_21_i_wen_comp(xt_rsc_0_21_i_wen_comp),
      .xt_rsc_0_21_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_0_21_i_wen_comp_1(xt_rsc_0_21_i_wen_comp_1),
      .xt_rsc_0_21_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_21_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_0_21_i_s_din_mxwt(xt_rsc_0_21_i_s_din_mxwt),
      .xt_rsc_0_21_i_s_dout_core(reg_xt_rsc_0_5_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_22_i peaseNTT_core_xt_rsc_0_22_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_22_s_tdone(xt_rsc_0_22_s_tdone),
      .xt_rsc_0_22_tr_write_done(xt_rsc_0_22_tr_write_done),
      .xt_rsc_0_22_RREADY(xt_rsc_0_22_RREADY),
      .xt_rsc_0_22_RVALID(xt_rsc_0_22_RVALID),
      .xt_rsc_0_22_RUSER(xt_rsc_0_22_RUSER),
      .xt_rsc_0_22_RLAST(xt_rsc_0_22_RLAST),
      .xt_rsc_0_22_RRESP(xt_rsc_0_22_RRESP),
      .xt_rsc_0_22_RDATA(xt_rsc_0_22_RDATA),
      .xt_rsc_0_22_RID(xt_rsc_0_22_RID),
      .xt_rsc_0_22_ARREADY(xt_rsc_0_22_ARREADY),
      .xt_rsc_0_22_ARVALID(xt_rsc_0_22_ARVALID),
      .xt_rsc_0_22_ARUSER(xt_rsc_0_22_ARUSER),
      .xt_rsc_0_22_ARREGION(xt_rsc_0_22_ARREGION),
      .xt_rsc_0_22_ARQOS(xt_rsc_0_22_ARQOS),
      .xt_rsc_0_22_ARPROT(xt_rsc_0_22_ARPROT),
      .xt_rsc_0_22_ARCACHE(xt_rsc_0_22_ARCACHE),
      .xt_rsc_0_22_ARLOCK(xt_rsc_0_22_ARLOCK),
      .xt_rsc_0_22_ARBURST(xt_rsc_0_22_ARBURST),
      .xt_rsc_0_22_ARSIZE(xt_rsc_0_22_ARSIZE),
      .xt_rsc_0_22_ARLEN(xt_rsc_0_22_ARLEN),
      .xt_rsc_0_22_ARADDR(xt_rsc_0_22_ARADDR),
      .xt_rsc_0_22_ARID(xt_rsc_0_22_ARID),
      .xt_rsc_0_22_BREADY(xt_rsc_0_22_BREADY),
      .xt_rsc_0_22_BVALID(xt_rsc_0_22_BVALID),
      .xt_rsc_0_22_BUSER(xt_rsc_0_22_BUSER),
      .xt_rsc_0_22_BRESP(xt_rsc_0_22_BRESP),
      .xt_rsc_0_22_BID(xt_rsc_0_22_BID),
      .xt_rsc_0_22_WREADY(xt_rsc_0_22_WREADY),
      .xt_rsc_0_22_WVALID(xt_rsc_0_22_WVALID),
      .xt_rsc_0_22_WUSER(xt_rsc_0_22_WUSER),
      .xt_rsc_0_22_WLAST(xt_rsc_0_22_WLAST),
      .xt_rsc_0_22_WSTRB(xt_rsc_0_22_WSTRB),
      .xt_rsc_0_22_WDATA(xt_rsc_0_22_WDATA),
      .xt_rsc_0_22_AWREADY(xt_rsc_0_22_AWREADY),
      .xt_rsc_0_22_AWVALID(xt_rsc_0_22_AWVALID),
      .xt_rsc_0_22_AWUSER(xt_rsc_0_22_AWUSER),
      .xt_rsc_0_22_AWREGION(xt_rsc_0_22_AWREGION),
      .xt_rsc_0_22_AWQOS(xt_rsc_0_22_AWQOS),
      .xt_rsc_0_22_AWPROT(xt_rsc_0_22_AWPROT),
      .xt_rsc_0_22_AWCACHE(xt_rsc_0_22_AWCACHE),
      .xt_rsc_0_22_AWLOCK(xt_rsc_0_22_AWLOCK),
      .xt_rsc_0_22_AWBURST(xt_rsc_0_22_AWBURST),
      .xt_rsc_0_22_AWSIZE(xt_rsc_0_22_AWSIZE),
      .xt_rsc_0_22_AWLEN(xt_rsc_0_22_AWLEN),
      .xt_rsc_0_22_AWADDR(xt_rsc_0_22_AWADDR),
      .xt_rsc_0_22_AWID(xt_rsc_0_22_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_22_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_22_i_wen_comp(xt_rsc_0_22_i_wen_comp),
      .xt_rsc_0_22_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_0_22_i_wen_comp_1(xt_rsc_0_22_i_wen_comp_1),
      .xt_rsc_0_22_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_22_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_0_22_i_s_din_mxwt(xt_rsc_0_22_i_s_din_mxwt),
      .xt_rsc_0_22_i_s_dout_core(reg_xt_rsc_0_6_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_23_i peaseNTT_core_xt_rsc_0_23_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_23_s_tdone(xt_rsc_0_23_s_tdone),
      .xt_rsc_0_23_tr_write_done(xt_rsc_0_23_tr_write_done),
      .xt_rsc_0_23_RREADY(xt_rsc_0_23_RREADY),
      .xt_rsc_0_23_RVALID(xt_rsc_0_23_RVALID),
      .xt_rsc_0_23_RUSER(xt_rsc_0_23_RUSER),
      .xt_rsc_0_23_RLAST(xt_rsc_0_23_RLAST),
      .xt_rsc_0_23_RRESP(xt_rsc_0_23_RRESP),
      .xt_rsc_0_23_RDATA(xt_rsc_0_23_RDATA),
      .xt_rsc_0_23_RID(xt_rsc_0_23_RID),
      .xt_rsc_0_23_ARREADY(xt_rsc_0_23_ARREADY),
      .xt_rsc_0_23_ARVALID(xt_rsc_0_23_ARVALID),
      .xt_rsc_0_23_ARUSER(xt_rsc_0_23_ARUSER),
      .xt_rsc_0_23_ARREGION(xt_rsc_0_23_ARREGION),
      .xt_rsc_0_23_ARQOS(xt_rsc_0_23_ARQOS),
      .xt_rsc_0_23_ARPROT(xt_rsc_0_23_ARPROT),
      .xt_rsc_0_23_ARCACHE(xt_rsc_0_23_ARCACHE),
      .xt_rsc_0_23_ARLOCK(xt_rsc_0_23_ARLOCK),
      .xt_rsc_0_23_ARBURST(xt_rsc_0_23_ARBURST),
      .xt_rsc_0_23_ARSIZE(xt_rsc_0_23_ARSIZE),
      .xt_rsc_0_23_ARLEN(xt_rsc_0_23_ARLEN),
      .xt_rsc_0_23_ARADDR(xt_rsc_0_23_ARADDR),
      .xt_rsc_0_23_ARID(xt_rsc_0_23_ARID),
      .xt_rsc_0_23_BREADY(xt_rsc_0_23_BREADY),
      .xt_rsc_0_23_BVALID(xt_rsc_0_23_BVALID),
      .xt_rsc_0_23_BUSER(xt_rsc_0_23_BUSER),
      .xt_rsc_0_23_BRESP(xt_rsc_0_23_BRESP),
      .xt_rsc_0_23_BID(xt_rsc_0_23_BID),
      .xt_rsc_0_23_WREADY(xt_rsc_0_23_WREADY),
      .xt_rsc_0_23_WVALID(xt_rsc_0_23_WVALID),
      .xt_rsc_0_23_WUSER(xt_rsc_0_23_WUSER),
      .xt_rsc_0_23_WLAST(xt_rsc_0_23_WLAST),
      .xt_rsc_0_23_WSTRB(xt_rsc_0_23_WSTRB),
      .xt_rsc_0_23_WDATA(xt_rsc_0_23_WDATA),
      .xt_rsc_0_23_AWREADY(xt_rsc_0_23_AWREADY),
      .xt_rsc_0_23_AWVALID(xt_rsc_0_23_AWVALID),
      .xt_rsc_0_23_AWUSER(xt_rsc_0_23_AWUSER),
      .xt_rsc_0_23_AWREGION(xt_rsc_0_23_AWREGION),
      .xt_rsc_0_23_AWQOS(xt_rsc_0_23_AWQOS),
      .xt_rsc_0_23_AWPROT(xt_rsc_0_23_AWPROT),
      .xt_rsc_0_23_AWCACHE(xt_rsc_0_23_AWCACHE),
      .xt_rsc_0_23_AWLOCK(xt_rsc_0_23_AWLOCK),
      .xt_rsc_0_23_AWBURST(xt_rsc_0_23_AWBURST),
      .xt_rsc_0_23_AWSIZE(xt_rsc_0_23_AWSIZE),
      .xt_rsc_0_23_AWLEN(xt_rsc_0_23_AWLEN),
      .xt_rsc_0_23_AWADDR(xt_rsc_0_23_AWADDR),
      .xt_rsc_0_23_AWID(xt_rsc_0_23_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_23_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_23_i_wen_comp(xt_rsc_0_23_i_wen_comp),
      .xt_rsc_0_23_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_0_23_i_wen_comp_1(xt_rsc_0_23_i_wen_comp_1),
      .xt_rsc_0_23_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_23_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_0_23_i_s_din_mxwt(xt_rsc_0_23_i_s_din_mxwt),
      .xt_rsc_0_23_i_s_dout_core(reg_xt_rsc_0_7_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_24_i peaseNTT_core_xt_rsc_0_24_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_24_s_tdone(xt_rsc_0_24_s_tdone),
      .xt_rsc_0_24_tr_write_done(xt_rsc_0_24_tr_write_done),
      .xt_rsc_0_24_RREADY(xt_rsc_0_24_RREADY),
      .xt_rsc_0_24_RVALID(xt_rsc_0_24_RVALID),
      .xt_rsc_0_24_RUSER(xt_rsc_0_24_RUSER),
      .xt_rsc_0_24_RLAST(xt_rsc_0_24_RLAST),
      .xt_rsc_0_24_RRESP(xt_rsc_0_24_RRESP),
      .xt_rsc_0_24_RDATA(xt_rsc_0_24_RDATA),
      .xt_rsc_0_24_RID(xt_rsc_0_24_RID),
      .xt_rsc_0_24_ARREADY(xt_rsc_0_24_ARREADY),
      .xt_rsc_0_24_ARVALID(xt_rsc_0_24_ARVALID),
      .xt_rsc_0_24_ARUSER(xt_rsc_0_24_ARUSER),
      .xt_rsc_0_24_ARREGION(xt_rsc_0_24_ARREGION),
      .xt_rsc_0_24_ARQOS(xt_rsc_0_24_ARQOS),
      .xt_rsc_0_24_ARPROT(xt_rsc_0_24_ARPROT),
      .xt_rsc_0_24_ARCACHE(xt_rsc_0_24_ARCACHE),
      .xt_rsc_0_24_ARLOCK(xt_rsc_0_24_ARLOCK),
      .xt_rsc_0_24_ARBURST(xt_rsc_0_24_ARBURST),
      .xt_rsc_0_24_ARSIZE(xt_rsc_0_24_ARSIZE),
      .xt_rsc_0_24_ARLEN(xt_rsc_0_24_ARLEN),
      .xt_rsc_0_24_ARADDR(xt_rsc_0_24_ARADDR),
      .xt_rsc_0_24_ARID(xt_rsc_0_24_ARID),
      .xt_rsc_0_24_BREADY(xt_rsc_0_24_BREADY),
      .xt_rsc_0_24_BVALID(xt_rsc_0_24_BVALID),
      .xt_rsc_0_24_BUSER(xt_rsc_0_24_BUSER),
      .xt_rsc_0_24_BRESP(xt_rsc_0_24_BRESP),
      .xt_rsc_0_24_BID(xt_rsc_0_24_BID),
      .xt_rsc_0_24_WREADY(xt_rsc_0_24_WREADY),
      .xt_rsc_0_24_WVALID(xt_rsc_0_24_WVALID),
      .xt_rsc_0_24_WUSER(xt_rsc_0_24_WUSER),
      .xt_rsc_0_24_WLAST(xt_rsc_0_24_WLAST),
      .xt_rsc_0_24_WSTRB(xt_rsc_0_24_WSTRB),
      .xt_rsc_0_24_WDATA(xt_rsc_0_24_WDATA),
      .xt_rsc_0_24_AWREADY(xt_rsc_0_24_AWREADY),
      .xt_rsc_0_24_AWVALID(xt_rsc_0_24_AWVALID),
      .xt_rsc_0_24_AWUSER(xt_rsc_0_24_AWUSER),
      .xt_rsc_0_24_AWREGION(xt_rsc_0_24_AWREGION),
      .xt_rsc_0_24_AWQOS(xt_rsc_0_24_AWQOS),
      .xt_rsc_0_24_AWPROT(xt_rsc_0_24_AWPROT),
      .xt_rsc_0_24_AWCACHE(xt_rsc_0_24_AWCACHE),
      .xt_rsc_0_24_AWLOCK(xt_rsc_0_24_AWLOCK),
      .xt_rsc_0_24_AWBURST(xt_rsc_0_24_AWBURST),
      .xt_rsc_0_24_AWSIZE(xt_rsc_0_24_AWSIZE),
      .xt_rsc_0_24_AWLEN(xt_rsc_0_24_AWLEN),
      .xt_rsc_0_24_AWADDR(xt_rsc_0_24_AWADDR),
      .xt_rsc_0_24_AWID(xt_rsc_0_24_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_24_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_24_i_wen_comp(xt_rsc_0_24_i_wen_comp),
      .xt_rsc_0_24_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_0_24_i_wen_comp_1(xt_rsc_0_24_i_wen_comp_1),
      .xt_rsc_0_24_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_24_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_0_24_i_s_din_mxwt(xt_rsc_0_24_i_s_din_mxwt),
      .xt_rsc_0_24_i_s_dout_core(reg_xt_rsc_0_8_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_25_i peaseNTT_core_xt_rsc_0_25_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_25_s_tdone(xt_rsc_0_25_s_tdone),
      .xt_rsc_0_25_tr_write_done(xt_rsc_0_25_tr_write_done),
      .xt_rsc_0_25_RREADY(xt_rsc_0_25_RREADY),
      .xt_rsc_0_25_RVALID(xt_rsc_0_25_RVALID),
      .xt_rsc_0_25_RUSER(xt_rsc_0_25_RUSER),
      .xt_rsc_0_25_RLAST(xt_rsc_0_25_RLAST),
      .xt_rsc_0_25_RRESP(xt_rsc_0_25_RRESP),
      .xt_rsc_0_25_RDATA(xt_rsc_0_25_RDATA),
      .xt_rsc_0_25_RID(xt_rsc_0_25_RID),
      .xt_rsc_0_25_ARREADY(xt_rsc_0_25_ARREADY),
      .xt_rsc_0_25_ARVALID(xt_rsc_0_25_ARVALID),
      .xt_rsc_0_25_ARUSER(xt_rsc_0_25_ARUSER),
      .xt_rsc_0_25_ARREGION(xt_rsc_0_25_ARREGION),
      .xt_rsc_0_25_ARQOS(xt_rsc_0_25_ARQOS),
      .xt_rsc_0_25_ARPROT(xt_rsc_0_25_ARPROT),
      .xt_rsc_0_25_ARCACHE(xt_rsc_0_25_ARCACHE),
      .xt_rsc_0_25_ARLOCK(xt_rsc_0_25_ARLOCK),
      .xt_rsc_0_25_ARBURST(xt_rsc_0_25_ARBURST),
      .xt_rsc_0_25_ARSIZE(xt_rsc_0_25_ARSIZE),
      .xt_rsc_0_25_ARLEN(xt_rsc_0_25_ARLEN),
      .xt_rsc_0_25_ARADDR(xt_rsc_0_25_ARADDR),
      .xt_rsc_0_25_ARID(xt_rsc_0_25_ARID),
      .xt_rsc_0_25_BREADY(xt_rsc_0_25_BREADY),
      .xt_rsc_0_25_BVALID(xt_rsc_0_25_BVALID),
      .xt_rsc_0_25_BUSER(xt_rsc_0_25_BUSER),
      .xt_rsc_0_25_BRESP(xt_rsc_0_25_BRESP),
      .xt_rsc_0_25_BID(xt_rsc_0_25_BID),
      .xt_rsc_0_25_WREADY(xt_rsc_0_25_WREADY),
      .xt_rsc_0_25_WVALID(xt_rsc_0_25_WVALID),
      .xt_rsc_0_25_WUSER(xt_rsc_0_25_WUSER),
      .xt_rsc_0_25_WLAST(xt_rsc_0_25_WLAST),
      .xt_rsc_0_25_WSTRB(xt_rsc_0_25_WSTRB),
      .xt_rsc_0_25_WDATA(xt_rsc_0_25_WDATA),
      .xt_rsc_0_25_AWREADY(xt_rsc_0_25_AWREADY),
      .xt_rsc_0_25_AWVALID(xt_rsc_0_25_AWVALID),
      .xt_rsc_0_25_AWUSER(xt_rsc_0_25_AWUSER),
      .xt_rsc_0_25_AWREGION(xt_rsc_0_25_AWREGION),
      .xt_rsc_0_25_AWQOS(xt_rsc_0_25_AWQOS),
      .xt_rsc_0_25_AWPROT(xt_rsc_0_25_AWPROT),
      .xt_rsc_0_25_AWCACHE(xt_rsc_0_25_AWCACHE),
      .xt_rsc_0_25_AWLOCK(xt_rsc_0_25_AWLOCK),
      .xt_rsc_0_25_AWBURST(xt_rsc_0_25_AWBURST),
      .xt_rsc_0_25_AWSIZE(xt_rsc_0_25_AWSIZE),
      .xt_rsc_0_25_AWLEN(xt_rsc_0_25_AWLEN),
      .xt_rsc_0_25_AWADDR(xt_rsc_0_25_AWADDR),
      .xt_rsc_0_25_AWID(xt_rsc_0_25_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_25_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_25_i_wen_comp(xt_rsc_0_25_i_wen_comp),
      .xt_rsc_0_25_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_0_25_i_wen_comp_1(xt_rsc_0_25_i_wen_comp_1),
      .xt_rsc_0_25_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_25_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_0_25_i_s_din_mxwt(xt_rsc_0_25_i_s_din_mxwt),
      .xt_rsc_0_25_i_s_dout_core(reg_xt_rsc_0_9_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_26_i peaseNTT_core_xt_rsc_0_26_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_26_s_tdone(xt_rsc_0_26_s_tdone),
      .xt_rsc_0_26_tr_write_done(xt_rsc_0_26_tr_write_done),
      .xt_rsc_0_26_RREADY(xt_rsc_0_26_RREADY),
      .xt_rsc_0_26_RVALID(xt_rsc_0_26_RVALID),
      .xt_rsc_0_26_RUSER(xt_rsc_0_26_RUSER),
      .xt_rsc_0_26_RLAST(xt_rsc_0_26_RLAST),
      .xt_rsc_0_26_RRESP(xt_rsc_0_26_RRESP),
      .xt_rsc_0_26_RDATA(xt_rsc_0_26_RDATA),
      .xt_rsc_0_26_RID(xt_rsc_0_26_RID),
      .xt_rsc_0_26_ARREADY(xt_rsc_0_26_ARREADY),
      .xt_rsc_0_26_ARVALID(xt_rsc_0_26_ARVALID),
      .xt_rsc_0_26_ARUSER(xt_rsc_0_26_ARUSER),
      .xt_rsc_0_26_ARREGION(xt_rsc_0_26_ARREGION),
      .xt_rsc_0_26_ARQOS(xt_rsc_0_26_ARQOS),
      .xt_rsc_0_26_ARPROT(xt_rsc_0_26_ARPROT),
      .xt_rsc_0_26_ARCACHE(xt_rsc_0_26_ARCACHE),
      .xt_rsc_0_26_ARLOCK(xt_rsc_0_26_ARLOCK),
      .xt_rsc_0_26_ARBURST(xt_rsc_0_26_ARBURST),
      .xt_rsc_0_26_ARSIZE(xt_rsc_0_26_ARSIZE),
      .xt_rsc_0_26_ARLEN(xt_rsc_0_26_ARLEN),
      .xt_rsc_0_26_ARADDR(xt_rsc_0_26_ARADDR),
      .xt_rsc_0_26_ARID(xt_rsc_0_26_ARID),
      .xt_rsc_0_26_BREADY(xt_rsc_0_26_BREADY),
      .xt_rsc_0_26_BVALID(xt_rsc_0_26_BVALID),
      .xt_rsc_0_26_BUSER(xt_rsc_0_26_BUSER),
      .xt_rsc_0_26_BRESP(xt_rsc_0_26_BRESP),
      .xt_rsc_0_26_BID(xt_rsc_0_26_BID),
      .xt_rsc_0_26_WREADY(xt_rsc_0_26_WREADY),
      .xt_rsc_0_26_WVALID(xt_rsc_0_26_WVALID),
      .xt_rsc_0_26_WUSER(xt_rsc_0_26_WUSER),
      .xt_rsc_0_26_WLAST(xt_rsc_0_26_WLAST),
      .xt_rsc_0_26_WSTRB(xt_rsc_0_26_WSTRB),
      .xt_rsc_0_26_WDATA(xt_rsc_0_26_WDATA),
      .xt_rsc_0_26_AWREADY(xt_rsc_0_26_AWREADY),
      .xt_rsc_0_26_AWVALID(xt_rsc_0_26_AWVALID),
      .xt_rsc_0_26_AWUSER(xt_rsc_0_26_AWUSER),
      .xt_rsc_0_26_AWREGION(xt_rsc_0_26_AWREGION),
      .xt_rsc_0_26_AWQOS(xt_rsc_0_26_AWQOS),
      .xt_rsc_0_26_AWPROT(xt_rsc_0_26_AWPROT),
      .xt_rsc_0_26_AWCACHE(xt_rsc_0_26_AWCACHE),
      .xt_rsc_0_26_AWLOCK(xt_rsc_0_26_AWLOCK),
      .xt_rsc_0_26_AWBURST(xt_rsc_0_26_AWBURST),
      .xt_rsc_0_26_AWSIZE(xt_rsc_0_26_AWSIZE),
      .xt_rsc_0_26_AWLEN(xt_rsc_0_26_AWLEN),
      .xt_rsc_0_26_AWADDR(xt_rsc_0_26_AWADDR),
      .xt_rsc_0_26_AWID(xt_rsc_0_26_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_26_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_26_i_wen_comp(xt_rsc_0_26_i_wen_comp),
      .xt_rsc_0_26_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_0_26_i_wen_comp_1(xt_rsc_0_26_i_wen_comp_1),
      .xt_rsc_0_26_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_26_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_0_26_i_s_din_mxwt(xt_rsc_0_26_i_s_din_mxwt),
      .xt_rsc_0_26_i_s_dout_core(reg_xt_rsc_0_10_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_27_i peaseNTT_core_xt_rsc_0_27_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_27_s_tdone(xt_rsc_0_27_s_tdone),
      .xt_rsc_0_27_tr_write_done(xt_rsc_0_27_tr_write_done),
      .xt_rsc_0_27_RREADY(xt_rsc_0_27_RREADY),
      .xt_rsc_0_27_RVALID(xt_rsc_0_27_RVALID),
      .xt_rsc_0_27_RUSER(xt_rsc_0_27_RUSER),
      .xt_rsc_0_27_RLAST(xt_rsc_0_27_RLAST),
      .xt_rsc_0_27_RRESP(xt_rsc_0_27_RRESP),
      .xt_rsc_0_27_RDATA(xt_rsc_0_27_RDATA),
      .xt_rsc_0_27_RID(xt_rsc_0_27_RID),
      .xt_rsc_0_27_ARREADY(xt_rsc_0_27_ARREADY),
      .xt_rsc_0_27_ARVALID(xt_rsc_0_27_ARVALID),
      .xt_rsc_0_27_ARUSER(xt_rsc_0_27_ARUSER),
      .xt_rsc_0_27_ARREGION(xt_rsc_0_27_ARREGION),
      .xt_rsc_0_27_ARQOS(xt_rsc_0_27_ARQOS),
      .xt_rsc_0_27_ARPROT(xt_rsc_0_27_ARPROT),
      .xt_rsc_0_27_ARCACHE(xt_rsc_0_27_ARCACHE),
      .xt_rsc_0_27_ARLOCK(xt_rsc_0_27_ARLOCK),
      .xt_rsc_0_27_ARBURST(xt_rsc_0_27_ARBURST),
      .xt_rsc_0_27_ARSIZE(xt_rsc_0_27_ARSIZE),
      .xt_rsc_0_27_ARLEN(xt_rsc_0_27_ARLEN),
      .xt_rsc_0_27_ARADDR(xt_rsc_0_27_ARADDR),
      .xt_rsc_0_27_ARID(xt_rsc_0_27_ARID),
      .xt_rsc_0_27_BREADY(xt_rsc_0_27_BREADY),
      .xt_rsc_0_27_BVALID(xt_rsc_0_27_BVALID),
      .xt_rsc_0_27_BUSER(xt_rsc_0_27_BUSER),
      .xt_rsc_0_27_BRESP(xt_rsc_0_27_BRESP),
      .xt_rsc_0_27_BID(xt_rsc_0_27_BID),
      .xt_rsc_0_27_WREADY(xt_rsc_0_27_WREADY),
      .xt_rsc_0_27_WVALID(xt_rsc_0_27_WVALID),
      .xt_rsc_0_27_WUSER(xt_rsc_0_27_WUSER),
      .xt_rsc_0_27_WLAST(xt_rsc_0_27_WLAST),
      .xt_rsc_0_27_WSTRB(xt_rsc_0_27_WSTRB),
      .xt_rsc_0_27_WDATA(xt_rsc_0_27_WDATA),
      .xt_rsc_0_27_AWREADY(xt_rsc_0_27_AWREADY),
      .xt_rsc_0_27_AWVALID(xt_rsc_0_27_AWVALID),
      .xt_rsc_0_27_AWUSER(xt_rsc_0_27_AWUSER),
      .xt_rsc_0_27_AWREGION(xt_rsc_0_27_AWREGION),
      .xt_rsc_0_27_AWQOS(xt_rsc_0_27_AWQOS),
      .xt_rsc_0_27_AWPROT(xt_rsc_0_27_AWPROT),
      .xt_rsc_0_27_AWCACHE(xt_rsc_0_27_AWCACHE),
      .xt_rsc_0_27_AWLOCK(xt_rsc_0_27_AWLOCK),
      .xt_rsc_0_27_AWBURST(xt_rsc_0_27_AWBURST),
      .xt_rsc_0_27_AWSIZE(xt_rsc_0_27_AWSIZE),
      .xt_rsc_0_27_AWLEN(xt_rsc_0_27_AWLEN),
      .xt_rsc_0_27_AWADDR(xt_rsc_0_27_AWADDR),
      .xt_rsc_0_27_AWID(xt_rsc_0_27_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_27_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_27_i_wen_comp(xt_rsc_0_27_i_wen_comp),
      .xt_rsc_0_27_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_0_27_i_wen_comp_1(xt_rsc_0_27_i_wen_comp_1),
      .xt_rsc_0_27_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_27_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_0_27_i_s_din_mxwt(xt_rsc_0_27_i_s_din_mxwt),
      .xt_rsc_0_27_i_s_dout_core(reg_xt_rsc_0_11_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_28_i peaseNTT_core_xt_rsc_0_28_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_28_s_tdone(xt_rsc_0_28_s_tdone),
      .xt_rsc_0_28_tr_write_done(xt_rsc_0_28_tr_write_done),
      .xt_rsc_0_28_RREADY(xt_rsc_0_28_RREADY),
      .xt_rsc_0_28_RVALID(xt_rsc_0_28_RVALID),
      .xt_rsc_0_28_RUSER(xt_rsc_0_28_RUSER),
      .xt_rsc_0_28_RLAST(xt_rsc_0_28_RLAST),
      .xt_rsc_0_28_RRESP(xt_rsc_0_28_RRESP),
      .xt_rsc_0_28_RDATA(xt_rsc_0_28_RDATA),
      .xt_rsc_0_28_RID(xt_rsc_0_28_RID),
      .xt_rsc_0_28_ARREADY(xt_rsc_0_28_ARREADY),
      .xt_rsc_0_28_ARVALID(xt_rsc_0_28_ARVALID),
      .xt_rsc_0_28_ARUSER(xt_rsc_0_28_ARUSER),
      .xt_rsc_0_28_ARREGION(xt_rsc_0_28_ARREGION),
      .xt_rsc_0_28_ARQOS(xt_rsc_0_28_ARQOS),
      .xt_rsc_0_28_ARPROT(xt_rsc_0_28_ARPROT),
      .xt_rsc_0_28_ARCACHE(xt_rsc_0_28_ARCACHE),
      .xt_rsc_0_28_ARLOCK(xt_rsc_0_28_ARLOCK),
      .xt_rsc_0_28_ARBURST(xt_rsc_0_28_ARBURST),
      .xt_rsc_0_28_ARSIZE(xt_rsc_0_28_ARSIZE),
      .xt_rsc_0_28_ARLEN(xt_rsc_0_28_ARLEN),
      .xt_rsc_0_28_ARADDR(xt_rsc_0_28_ARADDR),
      .xt_rsc_0_28_ARID(xt_rsc_0_28_ARID),
      .xt_rsc_0_28_BREADY(xt_rsc_0_28_BREADY),
      .xt_rsc_0_28_BVALID(xt_rsc_0_28_BVALID),
      .xt_rsc_0_28_BUSER(xt_rsc_0_28_BUSER),
      .xt_rsc_0_28_BRESP(xt_rsc_0_28_BRESP),
      .xt_rsc_0_28_BID(xt_rsc_0_28_BID),
      .xt_rsc_0_28_WREADY(xt_rsc_0_28_WREADY),
      .xt_rsc_0_28_WVALID(xt_rsc_0_28_WVALID),
      .xt_rsc_0_28_WUSER(xt_rsc_0_28_WUSER),
      .xt_rsc_0_28_WLAST(xt_rsc_0_28_WLAST),
      .xt_rsc_0_28_WSTRB(xt_rsc_0_28_WSTRB),
      .xt_rsc_0_28_WDATA(xt_rsc_0_28_WDATA),
      .xt_rsc_0_28_AWREADY(xt_rsc_0_28_AWREADY),
      .xt_rsc_0_28_AWVALID(xt_rsc_0_28_AWVALID),
      .xt_rsc_0_28_AWUSER(xt_rsc_0_28_AWUSER),
      .xt_rsc_0_28_AWREGION(xt_rsc_0_28_AWREGION),
      .xt_rsc_0_28_AWQOS(xt_rsc_0_28_AWQOS),
      .xt_rsc_0_28_AWPROT(xt_rsc_0_28_AWPROT),
      .xt_rsc_0_28_AWCACHE(xt_rsc_0_28_AWCACHE),
      .xt_rsc_0_28_AWLOCK(xt_rsc_0_28_AWLOCK),
      .xt_rsc_0_28_AWBURST(xt_rsc_0_28_AWBURST),
      .xt_rsc_0_28_AWSIZE(xt_rsc_0_28_AWSIZE),
      .xt_rsc_0_28_AWLEN(xt_rsc_0_28_AWLEN),
      .xt_rsc_0_28_AWADDR(xt_rsc_0_28_AWADDR),
      .xt_rsc_0_28_AWID(xt_rsc_0_28_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_28_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_28_i_wen_comp(xt_rsc_0_28_i_wen_comp),
      .xt_rsc_0_28_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_0_28_i_wen_comp_1(xt_rsc_0_28_i_wen_comp_1),
      .xt_rsc_0_28_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_28_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_0_28_i_s_din_mxwt(xt_rsc_0_28_i_s_din_mxwt),
      .xt_rsc_0_28_i_s_dout_core(reg_xt_rsc_0_12_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_29_i peaseNTT_core_xt_rsc_0_29_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_29_s_tdone(xt_rsc_0_29_s_tdone),
      .xt_rsc_0_29_tr_write_done(xt_rsc_0_29_tr_write_done),
      .xt_rsc_0_29_RREADY(xt_rsc_0_29_RREADY),
      .xt_rsc_0_29_RVALID(xt_rsc_0_29_RVALID),
      .xt_rsc_0_29_RUSER(xt_rsc_0_29_RUSER),
      .xt_rsc_0_29_RLAST(xt_rsc_0_29_RLAST),
      .xt_rsc_0_29_RRESP(xt_rsc_0_29_RRESP),
      .xt_rsc_0_29_RDATA(xt_rsc_0_29_RDATA),
      .xt_rsc_0_29_RID(xt_rsc_0_29_RID),
      .xt_rsc_0_29_ARREADY(xt_rsc_0_29_ARREADY),
      .xt_rsc_0_29_ARVALID(xt_rsc_0_29_ARVALID),
      .xt_rsc_0_29_ARUSER(xt_rsc_0_29_ARUSER),
      .xt_rsc_0_29_ARREGION(xt_rsc_0_29_ARREGION),
      .xt_rsc_0_29_ARQOS(xt_rsc_0_29_ARQOS),
      .xt_rsc_0_29_ARPROT(xt_rsc_0_29_ARPROT),
      .xt_rsc_0_29_ARCACHE(xt_rsc_0_29_ARCACHE),
      .xt_rsc_0_29_ARLOCK(xt_rsc_0_29_ARLOCK),
      .xt_rsc_0_29_ARBURST(xt_rsc_0_29_ARBURST),
      .xt_rsc_0_29_ARSIZE(xt_rsc_0_29_ARSIZE),
      .xt_rsc_0_29_ARLEN(xt_rsc_0_29_ARLEN),
      .xt_rsc_0_29_ARADDR(xt_rsc_0_29_ARADDR),
      .xt_rsc_0_29_ARID(xt_rsc_0_29_ARID),
      .xt_rsc_0_29_BREADY(xt_rsc_0_29_BREADY),
      .xt_rsc_0_29_BVALID(xt_rsc_0_29_BVALID),
      .xt_rsc_0_29_BUSER(xt_rsc_0_29_BUSER),
      .xt_rsc_0_29_BRESP(xt_rsc_0_29_BRESP),
      .xt_rsc_0_29_BID(xt_rsc_0_29_BID),
      .xt_rsc_0_29_WREADY(xt_rsc_0_29_WREADY),
      .xt_rsc_0_29_WVALID(xt_rsc_0_29_WVALID),
      .xt_rsc_0_29_WUSER(xt_rsc_0_29_WUSER),
      .xt_rsc_0_29_WLAST(xt_rsc_0_29_WLAST),
      .xt_rsc_0_29_WSTRB(xt_rsc_0_29_WSTRB),
      .xt_rsc_0_29_WDATA(xt_rsc_0_29_WDATA),
      .xt_rsc_0_29_AWREADY(xt_rsc_0_29_AWREADY),
      .xt_rsc_0_29_AWVALID(xt_rsc_0_29_AWVALID),
      .xt_rsc_0_29_AWUSER(xt_rsc_0_29_AWUSER),
      .xt_rsc_0_29_AWREGION(xt_rsc_0_29_AWREGION),
      .xt_rsc_0_29_AWQOS(xt_rsc_0_29_AWQOS),
      .xt_rsc_0_29_AWPROT(xt_rsc_0_29_AWPROT),
      .xt_rsc_0_29_AWCACHE(xt_rsc_0_29_AWCACHE),
      .xt_rsc_0_29_AWLOCK(xt_rsc_0_29_AWLOCK),
      .xt_rsc_0_29_AWBURST(xt_rsc_0_29_AWBURST),
      .xt_rsc_0_29_AWSIZE(xt_rsc_0_29_AWSIZE),
      .xt_rsc_0_29_AWLEN(xt_rsc_0_29_AWLEN),
      .xt_rsc_0_29_AWADDR(xt_rsc_0_29_AWADDR),
      .xt_rsc_0_29_AWID(xt_rsc_0_29_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_29_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_29_i_wen_comp(xt_rsc_0_29_i_wen_comp),
      .xt_rsc_0_29_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_0_29_i_wen_comp_1(xt_rsc_0_29_i_wen_comp_1),
      .xt_rsc_0_29_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_29_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_0_29_i_s_din_mxwt(xt_rsc_0_29_i_s_din_mxwt),
      .xt_rsc_0_29_i_s_dout_core(reg_xt_rsc_0_13_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_30_i peaseNTT_core_xt_rsc_0_30_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_30_s_tdone(xt_rsc_0_30_s_tdone),
      .xt_rsc_0_30_tr_write_done(xt_rsc_0_30_tr_write_done),
      .xt_rsc_0_30_RREADY(xt_rsc_0_30_RREADY),
      .xt_rsc_0_30_RVALID(xt_rsc_0_30_RVALID),
      .xt_rsc_0_30_RUSER(xt_rsc_0_30_RUSER),
      .xt_rsc_0_30_RLAST(xt_rsc_0_30_RLAST),
      .xt_rsc_0_30_RRESP(xt_rsc_0_30_RRESP),
      .xt_rsc_0_30_RDATA(xt_rsc_0_30_RDATA),
      .xt_rsc_0_30_RID(xt_rsc_0_30_RID),
      .xt_rsc_0_30_ARREADY(xt_rsc_0_30_ARREADY),
      .xt_rsc_0_30_ARVALID(xt_rsc_0_30_ARVALID),
      .xt_rsc_0_30_ARUSER(xt_rsc_0_30_ARUSER),
      .xt_rsc_0_30_ARREGION(xt_rsc_0_30_ARREGION),
      .xt_rsc_0_30_ARQOS(xt_rsc_0_30_ARQOS),
      .xt_rsc_0_30_ARPROT(xt_rsc_0_30_ARPROT),
      .xt_rsc_0_30_ARCACHE(xt_rsc_0_30_ARCACHE),
      .xt_rsc_0_30_ARLOCK(xt_rsc_0_30_ARLOCK),
      .xt_rsc_0_30_ARBURST(xt_rsc_0_30_ARBURST),
      .xt_rsc_0_30_ARSIZE(xt_rsc_0_30_ARSIZE),
      .xt_rsc_0_30_ARLEN(xt_rsc_0_30_ARLEN),
      .xt_rsc_0_30_ARADDR(xt_rsc_0_30_ARADDR),
      .xt_rsc_0_30_ARID(xt_rsc_0_30_ARID),
      .xt_rsc_0_30_BREADY(xt_rsc_0_30_BREADY),
      .xt_rsc_0_30_BVALID(xt_rsc_0_30_BVALID),
      .xt_rsc_0_30_BUSER(xt_rsc_0_30_BUSER),
      .xt_rsc_0_30_BRESP(xt_rsc_0_30_BRESP),
      .xt_rsc_0_30_BID(xt_rsc_0_30_BID),
      .xt_rsc_0_30_WREADY(xt_rsc_0_30_WREADY),
      .xt_rsc_0_30_WVALID(xt_rsc_0_30_WVALID),
      .xt_rsc_0_30_WUSER(xt_rsc_0_30_WUSER),
      .xt_rsc_0_30_WLAST(xt_rsc_0_30_WLAST),
      .xt_rsc_0_30_WSTRB(xt_rsc_0_30_WSTRB),
      .xt_rsc_0_30_WDATA(xt_rsc_0_30_WDATA),
      .xt_rsc_0_30_AWREADY(xt_rsc_0_30_AWREADY),
      .xt_rsc_0_30_AWVALID(xt_rsc_0_30_AWVALID),
      .xt_rsc_0_30_AWUSER(xt_rsc_0_30_AWUSER),
      .xt_rsc_0_30_AWREGION(xt_rsc_0_30_AWREGION),
      .xt_rsc_0_30_AWQOS(xt_rsc_0_30_AWQOS),
      .xt_rsc_0_30_AWPROT(xt_rsc_0_30_AWPROT),
      .xt_rsc_0_30_AWCACHE(xt_rsc_0_30_AWCACHE),
      .xt_rsc_0_30_AWLOCK(xt_rsc_0_30_AWLOCK),
      .xt_rsc_0_30_AWBURST(xt_rsc_0_30_AWBURST),
      .xt_rsc_0_30_AWSIZE(xt_rsc_0_30_AWSIZE),
      .xt_rsc_0_30_AWLEN(xt_rsc_0_30_AWLEN),
      .xt_rsc_0_30_AWADDR(xt_rsc_0_30_AWADDR),
      .xt_rsc_0_30_AWID(xt_rsc_0_30_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_30_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_30_i_wen_comp(xt_rsc_0_30_i_wen_comp),
      .xt_rsc_0_30_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_0_30_i_wen_comp_1(xt_rsc_0_30_i_wen_comp_1),
      .xt_rsc_0_30_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_30_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_0_30_i_s_din_mxwt(xt_rsc_0_30_i_s_din_mxwt),
      .xt_rsc_0_30_i_s_dout_core(reg_xt_rsc_0_14_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_0_31_i peaseNTT_core_xt_rsc_0_31_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_31_s_tdone(xt_rsc_0_31_s_tdone),
      .xt_rsc_0_31_tr_write_done(xt_rsc_0_31_tr_write_done),
      .xt_rsc_0_31_RREADY(xt_rsc_0_31_RREADY),
      .xt_rsc_0_31_RVALID(xt_rsc_0_31_RVALID),
      .xt_rsc_0_31_RUSER(xt_rsc_0_31_RUSER),
      .xt_rsc_0_31_RLAST(xt_rsc_0_31_RLAST),
      .xt_rsc_0_31_RRESP(xt_rsc_0_31_RRESP),
      .xt_rsc_0_31_RDATA(xt_rsc_0_31_RDATA),
      .xt_rsc_0_31_RID(xt_rsc_0_31_RID),
      .xt_rsc_0_31_ARREADY(xt_rsc_0_31_ARREADY),
      .xt_rsc_0_31_ARVALID(xt_rsc_0_31_ARVALID),
      .xt_rsc_0_31_ARUSER(xt_rsc_0_31_ARUSER),
      .xt_rsc_0_31_ARREGION(xt_rsc_0_31_ARREGION),
      .xt_rsc_0_31_ARQOS(xt_rsc_0_31_ARQOS),
      .xt_rsc_0_31_ARPROT(xt_rsc_0_31_ARPROT),
      .xt_rsc_0_31_ARCACHE(xt_rsc_0_31_ARCACHE),
      .xt_rsc_0_31_ARLOCK(xt_rsc_0_31_ARLOCK),
      .xt_rsc_0_31_ARBURST(xt_rsc_0_31_ARBURST),
      .xt_rsc_0_31_ARSIZE(xt_rsc_0_31_ARSIZE),
      .xt_rsc_0_31_ARLEN(xt_rsc_0_31_ARLEN),
      .xt_rsc_0_31_ARADDR(xt_rsc_0_31_ARADDR),
      .xt_rsc_0_31_ARID(xt_rsc_0_31_ARID),
      .xt_rsc_0_31_BREADY(xt_rsc_0_31_BREADY),
      .xt_rsc_0_31_BVALID(xt_rsc_0_31_BVALID),
      .xt_rsc_0_31_BUSER(xt_rsc_0_31_BUSER),
      .xt_rsc_0_31_BRESP(xt_rsc_0_31_BRESP),
      .xt_rsc_0_31_BID(xt_rsc_0_31_BID),
      .xt_rsc_0_31_WREADY(xt_rsc_0_31_WREADY),
      .xt_rsc_0_31_WVALID(xt_rsc_0_31_WVALID),
      .xt_rsc_0_31_WUSER(xt_rsc_0_31_WUSER),
      .xt_rsc_0_31_WLAST(xt_rsc_0_31_WLAST),
      .xt_rsc_0_31_WSTRB(xt_rsc_0_31_WSTRB),
      .xt_rsc_0_31_WDATA(xt_rsc_0_31_WDATA),
      .xt_rsc_0_31_AWREADY(xt_rsc_0_31_AWREADY),
      .xt_rsc_0_31_AWVALID(xt_rsc_0_31_AWVALID),
      .xt_rsc_0_31_AWUSER(xt_rsc_0_31_AWUSER),
      .xt_rsc_0_31_AWREGION(xt_rsc_0_31_AWREGION),
      .xt_rsc_0_31_AWQOS(xt_rsc_0_31_AWQOS),
      .xt_rsc_0_31_AWPROT(xt_rsc_0_31_AWPROT),
      .xt_rsc_0_31_AWCACHE(xt_rsc_0_31_AWCACHE),
      .xt_rsc_0_31_AWLOCK(xt_rsc_0_31_AWLOCK),
      .xt_rsc_0_31_AWBURST(xt_rsc_0_31_AWBURST),
      .xt_rsc_0_31_AWSIZE(xt_rsc_0_31_AWSIZE),
      .xt_rsc_0_31_AWLEN(xt_rsc_0_31_AWLEN),
      .xt_rsc_0_31_AWADDR(xt_rsc_0_31_AWADDR),
      .xt_rsc_0_31_AWID(xt_rsc_0_31_AWID),
      .core_wen(core_wen),
      .xt_rsc_0_31_i_oswt(reg_xt_rsc_0_0_i_oswt_cse),
      .xt_rsc_0_31_i_wen_comp(xt_rsc_0_31_i_wen_comp),
      .xt_rsc_0_31_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_0_31_i_wen_comp_1(xt_rsc_0_31_i_wen_comp_1),
      .xt_rsc_0_31_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_0_31_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_0_31_i_s_din_mxwt(xt_rsc_0_31_i_s_din_mxwt),
      .xt_rsc_0_31_i_s_dout_core(reg_xt_rsc_0_15_i_s_dout_core_cse)
    );
  peaseNTT_core_xt_rsc_1_0_i peaseNTT_core_xt_rsc_1_0_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_0_s_tdone(xt_rsc_1_0_s_tdone),
      .xt_rsc_1_0_tr_write_done(xt_rsc_1_0_tr_write_done),
      .xt_rsc_1_0_RREADY(xt_rsc_1_0_RREADY),
      .xt_rsc_1_0_RVALID(xt_rsc_1_0_RVALID),
      .xt_rsc_1_0_RUSER(xt_rsc_1_0_RUSER),
      .xt_rsc_1_0_RLAST(xt_rsc_1_0_RLAST),
      .xt_rsc_1_0_RRESP(xt_rsc_1_0_RRESP),
      .xt_rsc_1_0_RDATA(xt_rsc_1_0_RDATA),
      .xt_rsc_1_0_RID(xt_rsc_1_0_RID),
      .xt_rsc_1_0_ARREADY(xt_rsc_1_0_ARREADY),
      .xt_rsc_1_0_ARVALID(xt_rsc_1_0_ARVALID),
      .xt_rsc_1_0_ARUSER(xt_rsc_1_0_ARUSER),
      .xt_rsc_1_0_ARREGION(xt_rsc_1_0_ARREGION),
      .xt_rsc_1_0_ARQOS(xt_rsc_1_0_ARQOS),
      .xt_rsc_1_0_ARPROT(xt_rsc_1_0_ARPROT),
      .xt_rsc_1_0_ARCACHE(xt_rsc_1_0_ARCACHE),
      .xt_rsc_1_0_ARLOCK(xt_rsc_1_0_ARLOCK),
      .xt_rsc_1_0_ARBURST(xt_rsc_1_0_ARBURST),
      .xt_rsc_1_0_ARSIZE(xt_rsc_1_0_ARSIZE),
      .xt_rsc_1_0_ARLEN(xt_rsc_1_0_ARLEN),
      .xt_rsc_1_0_ARADDR(xt_rsc_1_0_ARADDR),
      .xt_rsc_1_0_ARID(xt_rsc_1_0_ARID),
      .xt_rsc_1_0_BREADY(xt_rsc_1_0_BREADY),
      .xt_rsc_1_0_BVALID(xt_rsc_1_0_BVALID),
      .xt_rsc_1_0_BUSER(xt_rsc_1_0_BUSER),
      .xt_rsc_1_0_BRESP(xt_rsc_1_0_BRESP),
      .xt_rsc_1_0_BID(xt_rsc_1_0_BID),
      .xt_rsc_1_0_WREADY(xt_rsc_1_0_WREADY),
      .xt_rsc_1_0_WVALID(xt_rsc_1_0_WVALID),
      .xt_rsc_1_0_WUSER(xt_rsc_1_0_WUSER),
      .xt_rsc_1_0_WLAST(xt_rsc_1_0_WLAST),
      .xt_rsc_1_0_WSTRB(xt_rsc_1_0_WSTRB),
      .xt_rsc_1_0_WDATA(xt_rsc_1_0_WDATA),
      .xt_rsc_1_0_AWREADY(xt_rsc_1_0_AWREADY),
      .xt_rsc_1_0_AWVALID(xt_rsc_1_0_AWVALID),
      .xt_rsc_1_0_AWUSER(xt_rsc_1_0_AWUSER),
      .xt_rsc_1_0_AWREGION(xt_rsc_1_0_AWREGION),
      .xt_rsc_1_0_AWQOS(xt_rsc_1_0_AWQOS),
      .xt_rsc_1_0_AWPROT(xt_rsc_1_0_AWPROT),
      .xt_rsc_1_0_AWCACHE(xt_rsc_1_0_AWCACHE),
      .xt_rsc_1_0_AWLOCK(xt_rsc_1_0_AWLOCK),
      .xt_rsc_1_0_AWBURST(xt_rsc_1_0_AWBURST),
      .xt_rsc_1_0_AWSIZE(xt_rsc_1_0_AWSIZE),
      .xt_rsc_1_0_AWLEN(xt_rsc_1_0_AWLEN),
      .xt_rsc_1_0_AWADDR(xt_rsc_1_0_AWADDR),
      .xt_rsc_1_0_AWID(xt_rsc_1_0_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_0_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_0_i_wen_comp(xt_rsc_1_0_i_wen_comp),
      .xt_rsc_1_0_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_1_0_i_wen_comp_1(xt_rsc_1_0_i_wen_comp_1),
      .xt_rsc_1_0_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_0_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_1_0_i_s_din_mxwt(xt_rsc_1_0_i_s_din_mxwt),
      .xt_rsc_1_0_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_0_i_inst_xt_rsc_1_0_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_1_i peaseNTT_core_xt_rsc_1_1_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_1_s_tdone(xt_rsc_1_1_s_tdone),
      .xt_rsc_1_1_tr_write_done(xt_rsc_1_1_tr_write_done),
      .xt_rsc_1_1_RREADY(xt_rsc_1_1_RREADY),
      .xt_rsc_1_1_RVALID(xt_rsc_1_1_RVALID),
      .xt_rsc_1_1_RUSER(xt_rsc_1_1_RUSER),
      .xt_rsc_1_1_RLAST(xt_rsc_1_1_RLAST),
      .xt_rsc_1_1_RRESP(xt_rsc_1_1_RRESP),
      .xt_rsc_1_1_RDATA(xt_rsc_1_1_RDATA),
      .xt_rsc_1_1_RID(xt_rsc_1_1_RID),
      .xt_rsc_1_1_ARREADY(xt_rsc_1_1_ARREADY),
      .xt_rsc_1_1_ARVALID(xt_rsc_1_1_ARVALID),
      .xt_rsc_1_1_ARUSER(xt_rsc_1_1_ARUSER),
      .xt_rsc_1_1_ARREGION(xt_rsc_1_1_ARREGION),
      .xt_rsc_1_1_ARQOS(xt_rsc_1_1_ARQOS),
      .xt_rsc_1_1_ARPROT(xt_rsc_1_1_ARPROT),
      .xt_rsc_1_1_ARCACHE(xt_rsc_1_1_ARCACHE),
      .xt_rsc_1_1_ARLOCK(xt_rsc_1_1_ARLOCK),
      .xt_rsc_1_1_ARBURST(xt_rsc_1_1_ARBURST),
      .xt_rsc_1_1_ARSIZE(xt_rsc_1_1_ARSIZE),
      .xt_rsc_1_1_ARLEN(xt_rsc_1_1_ARLEN),
      .xt_rsc_1_1_ARADDR(xt_rsc_1_1_ARADDR),
      .xt_rsc_1_1_ARID(xt_rsc_1_1_ARID),
      .xt_rsc_1_1_BREADY(xt_rsc_1_1_BREADY),
      .xt_rsc_1_1_BVALID(xt_rsc_1_1_BVALID),
      .xt_rsc_1_1_BUSER(xt_rsc_1_1_BUSER),
      .xt_rsc_1_1_BRESP(xt_rsc_1_1_BRESP),
      .xt_rsc_1_1_BID(xt_rsc_1_1_BID),
      .xt_rsc_1_1_WREADY(xt_rsc_1_1_WREADY),
      .xt_rsc_1_1_WVALID(xt_rsc_1_1_WVALID),
      .xt_rsc_1_1_WUSER(xt_rsc_1_1_WUSER),
      .xt_rsc_1_1_WLAST(xt_rsc_1_1_WLAST),
      .xt_rsc_1_1_WSTRB(xt_rsc_1_1_WSTRB),
      .xt_rsc_1_1_WDATA(xt_rsc_1_1_WDATA),
      .xt_rsc_1_1_AWREADY(xt_rsc_1_1_AWREADY),
      .xt_rsc_1_1_AWVALID(xt_rsc_1_1_AWVALID),
      .xt_rsc_1_1_AWUSER(xt_rsc_1_1_AWUSER),
      .xt_rsc_1_1_AWREGION(xt_rsc_1_1_AWREGION),
      .xt_rsc_1_1_AWQOS(xt_rsc_1_1_AWQOS),
      .xt_rsc_1_1_AWPROT(xt_rsc_1_1_AWPROT),
      .xt_rsc_1_1_AWCACHE(xt_rsc_1_1_AWCACHE),
      .xt_rsc_1_1_AWLOCK(xt_rsc_1_1_AWLOCK),
      .xt_rsc_1_1_AWBURST(xt_rsc_1_1_AWBURST),
      .xt_rsc_1_1_AWSIZE(xt_rsc_1_1_AWSIZE),
      .xt_rsc_1_1_AWLEN(xt_rsc_1_1_AWLEN),
      .xt_rsc_1_1_AWADDR(xt_rsc_1_1_AWADDR),
      .xt_rsc_1_1_AWID(xt_rsc_1_1_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_1_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_1_i_wen_comp(xt_rsc_1_1_i_wen_comp),
      .xt_rsc_1_1_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_1_1_i_wen_comp_1(xt_rsc_1_1_i_wen_comp_1),
      .xt_rsc_1_1_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_1_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_1_1_i_s_din_mxwt(xt_rsc_1_1_i_s_din_mxwt),
      .xt_rsc_1_1_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_1_i_inst_xt_rsc_1_1_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_2_i peaseNTT_core_xt_rsc_1_2_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_2_s_tdone(xt_rsc_1_2_s_tdone),
      .xt_rsc_1_2_tr_write_done(xt_rsc_1_2_tr_write_done),
      .xt_rsc_1_2_RREADY(xt_rsc_1_2_RREADY),
      .xt_rsc_1_2_RVALID(xt_rsc_1_2_RVALID),
      .xt_rsc_1_2_RUSER(xt_rsc_1_2_RUSER),
      .xt_rsc_1_2_RLAST(xt_rsc_1_2_RLAST),
      .xt_rsc_1_2_RRESP(xt_rsc_1_2_RRESP),
      .xt_rsc_1_2_RDATA(xt_rsc_1_2_RDATA),
      .xt_rsc_1_2_RID(xt_rsc_1_2_RID),
      .xt_rsc_1_2_ARREADY(xt_rsc_1_2_ARREADY),
      .xt_rsc_1_2_ARVALID(xt_rsc_1_2_ARVALID),
      .xt_rsc_1_2_ARUSER(xt_rsc_1_2_ARUSER),
      .xt_rsc_1_2_ARREGION(xt_rsc_1_2_ARREGION),
      .xt_rsc_1_2_ARQOS(xt_rsc_1_2_ARQOS),
      .xt_rsc_1_2_ARPROT(xt_rsc_1_2_ARPROT),
      .xt_rsc_1_2_ARCACHE(xt_rsc_1_2_ARCACHE),
      .xt_rsc_1_2_ARLOCK(xt_rsc_1_2_ARLOCK),
      .xt_rsc_1_2_ARBURST(xt_rsc_1_2_ARBURST),
      .xt_rsc_1_2_ARSIZE(xt_rsc_1_2_ARSIZE),
      .xt_rsc_1_2_ARLEN(xt_rsc_1_2_ARLEN),
      .xt_rsc_1_2_ARADDR(xt_rsc_1_2_ARADDR),
      .xt_rsc_1_2_ARID(xt_rsc_1_2_ARID),
      .xt_rsc_1_2_BREADY(xt_rsc_1_2_BREADY),
      .xt_rsc_1_2_BVALID(xt_rsc_1_2_BVALID),
      .xt_rsc_1_2_BUSER(xt_rsc_1_2_BUSER),
      .xt_rsc_1_2_BRESP(xt_rsc_1_2_BRESP),
      .xt_rsc_1_2_BID(xt_rsc_1_2_BID),
      .xt_rsc_1_2_WREADY(xt_rsc_1_2_WREADY),
      .xt_rsc_1_2_WVALID(xt_rsc_1_2_WVALID),
      .xt_rsc_1_2_WUSER(xt_rsc_1_2_WUSER),
      .xt_rsc_1_2_WLAST(xt_rsc_1_2_WLAST),
      .xt_rsc_1_2_WSTRB(xt_rsc_1_2_WSTRB),
      .xt_rsc_1_2_WDATA(xt_rsc_1_2_WDATA),
      .xt_rsc_1_2_AWREADY(xt_rsc_1_2_AWREADY),
      .xt_rsc_1_2_AWVALID(xt_rsc_1_2_AWVALID),
      .xt_rsc_1_2_AWUSER(xt_rsc_1_2_AWUSER),
      .xt_rsc_1_2_AWREGION(xt_rsc_1_2_AWREGION),
      .xt_rsc_1_2_AWQOS(xt_rsc_1_2_AWQOS),
      .xt_rsc_1_2_AWPROT(xt_rsc_1_2_AWPROT),
      .xt_rsc_1_2_AWCACHE(xt_rsc_1_2_AWCACHE),
      .xt_rsc_1_2_AWLOCK(xt_rsc_1_2_AWLOCK),
      .xt_rsc_1_2_AWBURST(xt_rsc_1_2_AWBURST),
      .xt_rsc_1_2_AWSIZE(xt_rsc_1_2_AWSIZE),
      .xt_rsc_1_2_AWLEN(xt_rsc_1_2_AWLEN),
      .xt_rsc_1_2_AWADDR(xt_rsc_1_2_AWADDR),
      .xt_rsc_1_2_AWID(xt_rsc_1_2_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_2_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_2_i_wen_comp(xt_rsc_1_2_i_wen_comp),
      .xt_rsc_1_2_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_1_2_i_wen_comp_1(xt_rsc_1_2_i_wen_comp_1),
      .xt_rsc_1_2_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_2_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_1_2_i_s_din_mxwt(xt_rsc_1_2_i_s_din_mxwt),
      .xt_rsc_1_2_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_2_i_inst_xt_rsc_1_2_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_3_i peaseNTT_core_xt_rsc_1_3_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_3_s_tdone(xt_rsc_1_3_s_tdone),
      .xt_rsc_1_3_tr_write_done(xt_rsc_1_3_tr_write_done),
      .xt_rsc_1_3_RREADY(xt_rsc_1_3_RREADY),
      .xt_rsc_1_3_RVALID(xt_rsc_1_3_RVALID),
      .xt_rsc_1_3_RUSER(xt_rsc_1_3_RUSER),
      .xt_rsc_1_3_RLAST(xt_rsc_1_3_RLAST),
      .xt_rsc_1_3_RRESP(xt_rsc_1_3_RRESP),
      .xt_rsc_1_3_RDATA(xt_rsc_1_3_RDATA),
      .xt_rsc_1_3_RID(xt_rsc_1_3_RID),
      .xt_rsc_1_3_ARREADY(xt_rsc_1_3_ARREADY),
      .xt_rsc_1_3_ARVALID(xt_rsc_1_3_ARVALID),
      .xt_rsc_1_3_ARUSER(xt_rsc_1_3_ARUSER),
      .xt_rsc_1_3_ARREGION(xt_rsc_1_3_ARREGION),
      .xt_rsc_1_3_ARQOS(xt_rsc_1_3_ARQOS),
      .xt_rsc_1_3_ARPROT(xt_rsc_1_3_ARPROT),
      .xt_rsc_1_3_ARCACHE(xt_rsc_1_3_ARCACHE),
      .xt_rsc_1_3_ARLOCK(xt_rsc_1_3_ARLOCK),
      .xt_rsc_1_3_ARBURST(xt_rsc_1_3_ARBURST),
      .xt_rsc_1_3_ARSIZE(xt_rsc_1_3_ARSIZE),
      .xt_rsc_1_3_ARLEN(xt_rsc_1_3_ARLEN),
      .xt_rsc_1_3_ARADDR(xt_rsc_1_3_ARADDR),
      .xt_rsc_1_3_ARID(xt_rsc_1_3_ARID),
      .xt_rsc_1_3_BREADY(xt_rsc_1_3_BREADY),
      .xt_rsc_1_3_BVALID(xt_rsc_1_3_BVALID),
      .xt_rsc_1_3_BUSER(xt_rsc_1_3_BUSER),
      .xt_rsc_1_3_BRESP(xt_rsc_1_3_BRESP),
      .xt_rsc_1_3_BID(xt_rsc_1_3_BID),
      .xt_rsc_1_3_WREADY(xt_rsc_1_3_WREADY),
      .xt_rsc_1_3_WVALID(xt_rsc_1_3_WVALID),
      .xt_rsc_1_3_WUSER(xt_rsc_1_3_WUSER),
      .xt_rsc_1_3_WLAST(xt_rsc_1_3_WLAST),
      .xt_rsc_1_3_WSTRB(xt_rsc_1_3_WSTRB),
      .xt_rsc_1_3_WDATA(xt_rsc_1_3_WDATA),
      .xt_rsc_1_3_AWREADY(xt_rsc_1_3_AWREADY),
      .xt_rsc_1_3_AWVALID(xt_rsc_1_3_AWVALID),
      .xt_rsc_1_3_AWUSER(xt_rsc_1_3_AWUSER),
      .xt_rsc_1_3_AWREGION(xt_rsc_1_3_AWREGION),
      .xt_rsc_1_3_AWQOS(xt_rsc_1_3_AWQOS),
      .xt_rsc_1_3_AWPROT(xt_rsc_1_3_AWPROT),
      .xt_rsc_1_3_AWCACHE(xt_rsc_1_3_AWCACHE),
      .xt_rsc_1_3_AWLOCK(xt_rsc_1_3_AWLOCK),
      .xt_rsc_1_3_AWBURST(xt_rsc_1_3_AWBURST),
      .xt_rsc_1_3_AWSIZE(xt_rsc_1_3_AWSIZE),
      .xt_rsc_1_3_AWLEN(xt_rsc_1_3_AWLEN),
      .xt_rsc_1_3_AWADDR(xt_rsc_1_3_AWADDR),
      .xt_rsc_1_3_AWID(xt_rsc_1_3_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_3_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_3_i_wen_comp(xt_rsc_1_3_i_wen_comp),
      .xt_rsc_1_3_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_1_3_i_wen_comp_1(xt_rsc_1_3_i_wen_comp_1),
      .xt_rsc_1_3_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_3_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_1_3_i_s_din_mxwt(xt_rsc_1_3_i_s_din_mxwt),
      .xt_rsc_1_3_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_3_i_inst_xt_rsc_1_3_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_4_i peaseNTT_core_xt_rsc_1_4_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_4_s_tdone(xt_rsc_1_4_s_tdone),
      .xt_rsc_1_4_tr_write_done(xt_rsc_1_4_tr_write_done),
      .xt_rsc_1_4_RREADY(xt_rsc_1_4_RREADY),
      .xt_rsc_1_4_RVALID(xt_rsc_1_4_RVALID),
      .xt_rsc_1_4_RUSER(xt_rsc_1_4_RUSER),
      .xt_rsc_1_4_RLAST(xt_rsc_1_4_RLAST),
      .xt_rsc_1_4_RRESP(xt_rsc_1_4_RRESP),
      .xt_rsc_1_4_RDATA(xt_rsc_1_4_RDATA),
      .xt_rsc_1_4_RID(xt_rsc_1_4_RID),
      .xt_rsc_1_4_ARREADY(xt_rsc_1_4_ARREADY),
      .xt_rsc_1_4_ARVALID(xt_rsc_1_4_ARVALID),
      .xt_rsc_1_4_ARUSER(xt_rsc_1_4_ARUSER),
      .xt_rsc_1_4_ARREGION(xt_rsc_1_4_ARREGION),
      .xt_rsc_1_4_ARQOS(xt_rsc_1_4_ARQOS),
      .xt_rsc_1_4_ARPROT(xt_rsc_1_4_ARPROT),
      .xt_rsc_1_4_ARCACHE(xt_rsc_1_4_ARCACHE),
      .xt_rsc_1_4_ARLOCK(xt_rsc_1_4_ARLOCK),
      .xt_rsc_1_4_ARBURST(xt_rsc_1_4_ARBURST),
      .xt_rsc_1_4_ARSIZE(xt_rsc_1_4_ARSIZE),
      .xt_rsc_1_4_ARLEN(xt_rsc_1_4_ARLEN),
      .xt_rsc_1_4_ARADDR(xt_rsc_1_4_ARADDR),
      .xt_rsc_1_4_ARID(xt_rsc_1_4_ARID),
      .xt_rsc_1_4_BREADY(xt_rsc_1_4_BREADY),
      .xt_rsc_1_4_BVALID(xt_rsc_1_4_BVALID),
      .xt_rsc_1_4_BUSER(xt_rsc_1_4_BUSER),
      .xt_rsc_1_4_BRESP(xt_rsc_1_4_BRESP),
      .xt_rsc_1_4_BID(xt_rsc_1_4_BID),
      .xt_rsc_1_4_WREADY(xt_rsc_1_4_WREADY),
      .xt_rsc_1_4_WVALID(xt_rsc_1_4_WVALID),
      .xt_rsc_1_4_WUSER(xt_rsc_1_4_WUSER),
      .xt_rsc_1_4_WLAST(xt_rsc_1_4_WLAST),
      .xt_rsc_1_4_WSTRB(xt_rsc_1_4_WSTRB),
      .xt_rsc_1_4_WDATA(xt_rsc_1_4_WDATA),
      .xt_rsc_1_4_AWREADY(xt_rsc_1_4_AWREADY),
      .xt_rsc_1_4_AWVALID(xt_rsc_1_4_AWVALID),
      .xt_rsc_1_4_AWUSER(xt_rsc_1_4_AWUSER),
      .xt_rsc_1_4_AWREGION(xt_rsc_1_4_AWREGION),
      .xt_rsc_1_4_AWQOS(xt_rsc_1_4_AWQOS),
      .xt_rsc_1_4_AWPROT(xt_rsc_1_4_AWPROT),
      .xt_rsc_1_4_AWCACHE(xt_rsc_1_4_AWCACHE),
      .xt_rsc_1_4_AWLOCK(xt_rsc_1_4_AWLOCK),
      .xt_rsc_1_4_AWBURST(xt_rsc_1_4_AWBURST),
      .xt_rsc_1_4_AWSIZE(xt_rsc_1_4_AWSIZE),
      .xt_rsc_1_4_AWLEN(xt_rsc_1_4_AWLEN),
      .xt_rsc_1_4_AWADDR(xt_rsc_1_4_AWADDR),
      .xt_rsc_1_4_AWID(xt_rsc_1_4_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_4_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_4_i_wen_comp(xt_rsc_1_4_i_wen_comp),
      .xt_rsc_1_4_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_1_4_i_wen_comp_1(xt_rsc_1_4_i_wen_comp_1),
      .xt_rsc_1_4_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_4_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_1_4_i_s_din_mxwt(xt_rsc_1_4_i_s_din_mxwt),
      .xt_rsc_1_4_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_4_i_inst_xt_rsc_1_4_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_5_i peaseNTT_core_xt_rsc_1_5_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_5_s_tdone(xt_rsc_1_5_s_tdone),
      .xt_rsc_1_5_tr_write_done(xt_rsc_1_5_tr_write_done),
      .xt_rsc_1_5_RREADY(xt_rsc_1_5_RREADY),
      .xt_rsc_1_5_RVALID(xt_rsc_1_5_RVALID),
      .xt_rsc_1_5_RUSER(xt_rsc_1_5_RUSER),
      .xt_rsc_1_5_RLAST(xt_rsc_1_5_RLAST),
      .xt_rsc_1_5_RRESP(xt_rsc_1_5_RRESP),
      .xt_rsc_1_5_RDATA(xt_rsc_1_5_RDATA),
      .xt_rsc_1_5_RID(xt_rsc_1_5_RID),
      .xt_rsc_1_5_ARREADY(xt_rsc_1_5_ARREADY),
      .xt_rsc_1_5_ARVALID(xt_rsc_1_5_ARVALID),
      .xt_rsc_1_5_ARUSER(xt_rsc_1_5_ARUSER),
      .xt_rsc_1_5_ARREGION(xt_rsc_1_5_ARREGION),
      .xt_rsc_1_5_ARQOS(xt_rsc_1_5_ARQOS),
      .xt_rsc_1_5_ARPROT(xt_rsc_1_5_ARPROT),
      .xt_rsc_1_5_ARCACHE(xt_rsc_1_5_ARCACHE),
      .xt_rsc_1_5_ARLOCK(xt_rsc_1_5_ARLOCK),
      .xt_rsc_1_5_ARBURST(xt_rsc_1_5_ARBURST),
      .xt_rsc_1_5_ARSIZE(xt_rsc_1_5_ARSIZE),
      .xt_rsc_1_5_ARLEN(xt_rsc_1_5_ARLEN),
      .xt_rsc_1_5_ARADDR(xt_rsc_1_5_ARADDR),
      .xt_rsc_1_5_ARID(xt_rsc_1_5_ARID),
      .xt_rsc_1_5_BREADY(xt_rsc_1_5_BREADY),
      .xt_rsc_1_5_BVALID(xt_rsc_1_5_BVALID),
      .xt_rsc_1_5_BUSER(xt_rsc_1_5_BUSER),
      .xt_rsc_1_5_BRESP(xt_rsc_1_5_BRESP),
      .xt_rsc_1_5_BID(xt_rsc_1_5_BID),
      .xt_rsc_1_5_WREADY(xt_rsc_1_5_WREADY),
      .xt_rsc_1_5_WVALID(xt_rsc_1_5_WVALID),
      .xt_rsc_1_5_WUSER(xt_rsc_1_5_WUSER),
      .xt_rsc_1_5_WLAST(xt_rsc_1_5_WLAST),
      .xt_rsc_1_5_WSTRB(xt_rsc_1_5_WSTRB),
      .xt_rsc_1_5_WDATA(xt_rsc_1_5_WDATA),
      .xt_rsc_1_5_AWREADY(xt_rsc_1_5_AWREADY),
      .xt_rsc_1_5_AWVALID(xt_rsc_1_5_AWVALID),
      .xt_rsc_1_5_AWUSER(xt_rsc_1_5_AWUSER),
      .xt_rsc_1_5_AWREGION(xt_rsc_1_5_AWREGION),
      .xt_rsc_1_5_AWQOS(xt_rsc_1_5_AWQOS),
      .xt_rsc_1_5_AWPROT(xt_rsc_1_5_AWPROT),
      .xt_rsc_1_5_AWCACHE(xt_rsc_1_5_AWCACHE),
      .xt_rsc_1_5_AWLOCK(xt_rsc_1_5_AWLOCK),
      .xt_rsc_1_5_AWBURST(xt_rsc_1_5_AWBURST),
      .xt_rsc_1_5_AWSIZE(xt_rsc_1_5_AWSIZE),
      .xt_rsc_1_5_AWLEN(xt_rsc_1_5_AWLEN),
      .xt_rsc_1_5_AWADDR(xt_rsc_1_5_AWADDR),
      .xt_rsc_1_5_AWID(xt_rsc_1_5_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_5_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_5_i_wen_comp(xt_rsc_1_5_i_wen_comp),
      .xt_rsc_1_5_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_1_5_i_wen_comp_1(xt_rsc_1_5_i_wen_comp_1),
      .xt_rsc_1_5_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_5_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_1_5_i_s_din_mxwt(xt_rsc_1_5_i_s_din_mxwt),
      .xt_rsc_1_5_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_5_i_inst_xt_rsc_1_5_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_6_i peaseNTT_core_xt_rsc_1_6_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_6_s_tdone(xt_rsc_1_6_s_tdone),
      .xt_rsc_1_6_tr_write_done(xt_rsc_1_6_tr_write_done),
      .xt_rsc_1_6_RREADY(xt_rsc_1_6_RREADY),
      .xt_rsc_1_6_RVALID(xt_rsc_1_6_RVALID),
      .xt_rsc_1_6_RUSER(xt_rsc_1_6_RUSER),
      .xt_rsc_1_6_RLAST(xt_rsc_1_6_RLAST),
      .xt_rsc_1_6_RRESP(xt_rsc_1_6_RRESP),
      .xt_rsc_1_6_RDATA(xt_rsc_1_6_RDATA),
      .xt_rsc_1_6_RID(xt_rsc_1_6_RID),
      .xt_rsc_1_6_ARREADY(xt_rsc_1_6_ARREADY),
      .xt_rsc_1_6_ARVALID(xt_rsc_1_6_ARVALID),
      .xt_rsc_1_6_ARUSER(xt_rsc_1_6_ARUSER),
      .xt_rsc_1_6_ARREGION(xt_rsc_1_6_ARREGION),
      .xt_rsc_1_6_ARQOS(xt_rsc_1_6_ARQOS),
      .xt_rsc_1_6_ARPROT(xt_rsc_1_6_ARPROT),
      .xt_rsc_1_6_ARCACHE(xt_rsc_1_6_ARCACHE),
      .xt_rsc_1_6_ARLOCK(xt_rsc_1_6_ARLOCK),
      .xt_rsc_1_6_ARBURST(xt_rsc_1_6_ARBURST),
      .xt_rsc_1_6_ARSIZE(xt_rsc_1_6_ARSIZE),
      .xt_rsc_1_6_ARLEN(xt_rsc_1_6_ARLEN),
      .xt_rsc_1_6_ARADDR(xt_rsc_1_6_ARADDR),
      .xt_rsc_1_6_ARID(xt_rsc_1_6_ARID),
      .xt_rsc_1_6_BREADY(xt_rsc_1_6_BREADY),
      .xt_rsc_1_6_BVALID(xt_rsc_1_6_BVALID),
      .xt_rsc_1_6_BUSER(xt_rsc_1_6_BUSER),
      .xt_rsc_1_6_BRESP(xt_rsc_1_6_BRESP),
      .xt_rsc_1_6_BID(xt_rsc_1_6_BID),
      .xt_rsc_1_6_WREADY(xt_rsc_1_6_WREADY),
      .xt_rsc_1_6_WVALID(xt_rsc_1_6_WVALID),
      .xt_rsc_1_6_WUSER(xt_rsc_1_6_WUSER),
      .xt_rsc_1_6_WLAST(xt_rsc_1_6_WLAST),
      .xt_rsc_1_6_WSTRB(xt_rsc_1_6_WSTRB),
      .xt_rsc_1_6_WDATA(xt_rsc_1_6_WDATA),
      .xt_rsc_1_6_AWREADY(xt_rsc_1_6_AWREADY),
      .xt_rsc_1_6_AWVALID(xt_rsc_1_6_AWVALID),
      .xt_rsc_1_6_AWUSER(xt_rsc_1_6_AWUSER),
      .xt_rsc_1_6_AWREGION(xt_rsc_1_6_AWREGION),
      .xt_rsc_1_6_AWQOS(xt_rsc_1_6_AWQOS),
      .xt_rsc_1_6_AWPROT(xt_rsc_1_6_AWPROT),
      .xt_rsc_1_6_AWCACHE(xt_rsc_1_6_AWCACHE),
      .xt_rsc_1_6_AWLOCK(xt_rsc_1_6_AWLOCK),
      .xt_rsc_1_6_AWBURST(xt_rsc_1_6_AWBURST),
      .xt_rsc_1_6_AWSIZE(xt_rsc_1_6_AWSIZE),
      .xt_rsc_1_6_AWLEN(xt_rsc_1_6_AWLEN),
      .xt_rsc_1_6_AWADDR(xt_rsc_1_6_AWADDR),
      .xt_rsc_1_6_AWID(xt_rsc_1_6_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_6_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_6_i_wen_comp(xt_rsc_1_6_i_wen_comp),
      .xt_rsc_1_6_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_1_6_i_wen_comp_1(xt_rsc_1_6_i_wen_comp_1),
      .xt_rsc_1_6_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_6_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_1_6_i_s_din_mxwt(xt_rsc_1_6_i_s_din_mxwt),
      .xt_rsc_1_6_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_6_i_inst_xt_rsc_1_6_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_7_i peaseNTT_core_xt_rsc_1_7_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_7_s_tdone(xt_rsc_1_7_s_tdone),
      .xt_rsc_1_7_tr_write_done(xt_rsc_1_7_tr_write_done),
      .xt_rsc_1_7_RREADY(xt_rsc_1_7_RREADY),
      .xt_rsc_1_7_RVALID(xt_rsc_1_7_RVALID),
      .xt_rsc_1_7_RUSER(xt_rsc_1_7_RUSER),
      .xt_rsc_1_7_RLAST(xt_rsc_1_7_RLAST),
      .xt_rsc_1_7_RRESP(xt_rsc_1_7_RRESP),
      .xt_rsc_1_7_RDATA(xt_rsc_1_7_RDATA),
      .xt_rsc_1_7_RID(xt_rsc_1_7_RID),
      .xt_rsc_1_7_ARREADY(xt_rsc_1_7_ARREADY),
      .xt_rsc_1_7_ARVALID(xt_rsc_1_7_ARVALID),
      .xt_rsc_1_7_ARUSER(xt_rsc_1_7_ARUSER),
      .xt_rsc_1_7_ARREGION(xt_rsc_1_7_ARREGION),
      .xt_rsc_1_7_ARQOS(xt_rsc_1_7_ARQOS),
      .xt_rsc_1_7_ARPROT(xt_rsc_1_7_ARPROT),
      .xt_rsc_1_7_ARCACHE(xt_rsc_1_7_ARCACHE),
      .xt_rsc_1_7_ARLOCK(xt_rsc_1_7_ARLOCK),
      .xt_rsc_1_7_ARBURST(xt_rsc_1_7_ARBURST),
      .xt_rsc_1_7_ARSIZE(xt_rsc_1_7_ARSIZE),
      .xt_rsc_1_7_ARLEN(xt_rsc_1_7_ARLEN),
      .xt_rsc_1_7_ARADDR(xt_rsc_1_7_ARADDR),
      .xt_rsc_1_7_ARID(xt_rsc_1_7_ARID),
      .xt_rsc_1_7_BREADY(xt_rsc_1_7_BREADY),
      .xt_rsc_1_7_BVALID(xt_rsc_1_7_BVALID),
      .xt_rsc_1_7_BUSER(xt_rsc_1_7_BUSER),
      .xt_rsc_1_7_BRESP(xt_rsc_1_7_BRESP),
      .xt_rsc_1_7_BID(xt_rsc_1_7_BID),
      .xt_rsc_1_7_WREADY(xt_rsc_1_7_WREADY),
      .xt_rsc_1_7_WVALID(xt_rsc_1_7_WVALID),
      .xt_rsc_1_7_WUSER(xt_rsc_1_7_WUSER),
      .xt_rsc_1_7_WLAST(xt_rsc_1_7_WLAST),
      .xt_rsc_1_7_WSTRB(xt_rsc_1_7_WSTRB),
      .xt_rsc_1_7_WDATA(xt_rsc_1_7_WDATA),
      .xt_rsc_1_7_AWREADY(xt_rsc_1_7_AWREADY),
      .xt_rsc_1_7_AWVALID(xt_rsc_1_7_AWVALID),
      .xt_rsc_1_7_AWUSER(xt_rsc_1_7_AWUSER),
      .xt_rsc_1_7_AWREGION(xt_rsc_1_7_AWREGION),
      .xt_rsc_1_7_AWQOS(xt_rsc_1_7_AWQOS),
      .xt_rsc_1_7_AWPROT(xt_rsc_1_7_AWPROT),
      .xt_rsc_1_7_AWCACHE(xt_rsc_1_7_AWCACHE),
      .xt_rsc_1_7_AWLOCK(xt_rsc_1_7_AWLOCK),
      .xt_rsc_1_7_AWBURST(xt_rsc_1_7_AWBURST),
      .xt_rsc_1_7_AWSIZE(xt_rsc_1_7_AWSIZE),
      .xt_rsc_1_7_AWLEN(xt_rsc_1_7_AWLEN),
      .xt_rsc_1_7_AWADDR(xt_rsc_1_7_AWADDR),
      .xt_rsc_1_7_AWID(xt_rsc_1_7_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_7_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_7_i_wen_comp(xt_rsc_1_7_i_wen_comp),
      .xt_rsc_1_7_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_1_7_i_wen_comp_1(xt_rsc_1_7_i_wen_comp_1),
      .xt_rsc_1_7_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_7_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_1_7_i_s_din_mxwt(xt_rsc_1_7_i_s_din_mxwt),
      .xt_rsc_1_7_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_7_i_inst_xt_rsc_1_7_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_8_i peaseNTT_core_xt_rsc_1_8_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_8_s_tdone(xt_rsc_1_8_s_tdone),
      .xt_rsc_1_8_tr_write_done(xt_rsc_1_8_tr_write_done),
      .xt_rsc_1_8_RREADY(xt_rsc_1_8_RREADY),
      .xt_rsc_1_8_RVALID(xt_rsc_1_8_RVALID),
      .xt_rsc_1_8_RUSER(xt_rsc_1_8_RUSER),
      .xt_rsc_1_8_RLAST(xt_rsc_1_8_RLAST),
      .xt_rsc_1_8_RRESP(xt_rsc_1_8_RRESP),
      .xt_rsc_1_8_RDATA(xt_rsc_1_8_RDATA),
      .xt_rsc_1_8_RID(xt_rsc_1_8_RID),
      .xt_rsc_1_8_ARREADY(xt_rsc_1_8_ARREADY),
      .xt_rsc_1_8_ARVALID(xt_rsc_1_8_ARVALID),
      .xt_rsc_1_8_ARUSER(xt_rsc_1_8_ARUSER),
      .xt_rsc_1_8_ARREGION(xt_rsc_1_8_ARREGION),
      .xt_rsc_1_8_ARQOS(xt_rsc_1_8_ARQOS),
      .xt_rsc_1_8_ARPROT(xt_rsc_1_8_ARPROT),
      .xt_rsc_1_8_ARCACHE(xt_rsc_1_8_ARCACHE),
      .xt_rsc_1_8_ARLOCK(xt_rsc_1_8_ARLOCK),
      .xt_rsc_1_8_ARBURST(xt_rsc_1_8_ARBURST),
      .xt_rsc_1_8_ARSIZE(xt_rsc_1_8_ARSIZE),
      .xt_rsc_1_8_ARLEN(xt_rsc_1_8_ARLEN),
      .xt_rsc_1_8_ARADDR(xt_rsc_1_8_ARADDR),
      .xt_rsc_1_8_ARID(xt_rsc_1_8_ARID),
      .xt_rsc_1_8_BREADY(xt_rsc_1_8_BREADY),
      .xt_rsc_1_8_BVALID(xt_rsc_1_8_BVALID),
      .xt_rsc_1_8_BUSER(xt_rsc_1_8_BUSER),
      .xt_rsc_1_8_BRESP(xt_rsc_1_8_BRESP),
      .xt_rsc_1_8_BID(xt_rsc_1_8_BID),
      .xt_rsc_1_8_WREADY(xt_rsc_1_8_WREADY),
      .xt_rsc_1_8_WVALID(xt_rsc_1_8_WVALID),
      .xt_rsc_1_8_WUSER(xt_rsc_1_8_WUSER),
      .xt_rsc_1_8_WLAST(xt_rsc_1_8_WLAST),
      .xt_rsc_1_8_WSTRB(xt_rsc_1_8_WSTRB),
      .xt_rsc_1_8_WDATA(xt_rsc_1_8_WDATA),
      .xt_rsc_1_8_AWREADY(xt_rsc_1_8_AWREADY),
      .xt_rsc_1_8_AWVALID(xt_rsc_1_8_AWVALID),
      .xt_rsc_1_8_AWUSER(xt_rsc_1_8_AWUSER),
      .xt_rsc_1_8_AWREGION(xt_rsc_1_8_AWREGION),
      .xt_rsc_1_8_AWQOS(xt_rsc_1_8_AWQOS),
      .xt_rsc_1_8_AWPROT(xt_rsc_1_8_AWPROT),
      .xt_rsc_1_8_AWCACHE(xt_rsc_1_8_AWCACHE),
      .xt_rsc_1_8_AWLOCK(xt_rsc_1_8_AWLOCK),
      .xt_rsc_1_8_AWBURST(xt_rsc_1_8_AWBURST),
      .xt_rsc_1_8_AWSIZE(xt_rsc_1_8_AWSIZE),
      .xt_rsc_1_8_AWLEN(xt_rsc_1_8_AWLEN),
      .xt_rsc_1_8_AWADDR(xt_rsc_1_8_AWADDR),
      .xt_rsc_1_8_AWID(xt_rsc_1_8_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_8_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_8_i_wen_comp(xt_rsc_1_8_i_wen_comp),
      .xt_rsc_1_8_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_1_8_i_wen_comp_1(xt_rsc_1_8_i_wen_comp_1),
      .xt_rsc_1_8_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_8_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_1_8_i_s_din_mxwt(xt_rsc_1_8_i_s_din_mxwt),
      .xt_rsc_1_8_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_8_i_inst_xt_rsc_1_8_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_9_i peaseNTT_core_xt_rsc_1_9_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_9_s_tdone(xt_rsc_1_9_s_tdone),
      .xt_rsc_1_9_tr_write_done(xt_rsc_1_9_tr_write_done),
      .xt_rsc_1_9_RREADY(xt_rsc_1_9_RREADY),
      .xt_rsc_1_9_RVALID(xt_rsc_1_9_RVALID),
      .xt_rsc_1_9_RUSER(xt_rsc_1_9_RUSER),
      .xt_rsc_1_9_RLAST(xt_rsc_1_9_RLAST),
      .xt_rsc_1_9_RRESP(xt_rsc_1_9_RRESP),
      .xt_rsc_1_9_RDATA(xt_rsc_1_9_RDATA),
      .xt_rsc_1_9_RID(xt_rsc_1_9_RID),
      .xt_rsc_1_9_ARREADY(xt_rsc_1_9_ARREADY),
      .xt_rsc_1_9_ARVALID(xt_rsc_1_9_ARVALID),
      .xt_rsc_1_9_ARUSER(xt_rsc_1_9_ARUSER),
      .xt_rsc_1_9_ARREGION(xt_rsc_1_9_ARREGION),
      .xt_rsc_1_9_ARQOS(xt_rsc_1_9_ARQOS),
      .xt_rsc_1_9_ARPROT(xt_rsc_1_9_ARPROT),
      .xt_rsc_1_9_ARCACHE(xt_rsc_1_9_ARCACHE),
      .xt_rsc_1_9_ARLOCK(xt_rsc_1_9_ARLOCK),
      .xt_rsc_1_9_ARBURST(xt_rsc_1_9_ARBURST),
      .xt_rsc_1_9_ARSIZE(xt_rsc_1_9_ARSIZE),
      .xt_rsc_1_9_ARLEN(xt_rsc_1_9_ARLEN),
      .xt_rsc_1_9_ARADDR(xt_rsc_1_9_ARADDR),
      .xt_rsc_1_9_ARID(xt_rsc_1_9_ARID),
      .xt_rsc_1_9_BREADY(xt_rsc_1_9_BREADY),
      .xt_rsc_1_9_BVALID(xt_rsc_1_9_BVALID),
      .xt_rsc_1_9_BUSER(xt_rsc_1_9_BUSER),
      .xt_rsc_1_9_BRESP(xt_rsc_1_9_BRESP),
      .xt_rsc_1_9_BID(xt_rsc_1_9_BID),
      .xt_rsc_1_9_WREADY(xt_rsc_1_9_WREADY),
      .xt_rsc_1_9_WVALID(xt_rsc_1_9_WVALID),
      .xt_rsc_1_9_WUSER(xt_rsc_1_9_WUSER),
      .xt_rsc_1_9_WLAST(xt_rsc_1_9_WLAST),
      .xt_rsc_1_9_WSTRB(xt_rsc_1_9_WSTRB),
      .xt_rsc_1_9_WDATA(xt_rsc_1_9_WDATA),
      .xt_rsc_1_9_AWREADY(xt_rsc_1_9_AWREADY),
      .xt_rsc_1_9_AWVALID(xt_rsc_1_9_AWVALID),
      .xt_rsc_1_9_AWUSER(xt_rsc_1_9_AWUSER),
      .xt_rsc_1_9_AWREGION(xt_rsc_1_9_AWREGION),
      .xt_rsc_1_9_AWQOS(xt_rsc_1_9_AWQOS),
      .xt_rsc_1_9_AWPROT(xt_rsc_1_9_AWPROT),
      .xt_rsc_1_9_AWCACHE(xt_rsc_1_9_AWCACHE),
      .xt_rsc_1_9_AWLOCK(xt_rsc_1_9_AWLOCK),
      .xt_rsc_1_9_AWBURST(xt_rsc_1_9_AWBURST),
      .xt_rsc_1_9_AWSIZE(xt_rsc_1_9_AWSIZE),
      .xt_rsc_1_9_AWLEN(xt_rsc_1_9_AWLEN),
      .xt_rsc_1_9_AWADDR(xt_rsc_1_9_AWADDR),
      .xt_rsc_1_9_AWID(xt_rsc_1_9_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_9_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_9_i_wen_comp(xt_rsc_1_9_i_wen_comp),
      .xt_rsc_1_9_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_1_9_i_wen_comp_1(xt_rsc_1_9_i_wen_comp_1),
      .xt_rsc_1_9_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_9_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_1_9_i_s_din_mxwt(xt_rsc_1_9_i_s_din_mxwt),
      .xt_rsc_1_9_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_9_i_inst_xt_rsc_1_9_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_10_i peaseNTT_core_xt_rsc_1_10_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_10_s_tdone(xt_rsc_1_10_s_tdone),
      .xt_rsc_1_10_tr_write_done(xt_rsc_1_10_tr_write_done),
      .xt_rsc_1_10_RREADY(xt_rsc_1_10_RREADY),
      .xt_rsc_1_10_RVALID(xt_rsc_1_10_RVALID),
      .xt_rsc_1_10_RUSER(xt_rsc_1_10_RUSER),
      .xt_rsc_1_10_RLAST(xt_rsc_1_10_RLAST),
      .xt_rsc_1_10_RRESP(xt_rsc_1_10_RRESP),
      .xt_rsc_1_10_RDATA(xt_rsc_1_10_RDATA),
      .xt_rsc_1_10_RID(xt_rsc_1_10_RID),
      .xt_rsc_1_10_ARREADY(xt_rsc_1_10_ARREADY),
      .xt_rsc_1_10_ARVALID(xt_rsc_1_10_ARVALID),
      .xt_rsc_1_10_ARUSER(xt_rsc_1_10_ARUSER),
      .xt_rsc_1_10_ARREGION(xt_rsc_1_10_ARREGION),
      .xt_rsc_1_10_ARQOS(xt_rsc_1_10_ARQOS),
      .xt_rsc_1_10_ARPROT(xt_rsc_1_10_ARPROT),
      .xt_rsc_1_10_ARCACHE(xt_rsc_1_10_ARCACHE),
      .xt_rsc_1_10_ARLOCK(xt_rsc_1_10_ARLOCK),
      .xt_rsc_1_10_ARBURST(xt_rsc_1_10_ARBURST),
      .xt_rsc_1_10_ARSIZE(xt_rsc_1_10_ARSIZE),
      .xt_rsc_1_10_ARLEN(xt_rsc_1_10_ARLEN),
      .xt_rsc_1_10_ARADDR(xt_rsc_1_10_ARADDR),
      .xt_rsc_1_10_ARID(xt_rsc_1_10_ARID),
      .xt_rsc_1_10_BREADY(xt_rsc_1_10_BREADY),
      .xt_rsc_1_10_BVALID(xt_rsc_1_10_BVALID),
      .xt_rsc_1_10_BUSER(xt_rsc_1_10_BUSER),
      .xt_rsc_1_10_BRESP(xt_rsc_1_10_BRESP),
      .xt_rsc_1_10_BID(xt_rsc_1_10_BID),
      .xt_rsc_1_10_WREADY(xt_rsc_1_10_WREADY),
      .xt_rsc_1_10_WVALID(xt_rsc_1_10_WVALID),
      .xt_rsc_1_10_WUSER(xt_rsc_1_10_WUSER),
      .xt_rsc_1_10_WLAST(xt_rsc_1_10_WLAST),
      .xt_rsc_1_10_WSTRB(xt_rsc_1_10_WSTRB),
      .xt_rsc_1_10_WDATA(xt_rsc_1_10_WDATA),
      .xt_rsc_1_10_AWREADY(xt_rsc_1_10_AWREADY),
      .xt_rsc_1_10_AWVALID(xt_rsc_1_10_AWVALID),
      .xt_rsc_1_10_AWUSER(xt_rsc_1_10_AWUSER),
      .xt_rsc_1_10_AWREGION(xt_rsc_1_10_AWREGION),
      .xt_rsc_1_10_AWQOS(xt_rsc_1_10_AWQOS),
      .xt_rsc_1_10_AWPROT(xt_rsc_1_10_AWPROT),
      .xt_rsc_1_10_AWCACHE(xt_rsc_1_10_AWCACHE),
      .xt_rsc_1_10_AWLOCK(xt_rsc_1_10_AWLOCK),
      .xt_rsc_1_10_AWBURST(xt_rsc_1_10_AWBURST),
      .xt_rsc_1_10_AWSIZE(xt_rsc_1_10_AWSIZE),
      .xt_rsc_1_10_AWLEN(xt_rsc_1_10_AWLEN),
      .xt_rsc_1_10_AWADDR(xt_rsc_1_10_AWADDR),
      .xt_rsc_1_10_AWID(xt_rsc_1_10_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_10_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_10_i_wen_comp(xt_rsc_1_10_i_wen_comp),
      .xt_rsc_1_10_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_1_10_i_wen_comp_1(xt_rsc_1_10_i_wen_comp_1),
      .xt_rsc_1_10_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_10_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_1_10_i_s_din_mxwt(xt_rsc_1_10_i_s_din_mxwt),
      .xt_rsc_1_10_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_10_i_inst_xt_rsc_1_10_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_11_i peaseNTT_core_xt_rsc_1_11_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_11_s_tdone(xt_rsc_1_11_s_tdone),
      .xt_rsc_1_11_tr_write_done(xt_rsc_1_11_tr_write_done),
      .xt_rsc_1_11_RREADY(xt_rsc_1_11_RREADY),
      .xt_rsc_1_11_RVALID(xt_rsc_1_11_RVALID),
      .xt_rsc_1_11_RUSER(xt_rsc_1_11_RUSER),
      .xt_rsc_1_11_RLAST(xt_rsc_1_11_RLAST),
      .xt_rsc_1_11_RRESP(xt_rsc_1_11_RRESP),
      .xt_rsc_1_11_RDATA(xt_rsc_1_11_RDATA),
      .xt_rsc_1_11_RID(xt_rsc_1_11_RID),
      .xt_rsc_1_11_ARREADY(xt_rsc_1_11_ARREADY),
      .xt_rsc_1_11_ARVALID(xt_rsc_1_11_ARVALID),
      .xt_rsc_1_11_ARUSER(xt_rsc_1_11_ARUSER),
      .xt_rsc_1_11_ARREGION(xt_rsc_1_11_ARREGION),
      .xt_rsc_1_11_ARQOS(xt_rsc_1_11_ARQOS),
      .xt_rsc_1_11_ARPROT(xt_rsc_1_11_ARPROT),
      .xt_rsc_1_11_ARCACHE(xt_rsc_1_11_ARCACHE),
      .xt_rsc_1_11_ARLOCK(xt_rsc_1_11_ARLOCK),
      .xt_rsc_1_11_ARBURST(xt_rsc_1_11_ARBURST),
      .xt_rsc_1_11_ARSIZE(xt_rsc_1_11_ARSIZE),
      .xt_rsc_1_11_ARLEN(xt_rsc_1_11_ARLEN),
      .xt_rsc_1_11_ARADDR(xt_rsc_1_11_ARADDR),
      .xt_rsc_1_11_ARID(xt_rsc_1_11_ARID),
      .xt_rsc_1_11_BREADY(xt_rsc_1_11_BREADY),
      .xt_rsc_1_11_BVALID(xt_rsc_1_11_BVALID),
      .xt_rsc_1_11_BUSER(xt_rsc_1_11_BUSER),
      .xt_rsc_1_11_BRESP(xt_rsc_1_11_BRESP),
      .xt_rsc_1_11_BID(xt_rsc_1_11_BID),
      .xt_rsc_1_11_WREADY(xt_rsc_1_11_WREADY),
      .xt_rsc_1_11_WVALID(xt_rsc_1_11_WVALID),
      .xt_rsc_1_11_WUSER(xt_rsc_1_11_WUSER),
      .xt_rsc_1_11_WLAST(xt_rsc_1_11_WLAST),
      .xt_rsc_1_11_WSTRB(xt_rsc_1_11_WSTRB),
      .xt_rsc_1_11_WDATA(xt_rsc_1_11_WDATA),
      .xt_rsc_1_11_AWREADY(xt_rsc_1_11_AWREADY),
      .xt_rsc_1_11_AWVALID(xt_rsc_1_11_AWVALID),
      .xt_rsc_1_11_AWUSER(xt_rsc_1_11_AWUSER),
      .xt_rsc_1_11_AWREGION(xt_rsc_1_11_AWREGION),
      .xt_rsc_1_11_AWQOS(xt_rsc_1_11_AWQOS),
      .xt_rsc_1_11_AWPROT(xt_rsc_1_11_AWPROT),
      .xt_rsc_1_11_AWCACHE(xt_rsc_1_11_AWCACHE),
      .xt_rsc_1_11_AWLOCK(xt_rsc_1_11_AWLOCK),
      .xt_rsc_1_11_AWBURST(xt_rsc_1_11_AWBURST),
      .xt_rsc_1_11_AWSIZE(xt_rsc_1_11_AWSIZE),
      .xt_rsc_1_11_AWLEN(xt_rsc_1_11_AWLEN),
      .xt_rsc_1_11_AWADDR(xt_rsc_1_11_AWADDR),
      .xt_rsc_1_11_AWID(xt_rsc_1_11_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_11_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_11_i_wen_comp(xt_rsc_1_11_i_wen_comp),
      .xt_rsc_1_11_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_1_11_i_wen_comp_1(xt_rsc_1_11_i_wen_comp_1),
      .xt_rsc_1_11_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_11_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_1_11_i_s_din_mxwt(xt_rsc_1_11_i_s_din_mxwt),
      .xt_rsc_1_11_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_11_i_inst_xt_rsc_1_11_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_12_i peaseNTT_core_xt_rsc_1_12_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_12_s_tdone(xt_rsc_1_12_s_tdone),
      .xt_rsc_1_12_tr_write_done(xt_rsc_1_12_tr_write_done),
      .xt_rsc_1_12_RREADY(xt_rsc_1_12_RREADY),
      .xt_rsc_1_12_RVALID(xt_rsc_1_12_RVALID),
      .xt_rsc_1_12_RUSER(xt_rsc_1_12_RUSER),
      .xt_rsc_1_12_RLAST(xt_rsc_1_12_RLAST),
      .xt_rsc_1_12_RRESP(xt_rsc_1_12_RRESP),
      .xt_rsc_1_12_RDATA(xt_rsc_1_12_RDATA),
      .xt_rsc_1_12_RID(xt_rsc_1_12_RID),
      .xt_rsc_1_12_ARREADY(xt_rsc_1_12_ARREADY),
      .xt_rsc_1_12_ARVALID(xt_rsc_1_12_ARVALID),
      .xt_rsc_1_12_ARUSER(xt_rsc_1_12_ARUSER),
      .xt_rsc_1_12_ARREGION(xt_rsc_1_12_ARREGION),
      .xt_rsc_1_12_ARQOS(xt_rsc_1_12_ARQOS),
      .xt_rsc_1_12_ARPROT(xt_rsc_1_12_ARPROT),
      .xt_rsc_1_12_ARCACHE(xt_rsc_1_12_ARCACHE),
      .xt_rsc_1_12_ARLOCK(xt_rsc_1_12_ARLOCK),
      .xt_rsc_1_12_ARBURST(xt_rsc_1_12_ARBURST),
      .xt_rsc_1_12_ARSIZE(xt_rsc_1_12_ARSIZE),
      .xt_rsc_1_12_ARLEN(xt_rsc_1_12_ARLEN),
      .xt_rsc_1_12_ARADDR(xt_rsc_1_12_ARADDR),
      .xt_rsc_1_12_ARID(xt_rsc_1_12_ARID),
      .xt_rsc_1_12_BREADY(xt_rsc_1_12_BREADY),
      .xt_rsc_1_12_BVALID(xt_rsc_1_12_BVALID),
      .xt_rsc_1_12_BUSER(xt_rsc_1_12_BUSER),
      .xt_rsc_1_12_BRESP(xt_rsc_1_12_BRESP),
      .xt_rsc_1_12_BID(xt_rsc_1_12_BID),
      .xt_rsc_1_12_WREADY(xt_rsc_1_12_WREADY),
      .xt_rsc_1_12_WVALID(xt_rsc_1_12_WVALID),
      .xt_rsc_1_12_WUSER(xt_rsc_1_12_WUSER),
      .xt_rsc_1_12_WLAST(xt_rsc_1_12_WLAST),
      .xt_rsc_1_12_WSTRB(xt_rsc_1_12_WSTRB),
      .xt_rsc_1_12_WDATA(xt_rsc_1_12_WDATA),
      .xt_rsc_1_12_AWREADY(xt_rsc_1_12_AWREADY),
      .xt_rsc_1_12_AWVALID(xt_rsc_1_12_AWVALID),
      .xt_rsc_1_12_AWUSER(xt_rsc_1_12_AWUSER),
      .xt_rsc_1_12_AWREGION(xt_rsc_1_12_AWREGION),
      .xt_rsc_1_12_AWQOS(xt_rsc_1_12_AWQOS),
      .xt_rsc_1_12_AWPROT(xt_rsc_1_12_AWPROT),
      .xt_rsc_1_12_AWCACHE(xt_rsc_1_12_AWCACHE),
      .xt_rsc_1_12_AWLOCK(xt_rsc_1_12_AWLOCK),
      .xt_rsc_1_12_AWBURST(xt_rsc_1_12_AWBURST),
      .xt_rsc_1_12_AWSIZE(xt_rsc_1_12_AWSIZE),
      .xt_rsc_1_12_AWLEN(xt_rsc_1_12_AWLEN),
      .xt_rsc_1_12_AWADDR(xt_rsc_1_12_AWADDR),
      .xt_rsc_1_12_AWID(xt_rsc_1_12_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_12_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_12_i_wen_comp(xt_rsc_1_12_i_wen_comp),
      .xt_rsc_1_12_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_1_12_i_wen_comp_1(xt_rsc_1_12_i_wen_comp_1),
      .xt_rsc_1_12_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_12_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_1_12_i_s_din_mxwt(xt_rsc_1_12_i_s_din_mxwt),
      .xt_rsc_1_12_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_12_i_inst_xt_rsc_1_12_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_13_i peaseNTT_core_xt_rsc_1_13_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_13_s_tdone(xt_rsc_1_13_s_tdone),
      .xt_rsc_1_13_tr_write_done(xt_rsc_1_13_tr_write_done),
      .xt_rsc_1_13_RREADY(xt_rsc_1_13_RREADY),
      .xt_rsc_1_13_RVALID(xt_rsc_1_13_RVALID),
      .xt_rsc_1_13_RUSER(xt_rsc_1_13_RUSER),
      .xt_rsc_1_13_RLAST(xt_rsc_1_13_RLAST),
      .xt_rsc_1_13_RRESP(xt_rsc_1_13_RRESP),
      .xt_rsc_1_13_RDATA(xt_rsc_1_13_RDATA),
      .xt_rsc_1_13_RID(xt_rsc_1_13_RID),
      .xt_rsc_1_13_ARREADY(xt_rsc_1_13_ARREADY),
      .xt_rsc_1_13_ARVALID(xt_rsc_1_13_ARVALID),
      .xt_rsc_1_13_ARUSER(xt_rsc_1_13_ARUSER),
      .xt_rsc_1_13_ARREGION(xt_rsc_1_13_ARREGION),
      .xt_rsc_1_13_ARQOS(xt_rsc_1_13_ARQOS),
      .xt_rsc_1_13_ARPROT(xt_rsc_1_13_ARPROT),
      .xt_rsc_1_13_ARCACHE(xt_rsc_1_13_ARCACHE),
      .xt_rsc_1_13_ARLOCK(xt_rsc_1_13_ARLOCK),
      .xt_rsc_1_13_ARBURST(xt_rsc_1_13_ARBURST),
      .xt_rsc_1_13_ARSIZE(xt_rsc_1_13_ARSIZE),
      .xt_rsc_1_13_ARLEN(xt_rsc_1_13_ARLEN),
      .xt_rsc_1_13_ARADDR(xt_rsc_1_13_ARADDR),
      .xt_rsc_1_13_ARID(xt_rsc_1_13_ARID),
      .xt_rsc_1_13_BREADY(xt_rsc_1_13_BREADY),
      .xt_rsc_1_13_BVALID(xt_rsc_1_13_BVALID),
      .xt_rsc_1_13_BUSER(xt_rsc_1_13_BUSER),
      .xt_rsc_1_13_BRESP(xt_rsc_1_13_BRESP),
      .xt_rsc_1_13_BID(xt_rsc_1_13_BID),
      .xt_rsc_1_13_WREADY(xt_rsc_1_13_WREADY),
      .xt_rsc_1_13_WVALID(xt_rsc_1_13_WVALID),
      .xt_rsc_1_13_WUSER(xt_rsc_1_13_WUSER),
      .xt_rsc_1_13_WLAST(xt_rsc_1_13_WLAST),
      .xt_rsc_1_13_WSTRB(xt_rsc_1_13_WSTRB),
      .xt_rsc_1_13_WDATA(xt_rsc_1_13_WDATA),
      .xt_rsc_1_13_AWREADY(xt_rsc_1_13_AWREADY),
      .xt_rsc_1_13_AWVALID(xt_rsc_1_13_AWVALID),
      .xt_rsc_1_13_AWUSER(xt_rsc_1_13_AWUSER),
      .xt_rsc_1_13_AWREGION(xt_rsc_1_13_AWREGION),
      .xt_rsc_1_13_AWQOS(xt_rsc_1_13_AWQOS),
      .xt_rsc_1_13_AWPROT(xt_rsc_1_13_AWPROT),
      .xt_rsc_1_13_AWCACHE(xt_rsc_1_13_AWCACHE),
      .xt_rsc_1_13_AWLOCK(xt_rsc_1_13_AWLOCK),
      .xt_rsc_1_13_AWBURST(xt_rsc_1_13_AWBURST),
      .xt_rsc_1_13_AWSIZE(xt_rsc_1_13_AWSIZE),
      .xt_rsc_1_13_AWLEN(xt_rsc_1_13_AWLEN),
      .xt_rsc_1_13_AWADDR(xt_rsc_1_13_AWADDR),
      .xt_rsc_1_13_AWID(xt_rsc_1_13_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_13_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_13_i_wen_comp(xt_rsc_1_13_i_wen_comp),
      .xt_rsc_1_13_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_1_13_i_wen_comp_1(xt_rsc_1_13_i_wen_comp_1),
      .xt_rsc_1_13_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_13_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_1_13_i_s_din_mxwt(xt_rsc_1_13_i_s_din_mxwt),
      .xt_rsc_1_13_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_13_i_inst_xt_rsc_1_13_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_14_i peaseNTT_core_xt_rsc_1_14_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_14_s_tdone(xt_rsc_1_14_s_tdone),
      .xt_rsc_1_14_tr_write_done(xt_rsc_1_14_tr_write_done),
      .xt_rsc_1_14_RREADY(xt_rsc_1_14_RREADY),
      .xt_rsc_1_14_RVALID(xt_rsc_1_14_RVALID),
      .xt_rsc_1_14_RUSER(xt_rsc_1_14_RUSER),
      .xt_rsc_1_14_RLAST(xt_rsc_1_14_RLAST),
      .xt_rsc_1_14_RRESP(xt_rsc_1_14_RRESP),
      .xt_rsc_1_14_RDATA(xt_rsc_1_14_RDATA),
      .xt_rsc_1_14_RID(xt_rsc_1_14_RID),
      .xt_rsc_1_14_ARREADY(xt_rsc_1_14_ARREADY),
      .xt_rsc_1_14_ARVALID(xt_rsc_1_14_ARVALID),
      .xt_rsc_1_14_ARUSER(xt_rsc_1_14_ARUSER),
      .xt_rsc_1_14_ARREGION(xt_rsc_1_14_ARREGION),
      .xt_rsc_1_14_ARQOS(xt_rsc_1_14_ARQOS),
      .xt_rsc_1_14_ARPROT(xt_rsc_1_14_ARPROT),
      .xt_rsc_1_14_ARCACHE(xt_rsc_1_14_ARCACHE),
      .xt_rsc_1_14_ARLOCK(xt_rsc_1_14_ARLOCK),
      .xt_rsc_1_14_ARBURST(xt_rsc_1_14_ARBURST),
      .xt_rsc_1_14_ARSIZE(xt_rsc_1_14_ARSIZE),
      .xt_rsc_1_14_ARLEN(xt_rsc_1_14_ARLEN),
      .xt_rsc_1_14_ARADDR(xt_rsc_1_14_ARADDR),
      .xt_rsc_1_14_ARID(xt_rsc_1_14_ARID),
      .xt_rsc_1_14_BREADY(xt_rsc_1_14_BREADY),
      .xt_rsc_1_14_BVALID(xt_rsc_1_14_BVALID),
      .xt_rsc_1_14_BUSER(xt_rsc_1_14_BUSER),
      .xt_rsc_1_14_BRESP(xt_rsc_1_14_BRESP),
      .xt_rsc_1_14_BID(xt_rsc_1_14_BID),
      .xt_rsc_1_14_WREADY(xt_rsc_1_14_WREADY),
      .xt_rsc_1_14_WVALID(xt_rsc_1_14_WVALID),
      .xt_rsc_1_14_WUSER(xt_rsc_1_14_WUSER),
      .xt_rsc_1_14_WLAST(xt_rsc_1_14_WLAST),
      .xt_rsc_1_14_WSTRB(xt_rsc_1_14_WSTRB),
      .xt_rsc_1_14_WDATA(xt_rsc_1_14_WDATA),
      .xt_rsc_1_14_AWREADY(xt_rsc_1_14_AWREADY),
      .xt_rsc_1_14_AWVALID(xt_rsc_1_14_AWVALID),
      .xt_rsc_1_14_AWUSER(xt_rsc_1_14_AWUSER),
      .xt_rsc_1_14_AWREGION(xt_rsc_1_14_AWREGION),
      .xt_rsc_1_14_AWQOS(xt_rsc_1_14_AWQOS),
      .xt_rsc_1_14_AWPROT(xt_rsc_1_14_AWPROT),
      .xt_rsc_1_14_AWCACHE(xt_rsc_1_14_AWCACHE),
      .xt_rsc_1_14_AWLOCK(xt_rsc_1_14_AWLOCK),
      .xt_rsc_1_14_AWBURST(xt_rsc_1_14_AWBURST),
      .xt_rsc_1_14_AWSIZE(xt_rsc_1_14_AWSIZE),
      .xt_rsc_1_14_AWLEN(xt_rsc_1_14_AWLEN),
      .xt_rsc_1_14_AWADDR(xt_rsc_1_14_AWADDR),
      .xt_rsc_1_14_AWID(xt_rsc_1_14_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_14_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_14_i_wen_comp(xt_rsc_1_14_i_wen_comp),
      .xt_rsc_1_14_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_1_14_i_wen_comp_1(xt_rsc_1_14_i_wen_comp_1),
      .xt_rsc_1_14_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_14_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_1_14_i_s_din_mxwt(xt_rsc_1_14_i_s_din_mxwt),
      .xt_rsc_1_14_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_14_i_inst_xt_rsc_1_14_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_15_i peaseNTT_core_xt_rsc_1_15_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_15_s_tdone(xt_rsc_1_15_s_tdone),
      .xt_rsc_1_15_tr_write_done(xt_rsc_1_15_tr_write_done),
      .xt_rsc_1_15_RREADY(xt_rsc_1_15_RREADY),
      .xt_rsc_1_15_RVALID(xt_rsc_1_15_RVALID),
      .xt_rsc_1_15_RUSER(xt_rsc_1_15_RUSER),
      .xt_rsc_1_15_RLAST(xt_rsc_1_15_RLAST),
      .xt_rsc_1_15_RRESP(xt_rsc_1_15_RRESP),
      .xt_rsc_1_15_RDATA(xt_rsc_1_15_RDATA),
      .xt_rsc_1_15_RID(xt_rsc_1_15_RID),
      .xt_rsc_1_15_ARREADY(xt_rsc_1_15_ARREADY),
      .xt_rsc_1_15_ARVALID(xt_rsc_1_15_ARVALID),
      .xt_rsc_1_15_ARUSER(xt_rsc_1_15_ARUSER),
      .xt_rsc_1_15_ARREGION(xt_rsc_1_15_ARREGION),
      .xt_rsc_1_15_ARQOS(xt_rsc_1_15_ARQOS),
      .xt_rsc_1_15_ARPROT(xt_rsc_1_15_ARPROT),
      .xt_rsc_1_15_ARCACHE(xt_rsc_1_15_ARCACHE),
      .xt_rsc_1_15_ARLOCK(xt_rsc_1_15_ARLOCK),
      .xt_rsc_1_15_ARBURST(xt_rsc_1_15_ARBURST),
      .xt_rsc_1_15_ARSIZE(xt_rsc_1_15_ARSIZE),
      .xt_rsc_1_15_ARLEN(xt_rsc_1_15_ARLEN),
      .xt_rsc_1_15_ARADDR(xt_rsc_1_15_ARADDR),
      .xt_rsc_1_15_ARID(xt_rsc_1_15_ARID),
      .xt_rsc_1_15_BREADY(xt_rsc_1_15_BREADY),
      .xt_rsc_1_15_BVALID(xt_rsc_1_15_BVALID),
      .xt_rsc_1_15_BUSER(xt_rsc_1_15_BUSER),
      .xt_rsc_1_15_BRESP(xt_rsc_1_15_BRESP),
      .xt_rsc_1_15_BID(xt_rsc_1_15_BID),
      .xt_rsc_1_15_WREADY(xt_rsc_1_15_WREADY),
      .xt_rsc_1_15_WVALID(xt_rsc_1_15_WVALID),
      .xt_rsc_1_15_WUSER(xt_rsc_1_15_WUSER),
      .xt_rsc_1_15_WLAST(xt_rsc_1_15_WLAST),
      .xt_rsc_1_15_WSTRB(xt_rsc_1_15_WSTRB),
      .xt_rsc_1_15_WDATA(xt_rsc_1_15_WDATA),
      .xt_rsc_1_15_AWREADY(xt_rsc_1_15_AWREADY),
      .xt_rsc_1_15_AWVALID(xt_rsc_1_15_AWVALID),
      .xt_rsc_1_15_AWUSER(xt_rsc_1_15_AWUSER),
      .xt_rsc_1_15_AWREGION(xt_rsc_1_15_AWREGION),
      .xt_rsc_1_15_AWQOS(xt_rsc_1_15_AWQOS),
      .xt_rsc_1_15_AWPROT(xt_rsc_1_15_AWPROT),
      .xt_rsc_1_15_AWCACHE(xt_rsc_1_15_AWCACHE),
      .xt_rsc_1_15_AWLOCK(xt_rsc_1_15_AWLOCK),
      .xt_rsc_1_15_AWBURST(xt_rsc_1_15_AWBURST),
      .xt_rsc_1_15_AWSIZE(xt_rsc_1_15_AWSIZE),
      .xt_rsc_1_15_AWLEN(xt_rsc_1_15_AWLEN),
      .xt_rsc_1_15_AWADDR(xt_rsc_1_15_AWADDR),
      .xt_rsc_1_15_AWID(xt_rsc_1_15_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_15_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_15_i_wen_comp(xt_rsc_1_15_i_wen_comp),
      .xt_rsc_1_15_i_oswt_1(reg_xt_rsc_0_0_i_oswt_1_cse),
      .xt_rsc_1_15_i_wen_comp_1(xt_rsc_1_15_i_wen_comp_1),
      .xt_rsc_1_15_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_15_i_s_waddr_core(reg_xt_rsc_0_0_i_s_waddr_core_cse),
      .xt_rsc_1_15_i_s_din_mxwt(xt_rsc_1_15_i_s_din_mxwt),
      .xt_rsc_1_15_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_15_i_inst_xt_rsc_1_15_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_16_i peaseNTT_core_xt_rsc_1_16_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_16_s_tdone(xt_rsc_1_16_s_tdone),
      .xt_rsc_1_16_tr_write_done(xt_rsc_1_16_tr_write_done),
      .xt_rsc_1_16_RREADY(xt_rsc_1_16_RREADY),
      .xt_rsc_1_16_RVALID(xt_rsc_1_16_RVALID),
      .xt_rsc_1_16_RUSER(xt_rsc_1_16_RUSER),
      .xt_rsc_1_16_RLAST(xt_rsc_1_16_RLAST),
      .xt_rsc_1_16_RRESP(xt_rsc_1_16_RRESP),
      .xt_rsc_1_16_RDATA(xt_rsc_1_16_RDATA),
      .xt_rsc_1_16_RID(xt_rsc_1_16_RID),
      .xt_rsc_1_16_ARREADY(xt_rsc_1_16_ARREADY),
      .xt_rsc_1_16_ARVALID(xt_rsc_1_16_ARVALID),
      .xt_rsc_1_16_ARUSER(xt_rsc_1_16_ARUSER),
      .xt_rsc_1_16_ARREGION(xt_rsc_1_16_ARREGION),
      .xt_rsc_1_16_ARQOS(xt_rsc_1_16_ARQOS),
      .xt_rsc_1_16_ARPROT(xt_rsc_1_16_ARPROT),
      .xt_rsc_1_16_ARCACHE(xt_rsc_1_16_ARCACHE),
      .xt_rsc_1_16_ARLOCK(xt_rsc_1_16_ARLOCK),
      .xt_rsc_1_16_ARBURST(xt_rsc_1_16_ARBURST),
      .xt_rsc_1_16_ARSIZE(xt_rsc_1_16_ARSIZE),
      .xt_rsc_1_16_ARLEN(xt_rsc_1_16_ARLEN),
      .xt_rsc_1_16_ARADDR(xt_rsc_1_16_ARADDR),
      .xt_rsc_1_16_ARID(xt_rsc_1_16_ARID),
      .xt_rsc_1_16_BREADY(xt_rsc_1_16_BREADY),
      .xt_rsc_1_16_BVALID(xt_rsc_1_16_BVALID),
      .xt_rsc_1_16_BUSER(xt_rsc_1_16_BUSER),
      .xt_rsc_1_16_BRESP(xt_rsc_1_16_BRESP),
      .xt_rsc_1_16_BID(xt_rsc_1_16_BID),
      .xt_rsc_1_16_WREADY(xt_rsc_1_16_WREADY),
      .xt_rsc_1_16_WVALID(xt_rsc_1_16_WVALID),
      .xt_rsc_1_16_WUSER(xt_rsc_1_16_WUSER),
      .xt_rsc_1_16_WLAST(xt_rsc_1_16_WLAST),
      .xt_rsc_1_16_WSTRB(xt_rsc_1_16_WSTRB),
      .xt_rsc_1_16_WDATA(xt_rsc_1_16_WDATA),
      .xt_rsc_1_16_AWREADY(xt_rsc_1_16_AWREADY),
      .xt_rsc_1_16_AWVALID(xt_rsc_1_16_AWVALID),
      .xt_rsc_1_16_AWUSER(xt_rsc_1_16_AWUSER),
      .xt_rsc_1_16_AWREGION(xt_rsc_1_16_AWREGION),
      .xt_rsc_1_16_AWQOS(xt_rsc_1_16_AWQOS),
      .xt_rsc_1_16_AWPROT(xt_rsc_1_16_AWPROT),
      .xt_rsc_1_16_AWCACHE(xt_rsc_1_16_AWCACHE),
      .xt_rsc_1_16_AWLOCK(xt_rsc_1_16_AWLOCK),
      .xt_rsc_1_16_AWBURST(xt_rsc_1_16_AWBURST),
      .xt_rsc_1_16_AWSIZE(xt_rsc_1_16_AWSIZE),
      .xt_rsc_1_16_AWLEN(xt_rsc_1_16_AWLEN),
      .xt_rsc_1_16_AWADDR(xt_rsc_1_16_AWADDR),
      .xt_rsc_1_16_AWID(xt_rsc_1_16_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_16_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_16_i_wen_comp(xt_rsc_1_16_i_wen_comp),
      .xt_rsc_1_16_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_1_16_i_wen_comp_1(xt_rsc_1_16_i_wen_comp_1),
      .xt_rsc_1_16_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_16_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_1_16_i_s_din_mxwt(xt_rsc_1_16_i_s_din_mxwt),
      .xt_rsc_1_16_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_16_i_inst_xt_rsc_1_16_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_17_i peaseNTT_core_xt_rsc_1_17_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_17_s_tdone(xt_rsc_1_17_s_tdone),
      .xt_rsc_1_17_tr_write_done(xt_rsc_1_17_tr_write_done),
      .xt_rsc_1_17_RREADY(xt_rsc_1_17_RREADY),
      .xt_rsc_1_17_RVALID(xt_rsc_1_17_RVALID),
      .xt_rsc_1_17_RUSER(xt_rsc_1_17_RUSER),
      .xt_rsc_1_17_RLAST(xt_rsc_1_17_RLAST),
      .xt_rsc_1_17_RRESP(xt_rsc_1_17_RRESP),
      .xt_rsc_1_17_RDATA(xt_rsc_1_17_RDATA),
      .xt_rsc_1_17_RID(xt_rsc_1_17_RID),
      .xt_rsc_1_17_ARREADY(xt_rsc_1_17_ARREADY),
      .xt_rsc_1_17_ARVALID(xt_rsc_1_17_ARVALID),
      .xt_rsc_1_17_ARUSER(xt_rsc_1_17_ARUSER),
      .xt_rsc_1_17_ARREGION(xt_rsc_1_17_ARREGION),
      .xt_rsc_1_17_ARQOS(xt_rsc_1_17_ARQOS),
      .xt_rsc_1_17_ARPROT(xt_rsc_1_17_ARPROT),
      .xt_rsc_1_17_ARCACHE(xt_rsc_1_17_ARCACHE),
      .xt_rsc_1_17_ARLOCK(xt_rsc_1_17_ARLOCK),
      .xt_rsc_1_17_ARBURST(xt_rsc_1_17_ARBURST),
      .xt_rsc_1_17_ARSIZE(xt_rsc_1_17_ARSIZE),
      .xt_rsc_1_17_ARLEN(xt_rsc_1_17_ARLEN),
      .xt_rsc_1_17_ARADDR(xt_rsc_1_17_ARADDR),
      .xt_rsc_1_17_ARID(xt_rsc_1_17_ARID),
      .xt_rsc_1_17_BREADY(xt_rsc_1_17_BREADY),
      .xt_rsc_1_17_BVALID(xt_rsc_1_17_BVALID),
      .xt_rsc_1_17_BUSER(xt_rsc_1_17_BUSER),
      .xt_rsc_1_17_BRESP(xt_rsc_1_17_BRESP),
      .xt_rsc_1_17_BID(xt_rsc_1_17_BID),
      .xt_rsc_1_17_WREADY(xt_rsc_1_17_WREADY),
      .xt_rsc_1_17_WVALID(xt_rsc_1_17_WVALID),
      .xt_rsc_1_17_WUSER(xt_rsc_1_17_WUSER),
      .xt_rsc_1_17_WLAST(xt_rsc_1_17_WLAST),
      .xt_rsc_1_17_WSTRB(xt_rsc_1_17_WSTRB),
      .xt_rsc_1_17_WDATA(xt_rsc_1_17_WDATA),
      .xt_rsc_1_17_AWREADY(xt_rsc_1_17_AWREADY),
      .xt_rsc_1_17_AWVALID(xt_rsc_1_17_AWVALID),
      .xt_rsc_1_17_AWUSER(xt_rsc_1_17_AWUSER),
      .xt_rsc_1_17_AWREGION(xt_rsc_1_17_AWREGION),
      .xt_rsc_1_17_AWQOS(xt_rsc_1_17_AWQOS),
      .xt_rsc_1_17_AWPROT(xt_rsc_1_17_AWPROT),
      .xt_rsc_1_17_AWCACHE(xt_rsc_1_17_AWCACHE),
      .xt_rsc_1_17_AWLOCK(xt_rsc_1_17_AWLOCK),
      .xt_rsc_1_17_AWBURST(xt_rsc_1_17_AWBURST),
      .xt_rsc_1_17_AWSIZE(xt_rsc_1_17_AWSIZE),
      .xt_rsc_1_17_AWLEN(xt_rsc_1_17_AWLEN),
      .xt_rsc_1_17_AWADDR(xt_rsc_1_17_AWADDR),
      .xt_rsc_1_17_AWID(xt_rsc_1_17_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_17_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_17_i_wen_comp(xt_rsc_1_17_i_wen_comp),
      .xt_rsc_1_17_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_1_17_i_wen_comp_1(xt_rsc_1_17_i_wen_comp_1),
      .xt_rsc_1_17_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_17_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_1_17_i_s_din_mxwt(xt_rsc_1_17_i_s_din_mxwt),
      .xt_rsc_1_17_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_17_i_inst_xt_rsc_1_17_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_18_i peaseNTT_core_xt_rsc_1_18_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_18_s_tdone(xt_rsc_1_18_s_tdone),
      .xt_rsc_1_18_tr_write_done(xt_rsc_1_18_tr_write_done),
      .xt_rsc_1_18_RREADY(xt_rsc_1_18_RREADY),
      .xt_rsc_1_18_RVALID(xt_rsc_1_18_RVALID),
      .xt_rsc_1_18_RUSER(xt_rsc_1_18_RUSER),
      .xt_rsc_1_18_RLAST(xt_rsc_1_18_RLAST),
      .xt_rsc_1_18_RRESP(xt_rsc_1_18_RRESP),
      .xt_rsc_1_18_RDATA(xt_rsc_1_18_RDATA),
      .xt_rsc_1_18_RID(xt_rsc_1_18_RID),
      .xt_rsc_1_18_ARREADY(xt_rsc_1_18_ARREADY),
      .xt_rsc_1_18_ARVALID(xt_rsc_1_18_ARVALID),
      .xt_rsc_1_18_ARUSER(xt_rsc_1_18_ARUSER),
      .xt_rsc_1_18_ARREGION(xt_rsc_1_18_ARREGION),
      .xt_rsc_1_18_ARQOS(xt_rsc_1_18_ARQOS),
      .xt_rsc_1_18_ARPROT(xt_rsc_1_18_ARPROT),
      .xt_rsc_1_18_ARCACHE(xt_rsc_1_18_ARCACHE),
      .xt_rsc_1_18_ARLOCK(xt_rsc_1_18_ARLOCK),
      .xt_rsc_1_18_ARBURST(xt_rsc_1_18_ARBURST),
      .xt_rsc_1_18_ARSIZE(xt_rsc_1_18_ARSIZE),
      .xt_rsc_1_18_ARLEN(xt_rsc_1_18_ARLEN),
      .xt_rsc_1_18_ARADDR(xt_rsc_1_18_ARADDR),
      .xt_rsc_1_18_ARID(xt_rsc_1_18_ARID),
      .xt_rsc_1_18_BREADY(xt_rsc_1_18_BREADY),
      .xt_rsc_1_18_BVALID(xt_rsc_1_18_BVALID),
      .xt_rsc_1_18_BUSER(xt_rsc_1_18_BUSER),
      .xt_rsc_1_18_BRESP(xt_rsc_1_18_BRESP),
      .xt_rsc_1_18_BID(xt_rsc_1_18_BID),
      .xt_rsc_1_18_WREADY(xt_rsc_1_18_WREADY),
      .xt_rsc_1_18_WVALID(xt_rsc_1_18_WVALID),
      .xt_rsc_1_18_WUSER(xt_rsc_1_18_WUSER),
      .xt_rsc_1_18_WLAST(xt_rsc_1_18_WLAST),
      .xt_rsc_1_18_WSTRB(xt_rsc_1_18_WSTRB),
      .xt_rsc_1_18_WDATA(xt_rsc_1_18_WDATA),
      .xt_rsc_1_18_AWREADY(xt_rsc_1_18_AWREADY),
      .xt_rsc_1_18_AWVALID(xt_rsc_1_18_AWVALID),
      .xt_rsc_1_18_AWUSER(xt_rsc_1_18_AWUSER),
      .xt_rsc_1_18_AWREGION(xt_rsc_1_18_AWREGION),
      .xt_rsc_1_18_AWQOS(xt_rsc_1_18_AWQOS),
      .xt_rsc_1_18_AWPROT(xt_rsc_1_18_AWPROT),
      .xt_rsc_1_18_AWCACHE(xt_rsc_1_18_AWCACHE),
      .xt_rsc_1_18_AWLOCK(xt_rsc_1_18_AWLOCK),
      .xt_rsc_1_18_AWBURST(xt_rsc_1_18_AWBURST),
      .xt_rsc_1_18_AWSIZE(xt_rsc_1_18_AWSIZE),
      .xt_rsc_1_18_AWLEN(xt_rsc_1_18_AWLEN),
      .xt_rsc_1_18_AWADDR(xt_rsc_1_18_AWADDR),
      .xt_rsc_1_18_AWID(xt_rsc_1_18_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_18_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_18_i_wen_comp(xt_rsc_1_18_i_wen_comp),
      .xt_rsc_1_18_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_1_18_i_wen_comp_1(xt_rsc_1_18_i_wen_comp_1),
      .xt_rsc_1_18_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_18_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_1_18_i_s_din_mxwt(xt_rsc_1_18_i_s_din_mxwt),
      .xt_rsc_1_18_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_18_i_inst_xt_rsc_1_18_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_19_i peaseNTT_core_xt_rsc_1_19_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_19_s_tdone(xt_rsc_1_19_s_tdone),
      .xt_rsc_1_19_tr_write_done(xt_rsc_1_19_tr_write_done),
      .xt_rsc_1_19_RREADY(xt_rsc_1_19_RREADY),
      .xt_rsc_1_19_RVALID(xt_rsc_1_19_RVALID),
      .xt_rsc_1_19_RUSER(xt_rsc_1_19_RUSER),
      .xt_rsc_1_19_RLAST(xt_rsc_1_19_RLAST),
      .xt_rsc_1_19_RRESP(xt_rsc_1_19_RRESP),
      .xt_rsc_1_19_RDATA(xt_rsc_1_19_RDATA),
      .xt_rsc_1_19_RID(xt_rsc_1_19_RID),
      .xt_rsc_1_19_ARREADY(xt_rsc_1_19_ARREADY),
      .xt_rsc_1_19_ARVALID(xt_rsc_1_19_ARVALID),
      .xt_rsc_1_19_ARUSER(xt_rsc_1_19_ARUSER),
      .xt_rsc_1_19_ARREGION(xt_rsc_1_19_ARREGION),
      .xt_rsc_1_19_ARQOS(xt_rsc_1_19_ARQOS),
      .xt_rsc_1_19_ARPROT(xt_rsc_1_19_ARPROT),
      .xt_rsc_1_19_ARCACHE(xt_rsc_1_19_ARCACHE),
      .xt_rsc_1_19_ARLOCK(xt_rsc_1_19_ARLOCK),
      .xt_rsc_1_19_ARBURST(xt_rsc_1_19_ARBURST),
      .xt_rsc_1_19_ARSIZE(xt_rsc_1_19_ARSIZE),
      .xt_rsc_1_19_ARLEN(xt_rsc_1_19_ARLEN),
      .xt_rsc_1_19_ARADDR(xt_rsc_1_19_ARADDR),
      .xt_rsc_1_19_ARID(xt_rsc_1_19_ARID),
      .xt_rsc_1_19_BREADY(xt_rsc_1_19_BREADY),
      .xt_rsc_1_19_BVALID(xt_rsc_1_19_BVALID),
      .xt_rsc_1_19_BUSER(xt_rsc_1_19_BUSER),
      .xt_rsc_1_19_BRESP(xt_rsc_1_19_BRESP),
      .xt_rsc_1_19_BID(xt_rsc_1_19_BID),
      .xt_rsc_1_19_WREADY(xt_rsc_1_19_WREADY),
      .xt_rsc_1_19_WVALID(xt_rsc_1_19_WVALID),
      .xt_rsc_1_19_WUSER(xt_rsc_1_19_WUSER),
      .xt_rsc_1_19_WLAST(xt_rsc_1_19_WLAST),
      .xt_rsc_1_19_WSTRB(xt_rsc_1_19_WSTRB),
      .xt_rsc_1_19_WDATA(xt_rsc_1_19_WDATA),
      .xt_rsc_1_19_AWREADY(xt_rsc_1_19_AWREADY),
      .xt_rsc_1_19_AWVALID(xt_rsc_1_19_AWVALID),
      .xt_rsc_1_19_AWUSER(xt_rsc_1_19_AWUSER),
      .xt_rsc_1_19_AWREGION(xt_rsc_1_19_AWREGION),
      .xt_rsc_1_19_AWQOS(xt_rsc_1_19_AWQOS),
      .xt_rsc_1_19_AWPROT(xt_rsc_1_19_AWPROT),
      .xt_rsc_1_19_AWCACHE(xt_rsc_1_19_AWCACHE),
      .xt_rsc_1_19_AWLOCK(xt_rsc_1_19_AWLOCK),
      .xt_rsc_1_19_AWBURST(xt_rsc_1_19_AWBURST),
      .xt_rsc_1_19_AWSIZE(xt_rsc_1_19_AWSIZE),
      .xt_rsc_1_19_AWLEN(xt_rsc_1_19_AWLEN),
      .xt_rsc_1_19_AWADDR(xt_rsc_1_19_AWADDR),
      .xt_rsc_1_19_AWID(xt_rsc_1_19_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_19_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_19_i_wen_comp(xt_rsc_1_19_i_wen_comp),
      .xt_rsc_1_19_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_1_19_i_wen_comp_1(xt_rsc_1_19_i_wen_comp_1),
      .xt_rsc_1_19_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_19_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_1_19_i_s_din_mxwt(xt_rsc_1_19_i_s_din_mxwt),
      .xt_rsc_1_19_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_19_i_inst_xt_rsc_1_19_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_20_i peaseNTT_core_xt_rsc_1_20_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_20_s_tdone(xt_rsc_1_20_s_tdone),
      .xt_rsc_1_20_tr_write_done(xt_rsc_1_20_tr_write_done),
      .xt_rsc_1_20_RREADY(xt_rsc_1_20_RREADY),
      .xt_rsc_1_20_RVALID(xt_rsc_1_20_RVALID),
      .xt_rsc_1_20_RUSER(xt_rsc_1_20_RUSER),
      .xt_rsc_1_20_RLAST(xt_rsc_1_20_RLAST),
      .xt_rsc_1_20_RRESP(xt_rsc_1_20_RRESP),
      .xt_rsc_1_20_RDATA(xt_rsc_1_20_RDATA),
      .xt_rsc_1_20_RID(xt_rsc_1_20_RID),
      .xt_rsc_1_20_ARREADY(xt_rsc_1_20_ARREADY),
      .xt_rsc_1_20_ARVALID(xt_rsc_1_20_ARVALID),
      .xt_rsc_1_20_ARUSER(xt_rsc_1_20_ARUSER),
      .xt_rsc_1_20_ARREGION(xt_rsc_1_20_ARREGION),
      .xt_rsc_1_20_ARQOS(xt_rsc_1_20_ARQOS),
      .xt_rsc_1_20_ARPROT(xt_rsc_1_20_ARPROT),
      .xt_rsc_1_20_ARCACHE(xt_rsc_1_20_ARCACHE),
      .xt_rsc_1_20_ARLOCK(xt_rsc_1_20_ARLOCK),
      .xt_rsc_1_20_ARBURST(xt_rsc_1_20_ARBURST),
      .xt_rsc_1_20_ARSIZE(xt_rsc_1_20_ARSIZE),
      .xt_rsc_1_20_ARLEN(xt_rsc_1_20_ARLEN),
      .xt_rsc_1_20_ARADDR(xt_rsc_1_20_ARADDR),
      .xt_rsc_1_20_ARID(xt_rsc_1_20_ARID),
      .xt_rsc_1_20_BREADY(xt_rsc_1_20_BREADY),
      .xt_rsc_1_20_BVALID(xt_rsc_1_20_BVALID),
      .xt_rsc_1_20_BUSER(xt_rsc_1_20_BUSER),
      .xt_rsc_1_20_BRESP(xt_rsc_1_20_BRESP),
      .xt_rsc_1_20_BID(xt_rsc_1_20_BID),
      .xt_rsc_1_20_WREADY(xt_rsc_1_20_WREADY),
      .xt_rsc_1_20_WVALID(xt_rsc_1_20_WVALID),
      .xt_rsc_1_20_WUSER(xt_rsc_1_20_WUSER),
      .xt_rsc_1_20_WLAST(xt_rsc_1_20_WLAST),
      .xt_rsc_1_20_WSTRB(xt_rsc_1_20_WSTRB),
      .xt_rsc_1_20_WDATA(xt_rsc_1_20_WDATA),
      .xt_rsc_1_20_AWREADY(xt_rsc_1_20_AWREADY),
      .xt_rsc_1_20_AWVALID(xt_rsc_1_20_AWVALID),
      .xt_rsc_1_20_AWUSER(xt_rsc_1_20_AWUSER),
      .xt_rsc_1_20_AWREGION(xt_rsc_1_20_AWREGION),
      .xt_rsc_1_20_AWQOS(xt_rsc_1_20_AWQOS),
      .xt_rsc_1_20_AWPROT(xt_rsc_1_20_AWPROT),
      .xt_rsc_1_20_AWCACHE(xt_rsc_1_20_AWCACHE),
      .xt_rsc_1_20_AWLOCK(xt_rsc_1_20_AWLOCK),
      .xt_rsc_1_20_AWBURST(xt_rsc_1_20_AWBURST),
      .xt_rsc_1_20_AWSIZE(xt_rsc_1_20_AWSIZE),
      .xt_rsc_1_20_AWLEN(xt_rsc_1_20_AWLEN),
      .xt_rsc_1_20_AWADDR(xt_rsc_1_20_AWADDR),
      .xt_rsc_1_20_AWID(xt_rsc_1_20_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_20_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_20_i_wen_comp(xt_rsc_1_20_i_wen_comp),
      .xt_rsc_1_20_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_1_20_i_wen_comp_1(xt_rsc_1_20_i_wen_comp_1),
      .xt_rsc_1_20_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_20_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_1_20_i_s_din_mxwt(xt_rsc_1_20_i_s_din_mxwt),
      .xt_rsc_1_20_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_20_i_inst_xt_rsc_1_20_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_21_i peaseNTT_core_xt_rsc_1_21_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_21_s_tdone(xt_rsc_1_21_s_tdone),
      .xt_rsc_1_21_tr_write_done(xt_rsc_1_21_tr_write_done),
      .xt_rsc_1_21_RREADY(xt_rsc_1_21_RREADY),
      .xt_rsc_1_21_RVALID(xt_rsc_1_21_RVALID),
      .xt_rsc_1_21_RUSER(xt_rsc_1_21_RUSER),
      .xt_rsc_1_21_RLAST(xt_rsc_1_21_RLAST),
      .xt_rsc_1_21_RRESP(xt_rsc_1_21_RRESP),
      .xt_rsc_1_21_RDATA(xt_rsc_1_21_RDATA),
      .xt_rsc_1_21_RID(xt_rsc_1_21_RID),
      .xt_rsc_1_21_ARREADY(xt_rsc_1_21_ARREADY),
      .xt_rsc_1_21_ARVALID(xt_rsc_1_21_ARVALID),
      .xt_rsc_1_21_ARUSER(xt_rsc_1_21_ARUSER),
      .xt_rsc_1_21_ARREGION(xt_rsc_1_21_ARREGION),
      .xt_rsc_1_21_ARQOS(xt_rsc_1_21_ARQOS),
      .xt_rsc_1_21_ARPROT(xt_rsc_1_21_ARPROT),
      .xt_rsc_1_21_ARCACHE(xt_rsc_1_21_ARCACHE),
      .xt_rsc_1_21_ARLOCK(xt_rsc_1_21_ARLOCK),
      .xt_rsc_1_21_ARBURST(xt_rsc_1_21_ARBURST),
      .xt_rsc_1_21_ARSIZE(xt_rsc_1_21_ARSIZE),
      .xt_rsc_1_21_ARLEN(xt_rsc_1_21_ARLEN),
      .xt_rsc_1_21_ARADDR(xt_rsc_1_21_ARADDR),
      .xt_rsc_1_21_ARID(xt_rsc_1_21_ARID),
      .xt_rsc_1_21_BREADY(xt_rsc_1_21_BREADY),
      .xt_rsc_1_21_BVALID(xt_rsc_1_21_BVALID),
      .xt_rsc_1_21_BUSER(xt_rsc_1_21_BUSER),
      .xt_rsc_1_21_BRESP(xt_rsc_1_21_BRESP),
      .xt_rsc_1_21_BID(xt_rsc_1_21_BID),
      .xt_rsc_1_21_WREADY(xt_rsc_1_21_WREADY),
      .xt_rsc_1_21_WVALID(xt_rsc_1_21_WVALID),
      .xt_rsc_1_21_WUSER(xt_rsc_1_21_WUSER),
      .xt_rsc_1_21_WLAST(xt_rsc_1_21_WLAST),
      .xt_rsc_1_21_WSTRB(xt_rsc_1_21_WSTRB),
      .xt_rsc_1_21_WDATA(xt_rsc_1_21_WDATA),
      .xt_rsc_1_21_AWREADY(xt_rsc_1_21_AWREADY),
      .xt_rsc_1_21_AWVALID(xt_rsc_1_21_AWVALID),
      .xt_rsc_1_21_AWUSER(xt_rsc_1_21_AWUSER),
      .xt_rsc_1_21_AWREGION(xt_rsc_1_21_AWREGION),
      .xt_rsc_1_21_AWQOS(xt_rsc_1_21_AWQOS),
      .xt_rsc_1_21_AWPROT(xt_rsc_1_21_AWPROT),
      .xt_rsc_1_21_AWCACHE(xt_rsc_1_21_AWCACHE),
      .xt_rsc_1_21_AWLOCK(xt_rsc_1_21_AWLOCK),
      .xt_rsc_1_21_AWBURST(xt_rsc_1_21_AWBURST),
      .xt_rsc_1_21_AWSIZE(xt_rsc_1_21_AWSIZE),
      .xt_rsc_1_21_AWLEN(xt_rsc_1_21_AWLEN),
      .xt_rsc_1_21_AWADDR(xt_rsc_1_21_AWADDR),
      .xt_rsc_1_21_AWID(xt_rsc_1_21_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_21_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_21_i_wen_comp(xt_rsc_1_21_i_wen_comp),
      .xt_rsc_1_21_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_1_21_i_wen_comp_1(xt_rsc_1_21_i_wen_comp_1),
      .xt_rsc_1_21_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_21_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_1_21_i_s_din_mxwt(xt_rsc_1_21_i_s_din_mxwt),
      .xt_rsc_1_21_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_21_i_inst_xt_rsc_1_21_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_22_i peaseNTT_core_xt_rsc_1_22_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_22_s_tdone(xt_rsc_1_22_s_tdone),
      .xt_rsc_1_22_tr_write_done(xt_rsc_1_22_tr_write_done),
      .xt_rsc_1_22_RREADY(xt_rsc_1_22_RREADY),
      .xt_rsc_1_22_RVALID(xt_rsc_1_22_RVALID),
      .xt_rsc_1_22_RUSER(xt_rsc_1_22_RUSER),
      .xt_rsc_1_22_RLAST(xt_rsc_1_22_RLAST),
      .xt_rsc_1_22_RRESP(xt_rsc_1_22_RRESP),
      .xt_rsc_1_22_RDATA(xt_rsc_1_22_RDATA),
      .xt_rsc_1_22_RID(xt_rsc_1_22_RID),
      .xt_rsc_1_22_ARREADY(xt_rsc_1_22_ARREADY),
      .xt_rsc_1_22_ARVALID(xt_rsc_1_22_ARVALID),
      .xt_rsc_1_22_ARUSER(xt_rsc_1_22_ARUSER),
      .xt_rsc_1_22_ARREGION(xt_rsc_1_22_ARREGION),
      .xt_rsc_1_22_ARQOS(xt_rsc_1_22_ARQOS),
      .xt_rsc_1_22_ARPROT(xt_rsc_1_22_ARPROT),
      .xt_rsc_1_22_ARCACHE(xt_rsc_1_22_ARCACHE),
      .xt_rsc_1_22_ARLOCK(xt_rsc_1_22_ARLOCK),
      .xt_rsc_1_22_ARBURST(xt_rsc_1_22_ARBURST),
      .xt_rsc_1_22_ARSIZE(xt_rsc_1_22_ARSIZE),
      .xt_rsc_1_22_ARLEN(xt_rsc_1_22_ARLEN),
      .xt_rsc_1_22_ARADDR(xt_rsc_1_22_ARADDR),
      .xt_rsc_1_22_ARID(xt_rsc_1_22_ARID),
      .xt_rsc_1_22_BREADY(xt_rsc_1_22_BREADY),
      .xt_rsc_1_22_BVALID(xt_rsc_1_22_BVALID),
      .xt_rsc_1_22_BUSER(xt_rsc_1_22_BUSER),
      .xt_rsc_1_22_BRESP(xt_rsc_1_22_BRESP),
      .xt_rsc_1_22_BID(xt_rsc_1_22_BID),
      .xt_rsc_1_22_WREADY(xt_rsc_1_22_WREADY),
      .xt_rsc_1_22_WVALID(xt_rsc_1_22_WVALID),
      .xt_rsc_1_22_WUSER(xt_rsc_1_22_WUSER),
      .xt_rsc_1_22_WLAST(xt_rsc_1_22_WLAST),
      .xt_rsc_1_22_WSTRB(xt_rsc_1_22_WSTRB),
      .xt_rsc_1_22_WDATA(xt_rsc_1_22_WDATA),
      .xt_rsc_1_22_AWREADY(xt_rsc_1_22_AWREADY),
      .xt_rsc_1_22_AWVALID(xt_rsc_1_22_AWVALID),
      .xt_rsc_1_22_AWUSER(xt_rsc_1_22_AWUSER),
      .xt_rsc_1_22_AWREGION(xt_rsc_1_22_AWREGION),
      .xt_rsc_1_22_AWQOS(xt_rsc_1_22_AWQOS),
      .xt_rsc_1_22_AWPROT(xt_rsc_1_22_AWPROT),
      .xt_rsc_1_22_AWCACHE(xt_rsc_1_22_AWCACHE),
      .xt_rsc_1_22_AWLOCK(xt_rsc_1_22_AWLOCK),
      .xt_rsc_1_22_AWBURST(xt_rsc_1_22_AWBURST),
      .xt_rsc_1_22_AWSIZE(xt_rsc_1_22_AWSIZE),
      .xt_rsc_1_22_AWLEN(xt_rsc_1_22_AWLEN),
      .xt_rsc_1_22_AWADDR(xt_rsc_1_22_AWADDR),
      .xt_rsc_1_22_AWID(xt_rsc_1_22_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_22_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_22_i_wen_comp(xt_rsc_1_22_i_wen_comp),
      .xt_rsc_1_22_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_1_22_i_wen_comp_1(xt_rsc_1_22_i_wen_comp_1),
      .xt_rsc_1_22_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_22_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_1_22_i_s_din_mxwt(xt_rsc_1_22_i_s_din_mxwt),
      .xt_rsc_1_22_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_22_i_inst_xt_rsc_1_22_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_23_i peaseNTT_core_xt_rsc_1_23_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_23_s_tdone(xt_rsc_1_23_s_tdone),
      .xt_rsc_1_23_tr_write_done(xt_rsc_1_23_tr_write_done),
      .xt_rsc_1_23_RREADY(xt_rsc_1_23_RREADY),
      .xt_rsc_1_23_RVALID(xt_rsc_1_23_RVALID),
      .xt_rsc_1_23_RUSER(xt_rsc_1_23_RUSER),
      .xt_rsc_1_23_RLAST(xt_rsc_1_23_RLAST),
      .xt_rsc_1_23_RRESP(xt_rsc_1_23_RRESP),
      .xt_rsc_1_23_RDATA(xt_rsc_1_23_RDATA),
      .xt_rsc_1_23_RID(xt_rsc_1_23_RID),
      .xt_rsc_1_23_ARREADY(xt_rsc_1_23_ARREADY),
      .xt_rsc_1_23_ARVALID(xt_rsc_1_23_ARVALID),
      .xt_rsc_1_23_ARUSER(xt_rsc_1_23_ARUSER),
      .xt_rsc_1_23_ARREGION(xt_rsc_1_23_ARREGION),
      .xt_rsc_1_23_ARQOS(xt_rsc_1_23_ARQOS),
      .xt_rsc_1_23_ARPROT(xt_rsc_1_23_ARPROT),
      .xt_rsc_1_23_ARCACHE(xt_rsc_1_23_ARCACHE),
      .xt_rsc_1_23_ARLOCK(xt_rsc_1_23_ARLOCK),
      .xt_rsc_1_23_ARBURST(xt_rsc_1_23_ARBURST),
      .xt_rsc_1_23_ARSIZE(xt_rsc_1_23_ARSIZE),
      .xt_rsc_1_23_ARLEN(xt_rsc_1_23_ARLEN),
      .xt_rsc_1_23_ARADDR(xt_rsc_1_23_ARADDR),
      .xt_rsc_1_23_ARID(xt_rsc_1_23_ARID),
      .xt_rsc_1_23_BREADY(xt_rsc_1_23_BREADY),
      .xt_rsc_1_23_BVALID(xt_rsc_1_23_BVALID),
      .xt_rsc_1_23_BUSER(xt_rsc_1_23_BUSER),
      .xt_rsc_1_23_BRESP(xt_rsc_1_23_BRESP),
      .xt_rsc_1_23_BID(xt_rsc_1_23_BID),
      .xt_rsc_1_23_WREADY(xt_rsc_1_23_WREADY),
      .xt_rsc_1_23_WVALID(xt_rsc_1_23_WVALID),
      .xt_rsc_1_23_WUSER(xt_rsc_1_23_WUSER),
      .xt_rsc_1_23_WLAST(xt_rsc_1_23_WLAST),
      .xt_rsc_1_23_WSTRB(xt_rsc_1_23_WSTRB),
      .xt_rsc_1_23_WDATA(xt_rsc_1_23_WDATA),
      .xt_rsc_1_23_AWREADY(xt_rsc_1_23_AWREADY),
      .xt_rsc_1_23_AWVALID(xt_rsc_1_23_AWVALID),
      .xt_rsc_1_23_AWUSER(xt_rsc_1_23_AWUSER),
      .xt_rsc_1_23_AWREGION(xt_rsc_1_23_AWREGION),
      .xt_rsc_1_23_AWQOS(xt_rsc_1_23_AWQOS),
      .xt_rsc_1_23_AWPROT(xt_rsc_1_23_AWPROT),
      .xt_rsc_1_23_AWCACHE(xt_rsc_1_23_AWCACHE),
      .xt_rsc_1_23_AWLOCK(xt_rsc_1_23_AWLOCK),
      .xt_rsc_1_23_AWBURST(xt_rsc_1_23_AWBURST),
      .xt_rsc_1_23_AWSIZE(xt_rsc_1_23_AWSIZE),
      .xt_rsc_1_23_AWLEN(xt_rsc_1_23_AWLEN),
      .xt_rsc_1_23_AWADDR(xt_rsc_1_23_AWADDR),
      .xt_rsc_1_23_AWID(xt_rsc_1_23_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_23_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_23_i_wen_comp(xt_rsc_1_23_i_wen_comp),
      .xt_rsc_1_23_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_1_23_i_wen_comp_1(xt_rsc_1_23_i_wen_comp_1),
      .xt_rsc_1_23_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_23_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_1_23_i_s_din_mxwt(xt_rsc_1_23_i_s_din_mxwt),
      .xt_rsc_1_23_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_23_i_inst_xt_rsc_1_23_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_24_i peaseNTT_core_xt_rsc_1_24_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_24_s_tdone(xt_rsc_1_24_s_tdone),
      .xt_rsc_1_24_tr_write_done(xt_rsc_1_24_tr_write_done),
      .xt_rsc_1_24_RREADY(xt_rsc_1_24_RREADY),
      .xt_rsc_1_24_RVALID(xt_rsc_1_24_RVALID),
      .xt_rsc_1_24_RUSER(xt_rsc_1_24_RUSER),
      .xt_rsc_1_24_RLAST(xt_rsc_1_24_RLAST),
      .xt_rsc_1_24_RRESP(xt_rsc_1_24_RRESP),
      .xt_rsc_1_24_RDATA(xt_rsc_1_24_RDATA),
      .xt_rsc_1_24_RID(xt_rsc_1_24_RID),
      .xt_rsc_1_24_ARREADY(xt_rsc_1_24_ARREADY),
      .xt_rsc_1_24_ARVALID(xt_rsc_1_24_ARVALID),
      .xt_rsc_1_24_ARUSER(xt_rsc_1_24_ARUSER),
      .xt_rsc_1_24_ARREGION(xt_rsc_1_24_ARREGION),
      .xt_rsc_1_24_ARQOS(xt_rsc_1_24_ARQOS),
      .xt_rsc_1_24_ARPROT(xt_rsc_1_24_ARPROT),
      .xt_rsc_1_24_ARCACHE(xt_rsc_1_24_ARCACHE),
      .xt_rsc_1_24_ARLOCK(xt_rsc_1_24_ARLOCK),
      .xt_rsc_1_24_ARBURST(xt_rsc_1_24_ARBURST),
      .xt_rsc_1_24_ARSIZE(xt_rsc_1_24_ARSIZE),
      .xt_rsc_1_24_ARLEN(xt_rsc_1_24_ARLEN),
      .xt_rsc_1_24_ARADDR(xt_rsc_1_24_ARADDR),
      .xt_rsc_1_24_ARID(xt_rsc_1_24_ARID),
      .xt_rsc_1_24_BREADY(xt_rsc_1_24_BREADY),
      .xt_rsc_1_24_BVALID(xt_rsc_1_24_BVALID),
      .xt_rsc_1_24_BUSER(xt_rsc_1_24_BUSER),
      .xt_rsc_1_24_BRESP(xt_rsc_1_24_BRESP),
      .xt_rsc_1_24_BID(xt_rsc_1_24_BID),
      .xt_rsc_1_24_WREADY(xt_rsc_1_24_WREADY),
      .xt_rsc_1_24_WVALID(xt_rsc_1_24_WVALID),
      .xt_rsc_1_24_WUSER(xt_rsc_1_24_WUSER),
      .xt_rsc_1_24_WLAST(xt_rsc_1_24_WLAST),
      .xt_rsc_1_24_WSTRB(xt_rsc_1_24_WSTRB),
      .xt_rsc_1_24_WDATA(xt_rsc_1_24_WDATA),
      .xt_rsc_1_24_AWREADY(xt_rsc_1_24_AWREADY),
      .xt_rsc_1_24_AWVALID(xt_rsc_1_24_AWVALID),
      .xt_rsc_1_24_AWUSER(xt_rsc_1_24_AWUSER),
      .xt_rsc_1_24_AWREGION(xt_rsc_1_24_AWREGION),
      .xt_rsc_1_24_AWQOS(xt_rsc_1_24_AWQOS),
      .xt_rsc_1_24_AWPROT(xt_rsc_1_24_AWPROT),
      .xt_rsc_1_24_AWCACHE(xt_rsc_1_24_AWCACHE),
      .xt_rsc_1_24_AWLOCK(xt_rsc_1_24_AWLOCK),
      .xt_rsc_1_24_AWBURST(xt_rsc_1_24_AWBURST),
      .xt_rsc_1_24_AWSIZE(xt_rsc_1_24_AWSIZE),
      .xt_rsc_1_24_AWLEN(xt_rsc_1_24_AWLEN),
      .xt_rsc_1_24_AWADDR(xt_rsc_1_24_AWADDR),
      .xt_rsc_1_24_AWID(xt_rsc_1_24_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_24_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_24_i_wen_comp(xt_rsc_1_24_i_wen_comp),
      .xt_rsc_1_24_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_1_24_i_wen_comp_1(xt_rsc_1_24_i_wen_comp_1),
      .xt_rsc_1_24_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_24_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_1_24_i_s_din_mxwt(xt_rsc_1_24_i_s_din_mxwt),
      .xt_rsc_1_24_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_24_i_inst_xt_rsc_1_24_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_25_i peaseNTT_core_xt_rsc_1_25_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_25_s_tdone(xt_rsc_1_25_s_tdone),
      .xt_rsc_1_25_tr_write_done(xt_rsc_1_25_tr_write_done),
      .xt_rsc_1_25_RREADY(xt_rsc_1_25_RREADY),
      .xt_rsc_1_25_RVALID(xt_rsc_1_25_RVALID),
      .xt_rsc_1_25_RUSER(xt_rsc_1_25_RUSER),
      .xt_rsc_1_25_RLAST(xt_rsc_1_25_RLAST),
      .xt_rsc_1_25_RRESP(xt_rsc_1_25_RRESP),
      .xt_rsc_1_25_RDATA(xt_rsc_1_25_RDATA),
      .xt_rsc_1_25_RID(xt_rsc_1_25_RID),
      .xt_rsc_1_25_ARREADY(xt_rsc_1_25_ARREADY),
      .xt_rsc_1_25_ARVALID(xt_rsc_1_25_ARVALID),
      .xt_rsc_1_25_ARUSER(xt_rsc_1_25_ARUSER),
      .xt_rsc_1_25_ARREGION(xt_rsc_1_25_ARREGION),
      .xt_rsc_1_25_ARQOS(xt_rsc_1_25_ARQOS),
      .xt_rsc_1_25_ARPROT(xt_rsc_1_25_ARPROT),
      .xt_rsc_1_25_ARCACHE(xt_rsc_1_25_ARCACHE),
      .xt_rsc_1_25_ARLOCK(xt_rsc_1_25_ARLOCK),
      .xt_rsc_1_25_ARBURST(xt_rsc_1_25_ARBURST),
      .xt_rsc_1_25_ARSIZE(xt_rsc_1_25_ARSIZE),
      .xt_rsc_1_25_ARLEN(xt_rsc_1_25_ARLEN),
      .xt_rsc_1_25_ARADDR(xt_rsc_1_25_ARADDR),
      .xt_rsc_1_25_ARID(xt_rsc_1_25_ARID),
      .xt_rsc_1_25_BREADY(xt_rsc_1_25_BREADY),
      .xt_rsc_1_25_BVALID(xt_rsc_1_25_BVALID),
      .xt_rsc_1_25_BUSER(xt_rsc_1_25_BUSER),
      .xt_rsc_1_25_BRESP(xt_rsc_1_25_BRESP),
      .xt_rsc_1_25_BID(xt_rsc_1_25_BID),
      .xt_rsc_1_25_WREADY(xt_rsc_1_25_WREADY),
      .xt_rsc_1_25_WVALID(xt_rsc_1_25_WVALID),
      .xt_rsc_1_25_WUSER(xt_rsc_1_25_WUSER),
      .xt_rsc_1_25_WLAST(xt_rsc_1_25_WLAST),
      .xt_rsc_1_25_WSTRB(xt_rsc_1_25_WSTRB),
      .xt_rsc_1_25_WDATA(xt_rsc_1_25_WDATA),
      .xt_rsc_1_25_AWREADY(xt_rsc_1_25_AWREADY),
      .xt_rsc_1_25_AWVALID(xt_rsc_1_25_AWVALID),
      .xt_rsc_1_25_AWUSER(xt_rsc_1_25_AWUSER),
      .xt_rsc_1_25_AWREGION(xt_rsc_1_25_AWREGION),
      .xt_rsc_1_25_AWQOS(xt_rsc_1_25_AWQOS),
      .xt_rsc_1_25_AWPROT(xt_rsc_1_25_AWPROT),
      .xt_rsc_1_25_AWCACHE(xt_rsc_1_25_AWCACHE),
      .xt_rsc_1_25_AWLOCK(xt_rsc_1_25_AWLOCK),
      .xt_rsc_1_25_AWBURST(xt_rsc_1_25_AWBURST),
      .xt_rsc_1_25_AWSIZE(xt_rsc_1_25_AWSIZE),
      .xt_rsc_1_25_AWLEN(xt_rsc_1_25_AWLEN),
      .xt_rsc_1_25_AWADDR(xt_rsc_1_25_AWADDR),
      .xt_rsc_1_25_AWID(xt_rsc_1_25_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_25_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_25_i_wen_comp(xt_rsc_1_25_i_wen_comp),
      .xt_rsc_1_25_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_1_25_i_wen_comp_1(xt_rsc_1_25_i_wen_comp_1),
      .xt_rsc_1_25_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_25_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_1_25_i_s_din_mxwt(xt_rsc_1_25_i_s_din_mxwt),
      .xt_rsc_1_25_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_25_i_inst_xt_rsc_1_25_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_26_i peaseNTT_core_xt_rsc_1_26_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_26_s_tdone(xt_rsc_1_26_s_tdone),
      .xt_rsc_1_26_tr_write_done(xt_rsc_1_26_tr_write_done),
      .xt_rsc_1_26_RREADY(xt_rsc_1_26_RREADY),
      .xt_rsc_1_26_RVALID(xt_rsc_1_26_RVALID),
      .xt_rsc_1_26_RUSER(xt_rsc_1_26_RUSER),
      .xt_rsc_1_26_RLAST(xt_rsc_1_26_RLAST),
      .xt_rsc_1_26_RRESP(xt_rsc_1_26_RRESP),
      .xt_rsc_1_26_RDATA(xt_rsc_1_26_RDATA),
      .xt_rsc_1_26_RID(xt_rsc_1_26_RID),
      .xt_rsc_1_26_ARREADY(xt_rsc_1_26_ARREADY),
      .xt_rsc_1_26_ARVALID(xt_rsc_1_26_ARVALID),
      .xt_rsc_1_26_ARUSER(xt_rsc_1_26_ARUSER),
      .xt_rsc_1_26_ARREGION(xt_rsc_1_26_ARREGION),
      .xt_rsc_1_26_ARQOS(xt_rsc_1_26_ARQOS),
      .xt_rsc_1_26_ARPROT(xt_rsc_1_26_ARPROT),
      .xt_rsc_1_26_ARCACHE(xt_rsc_1_26_ARCACHE),
      .xt_rsc_1_26_ARLOCK(xt_rsc_1_26_ARLOCK),
      .xt_rsc_1_26_ARBURST(xt_rsc_1_26_ARBURST),
      .xt_rsc_1_26_ARSIZE(xt_rsc_1_26_ARSIZE),
      .xt_rsc_1_26_ARLEN(xt_rsc_1_26_ARLEN),
      .xt_rsc_1_26_ARADDR(xt_rsc_1_26_ARADDR),
      .xt_rsc_1_26_ARID(xt_rsc_1_26_ARID),
      .xt_rsc_1_26_BREADY(xt_rsc_1_26_BREADY),
      .xt_rsc_1_26_BVALID(xt_rsc_1_26_BVALID),
      .xt_rsc_1_26_BUSER(xt_rsc_1_26_BUSER),
      .xt_rsc_1_26_BRESP(xt_rsc_1_26_BRESP),
      .xt_rsc_1_26_BID(xt_rsc_1_26_BID),
      .xt_rsc_1_26_WREADY(xt_rsc_1_26_WREADY),
      .xt_rsc_1_26_WVALID(xt_rsc_1_26_WVALID),
      .xt_rsc_1_26_WUSER(xt_rsc_1_26_WUSER),
      .xt_rsc_1_26_WLAST(xt_rsc_1_26_WLAST),
      .xt_rsc_1_26_WSTRB(xt_rsc_1_26_WSTRB),
      .xt_rsc_1_26_WDATA(xt_rsc_1_26_WDATA),
      .xt_rsc_1_26_AWREADY(xt_rsc_1_26_AWREADY),
      .xt_rsc_1_26_AWVALID(xt_rsc_1_26_AWVALID),
      .xt_rsc_1_26_AWUSER(xt_rsc_1_26_AWUSER),
      .xt_rsc_1_26_AWREGION(xt_rsc_1_26_AWREGION),
      .xt_rsc_1_26_AWQOS(xt_rsc_1_26_AWQOS),
      .xt_rsc_1_26_AWPROT(xt_rsc_1_26_AWPROT),
      .xt_rsc_1_26_AWCACHE(xt_rsc_1_26_AWCACHE),
      .xt_rsc_1_26_AWLOCK(xt_rsc_1_26_AWLOCK),
      .xt_rsc_1_26_AWBURST(xt_rsc_1_26_AWBURST),
      .xt_rsc_1_26_AWSIZE(xt_rsc_1_26_AWSIZE),
      .xt_rsc_1_26_AWLEN(xt_rsc_1_26_AWLEN),
      .xt_rsc_1_26_AWADDR(xt_rsc_1_26_AWADDR),
      .xt_rsc_1_26_AWID(xt_rsc_1_26_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_26_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_26_i_wen_comp(xt_rsc_1_26_i_wen_comp),
      .xt_rsc_1_26_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_1_26_i_wen_comp_1(xt_rsc_1_26_i_wen_comp_1),
      .xt_rsc_1_26_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_26_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_1_26_i_s_din_mxwt(xt_rsc_1_26_i_s_din_mxwt),
      .xt_rsc_1_26_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_26_i_inst_xt_rsc_1_26_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_27_i peaseNTT_core_xt_rsc_1_27_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_27_s_tdone(xt_rsc_1_27_s_tdone),
      .xt_rsc_1_27_tr_write_done(xt_rsc_1_27_tr_write_done),
      .xt_rsc_1_27_RREADY(xt_rsc_1_27_RREADY),
      .xt_rsc_1_27_RVALID(xt_rsc_1_27_RVALID),
      .xt_rsc_1_27_RUSER(xt_rsc_1_27_RUSER),
      .xt_rsc_1_27_RLAST(xt_rsc_1_27_RLAST),
      .xt_rsc_1_27_RRESP(xt_rsc_1_27_RRESP),
      .xt_rsc_1_27_RDATA(xt_rsc_1_27_RDATA),
      .xt_rsc_1_27_RID(xt_rsc_1_27_RID),
      .xt_rsc_1_27_ARREADY(xt_rsc_1_27_ARREADY),
      .xt_rsc_1_27_ARVALID(xt_rsc_1_27_ARVALID),
      .xt_rsc_1_27_ARUSER(xt_rsc_1_27_ARUSER),
      .xt_rsc_1_27_ARREGION(xt_rsc_1_27_ARREGION),
      .xt_rsc_1_27_ARQOS(xt_rsc_1_27_ARQOS),
      .xt_rsc_1_27_ARPROT(xt_rsc_1_27_ARPROT),
      .xt_rsc_1_27_ARCACHE(xt_rsc_1_27_ARCACHE),
      .xt_rsc_1_27_ARLOCK(xt_rsc_1_27_ARLOCK),
      .xt_rsc_1_27_ARBURST(xt_rsc_1_27_ARBURST),
      .xt_rsc_1_27_ARSIZE(xt_rsc_1_27_ARSIZE),
      .xt_rsc_1_27_ARLEN(xt_rsc_1_27_ARLEN),
      .xt_rsc_1_27_ARADDR(xt_rsc_1_27_ARADDR),
      .xt_rsc_1_27_ARID(xt_rsc_1_27_ARID),
      .xt_rsc_1_27_BREADY(xt_rsc_1_27_BREADY),
      .xt_rsc_1_27_BVALID(xt_rsc_1_27_BVALID),
      .xt_rsc_1_27_BUSER(xt_rsc_1_27_BUSER),
      .xt_rsc_1_27_BRESP(xt_rsc_1_27_BRESP),
      .xt_rsc_1_27_BID(xt_rsc_1_27_BID),
      .xt_rsc_1_27_WREADY(xt_rsc_1_27_WREADY),
      .xt_rsc_1_27_WVALID(xt_rsc_1_27_WVALID),
      .xt_rsc_1_27_WUSER(xt_rsc_1_27_WUSER),
      .xt_rsc_1_27_WLAST(xt_rsc_1_27_WLAST),
      .xt_rsc_1_27_WSTRB(xt_rsc_1_27_WSTRB),
      .xt_rsc_1_27_WDATA(xt_rsc_1_27_WDATA),
      .xt_rsc_1_27_AWREADY(xt_rsc_1_27_AWREADY),
      .xt_rsc_1_27_AWVALID(xt_rsc_1_27_AWVALID),
      .xt_rsc_1_27_AWUSER(xt_rsc_1_27_AWUSER),
      .xt_rsc_1_27_AWREGION(xt_rsc_1_27_AWREGION),
      .xt_rsc_1_27_AWQOS(xt_rsc_1_27_AWQOS),
      .xt_rsc_1_27_AWPROT(xt_rsc_1_27_AWPROT),
      .xt_rsc_1_27_AWCACHE(xt_rsc_1_27_AWCACHE),
      .xt_rsc_1_27_AWLOCK(xt_rsc_1_27_AWLOCK),
      .xt_rsc_1_27_AWBURST(xt_rsc_1_27_AWBURST),
      .xt_rsc_1_27_AWSIZE(xt_rsc_1_27_AWSIZE),
      .xt_rsc_1_27_AWLEN(xt_rsc_1_27_AWLEN),
      .xt_rsc_1_27_AWADDR(xt_rsc_1_27_AWADDR),
      .xt_rsc_1_27_AWID(xt_rsc_1_27_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_27_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_27_i_wen_comp(xt_rsc_1_27_i_wen_comp),
      .xt_rsc_1_27_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_1_27_i_wen_comp_1(xt_rsc_1_27_i_wen_comp_1),
      .xt_rsc_1_27_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_27_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_1_27_i_s_din_mxwt(xt_rsc_1_27_i_s_din_mxwt),
      .xt_rsc_1_27_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_27_i_inst_xt_rsc_1_27_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_28_i peaseNTT_core_xt_rsc_1_28_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_28_s_tdone(xt_rsc_1_28_s_tdone),
      .xt_rsc_1_28_tr_write_done(xt_rsc_1_28_tr_write_done),
      .xt_rsc_1_28_RREADY(xt_rsc_1_28_RREADY),
      .xt_rsc_1_28_RVALID(xt_rsc_1_28_RVALID),
      .xt_rsc_1_28_RUSER(xt_rsc_1_28_RUSER),
      .xt_rsc_1_28_RLAST(xt_rsc_1_28_RLAST),
      .xt_rsc_1_28_RRESP(xt_rsc_1_28_RRESP),
      .xt_rsc_1_28_RDATA(xt_rsc_1_28_RDATA),
      .xt_rsc_1_28_RID(xt_rsc_1_28_RID),
      .xt_rsc_1_28_ARREADY(xt_rsc_1_28_ARREADY),
      .xt_rsc_1_28_ARVALID(xt_rsc_1_28_ARVALID),
      .xt_rsc_1_28_ARUSER(xt_rsc_1_28_ARUSER),
      .xt_rsc_1_28_ARREGION(xt_rsc_1_28_ARREGION),
      .xt_rsc_1_28_ARQOS(xt_rsc_1_28_ARQOS),
      .xt_rsc_1_28_ARPROT(xt_rsc_1_28_ARPROT),
      .xt_rsc_1_28_ARCACHE(xt_rsc_1_28_ARCACHE),
      .xt_rsc_1_28_ARLOCK(xt_rsc_1_28_ARLOCK),
      .xt_rsc_1_28_ARBURST(xt_rsc_1_28_ARBURST),
      .xt_rsc_1_28_ARSIZE(xt_rsc_1_28_ARSIZE),
      .xt_rsc_1_28_ARLEN(xt_rsc_1_28_ARLEN),
      .xt_rsc_1_28_ARADDR(xt_rsc_1_28_ARADDR),
      .xt_rsc_1_28_ARID(xt_rsc_1_28_ARID),
      .xt_rsc_1_28_BREADY(xt_rsc_1_28_BREADY),
      .xt_rsc_1_28_BVALID(xt_rsc_1_28_BVALID),
      .xt_rsc_1_28_BUSER(xt_rsc_1_28_BUSER),
      .xt_rsc_1_28_BRESP(xt_rsc_1_28_BRESP),
      .xt_rsc_1_28_BID(xt_rsc_1_28_BID),
      .xt_rsc_1_28_WREADY(xt_rsc_1_28_WREADY),
      .xt_rsc_1_28_WVALID(xt_rsc_1_28_WVALID),
      .xt_rsc_1_28_WUSER(xt_rsc_1_28_WUSER),
      .xt_rsc_1_28_WLAST(xt_rsc_1_28_WLAST),
      .xt_rsc_1_28_WSTRB(xt_rsc_1_28_WSTRB),
      .xt_rsc_1_28_WDATA(xt_rsc_1_28_WDATA),
      .xt_rsc_1_28_AWREADY(xt_rsc_1_28_AWREADY),
      .xt_rsc_1_28_AWVALID(xt_rsc_1_28_AWVALID),
      .xt_rsc_1_28_AWUSER(xt_rsc_1_28_AWUSER),
      .xt_rsc_1_28_AWREGION(xt_rsc_1_28_AWREGION),
      .xt_rsc_1_28_AWQOS(xt_rsc_1_28_AWQOS),
      .xt_rsc_1_28_AWPROT(xt_rsc_1_28_AWPROT),
      .xt_rsc_1_28_AWCACHE(xt_rsc_1_28_AWCACHE),
      .xt_rsc_1_28_AWLOCK(xt_rsc_1_28_AWLOCK),
      .xt_rsc_1_28_AWBURST(xt_rsc_1_28_AWBURST),
      .xt_rsc_1_28_AWSIZE(xt_rsc_1_28_AWSIZE),
      .xt_rsc_1_28_AWLEN(xt_rsc_1_28_AWLEN),
      .xt_rsc_1_28_AWADDR(xt_rsc_1_28_AWADDR),
      .xt_rsc_1_28_AWID(xt_rsc_1_28_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_28_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_28_i_wen_comp(xt_rsc_1_28_i_wen_comp),
      .xt_rsc_1_28_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_1_28_i_wen_comp_1(xt_rsc_1_28_i_wen_comp_1),
      .xt_rsc_1_28_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_28_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_1_28_i_s_din_mxwt(xt_rsc_1_28_i_s_din_mxwt),
      .xt_rsc_1_28_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_28_i_inst_xt_rsc_1_28_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_29_i peaseNTT_core_xt_rsc_1_29_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_29_s_tdone(xt_rsc_1_29_s_tdone),
      .xt_rsc_1_29_tr_write_done(xt_rsc_1_29_tr_write_done),
      .xt_rsc_1_29_RREADY(xt_rsc_1_29_RREADY),
      .xt_rsc_1_29_RVALID(xt_rsc_1_29_RVALID),
      .xt_rsc_1_29_RUSER(xt_rsc_1_29_RUSER),
      .xt_rsc_1_29_RLAST(xt_rsc_1_29_RLAST),
      .xt_rsc_1_29_RRESP(xt_rsc_1_29_RRESP),
      .xt_rsc_1_29_RDATA(xt_rsc_1_29_RDATA),
      .xt_rsc_1_29_RID(xt_rsc_1_29_RID),
      .xt_rsc_1_29_ARREADY(xt_rsc_1_29_ARREADY),
      .xt_rsc_1_29_ARVALID(xt_rsc_1_29_ARVALID),
      .xt_rsc_1_29_ARUSER(xt_rsc_1_29_ARUSER),
      .xt_rsc_1_29_ARREGION(xt_rsc_1_29_ARREGION),
      .xt_rsc_1_29_ARQOS(xt_rsc_1_29_ARQOS),
      .xt_rsc_1_29_ARPROT(xt_rsc_1_29_ARPROT),
      .xt_rsc_1_29_ARCACHE(xt_rsc_1_29_ARCACHE),
      .xt_rsc_1_29_ARLOCK(xt_rsc_1_29_ARLOCK),
      .xt_rsc_1_29_ARBURST(xt_rsc_1_29_ARBURST),
      .xt_rsc_1_29_ARSIZE(xt_rsc_1_29_ARSIZE),
      .xt_rsc_1_29_ARLEN(xt_rsc_1_29_ARLEN),
      .xt_rsc_1_29_ARADDR(xt_rsc_1_29_ARADDR),
      .xt_rsc_1_29_ARID(xt_rsc_1_29_ARID),
      .xt_rsc_1_29_BREADY(xt_rsc_1_29_BREADY),
      .xt_rsc_1_29_BVALID(xt_rsc_1_29_BVALID),
      .xt_rsc_1_29_BUSER(xt_rsc_1_29_BUSER),
      .xt_rsc_1_29_BRESP(xt_rsc_1_29_BRESP),
      .xt_rsc_1_29_BID(xt_rsc_1_29_BID),
      .xt_rsc_1_29_WREADY(xt_rsc_1_29_WREADY),
      .xt_rsc_1_29_WVALID(xt_rsc_1_29_WVALID),
      .xt_rsc_1_29_WUSER(xt_rsc_1_29_WUSER),
      .xt_rsc_1_29_WLAST(xt_rsc_1_29_WLAST),
      .xt_rsc_1_29_WSTRB(xt_rsc_1_29_WSTRB),
      .xt_rsc_1_29_WDATA(xt_rsc_1_29_WDATA),
      .xt_rsc_1_29_AWREADY(xt_rsc_1_29_AWREADY),
      .xt_rsc_1_29_AWVALID(xt_rsc_1_29_AWVALID),
      .xt_rsc_1_29_AWUSER(xt_rsc_1_29_AWUSER),
      .xt_rsc_1_29_AWREGION(xt_rsc_1_29_AWREGION),
      .xt_rsc_1_29_AWQOS(xt_rsc_1_29_AWQOS),
      .xt_rsc_1_29_AWPROT(xt_rsc_1_29_AWPROT),
      .xt_rsc_1_29_AWCACHE(xt_rsc_1_29_AWCACHE),
      .xt_rsc_1_29_AWLOCK(xt_rsc_1_29_AWLOCK),
      .xt_rsc_1_29_AWBURST(xt_rsc_1_29_AWBURST),
      .xt_rsc_1_29_AWSIZE(xt_rsc_1_29_AWSIZE),
      .xt_rsc_1_29_AWLEN(xt_rsc_1_29_AWLEN),
      .xt_rsc_1_29_AWADDR(xt_rsc_1_29_AWADDR),
      .xt_rsc_1_29_AWID(xt_rsc_1_29_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_29_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_29_i_wen_comp(xt_rsc_1_29_i_wen_comp),
      .xt_rsc_1_29_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_1_29_i_wen_comp_1(xt_rsc_1_29_i_wen_comp_1),
      .xt_rsc_1_29_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_29_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_1_29_i_s_din_mxwt(xt_rsc_1_29_i_s_din_mxwt),
      .xt_rsc_1_29_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_29_i_inst_xt_rsc_1_29_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_30_i peaseNTT_core_xt_rsc_1_30_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_30_s_tdone(xt_rsc_1_30_s_tdone),
      .xt_rsc_1_30_tr_write_done(xt_rsc_1_30_tr_write_done),
      .xt_rsc_1_30_RREADY(xt_rsc_1_30_RREADY),
      .xt_rsc_1_30_RVALID(xt_rsc_1_30_RVALID),
      .xt_rsc_1_30_RUSER(xt_rsc_1_30_RUSER),
      .xt_rsc_1_30_RLAST(xt_rsc_1_30_RLAST),
      .xt_rsc_1_30_RRESP(xt_rsc_1_30_RRESP),
      .xt_rsc_1_30_RDATA(xt_rsc_1_30_RDATA),
      .xt_rsc_1_30_RID(xt_rsc_1_30_RID),
      .xt_rsc_1_30_ARREADY(xt_rsc_1_30_ARREADY),
      .xt_rsc_1_30_ARVALID(xt_rsc_1_30_ARVALID),
      .xt_rsc_1_30_ARUSER(xt_rsc_1_30_ARUSER),
      .xt_rsc_1_30_ARREGION(xt_rsc_1_30_ARREGION),
      .xt_rsc_1_30_ARQOS(xt_rsc_1_30_ARQOS),
      .xt_rsc_1_30_ARPROT(xt_rsc_1_30_ARPROT),
      .xt_rsc_1_30_ARCACHE(xt_rsc_1_30_ARCACHE),
      .xt_rsc_1_30_ARLOCK(xt_rsc_1_30_ARLOCK),
      .xt_rsc_1_30_ARBURST(xt_rsc_1_30_ARBURST),
      .xt_rsc_1_30_ARSIZE(xt_rsc_1_30_ARSIZE),
      .xt_rsc_1_30_ARLEN(xt_rsc_1_30_ARLEN),
      .xt_rsc_1_30_ARADDR(xt_rsc_1_30_ARADDR),
      .xt_rsc_1_30_ARID(xt_rsc_1_30_ARID),
      .xt_rsc_1_30_BREADY(xt_rsc_1_30_BREADY),
      .xt_rsc_1_30_BVALID(xt_rsc_1_30_BVALID),
      .xt_rsc_1_30_BUSER(xt_rsc_1_30_BUSER),
      .xt_rsc_1_30_BRESP(xt_rsc_1_30_BRESP),
      .xt_rsc_1_30_BID(xt_rsc_1_30_BID),
      .xt_rsc_1_30_WREADY(xt_rsc_1_30_WREADY),
      .xt_rsc_1_30_WVALID(xt_rsc_1_30_WVALID),
      .xt_rsc_1_30_WUSER(xt_rsc_1_30_WUSER),
      .xt_rsc_1_30_WLAST(xt_rsc_1_30_WLAST),
      .xt_rsc_1_30_WSTRB(xt_rsc_1_30_WSTRB),
      .xt_rsc_1_30_WDATA(xt_rsc_1_30_WDATA),
      .xt_rsc_1_30_AWREADY(xt_rsc_1_30_AWREADY),
      .xt_rsc_1_30_AWVALID(xt_rsc_1_30_AWVALID),
      .xt_rsc_1_30_AWUSER(xt_rsc_1_30_AWUSER),
      .xt_rsc_1_30_AWREGION(xt_rsc_1_30_AWREGION),
      .xt_rsc_1_30_AWQOS(xt_rsc_1_30_AWQOS),
      .xt_rsc_1_30_AWPROT(xt_rsc_1_30_AWPROT),
      .xt_rsc_1_30_AWCACHE(xt_rsc_1_30_AWCACHE),
      .xt_rsc_1_30_AWLOCK(xt_rsc_1_30_AWLOCK),
      .xt_rsc_1_30_AWBURST(xt_rsc_1_30_AWBURST),
      .xt_rsc_1_30_AWSIZE(xt_rsc_1_30_AWSIZE),
      .xt_rsc_1_30_AWLEN(xt_rsc_1_30_AWLEN),
      .xt_rsc_1_30_AWADDR(xt_rsc_1_30_AWADDR),
      .xt_rsc_1_30_AWID(xt_rsc_1_30_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_30_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_30_i_wen_comp(xt_rsc_1_30_i_wen_comp),
      .xt_rsc_1_30_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_1_30_i_wen_comp_1(xt_rsc_1_30_i_wen_comp_1),
      .xt_rsc_1_30_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_30_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_1_30_i_s_din_mxwt(xt_rsc_1_30_i_s_din_mxwt),
      .xt_rsc_1_30_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_30_i_inst_xt_rsc_1_30_i_s_dout_core[31:0])
    );
  peaseNTT_core_xt_rsc_1_31_i peaseNTT_core_xt_rsc_1_31_i_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_1_31_s_tdone(xt_rsc_1_31_s_tdone),
      .xt_rsc_1_31_tr_write_done(xt_rsc_1_31_tr_write_done),
      .xt_rsc_1_31_RREADY(xt_rsc_1_31_RREADY),
      .xt_rsc_1_31_RVALID(xt_rsc_1_31_RVALID),
      .xt_rsc_1_31_RUSER(xt_rsc_1_31_RUSER),
      .xt_rsc_1_31_RLAST(xt_rsc_1_31_RLAST),
      .xt_rsc_1_31_RRESP(xt_rsc_1_31_RRESP),
      .xt_rsc_1_31_RDATA(xt_rsc_1_31_RDATA),
      .xt_rsc_1_31_RID(xt_rsc_1_31_RID),
      .xt_rsc_1_31_ARREADY(xt_rsc_1_31_ARREADY),
      .xt_rsc_1_31_ARVALID(xt_rsc_1_31_ARVALID),
      .xt_rsc_1_31_ARUSER(xt_rsc_1_31_ARUSER),
      .xt_rsc_1_31_ARREGION(xt_rsc_1_31_ARREGION),
      .xt_rsc_1_31_ARQOS(xt_rsc_1_31_ARQOS),
      .xt_rsc_1_31_ARPROT(xt_rsc_1_31_ARPROT),
      .xt_rsc_1_31_ARCACHE(xt_rsc_1_31_ARCACHE),
      .xt_rsc_1_31_ARLOCK(xt_rsc_1_31_ARLOCK),
      .xt_rsc_1_31_ARBURST(xt_rsc_1_31_ARBURST),
      .xt_rsc_1_31_ARSIZE(xt_rsc_1_31_ARSIZE),
      .xt_rsc_1_31_ARLEN(xt_rsc_1_31_ARLEN),
      .xt_rsc_1_31_ARADDR(xt_rsc_1_31_ARADDR),
      .xt_rsc_1_31_ARID(xt_rsc_1_31_ARID),
      .xt_rsc_1_31_BREADY(xt_rsc_1_31_BREADY),
      .xt_rsc_1_31_BVALID(xt_rsc_1_31_BVALID),
      .xt_rsc_1_31_BUSER(xt_rsc_1_31_BUSER),
      .xt_rsc_1_31_BRESP(xt_rsc_1_31_BRESP),
      .xt_rsc_1_31_BID(xt_rsc_1_31_BID),
      .xt_rsc_1_31_WREADY(xt_rsc_1_31_WREADY),
      .xt_rsc_1_31_WVALID(xt_rsc_1_31_WVALID),
      .xt_rsc_1_31_WUSER(xt_rsc_1_31_WUSER),
      .xt_rsc_1_31_WLAST(xt_rsc_1_31_WLAST),
      .xt_rsc_1_31_WSTRB(xt_rsc_1_31_WSTRB),
      .xt_rsc_1_31_WDATA(xt_rsc_1_31_WDATA),
      .xt_rsc_1_31_AWREADY(xt_rsc_1_31_AWREADY),
      .xt_rsc_1_31_AWVALID(xt_rsc_1_31_AWVALID),
      .xt_rsc_1_31_AWUSER(xt_rsc_1_31_AWUSER),
      .xt_rsc_1_31_AWREGION(xt_rsc_1_31_AWREGION),
      .xt_rsc_1_31_AWQOS(xt_rsc_1_31_AWQOS),
      .xt_rsc_1_31_AWPROT(xt_rsc_1_31_AWPROT),
      .xt_rsc_1_31_AWCACHE(xt_rsc_1_31_AWCACHE),
      .xt_rsc_1_31_AWLOCK(xt_rsc_1_31_AWLOCK),
      .xt_rsc_1_31_AWBURST(xt_rsc_1_31_AWBURST),
      .xt_rsc_1_31_AWSIZE(xt_rsc_1_31_AWSIZE),
      .xt_rsc_1_31_AWLEN(xt_rsc_1_31_AWLEN),
      .xt_rsc_1_31_AWADDR(xt_rsc_1_31_AWADDR),
      .xt_rsc_1_31_AWID(xt_rsc_1_31_AWID),
      .core_wen(core_wen),
      .xt_rsc_1_31_i_oswt(reg_xt_rsc_1_0_i_oswt_cse),
      .xt_rsc_1_31_i_wen_comp(xt_rsc_1_31_i_wen_comp),
      .xt_rsc_1_31_i_oswt_1(reg_xt_rsc_0_16_i_oswt_1_cse),
      .xt_rsc_1_31_i_wen_comp_1(xt_rsc_1_31_i_wen_comp_1),
      .xt_rsc_1_31_i_s_raddr_core(reg_xt_rsc_0_0_i_s_raddr_core_cse),
      .xt_rsc_1_31_i_s_waddr_core(reg_xt_rsc_0_16_i_s_waddr_core_cse),
      .xt_rsc_1_31_i_s_din_mxwt(xt_rsc_1_31_i_s_din_mxwt),
      .xt_rsc_1_31_i_s_dout_core(nl_peaseNTT_core_xt_rsc_1_31_i_inst_xt_rsc_1_31_i_s_dout_core[31:0])
    );
  peaseNTT_core_twiddle_rsc_0_0_i peaseNTT_core_twiddle_rsc_0_0_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_0_s_tdone(twiddle_rsc_0_0_s_tdone),
      .twiddle_rsc_0_0_tr_write_done(twiddle_rsc_0_0_tr_write_done),
      .twiddle_rsc_0_0_RREADY(twiddle_rsc_0_0_RREADY),
      .twiddle_rsc_0_0_RVALID(twiddle_rsc_0_0_RVALID),
      .twiddle_rsc_0_0_RUSER(twiddle_rsc_0_0_RUSER),
      .twiddle_rsc_0_0_RLAST(twiddle_rsc_0_0_RLAST),
      .twiddle_rsc_0_0_RRESP(twiddle_rsc_0_0_RRESP),
      .twiddle_rsc_0_0_RDATA(twiddle_rsc_0_0_RDATA),
      .twiddle_rsc_0_0_RID(twiddle_rsc_0_0_RID),
      .twiddle_rsc_0_0_ARREADY(twiddle_rsc_0_0_ARREADY),
      .twiddle_rsc_0_0_ARVALID(twiddle_rsc_0_0_ARVALID),
      .twiddle_rsc_0_0_ARUSER(twiddle_rsc_0_0_ARUSER),
      .twiddle_rsc_0_0_ARREGION(twiddle_rsc_0_0_ARREGION),
      .twiddle_rsc_0_0_ARQOS(twiddle_rsc_0_0_ARQOS),
      .twiddle_rsc_0_0_ARPROT(twiddle_rsc_0_0_ARPROT),
      .twiddle_rsc_0_0_ARCACHE(twiddle_rsc_0_0_ARCACHE),
      .twiddle_rsc_0_0_ARLOCK(twiddle_rsc_0_0_ARLOCK),
      .twiddle_rsc_0_0_ARBURST(twiddle_rsc_0_0_ARBURST),
      .twiddle_rsc_0_0_ARSIZE(twiddle_rsc_0_0_ARSIZE),
      .twiddle_rsc_0_0_ARLEN(twiddle_rsc_0_0_ARLEN),
      .twiddle_rsc_0_0_ARADDR(twiddle_rsc_0_0_ARADDR),
      .twiddle_rsc_0_0_ARID(twiddle_rsc_0_0_ARID),
      .twiddle_rsc_0_0_BREADY(twiddle_rsc_0_0_BREADY),
      .twiddle_rsc_0_0_BVALID(twiddle_rsc_0_0_BVALID),
      .twiddle_rsc_0_0_BUSER(twiddle_rsc_0_0_BUSER),
      .twiddle_rsc_0_0_BRESP(twiddle_rsc_0_0_BRESP),
      .twiddle_rsc_0_0_BID(twiddle_rsc_0_0_BID),
      .twiddle_rsc_0_0_WREADY(twiddle_rsc_0_0_WREADY),
      .twiddle_rsc_0_0_WVALID(twiddle_rsc_0_0_WVALID),
      .twiddle_rsc_0_0_WUSER(twiddle_rsc_0_0_WUSER),
      .twiddle_rsc_0_0_WLAST(twiddle_rsc_0_0_WLAST),
      .twiddle_rsc_0_0_WSTRB(twiddle_rsc_0_0_WSTRB),
      .twiddle_rsc_0_0_WDATA(twiddle_rsc_0_0_WDATA),
      .twiddle_rsc_0_0_AWREADY(twiddle_rsc_0_0_AWREADY),
      .twiddle_rsc_0_0_AWVALID(twiddle_rsc_0_0_AWVALID),
      .twiddle_rsc_0_0_AWUSER(twiddle_rsc_0_0_AWUSER),
      .twiddle_rsc_0_0_AWREGION(twiddle_rsc_0_0_AWREGION),
      .twiddle_rsc_0_0_AWQOS(twiddle_rsc_0_0_AWQOS),
      .twiddle_rsc_0_0_AWPROT(twiddle_rsc_0_0_AWPROT),
      .twiddle_rsc_0_0_AWCACHE(twiddle_rsc_0_0_AWCACHE),
      .twiddle_rsc_0_0_AWLOCK(twiddle_rsc_0_0_AWLOCK),
      .twiddle_rsc_0_0_AWBURST(twiddle_rsc_0_0_AWBURST),
      .twiddle_rsc_0_0_AWSIZE(twiddle_rsc_0_0_AWSIZE),
      .twiddle_rsc_0_0_AWLEN(twiddle_rsc_0_0_AWLEN),
      .twiddle_rsc_0_0_AWADDR(twiddle_rsc_0_0_AWADDR),
      .twiddle_rsc_0_0_AWID(twiddle_rsc_0_0_AWID),
      .core_wen(core_wen),
      .twiddle_rsc_0_0_i_oswt(reg_twiddle_rsc_0_0_i_oswt_cse),
      .twiddle_rsc_0_0_i_wen_comp(twiddle_rsc_0_0_i_wen_comp),
      .twiddle_rsc_0_0_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_0_i_s_din_mxwt(twiddle_rsc_0_0_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_rsc_0_1_i peaseNTT_core_twiddle_rsc_0_1_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_1_s_tdone(twiddle_rsc_0_1_s_tdone),
      .twiddle_rsc_0_1_tr_write_done(twiddle_rsc_0_1_tr_write_done),
      .twiddle_rsc_0_1_RREADY(twiddle_rsc_0_1_RREADY),
      .twiddle_rsc_0_1_RVALID(twiddle_rsc_0_1_RVALID),
      .twiddle_rsc_0_1_RUSER(twiddle_rsc_0_1_RUSER),
      .twiddle_rsc_0_1_RLAST(twiddle_rsc_0_1_RLAST),
      .twiddle_rsc_0_1_RRESP(twiddle_rsc_0_1_RRESP),
      .twiddle_rsc_0_1_RDATA(twiddle_rsc_0_1_RDATA),
      .twiddle_rsc_0_1_RID(twiddle_rsc_0_1_RID),
      .twiddle_rsc_0_1_ARREADY(twiddle_rsc_0_1_ARREADY),
      .twiddle_rsc_0_1_ARVALID(twiddle_rsc_0_1_ARVALID),
      .twiddle_rsc_0_1_ARUSER(twiddle_rsc_0_1_ARUSER),
      .twiddle_rsc_0_1_ARREGION(twiddle_rsc_0_1_ARREGION),
      .twiddle_rsc_0_1_ARQOS(twiddle_rsc_0_1_ARQOS),
      .twiddle_rsc_0_1_ARPROT(twiddle_rsc_0_1_ARPROT),
      .twiddle_rsc_0_1_ARCACHE(twiddle_rsc_0_1_ARCACHE),
      .twiddle_rsc_0_1_ARLOCK(twiddle_rsc_0_1_ARLOCK),
      .twiddle_rsc_0_1_ARBURST(twiddle_rsc_0_1_ARBURST),
      .twiddle_rsc_0_1_ARSIZE(twiddle_rsc_0_1_ARSIZE),
      .twiddle_rsc_0_1_ARLEN(twiddle_rsc_0_1_ARLEN),
      .twiddle_rsc_0_1_ARADDR(twiddle_rsc_0_1_ARADDR),
      .twiddle_rsc_0_1_ARID(twiddle_rsc_0_1_ARID),
      .twiddle_rsc_0_1_BREADY(twiddle_rsc_0_1_BREADY),
      .twiddle_rsc_0_1_BVALID(twiddle_rsc_0_1_BVALID),
      .twiddle_rsc_0_1_BUSER(twiddle_rsc_0_1_BUSER),
      .twiddle_rsc_0_1_BRESP(twiddle_rsc_0_1_BRESP),
      .twiddle_rsc_0_1_BID(twiddle_rsc_0_1_BID),
      .twiddle_rsc_0_1_WREADY(twiddle_rsc_0_1_WREADY),
      .twiddle_rsc_0_1_WVALID(twiddle_rsc_0_1_WVALID),
      .twiddle_rsc_0_1_WUSER(twiddle_rsc_0_1_WUSER),
      .twiddle_rsc_0_1_WLAST(twiddle_rsc_0_1_WLAST),
      .twiddle_rsc_0_1_WSTRB(twiddle_rsc_0_1_WSTRB),
      .twiddle_rsc_0_1_WDATA(twiddle_rsc_0_1_WDATA),
      .twiddle_rsc_0_1_AWREADY(twiddle_rsc_0_1_AWREADY),
      .twiddle_rsc_0_1_AWVALID(twiddle_rsc_0_1_AWVALID),
      .twiddle_rsc_0_1_AWUSER(twiddle_rsc_0_1_AWUSER),
      .twiddle_rsc_0_1_AWREGION(twiddle_rsc_0_1_AWREGION),
      .twiddle_rsc_0_1_AWQOS(twiddle_rsc_0_1_AWQOS),
      .twiddle_rsc_0_1_AWPROT(twiddle_rsc_0_1_AWPROT),
      .twiddle_rsc_0_1_AWCACHE(twiddle_rsc_0_1_AWCACHE),
      .twiddle_rsc_0_1_AWLOCK(twiddle_rsc_0_1_AWLOCK),
      .twiddle_rsc_0_1_AWBURST(twiddle_rsc_0_1_AWBURST),
      .twiddle_rsc_0_1_AWSIZE(twiddle_rsc_0_1_AWSIZE),
      .twiddle_rsc_0_1_AWLEN(twiddle_rsc_0_1_AWLEN),
      .twiddle_rsc_0_1_AWADDR(twiddle_rsc_0_1_AWADDR),
      .twiddle_rsc_0_1_AWID(twiddle_rsc_0_1_AWID),
      .core_wen(core_wen),
      .twiddle_rsc_0_1_i_oswt(reg_twiddle_rsc_0_1_i_oswt_cse),
      .twiddle_rsc_0_1_i_wen_comp(twiddle_rsc_0_1_i_wen_comp),
      .twiddle_rsc_0_1_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_1_i_s_din_mxwt(twiddle_rsc_0_1_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_rsc_0_2_i peaseNTT_core_twiddle_rsc_0_2_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_2_s_tdone(twiddle_rsc_0_2_s_tdone),
      .twiddle_rsc_0_2_tr_write_done(twiddle_rsc_0_2_tr_write_done),
      .twiddle_rsc_0_2_RREADY(twiddle_rsc_0_2_RREADY),
      .twiddle_rsc_0_2_RVALID(twiddle_rsc_0_2_RVALID),
      .twiddle_rsc_0_2_RUSER(twiddle_rsc_0_2_RUSER),
      .twiddle_rsc_0_2_RLAST(twiddle_rsc_0_2_RLAST),
      .twiddle_rsc_0_2_RRESP(twiddle_rsc_0_2_RRESP),
      .twiddle_rsc_0_2_RDATA(twiddle_rsc_0_2_RDATA),
      .twiddle_rsc_0_2_RID(twiddle_rsc_0_2_RID),
      .twiddle_rsc_0_2_ARREADY(twiddle_rsc_0_2_ARREADY),
      .twiddle_rsc_0_2_ARVALID(twiddle_rsc_0_2_ARVALID),
      .twiddle_rsc_0_2_ARUSER(twiddle_rsc_0_2_ARUSER),
      .twiddle_rsc_0_2_ARREGION(twiddle_rsc_0_2_ARREGION),
      .twiddle_rsc_0_2_ARQOS(twiddle_rsc_0_2_ARQOS),
      .twiddle_rsc_0_2_ARPROT(twiddle_rsc_0_2_ARPROT),
      .twiddle_rsc_0_2_ARCACHE(twiddle_rsc_0_2_ARCACHE),
      .twiddle_rsc_0_2_ARLOCK(twiddle_rsc_0_2_ARLOCK),
      .twiddle_rsc_0_2_ARBURST(twiddle_rsc_0_2_ARBURST),
      .twiddle_rsc_0_2_ARSIZE(twiddle_rsc_0_2_ARSIZE),
      .twiddle_rsc_0_2_ARLEN(twiddle_rsc_0_2_ARLEN),
      .twiddle_rsc_0_2_ARADDR(twiddle_rsc_0_2_ARADDR),
      .twiddle_rsc_0_2_ARID(twiddle_rsc_0_2_ARID),
      .twiddle_rsc_0_2_BREADY(twiddle_rsc_0_2_BREADY),
      .twiddle_rsc_0_2_BVALID(twiddle_rsc_0_2_BVALID),
      .twiddle_rsc_0_2_BUSER(twiddle_rsc_0_2_BUSER),
      .twiddle_rsc_0_2_BRESP(twiddle_rsc_0_2_BRESP),
      .twiddle_rsc_0_2_BID(twiddle_rsc_0_2_BID),
      .twiddle_rsc_0_2_WREADY(twiddle_rsc_0_2_WREADY),
      .twiddle_rsc_0_2_WVALID(twiddle_rsc_0_2_WVALID),
      .twiddle_rsc_0_2_WUSER(twiddle_rsc_0_2_WUSER),
      .twiddle_rsc_0_2_WLAST(twiddle_rsc_0_2_WLAST),
      .twiddle_rsc_0_2_WSTRB(twiddle_rsc_0_2_WSTRB),
      .twiddle_rsc_0_2_WDATA(twiddle_rsc_0_2_WDATA),
      .twiddle_rsc_0_2_AWREADY(twiddle_rsc_0_2_AWREADY),
      .twiddle_rsc_0_2_AWVALID(twiddle_rsc_0_2_AWVALID),
      .twiddle_rsc_0_2_AWUSER(twiddle_rsc_0_2_AWUSER),
      .twiddle_rsc_0_2_AWREGION(twiddle_rsc_0_2_AWREGION),
      .twiddle_rsc_0_2_AWQOS(twiddle_rsc_0_2_AWQOS),
      .twiddle_rsc_0_2_AWPROT(twiddle_rsc_0_2_AWPROT),
      .twiddle_rsc_0_2_AWCACHE(twiddle_rsc_0_2_AWCACHE),
      .twiddle_rsc_0_2_AWLOCK(twiddle_rsc_0_2_AWLOCK),
      .twiddle_rsc_0_2_AWBURST(twiddle_rsc_0_2_AWBURST),
      .twiddle_rsc_0_2_AWSIZE(twiddle_rsc_0_2_AWSIZE),
      .twiddle_rsc_0_2_AWLEN(twiddle_rsc_0_2_AWLEN),
      .twiddle_rsc_0_2_AWADDR(twiddle_rsc_0_2_AWADDR),
      .twiddle_rsc_0_2_AWID(twiddle_rsc_0_2_AWID),
      .core_wen(core_wen),
      .twiddle_rsc_0_2_i_oswt(reg_twiddle_rsc_0_2_i_oswt_cse),
      .twiddle_rsc_0_2_i_wen_comp(twiddle_rsc_0_2_i_wen_comp),
      .twiddle_rsc_0_2_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_2_i_inst_twiddle_rsc_0_2_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_2_i_s_din_mxwt(twiddle_rsc_0_2_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_rsc_0_3_i peaseNTT_core_twiddle_rsc_0_3_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_3_s_tdone(twiddle_rsc_0_3_s_tdone),
      .twiddle_rsc_0_3_tr_write_done(twiddle_rsc_0_3_tr_write_done),
      .twiddle_rsc_0_3_RREADY(twiddle_rsc_0_3_RREADY),
      .twiddle_rsc_0_3_RVALID(twiddle_rsc_0_3_RVALID),
      .twiddle_rsc_0_3_RUSER(twiddle_rsc_0_3_RUSER),
      .twiddle_rsc_0_3_RLAST(twiddle_rsc_0_3_RLAST),
      .twiddle_rsc_0_3_RRESP(twiddle_rsc_0_3_RRESP),
      .twiddle_rsc_0_3_RDATA(twiddle_rsc_0_3_RDATA),
      .twiddle_rsc_0_3_RID(twiddle_rsc_0_3_RID),
      .twiddle_rsc_0_3_ARREADY(twiddle_rsc_0_3_ARREADY),
      .twiddle_rsc_0_3_ARVALID(twiddle_rsc_0_3_ARVALID),
      .twiddle_rsc_0_3_ARUSER(twiddle_rsc_0_3_ARUSER),
      .twiddle_rsc_0_3_ARREGION(twiddle_rsc_0_3_ARREGION),
      .twiddle_rsc_0_3_ARQOS(twiddle_rsc_0_3_ARQOS),
      .twiddle_rsc_0_3_ARPROT(twiddle_rsc_0_3_ARPROT),
      .twiddle_rsc_0_3_ARCACHE(twiddle_rsc_0_3_ARCACHE),
      .twiddle_rsc_0_3_ARLOCK(twiddle_rsc_0_3_ARLOCK),
      .twiddle_rsc_0_3_ARBURST(twiddle_rsc_0_3_ARBURST),
      .twiddle_rsc_0_3_ARSIZE(twiddle_rsc_0_3_ARSIZE),
      .twiddle_rsc_0_3_ARLEN(twiddle_rsc_0_3_ARLEN),
      .twiddle_rsc_0_3_ARADDR(twiddle_rsc_0_3_ARADDR),
      .twiddle_rsc_0_3_ARID(twiddle_rsc_0_3_ARID),
      .twiddle_rsc_0_3_BREADY(twiddle_rsc_0_3_BREADY),
      .twiddle_rsc_0_3_BVALID(twiddle_rsc_0_3_BVALID),
      .twiddle_rsc_0_3_BUSER(twiddle_rsc_0_3_BUSER),
      .twiddle_rsc_0_3_BRESP(twiddle_rsc_0_3_BRESP),
      .twiddle_rsc_0_3_BID(twiddle_rsc_0_3_BID),
      .twiddle_rsc_0_3_WREADY(twiddle_rsc_0_3_WREADY),
      .twiddle_rsc_0_3_WVALID(twiddle_rsc_0_3_WVALID),
      .twiddle_rsc_0_3_WUSER(twiddle_rsc_0_3_WUSER),
      .twiddle_rsc_0_3_WLAST(twiddle_rsc_0_3_WLAST),
      .twiddle_rsc_0_3_WSTRB(twiddle_rsc_0_3_WSTRB),
      .twiddle_rsc_0_3_WDATA(twiddle_rsc_0_3_WDATA),
      .twiddle_rsc_0_3_AWREADY(twiddle_rsc_0_3_AWREADY),
      .twiddle_rsc_0_3_AWVALID(twiddle_rsc_0_3_AWVALID),
      .twiddle_rsc_0_3_AWUSER(twiddle_rsc_0_3_AWUSER),
      .twiddle_rsc_0_3_AWREGION(twiddle_rsc_0_3_AWREGION),
      .twiddle_rsc_0_3_AWQOS(twiddle_rsc_0_3_AWQOS),
      .twiddle_rsc_0_3_AWPROT(twiddle_rsc_0_3_AWPROT),
      .twiddle_rsc_0_3_AWCACHE(twiddle_rsc_0_3_AWCACHE),
      .twiddle_rsc_0_3_AWLOCK(twiddle_rsc_0_3_AWLOCK),
      .twiddle_rsc_0_3_AWBURST(twiddle_rsc_0_3_AWBURST),
      .twiddle_rsc_0_3_AWSIZE(twiddle_rsc_0_3_AWSIZE),
      .twiddle_rsc_0_3_AWLEN(twiddle_rsc_0_3_AWLEN),
      .twiddle_rsc_0_3_AWADDR(twiddle_rsc_0_3_AWADDR),
      .twiddle_rsc_0_3_AWID(twiddle_rsc_0_3_AWID),
      .core_wen(core_wen),
      .twiddle_rsc_0_3_i_oswt(reg_twiddle_rsc_0_3_i_oswt_cse),
      .twiddle_rsc_0_3_i_wen_comp(twiddle_rsc_0_3_i_wen_comp),
      .twiddle_rsc_0_3_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_3_i_inst_twiddle_rsc_0_3_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_3_i_s_din_mxwt(twiddle_rsc_0_3_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_rsc_0_4_i peaseNTT_core_twiddle_rsc_0_4_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_4_s_tdone(twiddle_rsc_0_4_s_tdone),
      .twiddle_rsc_0_4_tr_write_done(twiddle_rsc_0_4_tr_write_done),
      .twiddle_rsc_0_4_RREADY(twiddle_rsc_0_4_RREADY),
      .twiddle_rsc_0_4_RVALID(twiddle_rsc_0_4_RVALID),
      .twiddle_rsc_0_4_RUSER(twiddle_rsc_0_4_RUSER),
      .twiddle_rsc_0_4_RLAST(twiddle_rsc_0_4_RLAST),
      .twiddle_rsc_0_4_RRESP(twiddle_rsc_0_4_RRESP),
      .twiddle_rsc_0_4_RDATA(twiddle_rsc_0_4_RDATA),
      .twiddle_rsc_0_4_RID(twiddle_rsc_0_4_RID),
      .twiddle_rsc_0_4_ARREADY(twiddle_rsc_0_4_ARREADY),
      .twiddle_rsc_0_4_ARVALID(twiddle_rsc_0_4_ARVALID),
      .twiddle_rsc_0_4_ARUSER(twiddle_rsc_0_4_ARUSER),
      .twiddle_rsc_0_4_ARREGION(twiddle_rsc_0_4_ARREGION),
      .twiddle_rsc_0_4_ARQOS(twiddle_rsc_0_4_ARQOS),
      .twiddle_rsc_0_4_ARPROT(twiddle_rsc_0_4_ARPROT),
      .twiddle_rsc_0_4_ARCACHE(twiddle_rsc_0_4_ARCACHE),
      .twiddle_rsc_0_4_ARLOCK(twiddle_rsc_0_4_ARLOCK),
      .twiddle_rsc_0_4_ARBURST(twiddle_rsc_0_4_ARBURST),
      .twiddle_rsc_0_4_ARSIZE(twiddle_rsc_0_4_ARSIZE),
      .twiddle_rsc_0_4_ARLEN(twiddle_rsc_0_4_ARLEN),
      .twiddle_rsc_0_4_ARADDR(twiddle_rsc_0_4_ARADDR),
      .twiddle_rsc_0_4_ARID(twiddle_rsc_0_4_ARID),
      .twiddle_rsc_0_4_BREADY(twiddle_rsc_0_4_BREADY),
      .twiddle_rsc_0_4_BVALID(twiddle_rsc_0_4_BVALID),
      .twiddle_rsc_0_4_BUSER(twiddle_rsc_0_4_BUSER),
      .twiddle_rsc_0_4_BRESP(twiddle_rsc_0_4_BRESP),
      .twiddle_rsc_0_4_BID(twiddle_rsc_0_4_BID),
      .twiddle_rsc_0_4_WREADY(twiddle_rsc_0_4_WREADY),
      .twiddle_rsc_0_4_WVALID(twiddle_rsc_0_4_WVALID),
      .twiddle_rsc_0_4_WUSER(twiddle_rsc_0_4_WUSER),
      .twiddle_rsc_0_4_WLAST(twiddle_rsc_0_4_WLAST),
      .twiddle_rsc_0_4_WSTRB(twiddle_rsc_0_4_WSTRB),
      .twiddle_rsc_0_4_WDATA(twiddle_rsc_0_4_WDATA),
      .twiddle_rsc_0_4_AWREADY(twiddle_rsc_0_4_AWREADY),
      .twiddle_rsc_0_4_AWVALID(twiddle_rsc_0_4_AWVALID),
      .twiddle_rsc_0_4_AWUSER(twiddle_rsc_0_4_AWUSER),
      .twiddle_rsc_0_4_AWREGION(twiddle_rsc_0_4_AWREGION),
      .twiddle_rsc_0_4_AWQOS(twiddle_rsc_0_4_AWQOS),
      .twiddle_rsc_0_4_AWPROT(twiddle_rsc_0_4_AWPROT),
      .twiddle_rsc_0_4_AWCACHE(twiddle_rsc_0_4_AWCACHE),
      .twiddle_rsc_0_4_AWLOCK(twiddle_rsc_0_4_AWLOCK),
      .twiddle_rsc_0_4_AWBURST(twiddle_rsc_0_4_AWBURST),
      .twiddle_rsc_0_4_AWSIZE(twiddle_rsc_0_4_AWSIZE),
      .twiddle_rsc_0_4_AWLEN(twiddle_rsc_0_4_AWLEN),
      .twiddle_rsc_0_4_AWADDR(twiddle_rsc_0_4_AWADDR),
      .twiddle_rsc_0_4_AWID(twiddle_rsc_0_4_AWID),
      .core_wen(core_wen),
      .twiddle_rsc_0_4_i_oswt(reg_twiddle_rsc_0_4_i_oswt_cse),
      .twiddle_rsc_0_4_i_wen_comp(twiddle_rsc_0_4_i_wen_comp),
      .twiddle_rsc_0_4_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_4_i_inst_twiddle_rsc_0_4_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_4_i_s_din_mxwt(twiddle_rsc_0_4_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_rsc_0_5_i peaseNTT_core_twiddle_rsc_0_5_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_5_s_tdone(twiddle_rsc_0_5_s_tdone),
      .twiddle_rsc_0_5_tr_write_done(twiddle_rsc_0_5_tr_write_done),
      .twiddle_rsc_0_5_RREADY(twiddle_rsc_0_5_RREADY),
      .twiddle_rsc_0_5_RVALID(twiddle_rsc_0_5_RVALID),
      .twiddle_rsc_0_5_RUSER(twiddle_rsc_0_5_RUSER),
      .twiddle_rsc_0_5_RLAST(twiddle_rsc_0_5_RLAST),
      .twiddle_rsc_0_5_RRESP(twiddle_rsc_0_5_RRESP),
      .twiddle_rsc_0_5_RDATA(twiddle_rsc_0_5_RDATA),
      .twiddle_rsc_0_5_RID(twiddle_rsc_0_5_RID),
      .twiddle_rsc_0_5_ARREADY(twiddle_rsc_0_5_ARREADY),
      .twiddle_rsc_0_5_ARVALID(twiddle_rsc_0_5_ARVALID),
      .twiddle_rsc_0_5_ARUSER(twiddle_rsc_0_5_ARUSER),
      .twiddle_rsc_0_5_ARREGION(twiddle_rsc_0_5_ARREGION),
      .twiddle_rsc_0_5_ARQOS(twiddle_rsc_0_5_ARQOS),
      .twiddle_rsc_0_5_ARPROT(twiddle_rsc_0_5_ARPROT),
      .twiddle_rsc_0_5_ARCACHE(twiddle_rsc_0_5_ARCACHE),
      .twiddle_rsc_0_5_ARLOCK(twiddle_rsc_0_5_ARLOCK),
      .twiddle_rsc_0_5_ARBURST(twiddle_rsc_0_5_ARBURST),
      .twiddle_rsc_0_5_ARSIZE(twiddle_rsc_0_5_ARSIZE),
      .twiddle_rsc_0_5_ARLEN(twiddle_rsc_0_5_ARLEN),
      .twiddle_rsc_0_5_ARADDR(twiddle_rsc_0_5_ARADDR),
      .twiddle_rsc_0_5_ARID(twiddle_rsc_0_5_ARID),
      .twiddle_rsc_0_5_BREADY(twiddle_rsc_0_5_BREADY),
      .twiddle_rsc_0_5_BVALID(twiddle_rsc_0_5_BVALID),
      .twiddle_rsc_0_5_BUSER(twiddle_rsc_0_5_BUSER),
      .twiddle_rsc_0_5_BRESP(twiddle_rsc_0_5_BRESP),
      .twiddle_rsc_0_5_BID(twiddle_rsc_0_5_BID),
      .twiddle_rsc_0_5_WREADY(twiddle_rsc_0_5_WREADY),
      .twiddle_rsc_0_5_WVALID(twiddle_rsc_0_5_WVALID),
      .twiddle_rsc_0_5_WUSER(twiddle_rsc_0_5_WUSER),
      .twiddle_rsc_0_5_WLAST(twiddle_rsc_0_5_WLAST),
      .twiddle_rsc_0_5_WSTRB(twiddle_rsc_0_5_WSTRB),
      .twiddle_rsc_0_5_WDATA(twiddle_rsc_0_5_WDATA),
      .twiddle_rsc_0_5_AWREADY(twiddle_rsc_0_5_AWREADY),
      .twiddle_rsc_0_5_AWVALID(twiddle_rsc_0_5_AWVALID),
      .twiddle_rsc_0_5_AWUSER(twiddle_rsc_0_5_AWUSER),
      .twiddle_rsc_0_5_AWREGION(twiddle_rsc_0_5_AWREGION),
      .twiddle_rsc_0_5_AWQOS(twiddle_rsc_0_5_AWQOS),
      .twiddle_rsc_0_5_AWPROT(twiddle_rsc_0_5_AWPROT),
      .twiddle_rsc_0_5_AWCACHE(twiddle_rsc_0_5_AWCACHE),
      .twiddle_rsc_0_5_AWLOCK(twiddle_rsc_0_5_AWLOCK),
      .twiddle_rsc_0_5_AWBURST(twiddle_rsc_0_5_AWBURST),
      .twiddle_rsc_0_5_AWSIZE(twiddle_rsc_0_5_AWSIZE),
      .twiddle_rsc_0_5_AWLEN(twiddle_rsc_0_5_AWLEN),
      .twiddle_rsc_0_5_AWADDR(twiddle_rsc_0_5_AWADDR),
      .twiddle_rsc_0_5_AWID(twiddle_rsc_0_5_AWID),
      .core_wen(core_wen),
      .twiddle_rsc_0_5_i_oswt(reg_twiddle_rsc_0_5_i_oswt_cse),
      .twiddle_rsc_0_5_i_wen_comp(twiddle_rsc_0_5_i_wen_comp),
      .twiddle_rsc_0_5_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_5_i_inst_twiddle_rsc_0_5_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_5_i_s_din_mxwt(twiddle_rsc_0_5_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_rsc_0_6_i peaseNTT_core_twiddle_rsc_0_6_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_6_s_tdone(twiddle_rsc_0_6_s_tdone),
      .twiddle_rsc_0_6_tr_write_done(twiddle_rsc_0_6_tr_write_done),
      .twiddle_rsc_0_6_RREADY(twiddle_rsc_0_6_RREADY),
      .twiddle_rsc_0_6_RVALID(twiddle_rsc_0_6_RVALID),
      .twiddle_rsc_0_6_RUSER(twiddle_rsc_0_6_RUSER),
      .twiddle_rsc_0_6_RLAST(twiddle_rsc_0_6_RLAST),
      .twiddle_rsc_0_6_RRESP(twiddle_rsc_0_6_RRESP),
      .twiddle_rsc_0_6_RDATA(twiddle_rsc_0_6_RDATA),
      .twiddle_rsc_0_6_RID(twiddle_rsc_0_6_RID),
      .twiddle_rsc_0_6_ARREADY(twiddle_rsc_0_6_ARREADY),
      .twiddle_rsc_0_6_ARVALID(twiddle_rsc_0_6_ARVALID),
      .twiddle_rsc_0_6_ARUSER(twiddle_rsc_0_6_ARUSER),
      .twiddle_rsc_0_6_ARREGION(twiddle_rsc_0_6_ARREGION),
      .twiddle_rsc_0_6_ARQOS(twiddle_rsc_0_6_ARQOS),
      .twiddle_rsc_0_6_ARPROT(twiddle_rsc_0_6_ARPROT),
      .twiddle_rsc_0_6_ARCACHE(twiddle_rsc_0_6_ARCACHE),
      .twiddle_rsc_0_6_ARLOCK(twiddle_rsc_0_6_ARLOCK),
      .twiddle_rsc_0_6_ARBURST(twiddle_rsc_0_6_ARBURST),
      .twiddle_rsc_0_6_ARSIZE(twiddle_rsc_0_6_ARSIZE),
      .twiddle_rsc_0_6_ARLEN(twiddle_rsc_0_6_ARLEN),
      .twiddle_rsc_0_6_ARADDR(twiddle_rsc_0_6_ARADDR),
      .twiddle_rsc_0_6_ARID(twiddle_rsc_0_6_ARID),
      .twiddle_rsc_0_6_BREADY(twiddle_rsc_0_6_BREADY),
      .twiddle_rsc_0_6_BVALID(twiddle_rsc_0_6_BVALID),
      .twiddle_rsc_0_6_BUSER(twiddle_rsc_0_6_BUSER),
      .twiddle_rsc_0_6_BRESP(twiddle_rsc_0_6_BRESP),
      .twiddle_rsc_0_6_BID(twiddle_rsc_0_6_BID),
      .twiddle_rsc_0_6_WREADY(twiddle_rsc_0_6_WREADY),
      .twiddle_rsc_0_6_WVALID(twiddle_rsc_0_6_WVALID),
      .twiddle_rsc_0_6_WUSER(twiddle_rsc_0_6_WUSER),
      .twiddle_rsc_0_6_WLAST(twiddle_rsc_0_6_WLAST),
      .twiddle_rsc_0_6_WSTRB(twiddle_rsc_0_6_WSTRB),
      .twiddle_rsc_0_6_WDATA(twiddle_rsc_0_6_WDATA),
      .twiddle_rsc_0_6_AWREADY(twiddle_rsc_0_6_AWREADY),
      .twiddle_rsc_0_6_AWVALID(twiddle_rsc_0_6_AWVALID),
      .twiddle_rsc_0_6_AWUSER(twiddle_rsc_0_6_AWUSER),
      .twiddle_rsc_0_6_AWREGION(twiddle_rsc_0_6_AWREGION),
      .twiddle_rsc_0_6_AWQOS(twiddle_rsc_0_6_AWQOS),
      .twiddle_rsc_0_6_AWPROT(twiddle_rsc_0_6_AWPROT),
      .twiddle_rsc_0_6_AWCACHE(twiddle_rsc_0_6_AWCACHE),
      .twiddle_rsc_0_6_AWLOCK(twiddle_rsc_0_6_AWLOCK),
      .twiddle_rsc_0_6_AWBURST(twiddle_rsc_0_6_AWBURST),
      .twiddle_rsc_0_6_AWSIZE(twiddle_rsc_0_6_AWSIZE),
      .twiddle_rsc_0_6_AWLEN(twiddle_rsc_0_6_AWLEN),
      .twiddle_rsc_0_6_AWADDR(twiddle_rsc_0_6_AWADDR),
      .twiddle_rsc_0_6_AWID(twiddle_rsc_0_6_AWID),
      .core_wen(core_wen),
      .twiddle_rsc_0_6_i_oswt(reg_twiddle_rsc_0_6_i_oswt_cse),
      .twiddle_rsc_0_6_i_wen_comp(twiddle_rsc_0_6_i_wen_comp),
      .twiddle_rsc_0_6_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_6_i_inst_twiddle_rsc_0_6_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_6_i_s_din_mxwt(twiddle_rsc_0_6_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_rsc_0_7_i peaseNTT_core_twiddle_rsc_0_7_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_7_s_tdone(twiddle_rsc_0_7_s_tdone),
      .twiddle_rsc_0_7_tr_write_done(twiddle_rsc_0_7_tr_write_done),
      .twiddle_rsc_0_7_RREADY(twiddle_rsc_0_7_RREADY),
      .twiddle_rsc_0_7_RVALID(twiddle_rsc_0_7_RVALID),
      .twiddle_rsc_0_7_RUSER(twiddle_rsc_0_7_RUSER),
      .twiddle_rsc_0_7_RLAST(twiddle_rsc_0_7_RLAST),
      .twiddle_rsc_0_7_RRESP(twiddle_rsc_0_7_RRESP),
      .twiddle_rsc_0_7_RDATA(twiddle_rsc_0_7_RDATA),
      .twiddle_rsc_0_7_RID(twiddle_rsc_0_7_RID),
      .twiddle_rsc_0_7_ARREADY(twiddle_rsc_0_7_ARREADY),
      .twiddle_rsc_0_7_ARVALID(twiddle_rsc_0_7_ARVALID),
      .twiddle_rsc_0_7_ARUSER(twiddle_rsc_0_7_ARUSER),
      .twiddle_rsc_0_7_ARREGION(twiddle_rsc_0_7_ARREGION),
      .twiddle_rsc_0_7_ARQOS(twiddle_rsc_0_7_ARQOS),
      .twiddle_rsc_0_7_ARPROT(twiddle_rsc_0_7_ARPROT),
      .twiddle_rsc_0_7_ARCACHE(twiddle_rsc_0_7_ARCACHE),
      .twiddle_rsc_0_7_ARLOCK(twiddle_rsc_0_7_ARLOCK),
      .twiddle_rsc_0_7_ARBURST(twiddle_rsc_0_7_ARBURST),
      .twiddle_rsc_0_7_ARSIZE(twiddle_rsc_0_7_ARSIZE),
      .twiddle_rsc_0_7_ARLEN(twiddle_rsc_0_7_ARLEN),
      .twiddle_rsc_0_7_ARADDR(twiddle_rsc_0_7_ARADDR),
      .twiddle_rsc_0_7_ARID(twiddle_rsc_0_7_ARID),
      .twiddle_rsc_0_7_BREADY(twiddle_rsc_0_7_BREADY),
      .twiddle_rsc_0_7_BVALID(twiddle_rsc_0_7_BVALID),
      .twiddle_rsc_0_7_BUSER(twiddle_rsc_0_7_BUSER),
      .twiddle_rsc_0_7_BRESP(twiddle_rsc_0_7_BRESP),
      .twiddle_rsc_0_7_BID(twiddle_rsc_0_7_BID),
      .twiddle_rsc_0_7_WREADY(twiddle_rsc_0_7_WREADY),
      .twiddle_rsc_0_7_WVALID(twiddle_rsc_0_7_WVALID),
      .twiddle_rsc_0_7_WUSER(twiddle_rsc_0_7_WUSER),
      .twiddle_rsc_0_7_WLAST(twiddle_rsc_0_7_WLAST),
      .twiddle_rsc_0_7_WSTRB(twiddle_rsc_0_7_WSTRB),
      .twiddle_rsc_0_7_WDATA(twiddle_rsc_0_7_WDATA),
      .twiddle_rsc_0_7_AWREADY(twiddle_rsc_0_7_AWREADY),
      .twiddle_rsc_0_7_AWVALID(twiddle_rsc_0_7_AWVALID),
      .twiddle_rsc_0_7_AWUSER(twiddle_rsc_0_7_AWUSER),
      .twiddle_rsc_0_7_AWREGION(twiddle_rsc_0_7_AWREGION),
      .twiddle_rsc_0_7_AWQOS(twiddle_rsc_0_7_AWQOS),
      .twiddle_rsc_0_7_AWPROT(twiddle_rsc_0_7_AWPROT),
      .twiddle_rsc_0_7_AWCACHE(twiddle_rsc_0_7_AWCACHE),
      .twiddle_rsc_0_7_AWLOCK(twiddle_rsc_0_7_AWLOCK),
      .twiddle_rsc_0_7_AWBURST(twiddle_rsc_0_7_AWBURST),
      .twiddle_rsc_0_7_AWSIZE(twiddle_rsc_0_7_AWSIZE),
      .twiddle_rsc_0_7_AWLEN(twiddle_rsc_0_7_AWLEN),
      .twiddle_rsc_0_7_AWADDR(twiddle_rsc_0_7_AWADDR),
      .twiddle_rsc_0_7_AWID(twiddle_rsc_0_7_AWID),
      .core_wen(core_wen),
      .twiddle_rsc_0_7_i_oswt(reg_twiddle_rsc_0_7_i_oswt_cse),
      .twiddle_rsc_0_7_i_wen_comp(twiddle_rsc_0_7_i_wen_comp),
      .twiddle_rsc_0_7_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_7_i_inst_twiddle_rsc_0_7_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_7_i_s_din_mxwt(twiddle_rsc_0_7_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_rsc_0_8_i peaseNTT_core_twiddle_rsc_0_8_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_8_s_tdone(twiddle_rsc_0_8_s_tdone),
      .twiddle_rsc_0_8_tr_write_done(twiddle_rsc_0_8_tr_write_done),
      .twiddle_rsc_0_8_RREADY(twiddle_rsc_0_8_RREADY),
      .twiddle_rsc_0_8_RVALID(twiddle_rsc_0_8_RVALID),
      .twiddle_rsc_0_8_RUSER(twiddle_rsc_0_8_RUSER),
      .twiddle_rsc_0_8_RLAST(twiddle_rsc_0_8_RLAST),
      .twiddle_rsc_0_8_RRESP(twiddle_rsc_0_8_RRESP),
      .twiddle_rsc_0_8_RDATA(twiddle_rsc_0_8_RDATA),
      .twiddle_rsc_0_8_RID(twiddle_rsc_0_8_RID),
      .twiddle_rsc_0_8_ARREADY(twiddle_rsc_0_8_ARREADY),
      .twiddle_rsc_0_8_ARVALID(twiddle_rsc_0_8_ARVALID),
      .twiddle_rsc_0_8_ARUSER(twiddle_rsc_0_8_ARUSER),
      .twiddle_rsc_0_8_ARREGION(twiddle_rsc_0_8_ARREGION),
      .twiddle_rsc_0_8_ARQOS(twiddle_rsc_0_8_ARQOS),
      .twiddle_rsc_0_8_ARPROT(twiddle_rsc_0_8_ARPROT),
      .twiddle_rsc_0_8_ARCACHE(twiddle_rsc_0_8_ARCACHE),
      .twiddle_rsc_0_8_ARLOCK(twiddle_rsc_0_8_ARLOCK),
      .twiddle_rsc_0_8_ARBURST(twiddle_rsc_0_8_ARBURST),
      .twiddle_rsc_0_8_ARSIZE(twiddle_rsc_0_8_ARSIZE),
      .twiddle_rsc_0_8_ARLEN(twiddle_rsc_0_8_ARLEN),
      .twiddle_rsc_0_8_ARADDR(twiddle_rsc_0_8_ARADDR),
      .twiddle_rsc_0_8_ARID(twiddle_rsc_0_8_ARID),
      .twiddle_rsc_0_8_BREADY(twiddle_rsc_0_8_BREADY),
      .twiddle_rsc_0_8_BVALID(twiddle_rsc_0_8_BVALID),
      .twiddle_rsc_0_8_BUSER(twiddle_rsc_0_8_BUSER),
      .twiddle_rsc_0_8_BRESP(twiddle_rsc_0_8_BRESP),
      .twiddle_rsc_0_8_BID(twiddle_rsc_0_8_BID),
      .twiddle_rsc_0_8_WREADY(twiddle_rsc_0_8_WREADY),
      .twiddle_rsc_0_8_WVALID(twiddle_rsc_0_8_WVALID),
      .twiddle_rsc_0_8_WUSER(twiddle_rsc_0_8_WUSER),
      .twiddle_rsc_0_8_WLAST(twiddle_rsc_0_8_WLAST),
      .twiddle_rsc_0_8_WSTRB(twiddle_rsc_0_8_WSTRB),
      .twiddle_rsc_0_8_WDATA(twiddle_rsc_0_8_WDATA),
      .twiddle_rsc_0_8_AWREADY(twiddle_rsc_0_8_AWREADY),
      .twiddle_rsc_0_8_AWVALID(twiddle_rsc_0_8_AWVALID),
      .twiddle_rsc_0_8_AWUSER(twiddle_rsc_0_8_AWUSER),
      .twiddle_rsc_0_8_AWREGION(twiddle_rsc_0_8_AWREGION),
      .twiddle_rsc_0_8_AWQOS(twiddle_rsc_0_8_AWQOS),
      .twiddle_rsc_0_8_AWPROT(twiddle_rsc_0_8_AWPROT),
      .twiddle_rsc_0_8_AWCACHE(twiddle_rsc_0_8_AWCACHE),
      .twiddle_rsc_0_8_AWLOCK(twiddle_rsc_0_8_AWLOCK),
      .twiddle_rsc_0_8_AWBURST(twiddle_rsc_0_8_AWBURST),
      .twiddle_rsc_0_8_AWSIZE(twiddle_rsc_0_8_AWSIZE),
      .twiddle_rsc_0_8_AWLEN(twiddle_rsc_0_8_AWLEN),
      .twiddle_rsc_0_8_AWADDR(twiddle_rsc_0_8_AWADDR),
      .twiddle_rsc_0_8_AWID(twiddle_rsc_0_8_AWID),
      .core_wen(core_wen),
      .twiddle_rsc_0_8_i_oswt(reg_twiddle_rsc_0_8_i_oswt_cse),
      .twiddle_rsc_0_8_i_wen_comp(twiddle_rsc_0_8_i_wen_comp),
      .twiddle_rsc_0_8_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_8_i_inst_twiddle_rsc_0_8_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_8_i_s_din_mxwt(twiddle_rsc_0_8_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_rsc_0_9_i peaseNTT_core_twiddle_rsc_0_9_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_9_s_tdone(twiddle_rsc_0_9_s_tdone),
      .twiddle_rsc_0_9_tr_write_done(twiddle_rsc_0_9_tr_write_done),
      .twiddle_rsc_0_9_RREADY(twiddle_rsc_0_9_RREADY),
      .twiddle_rsc_0_9_RVALID(twiddle_rsc_0_9_RVALID),
      .twiddle_rsc_0_9_RUSER(twiddle_rsc_0_9_RUSER),
      .twiddle_rsc_0_9_RLAST(twiddle_rsc_0_9_RLAST),
      .twiddle_rsc_0_9_RRESP(twiddle_rsc_0_9_RRESP),
      .twiddle_rsc_0_9_RDATA(twiddle_rsc_0_9_RDATA),
      .twiddle_rsc_0_9_RID(twiddle_rsc_0_9_RID),
      .twiddle_rsc_0_9_ARREADY(twiddle_rsc_0_9_ARREADY),
      .twiddle_rsc_0_9_ARVALID(twiddle_rsc_0_9_ARVALID),
      .twiddle_rsc_0_9_ARUSER(twiddle_rsc_0_9_ARUSER),
      .twiddle_rsc_0_9_ARREGION(twiddle_rsc_0_9_ARREGION),
      .twiddle_rsc_0_9_ARQOS(twiddle_rsc_0_9_ARQOS),
      .twiddle_rsc_0_9_ARPROT(twiddle_rsc_0_9_ARPROT),
      .twiddle_rsc_0_9_ARCACHE(twiddle_rsc_0_9_ARCACHE),
      .twiddle_rsc_0_9_ARLOCK(twiddle_rsc_0_9_ARLOCK),
      .twiddle_rsc_0_9_ARBURST(twiddle_rsc_0_9_ARBURST),
      .twiddle_rsc_0_9_ARSIZE(twiddle_rsc_0_9_ARSIZE),
      .twiddle_rsc_0_9_ARLEN(twiddle_rsc_0_9_ARLEN),
      .twiddle_rsc_0_9_ARADDR(twiddle_rsc_0_9_ARADDR),
      .twiddle_rsc_0_9_ARID(twiddle_rsc_0_9_ARID),
      .twiddle_rsc_0_9_BREADY(twiddle_rsc_0_9_BREADY),
      .twiddle_rsc_0_9_BVALID(twiddle_rsc_0_9_BVALID),
      .twiddle_rsc_0_9_BUSER(twiddle_rsc_0_9_BUSER),
      .twiddle_rsc_0_9_BRESP(twiddle_rsc_0_9_BRESP),
      .twiddle_rsc_0_9_BID(twiddle_rsc_0_9_BID),
      .twiddle_rsc_0_9_WREADY(twiddle_rsc_0_9_WREADY),
      .twiddle_rsc_0_9_WVALID(twiddle_rsc_0_9_WVALID),
      .twiddle_rsc_0_9_WUSER(twiddle_rsc_0_9_WUSER),
      .twiddle_rsc_0_9_WLAST(twiddle_rsc_0_9_WLAST),
      .twiddle_rsc_0_9_WSTRB(twiddle_rsc_0_9_WSTRB),
      .twiddle_rsc_0_9_WDATA(twiddle_rsc_0_9_WDATA),
      .twiddle_rsc_0_9_AWREADY(twiddle_rsc_0_9_AWREADY),
      .twiddle_rsc_0_9_AWVALID(twiddle_rsc_0_9_AWVALID),
      .twiddle_rsc_0_9_AWUSER(twiddle_rsc_0_9_AWUSER),
      .twiddle_rsc_0_9_AWREGION(twiddle_rsc_0_9_AWREGION),
      .twiddle_rsc_0_9_AWQOS(twiddle_rsc_0_9_AWQOS),
      .twiddle_rsc_0_9_AWPROT(twiddle_rsc_0_9_AWPROT),
      .twiddle_rsc_0_9_AWCACHE(twiddle_rsc_0_9_AWCACHE),
      .twiddle_rsc_0_9_AWLOCK(twiddle_rsc_0_9_AWLOCK),
      .twiddle_rsc_0_9_AWBURST(twiddle_rsc_0_9_AWBURST),
      .twiddle_rsc_0_9_AWSIZE(twiddle_rsc_0_9_AWSIZE),
      .twiddle_rsc_0_9_AWLEN(twiddle_rsc_0_9_AWLEN),
      .twiddle_rsc_0_9_AWADDR(twiddle_rsc_0_9_AWADDR),
      .twiddle_rsc_0_9_AWID(twiddle_rsc_0_9_AWID),
      .core_wen(core_wen),
      .twiddle_rsc_0_9_i_oswt(reg_twiddle_rsc_0_1_i_oswt_cse),
      .twiddle_rsc_0_9_i_wen_comp(twiddle_rsc_0_9_i_wen_comp),
      .twiddle_rsc_0_9_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_9_i_inst_twiddle_rsc_0_9_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_9_i_s_din_mxwt(twiddle_rsc_0_9_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_rsc_0_10_i peaseNTT_core_twiddle_rsc_0_10_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_10_s_tdone(twiddle_rsc_0_10_s_tdone),
      .twiddle_rsc_0_10_tr_write_done(twiddle_rsc_0_10_tr_write_done),
      .twiddle_rsc_0_10_RREADY(twiddle_rsc_0_10_RREADY),
      .twiddle_rsc_0_10_RVALID(twiddle_rsc_0_10_RVALID),
      .twiddle_rsc_0_10_RUSER(twiddle_rsc_0_10_RUSER),
      .twiddle_rsc_0_10_RLAST(twiddle_rsc_0_10_RLAST),
      .twiddle_rsc_0_10_RRESP(twiddle_rsc_0_10_RRESP),
      .twiddle_rsc_0_10_RDATA(twiddle_rsc_0_10_RDATA),
      .twiddle_rsc_0_10_RID(twiddle_rsc_0_10_RID),
      .twiddle_rsc_0_10_ARREADY(twiddle_rsc_0_10_ARREADY),
      .twiddle_rsc_0_10_ARVALID(twiddle_rsc_0_10_ARVALID),
      .twiddle_rsc_0_10_ARUSER(twiddle_rsc_0_10_ARUSER),
      .twiddle_rsc_0_10_ARREGION(twiddle_rsc_0_10_ARREGION),
      .twiddle_rsc_0_10_ARQOS(twiddle_rsc_0_10_ARQOS),
      .twiddle_rsc_0_10_ARPROT(twiddle_rsc_0_10_ARPROT),
      .twiddle_rsc_0_10_ARCACHE(twiddle_rsc_0_10_ARCACHE),
      .twiddle_rsc_0_10_ARLOCK(twiddle_rsc_0_10_ARLOCK),
      .twiddle_rsc_0_10_ARBURST(twiddle_rsc_0_10_ARBURST),
      .twiddle_rsc_0_10_ARSIZE(twiddle_rsc_0_10_ARSIZE),
      .twiddle_rsc_0_10_ARLEN(twiddle_rsc_0_10_ARLEN),
      .twiddle_rsc_0_10_ARADDR(twiddle_rsc_0_10_ARADDR),
      .twiddle_rsc_0_10_ARID(twiddle_rsc_0_10_ARID),
      .twiddle_rsc_0_10_BREADY(twiddle_rsc_0_10_BREADY),
      .twiddle_rsc_0_10_BVALID(twiddle_rsc_0_10_BVALID),
      .twiddle_rsc_0_10_BUSER(twiddle_rsc_0_10_BUSER),
      .twiddle_rsc_0_10_BRESP(twiddle_rsc_0_10_BRESP),
      .twiddle_rsc_0_10_BID(twiddle_rsc_0_10_BID),
      .twiddle_rsc_0_10_WREADY(twiddle_rsc_0_10_WREADY),
      .twiddle_rsc_0_10_WVALID(twiddle_rsc_0_10_WVALID),
      .twiddle_rsc_0_10_WUSER(twiddle_rsc_0_10_WUSER),
      .twiddle_rsc_0_10_WLAST(twiddle_rsc_0_10_WLAST),
      .twiddle_rsc_0_10_WSTRB(twiddle_rsc_0_10_WSTRB),
      .twiddle_rsc_0_10_WDATA(twiddle_rsc_0_10_WDATA),
      .twiddle_rsc_0_10_AWREADY(twiddle_rsc_0_10_AWREADY),
      .twiddle_rsc_0_10_AWVALID(twiddle_rsc_0_10_AWVALID),
      .twiddle_rsc_0_10_AWUSER(twiddle_rsc_0_10_AWUSER),
      .twiddle_rsc_0_10_AWREGION(twiddle_rsc_0_10_AWREGION),
      .twiddle_rsc_0_10_AWQOS(twiddle_rsc_0_10_AWQOS),
      .twiddle_rsc_0_10_AWPROT(twiddle_rsc_0_10_AWPROT),
      .twiddle_rsc_0_10_AWCACHE(twiddle_rsc_0_10_AWCACHE),
      .twiddle_rsc_0_10_AWLOCK(twiddle_rsc_0_10_AWLOCK),
      .twiddle_rsc_0_10_AWBURST(twiddle_rsc_0_10_AWBURST),
      .twiddle_rsc_0_10_AWSIZE(twiddle_rsc_0_10_AWSIZE),
      .twiddle_rsc_0_10_AWLEN(twiddle_rsc_0_10_AWLEN),
      .twiddle_rsc_0_10_AWADDR(twiddle_rsc_0_10_AWADDR),
      .twiddle_rsc_0_10_AWID(twiddle_rsc_0_10_AWID),
      .core_wen(core_wen),
      .twiddle_rsc_0_10_i_oswt(reg_twiddle_rsc_0_2_i_oswt_cse),
      .twiddle_rsc_0_10_i_wen_comp(twiddle_rsc_0_10_i_wen_comp),
      .twiddle_rsc_0_10_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_10_i_inst_twiddle_rsc_0_10_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_10_i_s_din_mxwt(twiddle_rsc_0_10_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_rsc_0_11_i peaseNTT_core_twiddle_rsc_0_11_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_11_s_tdone(twiddle_rsc_0_11_s_tdone),
      .twiddle_rsc_0_11_tr_write_done(twiddle_rsc_0_11_tr_write_done),
      .twiddle_rsc_0_11_RREADY(twiddle_rsc_0_11_RREADY),
      .twiddle_rsc_0_11_RVALID(twiddle_rsc_0_11_RVALID),
      .twiddle_rsc_0_11_RUSER(twiddle_rsc_0_11_RUSER),
      .twiddle_rsc_0_11_RLAST(twiddle_rsc_0_11_RLAST),
      .twiddle_rsc_0_11_RRESP(twiddle_rsc_0_11_RRESP),
      .twiddle_rsc_0_11_RDATA(twiddle_rsc_0_11_RDATA),
      .twiddle_rsc_0_11_RID(twiddle_rsc_0_11_RID),
      .twiddle_rsc_0_11_ARREADY(twiddle_rsc_0_11_ARREADY),
      .twiddle_rsc_0_11_ARVALID(twiddle_rsc_0_11_ARVALID),
      .twiddle_rsc_0_11_ARUSER(twiddle_rsc_0_11_ARUSER),
      .twiddle_rsc_0_11_ARREGION(twiddle_rsc_0_11_ARREGION),
      .twiddle_rsc_0_11_ARQOS(twiddle_rsc_0_11_ARQOS),
      .twiddle_rsc_0_11_ARPROT(twiddle_rsc_0_11_ARPROT),
      .twiddle_rsc_0_11_ARCACHE(twiddle_rsc_0_11_ARCACHE),
      .twiddle_rsc_0_11_ARLOCK(twiddle_rsc_0_11_ARLOCK),
      .twiddle_rsc_0_11_ARBURST(twiddle_rsc_0_11_ARBURST),
      .twiddle_rsc_0_11_ARSIZE(twiddle_rsc_0_11_ARSIZE),
      .twiddle_rsc_0_11_ARLEN(twiddle_rsc_0_11_ARLEN),
      .twiddle_rsc_0_11_ARADDR(twiddle_rsc_0_11_ARADDR),
      .twiddle_rsc_0_11_ARID(twiddle_rsc_0_11_ARID),
      .twiddle_rsc_0_11_BREADY(twiddle_rsc_0_11_BREADY),
      .twiddle_rsc_0_11_BVALID(twiddle_rsc_0_11_BVALID),
      .twiddle_rsc_0_11_BUSER(twiddle_rsc_0_11_BUSER),
      .twiddle_rsc_0_11_BRESP(twiddle_rsc_0_11_BRESP),
      .twiddle_rsc_0_11_BID(twiddle_rsc_0_11_BID),
      .twiddle_rsc_0_11_WREADY(twiddle_rsc_0_11_WREADY),
      .twiddle_rsc_0_11_WVALID(twiddle_rsc_0_11_WVALID),
      .twiddle_rsc_0_11_WUSER(twiddle_rsc_0_11_WUSER),
      .twiddle_rsc_0_11_WLAST(twiddle_rsc_0_11_WLAST),
      .twiddle_rsc_0_11_WSTRB(twiddle_rsc_0_11_WSTRB),
      .twiddle_rsc_0_11_WDATA(twiddle_rsc_0_11_WDATA),
      .twiddle_rsc_0_11_AWREADY(twiddle_rsc_0_11_AWREADY),
      .twiddle_rsc_0_11_AWVALID(twiddle_rsc_0_11_AWVALID),
      .twiddle_rsc_0_11_AWUSER(twiddle_rsc_0_11_AWUSER),
      .twiddle_rsc_0_11_AWREGION(twiddle_rsc_0_11_AWREGION),
      .twiddle_rsc_0_11_AWQOS(twiddle_rsc_0_11_AWQOS),
      .twiddle_rsc_0_11_AWPROT(twiddle_rsc_0_11_AWPROT),
      .twiddle_rsc_0_11_AWCACHE(twiddle_rsc_0_11_AWCACHE),
      .twiddle_rsc_0_11_AWLOCK(twiddle_rsc_0_11_AWLOCK),
      .twiddle_rsc_0_11_AWBURST(twiddle_rsc_0_11_AWBURST),
      .twiddle_rsc_0_11_AWSIZE(twiddle_rsc_0_11_AWSIZE),
      .twiddle_rsc_0_11_AWLEN(twiddle_rsc_0_11_AWLEN),
      .twiddle_rsc_0_11_AWADDR(twiddle_rsc_0_11_AWADDR),
      .twiddle_rsc_0_11_AWID(twiddle_rsc_0_11_AWID),
      .core_wen(core_wen),
      .twiddle_rsc_0_11_i_oswt(reg_twiddle_rsc_0_3_i_oswt_cse),
      .twiddle_rsc_0_11_i_wen_comp(twiddle_rsc_0_11_i_wen_comp),
      .twiddle_rsc_0_11_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_11_i_inst_twiddle_rsc_0_11_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_11_i_s_din_mxwt(twiddle_rsc_0_11_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_rsc_0_12_i peaseNTT_core_twiddle_rsc_0_12_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_12_s_tdone(twiddle_rsc_0_12_s_tdone),
      .twiddle_rsc_0_12_tr_write_done(twiddle_rsc_0_12_tr_write_done),
      .twiddle_rsc_0_12_RREADY(twiddle_rsc_0_12_RREADY),
      .twiddle_rsc_0_12_RVALID(twiddle_rsc_0_12_RVALID),
      .twiddle_rsc_0_12_RUSER(twiddle_rsc_0_12_RUSER),
      .twiddle_rsc_0_12_RLAST(twiddle_rsc_0_12_RLAST),
      .twiddle_rsc_0_12_RRESP(twiddle_rsc_0_12_RRESP),
      .twiddle_rsc_0_12_RDATA(twiddle_rsc_0_12_RDATA),
      .twiddle_rsc_0_12_RID(twiddle_rsc_0_12_RID),
      .twiddle_rsc_0_12_ARREADY(twiddle_rsc_0_12_ARREADY),
      .twiddle_rsc_0_12_ARVALID(twiddle_rsc_0_12_ARVALID),
      .twiddle_rsc_0_12_ARUSER(twiddle_rsc_0_12_ARUSER),
      .twiddle_rsc_0_12_ARREGION(twiddle_rsc_0_12_ARREGION),
      .twiddle_rsc_0_12_ARQOS(twiddle_rsc_0_12_ARQOS),
      .twiddle_rsc_0_12_ARPROT(twiddle_rsc_0_12_ARPROT),
      .twiddle_rsc_0_12_ARCACHE(twiddle_rsc_0_12_ARCACHE),
      .twiddle_rsc_0_12_ARLOCK(twiddle_rsc_0_12_ARLOCK),
      .twiddle_rsc_0_12_ARBURST(twiddle_rsc_0_12_ARBURST),
      .twiddle_rsc_0_12_ARSIZE(twiddle_rsc_0_12_ARSIZE),
      .twiddle_rsc_0_12_ARLEN(twiddle_rsc_0_12_ARLEN),
      .twiddle_rsc_0_12_ARADDR(twiddle_rsc_0_12_ARADDR),
      .twiddle_rsc_0_12_ARID(twiddle_rsc_0_12_ARID),
      .twiddle_rsc_0_12_BREADY(twiddle_rsc_0_12_BREADY),
      .twiddle_rsc_0_12_BVALID(twiddle_rsc_0_12_BVALID),
      .twiddle_rsc_0_12_BUSER(twiddle_rsc_0_12_BUSER),
      .twiddle_rsc_0_12_BRESP(twiddle_rsc_0_12_BRESP),
      .twiddle_rsc_0_12_BID(twiddle_rsc_0_12_BID),
      .twiddle_rsc_0_12_WREADY(twiddle_rsc_0_12_WREADY),
      .twiddle_rsc_0_12_WVALID(twiddle_rsc_0_12_WVALID),
      .twiddle_rsc_0_12_WUSER(twiddle_rsc_0_12_WUSER),
      .twiddle_rsc_0_12_WLAST(twiddle_rsc_0_12_WLAST),
      .twiddle_rsc_0_12_WSTRB(twiddle_rsc_0_12_WSTRB),
      .twiddle_rsc_0_12_WDATA(twiddle_rsc_0_12_WDATA),
      .twiddle_rsc_0_12_AWREADY(twiddle_rsc_0_12_AWREADY),
      .twiddle_rsc_0_12_AWVALID(twiddle_rsc_0_12_AWVALID),
      .twiddle_rsc_0_12_AWUSER(twiddle_rsc_0_12_AWUSER),
      .twiddle_rsc_0_12_AWREGION(twiddle_rsc_0_12_AWREGION),
      .twiddle_rsc_0_12_AWQOS(twiddle_rsc_0_12_AWQOS),
      .twiddle_rsc_0_12_AWPROT(twiddle_rsc_0_12_AWPROT),
      .twiddle_rsc_0_12_AWCACHE(twiddle_rsc_0_12_AWCACHE),
      .twiddle_rsc_0_12_AWLOCK(twiddle_rsc_0_12_AWLOCK),
      .twiddle_rsc_0_12_AWBURST(twiddle_rsc_0_12_AWBURST),
      .twiddle_rsc_0_12_AWSIZE(twiddle_rsc_0_12_AWSIZE),
      .twiddle_rsc_0_12_AWLEN(twiddle_rsc_0_12_AWLEN),
      .twiddle_rsc_0_12_AWADDR(twiddle_rsc_0_12_AWADDR),
      .twiddle_rsc_0_12_AWID(twiddle_rsc_0_12_AWID),
      .core_wen(core_wen),
      .twiddle_rsc_0_12_i_oswt(reg_twiddle_rsc_0_4_i_oswt_cse),
      .twiddle_rsc_0_12_i_wen_comp(twiddle_rsc_0_12_i_wen_comp),
      .twiddle_rsc_0_12_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_12_i_inst_twiddle_rsc_0_12_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_12_i_s_din_mxwt(twiddle_rsc_0_12_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_rsc_0_13_i peaseNTT_core_twiddle_rsc_0_13_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_13_s_tdone(twiddle_rsc_0_13_s_tdone),
      .twiddle_rsc_0_13_tr_write_done(twiddle_rsc_0_13_tr_write_done),
      .twiddle_rsc_0_13_RREADY(twiddle_rsc_0_13_RREADY),
      .twiddle_rsc_0_13_RVALID(twiddle_rsc_0_13_RVALID),
      .twiddle_rsc_0_13_RUSER(twiddle_rsc_0_13_RUSER),
      .twiddle_rsc_0_13_RLAST(twiddle_rsc_0_13_RLAST),
      .twiddle_rsc_0_13_RRESP(twiddle_rsc_0_13_RRESP),
      .twiddle_rsc_0_13_RDATA(twiddle_rsc_0_13_RDATA),
      .twiddle_rsc_0_13_RID(twiddle_rsc_0_13_RID),
      .twiddle_rsc_0_13_ARREADY(twiddle_rsc_0_13_ARREADY),
      .twiddle_rsc_0_13_ARVALID(twiddle_rsc_0_13_ARVALID),
      .twiddle_rsc_0_13_ARUSER(twiddle_rsc_0_13_ARUSER),
      .twiddle_rsc_0_13_ARREGION(twiddle_rsc_0_13_ARREGION),
      .twiddle_rsc_0_13_ARQOS(twiddle_rsc_0_13_ARQOS),
      .twiddle_rsc_0_13_ARPROT(twiddle_rsc_0_13_ARPROT),
      .twiddle_rsc_0_13_ARCACHE(twiddle_rsc_0_13_ARCACHE),
      .twiddle_rsc_0_13_ARLOCK(twiddle_rsc_0_13_ARLOCK),
      .twiddle_rsc_0_13_ARBURST(twiddle_rsc_0_13_ARBURST),
      .twiddle_rsc_0_13_ARSIZE(twiddle_rsc_0_13_ARSIZE),
      .twiddle_rsc_0_13_ARLEN(twiddle_rsc_0_13_ARLEN),
      .twiddle_rsc_0_13_ARADDR(twiddle_rsc_0_13_ARADDR),
      .twiddle_rsc_0_13_ARID(twiddle_rsc_0_13_ARID),
      .twiddle_rsc_0_13_BREADY(twiddle_rsc_0_13_BREADY),
      .twiddle_rsc_0_13_BVALID(twiddle_rsc_0_13_BVALID),
      .twiddle_rsc_0_13_BUSER(twiddle_rsc_0_13_BUSER),
      .twiddle_rsc_0_13_BRESP(twiddle_rsc_0_13_BRESP),
      .twiddle_rsc_0_13_BID(twiddle_rsc_0_13_BID),
      .twiddle_rsc_0_13_WREADY(twiddle_rsc_0_13_WREADY),
      .twiddle_rsc_0_13_WVALID(twiddle_rsc_0_13_WVALID),
      .twiddle_rsc_0_13_WUSER(twiddle_rsc_0_13_WUSER),
      .twiddle_rsc_0_13_WLAST(twiddle_rsc_0_13_WLAST),
      .twiddle_rsc_0_13_WSTRB(twiddle_rsc_0_13_WSTRB),
      .twiddle_rsc_0_13_WDATA(twiddle_rsc_0_13_WDATA),
      .twiddle_rsc_0_13_AWREADY(twiddle_rsc_0_13_AWREADY),
      .twiddle_rsc_0_13_AWVALID(twiddle_rsc_0_13_AWVALID),
      .twiddle_rsc_0_13_AWUSER(twiddle_rsc_0_13_AWUSER),
      .twiddle_rsc_0_13_AWREGION(twiddle_rsc_0_13_AWREGION),
      .twiddle_rsc_0_13_AWQOS(twiddle_rsc_0_13_AWQOS),
      .twiddle_rsc_0_13_AWPROT(twiddle_rsc_0_13_AWPROT),
      .twiddle_rsc_0_13_AWCACHE(twiddle_rsc_0_13_AWCACHE),
      .twiddle_rsc_0_13_AWLOCK(twiddle_rsc_0_13_AWLOCK),
      .twiddle_rsc_0_13_AWBURST(twiddle_rsc_0_13_AWBURST),
      .twiddle_rsc_0_13_AWSIZE(twiddle_rsc_0_13_AWSIZE),
      .twiddle_rsc_0_13_AWLEN(twiddle_rsc_0_13_AWLEN),
      .twiddle_rsc_0_13_AWADDR(twiddle_rsc_0_13_AWADDR),
      .twiddle_rsc_0_13_AWID(twiddle_rsc_0_13_AWID),
      .core_wen(core_wen),
      .twiddle_rsc_0_13_i_oswt(reg_twiddle_rsc_0_5_i_oswt_cse),
      .twiddle_rsc_0_13_i_wen_comp(twiddle_rsc_0_13_i_wen_comp),
      .twiddle_rsc_0_13_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_13_i_inst_twiddle_rsc_0_13_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_13_i_s_din_mxwt(twiddle_rsc_0_13_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_rsc_0_14_i peaseNTT_core_twiddle_rsc_0_14_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_14_s_tdone(twiddle_rsc_0_14_s_tdone),
      .twiddle_rsc_0_14_tr_write_done(twiddle_rsc_0_14_tr_write_done),
      .twiddle_rsc_0_14_RREADY(twiddle_rsc_0_14_RREADY),
      .twiddle_rsc_0_14_RVALID(twiddle_rsc_0_14_RVALID),
      .twiddle_rsc_0_14_RUSER(twiddle_rsc_0_14_RUSER),
      .twiddle_rsc_0_14_RLAST(twiddle_rsc_0_14_RLAST),
      .twiddle_rsc_0_14_RRESP(twiddle_rsc_0_14_RRESP),
      .twiddle_rsc_0_14_RDATA(twiddle_rsc_0_14_RDATA),
      .twiddle_rsc_0_14_RID(twiddle_rsc_0_14_RID),
      .twiddle_rsc_0_14_ARREADY(twiddle_rsc_0_14_ARREADY),
      .twiddle_rsc_0_14_ARVALID(twiddle_rsc_0_14_ARVALID),
      .twiddle_rsc_0_14_ARUSER(twiddle_rsc_0_14_ARUSER),
      .twiddle_rsc_0_14_ARREGION(twiddle_rsc_0_14_ARREGION),
      .twiddle_rsc_0_14_ARQOS(twiddle_rsc_0_14_ARQOS),
      .twiddle_rsc_0_14_ARPROT(twiddle_rsc_0_14_ARPROT),
      .twiddle_rsc_0_14_ARCACHE(twiddle_rsc_0_14_ARCACHE),
      .twiddle_rsc_0_14_ARLOCK(twiddle_rsc_0_14_ARLOCK),
      .twiddle_rsc_0_14_ARBURST(twiddle_rsc_0_14_ARBURST),
      .twiddle_rsc_0_14_ARSIZE(twiddle_rsc_0_14_ARSIZE),
      .twiddle_rsc_0_14_ARLEN(twiddle_rsc_0_14_ARLEN),
      .twiddle_rsc_0_14_ARADDR(twiddle_rsc_0_14_ARADDR),
      .twiddle_rsc_0_14_ARID(twiddle_rsc_0_14_ARID),
      .twiddle_rsc_0_14_BREADY(twiddle_rsc_0_14_BREADY),
      .twiddle_rsc_0_14_BVALID(twiddle_rsc_0_14_BVALID),
      .twiddle_rsc_0_14_BUSER(twiddle_rsc_0_14_BUSER),
      .twiddle_rsc_0_14_BRESP(twiddle_rsc_0_14_BRESP),
      .twiddle_rsc_0_14_BID(twiddle_rsc_0_14_BID),
      .twiddle_rsc_0_14_WREADY(twiddle_rsc_0_14_WREADY),
      .twiddle_rsc_0_14_WVALID(twiddle_rsc_0_14_WVALID),
      .twiddle_rsc_0_14_WUSER(twiddle_rsc_0_14_WUSER),
      .twiddle_rsc_0_14_WLAST(twiddle_rsc_0_14_WLAST),
      .twiddle_rsc_0_14_WSTRB(twiddle_rsc_0_14_WSTRB),
      .twiddle_rsc_0_14_WDATA(twiddle_rsc_0_14_WDATA),
      .twiddle_rsc_0_14_AWREADY(twiddle_rsc_0_14_AWREADY),
      .twiddle_rsc_0_14_AWVALID(twiddle_rsc_0_14_AWVALID),
      .twiddle_rsc_0_14_AWUSER(twiddle_rsc_0_14_AWUSER),
      .twiddle_rsc_0_14_AWREGION(twiddle_rsc_0_14_AWREGION),
      .twiddle_rsc_0_14_AWQOS(twiddle_rsc_0_14_AWQOS),
      .twiddle_rsc_0_14_AWPROT(twiddle_rsc_0_14_AWPROT),
      .twiddle_rsc_0_14_AWCACHE(twiddle_rsc_0_14_AWCACHE),
      .twiddle_rsc_0_14_AWLOCK(twiddle_rsc_0_14_AWLOCK),
      .twiddle_rsc_0_14_AWBURST(twiddle_rsc_0_14_AWBURST),
      .twiddle_rsc_0_14_AWSIZE(twiddle_rsc_0_14_AWSIZE),
      .twiddle_rsc_0_14_AWLEN(twiddle_rsc_0_14_AWLEN),
      .twiddle_rsc_0_14_AWADDR(twiddle_rsc_0_14_AWADDR),
      .twiddle_rsc_0_14_AWID(twiddle_rsc_0_14_AWID),
      .core_wen(core_wen),
      .twiddle_rsc_0_14_i_oswt(reg_twiddle_rsc_0_6_i_oswt_cse),
      .twiddle_rsc_0_14_i_wen_comp(twiddle_rsc_0_14_i_wen_comp),
      .twiddle_rsc_0_14_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_14_i_inst_twiddle_rsc_0_14_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_14_i_s_din_mxwt(twiddle_rsc_0_14_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_rsc_0_15_i peaseNTT_core_twiddle_rsc_0_15_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_rsc_0_15_s_tdone(twiddle_rsc_0_15_s_tdone),
      .twiddle_rsc_0_15_tr_write_done(twiddle_rsc_0_15_tr_write_done),
      .twiddle_rsc_0_15_RREADY(twiddle_rsc_0_15_RREADY),
      .twiddle_rsc_0_15_RVALID(twiddle_rsc_0_15_RVALID),
      .twiddle_rsc_0_15_RUSER(twiddle_rsc_0_15_RUSER),
      .twiddle_rsc_0_15_RLAST(twiddle_rsc_0_15_RLAST),
      .twiddle_rsc_0_15_RRESP(twiddle_rsc_0_15_RRESP),
      .twiddle_rsc_0_15_RDATA(twiddle_rsc_0_15_RDATA),
      .twiddle_rsc_0_15_RID(twiddle_rsc_0_15_RID),
      .twiddle_rsc_0_15_ARREADY(twiddle_rsc_0_15_ARREADY),
      .twiddle_rsc_0_15_ARVALID(twiddle_rsc_0_15_ARVALID),
      .twiddle_rsc_0_15_ARUSER(twiddle_rsc_0_15_ARUSER),
      .twiddle_rsc_0_15_ARREGION(twiddle_rsc_0_15_ARREGION),
      .twiddle_rsc_0_15_ARQOS(twiddle_rsc_0_15_ARQOS),
      .twiddle_rsc_0_15_ARPROT(twiddle_rsc_0_15_ARPROT),
      .twiddle_rsc_0_15_ARCACHE(twiddle_rsc_0_15_ARCACHE),
      .twiddle_rsc_0_15_ARLOCK(twiddle_rsc_0_15_ARLOCK),
      .twiddle_rsc_0_15_ARBURST(twiddle_rsc_0_15_ARBURST),
      .twiddle_rsc_0_15_ARSIZE(twiddle_rsc_0_15_ARSIZE),
      .twiddle_rsc_0_15_ARLEN(twiddle_rsc_0_15_ARLEN),
      .twiddle_rsc_0_15_ARADDR(twiddle_rsc_0_15_ARADDR),
      .twiddle_rsc_0_15_ARID(twiddle_rsc_0_15_ARID),
      .twiddle_rsc_0_15_BREADY(twiddle_rsc_0_15_BREADY),
      .twiddle_rsc_0_15_BVALID(twiddle_rsc_0_15_BVALID),
      .twiddle_rsc_0_15_BUSER(twiddle_rsc_0_15_BUSER),
      .twiddle_rsc_0_15_BRESP(twiddle_rsc_0_15_BRESP),
      .twiddle_rsc_0_15_BID(twiddle_rsc_0_15_BID),
      .twiddle_rsc_0_15_WREADY(twiddle_rsc_0_15_WREADY),
      .twiddle_rsc_0_15_WVALID(twiddle_rsc_0_15_WVALID),
      .twiddle_rsc_0_15_WUSER(twiddle_rsc_0_15_WUSER),
      .twiddle_rsc_0_15_WLAST(twiddle_rsc_0_15_WLAST),
      .twiddle_rsc_0_15_WSTRB(twiddle_rsc_0_15_WSTRB),
      .twiddle_rsc_0_15_WDATA(twiddle_rsc_0_15_WDATA),
      .twiddle_rsc_0_15_AWREADY(twiddle_rsc_0_15_AWREADY),
      .twiddle_rsc_0_15_AWVALID(twiddle_rsc_0_15_AWVALID),
      .twiddle_rsc_0_15_AWUSER(twiddle_rsc_0_15_AWUSER),
      .twiddle_rsc_0_15_AWREGION(twiddle_rsc_0_15_AWREGION),
      .twiddle_rsc_0_15_AWQOS(twiddle_rsc_0_15_AWQOS),
      .twiddle_rsc_0_15_AWPROT(twiddle_rsc_0_15_AWPROT),
      .twiddle_rsc_0_15_AWCACHE(twiddle_rsc_0_15_AWCACHE),
      .twiddle_rsc_0_15_AWLOCK(twiddle_rsc_0_15_AWLOCK),
      .twiddle_rsc_0_15_AWBURST(twiddle_rsc_0_15_AWBURST),
      .twiddle_rsc_0_15_AWSIZE(twiddle_rsc_0_15_AWSIZE),
      .twiddle_rsc_0_15_AWLEN(twiddle_rsc_0_15_AWLEN),
      .twiddle_rsc_0_15_AWADDR(twiddle_rsc_0_15_AWADDR),
      .twiddle_rsc_0_15_AWID(twiddle_rsc_0_15_AWID),
      .core_wen(core_wen),
      .twiddle_rsc_0_15_i_oswt(reg_twiddle_rsc_0_7_i_oswt_cse),
      .twiddle_rsc_0_15_i_wen_comp(twiddle_rsc_0_15_i_wen_comp),
      .twiddle_rsc_0_15_i_s_raddr_core(nl_peaseNTT_core_twiddle_rsc_0_15_i_inst_twiddle_rsc_0_15_i_s_raddr_core[5:0]),
      .twiddle_rsc_0_15_i_s_din_mxwt(twiddle_rsc_0_15_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_h_rsc_0_0_i peaseNTT_core_twiddle_h_rsc_0_0_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_0_s_tdone(twiddle_h_rsc_0_0_s_tdone),
      .twiddle_h_rsc_0_0_tr_write_done(twiddle_h_rsc_0_0_tr_write_done),
      .twiddle_h_rsc_0_0_RREADY(twiddle_h_rsc_0_0_RREADY),
      .twiddle_h_rsc_0_0_RVALID(twiddle_h_rsc_0_0_RVALID),
      .twiddle_h_rsc_0_0_RUSER(twiddle_h_rsc_0_0_RUSER),
      .twiddle_h_rsc_0_0_RLAST(twiddle_h_rsc_0_0_RLAST),
      .twiddle_h_rsc_0_0_RRESP(twiddle_h_rsc_0_0_RRESP),
      .twiddle_h_rsc_0_0_RDATA(twiddle_h_rsc_0_0_RDATA),
      .twiddle_h_rsc_0_0_RID(twiddle_h_rsc_0_0_RID),
      .twiddle_h_rsc_0_0_ARREADY(twiddle_h_rsc_0_0_ARREADY),
      .twiddle_h_rsc_0_0_ARVALID(twiddle_h_rsc_0_0_ARVALID),
      .twiddle_h_rsc_0_0_ARUSER(twiddle_h_rsc_0_0_ARUSER),
      .twiddle_h_rsc_0_0_ARREGION(twiddle_h_rsc_0_0_ARREGION),
      .twiddle_h_rsc_0_0_ARQOS(twiddle_h_rsc_0_0_ARQOS),
      .twiddle_h_rsc_0_0_ARPROT(twiddle_h_rsc_0_0_ARPROT),
      .twiddle_h_rsc_0_0_ARCACHE(twiddle_h_rsc_0_0_ARCACHE),
      .twiddle_h_rsc_0_0_ARLOCK(twiddle_h_rsc_0_0_ARLOCK),
      .twiddle_h_rsc_0_0_ARBURST(twiddle_h_rsc_0_0_ARBURST),
      .twiddle_h_rsc_0_0_ARSIZE(twiddle_h_rsc_0_0_ARSIZE),
      .twiddle_h_rsc_0_0_ARLEN(twiddle_h_rsc_0_0_ARLEN),
      .twiddle_h_rsc_0_0_ARADDR(twiddle_h_rsc_0_0_ARADDR),
      .twiddle_h_rsc_0_0_ARID(twiddle_h_rsc_0_0_ARID),
      .twiddle_h_rsc_0_0_BREADY(twiddle_h_rsc_0_0_BREADY),
      .twiddle_h_rsc_0_0_BVALID(twiddle_h_rsc_0_0_BVALID),
      .twiddle_h_rsc_0_0_BUSER(twiddle_h_rsc_0_0_BUSER),
      .twiddle_h_rsc_0_0_BRESP(twiddle_h_rsc_0_0_BRESP),
      .twiddle_h_rsc_0_0_BID(twiddle_h_rsc_0_0_BID),
      .twiddle_h_rsc_0_0_WREADY(twiddle_h_rsc_0_0_WREADY),
      .twiddle_h_rsc_0_0_WVALID(twiddle_h_rsc_0_0_WVALID),
      .twiddle_h_rsc_0_0_WUSER(twiddle_h_rsc_0_0_WUSER),
      .twiddle_h_rsc_0_0_WLAST(twiddle_h_rsc_0_0_WLAST),
      .twiddle_h_rsc_0_0_WSTRB(twiddle_h_rsc_0_0_WSTRB),
      .twiddle_h_rsc_0_0_WDATA(twiddle_h_rsc_0_0_WDATA),
      .twiddle_h_rsc_0_0_AWREADY(twiddle_h_rsc_0_0_AWREADY),
      .twiddle_h_rsc_0_0_AWVALID(twiddle_h_rsc_0_0_AWVALID),
      .twiddle_h_rsc_0_0_AWUSER(twiddle_h_rsc_0_0_AWUSER),
      .twiddle_h_rsc_0_0_AWREGION(twiddle_h_rsc_0_0_AWREGION),
      .twiddle_h_rsc_0_0_AWQOS(twiddle_h_rsc_0_0_AWQOS),
      .twiddle_h_rsc_0_0_AWPROT(twiddle_h_rsc_0_0_AWPROT),
      .twiddle_h_rsc_0_0_AWCACHE(twiddle_h_rsc_0_0_AWCACHE),
      .twiddle_h_rsc_0_0_AWLOCK(twiddle_h_rsc_0_0_AWLOCK),
      .twiddle_h_rsc_0_0_AWBURST(twiddle_h_rsc_0_0_AWBURST),
      .twiddle_h_rsc_0_0_AWSIZE(twiddle_h_rsc_0_0_AWSIZE),
      .twiddle_h_rsc_0_0_AWLEN(twiddle_h_rsc_0_0_AWLEN),
      .twiddle_h_rsc_0_0_AWADDR(twiddle_h_rsc_0_0_AWADDR),
      .twiddle_h_rsc_0_0_AWID(twiddle_h_rsc_0_0_AWID),
      .core_wen(core_wen),
      .twiddle_h_rsc_0_0_i_oswt(reg_twiddle_rsc_0_0_i_oswt_cse),
      .twiddle_h_rsc_0_0_i_wen_comp(twiddle_h_rsc_0_0_i_wen_comp),
      .twiddle_h_rsc_0_0_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_0_i_inst_twiddle_h_rsc_0_0_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_0_i_s_din_mxwt(twiddle_h_rsc_0_0_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_h_rsc_0_1_i peaseNTT_core_twiddle_h_rsc_0_1_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_1_s_tdone(twiddle_h_rsc_0_1_s_tdone),
      .twiddle_h_rsc_0_1_tr_write_done(twiddle_h_rsc_0_1_tr_write_done),
      .twiddle_h_rsc_0_1_RREADY(twiddle_h_rsc_0_1_RREADY),
      .twiddle_h_rsc_0_1_RVALID(twiddle_h_rsc_0_1_RVALID),
      .twiddle_h_rsc_0_1_RUSER(twiddle_h_rsc_0_1_RUSER),
      .twiddle_h_rsc_0_1_RLAST(twiddle_h_rsc_0_1_RLAST),
      .twiddle_h_rsc_0_1_RRESP(twiddle_h_rsc_0_1_RRESP),
      .twiddle_h_rsc_0_1_RDATA(twiddle_h_rsc_0_1_RDATA),
      .twiddle_h_rsc_0_1_RID(twiddle_h_rsc_0_1_RID),
      .twiddle_h_rsc_0_1_ARREADY(twiddle_h_rsc_0_1_ARREADY),
      .twiddle_h_rsc_0_1_ARVALID(twiddle_h_rsc_0_1_ARVALID),
      .twiddle_h_rsc_0_1_ARUSER(twiddle_h_rsc_0_1_ARUSER),
      .twiddle_h_rsc_0_1_ARREGION(twiddle_h_rsc_0_1_ARREGION),
      .twiddle_h_rsc_0_1_ARQOS(twiddle_h_rsc_0_1_ARQOS),
      .twiddle_h_rsc_0_1_ARPROT(twiddle_h_rsc_0_1_ARPROT),
      .twiddle_h_rsc_0_1_ARCACHE(twiddle_h_rsc_0_1_ARCACHE),
      .twiddle_h_rsc_0_1_ARLOCK(twiddle_h_rsc_0_1_ARLOCK),
      .twiddle_h_rsc_0_1_ARBURST(twiddle_h_rsc_0_1_ARBURST),
      .twiddle_h_rsc_0_1_ARSIZE(twiddle_h_rsc_0_1_ARSIZE),
      .twiddle_h_rsc_0_1_ARLEN(twiddle_h_rsc_0_1_ARLEN),
      .twiddle_h_rsc_0_1_ARADDR(twiddle_h_rsc_0_1_ARADDR),
      .twiddle_h_rsc_0_1_ARID(twiddle_h_rsc_0_1_ARID),
      .twiddle_h_rsc_0_1_BREADY(twiddle_h_rsc_0_1_BREADY),
      .twiddle_h_rsc_0_1_BVALID(twiddle_h_rsc_0_1_BVALID),
      .twiddle_h_rsc_0_1_BUSER(twiddle_h_rsc_0_1_BUSER),
      .twiddle_h_rsc_0_1_BRESP(twiddle_h_rsc_0_1_BRESP),
      .twiddle_h_rsc_0_1_BID(twiddle_h_rsc_0_1_BID),
      .twiddle_h_rsc_0_1_WREADY(twiddle_h_rsc_0_1_WREADY),
      .twiddle_h_rsc_0_1_WVALID(twiddle_h_rsc_0_1_WVALID),
      .twiddle_h_rsc_0_1_WUSER(twiddle_h_rsc_0_1_WUSER),
      .twiddle_h_rsc_0_1_WLAST(twiddle_h_rsc_0_1_WLAST),
      .twiddle_h_rsc_0_1_WSTRB(twiddle_h_rsc_0_1_WSTRB),
      .twiddle_h_rsc_0_1_WDATA(twiddle_h_rsc_0_1_WDATA),
      .twiddle_h_rsc_0_1_AWREADY(twiddle_h_rsc_0_1_AWREADY),
      .twiddle_h_rsc_0_1_AWVALID(twiddle_h_rsc_0_1_AWVALID),
      .twiddle_h_rsc_0_1_AWUSER(twiddle_h_rsc_0_1_AWUSER),
      .twiddle_h_rsc_0_1_AWREGION(twiddle_h_rsc_0_1_AWREGION),
      .twiddle_h_rsc_0_1_AWQOS(twiddle_h_rsc_0_1_AWQOS),
      .twiddle_h_rsc_0_1_AWPROT(twiddle_h_rsc_0_1_AWPROT),
      .twiddle_h_rsc_0_1_AWCACHE(twiddle_h_rsc_0_1_AWCACHE),
      .twiddle_h_rsc_0_1_AWLOCK(twiddle_h_rsc_0_1_AWLOCK),
      .twiddle_h_rsc_0_1_AWBURST(twiddle_h_rsc_0_1_AWBURST),
      .twiddle_h_rsc_0_1_AWSIZE(twiddle_h_rsc_0_1_AWSIZE),
      .twiddle_h_rsc_0_1_AWLEN(twiddle_h_rsc_0_1_AWLEN),
      .twiddle_h_rsc_0_1_AWADDR(twiddle_h_rsc_0_1_AWADDR),
      .twiddle_h_rsc_0_1_AWID(twiddle_h_rsc_0_1_AWID),
      .core_wen(core_wen),
      .twiddle_h_rsc_0_1_i_oswt(reg_twiddle_rsc_0_1_i_oswt_cse),
      .twiddle_h_rsc_0_1_i_wen_comp(twiddle_h_rsc_0_1_i_wen_comp),
      .twiddle_h_rsc_0_1_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_1_i_inst_twiddle_h_rsc_0_1_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_1_i_s_din_mxwt(twiddle_h_rsc_0_1_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_h_rsc_0_2_i peaseNTT_core_twiddle_h_rsc_0_2_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_2_s_tdone(twiddle_h_rsc_0_2_s_tdone),
      .twiddle_h_rsc_0_2_tr_write_done(twiddle_h_rsc_0_2_tr_write_done),
      .twiddle_h_rsc_0_2_RREADY(twiddle_h_rsc_0_2_RREADY),
      .twiddle_h_rsc_0_2_RVALID(twiddle_h_rsc_0_2_RVALID),
      .twiddle_h_rsc_0_2_RUSER(twiddle_h_rsc_0_2_RUSER),
      .twiddle_h_rsc_0_2_RLAST(twiddle_h_rsc_0_2_RLAST),
      .twiddle_h_rsc_0_2_RRESP(twiddle_h_rsc_0_2_RRESP),
      .twiddle_h_rsc_0_2_RDATA(twiddle_h_rsc_0_2_RDATA),
      .twiddle_h_rsc_0_2_RID(twiddle_h_rsc_0_2_RID),
      .twiddle_h_rsc_0_2_ARREADY(twiddle_h_rsc_0_2_ARREADY),
      .twiddle_h_rsc_0_2_ARVALID(twiddle_h_rsc_0_2_ARVALID),
      .twiddle_h_rsc_0_2_ARUSER(twiddle_h_rsc_0_2_ARUSER),
      .twiddle_h_rsc_0_2_ARREGION(twiddle_h_rsc_0_2_ARREGION),
      .twiddle_h_rsc_0_2_ARQOS(twiddle_h_rsc_0_2_ARQOS),
      .twiddle_h_rsc_0_2_ARPROT(twiddle_h_rsc_0_2_ARPROT),
      .twiddle_h_rsc_0_2_ARCACHE(twiddle_h_rsc_0_2_ARCACHE),
      .twiddle_h_rsc_0_2_ARLOCK(twiddle_h_rsc_0_2_ARLOCK),
      .twiddle_h_rsc_0_2_ARBURST(twiddle_h_rsc_0_2_ARBURST),
      .twiddle_h_rsc_0_2_ARSIZE(twiddle_h_rsc_0_2_ARSIZE),
      .twiddle_h_rsc_0_2_ARLEN(twiddle_h_rsc_0_2_ARLEN),
      .twiddle_h_rsc_0_2_ARADDR(twiddle_h_rsc_0_2_ARADDR),
      .twiddle_h_rsc_0_2_ARID(twiddle_h_rsc_0_2_ARID),
      .twiddle_h_rsc_0_2_BREADY(twiddle_h_rsc_0_2_BREADY),
      .twiddle_h_rsc_0_2_BVALID(twiddle_h_rsc_0_2_BVALID),
      .twiddle_h_rsc_0_2_BUSER(twiddle_h_rsc_0_2_BUSER),
      .twiddle_h_rsc_0_2_BRESP(twiddle_h_rsc_0_2_BRESP),
      .twiddle_h_rsc_0_2_BID(twiddle_h_rsc_0_2_BID),
      .twiddle_h_rsc_0_2_WREADY(twiddle_h_rsc_0_2_WREADY),
      .twiddle_h_rsc_0_2_WVALID(twiddle_h_rsc_0_2_WVALID),
      .twiddle_h_rsc_0_2_WUSER(twiddle_h_rsc_0_2_WUSER),
      .twiddle_h_rsc_0_2_WLAST(twiddle_h_rsc_0_2_WLAST),
      .twiddle_h_rsc_0_2_WSTRB(twiddle_h_rsc_0_2_WSTRB),
      .twiddle_h_rsc_0_2_WDATA(twiddle_h_rsc_0_2_WDATA),
      .twiddle_h_rsc_0_2_AWREADY(twiddle_h_rsc_0_2_AWREADY),
      .twiddle_h_rsc_0_2_AWVALID(twiddle_h_rsc_0_2_AWVALID),
      .twiddle_h_rsc_0_2_AWUSER(twiddle_h_rsc_0_2_AWUSER),
      .twiddle_h_rsc_0_2_AWREGION(twiddle_h_rsc_0_2_AWREGION),
      .twiddle_h_rsc_0_2_AWQOS(twiddle_h_rsc_0_2_AWQOS),
      .twiddle_h_rsc_0_2_AWPROT(twiddle_h_rsc_0_2_AWPROT),
      .twiddle_h_rsc_0_2_AWCACHE(twiddle_h_rsc_0_2_AWCACHE),
      .twiddle_h_rsc_0_2_AWLOCK(twiddle_h_rsc_0_2_AWLOCK),
      .twiddle_h_rsc_0_2_AWBURST(twiddle_h_rsc_0_2_AWBURST),
      .twiddle_h_rsc_0_2_AWSIZE(twiddle_h_rsc_0_2_AWSIZE),
      .twiddle_h_rsc_0_2_AWLEN(twiddle_h_rsc_0_2_AWLEN),
      .twiddle_h_rsc_0_2_AWADDR(twiddle_h_rsc_0_2_AWADDR),
      .twiddle_h_rsc_0_2_AWID(twiddle_h_rsc_0_2_AWID),
      .core_wen(core_wen),
      .twiddle_h_rsc_0_2_i_oswt(reg_twiddle_rsc_0_2_i_oswt_cse),
      .twiddle_h_rsc_0_2_i_wen_comp(twiddle_h_rsc_0_2_i_wen_comp),
      .twiddle_h_rsc_0_2_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_2_i_inst_twiddle_h_rsc_0_2_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_2_i_s_din_mxwt(twiddle_h_rsc_0_2_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_h_rsc_0_3_i peaseNTT_core_twiddle_h_rsc_0_3_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_3_s_tdone(twiddle_h_rsc_0_3_s_tdone),
      .twiddle_h_rsc_0_3_tr_write_done(twiddle_h_rsc_0_3_tr_write_done),
      .twiddle_h_rsc_0_3_RREADY(twiddle_h_rsc_0_3_RREADY),
      .twiddle_h_rsc_0_3_RVALID(twiddle_h_rsc_0_3_RVALID),
      .twiddle_h_rsc_0_3_RUSER(twiddle_h_rsc_0_3_RUSER),
      .twiddle_h_rsc_0_3_RLAST(twiddle_h_rsc_0_3_RLAST),
      .twiddle_h_rsc_0_3_RRESP(twiddle_h_rsc_0_3_RRESP),
      .twiddle_h_rsc_0_3_RDATA(twiddle_h_rsc_0_3_RDATA),
      .twiddle_h_rsc_0_3_RID(twiddle_h_rsc_0_3_RID),
      .twiddle_h_rsc_0_3_ARREADY(twiddle_h_rsc_0_3_ARREADY),
      .twiddle_h_rsc_0_3_ARVALID(twiddle_h_rsc_0_3_ARVALID),
      .twiddle_h_rsc_0_3_ARUSER(twiddle_h_rsc_0_3_ARUSER),
      .twiddle_h_rsc_0_3_ARREGION(twiddle_h_rsc_0_3_ARREGION),
      .twiddle_h_rsc_0_3_ARQOS(twiddle_h_rsc_0_3_ARQOS),
      .twiddle_h_rsc_0_3_ARPROT(twiddle_h_rsc_0_3_ARPROT),
      .twiddle_h_rsc_0_3_ARCACHE(twiddle_h_rsc_0_3_ARCACHE),
      .twiddle_h_rsc_0_3_ARLOCK(twiddle_h_rsc_0_3_ARLOCK),
      .twiddle_h_rsc_0_3_ARBURST(twiddle_h_rsc_0_3_ARBURST),
      .twiddle_h_rsc_0_3_ARSIZE(twiddle_h_rsc_0_3_ARSIZE),
      .twiddle_h_rsc_0_3_ARLEN(twiddle_h_rsc_0_3_ARLEN),
      .twiddle_h_rsc_0_3_ARADDR(twiddle_h_rsc_0_3_ARADDR),
      .twiddle_h_rsc_0_3_ARID(twiddle_h_rsc_0_3_ARID),
      .twiddle_h_rsc_0_3_BREADY(twiddle_h_rsc_0_3_BREADY),
      .twiddle_h_rsc_0_3_BVALID(twiddle_h_rsc_0_3_BVALID),
      .twiddle_h_rsc_0_3_BUSER(twiddle_h_rsc_0_3_BUSER),
      .twiddle_h_rsc_0_3_BRESP(twiddle_h_rsc_0_3_BRESP),
      .twiddle_h_rsc_0_3_BID(twiddle_h_rsc_0_3_BID),
      .twiddle_h_rsc_0_3_WREADY(twiddle_h_rsc_0_3_WREADY),
      .twiddle_h_rsc_0_3_WVALID(twiddle_h_rsc_0_3_WVALID),
      .twiddle_h_rsc_0_3_WUSER(twiddle_h_rsc_0_3_WUSER),
      .twiddle_h_rsc_0_3_WLAST(twiddle_h_rsc_0_3_WLAST),
      .twiddle_h_rsc_0_3_WSTRB(twiddle_h_rsc_0_3_WSTRB),
      .twiddle_h_rsc_0_3_WDATA(twiddle_h_rsc_0_3_WDATA),
      .twiddle_h_rsc_0_3_AWREADY(twiddle_h_rsc_0_3_AWREADY),
      .twiddle_h_rsc_0_3_AWVALID(twiddle_h_rsc_0_3_AWVALID),
      .twiddle_h_rsc_0_3_AWUSER(twiddle_h_rsc_0_3_AWUSER),
      .twiddle_h_rsc_0_3_AWREGION(twiddle_h_rsc_0_3_AWREGION),
      .twiddle_h_rsc_0_3_AWQOS(twiddle_h_rsc_0_3_AWQOS),
      .twiddle_h_rsc_0_3_AWPROT(twiddle_h_rsc_0_3_AWPROT),
      .twiddle_h_rsc_0_3_AWCACHE(twiddle_h_rsc_0_3_AWCACHE),
      .twiddle_h_rsc_0_3_AWLOCK(twiddle_h_rsc_0_3_AWLOCK),
      .twiddle_h_rsc_0_3_AWBURST(twiddle_h_rsc_0_3_AWBURST),
      .twiddle_h_rsc_0_3_AWSIZE(twiddle_h_rsc_0_3_AWSIZE),
      .twiddle_h_rsc_0_3_AWLEN(twiddle_h_rsc_0_3_AWLEN),
      .twiddle_h_rsc_0_3_AWADDR(twiddle_h_rsc_0_3_AWADDR),
      .twiddle_h_rsc_0_3_AWID(twiddle_h_rsc_0_3_AWID),
      .core_wen(core_wen),
      .twiddle_h_rsc_0_3_i_oswt(reg_twiddle_rsc_0_3_i_oswt_cse),
      .twiddle_h_rsc_0_3_i_wen_comp(twiddle_h_rsc_0_3_i_wen_comp),
      .twiddle_h_rsc_0_3_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_3_i_inst_twiddle_h_rsc_0_3_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_3_i_s_din_mxwt(twiddle_h_rsc_0_3_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_h_rsc_0_4_i peaseNTT_core_twiddle_h_rsc_0_4_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_4_s_tdone(twiddle_h_rsc_0_4_s_tdone),
      .twiddle_h_rsc_0_4_tr_write_done(twiddle_h_rsc_0_4_tr_write_done),
      .twiddle_h_rsc_0_4_RREADY(twiddle_h_rsc_0_4_RREADY),
      .twiddle_h_rsc_0_4_RVALID(twiddle_h_rsc_0_4_RVALID),
      .twiddle_h_rsc_0_4_RUSER(twiddle_h_rsc_0_4_RUSER),
      .twiddle_h_rsc_0_4_RLAST(twiddle_h_rsc_0_4_RLAST),
      .twiddle_h_rsc_0_4_RRESP(twiddle_h_rsc_0_4_RRESP),
      .twiddle_h_rsc_0_4_RDATA(twiddle_h_rsc_0_4_RDATA),
      .twiddle_h_rsc_0_4_RID(twiddle_h_rsc_0_4_RID),
      .twiddle_h_rsc_0_4_ARREADY(twiddle_h_rsc_0_4_ARREADY),
      .twiddle_h_rsc_0_4_ARVALID(twiddle_h_rsc_0_4_ARVALID),
      .twiddle_h_rsc_0_4_ARUSER(twiddle_h_rsc_0_4_ARUSER),
      .twiddle_h_rsc_0_4_ARREGION(twiddle_h_rsc_0_4_ARREGION),
      .twiddle_h_rsc_0_4_ARQOS(twiddle_h_rsc_0_4_ARQOS),
      .twiddle_h_rsc_0_4_ARPROT(twiddle_h_rsc_0_4_ARPROT),
      .twiddle_h_rsc_0_4_ARCACHE(twiddle_h_rsc_0_4_ARCACHE),
      .twiddle_h_rsc_0_4_ARLOCK(twiddle_h_rsc_0_4_ARLOCK),
      .twiddle_h_rsc_0_4_ARBURST(twiddle_h_rsc_0_4_ARBURST),
      .twiddle_h_rsc_0_4_ARSIZE(twiddle_h_rsc_0_4_ARSIZE),
      .twiddle_h_rsc_0_4_ARLEN(twiddle_h_rsc_0_4_ARLEN),
      .twiddle_h_rsc_0_4_ARADDR(twiddle_h_rsc_0_4_ARADDR),
      .twiddle_h_rsc_0_4_ARID(twiddle_h_rsc_0_4_ARID),
      .twiddle_h_rsc_0_4_BREADY(twiddle_h_rsc_0_4_BREADY),
      .twiddle_h_rsc_0_4_BVALID(twiddle_h_rsc_0_4_BVALID),
      .twiddle_h_rsc_0_4_BUSER(twiddle_h_rsc_0_4_BUSER),
      .twiddle_h_rsc_0_4_BRESP(twiddle_h_rsc_0_4_BRESP),
      .twiddle_h_rsc_0_4_BID(twiddle_h_rsc_0_4_BID),
      .twiddle_h_rsc_0_4_WREADY(twiddle_h_rsc_0_4_WREADY),
      .twiddle_h_rsc_0_4_WVALID(twiddle_h_rsc_0_4_WVALID),
      .twiddle_h_rsc_0_4_WUSER(twiddle_h_rsc_0_4_WUSER),
      .twiddle_h_rsc_0_4_WLAST(twiddle_h_rsc_0_4_WLAST),
      .twiddle_h_rsc_0_4_WSTRB(twiddle_h_rsc_0_4_WSTRB),
      .twiddle_h_rsc_0_4_WDATA(twiddle_h_rsc_0_4_WDATA),
      .twiddle_h_rsc_0_4_AWREADY(twiddle_h_rsc_0_4_AWREADY),
      .twiddle_h_rsc_0_4_AWVALID(twiddle_h_rsc_0_4_AWVALID),
      .twiddle_h_rsc_0_4_AWUSER(twiddle_h_rsc_0_4_AWUSER),
      .twiddle_h_rsc_0_4_AWREGION(twiddle_h_rsc_0_4_AWREGION),
      .twiddle_h_rsc_0_4_AWQOS(twiddle_h_rsc_0_4_AWQOS),
      .twiddle_h_rsc_0_4_AWPROT(twiddle_h_rsc_0_4_AWPROT),
      .twiddle_h_rsc_0_4_AWCACHE(twiddle_h_rsc_0_4_AWCACHE),
      .twiddle_h_rsc_0_4_AWLOCK(twiddle_h_rsc_0_4_AWLOCK),
      .twiddle_h_rsc_0_4_AWBURST(twiddle_h_rsc_0_4_AWBURST),
      .twiddle_h_rsc_0_4_AWSIZE(twiddle_h_rsc_0_4_AWSIZE),
      .twiddle_h_rsc_0_4_AWLEN(twiddle_h_rsc_0_4_AWLEN),
      .twiddle_h_rsc_0_4_AWADDR(twiddle_h_rsc_0_4_AWADDR),
      .twiddle_h_rsc_0_4_AWID(twiddle_h_rsc_0_4_AWID),
      .core_wen(core_wen),
      .twiddle_h_rsc_0_4_i_oswt(reg_twiddle_rsc_0_4_i_oswt_cse),
      .twiddle_h_rsc_0_4_i_wen_comp(twiddle_h_rsc_0_4_i_wen_comp),
      .twiddle_h_rsc_0_4_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_4_i_inst_twiddle_h_rsc_0_4_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_4_i_s_din_mxwt(twiddle_h_rsc_0_4_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_h_rsc_0_5_i peaseNTT_core_twiddle_h_rsc_0_5_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_5_s_tdone(twiddle_h_rsc_0_5_s_tdone),
      .twiddle_h_rsc_0_5_tr_write_done(twiddle_h_rsc_0_5_tr_write_done),
      .twiddle_h_rsc_0_5_RREADY(twiddle_h_rsc_0_5_RREADY),
      .twiddle_h_rsc_0_5_RVALID(twiddle_h_rsc_0_5_RVALID),
      .twiddle_h_rsc_0_5_RUSER(twiddle_h_rsc_0_5_RUSER),
      .twiddle_h_rsc_0_5_RLAST(twiddle_h_rsc_0_5_RLAST),
      .twiddle_h_rsc_0_5_RRESP(twiddle_h_rsc_0_5_RRESP),
      .twiddle_h_rsc_0_5_RDATA(twiddle_h_rsc_0_5_RDATA),
      .twiddle_h_rsc_0_5_RID(twiddle_h_rsc_0_5_RID),
      .twiddle_h_rsc_0_5_ARREADY(twiddle_h_rsc_0_5_ARREADY),
      .twiddle_h_rsc_0_5_ARVALID(twiddle_h_rsc_0_5_ARVALID),
      .twiddle_h_rsc_0_5_ARUSER(twiddle_h_rsc_0_5_ARUSER),
      .twiddle_h_rsc_0_5_ARREGION(twiddle_h_rsc_0_5_ARREGION),
      .twiddle_h_rsc_0_5_ARQOS(twiddle_h_rsc_0_5_ARQOS),
      .twiddle_h_rsc_0_5_ARPROT(twiddle_h_rsc_0_5_ARPROT),
      .twiddle_h_rsc_0_5_ARCACHE(twiddle_h_rsc_0_5_ARCACHE),
      .twiddle_h_rsc_0_5_ARLOCK(twiddle_h_rsc_0_5_ARLOCK),
      .twiddle_h_rsc_0_5_ARBURST(twiddle_h_rsc_0_5_ARBURST),
      .twiddle_h_rsc_0_5_ARSIZE(twiddle_h_rsc_0_5_ARSIZE),
      .twiddle_h_rsc_0_5_ARLEN(twiddle_h_rsc_0_5_ARLEN),
      .twiddle_h_rsc_0_5_ARADDR(twiddle_h_rsc_0_5_ARADDR),
      .twiddle_h_rsc_0_5_ARID(twiddle_h_rsc_0_5_ARID),
      .twiddle_h_rsc_0_5_BREADY(twiddle_h_rsc_0_5_BREADY),
      .twiddle_h_rsc_0_5_BVALID(twiddle_h_rsc_0_5_BVALID),
      .twiddle_h_rsc_0_5_BUSER(twiddle_h_rsc_0_5_BUSER),
      .twiddle_h_rsc_0_5_BRESP(twiddle_h_rsc_0_5_BRESP),
      .twiddle_h_rsc_0_5_BID(twiddle_h_rsc_0_5_BID),
      .twiddle_h_rsc_0_5_WREADY(twiddle_h_rsc_0_5_WREADY),
      .twiddle_h_rsc_0_5_WVALID(twiddle_h_rsc_0_5_WVALID),
      .twiddle_h_rsc_0_5_WUSER(twiddle_h_rsc_0_5_WUSER),
      .twiddle_h_rsc_0_5_WLAST(twiddle_h_rsc_0_5_WLAST),
      .twiddle_h_rsc_0_5_WSTRB(twiddle_h_rsc_0_5_WSTRB),
      .twiddle_h_rsc_0_5_WDATA(twiddle_h_rsc_0_5_WDATA),
      .twiddle_h_rsc_0_5_AWREADY(twiddle_h_rsc_0_5_AWREADY),
      .twiddle_h_rsc_0_5_AWVALID(twiddle_h_rsc_0_5_AWVALID),
      .twiddle_h_rsc_0_5_AWUSER(twiddle_h_rsc_0_5_AWUSER),
      .twiddle_h_rsc_0_5_AWREGION(twiddle_h_rsc_0_5_AWREGION),
      .twiddle_h_rsc_0_5_AWQOS(twiddle_h_rsc_0_5_AWQOS),
      .twiddle_h_rsc_0_5_AWPROT(twiddle_h_rsc_0_5_AWPROT),
      .twiddle_h_rsc_0_5_AWCACHE(twiddle_h_rsc_0_5_AWCACHE),
      .twiddle_h_rsc_0_5_AWLOCK(twiddle_h_rsc_0_5_AWLOCK),
      .twiddle_h_rsc_0_5_AWBURST(twiddle_h_rsc_0_5_AWBURST),
      .twiddle_h_rsc_0_5_AWSIZE(twiddle_h_rsc_0_5_AWSIZE),
      .twiddle_h_rsc_0_5_AWLEN(twiddle_h_rsc_0_5_AWLEN),
      .twiddle_h_rsc_0_5_AWADDR(twiddle_h_rsc_0_5_AWADDR),
      .twiddle_h_rsc_0_5_AWID(twiddle_h_rsc_0_5_AWID),
      .core_wen(core_wen),
      .twiddle_h_rsc_0_5_i_oswt(reg_twiddle_rsc_0_5_i_oswt_cse),
      .twiddle_h_rsc_0_5_i_wen_comp(twiddle_h_rsc_0_5_i_wen_comp),
      .twiddle_h_rsc_0_5_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_5_i_inst_twiddle_h_rsc_0_5_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_5_i_s_din_mxwt(twiddle_h_rsc_0_5_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_h_rsc_0_6_i peaseNTT_core_twiddle_h_rsc_0_6_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_6_s_tdone(twiddle_h_rsc_0_6_s_tdone),
      .twiddle_h_rsc_0_6_tr_write_done(twiddle_h_rsc_0_6_tr_write_done),
      .twiddle_h_rsc_0_6_RREADY(twiddle_h_rsc_0_6_RREADY),
      .twiddle_h_rsc_0_6_RVALID(twiddle_h_rsc_0_6_RVALID),
      .twiddle_h_rsc_0_6_RUSER(twiddle_h_rsc_0_6_RUSER),
      .twiddle_h_rsc_0_6_RLAST(twiddle_h_rsc_0_6_RLAST),
      .twiddle_h_rsc_0_6_RRESP(twiddle_h_rsc_0_6_RRESP),
      .twiddle_h_rsc_0_6_RDATA(twiddle_h_rsc_0_6_RDATA),
      .twiddle_h_rsc_0_6_RID(twiddle_h_rsc_0_6_RID),
      .twiddle_h_rsc_0_6_ARREADY(twiddle_h_rsc_0_6_ARREADY),
      .twiddle_h_rsc_0_6_ARVALID(twiddle_h_rsc_0_6_ARVALID),
      .twiddle_h_rsc_0_6_ARUSER(twiddle_h_rsc_0_6_ARUSER),
      .twiddle_h_rsc_0_6_ARREGION(twiddle_h_rsc_0_6_ARREGION),
      .twiddle_h_rsc_0_6_ARQOS(twiddle_h_rsc_0_6_ARQOS),
      .twiddle_h_rsc_0_6_ARPROT(twiddle_h_rsc_0_6_ARPROT),
      .twiddle_h_rsc_0_6_ARCACHE(twiddle_h_rsc_0_6_ARCACHE),
      .twiddle_h_rsc_0_6_ARLOCK(twiddle_h_rsc_0_6_ARLOCK),
      .twiddle_h_rsc_0_6_ARBURST(twiddle_h_rsc_0_6_ARBURST),
      .twiddle_h_rsc_0_6_ARSIZE(twiddle_h_rsc_0_6_ARSIZE),
      .twiddle_h_rsc_0_6_ARLEN(twiddle_h_rsc_0_6_ARLEN),
      .twiddle_h_rsc_0_6_ARADDR(twiddle_h_rsc_0_6_ARADDR),
      .twiddle_h_rsc_0_6_ARID(twiddle_h_rsc_0_6_ARID),
      .twiddle_h_rsc_0_6_BREADY(twiddle_h_rsc_0_6_BREADY),
      .twiddle_h_rsc_0_6_BVALID(twiddle_h_rsc_0_6_BVALID),
      .twiddle_h_rsc_0_6_BUSER(twiddle_h_rsc_0_6_BUSER),
      .twiddle_h_rsc_0_6_BRESP(twiddle_h_rsc_0_6_BRESP),
      .twiddle_h_rsc_0_6_BID(twiddle_h_rsc_0_6_BID),
      .twiddle_h_rsc_0_6_WREADY(twiddle_h_rsc_0_6_WREADY),
      .twiddle_h_rsc_0_6_WVALID(twiddle_h_rsc_0_6_WVALID),
      .twiddle_h_rsc_0_6_WUSER(twiddle_h_rsc_0_6_WUSER),
      .twiddle_h_rsc_0_6_WLAST(twiddle_h_rsc_0_6_WLAST),
      .twiddle_h_rsc_0_6_WSTRB(twiddle_h_rsc_0_6_WSTRB),
      .twiddle_h_rsc_0_6_WDATA(twiddle_h_rsc_0_6_WDATA),
      .twiddle_h_rsc_0_6_AWREADY(twiddle_h_rsc_0_6_AWREADY),
      .twiddle_h_rsc_0_6_AWVALID(twiddle_h_rsc_0_6_AWVALID),
      .twiddle_h_rsc_0_6_AWUSER(twiddle_h_rsc_0_6_AWUSER),
      .twiddle_h_rsc_0_6_AWREGION(twiddle_h_rsc_0_6_AWREGION),
      .twiddle_h_rsc_0_6_AWQOS(twiddle_h_rsc_0_6_AWQOS),
      .twiddle_h_rsc_0_6_AWPROT(twiddle_h_rsc_0_6_AWPROT),
      .twiddle_h_rsc_0_6_AWCACHE(twiddle_h_rsc_0_6_AWCACHE),
      .twiddle_h_rsc_0_6_AWLOCK(twiddle_h_rsc_0_6_AWLOCK),
      .twiddle_h_rsc_0_6_AWBURST(twiddle_h_rsc_0_6_AWBURST),
      .twiddle_h_rsc_0_6_AWSIZE(twiddle_h_rsc_0_6_AWSIZE),
      .twiddle_h_rsc_0_6_AWLEN(twiddle_h_rsc_0_6_AWLEN),
      .twiddle_h_rsc_0_6_AWADDR(twiddle_h_rsc_0_6_AWADDR),
      .twiddle_h_rsc_0_6_AWID(twiddle_h_rsc_0_6_AWID),
      .core_wen(core_wen),
      .twiddle_h_rsc_0_6_i_oswt(reg_twiddle_rsc_0_6_i_oswt_cse),
      .twiddle_h_rsc_0_6_i_wen_comp(twiddle_h_rsc_0_6_i_wen_comp),
      .twiddle_h_rsc_0_6_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_6_i_inst_twiddle_h_rsc_0_6_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_6_i_s_din_mxwt(twiddle_h_rsc_0_6_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_h_rsc_0_7_i peaseNTT_core_twiddle_h_rsc_0_7_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_7_s_tdone(twiddle_h_rsc_0_7_s_tdone),
      .twiddle_h_rsc_0_7_tr_write_done(twiddle_h_rsc_0_7_tr_write_done),
      .twiddle_h_rsc_0_7_RREADY(twiddle_h_rsc_0_7_RREADY),
      .twiddle_h_rsc_0_7_RVALID(twiddle_h_rsc_0_7_RVALID),
      .twiddle_h_rsc_0_7_RUSER(twiddle_h_rsc_0_7_RUSER),
      .twiddle_h_rsc_0_7_RLAST(twiddle_h_rsc_0_7_RLAST),
      .twiddle_h_rsc_0_7_RRESP(twiddle_h_rsc_0_7_RRESP),
      .twiddle_h_rsc_0_7_RDATA(twiddle_h_rsc_0_7_RDATA),
      .twiddle_h_rsc_0_7_RID(twiddle_h_rsc_0_7_RID),
      .twiddle_h_rsc_0_7_ARREADY(twiddle_h_rsc_0_7_ARREADY),
      .twiddle_h_rsc_0_7_ARVALID(twiddle_h_rsc_0_7_ARVALID),
      .twiddle_h_rsc_0_7_ARUSER(twiddle_h_rsc_0_7_ARUSER),
      .twiddle_h_rsc_0_7_ARREGION(twiddle_h_rsc_0_7_ARREGION),
      .twiddle_h_rsc_0_7_ARQOS(twiddle_h_rsc_0_7_ARQOS),
      .twiddle_h_rsc_0_7_ARPROT(twiddle_h_rsc_0_7_ARPROT),
      .twiddle_h_rsc_0_7_ARCACHE(twiddle_h_rsc_0_7_ARCACHE),
      .twiddle_h_rsc_0_7_ARLOCK(twiddle_h_rsc_0_7_ARLOCK),
      .twiddle_h_rsc_0_7_ARBURST(twiddle_h_rsc_0_7_ARBURST),
      .twiddle_h_rsc_0_7_ARSIZE(twiddle_h_rsc_0_7_ARSIZE),
      .twiddle_h_rsc_0_7_ARLEN(twiddle_h_rsc_0_7_ARLEN),
      .twiddle_h_rsc_0_7_ARADDR(twiddle_h_rsc_0_7_ARADDR),
      .twiddle_h_rsc_0_7_ARID(twiddle_h_rsc_0_7_ARID),
      .twiddle_h_rsc_0_7_BREADY(twiddle_h_rsc_0_7_BREADY),
      .twiddle_h_rsc_0_7_BVALID(twiddle_h_rsc_0_7_BVALID),
      .twiddle_h_rsc_0_7_BUSER(twiddle_h_rsc_0_7_BUSER),
      .twiddle_h_rsc_0_7_BRESP(twiddle_h_rsc_0_7_BRESP),
      .twiddle_h_rsc_0_7_BID(twiddle_h_rsc_0_7_BID),
      .twiddle_h_rsc_0_7_WREADY(twiddle_h_rsc_0_7_WREADY),
      .twiddle_h_rsc_0_7_WVALID(twiddle_h_rsc_0_7_WVALID),
      .twiddle_h_rsc_0_7_WUSER(twiddle_h_rsc_0_7_WUSER),
      .twiddle_h_rsc_0_7_WLAST(twiddle_h_rsc_0_7_WLAST),
      .twiddle_h_rsc_0_7_WSTRB(twiddle_h_rsc_0_7_WSTRB),
      .twiddle_h_rsc_0_7_WDATA(twiddle_h_rsc_0_7_WDATA),
      .twiddle_h_rsc_0_7_AWREADY(twiddle_h_rsc_0_7_AWREADY),
      .twiddle_h_rsc_0_7_AWVALID(twiddle_h_rsc_0_7_AWVALID),
      .twiddle_h_rsc_0_7_AWUSER(twiddle_h_rsc_0_7_AWUSER),
      .twiddle_h_rsc_0_7_AWREGION(twiddle_h_rsc_0_7_AWREGION),
      .twiddle_h_rsc_0_7_AWQOS(twiddle_h_rsc_0_7_AWQOS),
      .twiddle_h_rsc_0_7_AWPROT(twiddle_h_rsc_0_7_AWPROT),
      .twiddle_h_rsc_0_7_AWCACHE(twiddle_h_rsc_0_7_AWCACHE),
      .twiddle_h_rsc_0_7_AWLOCK(twiddle_h_rsc_0_7_AWLOCK),
      .twiddle_h_rsc_0_7_AWBURST(twiddle_h_rsc_0_7_AWBURST),
      .twiddle_h_rsc_0_7_AWSIZE(twiddle_h_rsc_0_7_AWSIZE),
      .twiddle_h_rsc_0_7_AWLEN(twiddle_h_rsc_0_7_AWLEN),
      .twiddle_h_rsc_0_7_AWADDR(twiddle_h_rsc_0_7_AWADDR),
      .twiddle_h_rsc_0_7_AWID(twiddle_h_rsc_0_7_AWID),
      .core_wen(core_wen),
      .twiddle_h_rsc_0_7_i_oswt(reg_twiddle_rsc_0_7_i_oswt_cse),
      .twiddle_h_rsc_0_7_i_wen_comp(twiddle_h_rsc_0_7_i_wen_comp),
      .twiddle_h_rsc_0_7_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_7_i_inst_twiddle_h_rsc_0_7_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_7_i_s_din_mxwt(twiddle_h_rsc_0_7_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_h_rsc_0_8_i peaseNTT_core_twiddle_h_rsc_0_8_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_8_s_tdone(twiddle_h_rsc_0_8_s_tdone),
      .twiddle_h_rsc_0_8_tr_write_done(twiddle_h_rsc_0_8_tr_write_done),
      .twiddle_h_rsc_0_8_RREADY(twiddle_h_rsc_0_8_RREADY),
      .twiddle_h_rsc_0_8_RVALID(twiddle_h_rsc_0_8_RVALID),
      .twiddle_h_rsc_0_8_RUSER(twiddle_h_rsc_0_8_RUSER),
      .twiddle_h_rsc_0_8_RLAST(twiddle_h_rsc_0_8_RLAST),
      .twiddle_h_rsc_0_8_RRESP(twiddle_h_rsc_0_8_RRESP),
      .twiddle_h_rsc_0_8_RDATA(twiddle_h_rsc_0_8_RDATA),
      .twiddle_h_rsc_0_8_RID(twiddle_h_rsc_0_8_RID),
      .twiddle_h_rsc_0_8_ARREADY(twiddle_h_rsc_0_8_ARREADY),
      .twiddle_h_rsc_0_8_ARVALID(twiddle_h_rsc_0_8_ARVALID),
      .twiddle_h_rsc_0_8_ARUSER(twiddle_h_rsc_0_8_ARUSER),
      .twiddle_h_rsc_0_8_ARREGION(twiddle_h_rsc_0_8_ARREGION),
      .twiddle_h_rsc_0_8_ARQOS(twiddle_h_rsc_0_8_ARQOS),
      .twiddle_h_rsc_0_8_ARPROT(twiddle_h_rsc_0_8_ARPROT),
      .twiddle_h_rsc_0_8_ARCACHE(twiddle_h_rsc_0_8_ARCACHE),
      .twiddle_h_rsc_0_8_ARLOCK(twiddle_h_rsc_0_8_ARLOCK),
      .twiddle_h_rsc_0_8_ARBURST(twiddle_h_rsc_0_8_ARBURST),
      .twiddle_h_rsc_0_8_ARSIZE(twiddle_h_rsc_0_8_ARSIZE),
      .twiddle_h_rsc_0_8_ARLEN(twiddle_h_rsc_0_8_ARLEN),
      .twiddle_h_rsc_0_8_ARADDR(twiddle_h_rsc_0_8_ARADDR),
      .twiddle_h_rsc_0_8_ARID(twiddle_h_rsc_0_8_ARID),
      .twiddle_h_rsc_0_8_BREADY(twiddle_h_rsc_0_8_BREADY),
      .twiddle_h_rsc_0_8_BVALID(twiddle_h_rsc_0_8_BVALID),
      .twiddle_h_rsc_0_8_BUSER(twiddle_h_rsc_0_8_BUSER),
      .twiddle_h_rsc_0_8_BRESP(twiddle_h_rsc_0_8_BRESP),
      .twiddle_h_rsc_0_8_BID(twiddle_h_rsc_0_8_BID),
      .twiddle_h_rsc_0_8_WREADY(twiddle_h_rsc_0_8_WREADY),
      .twiddle_h_rsc_0_8_WVALID(twiddle_h_rsc_0_8_WVALID),
      .twiddle_h_rsc_0_8_WUSER(twiddle_h_rsc_0_8_WUSER),
      .twiddle_h_rsc_0_8_WLAST(twiddle_h_rsc_0_8_WLAST),
      .twiddle_h_rsc_0_8_WSTRB(twiddle_h_rsc_0_8_WSTRB),
      .twiddle_h_rsc_0_8_WDATA(twiddle_h_rsc_0_8_WDATA),
      .twiddle_h_rsc_0_8_AWREADY(twiddle_h_rsc_0_8_AWREADY),
      .twiddle_h_rsc_0_8_AWVALID(twiddle_h_rsc_0_8_AWVALID),
      .twiddle_h_rsc_0_8_AWUSER(twiddle_h_rsc_0_8_AWUSER),
      .twiddle_h_rsc_0_8_AWREGION(twiddle_h_rsc_0_8_AWREGION),
      .twiddle_h_rsc_0_8_AWQOS(twiddle_h_rsc_0_8_AWQOS),
      .twiddle_h_rsc_0_8_AWPROT(twiddle_h_rsc_0_8_AWPROT),
      .twiddle_h_rsc_0_8_AWCACHE(twiddle_h_rsc_0_8_AWCACHE),
      .twiddle_h_rsc_0_8_AWLOCK(twiddle_h_rsc_0_8_AWLOCK),
      .twiddle_h_rsc_0_8_AWBURST(twiddle_h_rsc_0_8_AWBURST),
      .twiddle_h_rsc_0_8_AWSIZE(twiddle_h_rsc_0_8_AWSIZE),
      .twiddle_h_rsc_0_8_AWLEN(twiddle_h_rsc_0_8_AWLEN),
      .twiddle_h_rsc_0_8_AWADDR(twiddle_h_rsc_0_8_AWADDR),
      .twiddle_h_rsc_0_8_AWID(twiddle_h_rsc_0_8_AWID),
      .core_wen(core_wen),
      .twiddle_h_rsc_0_8_i_oswt(reg_twiddle_rsc_0_8_i_oswt_cse),
      .twiddle_h_rsc_0_8_i_wen_comp(twiddle_h_rsc_0_8_i_wen_comp),
      .twiddle_h_rsc_0_8_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_8_i_inst_twiddle_h_rsc_0_8_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_8_i_s_din_mxwt(twiddle_h_rsc_0_8_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_h_rsc_0_9_i peaseNTT_core_twiddle_h_rsc_0_9_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_9_s_tdone(twiddle_h_rsc_0_9_s_tdone),
      .twiddle_h_rsc_0_9_tr_write_done(twiddle_h_rsc_0_9_tr_write_done),
      .twiddle_h_rsc_0_9_RREADY(twiddle_h_rsc_0_9_RREADY),
      .twiddle_h_rsc_0_9_RVALID(twiddle_h_rsc_0_9_RVALID),
      .twiddle_h_rsc_0_9_RUSER(twiddle_h_rsc_0_9_RUSER),
      .twiddle_h_rsc_0_9_RLAST(twiddle_h_rsc_0_9_RLAST),
      .twiddle_h_rsc_0_9_RRESP(twiddle_h_rsc_0_9_RRESP),
      .twiddle_h_rsc_0_9_RDATA(twiddle_h_rsc_0_9_RDATA),
      .twiddle_h_rsc_0_9_RID(twiddle_h_rsc_0_9_RID),
      .twiddle_h_rsc_0_9_ARREADY(twiddle_h_rsc_0_9_ARREADY),
      .twiddle_h_rsc_0_9_ARVALID(twiddle_h_rsc_0_9_ARVALID),
      .twiddle_h_rsc_0_9_ARUSER(twiddle_h_rsc_0_9_ARUSER),
      .twiddle_h_rsc_0_9_ARREGION(twiddle_h_rsc_0_9_ARREGION),
      .twiddle_h_rsc_0_9_ARQOS(twiddle_h_rsc_0_9_ARQOS),
      .twiddle_h_rsc_0_9_ARPROT(twiddle_h_rsc_0_9_ARPROT),
      .twiddle_h_rsc_0_9_ARCACHE(twiddle_h_rsc_0_9_ARCACHE),
      .twiddle_h_rsc_0_9_ARLOCK(twiddle_h_rsc_0_9_ARLOCK),
      .twiddle_h_rsc_0_9_ARBURST(twiddle_h_rsc_0_9_ARBURST),
      .twiddle_h_rsc_0_9_ARSIZE(twiddle_h_rsc_0_9_ARSIZE),
      .twiddle_h_rsc_0_9_ARLEN(twiddle_h_rsc_0_9_ARLEN),
      .twiddle_h_rsc_0_9_ARADDR(twiddle_h_rsc_0_9_ARADDR),
      .twiddle_h_rsc_0_9_ARID(twiddle_h_rsc_0_9_ARID),
      .twiddle_h_rsc_0_9_BREADY(twiddle_h_rsc_0_9_BREADY),
      .twiddle_h_rsc_0_9_BVALID(twiddle_h_rsc_0_9_BVALID),
      .twiddle_h_rsc_0_9_BUSER(twiddle_h_rsc_0_9_BUSER),
      .twiddle_h_rsc_0_9_BRESP(twiddle_h_rsc_0_9_BRESP),
      .twiddle_h_rsc_0_9_BID(twiddle_h_rsc_0_9_BID),
      .twiddle_h_rsc_0_9_WREADY(twiddle_h_rsc_0_9_WREADY),
      .twiddle_h_rsc_0_9_WVALID(twiddle_h_rsc_0_9_WVALID),
      .twiddle_h_rsc_0_9_WUSER(twiddle_h_rsc_0_9_WUSER),
      .twiddle_h_rsc_0_9_WLAST(twiddle_h_rsc_0_9_WLAST),
      .twiddle_h_rsc_0_9_WSTRB(twiddle_h_rsc_0_9_WSTRB),
      .twiddle_h_rsc_0_9_WDATA(twiddle_h_rsc_0_9_WDATA),
      .twiddle_h_rsc_0_9_AWREADY(twiddle_h_rsc_0_9_AWREADY),
      .twiddle_h_rsc_0_9_AWVALID(twiddle_h_rsc_0_9_AWVALID),
      .twiddle_h_rsc_0_9_AWUSER(twiddle_h_rsc_0_9_AWUSER),
      .twiddle_h_rsc_0_9_AWREGION(twiddle_h_rsc_0_9_AWREGION),
      .twiddle_h_rsc_0_9_AWQOS(twiddle_h_rsc_0_9_AWQOS),
      .twiddle_h_rsc_0_9_AWPROT(twiddle_h_rsc_0_9_AWPROT),
      .twiddle_h_rsc_0_9_AWCACHE(twiddle_h_rsc_0_9_AWCACHE),
      .twiddle_h_rsc_0_9_AWLOCK(twiddle_h_rsc_0_9_AWLOCK),
      .twiddle_h_rsc_0_9_AWBURST(twiddle_h_rsc_0_9_AWBURST),
      .twiddle_h_rsc_0_9_AWSIZE(twiddle_h_rsc_0_9_AWSIZE),
      .twiddle_h_rsc_0_9_AWLEN(twiddle_h_rsc_0_9_AWLEN),
      .twiddle_h_rsc_0_9_AWADDR(twiddle_h_rsc_0_9_AWADDR),
      .twiddle_h_rsc_0_9_AWID(twiddle_h_rsc_0_9_AWID),
      .core_wen(core_wen),
      .twiddle_h_rsc_0_9_i_oswt(reg_twiddle_rsc_0_1_i_oswt_cse),
      .twiddle_h_rsc_0_9_i_wen_comp(twiddle_h_rsc_0_9_i_wen_comp),
      .twiddle_h_rsc_0_9_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_9_i_inst_twiddle_h_rsc_0_9_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_9_i_s_din_mxwt(twiddle_h_rsc_0_9_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_h_rsc_0_10_i peaseNTT_core_twiddle_h_rsc_0_10_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_10_s_tdone(twiddle_h_rsc_0_10_s_tdone),
      .twiddle_h_rsc_0_10_tr_write_done(twiddle_h_rsc_0_10_tr_write_done),
      .twiddle_h_rsc_0_10_RREADY(twiddle_h_rsc_0_10_RREADY),
      .twiddle_h_rsc_0_10_RVALID(twiddle_h_rsc_0_10_RVALID),
      .twiddle_h_rsc_0_10_RUSER(twiddle_h_rsc_0_10_RUSER),
      .twiddle_h_rsc_0_10_RLAST(twiddle_h_rsc_0_10_RLAST),
      .twiddle_h_rsc_0_10_RRESP(twiddle_h_rsc_0_10_RRESP),
      .twiddle_h_rsc_0_10_RDATA(twiddle_h_rsc_0_10_RDATA),
      .twiddle_h_rsc_0_10_RID(twiddle_h_rsc_0_10_RID),
      .twiddle_h_rsc_0_10_ARREADY(twiddle_h_rsc_0_10_ARREADY),
      .twiddle_h_rsc_0_10_ARVALID(twiddle_h_rsc_0_10_ARVALID),
      .twiddle_h_rsc_0_10_ARUSER(twiddle_h_rsc_0_10_ARUSER),
      .twiddle_h_rsc_0_10_ARREGION(twiddle_h_rsc_0_10_ARREGION),
      .twiddle_h_rsc_0_10_ARQOS(twiddle_h_rsc_0_10_ARQOS),
      .twiddle_h_rsc_0_10_ARPROT(twiddle_h_rsc_0_10_ARPROT),
      .twiddle_h_rsc_0_10_ARCACHE(twiddle_h_rsc_0_10_ARCACHE),
      .twiddle_h_rsc_0_10_ARLOCK(twiddle_h_rsc_0_10_ARLOCK),
      .twiddle_h_rsc_0_10_ARBURST(twiddle_h_rsc_0_10_ARBURST),
      .twiddle_h_rsc_0_10_ARSIZE(twiddle_h_rsc_0_10_ARSIZE),
      .twiddle_h_rsc_0_10_ARLEN(twiddle_h_rsc_0_10_ARLEN),
      .twiddle_h_rsc_0_10_ARADDR(twiddle_h_rsc_0_10_ARADDR),
      .twiddle_h_rsc_0_10_ARID(twiddle_h_rsc_0_10_ARID),
      .twiddle_h_rsc_0_10_BREADY(twiddle_h_rsc_0_10_BREADY),
      .twiddle_h_rsc_0_10_BVALID(twiddle_h_rsc_0_10_BVALID),
      .twiddle_h_rsc_0_10_BUSER(twiddle_h_rsc_0_10_BUSER),
      .twiddle_h_rsc_0_10_BRESP(twiddle_h_rsc_0_10_BRESP),
      .twiddle_h_rsc_0_10_BID(twiddle_h_rsc_0_10_BID),
      .twiddle_h_rsc_0_10_WREADY(twiddle_h_rsc_0_10_WREADY),
      .twiddle_h_rsc_0_10_WVALID(twiddle_h_rsc_0_10_WVALID),
      .twiddle_h_rsc_0_10_WUSER(twiddle_h_rsc_0_10_WUSER),
      .twiddle_h_rsc_0_10_WLAST(twiddle_h_rsc_0_10_WLAST),
      .twiddle_h_rsc_0_10_WSTRB(twiddle_h_rsc_0_10_WSTRB),
      .twiddle_h_rsc_0_10_WDATA(twiddle_h_rsc_0_10_WDATA),
      .twiddle_h_rsc_0_10_AWREADY(twiddle_h_rsc_0_10_AWREADY),
      .twiddle_h_rsc_0_10_AWVALID(twiddle_h_rsc_0_10_AWVALID),
      .twiddle_h_rsc_0_10_AWUSER(twiddle_h_rsc_0_10_AWUSER),
      .twiddle_h_rsc_0_10_AWREGION(twiddle_h_rsc_0_10_AWREGION),
      .twiddle_h_rsc_0_10_AWQOS(twiddle_h_rsc_0_10_AWQOS),
      .twiddle_h_rsc_0_10_AWPROT(twiddle_h_rsc_0_10_AWPROT),
      .twiddle_h_rsc_0_10_AWCACHE(twiddle_h_rsc_0_10_AWCACHE),
      .twiddle_h_rsc_0_10_AWLOCK(twiddle_h_rsc_0_10_AWLOCK),
      .twiddle_h_rsc_0_10_AWBURST(twiddle_h_rsc_0_10_AWBURST),
      .twiddle_h_rsc_0_10_AWSIZE(twiddle_h_rsc_0_10_AWSIZE),
      .twiddle_h_rsc_0_10_AWLEN(twiddle_h_rsc_0_10_AWLEN),
      .twiddle_h_rsc_0_10_AWADDR(twiddle_h_rsc_0_10_AWADDR),
      .twiddle_h_rsc_0_10_AWID(twiddle_h_rsc_0_10_AWID),
      .core_wen(core_wen),
      .twiddle_h_rsc_0_10_i_oswt(reg_twiddle_rsc_0_2_i_oswt_cse),
      .twiddle_h_rsc_0_10_i_wen_comp(twiddle_h_rsc_0_10_i_wen_comp),
      .twiddle_h_rsc_0_10_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_10_i_inst_twiddle_h_rsc_0_10_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_10_i_s_din_mxwt(twiddle_h_rsc_0_10_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_h_rsc_0_11_i peaseNTT_core_twiddle_h_rsc_0_11_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_11_s_tdone(twiddle_h_rsc_0_11_s_tdone),
      .twiddle_h_rsc_0_11_tr_write_done(twiddle_h_rsc_0_11_tr_write_done),
      .twiddle_h_rsc_0_11_RREADY(twiddle_h_rsc_0_11_RREADY),
      .twiddle_h_rsc_0_11_RVALID(twiddle_h_rsc_0_11_RVALID),
      .twiddle_h_rsc_0_11_RUSER(twiddle_h_rsc_0_11_RUSER),
      .twiddle_h_rsc_0_11_RLAST(twiddle_h_rsc_0_11_RLAST),
      .twiddle_h_rsc_0_11_RRESP(twiddle_h_rsc_0_11_RRESP),
      .twiddle_h_rsc_0_11_RDATA(twiddle_h_rsc_0_11_RDATA),
      .twiddle_h_rsc_0_11_RID(twiddle_h_rsc_0_11_RID),
      .twiddle_h_rsc_0_11_ARREADY(twiddle_h_rsc_0_11_ARREADY),
      .twiddle_h_rsc_0_11_ARVALID(twiddle_h_rsc_0_11_ARVALID),
      .twiddle_h_rsc_0_11_ARUSER(twiddle_h_rsc_0_11_ARUSER),
      .twiddle_h_rsc_0_11_ARREGION(twiddle_h_rsc_0_11_ARREGION),
      .twiddle_h_rsc_0_11_ARQOS(twiddle_h_rsc_0_11_ARQOS),
      .twiddle_h_rsc_0_11_ARPROT(twiddle_h_rsc_0_11_ARPROT),
      .twiddle_h_rsc_0_11_ARCACHE(twiddle_h_rsc_0_11_ARCACHE),
      .twiddle_h_rsc_0_11_ARLOCK(twiddle_h_rsc_0_11_ARLOCK),
      .twiddle_h_rsc_0_11_ARBURST(twiddle_h_rsc_0_11_ARBURST),
      .twiddle_h_rsc_0_11_ARSIZE(twiddle_h_rsc_0_11_ARSIZE),
      .twiddle_h_rsc_0_11_ARLEN(twiddle_h_rsc_0_11_ARLEN),
      .twiddle_h_rsc_0_11_ARADDR(twiddle_h_rsc_0_11_ARADDR),
      .twiddle_h_rsc_0_11_ARID(twiddle_h_rsc_0_11_ARID),
      .twiddle_h_rsc_0_11_BREADY(twiddle_h_rsc_0_11_BREADY),
      .twiddle_h_rsc_0_11_BVALID(twiddle_h_rsc_0_11_BVALID),
      .twiddle_h_rsc_0_11_BUSER(twiddle_h_rsc_0_11_BUSER),
      .twiddle_h_rsc_0_11_BRESP(twiddle_h_rsc_0_11_BRESP),
      .twiddle_h_rsc_0_11_BID(twiddle_h_rsc_0_11_BID),
      .twiddle_h_rsc_0_11_WREADY(twiddle_h_rsc_0_11_WREADY),
      .twiddle_h_rsc_0_11_WVALID(twiddle_h_rsc_0_11_WVALID),
      .twiddle_h_rsc_0_11_WUSER(twiddle_h_rsc_0_11_WUSER),
      .twiddle_h_rsc_0_11_WLAST(twiddle_h_rsc_0_11_WLAST),
      .twiddle_h_rsc_0_11_WSTRB(twiddle_h_rsc_0_11_WSTRB),
      .twiddle_h_rsc_0_11_WDATA(twiddle_h_rsc_0_11_WDATA),
      .twiddle_h_rsc_0_11_AWREADY(twiddle_h_rsc_0_11_AWREADY),
      .twiddle_h_rsc_0_11_AWVALID(twiddle_h_rsc_0_11_AWVALID),
      .twiddle_h_rsc_0_11_AWUSER(twiddle_h_rsc_0_11_AWUSER),
      .twiddle_h_rsc_0_11_AWREGION(twiddle_h_rsc_0_11_AWREGION),
      .twiddle_h_rsc_0_11_AWQOS(twiddle_h_rsc_0_11_AWQOS),
      .twiddle_h_rsc_0_11_AWPROT(twiddle_h_rsc_0_11_AWPROT),
      .twiddle_h_rsc_0_11_AWCACHE(twiddle_h_rsc_0_11_AWCACHE),
      .twiddle_h_rsc_0_11_AWLOCK(twiddle_h_rsc_0_11_AWLOCK),
      .twiddle_h_rsc_0_11_AWBURST(twiddle_h_rsc_0_11_AWBURST),
      .twiddle_h_rsc_0_11_AWSIZE(twiddle_h_rsc_0_11_AWSIZE),
      .twiddle_h_rsc_0_11_AWLEN(twiddle_h_rsc_0_11_AWLEN),
      .twiddle_h_rsc_0_11_AWADDR(twiddle_h_rsc_0_11_AWADDR),
      .twiddle_h_rsc_0_11_AWID(twiddle_h_rsc_0_11_AWID),
      .core_wen(core_wen),
      .twiddle_h_rsc_0_11_i_oswt(reg_twiddle_rsc_0_3_i_oswt_cse),
      .twiddle_h_rsc_0_11_i_wen_comp(twiddle_h_rsc_0_11_i_wen_comp),
      .twiddle_h_rsc_0_11_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_11_i_inst_twiddle_h_rsc_0_11_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_11_i_s_din_mxwt(twiddle_h_rsc_0_11_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_h_rsc_0_12_i peaseNTT_core_twiddle_h_rsc_0_12_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_12_s_tdone(twiddle_h_rsc_0_12_s_tdone),
      .twiddle_h_rsc_0_12_tr_write_done(twiddle_h_rsc_0_12_tr_write_done),
      .twiddle_h_rsc_0_12_RREADY(twiddle_h_rsc_0_12_RREADY),
      .twiddle_h_rsc_0_12_RVALID(twiddle_h_rsc_0_12_RVALID),
      .twiddle_h_rsc_0_12_RUSER(twiddle_h_rsc_0_12_RUSER),
      .twiddle_h_rsc_0_12_RLAST(twiddle_h_rsc_0_12_RLAST),
      .twiddle_h_rsc_0_12_RRESP(twiddle_h_rsc_0_12_RRESP),
      .twiddle_h_rsc_0_12_RDATA(twiddle_h_rsc_0_12_RDATA),
      .twiddle_h_rsc_0_12_RID(twiddle_h_rsc_0_12_RID),
      .twiddle_h_rsc_0_12_ARREADY(twiddle_h_rsc_0_12_ARREADY),
      .twiddle_h_rsc_0_12_ARVALID(twiddle_h_rsc_0_12_ARVALID),
      .twiddle_h_rsc_0_12_ARUSER(twiddle_h_rsc_0_12_ARUSER),
      .twiddle_h_rsc_0_12_ARREGION(twiddle_h_rsc_0_12_ARREGION),
      .twiddle_h_rsc_0_12_ARQOS(twiddle_h_rsc_0_12_ARQOS),
      .twiddle_h_rsc_0_12_ARPROT(twiddle_h_rsc_0_12_ARPROT),
      .twiddle_h_rsc_0_12_ARCACHE(twiddle_h_rsc_0_12_ARCACHE),
      .twiddle_h_rsc_0_12_ARLOCK(twiddle_h_rsc_0_12_ARLOCK),
      .twiddle_h_rsc_0_12_ARBURST(twiddle_h_rsc_0_12_ARBURST),
      .twiddle_h_rsc_0_12_ARSIZE(twiddle_h_rsc_0_12_ARSIZE),
      .twiddle_h_rsc_0_12_ARLEN(twiddle_h_rsc_0_12_ARLEN),
      .twiddle_h_rsc_0_12_ARADDR(twiddle_h_rsc_0_12_ARADDR),
      .twiddle_h_rsc_0_12_ARID(twiddle_h_rsc_0_12_ARID),
      .twiddle_h_rsc_0_12_BREADY(twiddle_h_rsc_0_12_BREADY),
      .twiddle_h_rsc_0_12_BVALID(twiddle_h_rsc_0_12_BVALID),
      .twiddle_h_rsc_0_12_BUSER(twiddle_h_rsc_0_12_BUSER),
      .twiddle_h_rsc_0_12_BRESP(twiddle_h_rsc_0_12_BRESP),
      .twiddle_h_rsc_0_12_BID(twiddle_h_rsc_0_12_BID),
      .twiddle_h_rsc_0_12_WREADY(twiddle_h_rsc_0_12_WREADY),
      .twiddle_h_rsc_0_12_WVALID(twiddle_h_rsc_0_12_WVALID),
      .twiddle_h_rsc_0_12_WUSER(twiddle_h_rsc_0_12_WUSER),
      .twiddle_h_rsc_0_12_WLAST(twiddle_h_rsc_0_12_WLAST),
      .twiddle_h_rsc_0_12_WSTRB(twiddle_h_rsc_0_12_WSTRB),
      .twiddle_h_rsc_0_12_WDATA(twiddle_h_rsc_0_12_WDATA),
      .twiddle_h_rsc_0_12_AWREADY(twiddle_h_rsc_0_12_AWREADY),
      .twiddle_h_rsc_0_12_AWVALID(twiddle_h_rsc_0_12_AWVALID),
      .twiddle_h_rsc_0_12_AWUSER(twiddle_h_rsc_0_12_AWUSER),
      .twiddle_h_rsc_0_12_AWREGION(twiddle_h_rsc_0_12_AWREGION),
      .twiddle_h_rsc_0_12_AWQOS(twiddle_h_rsc_0_12_AWQOS),
      .twiddle_h_rsc_0_12_AWPROT(twiddle_h_rsc_0_12_AWPROT),
      .twiddle_h_rsc_0_12_AWCACHE(twiddle_h_rsc_0_12_AWCACHE),
      .twiddle_h_rsc_0_12_AWLOCK(twiddle_h_rsc_0_12_AWLOCK),
      .twiddle_h_rsc_0_12_AWBURST(twiddle_h_rsc_0_12_AWBURST),
      .twiddle_h_rsc_0_12_AWSIZE(twiddle_h_rsc_0_12_AWSIZE),
      .twiddle_h_rsc_0_12_AWLEN(twiddle_h_rsc_0_12_AWLEN),
      .twiddle_h_rsc_0_12_AWADDR(twiddle_h_rsc_0_12_AWADDR),
      .twiddle_h_rsc_0_12_AWID(twiddle_h_rsc_0_12_AWID),
      .core_wen(core_wen),
      .twiddle_h_rsc_0_12_i_oswt(reg_twiddle_rsc_0_4_i_oswt_cse),
      .twiddle_h_rsc_0_12_i_wen_comp(twiddle_h_rsc_0_12_i_wen_comp),
      .twiddle_h_rsc_0_12_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_12_i_inst_twiddle_h_rsc_0_12_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_12_i_s_din_mxwt(twiddle_h_rsc_0_12_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_h_rsc_0_13_i peaseNTT_core_twiddle_h_rsc_0_13_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_13_s_tdone(twiddle_h_rsc_0_13_s_tdone),
      .twiddle_h_rsc_0_13_tr_write_done(twiddle_h_rsc_0_13_tr_write_done),
      .twiddle_h_rsc_0_13_RREADY(twiddle_h_rsc_0_13_RREADY),
      .twiddle_h_rsc_0_13_RVALID(twiddle_h_rsc_0_13_RVALID),
      .twiddle_h_rsc_0_13_RUSER(twiddle_h_rsc_0_13_RUSER),
      .twiddle_h_rsc_0_13_RLAST(twiddle_h_rsc_0_13_RLAST),
      .twiddle_h_rsc_0_13_RRESP(twiddle_h_rsc_0_13_RRESP),
      .twiddle_h_rsc_0_13_RDATA(twiddle_h_rsc_0_13_RDATA),
      .twiddle_h_rsc_0_13_RID(twiddle_h_rsc_0_13_RID),
      .twiddle_h_rsc_0_13_ARREADY(twiddle_h_rsc_0_13_ARREADY),
      .twiddle_h_rsc_0_13_ARVALID(twiddle_h_rsc_0_13_ARVALID),
      .twiddle_h_rsc_0_13_ARUSER(twiddle_h_rsc_0_13_ARUSER),
      .twiddle_h_rsc_0_13_ARREGION(twiddle_h_rsc_0_13_ARREGION),
      .twiddle_h_rsc_0_13_ARQOS(twiddle_h_rsc_0_13_ARQOS),
      .twiddle_h_rsc_0_13_ARPROT(twiddle_h_rsc_0_13_ARPROT),
      .twiddle_h_rsc_0_13_ARCACHE(twiddle_h_rsc_0_13_ARCACHE),
      .twiddle_h_rsc_0_13_ARLOCK(twiddle_h_rsc_0_13_ARLOCK),
      .twiddle_h_rsc_0_13_ARBURST(twiddle_h_rsc_0_13_ARBURST),
      .twiddle_h_rsc_0_13_ARSIZE(twiddle_h_rsc_0_13_ARSIZE),
      .twiddle_h_rsc_0_13_ARLEN(twiddle_h_rsc_0_13_ARLEN),
      .twiddle_h_rsc_0_13_ARADDR(twiddle_h_rsc_0_13_ARADDR),
      .twiddle_h_rsc_0_13_ARID(twiddle_h_rsc_0_13_ARID),
      .twiddle_h_rsc_0_13_BREADY(twiddle_h_rsc_0_13_BREADY),
      .twiddle_h_rsc_0_13_BVALID(twiddle_h_rsc_0_13_BVALID),
      .twiddle_h_rsc_0_13_BUSER(twiddle_h_rsc_0_13_BUSER),
      .twiddle_h_rsc_0_13_BRESP(twiddle_h_rsc_0_13_BRESP),
      .twiddle_h_rsc_0_13_BID(twiddle_h_rsc_0_13_BID),
      .twiddle_h_rsc_0_13_WREADY(twiddle_h_rsc_0_13_WREADY),
      .twiddle_h_rsc_0_13_WVALID(twiddle_h_rsc_0_13_WVALID),
      .twiddle_h_rsc_0_13_WUSER(twiddle_h_rsc_0_13_WUSER),
      .twiddle_h_rsc_0_13_WLAST(twiddle_h_rsc_0_13_WLAST),
      .twiddle_h_rsc_0_13_WSTRB(twiddle_h_rsc_0_13_WSTRB),
      .twiddle_h_rsc_0_13_WDATA(twiddle_h_rsc_0_13_WDATA),
      .twiddle_h_rsc_0_13_AWREADY(twiddle_h_rsc_0_13_AWREADY),
      .twiddle_h_rsc_0_13_AWVALID(twiddle_h_rsc_0_13_AWVALID),
      .twiddle_h_rsc_0_13_AWUSER(twiddle_h_rsc_0_13_AWUSER),
      .twiddle_h_rsc_0_13_AWREGION(twiddle_h_rsc_0_13_AWREGION),
      .twiddle_h_rsc_0_13_AWQOS(twiddle_h_rsc_0_13_AWQOS),
      .twiddle_h_rsc_0_13_AWPROT(twiddle_h_rsc_0_13_AWPROT),
      .twiddle_h_rsc_0_13_AWCACHE(twiddle_h_rsc_0_13_AWCACHE),
      .twiddle_h_rsc_0_13_AWLOCK(twiddle_h_rsc_0_13_AWLOCK),
      .twiddle_h_rsc_0_13_AWBURST(twiddle_h_rsc_0_13_AWBURST),
      .twiddle_h_rsc_0_13_AWSIZE(twiddle_h_rsc_0_13_AWSIZE),
      .twiddle_h_rsc_0_13_AWLEN(twiddle_h_rsc_0_13_AWLEN),
      .twiddle_h_rsc_0_13_AWADDR(twiddle_h_rsc_0_13_AWADDR),
      .twiddle_h_rsc_0_13_AWID(twiddle_h_rsc_0_13_AWID),
      .core_wen(core_wen),
      .twiddle_h_rsc_0_13_i_oswt(reg_twiddle_rsc_0_5_i_oswt_cse),
      .twiddle_h_rsc_0_13_i_wen_comp(twiddle_h_rsc_0_13_i_wen_comp),
      .twiddle_h_rsc_0_13_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_13_i_inst_twiddle_h_rsc_0_13_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_13_i_s_din_mxwt(twiddle_h_rsc_0_13_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_h_rsc_0_14_i peaseNTT_core_twiddle_h_rsc_0_14_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_14_s_tdone(twiddle_h_rsc_0_14_s_tdone),
      .twiddle_h_rsc_0_14_tr_write_done(twiddle_h_rsc_0_14_tr_write_done),
      .twiddle_h_rsc_0_14_RREADY(twiddle_h_rsc_0_14_RREADY),
      .twiddle_h_rsc_0_14_RVALID(twiddle_h_rsc_0_14_RVALID),
      .twiddle_h_rsc_0_14_RUSER(twiddle_h_rsc_0_14_RUSER),
      .twiddle_h_rsc_0_14_RLAST(twiddle_h_rsc_0_14_RLAST),
      .twiddle_h_rsc_0_14_RRESP(twiddle_h_rsc_0_14_RRESP),
      .twiddle_h_rsc_0_14_RDATA(twiddle_h_rsc_0_14_RDATA),
      .twiddle_h_rsc_0_14_RID(twiddle_h_rsc_0_14_RID),
      .twiddle_h_rsc_0_14_ARREADY(twiddle_h_rsc_0_14_ARREADY),
      .twiddle_h_rsc_0_14_ARVALID(twiddle_h_rsc_0_14_ARVALID),
      .twiddle_h_rsc_0_14_ARUSER(twiddle_h_rsc_0_14_ARUSER),
      .twiddle_h_rsc_0_14_ARREGION(twiddle_h_rsc_0_14_ARREGION),
      .twiddle_h_rsc_0_14_ARQOS(twiddle_h_rsc_0_14_ARQOS),
      .twiddle_h_rsc_0_14_ARPROT(twiddle_h_rsc_0_14_ARPROT),
      .twiddle_h_rsc_0_14_ARCACHE(twiddle_h_rsc_0_14_ARCACHE),
      .twiddle_h_rsc_0_14_ARLOCK(twiddle_h_rsc_0_14_ARLOCK),
      .twiddle_h_rsc_0_14_ARBURST(twiddle_h_rsc_0_14_ARBURST),
      .twiddle_h_rsc_0_14_ARSIZE(twiddle_h_rsc_0_14_ARSIZE),
      .twiddle_h_rsc_0_14_ARLEN(twiddle_h_rsc_0_14_ARLEN),
      .twiddle_h_rsc_0_14_ARADDR(twiddle_h_rsc_0_14_ARADDR),
      .twiddle_h_rsc_0_14_ARID(twiddle_h_rsc_0_14_ARID),
      .twiddle_h_rsc_0_14_BREADY(twiddle_h_rsc_0_14_BREADY),
      .twiddle_h_rsc_0_14_BVALID(twiddle_h_rsc_0_14_BVALID),
      .twiddle_h_rsc_0_14_BUSER(twiddle_h_rsc_0_14_BUSER),
      .twiddle_h_rsc_0_14_BRESP(twiddle_h_rsc_0_14_BRESP),
      .twiddle_h_rsc_0_14_BID(twiddle_h_rsc_0_14_BID),
      .twiddle_h_rsc_0_14_WREADY(twiddle_h_rsc_0_14_WREADY),
      .twiddle_h_rsc_0_14_WVALID(twiddle_h_rsc_0_14_WVALID),
      .twiddle_h_rsc_0_14_WUSER(twiddle_h_rsc_0_14_WUSER),
      .twiddle_h_rsc_0_14_WLAST(twiddle_h_rsc_0_14_WLAST),
      .twiddle_h_rsc_0_14_WSTRB(twiddle_h_rsc_0_14_WSTRB),
      .twiddle_h_rsc_0_14_WDATA(twiddle_h_rsc_0_14_WDATA),
      .twiddle_h_rsc_0_14_AWREADY(twiddle_h_rsc_0_14_AWREADY),
      .twiddle_h_rsc_0_14_AWVALID(twiddle_h_rsc_0_14_AWVALID),
      .twiddle_h_rsc_0_14_AWUSER(twiddle_h_rsc_0_14_AWUSER),
      .twiddle_h_rsc_0_14_AWREGION(twiddle_h_rsc_0_14_AWREGION),
      .twiddle_h_rsc_0_14_AWQOS(twiddle_h_rsc_0_14_AWQOS),
      .twiddle_h_rsc_0_14_AWPROT(twiddle_h_rsc_0_14_AWPROT),
      .twiddle_h_rsc_0_14_AWCACHE(twiddle_h_rsc_0_14_AWCACHE),
      .twiddle_h_rsc_0_14_AWLOCK(twiddle_h_rsc_0_14_AWLOCK),
      .twiddle_h_rsc_0_14_AWBURST(twiddle_h_rsc_0_14_AWBURST),
      .twiddle_h_rsc_0_14_AWSIZE(twiddle_h_rsc_0_14_AWSIZE),
      .twiddle_h_rsc_0_14_AWLEN(twiddle_h_rsc_0_14_AWLEN),
      .twiddle_h_rsc_0_14_AWADDR(twiddle_h_rsc_0_14_AWADDR),
      .twiddle_h_rsc_0_14_AWID(twiddle_h_rsc_0_14_AWID),
      .core_wen(core_wen),
      .twiddle_h_rsc_0_14_i_oswt(reg_twiddle_rsc_0_6_i_oswt_cse),
      .twiddle_h_rsc_0_14_i_wen_comp(twiddle_h_rsc_0_14_i_wen_comp),
      .twiddle_h_rsc_0_14_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_14_i_inst_twiddle_h_rsc_0_14_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_14_i_s_din_mxwt(twiddle_h_rsc_0_14_i_s_din_mxwt)
    );
  peaseNTT_core_twiddle_h_rsc_0_15_i peaseNTT_core_twiddle_h_rsc_0_15_i_inst (
      .clk(clk),
      .rst(rst),
      .twiddle_h_rsc_0_15_s_tdone(twiddle_h_rsc_0_15_s_tdone),
      .twiddle_h_rsc_0_15_tr_write_done(twiddle_h_rsc_0_15_tr_write_done),
      .twiddle_h_rsc_0_15_RREADY(twiddle_h_rsc_0_15_RREADY),
      .twiddle_h_rsc_0_15_RVALID(twiddle_h_rsc_0_15_RVALID),
      .twiddle_h_rsc_0_15_RUSER(twiddle_h_rsc_0_15_RUSER),
      .twiddle_h_rsc_0_15_RLAST(twiddle_h_rsc_0_15_RLAST),
      .twiddle_h_rsc_0_15_RRESP(twiddle_h_rsc_0_15_RRESP),
      .twiddle_h_rsc_0_15_RDATA(twiddle_h_rsc_0_15_RDATA),
      .twiddle_h_rsc_0_15_RID(twiddle_h_rsc_0_15_RID),
      .twiddle_h_rsc_0_15_ARREADY(twiddle_h_rsc_0_15_ARREADY),
      .twiddle_h_rsc_0_15_ARVALID(twiddle_h_rsc_0_15_ARVALID),
      .twiddle_h_rsc_0_15_ARUSER(twiddle_h_rsc_0_15_ARUSER),
      .twiddle_h_rsc_0_15_ARREGION(twiddle_h_rsc_0_15_ARREGION),
      .twiddle_h_rsc_0_15_ARQOS(twiddle_h_rsc_0_15_ARQOS),
      .twiddle_h_rsc_0_15_ARPROT(twiddle_h_rsc_0_15_ARPROT),
      .twiddle_h_rsc_0_15_ARCACHE(twiddle_h_rsc_0_15_ARCACHE),
      .twiddle_h_rsc_0_15_ARLOCK(twiddle_h_rsc_0_15_ARLOCK),
      .twiddle_h_rsc_0_15_ARBURST(twiddle_h_rsc_0_15_ARBURST),
      .twiddle_h_rsc_0_15_ARSIZE(twiddle_h_rsc_0_15_ARSIZE),
      .twiddle_h_rsc_0_15_ARLEN(twiddle_h_rsc_0_15_ARLEN),
      .twiddle_h_rsc_0_15_ARADDR(twiddle_h_rsc_0_15_ARADDR),
      .twiddle_h_rsc_0_15_ARID(twiddle_h_rsc_0_15_ARID),
      .twiddle_h_rsc_0_15_BREADY(twiddle_h_rsc_0_15_BREADY),
      .twiddle_h_rsc_0_15_BVALID(twiddle_h_rsc_0_15_BVALID),
      .twiddle_h_rsc_0_15_BUSER(twiddle_h_rsc_0_15_BUSER),
      .twiddle_h_rsc_0_15_BRESP(twiddle_h_rsc_0_15_BRESP),
      .twiddle_h_rsc_0_15_BID(twiddle_h_rsc_0_15_BID),
      .twiddle_h_rsc_0_15_WREADY(twiddle_h_rsc_0_15_WREADY),
      .twiddle_h_rsc_0_15_WVALID(twiddle_h_rsc_0_15_WVALID),
      .twiddle_h_rsc_0_15_WUSER(twiddle_h_rsc_0_15_WUSER),
      .twiddle_h_rsc_0_15_WLAST(twiddle_h_rsc_0_15_WLAST),
      .twiddle_h_rsc_0_15_WSTRB(twiddle_h_rsc_0_15_WSTRB),
      .twiddle_h_rsc_0_15_WDATA(twiddle_h_rsc_0_15_WDATA),
      .twiddle_h_rsc_0_15_AWREADY(twiddle_h_rsc_0_15_AWREADY),
      .twiddle_h_rsc_0_15_AWVALID(twiddle_h_rsc_0_15_AWVALID),
      .twiddle_h_rsc_0_15_AWUSER(twiddle_h_rsc_0_15_AWUSER),
      .twiddle_h_rsc_0_15_AWREGION(twiddle_h_rsc_0_15_AWREGION),
      .twiddle_h_rsc_0_15_AWQOS(twiddle_h_rsc_0_15_AWQOS),
      .twiddle_h_rsc_0_15_AWPROT(twiddle_h_rsc_0_15_AWPROT),
      .twiddle_h_rsc_0_15_AWCACHE(twiddle_h_rsc_0_15_AWCACHE),
      .twiddle_h_rsc_0_15_AWLOCK(twiddle_h_rsc_0_15_AWLOCK),
      .twiddle_h_rsc_0_15_AWBURST(twiddle_h_rsc_0_15_AWBURST),
      .twiddle_h_rsc_0_15_AWSIZE(twiddle_h_rsc_0_15_AWSIZE),
      .twiddle_h_rsc_0_15_AWLEN(twiddle_h_rsc_0_15_AWLEN),
      .twiddle_h_rsc_0_15_AWADDR(twiddle_h_rsc_0_15_AWADDR),
      .twiddle_h_rsc_0_15_AWID(twiddle_h_rsc_0_15_AWID),
      .core_wen(core_wen),
      .twiddle_h_rsc_0_15_i_oswt(reg_twiddle_rsc_0_7_i_oswt_cse),
      .twiddle_h_rsc_0_15_i_wen_comp(twiddle_h_rsc_0_15_i_wen_comp),
      .twiddle_h_rsc_0_15_i_s_raddr_core(nl_peaseNTT_core_twiddle_h_rsc_0_15_i_inst_twiddle_h_rsc_0_15_i_s_raddr_core[5:0]),
      .twiddle_h_rsc_0_15_i_s_din_mxwt(twiddle_h_rsc_0_15_i_s_din_mxwt)
    );
  peaseNTT_core_xt_rsc_triosy_1_31_obj peaseNTT_core_xt_rsc_triosy_1_31_obj_inst
      (
      .xt_rsc_triosy_1_31_lz(xt_rsc_triosy_1_31_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_31_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_30_obj peaseNTT_core_xt_rsc_triosy_1_30_obj_inst
      (
      .xt_rsc_triosy_1_30_lz(xt_rsc_triosy_1_30_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_30_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_29_obj peaseNTT_core_xt_rsc_triosy_1_29_obj_inst
      (
      .xt_rsc_triosy_1_29_lz(xt_rsc_triosy_1_29_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_29_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_28_obj peaseNTT_core_xt_rsc_triosy_1_28_obj_inst
      (
      .xt_rsc_triosy_1_28_lz(xt_rsc_triosy_1_28_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_28_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_27_obj peaseNTT_core_xt_rsc_triosy_1_27_obj_inst
      (
      .xt_rsc_triosy_1_27_lz(xt_rsc_triosy_1_27_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_27_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_26_obj peaseNTT_core_xt_rsc_triosy_1_26_obj_inst
      (
      .xt_rsc_triosy_1_26_lz(xt_rsc_triosy_1_26_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_26_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_25_obj peaseNTT_core_xt_rsc_triosy_1_25_obj_inst
      (
      .xt_rsc_triosy_1_25_lz(xt_rsc_triosy_1_25_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_25_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_24_obj peaseNTT_core_xt_rsc_triosy_1_24_obj_inst
      (
      .xt_rsc_triosy_1_24_lz(xt_rsc_triosy_1_24_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_24_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_23_obj peaseNTT_core_xt_rsc_triosy_1_23_obj_inst
      (
      .xt_rsc_triosy_1_23_lz(xt_rsc_triosy_1_23_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_23_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_22_obj peaseNTT_core_xt_rsc_triosy_1_22_obj_inst
      (
      .xt_rsc_triosy_1_22_lz(xt_rsc_triosy_1_22_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_22_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_21_obj peaseNTT_core_xt_rsc_triosy_1_21_obj_inst
      (
      .xt_rsc_triosy_1_21_lz(xt_rsc_triosy_1_21_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_21_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_20_obj peaseNTT_core_xt_rsc_triosy_1_20_obj_inst
      (
      .xt_rsc_triosy_1_20_lz(xt_rsc_triosy_1_20_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_20_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_19_obj peaseNTT_core_xt_rsc_triosy_1_19_obj_inst
      (
      .xt_rsc_triosy_1_19_lz(xt_rsc_triosy_1_19_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_19_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_18_obj peaseNTT_core_xt_rsc_triosy_1_18_obj_inst
      (
      .xt_rsc_triosy_1_18_lz(xt_rsc_triosy_1_18_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_18_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_17_obj peaseNTT_core_xt_rsc_triosy_1_17_obj_inst
      (
      .xt_rsc_triosy_1_17_lz(xt_rsc_triosy_1_17_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_17_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_16_obj peaseNTT_core_xt_rsc_triosy_1_16_obj_inst
      (
      .xt_rsc_triosy_1_16_lz(xt_rsc_triosy_1_16_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_16_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_15_obj peaseNTT_core_xt_rsc_triosy_1_15_obj_inst
      (
      .xt_rsc_triosy_1_15_lz(xt_rsc_triosy_1_15_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_15_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_14_obj peaseNTT_core_xt_rsc_triosy_1_14_obj_inst
      (
      .xt_rsc_triosy_1_14_lz(xt_rsc_triosy_1_14_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_14_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_13_obj peaseNTT_core_xt_rsc_triosy_1_13_obj_inst
      (
      .xt_rsc_triosy_1_13_lz(xt_rsc_triosy_1_13_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_13_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_12_obj peaseNTT_core_xt_rsc_triosy_1_12_obj_inst
      (
      .xt_rsc_triosy_1_12_lz(xt_rsc_triosy_1_12_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_12_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_11_obj peaseNTT_core_xt_rsc_triosy_1_11_obj_inst
      (
      .xt_rsc_triosy_1_11_lz(xt_rsc_triosy_1_11_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_11_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_10_obj peaseNTT_core_xt_rsc_triosy_1_10_obj_inst
      (
      .xt_rsc_triosy_1_10_lz(xt_rsc_triosy_1_10_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_10_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_9_obj peaseNTT_core_xt_rsc_triosy_1_9_obj_inst (
      .xt_rsc_triosy_1_9_lz(xt_rsc_triosy_1_9_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_9_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_8_obj peaseNTT_core_xt_rsc_triosy_1_8_obj_inst (
      .xt_rsc_triosy_1_8_lz(xt_rsc_triosy_1_8_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_8_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_7_obj peaseNTT_core_xt_rsc_triosy_1_7_obj_inst (
      .xt_rsc_triosy_1_7_lz(xt_rsc_triosy_1_7_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_7_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_6_obj peaseNTT_core_xt_rsc_triosy_1_6_obj_inst (
      .xt_rsc_triosy_1_6_lz(xt_rsc_triosy_1_6_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_6_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_5_obj peaseNTT_core_xt_rsc_triosy_1_5_obj_inst (
      .xt_rsc_triosy_1_5_lz(xt_rsc_triosy_1_5_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_5_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_4_obj peaseNTT_core_xt_rsc_triosy_1_4_obj_inst (
      .xt_rsc_triosy_1_4_lz(xt_rsc_triosy_1_4_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_4_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_3_obj peaseNTT_core_xt_rsc_triosy_1_3_obj_inst (
      .xt_rsc_triosy_1_3_lz(xt_rsc_triosy_1_3_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_3_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_2_obj peaseNTT_core_xt_rsc_triosy_1_2_obj_inst (
      .xt_rsc_triosy_1_2_lz(xt_rsc_triosy_1_2_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_2_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_1_obj peaseNTT_core_xt_rsc_triosy_1_1_obj_inst (
      .xt_rsc_triosy_1_1_lz(xt_rsc_triosy_1_1_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_1_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_1_0_obj peaseNTT_core_xt_rsc_triosy_1_0_obj_inst (
      .xt_rsc_triosy_1_0_lz(xt_rsc_triosy_1_0_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_1_0_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_31_obj peaseNTT_core_xt_rsc_triosy_0_31_obj_inst
      (
      .xt_rsc_triosy_0_31_lz(xt_rsc_triosy_0_31_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_31_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_30_obj peaseNTT_core_xt_rsc_triosy_0_30_obj_inst
      (
      .xt_rsc_triosy_0_30_lz(xt_rsc_triosy_0_30_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_30_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_29_obj peaseNTT_core_xt_rsc_triosy_0_29_obj_inst
      (
      .xt_rsc_triosy_0_29_lz(xt_rsc_triosy_0_29_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_29_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_28_obj peaseNTT_core_xt_rsc_triosy_0_28_obj_inst
      (
      .xt_rsc_triosy_0_28_lz(xt_rsc_triosy_0_28_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_28_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_27_obj peaseNTT_core_xt_rsc_triosy_0_27_obj_inst
      (
      .xt_rsc_triosy_0_27_lz(xt_rsc_triosy_0_27_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_27_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_26_obj peaseNTT_core_xt_rsc_triosy_0_26_obj_inst
      (
      .xt_rsc_triosy_0_26_lz(xt_rsc_triosy_0_26_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_26_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_25_obj peaseNTT_core_xt_rsc_triosy_0_25_obj_inst
      (
      .xt_rsc_triosy_0_25_lz(xt_rsc_triosy_0_25_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_25_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_24_obj peaseNTT_core_xt_rsc_triosy_0_24_obj_inst
      (
      .xt_rsc_triosy_0_24_lz(xt_rsc_triosy_0_24_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_24_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_23_obj peaseNTT_core_xt_rsc_triosy_0_23_obj_inst
      (
      .xt_rsc_triosy_0_23_lz(xt_rsc_triosy_0_23_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_23_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_22_obj peaseNTT_core_xt_rsc_triosy_0_22_obj_inst
      (
      .xt_rsc_triosy_0_22_lz(xt_rsc_triosy_0_22_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_22_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_21_obj peaseNTT_core_xt_rsc_triosy_0_21_obj_inst
      (
      .xt_rsc_triosy_0_21_lz(xt_rsc_triosy_0_21_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_21_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_20_obj peaseNTT_core_xt_rsc_triosy_0_20_obj_inst
      (
      .xt_rsc_triosy_0_20_lz(xt_rsc_triosy_0_20_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_20_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_19_obj peaseNTT_core_xt_rsc_triosy_0_19_obj_inst
      (
      .xt_rsc_triosy_0_19_lz(xt_rsc_triosy_0_19_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_19_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_18_obj peaseNTT_core_xt_rsc_triosy_0_18_obj_inst
      (
      .xt_rsc_triosy_0_18_lz(xt_rsc_triosy_0_18_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_18_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_17_obj peaseNTT_core_xt_rsc_triosy_0_17_obj_inst
      (
      .xt_rsc_triosy_0_17_lz(xt_rsc_triosy_0_17_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_17_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_16_obj peaseNTT_core_xt_rsc_triosy_0_16_obj_inst
      (
      .xt_rsc_triosy_0_16_lz(xt_rsc_triosy_0_16_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_16_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_15_obj peaseNTT_core_xt_rsc_triosy_0_15_obj_inst
      (
      .xt_rsc_triosy_0_15_lz(xt_rsc_triosy_0_15_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_15_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_14_obj peaseNTT_core_xt_rsc_triosy_0_14_obj_inst
      (
      .xt_rsc_triosy_0_14_lz(xt_rsc_triosy_0_14_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_14_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_13_obj peaseNTT_core_xt_rsc_triosy_0_13_obj_inst
      (
      .xt_rsc_triosy_0_13_lz(xt_rsc_triosy_0_13_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_13_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_12_obj peaseNTT_core_xt_rsc_triosy_0_12_obj_inst
      (
      .xt_rsc_triosy_0_12_lz(xt_rsc_triosy_0_12_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_12_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_11_obj peaseNTT_core_xt_rsc_triosy_0_11_obj_inst
      (
      .xt_rsc_triosy_0_11_lz(xt_rsc_triosy_0_11_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_11_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_10_obj peaseNTT_core_xt_rsc_triosy_0_10_obj_inst
      (
      .xt_rsc_triosy_0_10_lz(xt_rsc_triosy_0_10_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_10_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_9_obj peaseNTT_core_xt_rsc_triosy_0_9_obj_inst (
      .xt_rsc_triosy_0_9_lz(xt_rsc_triosy_0_9_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_9_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_8_obj peaseNTT_core_xt_rsc_triosy_0_8_obj_inst (
      .xt_rsc_triosy_0_8_lz(xt_rsc_triosy_0_8_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_8_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_7_obj peaseNTT_core_xt_rsc_triosy_0_7_obj_inst (
      .xt_rsc_triosy_0_7_lz(xt_rsc_triosy_0_7_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_7_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_6_obj peaseNTT_core_xt_rsc_triosy_0_6_obj_inst (
      .xt_rsc_triosy_0_6_lz(xt_rsc_triosy_0_6_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_6_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_5_obj peaseNTT_core_xt_rsc_triosy_0_5_obj_inst (
      .xt_rsc_triosy_0_5_lz(xt_rsc_triosy_0_5_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_5_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_4_obj peaseNTT_core_xt_rsc_triosy_0_4_obj_inst (
      .xt_rsc_triosy_0_4_lz(xt_rsc_triosy_0_4_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_4_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_3_obj peaseNTT_core_xt_rsc_triosy_0_3_obj_inst (
      .xt_rsc_triosy_0_3_lz(xt_rsc_triosy_0_3_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_3_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_2_obj peaseNTT_core_xt_rsc_triosy_0_2_obj_inst (
      .xt_rsc_triosy_0_2_lz(xt_rsc_triosy_0_2_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_2_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_1_obj peaseNTT_core_xt_rsc_triosy_0_1_obj_inst (
      .xt_rsc_triosy_0_1_lz(xt_rsc_triosy_0_1_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_1_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_xt_rsc_triosy_0_0_obj peaseNTT_core_xt_rsc_triosy_0_0_obj_inst (
      .xt_rsc_triosy_0_0_lz(xt_rsc_triosy_0_0_lz),
      .core_wten(core_wten),
      .xt_rsc_triosy_0_0_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_p_rsc_triosy_obj peaseNTT_core_p_rsc_triosy_obj_inst (
      .p_rsc_triosy_lz(p_rsc_triosy_lz),
      .core_wten(core_wten),
      .p_rsc_triosy_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_r_rsc_triosy_obj peaseNTT_core_r_rsc_triosy_obj_inst (
      .r_rsc_triosy_lz(r_rsc_triosy_lz),
      .core_wten(core_wten),
      .r_rsc_triosy_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_15_obj peaseNTT_core_twiddle_rsc_triosy_0_15_obj_inst
      (
      .twiddle_rsc_triosy_0_15_lz(twiddle_rsc_triosy_0_15_lz),
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_15_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_14_obj peaseNTT_core_twiddle_rsc_triosy_0_14_obj_inst
      (
      .twiddle_rsc_triosy_0_14_lz(twiddle_rsc_triosy_0_14_lz),
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_14_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_13_obj peaseNTT_core_twiddle_rsc_triosy_0_13_obj_inst
      (
      .twiddle_rsc_triosy_0_13_lz(twiddle_rsc_triosy_0_13_lz),
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_13_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_12_obj peaseNTT_core_twiddle_rsc_triosy_0_12_obj_inst
      (
      .twiddle_rsc_triosy_0_12_lz(twiddle_rsc_triosy_0_12_lz),
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_12_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_11_obj peaseNTT_core_twiddle_rsc_triosy_0_11_obj_inst
      (
      .twiddle_rsc_triosy_0_11_lz(twiddle_rsc_triosy_0_11_lz),
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_11_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_10_obj peaseNTT_core_twiddle_rsc_triosy_0_10_obj_inst
      (
      .twiddle_rsc_triosy_0_10_lz(twiddle_rsc_triosy_0_10_lz),
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_10_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_9_obj peaseNTT_core_twiddle_rsc_triosy_0_9_obj_inst
      (
      .twiddle_rsc_triosy_0_9_lz(twiddle_rsc_triosy_0_9_lz),
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_9_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_8_obj peaseNTT_core_twiddle_rsc_triosy_0_8_obj_inst
      (
      .twiddle_rsc_triosy_0_8_lz(twiddle_rsc_triosy_0_8_lz),
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_8_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_7_obj peaseNTT_core_twiddle_rsc_triosy_0_7_obj_inst
      (
      .twiddle_rsc_triosy_0_7_lz(twiddle_rsc_triosy_0_7_lz),
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_7_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_6_obj peaseNTT_core_twiddle_rsc_triosy_0_6_obj_inst
      (
      .twiddle_rsc_triosy_0_6_lz(twiddle_rsc_triosy_0_6_lz),
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_6_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_5_obj peaseNTT_core_twiddle_rsc_triosy_0_5_obj_inst
      (
      .twiddle_rsc_triosy_0_5_lz(twiddle_rsc_triosy_0_5_lz),
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_5_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_4_obj peaseNTT_core_twiddle_rsc_triosy_0_4_obj_inst
      (
      .twiddle_rsc_triosy_0_4_lz(twiddle_rsc_triosy_0_4_lz),
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_4_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_3_obj peaseNTT_core_twiddle_rsc_triosy_0_3_obj_inst
      (
      .twiddle_rsc_triosy_0_3_lz(twiddle_rsc_triosy_0_3_lz),
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_3_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_2_obj peaseNTT_core_twiddle_rsc_triosy_0_2_obj_inst
      (
      .twiddle_rsc_triosy_0_2_lz(twiddle_rsc_triosy_0_2_lz),
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_2_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_1_obj peaseNTT_core_twiddle_rsc_triosy_0_1_obj_inst
      (
      .twiddle_rsc_triosy_0_1_lz(twiddle_rsc_triosy_0_1_lz),
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_1_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_rsc_triosy_0_0_obj peaseNTT_core_twiddle_rsc_triosy_0_0_obj_inst
      (
      .twiddle_rsc_triosy_0_0_lz(twiddle_rsc_triosy_0_0_lz),
      .core_wten(core_wten),
      .twiddle_rsc_triosy_0_0_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_15_obj peaseNTT_core_twiddle_h_rsc_triosy_0_15_obj_inst
      (
      .twiddle_h_rsc_triosy_0_15_lz(twiddle_h_rsc_triosy_0_15_lz),
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_15_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_14_obj peaseNTT_core_twiddle_h_rsc_triosy_0_14_obj_inst
      (
      .twiddle_h_rsc_triosy_0_14_lz(twiddle_h_rsc_triosy_0_14_lz),
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_14_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_13_obj peaseNTT_core_twiddle_h_rsc_triosy_0_13_obj_inst
      (
      .twiddle_h_rsc_triosy_0_13_lz(twiddle_h_rsc_triosy_0_13_lz),
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_13_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_12_obj peaseNTT_core_twiddle_h_rsc_triosy_0_12_obj_inst
      (
      .twiddle_h_rsc_triosy_0_12_lz(twiddle_h_rsc_triosy_0_12_lz),
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_12_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_11_obj peaseNTT_core_twiddle_h_rsc_triosy_0_11_obj_inst
      (
      .twiddle_h_rsc_triosy_0_11_lz(twiddle_h_rsc_triosy_0_11_lz),
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_11_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_10_obj peaseNTT_core_twiddle_h_rsc_triosy_0_10_obj_inst
      (
      .twiddle_h_rsc_triosy_0_10_lz(twiddle_h_rsc_triosy_0_10_lz),
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_10_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_9_obj peaseNTT_core_twiddle_h_rsc_triosy_0_9_obj_inst
      (
      .twiddle_h_rsc_triosy_0_9_lz(twiddle_h_rsc_triosy_0_9_lz),
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_9_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_8_obj peaseNTT_core_twiddle_h_rsc_triosy_0_8_obj_inst
      (
      .twiddle_h_rsc_triosy_0_8_lz(twiddle_h_rsc_triosy_0_8_lz),
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_8_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_7_obj peaseNTT_core_twiddle_h_rsc_triosy_0_7_obj_inst
      (
      .twiddle_h_rsc_triosy_0_7_lz(twiddle_h_rsc_triosy_0_7_lz),
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_7_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_6_obj peaseNTT_core_twiddle_h_rsc_triosy_0_6_obj_inst
      (
      .twiddle_h_rsc_triosy_0_6_lz(twiddle_h_rsc_triosy_0_6_lz),
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_6_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_5_obj peaseNTT_core_twiddle_h_rsc_triosy_0_5_obj_inst
      (
      .twiddle_h_rsc_triosy_0_5_lz(twiddle_h_rsc_triosy_0_5_lz),
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_5_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_4_obj peaseNTT_core_twiddle_h_rsc_triosy_0_4_obj_inst
      (
      .twiddle_h_rsc_triosy_0_4_lz(twiddle_h_rsc_triosy_0_4_lz),
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_4_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_3_obj peaseNTT_core_twiddle_h_rsc_triosy_0_3_obj_inst
      (
      .twiddle_h_rsc_triosy_0_3_lz(twiddle_h_rsc_triosy_0_3_lz),
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_3_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_2_obj peaseNTT_core_twiddle_h_rsc_triosy_0_2_obj_inst
      (
      .twiddle_h_rsc_triosy_0_2_lz(twiddle_h_rsc_triosy_0_2_lz),
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_2_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_1_obj peaseNTT_core_twiddle_h_rsc_triosy_0_1_obj_inst
      (
      .twiddle_h_rsc_triosy_0_1_lz(twiddle_h_rsc_triosy_0_1_lz),
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_1_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_twiddle_h_rsc_triosy_0_0_obj peaseNTT_core_twiddle_h_rsc_triosy_0_0_obj_inst
      (
      .twiddle_h_rsc_triosy_0_0_lz(twiddle_h_rsc_triosy_0_0_lz),
      .core_wten(core_wten),
      .twiddle_h_rsc_triosy_0_0_obj_iswt0(reg_xt_rsc_triosy_1_31_obj_iswt0_cse)
    );
  peaseNTT_core_staller peaseNTT_core_staller_inst (
      .clk(clk),
      .rst(rst),
      .core_wen(core_wen),
      .core_wten(core_wten),
      .xt_rsc_0_0_i_wen_comp(xt_rsc_0_0_i_wen_comp),
      .xt_rsc_0_0_i_wen_comp_1(xt_rsc_0_0_i_wen_comp_1),
      .xt_rsc_0_1_i_wen_comp(xt_rsc_0_1_i_wen_comp),
      .xt_rsc_0_1_i_wen_comp_1(xt_rsc_0_1_i_wen_comp_1),
      .xt_rsc_0_2_i_wen_comp(xt_rsc_0_2_i_wen_comp),
      .xt_rsc_0_2_i_wen_comp_1(xt_rsc_0_2_i_wen_comp_1),
      .xt_rsc_0_3_i_wen_comp(xt_rsc_0_3_i_wen_comp),
      .xt_rsc_0_3_i_wen_comp_1(xt_rsc_0_3_i_wen_comp_1),
      .xt_rsc_0_4_i_wen_comp(xt_rsc_0_4_i_wen_comp),
      .xt_rsc_0_4_i_wen_comp_1(xt_rsc_0_4_i_wen_comp_1),
      .xt_rsc_0_5_i_wen_comp(xt_rsc_0_5_i_wen_comp),
      .xt_rsc_0_5_i_wen_comp_1(xt_rsc_0_5_i_wen_comp_1),
      .xt_rsc_0_6_i_wen_comp(xt_rsc_0_6_i_wen_comp),
      .xt_rsc_0_6_i_wen_comp_1(xt_rsc_0_6_i_wen_comp_1),
      .xt_rsc_0_7_i_wen_comp(xt_rsc_0_7_i_wen_comp),
      .xt_rsc_0_7_i_wen_comp_1(xt_rsc_0_7_i_wen_comp_1),
      .xt_rsc_0_8_i_wen_comp(xt_rsc_0_8_i_wen_comp),
      .xt_rsc_0_8_i_wen_comp_1(xt_rsc_0_8_i_wen_comp_1),
      .xt_rsc_0_9_i_wen_comp(xt_rsc_0_9_i_wen_comp),
      .xt_rsc_0_9_i_wen_comp_1(xt_rsc_0_9_i_wen_comp_1),
      .xt_rsc_0_10_i_wen_comp(xt_rsc_0_10_i_wen_comp),
      .xt_rsc_0_10_i_wen_comp_1(xt_rsc_0_10_i_wen_comp_1),
      .xt_rsc_0_11_i_wen_comp(xt_rsc_0_11_i_wen_comp),
      .xt_rsc_0_11_i_wen_comp_1(xt_rsc_0_11_i_wen_comp_1),
      .xt_rsc_0_12_i_wen_comp(xt_rsc_0_12_i_wen_comp),
      .xt_rsc_0_12_i_wen_comp_1(xt_rsc_0_12_i_wen_comp_1),
      .xt_rsc_0_13_i_wen_comp(xt_rsc_0_13_i_wen_comp),
      .xt_rsc_0_13_i_wen_comp_1(xt_rsc_0_13_i_wen_comp_1),
      .xt_rsc_0_14_i_wen_comp(xt_rsc_0_14_i_wen_comp),
      .xt_rsc_0_14_i_wen_comp_1(xt_rsc_0_14_i_wen_comp_1),
      .xt_rsc_0_15_i_wen_comp(xt_rsc_0_15_i_wen_comp),
      .xt_rsc_0_15_i_wen_comp_1(xt_rsc_0_15_i_wen_comp_1),
      .xt_rsc_0_16_i_wen_comp(xt_rsc_0_16_i_wen_comp),
      .xt_rsc_0_16_i_wen_comp_1(xt_rsc_0_16_i_wen_comp_1),
      .xt_rsc_0_17_i_wen_comp(xt_rsc_0_17_i_wen_comp),
      .xt_rsc_0_17_i_wen_comp_1(xt_rsc_0_17_i_wen_comp_1),
      .xt_rsc_0_18_i_wen_comp(xt_rsc_0_18_i_wen_comp),
      .xt_rsc_0_18_i_wen_comp_1(xt_rsc_0_18_i_wen_comp_1),
      .xt_rsc_0_19_i_wen_comp(xt_rsc_0_19_i_wen_comp),
      .xt_rsc_0_19_i_wen_comp_1(xt_rsc_0_19_i_wen_comp_1),
      .xt_rsc_0_20_i_wen_comp(xt_rsc_0_20_i_wen_comp),
      .xt_rsc_0_20_i_wen_comp_1(xt_rsc_0_20_i_wen_comp_1),
      .xt_rsc_0_21_i_wen_comp(xt_rsc_0_21_i_wen_comp),
      .xt_rsc_0_21_i_wen_comp_1(xt_rsc_0_21_i_wen_comp_1),
      .xt_rsc_0_22_i_wen_comp(xt_rsc_0_22_i_wen_comp),
      .xt_rsc_0_22_i_wen_comp_1(xt_rsc_0_22_i_wen_comp_1),
      .xt_rsc_0_23_i_wen_comp(xt_rsc_0_23_i_wen_comp),
      .xt_rsc_0_23_i_wen_comp_1(xt_rsc_0_23_i_wen_comp_1),
      .xt_rsc_0_24_i_wen_comp(xt_rsc_0_24_i_wen_comp),
      .xt_rsc_0_24_i_wen_comp_1(xt_rsc_0_24_i_wen_comp_1),
      .xt_rsc_0_25_i_wen_comp(xt_rsc_0_25_i_wen_comp),
      .xt_rsc_0_25_i_wen_comp_1(xt_rsc_0_25_i_wen_comp_1),
      .xt_rsc_0_26_i_wen_comp(xt_rsc_0_26_i_wen_comp),
      .xt_rsc_0_26_i_wen_comp_1(xt_rsc_0_26_i_wen_comp_1),
      .xt_rsc_0_27_i_wen_comp(xt_rsc_0_27_i_wen_comp),
      .xt_rsc_0_27_i_wen_comp_1(xt_rsc_0_27_i_wen_comp_1),
      .xt_rsc_0_28_i_wen_comp(xt_rsc_0_28_i_wen_comp),
      .xt_rsc_0_28_i_wen_comp_1(xt_rsc_0_28_i_wen_comp_1),
      .xt_rsc_0_29_i_wen_comp(xt_rsc_0_29_i_wen_comp),
      .xt_rsc_0_29_i_wen_comp_1(xt_rsc_0_29_i_wen_comp_1),
      .xt_rsc_0_30_i_wen_comp(xt_rsc_0_30_i_wen_comp),
      .xt_rsc_0_30_i_wen_comp_1(xt_rsc_0_30_i_wen_comp_1),
      .xt_rsc_0_31_i_wen_comp(xt_rsc_0_31_i_wen_comp),
      .xt_rsc_0_31_i_wen_comp_1(xt_rsc_0_31_i_wen_comp_1),
      .xt_rsc_1_0_i_wen_comp(xt_rsc_1_0_i_wen_comp),
      .xt_rsc_1_0_i_wen_comp_1(xt_rsc_1_0_i_wen_comp_1),
      .xt_rsc_1_1_i_wen_comp(xt_rsc_1_1_i_wen_comp),
      .xt_rsc_1_1_i_wen_comp_1(xt_rsc_1_1_i_wen_comp_1),
      .xt_rsc_1_2_i_wen_comp(xt_rsc_1_2_i_wen_comp),
      .xt_rsc_1_2_i_wen_comp_1(xt_rsc_1_2_i_wen_comp_1),
      .xt_rsc_1_3_i_wen_comp(xt_rsc_1_3_i_wen_comp),
      .xt_rsc_1_3_i_wen_comp_1(xt_rsc_1_3_i_wen_comp_1),
      .xt_rsc_1_4_i_wen_comp(xt_rsc_1_4_i_wen_comp),
      .xt_rsc_1_4_i_wen_comp_1(xt_rsc_1_4_i_wen_comp_1),
      .xt_rsc_1_5_i_wen_comp(xt_rsc_1_5_i_wen_comp),
      .xt_rsc_1_5_i_wen_comp_1(xt_rsc_1_5_i_wen_comp_1),
      .xt_rsc_1_6_i_wen_comp(xt_rsc_1_6_i_wen_comp),
      .xt_rsc_1_6_i_wen_comp_1(xt_rsc_1_6_i_wen_comp_1),
      .xt_rsc_1_7_i_wen_comp(xt_rsc_1_7_i_wen_comp),
      .xt_rsc_1_7_i_wen_comp_1(xt_rsc_1_7_i_wen_comp_1),
      .xt_rsc_1_8_i_wen_comp(xt_rsc_1_8_i_wen_comp),
      .xt_rsc_1_8_i_wen_comp_1(xt_rsc_1_8_i_wen_comp_1),
      .xt_rsc_1_9_i_wen_comp(xt_rsc_1_9_i_wen_comp),
      .xt_rsc_1_9_i_wen_comp_1(xt_rsc_1_9_i_wen_comp_1),
      .xt_rsc_1_10_i_wen_comp(xt_rsc_1_10_i_wen_comp),
      .xt_rsc_1_10_i_wen_comp_1(xt_rsc_1_10_i_wen_comp_1),
      .xt_rsc_1_11_i_wen_comp(xt_rsc_1_11_i_wen_comp),
      .xt_rsc_1_11_i_wen_comp_1(xt_rsc_1_11_i_wen_comp_1),
      .xt_rsc_1_12_i_wen_comp(xt_rsc_1_12_i_wen_comp),
      .xt_rsc_1_12_i_wen_comp_1(xt_rsc_1_12_i_wen_comp_1),
      .xt_rsc_1_13_i_wen_comp(xt_rsc_1_13_i_wen_comp),
      .xt_rsc_1_13_i_wen_comp_1(xt_rsc_1_13_i_wen_comp_1),
      .xt_rsc_1_14_i_wen_comp(xt_rsc_1_14_i_wen_comp),
      .xt_rsc_1_14_i_wen_comp_1(xt_rsc_1_14_i_wen_comp_1),
      .xt_rsc_1_15_i_wen_comp(xt_rsc_1_15_i_wen_comp),
      .xt_rsc_1_15_i_wen_comp_1(xt_rsc_1_15_i_wen_comp_1),
      .xt_rsc_1_16_i_wen_comp(xt_rsc_1_16_i_wen_comp),
      .xt_rsc_1_16_i_wen_comp_1(xt_rsc_1_16_i_wen_comp_1),
      .xt_rsc_1_17_i_wen_comp(xt_rsc_1_17_i_wen_comp),
      .xt_rsc_1_17_i_wen_comp_1(xt_rsc_1_17_i_wen_comp_1),
      .xt_rsc_1_18_i_wen_comp(xt_rsc_1_18_i_wen_comp),
      .xt_rsc_1_18_i_wen_comp_1(xt_rsc_1_18_i_wen_comp_1),
      .xt_rsc_1_19_i_wen_comp(xt_rsc_1_19_i_wen_comp),
      .xt_rsc_1_19_i_wen_comp_1(xt_rsc_1_19_i_wen_comp_1),
      .xt_rsc_1_20_i_wen_comp(xt_rsc_1_20_i_wen_comp),
      .xt_rsc_1_20_i_wen_comp_1(xt_rsc_1_20_i_wen_comp_1),
      .xt_rsc_1_21_i_wen_comp(xt_rsc_1_21_i_wen_comp),
      .xt_rsc_1_21_i_wen_comp_1(xt_rsc_1_21_i_wen_comp_1),
      .xt_rsc_1_22_i_wen_comp(xt_rsc_1_22_i_wen_comp),
      .xt_rsc_1_22_i_wen_comp_1(xt_rsc_1_22_i_wen_comp_1),
      .xt_rsc_1_23_i_wen_comp(xt_rsc_1_23_i_wen_comp),
      .xt_rsc_1_23_i_wen_comp_1(xt_rsc_1_23_i_wen_comp_1),
      .xt_rsc_1_24_i_wen_comp(xt_rsc_1_24_i_wen_comp),
      .xt_rsc_1_24_i_wen_comp_1(xt_rsc_1_24_i_wen_comp_1),
      .xt_rsc_1_25_i_wen_comp(xt_rsc_1_25_i_wen_comp),
      .xt_rsc_1_25_i_wen_comp_1(xt_rsc_1_25_i_wen_comp_1),
      .xt_rsc_1_26_i_wen_comp(xt_rsc_1_26_i_wen_comp),
      .xt_rsc_1_26_i_wen_comp_1(xt_rsc_1_26_i_wen_comp_1),
      .xt_rsc_1_27_i_wen_comp(xt_rsc_1_27_i_wen_comp),
      .xt_rsc_1_27_i_wen_comp_1(xt_rsc_1_27_i_wen_comp_1),
      .xt_rsc_1_28_i_wen_comp(xt_rsc_1_28_i_wen_comp),
      .xt_rsc_1_28_i_wen_comp_1(xt_rsc_1_28_i_wen_comp_1),
      .xt_rsc_1_29_i_wen_comp(xt_rsc_1_29_i_wen_comp),
      .xt_rsc_1_29_i_wen_comp_1(xt_rsc_1_29_i_wen_comp_1),
      .xt_rsc_1_30_i_wen_comp(xt_rsc_1_30_i_wen_comp),
      .xt_rsc_1_30_i_wen_comp_1(xt_rsc_1_30_i_wen_comp_1),
      .xt_rsc_1_31_i_wen_comp(xt_rsc_1_31_i_wen_comp),
      .xt_rsc_1_31_i_wen_comp_1(xt_rsc_1_31_i_wen_comp_1),
      .twiddle_rsc_0_0_i_wen_comp(twiddle_rsc_0_0_i_wen_comp),
      .twiddle_rsc_0_1_i_wen_comp(twiddle_rsc_0_1_i_wen_comp),
      .twiddle_rsc_0_2_i_wen_comp(twiddle_rsc_0_2_i_wen_comp),
      .twiddle_rsc_0_3_i_wen_comp(twiddle_rsc_0_3_i_wen_comp),
      .twiddle_rsc_0_4_i_wen_comp(twiddle_rsc_0_4_i_wen_comp),
      .twiddle_rsc_0_5_i_wen_comp(twiddle_rsc_0_5_i_wen_comp),
      .twiddle_rsc_0_6_i_wen_comp(twiddle_rsc_0_6_i_wen_comp),
      .twiddle_rsc_0_7_i_wen_comp(twiddle_rsc_0_7_i_wen_comp),
      .twiddle_rsc_0_8_i_wen_comp(twiddle_rsc_0_8_i_wen_comp),
      .twiddle_rsc_0_9_i_wen_comp(twiddle_rsc_0_9_i_wen_comp),
      .twiddle_rsc_0_10_i_wen_comp(twiddle_rsc_0_10_i_wen_comp),
      .twiddle_rsc_0_11_i_wen_comp(twiddle_rsc_0_11_i_wen_comp),
      .twiddle_rsc_0_12_i_wen_comp(twiddle_rsc_0_12_i_wen_comp),
      .twiddle_rsc_0_13_i_wen_comp(twiddle_rsc_0_13_i_wen_comp),
      .twiddle_rsc_0_14_i_wen_comp(twiddle_rsc_0_14_i_wen_comp),
      .twiddle_rsc_0_15_i_wen_comp(twiddle_rsc_0_15_i_wen_comp),
      .twiddle_h_rsc_0_0_i_wen_comp(twiddle_h_rsc_0_0_i_wen_comp),
      .twiddle_h_rsc_0_1_i_wen_comp(twiddle_h_rsc_0_1_i_wen_comp),
      .twiddle_h_rsc_0_2_i_wen_comp(twiddle_h_rsc_0_2_i_wen_comp),
      .twiddle_h_rsc_0_3_i_wen_comp(twiddle_h_rsc_0_3_i_wen_comp),
      .twiddle_h_rsc_0_4_i_wen_comp(twiddle_h_rsc_0_4_i_wen_comp),
      .twiddle_h_rsc_0_5_i_wen_comp(twiddle_h_rsc_0_5_i_wen_comp),
      .twiddle_h_rsc_0_6_i_wen_comp(twiddle_h_rsc_0_6_i_wen_comp),
      .twiddle_h_rsc_0_7_i_wen_comp(twiddle_h_rsc_0_7_i_wen_comp),
      .twiddle_h_rsc_0_8_i_wen_comp(twiddle_h_rsc_0_8_i_wen_comp),
      .twiddle_h_rsc_0_9_i_wen_comp(twiddle_h_rsc_0_9_i_wen_comp),
      .twiddle_h_rsc_0_10_i_wen_comp(twiddle_h_rsc_0_10_i_wen_comp),
      .twiddle_h_rsc_0_11_i_wen_comp(twiddle_h_rsc_0_11_i_wen_comp),
      .twiddle_h_rsc_0_12_i_wen_comp(twiddle_h_rsc_0_12_i_wen_comp),
      .twiddle_h_rsc_0_13_i_wen_comp(twiddle_h_rsc_0_13_i_wen_comp),
      .twiddle_h_rsc_0_14_i_wen_comp(twiddle_h_rsc_0_14_i_wen_comp),
      .twiddle_h_rsc_0_15_i_wen_comp(twiddle_h_rsc_0_15_i_wen_comp)
    );
  peaseNTT_core_core_fsm peaseNTT_core_core_fsm_inst (
      .clk(clk),
      .rst(rst),
      .core_wen(core_wen),
      .fsm_output(fsm_output),
      .INNER_LOOP1_C_0_tr0(INNER_LOOP1_nor_tmp),
      .INNER_LOOP2_C_0_tr0(nl_peaseNTT_core_core_fsm_inst_INNER_LOOP2_C_0_tr0[0:0]),
      .INNER_LOOP2_C_0_tr1(nl_peaseNTT_core_core_fsm_inst_INNER_LOOP2_C_0_tr1[0:0]),
      .INNER_LOOP3_C_0_tr0(nl_peaseNTT_core_core_fsm_inst_INNER_LOOP3_C_0_tr0[0:0]),
      .INNER_LOOP4_C_0_tr0(and_dcpl_139),
      .INNER_LOOP4_C_0_tr1(nl_peaseNTT_core_core_fsm_inst_INNER_LOOP4_C_0_tr1[0:0])
    );
  assign or_67_rmff = ((and_dcpl_142 | ((~ INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_191_itm_12)
      & INNER_LOOP3_stage_0_13)) & (fsm_output[6])) | ((and_dcpl_144 | (INNER_LOOP1_stage_0_13
      & (~ INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_160_itm_12))) & (fsm_output[2]))
      | and_247_cse | and_248_cse;
  assign or_119_rmff = ((and_dcpl_150 | (INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_191_itm_12
      & INNER_LOOP3_stage_0_13)) & (fsm_output[6])) | ((and_dcpl_152 | (INNER_LOOP1_stage_0_13
      & INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_160_itm_12)) & (fsm_output[2])) |
      and_247_cse | and_248_cse;
  assign or_153_rmff = ((and_dcpl_142 | and_dcpl_153) & (fsm_output[6])) | ((and_dcpl_144
      | and_dcpl_154) & (fsm_output[2])) | and_460_cse | and_461_cse;
  assign or_204_rmff = ((and_dcpl_150 | and_dcpl_159) & (fsm_output[6])) | ((and_dcpl_152
      | and_dcpl_160) & (fsm_output[2])) | and_460_cse | and_461_cse;
  assign and_876_cse = INNER_LOOP1_stage_0 & (fsm_output[2]);
  assign and_877_cse = INNER_LOOP2_stage_0 & (fsm_output[4]);
  assign butterFly2_1_tw_butterFly2_1_tw_mux_cse = MUX_v_5_2_2(INNER_LOOP3_r_9_4_sva_4_0,
      INNER_LOOP4_r_9_4_sva_4_0, fsm_output[8]);
  assign or_447_rmff = ((INNER_LOOP3_stage_0_2 | INNER_LOOP3_stage_0_4 | INNER_LOOP3_stage_0_3)
      & (fsm_output[6])) | ((INNER_LOOP1_stage_0_3 | INNER_LOOP1_stage_0_4 | INNER_LOOP1_stage_0_2)
      & (fsm_output[2])) | ((INNER_LOOP2_stage_0_2 | INNER_LOOP2_stage_0_3 | INNER_LOOP2_stage_0_4)
      & (fsm_output[4])) | ((INNER_LOOP4_stage_0_4 | INNER_LOOP4_stage_0_3 | INNER_LOOP4_stage_0_2)
      & (fsm_output[8]));
  assign INNER_LOOP1_tw_h_and_49_cse = (operator_33_true_3_lshift_psp_1_0_sva==2'b00)
      & (fsm_output[8]);
  assign INNER_LOOP1_tw_h_and_51_cse = (operator_33_true_3_lshift_psp_1_0_sva==2'b01)
      & (fsm_output[8]);
  assign INNER_LOOP1_tw_h_and_53_cse = (operator_33_true_3_lshift_psp_1_0_sva==2'b10)
      & (fsm_output[8]);
  assign INNER_LOOP1_tw_h_and_55_cse = (operator_33_true_3_lshift_psp_1_0_sva==2'b11)
      & (fsm_output[8]);
  assign INNER_LOOP1_tw_h_and_44_cse = butterFly2_15_tw_equal_tmp_1 & (fsm_output[6]);
  assign butterFly2_7_tw_nor_cse = ~((operator_33_true_2_lshift_psp_2_0_sva[2:1]!=2'b00));
  assign INNER_LOOP1_tw_h_and_45_cse = (operator_33_true_2_lshift_psp_2_0_sva[0])
      & butterFly2_7_tw_nor_cse & (fsm_output[6]);
  assign butterFly2_7_tw_nor_1_cse = ~((operator_33_true_2_lshift_psp_2_0_sva[2])
      | (operator_33_true_2_lshift_psp_2_0_sva[0]));
  assign INNER_LOOP1_tw_h_and_46_cse = (operator_33_true_2_lshift_psp_2_0_sva[1])
      & butterFly2_7_tw_nor_1_cse & (fsm_output[6]);
  assign INNER_LOOP1_tw_h_and_47_cse = butterFly2_15_tw_equal_tmp_3_1 & (fsm_output[6]);
  assign butterFly2_7_tw_nor_2_cse = ~((operator_33_true_2_lshift_psp_2_0_sva[1:0]!=2'b00));
  assign INNER_LOOP1_tw_h_and_48_cse = (operator_33_true_2_lshift_psp_2_0_sva[2])
      & butterFly2_7_tw_nor_2_cse & (fsm_output[6]);
  assign INNER_LOOP1_tw_h_and_50_cse = butterFly2_15_tw_equal_tmp_5_1 & (fsm_output[6]);
  assign INNER_LOOP1_tw_h_and_52_cse = butterFly2_15_tw_equal_tmp_6_1 & (fsm_output[6]);
  assign INNER_LOOP1_tw_h_and_54_cse = butterFly2_15_tw_equal_tmp_7_1 & (fsm_output[6]);
  assign INNER_LOOP1_tw_h_or_9_cse = INNER_LOOP1_tw_h_and_48_cse | INNER_LOOP1_tw_h_and_49_cse;
  assign INNER_LOOP1_tw_h_or_10_cse = INNER_LOOP1_tw_h_and_50_cse | INNER_LOOP1_tw_h_and_51_cse;
  assign INNER_LOOP1_tw_h_or_11_cse = INNER_LOOP1_tw_h_and_52_cse | INNER_LOOP1_tw_h_and_53_cse;
  assign INNER_LOOP1_tw_h_or_12_cse = INNER_LOOP1_tw_h_and_54_cse | INNER_LOOP1_tw_h_and_55_cse;
  assign INNER_LOOP1_tw_h_and_41_cse = (operator_33_true_2_lshift_psp_2_0_sva[2:1]==2'b01)
      & (fsm_output[6]);
  assign INNER_LOOP1_tw_h_and_42_cse = (operator_33_true_2_lshift_psp_2_0_sva[2:1]==2'b10)
      & (fsm_output[6]);
  assign INNER_LOOP1_tw_h_and_43_cse = (operator_33_true_2_lshift_psp_2_0_sva[2:1]==2'b11)
      & (fsm_output[6]);
  assign INNER_LOOP1_tw_h_and_40_cse = butterFly2_7_tw_nor_cse & (fsm_output[6]);
  assign INNER_LOOP1_tw_h_and_37_cse = (operator_33_true_2_lshift_psp_2_0_sva[0])
      & (~ (operator_33_true_2_lshift_psp_2_0_sva[2])) & (fsm_output[6]);
  assign INNER_LOOP1_tw_h_and_38_cse = (operator_33_true_2_lshift_psp_2_0_sva[2])
      & (~ (operator_33_true_2_lshift_psp_2_0_sva[0])) & (fsm_output[6]);
  assign INNER_LOOP1_tw_h_and_39_cse = (operator_33_true_2_lshift_psp_2_0_sva[2])
      & (operator_33_true_2_lshift_psp_2_0_sva[0]) & (fsm_output[6]);
  assign INNER_LOOP1_tw_h_and_36_cse = butterFly2_7_tw_nor_1_cse & (fsm_output[6]);
  assign INNER_LOOP1_tw_h_and_30_cse = (operator_33_true_2_lshift_psp_2_0_sva[1:0]==2'b01)
      & (fsm_output[6]);
  assign INNER_LOOP1_tw_h_and_31_cse = (operator_33_true_2_lshift_psp_2_0_sva[1:0]==2'b10)
      & (fsm_output[6]);
  assign INNER_LOOP1_tw_h_and_32_cse = (operator_33_true_2_lshift_psp_2_0_sva[1:0]==2'b11)
      & (fsm_output[6]);
  assign INNER_LOOP1_tw_h_and_29_cse = butterFly2_7_tw_nor_2_cse & (fsm_output[6]);
  assign INNER_LOOP1_tw_h_or_3_cse = or_dcpl_29 | INNER_LOOP1_tw_h_and_44_cse;
  assign INNER_LOOP1_tw_h_or_1_cse = or_dcpl_29 | INNER_LOOP1_tw_h_and_36_cse;
  assign mult_4_t_and_nl = (~ INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1) &
      (fsm_output[2]);
  assign mult_4_t_and_1_nl = INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1 & (fsm_output[2]);
  assign mult_4_t_and_2_nl = (~ twiddle_h_rsc_0_0_i_s_raddr_core_4) & (fsm_output[6]);
  assign mult_4_t_and_3_nl = twiddle_h_rsc_0_0_i_s_raddr_core_4 & (fsm_output[6]);
  assign mult_4_t_mux1h_rmff = MUX1HOT_v_32_6_2(xt_rsc_0_9_i_s_din_mxwt, xt_rsc_1_9_i_s_din_mxwt,
      mult_t_mul_cmp_12_a_mx0w3, xt_rsc_0_7_i_s_din_mxwt, xt_rsc_1_7_i_s_din_mxwt,
      tmp_23_lpi_3_dfm_mx0, {mult_4_t_and_nl , mult_4_t_and_1_nl , (fsm_output[4])
      , mult_4_t_and_2_nl , mult_4_t_and_3_nl , (fsm_output[8])});
  assign INNER_LOOP1_tw_h_or_cse = or_dcpl_29 | INNER_LOOP1_tw_h_and_29_cse;
  assign or_570_rmff = ((INNER_LOOP3_stage_0_5 | INNER_LOOP3_stage_0_6 | INNER_LOOP3_stage_0_7)
      & (fsm_output[6])) | ((INNER_LOOP1_stage_0_5 | INNER_LOOP1_stage_0_6 | INNER_LOOP1_stage_0_7)
      & (fsm_output[2])) | ((INNER_LOOP2_stage_0_6 | INNER_LOOP2_stage_0_7 | INNER_LOOP2_stage_0_5)
      & (fsm_output[4])) | ((INNER_LOOP4_stage_0_5 | INNER_LOOP4_stage_0_7 | INNER_LOOP4_stage_0_6)
      & (fsm_output[8]));
  assign modulo_add_qelse_and_cse = core_wen & INNER_LOOP1_stage_0_11;
  assign butterFly1_and_cse = core_wen & INNER_LOOP1_stage_0_10;
  assign mult_15_if_and_cse = core_wen & INNER_LOOP1_stage_0_9;
  assign INNER_LOOP1_r_and_7_cse = core_wen & INNER_LOOP1_stage_0;
  assign mult_15_z_and_cse = core_wen & INNER_LOOP1_stage_0_8;
  assign mult_15_z_and_cse_1 = core_wen & (INNER_LOOP1_stage_0_8 | INNER_LOOP2_stage_0_8
      | INNER_LOOP3_stage_0_8 | INNER_LOOP4_stage_0_8);
  assign mult_15_z_and_1_cse = core_wen & INNER_LOOP1_stage_0_7;
  assign mult_15_z_and_2_cse = core_wen & INNER_LOOP1_stage_0_6;
  assign mult_15_z_and_3_cse = core_wen & (INNER_LOOP1_stage_0_5 | INNER_LOOP2_stage_0_5
      | INNER_LOOP3_stage_0_5 | INNER_LOOP4_stage_0_5);
  assign INNER_LOOP1_r_and_20_cse = core_wen & INNER_LOOP1_stage_0_5;
  assign INNER_LOOP1_r_and_23_cse = core_wen & INNER_LOOP1_stage_0_4;
  assign INNER_LOOP1_r_and_26_cse = core_wen & INNER_LOOP1_stage_0_3;
  assign INNER_LOOP1_r_and_29_cse = core_wen & INNER_LOOP1_stage_0_2;
  assign butterFly1_16_and_cse = core_wen & INNER_LOOP2_stage_0_10;
  assign mult_31_if_and_cse = core_wen & INNER_LOOP2_stage_0_9;
  assign INNER_LOOP2_r_and_3_cse = core_wen & INNER_LOOP2_stage_0;
  assign INNER_LOOP1_r_INNER_LOOP1_r_and_2_cse = MUX_v_5_2_2(5'b00000, (z_out_49[4:0]),
      (fsm_output[4]));
  assign INNER_LOOP2_r_and_4_cse = core_wen & ((fsm_output[3]) | (INNER_LOOP2_stage_0
      & (~ (z_out_49[5])) & (fsm_output[4])));
  assign mult_31_z_and_cse = core_wen & INNER_LOOP2_stage_0_8;
  assign mult_31_z_and_1_cse = core_wen & INNER_LOOP2_stage_0_7;
  assign mult_31_z_and_2_cse = core_wen & INNER_LOOP2_stage_0_6;
  assign INNER_LOOP2_r_and_17_cse = core_wen & INNER_LOOP2_stage_0_5;
  assign INNER_LOOP2_r_and_20_cse = core_wen & INNER_LOOP2_stage_0_4;
  assign INNER_LOOP2_r_and_23_cse = core_wen & INNER_LOOP2_stage_0_3;
  assign butterFly1_31_f1_and_7_cse = core_wen & (INNER_LOOP2_stage_0_2 | INNER_LOOP4_stage_0_2);
  assign c_or_cse = (fsm_output[4]) | (fsm_output[8]);
  assign modulo_add_32_qelse_and_cse = core_wen & INNER_LOOP3_stage_0_11;
  assign butterFly2_and_cse = core_wen & INNER_LOOP3_stage_0_10;
  assign mult_47_if_and_cse = core_wen & INNER_LOOP3_stage_0_9;
  assign butterFly2_15_tw_and_cse = core_wen & INNER_LOOP3_stage_0;
  assign INNER_LOOP3_INNER_LOOP3_and_1_cse = INNER_LOOP3_stage_0 & (fsm_output[6]);
  assign mult_47_z_and_cse = core_wen & INNER_LOOP3_stage_0_8;
  assign mult_47_z_and_1_cse = core_wen & INNER_LOOP3_stage_0_7;
  assign mult_47_z_and_2_cse = core_wen & INNER_LOOP3_stage_0_6;
  assign INNER_LOOP3_r_and_19_cse = core_wen & INNER_LOOP3_stage_0_5;
  assign INNER_LOOP3_r_and_22_cse = core_wen & INNER_LOOP3_stage_0_4;
  assign INNER_LOOP3_r_and_25_cse = core_wen & INNER_LOOP3_stage_0_3;
  assign INNER_LOOP3_r_and_28_cse = core_wen & INNER_LOOP3_stage_0_2;
  assign butterFly2_16_and_cse = core_wen & INNER_LOOP4_stage_0_10;
  assign mult_63_if_and_cse = core_wen & INNER_LOOP4_stage_0_9;
  assign INNER_LOOP4_r_and_3_cse = core_wen & INNER_LOOP4_stage_0;
  assign INNER_LOOP1_r_INNER_LOOP1_r_and_6_cse = MUX_v_5_2_2(5'b00000, (z_out_50[4:0]),
      (fsm_output[8]));
  assign INNER_LOOP4_INNER_LOOP4_and_1_cse = INNER_LOOP4_stage_0 & (fsm_output[8]);
  assign INNER_LOOP4_r_and_4_cse = core_wen & ((fsm_output[7]) | (INNER_LOOP4_stage_0
      & (~ (z_out_50[5])) & (fsm_output[8])));
  assign mult_63_z_and_cse = core_wen & INNER_LOOP4_stage_0_8;
  assign mult_63_z_and_1_cse = core_wen & INNER_LOOP4_stage_0_7;
  assign mult_63_z_and_2_cse = core_wen & INNER_LOOP4_stage_0_6;
  assign INNER_LOOP4_r_and_17_cse = core_wen & INNER_LOOP4_stage_0_5;
  assign INNER_LOOP4_r_and_20_cse = core_wen & INNER_LOOP4_stage_0_4;
  assign INNER_LOOP4_r_and_23_cse = core_wen & INNER_LOOP4_stage_0_3;
  assign mult_t_mul_cmp_a_mx0w2 = MUX_v_32_2_2(xt_rsc_0_31_i_s_din_mxwt, xt_rsc_1_31_i_s_din_mxwt,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign mult_t_mul_cmp_1_a_mx0w0 = MUX_v_32_2_2(xt_rsc_0_31_i_s_din_mxwt, xt_rsc_1_31_i_s_din_mxwt,
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
  assign mult_t_mul_cmp_2_a_mx0w2 = MUX_v_32_2_2(xt_rsc_0_27_i_s_din_mxwt, xt_rsc_1_27_i_s_din_mxwt,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign mult_t_mul_cmp_4_a_mx0w2 = MUX_v_32_2_2(xt_rsc_0_23_i_s_din_mxwt, xt_rsc_1_23_i_s_din_mxwt,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign mult_t_mul_cmp_5_a_mx0w2 = MUX_v_32_2_2(xt_rsc_0_21_i_s_din_mxwt, xt_rsc_1_21_i_s_din_mxwt,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign mult_t_mul_cmp_12_a_mx0w3 = MUX_v_32_2_2(yt_rsc_0_9_i_q_d, yt_rsc_1_9_i_q_d,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign mult_t_mul_cmp_6_a_mx0w2 = MUX_v_32_2_2(xt_rsc_0_19_i_s_din_mxwt, xt_rsc_1_19_i_s_din_mxwt,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign mult_t_mul_cmp_11_a_mx0w3 = MUX_v_32_2_2(yt_rsc_0_11_i_q_d, yt_rsc_1_11_i_q_d,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign mult_t_mul_cmp_7_a_mx0w2 = MUX_v_32_2_2(xt_rsc_0_17_i_s_din_mxwt, xt_rsc_1_17_i_s_din_mxwt,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign mult_t_mul_cmp_10_a_mx0w3 = MUX_v_32_2_2(yt_rsc_0_13_i_q_d, yt_rsc_1_13_i_q_d,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign mult_t_mul_cmp_8_a_mx0w2 = MUX_v_32_2_2(xt_rsc_0_15_i_s_din_mxwt, xt_rsc_1_15_i_s_din_mxwt,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign mult_t_mul_cmp_9_a_mx0w3 = MUX_v_32_2_2(yt_rsc_0_15_i_q_d, yt_rsc_1_15_i_q_d,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign mult_t_mul_cmp_9_a_mx0w0 = MUX_v_32_2_2(xt_rsc_0_15_i_s_din_mxwt, xt_rsc_1_15_i_s_din_mxwt,
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
  assign mult_t_mul_cmp_9_a_mx0w2 = MUX_v_32_2_2(xt_rsc_0_13_i_s_din_mxwt, xt_rsc_1_13_i_s_din_mxwt,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign mult_t_mul_cmp_10_a_mx0w0 = MUX_v_32_2_2(xt_rsc_0_13_i_s_din_mxwt, xt_rsc_1_13_i_s_din_mxwt,
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
  assign mult_t_mul_cmp_10_a_mx0w2 = MUX_v_32_2_2(xt_rsc_0_11_i_s_din_mxwt, xt_rsc_1_11_i_s_din_mxwt,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign mult_t_mul_cmp_11_a_mx0w0 = MUX_v_32_2_2(xt_rsc_0_11_i_s_din_mxwt, xt_rsc_1_11_i_s_din_mxwt,
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
  assign mult_t_mul_cmp_11_a_mx0w2 = MUX_v_32_2_2(xt_rsc_0_9_i_s_din_mxwt, xt_rsc_1_9_i_s_din_mxwt,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign mult_t_mul_cmp_13_a_mx0w0 = MUX_v_32_2_2(xt_rsc_0_7_i_s_din_mxwt, xt_rsc_1_7_i_s_din_mxwt,
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
  assign mult_t_mul_cmp_13_a_mx0w2 = MUX_v_32_2_2(xt_rsc_0_5_i_s_din_mxwt, xt_rsc_1_5_i_s_din_mxwt,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign mult_t_mul_cmp_14_a_mx0w0 = MUX_v_32_2_2(xt_rsc_0_5_i_s_din_mxwt, xt_rsc_1_5_i_s_din_mxwt,
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
  assign mult_t_mul_cmp_14_a_mx0w2 = MUX_v_32_2_2(xt_rsc_0_3_i_s_din_mxwt, xt_rsc_1_3_i_s_din_mxwt,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign mult_t_mul_cmp_15_a_mx0w0 = MUX_v_32_2_2(xt_rsc_0_3_i_s_din_mxwt, xt_rsc_1_3_i_s_din_mxwt,
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
  assign mult_t_mul_cmp_15_a_mx0w2 = MUX_v_32_2_2(xt_rsc_0_1_i_s_din_mxwt, xt_rsc_1_1_i_s_din_mxwt,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign nl_operator_20_false_acc_cse_sva_mx0w0 = ({butterFly2_19_tw_asn_itm , c_1_sva})
      + 3'b111;
  assign operator_20_false_acc_cse_sva_mx0w0 = nl_operator_20_false_acc_cse_sva_mx0w0[2:0];
  assign nl_mult_res_sva_2 = mult_z_asn_itm_4 - reg_mult_z_asn_itm_1_cse;
  assign mult_res_sva_2 = nl_mult_res_sva_2[31:0];
  assign nl_mult_1_res_sva_2 = mult_1_z_asn_itm_4 - reg_mult_1_z_asn_itm_1_cse;
  assign mult_1_res_sva_2 = nl_mult_1_res_sva_2[31:0];
  assign nl_mult_2_res_sva_2 = mult_2_z_asn_itm_4 - reg_mult_2_z_asn_itm_1_cse;
  assign mult_2_res_sva_2 = nl_mult_2_res_sva_2[31:0];
  assign nl_mult_3_res_sva_2 = mult_3_z_asn_itm_4 - reg_mult_3_z_asn_itm_1_cse;
  assign mult_3_res_sva_2 = nl_mult_3_res_sva_2[31:0];
  assign nl_mult_4_res_sva_2 = mult_4_z_asn_itm_4 - reg_mult_4_z_asn_itm_1_cse;
  assign mult_4_res_sva_2 = nl_mult_4_res_sva_2[31:0];
  assign nl_mult_5_res_sva_2 = mult_5_z_asn_itm_4 - reg_mult_5_z_asn_itm_1_cse;
  assign mult_5_res_sva_2 = nl_mult_5_res_sva_2[31:0];
  assign nl_mult_6_res_sva_2 = mult_6_z_asn_itm_4 - reg_mult_6_z_asn_itm_1_cse;
  assign mult_6_res_sva_2 = nl_mult_6_res_sva_2[31:0];
  assign nl_mult_7_res_sva_2 = mult_7_z_asn_itm_4 - reg_mult_7_z_asn_itm_1_cse;
  assign mult_7_res_sva_2 = nl_mult_7_res_sva_2[31:0];
  assign nl_mult_8_res_sva_2 = mult_8_z_asn_itm_4 - reg_mult_8_z_asn_itm_1_cse;
  assign mult_8_res_sva_2 = nl_mult_8_res_sva_2[31:0];
  assign nl_mult_9_res_sva_2 = mult_9_z_asn_itm_4 - reg_mult_9_z_asn_itm_1_cse;
  assign mult_9_res_sva_2 = nl_mult_9_res_sva_2[31:0];
  assign nl_mult_10_res_sva_2 = mult_10_z_asn_itm_4 - reg_mult_10_z_asn_itm_1_cse;
  assign mult_10_res_sva_2 = nl_mult_10_res_sva_2[31:0];
  assign nl_mult_11_res_sva_2 = mult_11_z_asn_itm_4 - reg_mult_11_z_asn_itm_1_cse;
  assign mult_11_res_sva_2 = nl_mult_11_res_sva_2[31:0];
  assign nl_mult_12_res_sva_2 = mult_12_z_asn_itm_4 - reg_mult_12_z_asn_itm_1_cse;
  assign mult_12_res_sva_2 = nl_mult_12_res_sva_2[31:0];
  assign nl_mult_13_res_sva_2 = mult_13_z_asn_itm_4 - reg_mult_13_z_asn_itm_1_cse;
  assign mult_13_res_sva_2 = nl_mult_13_res_sva_2[31:0];
  assign nl_mult_14_res_sva_2 = mult_14_z_asn_itm_4 - reg_mult_14_z_asn_itm_1_cse;
  assign mult_14_res_sva_2 = nl_mult_14_res_sva_2[31:0];
  assign nl_mult_15_res_sva_2 = mult_15_z_asn_itm_4 - reg_mult_15_z_asn_itm_1_cse;
  assign mult_15_res_sva_2 = nl_mult_15_res_sva_2[31:0];
  assign tmp_93_lpi_3_dfm_mx0 = MUX_v_32_2_2(xt_rsc_0_29_i_s_din_mxwt, xt_rsc_1_29_i_s_din_mxwt,
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
  assign tmp_91_lpi_3_dfm_mx0 = MUX_v_32_2_2(xt_rsc_0_27_i_s_din_mxwt, xt_rsc_1_27_i_s_din_mxwt,
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
  assign tmp_89_lpi_3_dfm_mx0 = MUX_v_32_2_2(xt_rsc_0_25_i_s_din_mxwt, xt_rsc_1_25_i_s_din_mxwt,
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
  assign tmp_87_lpi_3_dfm_mx0 = MUX_v_32_2_2(xt_rsc_0_23_i_s_din_mxwt, xt_rsc_1_23_i_s_din_mxwt,
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
  assign tmp_85_lpi_3_dfm_mx0 = MUX_v_32_2_2(xt_rsc_0_21_i_s_din_mxwt, xt_rsc_1_21_i_s_din_mxwt,
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
  assign tmp_83_lpi_3_dfm_mx0 = MUX_v_32_2_2(xt_rsc_0_19_i_s_din_mxwt, xt_rsc_1_19_i_s_din_mxwt,
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
  assign tmp_81_lpi_3_dfm_mx0 = MUX_v_32_2_2(xt_rsc_0_17_i_s_din_mxwt, xt_rsc_1_17_i_s_din_mxwt,
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
  assign tmp_65_lpi_3_dfm_mx0 = MUX_v_32_2_2(xt_rsc_0_1_i_s_din_mxwt, xt_rsc_1_1_i_s_din_mxwt,
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
  assign INNER_LOOP1_tw_and_psp_sva_1 = operator_33_true_return_8_4_sva & INNER_LOOP1_r_9_4_sva_4_0;
  assign mult_15_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_51, mult_15_res_sva_1, mult_15_slc_32_svs_st_1);
  assign mult_14_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_52, mult_14_res_sva_1, mult_14_slc_32_svs_st_1);
  assign mult_13_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_53, mult_13_res_sva_1, mult_13_slc_32_svs_st_1);
  assign mult_12_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_54, mult_12_res_sva_1, mult_12_slc_32_svs_st_1);
  assign mult_11_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_55, mult_11_res_sva_1, mult_11_slc_32_svs_st_1);
  assign mult_10_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_56, mult_10_res_sva_1, mult_10_slc_32_svs_st_1);
  assign mult_9_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_57, mult_9_res_sva_1, mult_9_slc_32_svs_st_1);
  assign mult_8_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_58, mult_8_res_sva_1, mult_8_slc_32_svs_st_1);
  assign mult_7_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_59, mult_7_res_sva_1, mult_7_slc_32_svs_st_1);
  assign mult_6_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_60, mult_6_res_sva_1, mult_6_slc_32_svs_st_1);
  assign mult_5_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_105, mult_5_res_sva_1, mult_5_slc_32_svs_st_1);
  assign mult_4_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_106, mult_4_res_sva_1, mult_4_slc_32_svs_st_1);
  assign mult_3_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_107, mult_3_res_sva_1, mult_3_slc_32_svs_st_1);
  assign mult_2_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_108, mult_2_res_sva_1, mult_2_slc_32_svs_st_1);
  assign mult_1_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_109, mult_1_res_sva_1, mult_1_slc_32_svs_st_1);
  assign mult_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_110, mult_res_sva_1, mult_slc_32_svs_st_1);
  assign nl_mult_16_res_sva_2 = mult_16_z_asn_itm_4 - reg_mult_z_asn_itm_1_cse;
  assign mult_16_res_sva_2 = nl_mult_16_res_sva_2[31:0];
  assign nl_mult_17_res_sva_2 = mult_17_z_asn_itm_4 - reg_mult_1_z_asn_itm_1_cse;
  assign mult_17_res_sva_2 = nl_mult_17_res_sva_2[31:0];
  assign nl_mult_18_res_sva_2 = mult_18_z_asn_itm_4 - reg_mult_2_z_asn_itm_1_cse;
  assign mult_18_res_sva_2 = nl_mult_18_res_sva_2[31:0];
  assign nl_mult_19_res_sva_2 = mult_19_z_asn_itm_4 - reg_mult_3_z_asn_itm_1_cse;
  assign mult_19_res_sva_2 = nl_mult_19_res_sva_2[31:0];
  assign nl_mult_20_res_sva_2 = mult_20_z_asn_itm_4 - reg_mult_4_z_asn_itm_1_cse;
  assign mult_20_res_sva_2 = nl_mult_20_res_sva_2[31:0];
  assign nl_mult_21_res_sva_2 = mult_21_z_asn_itm_4 - reg_mult_5_z_asn_itm_1_cse;
  assign mult_21_res_sva_2 = nl_mult_21_res_sva_2[31:0];
  assign nl_mult_22_res_sva_2 = mult_22_z_asn_itm_4 - reg_mult_6_z_asn_itm_1_cse;
  assign mult_22_res_sva_2 = nl_mult_22_res_sva_2[31:0];
  assign nl_mult_23_res_sva_2 = mult_23_z_asn_itm_4 - reg_mult_7_z_asn_itm_1_cse;
  assign mult_23_res_sva_2 = nl_mult_23_res_sva_2[31:0];
  assign nl_mult_24_res_sva_2 = mult_24_z_asn_itm_4 - reg_mult_8_z_asn_itm_1_cse;
  assign mult_24_res_sva_2 = nl_mult_24_res_sva_2[31:0];
  assign nl_mult_25_res_sva_2 = mult_25_z_asn_itm_4 - reg_mult_9_z_asn_itm_1_cse;
  assign mult_25_res_sva_2 = nl_mult_25_res_sva_2[31:0];
  assign nl_mult_26_res_sva_2 = mult_26_z_asn_itm_4 - reg_mult_10_z_asn_itm_1_cse;
  assign mult_26_res_sva_2 = nl_mult_26_res_sva_2[31:0];
  assign nl_mult_27_res_sva_2 = mult_27_z_asn_itm_4 - reg_mult_11_z_asn_itm_1_cse;
  assign mult_27_res_sva_2 = nl_mult_27_res_sva_2[31:0];
  assign nl_mult_28_res_sva_2 = mult_28_z_asn_itm_4 - reg_mult_12_z_asn_itm_1_cse;
  assign mult_28_res_sva_2 = nl_mult_28_res_sva_2[31:0];
  assign nl_mult_29_res_sva_2 = mult_29_z_asn_itm_4 - reg_mult_13_z_asn_itm_1_cse;
  assign mult_29_res_sva_2 = nl_mult_29_res_sva_2[31:0];
  assign nl_mult_30_res_sva_2 = mult_30_z_asn_itm_4 - reg_mult_14_z_asn_itm_1_cse;
  assign mult_30_res_sva_2 = nl_mult_30_res_sva_2[31:0];
  assign nl_mult_31_res_sva_2 = mult_31_z_asn_itm_4 - reg_mult_15_z_asn_itm_1_cse;
  assign mult_31_res_sva_2 = nl_mult_31_res_sva_2[31:0];
  assign tmp_31_lpi_3_dfm_mx0 = MUX_v_32_2_2(yt_rsc_0_31_i_q_d, yt_rsc_1_31_i_q_d,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign tmp_29_lpi_3_dfm_mx0 = MUX_v_32_2_2(yt_rsc_0_29_i_q_d, yt_rsc_1_29_i_q_d,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign tmp_27_lpi_3_dfm_mx0 = MUX_v_32_2_2(yt_rsc_0_27_i_q_d, yt_rsc_1_27_i_q_d,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign tmp_25_lpi_3_dfm_mx0 = MUX_v_32_2_2(yt_rsc_0_25_i_q_d, yt_rsc_1_25_i_q_d,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign tmp_23_lpi_3_dfm_mx0 = MUX_v_32_2_2(yt_rsc_0_23_i_q_d, yt_rsc_1_23_i_q_d,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign tmp_21_lpi_3_dfm_mx0 = MUX_v_32_2_2(yt_rsc_0_21_i_q_d, yt_rsc_1_21_i_q_d,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign tmp_19_lpi_3_dfm_mx0 = MUX_v_32_2_2(yt_rsc_0_19_i_q_d, yt_rsc_1_19_i_q_d,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign tmp_17_lpi_3_dfm_mx0 = MUX_v_32_2_2(yt_rsc_0_17_i_q_d, yt_rsc_1_17_i_q_d,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign tmp_7_lpi_3_dfm_mx0 = MUX_v_32_2_2(yt_rsc_0_7_i_q_d, yt_rsc_1_7_i_q_d, twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign tmp_5_lpi_3_dfm_mx0 = MUX_v_32_2_2(yt_rsc_0_5_i_q_d, yt_rsc_1_5_i_q_d, twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign tmp_3_lpi_3_dfm_mx0 = MUX_v_32_2_2(yt_rsc_0_3_i_q_d, yt_rsc_1_3_i_q_d, twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign tmp_1_lpi_3_dfm_mx0 = MUX_v_32_2_2(yt_rsc_0_1_i_q_d, yt_rsc_1_1_i_q_d, twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign mult_31_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_60, mult_31_res_sva_1, mult_31_slc_32_svs_st_1);
  assign mult_30_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_62, mult_30_res_sva_1, mult_30_slc_32_svs_st_1);
  assign mult_29_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_63, mult_29_res_sva_1, mult_29_slc_32_svs_st_1);
  assign mult_28_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_64, mult_28_res_sva_1, mult_28_slc_32_svs_st_1);
  assign mult_27_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_65, mult_27_res_sva_1, mult_27_slc_32_svs_st_1);
  assign mult_26_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_66, mult_26_res_sva_1, mult_26_slc_32_svs_st_1);
  assign mult_25_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_67, mult_25_res_sva_1, mult_25_slc_32_svs_st_1);
  assign mult_24_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_68, mult_24_res_sva_1, mult_24_slc_32_svs_st_1);
  assign mult_23_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_69, mult_23_res_sva_1, mult_23_slc_32_svs_st_1);
  assign mult_22_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_70, mult_22_res_sva_1, mult_22_slc_32_svs_st_1);
  assign mult_21_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_109, mult_21_res_sva_1, mult_21_slc_32_svs_st_1);
  assign mult_20_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_112, mult_20_res_sva_1, mult_20_slc_32_svs_st_1);
  assign mult_19_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_110, mult_19_res_sva_1, mult_19_slc_32_svs_st_1);
  assign mult_18_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_114, mult_18_res_sva_1, mult_18_slc_32_svs_st_1);
  assign mult_17_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_111, mult_17_res_sva_1, mult_17_slc_32_svs_st_1);
  assign mult_16_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_116, mult_16_res_sva_1, mult_16_slc_32_svs_st_1);
  assign nl_mult_41_res_sva_2 = mult_41_z_asn_itm_4 - reg_mult_10_z_asn_itm_1_cse;
  assign mult_41_res_sva_2 = nl_mult_41_res_sva_2[31:0];
  assign nl_mult_42_res_sva_2 = mult_42_z_asn_itm_4 - reg_mult_14_z_asn_itm_1_cse;
  assign mult_42_res_sva_2 = nl_mult_42_res_sva_2[31:0];
  assign nl_mult_43_res_sva_2 = mult_43_z_asn_itm_4 - reg_mult_6_z_asn_itm_1_cse;
  assign mult_43_res_sva_2 = nl_mult_43_res_sva_2[31:0];
  assign nl_mult_44_res_sva_2 = mult_44_z_asn_itm_4 - reg_mult_4_z_asn_itm_1_cse;
  assign mult_44_res_sva_2 = nl_mult_44_res_sva_2[31:0];
  assign nl_mult_45_res_sva_2 = mult_45_z_asn_itm_4 - reg_mult_12_z_asn_itm_1_cse;
  assign mult_45_res_sva_2 = nl_mult_45_res_sva_2[31:0];
  assign nl_mult_46_res_sva_2 = mult_46_z_asn_itm_4 - reg_mult_9_z_asn_itm_1_cse;
  assign mult_46_res_sva_2 = nl_mult_46_res_sva_2[31:0];
  assign nl_mult_47_res_sva_2 = mult_47_z_asn_itm_4 - reg_mult_1_z_asn_itm_1_cse;
  assign mult_47_res_sva_2 = nl_mult_47_res_sva_2[31:0];
  assign tmp_125_lpi_3_dfm_mx0 = MUX_v_32_2_2(xt_rsc_0_29_i_s_din_mxwt, xt_rsc_1_29_i_s_din_mxwt,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign tmp_121_lpi_3_dfm_mx0 = MUX_v_32_2_2(xt_rsc_0_25_i_s_din_mxwt, xt_rsc_1_25_i_s_din_mxwt,
      twiddle_h_rsc_0_0_i_s_raddr_core_4);
  assign mult_47_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_51, mult_47_res_sva_1, mult_47_slc_32_svs_st_1);
  assign mult_46_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_52, mult_46_res_sva_1, mult_46_slc_32_svs_st_1);
  assign mult_45_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_53, mult_45_res_sva_1, mult_45_slc_32_svs_st_1);
  assign mult_44_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_54, mult_44_res_sva_1, mult_44_slc_32_svs_st_1);
  assign mult_43_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_55, mult_43_res_sva_1, mult_43_slc_32_svs_st_1);
  assign mult_42_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_56, mult_42_res_sva_1, mult_42_slc_32_svs_st_1);
  assign mult_41_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_57, mult_41_res_sva_1, mult_41_slc_32_svs_st_1);
  assign mult_40_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_58, mult_40_res_sva_1, mult_40_slc_32_svs_st_1);
  assign mult_39_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_59, mult_39_res_sva_1, mult_39_slc_32_svs_st_1);
  assign mult_38_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_118, mult_38_res_sva_1, mult_38_slc_32_svs_st_1);
  assign nl_mult_37_if_acc_nl = mult_37_res_sva_1 - p_sva;
  assign mult_37_if_acc_nl = nl_mult_37_if_acc_nl[31:0];
  assign mult_37_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(mult_37_if_acc_nl, mult_37_res_sva_1,
      mult_37_slc_32_svs_st_1);
  assign mult_36_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_120, mult_36_res_sva_1, mult_36_slc_32_svs_st_1);
  assign nl_mult_35_if_acc_nl = mult_35_res_sva_1 - p_sva;
  assign mult_35_if_acc_nl = nl_mult_35_if_acc_nl[31:0];
  assign mult_35_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(mult_35_if_acc_nl, mult_35_res_sva_1,
      mult_35_slc_32_svs_st_1);
  assign mult_34_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_122, mult_34_res_sva_1, mult_34_slc_32_svs_st_1);
  assign nl_mult_33_if_acc_nl = mult_33_res_sva_1 - p_sva;
  assign mult_33_if_acc_nl = nl_mult_33_if_acc_nl[31:0];
  assign mult_33_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(mult_33_if_acc_nl, mult_33_res_sva_1,
      mult_33_slc_32_svs_st_1);
  assign mult_32_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_124, mult_32_res_sva_1, mult_32_slc_32_svs_st_1);
  assign nl_mult_48_res_sva_2 = mult_48_z_asn_itm_4 - reg_mult_1_z_asn_itm_1_cse;
  assign mult_48_res_sva_2 = nl_mult_48_res_sva_2[31:0];
  assign nl_mult_49_res_sva_2 = mult_49_z_asn_itm_4 - reg_mult_9_z_asn_itm_1_cse;
  assign mult_49_res_sva_2 = nl_mult_49_res_sva_2[31:0];
  assign nl_mult_50_res_sva_2 = mult_50_z_asn_itm_4 - reg_mult_12_z_asn_itm_1_cse;
  assign mult_50_res_sva_2 = nl_mult_50_res_sva_2[31:0];
  assign nl_mult_51_res_sva_2 = mult_51_z_asn_itm_4 - reg_mult_4_z_asn_itm_1_cse;
  assign mult_51_res_sva_2 = nl_mult_51_res_sva_2[31:0];
  assign nl_mult_52_res_sva_2 = mult_52_z_asn_itm_4 - reg_mult_6_z_asn_itm_1_cse;
  assign mult_52_res_sva_2 = nl_mult_52_res_sva_2[31:0];
  assign nl_mult_53_res_sva_2 = mult_53_z_asn_itm_4 - reg_mult_14_z_asn_itm_1_cse;
  assign mult_53_res_sva_2 = nl_mult_53_res_sva_2[31:0];
  assign nl_mult_54_res_sva_2 = mult_54_z_asn_itm_4 - reg_mult_10_z_asn_itm_1_cse;
  assign mult_54_res_sva_2 = nl_mult_54_res_sva_2[31:0];
  assign nl_mult_55_res_sva_2 = mult_55_z_asn_itm_4 - reg_mult_2_z_asn_itm_1_cse;
  assign mult_55_res_sva_2 = nl_mult_55_res_sva_2[31:0];
  assign nl_mult_56_res_sva_2 = mult_56_z_asn_itm_4 - reg_mult_3_z_asn_itm_1_cse;
  assign mult_56_res_sva_2 = nl_mult_56_res_sva_2[31:0];
  assign nl_mult_57_res_sva_2 = mult_57_z_asn_itm_4 - reg_mult_7_z_asn_itm_1_cse;
  assign mult_57_res_sva_2 = nl_mult_57_res_sva_2[31:0];
  assign nl_mult_58_res_sva_2 = mult_58_z_asn_itm_4 - reg_mult_11_z_asn_itm_1_cse;
  assign mult_58_res_sva_2 = nl_mult_58_res_sva_2[31:0];
  assign nl_mult_59_res_sva_2 = mult_59_z_asn_itm_4 - reg_mult_15_z_asn_itm_1_cse;
  assign mult_59_res_sva_2 = nl_mult_59_res_sva_2[31:0];
  assign nl_mult_60_res_sva_2 = mult_60_z_asn_itm_4 - reg_mult_13_z_asn_itm_1_cse;
  assign mult_60_res_sva_2 = nl_mult_60_res_sva_2[31:0];
  assign nl_mult_61_res_sva_2 = mult_61_z_asn_itm_4 - reg_mult_8_z_asn_itm_1_cse;
  assign mult_61_res_sva_2 = nl_mult_61_res_sva_2[31:0];
  assign nl_mult_62_res_sva_2 = mult_62_z_asn_itm_4 - reg_mult_5_z_asn_itm_1_cse;
  assign mult_62_res_sva_2 = nl_mult_62_res_sva_2[31:0];
  assign nl_mult_63_res_sva_2 = mult_63_z_asn_itm_4 - reg_mult_z_asn_itm_1_cse;
  assign mult_63_res_sva_2 = nl_mult_63_res_sva_2[31:0];
  assign mult_63_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_51, mult_63_res_sva_1, mult_63_slc_32_svs_st_1);
  assign mult_62_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_52, mult_62_res_sva_1, mult_62_slc_32_svs_st_1);
  assign mult_61_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_53, mult_61_res_sva_1, mult_61_slc_32_svs_st_1);
  assign mult_60_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_54, mult_60_res_sva_1, mult_60_slc_32_svs_st_1);
  assign mult_59_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_55, mult_59_res_sva_1, mult_59_slc_32_svs_st_1);
  assign mult_58_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_56, mult_58_res_sva_1, mult_58_slc_32_svs_st_1);
  assign mult_57_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_57, mult_57_res_sva_1, mult_57_slc_32_svs_st_1);
  assign mult_56_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_58, mult_56_res_sva_1, mult_56_slc_32_svs_st_1);
  assign mult_55_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_59, mult_55_res_sva_1, mult_55_slc_32_svs_st_1);
  assign mult_54_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_116, mult_54_res_sva_1, mult_54_slc_32_svs_st_1);
  assign mult_53_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_124, mult_53_res_sva_1, mult_53_slc_32_svs_st_1);
  assign mult_52_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_118, mult_52_res_sva_1, mult_52_slc_32_svs_st_1);
  assign mult_51_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_126, mult_51_res_sva_1, mult_51_slc_32_svs_st_1);
  assign mult_50_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_120, mult_50_res_sva_1, mult_50_slc_32_svs_st_1);
  assign mult_49_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_128, mult_49_res_sva_1, mult_49_slc_32_svs_st_1);
  assign mult_48_res_lpi_3_dfm_mx0 = MUX_v_32_2_2(z_out_122, mult_48_res_sva_1, mult_48_slc_32_svs_st_1);
  assign INNER_LOOP4_nor_tmp = ~(INNER_LOOP4_stage_0 | INNER_LOOP4_stage_0_2 | INNER_LOOP4_stage_0_3
      | INNER_LOOP4_stage_0_4 | INNER_LOOP4_stage_0_5 | INNER_LOOP4_stage_0_6 | INNER_LOOP4_stage_0_7
      | INNER_LOOP4_stage_0_8 | INNER_LOOP4_stage_0_9 | INNER_LOOP4_stage_0_10 |
      INNER_LOOP4_stage_0_11);
  assign INNER_LOOP2_nor_tmp = ~(INNER_LOOP2_stage_0 | INNER_LOOP2_stage_0_2 | INNER_LOOP2_stage_0_3
      | INNER_LOOP2_stage_0_4 | INNER_LOOP2_stage_0_5 | INNER_LOOP2_stage_0_6 | INNER_LOOP2_stage_0_7
      | INNER_LOOP2_stage_0_8 | INNER_LOOP2_stage_0_9 | INNER_LOOP2_stage_0_10 |
      INNER_LOOP2_stage_0_11);
  assign INNER_LOOP1_nor_tmp = ~(INNER_LOOP1_stage_0 | INNER_LOOP1_stage_0_2 | INNER_LOOP1_stage_0_3
      | INNER_LOOP1_stage_0_4 | INNER_LOOP1_stage_0_5 | INNER_LOOP1_stage_0_6 | INNER_LOOP1_stage_0_7
      | INNER_LOOP1_stage_0_8 | INNER_LOOP1_stage_0_9 | INNER_LOOP1_stage_0_10 |
      INNER_LOOP1_stage_0_11 | INNER_LOOP1_stage_0_12);
  assign and_dcpl_139 = INNER_LOOP4_nor_tmp & c_1_sva_1;
  assign and_dcpl_142 = INNER_LOOP3_stage_0_12 & (~ INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_11);
  assign and_dcpl_144 = (~ INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_11) &
      INNER_LOOP1_stage_0_12;
  assign and_dcpl_146 = INNER_LOOP2_stage_0 & (~ (INNER_LOOP2_r_9_4_sva_4_0[4]));
  assign and_dcpl_148 = INNER_LOOP4_stage_0 & (~ (INNER_LOOP4_r_9_4_sva_4_0[4]));
  assign and_dcpl_150 = INNER_LOOP3_stage_0_12 & INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_11;
  assign and_dcpl_152 = INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_11 & INNER_LOOP1_stage_0_12;
  assign and_dcpl_153 = INNER_LOOP3_stage_0_11 & (~ INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_10);
  assign and_dcpl_154 = (~ INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_10) &
      INNER_LOOP1_stage_0_11;
  assign and_dcpl_156 = INNER_LOOP2_stage_0 & (INNER_LOOP2_r_9_4_sva_4_0[4]);
  assign and_dcpl_158 = INNER_LOOP4_stage_0 & (INNER_LOOP4_r_9_4_sva_4_0[4]);
  assign and_dcpl_159 = INNER_LOOP3_stage_0_11 & INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_10;
  assign and_dcpl_160 = INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_10 & INNER_LOOP1_stage_0_11;
  assign and_dcpl_169 = INNER_LOOP3_stage_0 & (operator_33_true_2_lshift_psp_2_0_sva[0]);
  assign and_dcpl_170 = INNER_LOOP4_stage_0 & (operator_33_true_3_lshift_psp_1_0_sva[0]);
  assign and_dcpl_171 = INNER_LOOP3_stage_0 & (operator_33_true_2_lshift_psp_2_0_sva[1]);
  assign or_dcpl_29 = (fsm_output[2]) | (fsm_output[4]);
  assign and_247_cse = (and_dcpl_146 | ((~ INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4302_itm_1)
      & INNER_LOOP2_stage_0_2)) & (fsm_output[4]);
  assign and_248_cse = (and_dcpl_148 | ((~ INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4377_itm_1)
      & INNER_LOOP4_stage_0_2)) & (fsm_output[8]);
  assign and_460_cse = (and_dcpl_156 | (INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4302_itm_1
      & INNER_LOOP2_stage_0_2)) & (fsm_output[4]);
  assign and_461_cse = (and_dcpl_158 | (INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4377_itm_1
      & INNER_LOOP4_stage_0_2)) & (fsm_output[8]);
  assign and_897_cse = and_dcpl_170 & (fsm_output[8]);
  assign and_906_cse = INNER_LOOP4_stage_0 & (operator_33_true_3_lshift_psp_1_0_sva[1])
      & (fsm_output[8]);
  assign and_915_cse = and_dcpl_170 & (operator_33_true_3_lshift_psp_1_0_sva[1])
      & (fsm_output[8]);
  assign and_1140_cse = (~ (operator_33_true_3_lshift_psp_1_0_sva[0])) & (fsm_output[8]);
  assign or_tmp_418 = or_dcpl_29 | and_1140_cse;
  assign or_tmp_420 = (operator_33_true_3_lshift_psp_1_0_sva[0]) & (fsm_output[8]);
  assign and_1155_cse = (~ (operator_33_true_3_lshift_psp_1_0_sva[1])) & (fsm_output[8]);
  assign or_tmp_426 = (operator_33_true_2_lshift_psp_2_0_sva[2]) & (fsm_output[6]);
  assign and_1159_cse = (~ (operator_33_true_2_lshift_psp_2_0_sva[2])) & (fsm_output[6]);
  assign or_tmp_428 = (operator_33_true_3_lshift_psp_1_0_sva[1]) & (fsm_output[8]);
  assign or_tmp_441 = (operator_33_true_2_lshift_psp_2_0_sva[1]) & (fsm_output[6]);
  assign and_1189_cse = (~ (operator_33_true_2_lshift_psp_2_0_sva[1])) & (fsm_output[6]);
  assign or_tmp_449 = (operator_33_true_2_lshift_psp_2_0_sva[0]) & (fsm_output[6]);
  assign and_1205_cse = (~ (operator_33_true_2_lshift_psp_2_0_sva[0])) & (fsm_output[6]);
  assign or_tmp_502 = and_1189_cse | or_dcpl_29;
  assign or_tmp_509 = and_1205_cse | or_dcpl_29;
  assign butterFly1_and_ssc = ~((modulo_sub_base_sva_1[31]) | (fsm_output[6]));
  assign butterFly1_and_ssc_2 = (~ (modulo_sub_base_32_sva_1[31])) & (fsm_output[6]);
  assign butterFly1_and_ssc_3 = (modulo_sub_base_32_sva_1[31]) & (fsm_output[6]);
  assign butterFly1_1_and_ssc = ~((modulo_sub_base_1_sva_1[31]) | (fsm_output[6]));
  assign butterFly1_1_and_ssc_2 = (~ (modulo_sub_base_33_sva_1[31])) & (fsm_output[6]);
  assign butterFly1_1_and_ssc_3 = (modulo_sub_base_33_sva_1[31]) & (fsm_output[6]);
  assign butterFly1_2_and_ssc = ~((modulo_sub_base_2_sva_1[31]) | (fsm_output[6]));
  assign butterFly1_2_and_ssc_2 = (~ (modulo_sub_base_34_sva_1[31])) & (fsm_output[6]);
  assign butterFly1_2_and_ssc_3 = (modulo_sub_base_34_sva_1[31]) & (fsm_output[6]);
  assign butterFly1_3_and_ssc = ~((modulo_sub_base_3_sva_1[31]) | (fsm_output[6]));
  assign butterFly1_3_and_ssc_2 = (~ (modulo_sub_base_35_sva_1[31])) & (fsm_output[6]);
  assign butterFly1_3_and_ssc_3 = (modulo_sub_base_35_sva_1[31]) & (fsm_output[6]);
  assign butterFly1_4_and_ssc = ~((modulo_sub_base_4_sva_1[31]) | (fsm_output[6]));
  assign butterFly1_4_and_ssc_2 = (~ (modulo_sub_base_36_sva_1[31])) & (fsm_output[6]);
  assign butterFly1_4_and_ssc_3 = (modulo_sub_base_36_sva_1[31]) & (fsm_output[6]);
  assign butterFly1_5_and_ssc = ~((modulo_sub_base_5_sva_1[31]) | (fsm_output[6]));
  assign butterFly1_5_and_ssc_2 = (~ (modulo_sub_base_37_sva_1[31])) & (fsm_output[6]);
  assign butterFly1_5_and_ssc_3 = (modulo_sub_base_37_sva_1[31]) & (fsm_output[6]);
  assign butterFly1_6_and_ssc = ~((modulo_sub_base_6_sva_1[31]) | (fsm_output[6]));
  assign butterFly1_6_and_ssc_2 = (~ (modulo_sub_base_38_sva_1[31])) & (fsm_output[6]);
  assign butterFly1_6_and_ssc_3 = (modulo_sub_base_38_sva_1[31]) & (fsm_output[6]);
  assign butterFly1_7_and_ssc = ~((modulo_sub_base_7_sva_1[31]) | (fsm_output[6]));
  assign butterFly1_7_and_ssc_2 = (~ (modulo_sub_base_39_sva_1[31])) & (fsm_output[6]);
  assign butterFly1_7_and_ssc_3 = (modulo_sub_base_39_sva_1[31]) & (fsm_output[6]);
  assign butterFly1_8_and_ssc = ~((modulo_sub_base_8_sva_1[31]) | (fsm_output[6]));
  assign butterFly1_8_and_ssc_2 = (~ (modulo_sub_base_40_sva_1[31])) & (fsm_output[6]);
  assign butterFly1_8_and_ssc_3 = (modulo_sub_base_40_sva_1[31]) & (fsm_output[6]);
  assign butterFly1_9_and_ssc = ~((modulo_sub_base_9_sva_1[31]) | (fsm_output[6]));
  assign butterFly1_9_and_ssc_2 = (~ (modulo_sub_base_41_sva_1[31])) & (fsm_output[6]);
  assign butterFly1_9_and_ssc_3 = (modulo_sub_base_41_sva_1[31]) & (fsm_output[6]);
  assign butterFly1_10_and_ssc = ~((modulo_sub_base_10_sva_1[31]) | (fsm_output[6]));
  assign butterFly1_10_and_ssc_2 = (~ (modulo_sub_base_42_sva_1[31])) & (fsm_output[6]);
  assign butterFly1_10_and_ssc_3 = (modulo_sub_base_42_sva_1[31]) & (fsm_output[6]);
  assign butterFly1_11_and_ssc = ~((modulo_sub_base_11_sva_1[31]) | (fsm_output[6]));
  assign butterFly1_11_and_ssc_2 = (~ (modulo_sub_base_43_sva_1[31])) & (fsm_output[6]);
  assign butterFly1_11_and_ssc_3 = (modulo_sub_base_43_sva_1[31]) & (fsm_output[6]);
  assign butterFly1_12_and_ssc = ~((modulo_sub_base_12_sva_1[31]) | (fsm_output[6]));
  assign butterFly1_12_and_ssc_2 = (~ (modulo_sub_base_44_sva_1[31])) & (fsm_output[6]);
  assign butterFly1_12_and_ssc_3 = (modulo_sub_base_44_sva_1[31]) & (fsm_output[6]);
  assign butterFly1_13_and_ssc = ~((modulo_sub_base_13_sva_1[31]) | (fsm_output[6]));
  assign butterFly1_13_and_ssc_2 = (~ (modulo_sub_base_45_sva_1[31])) & (fsm_output[6]);
  assign butterFly1_13_and_ssc_3 = (modulo_sub_base_45_sva_1[31]) & (fsm_output[6]);
  assign butterFly1_14_and_ssc = ~((modulo_sub_base_14_sva_1[31]) | (fsm_output[6]));
  assign butterFly1_14_and_ssc_2 = (~ (modulo_sub_base_46_sva_1[31])) & (fsm_output[6]);
  assign butterFly1_14_and_ssc_3 = (modulo_sub_base_46_sva_1[31]) & (fsm_output[6]);
  assign butterFly1_15_and_ssc = ~((modulo_sub_base_15_sva_1[31]) | (fsm_output[6]));
  assign butterFly1_15_and_ssc_2 = (~ (modulo_sub_base_47_sva_1[31])) & (fsm_output[6]);
  assign butterFly1_15_and_ssc_3 = (modulo_sub_base_47_sva_1[31]) & (fsm_output[6]);
  assign butterFly1_f1_and_ssc = ~((modulo_sub_base_16_sva_1[31]) | (fsm_output[8]));
  assign butterFly1_f1_and_ssc_2 = (~ (modulo_sub_base_48_sva_1[31])) & (fsm_output[8]);
  assign butterFly1_f1_and_ssc_3 = (modulo_sub_base_48_sva_1[31]) & (fsm_output[8]);
  assign butterFly1_f2_and_ssc = ~((modulo_sub_base_17_sva_1[31]) | (fsm_output[8]));
  assign butterFly1_f2_and_ssc_2 = (~ (modulo_sub_base_49_sva_1[31])) & (fsm_output[8]);
  assign butterFly1_f2_and_ssc_3 = (modulo_sub_base_49_sva_1[31]) & (fsm_output[8]);
  assign butterFly1_1_f1_and_ssc = ~((modulo_sub_base_18_sva_1[31]) | (fsm_output[8]));
  assign butterFly1_1_f1_and_ssc_2 = (~ (modulo_sub_base_50_sva_1[31])) & (fsm_output[8]);
  assign butterFly1_1_f1_and_ssc_3 = (modulo_sub_base_50_sva_1[31]) & (fsm_output[8]);
  assign butterFly1_1_f2_and_ssc = ~((modulo_sub_base_19_sva_1[31]) | (fsm_output[8]));
  assign butterFly1_1_f2_and_ssc_2 = (~ (modulo_sub_base_51_sva_1[31])) & (fsm_output[8]);
  assign butterFly1_1_f2_and_ssc_3 = (modulo_sub_base_51_sva_1[31]) & (fsm_output[8]);
  assign butterFly1_2_f1_and_ssc = ~((modulo_sub_base_20_sva_1[31]) | (fsm_output[8]));
  assign butterFly1_2_f1_and_ssc_2 = (~ (modulo_sub_base_52_sva_1[31])) & (fsm_output[8]);
  assign butterFly1_2_f1_and_ssc_3 = (modulo_sub_base_52_sva_1[31]) & (fsm_output[8]);
  assign butterFly1_2_f2_and_ssc = ~((modulo_sub_base_21_sva_1[31]) | (fsm_output[8]));
  assign butterFly1_2_f2_and_ssc_2 = (~ (modulo_sub_base_53_sva_1[31])) & (fsm_output[8]);
  assign butterFly1_2_f2_and_ssc_3 = (modulo_sub_base_53_sva_1[31]) & (fsm_output[8]);
  assign butterFly1_3_f1_and_ssc = ~((modulo_sub_base_22_sva_1[31]) | (fsm_output[8]));
  assign butterFly1_3_f1_and_ssc_2 = (~ (modulo_sub_base_54_sva_1[31])) & (fsm_output[8]);
  assign butterFly1_3_f1_and_ssc_3 = (modulo_sub_base_54_sva_1[31]) & (fsm_output[8]);
  assign butterFly1_3_f2_and_ssc = ~((modulo_sub_base_23_sva_1[31]) | (fsm_output[8]));
  assign butterFly1_3_f2_and_ssc_2 = (~ (modulo_sub_base_55_sva_1[31])) & (fsm_output[8]);
  assign butterFly1_3_f2_and_ssc_3 = (modulo_sub_base_55_sva_1[31]) & (fsm_output[8]);
  assign butterFly1_4_f1_and_ssc = ~((modulo_sub_base_24_sva_1[31]) | (fsm_output[8]));
  assign butterFly1_4_f1_and_ssc_2 = (~ (modulo_sub_base_56_sva_1[31])) & (fsm_output[8]);
  assign butterFly1_4_f1_and_ssc_3 = (modulo_sub_base_56_sva_1[31]) & (fsm_output[8]);
  assign butterFly1_4_f2_and_ssc = ~((modulo_sub_base_25_sva_1[31]) | (fsm_output[8]));
  assign butterFly1_4_f2_and_ssc_2 = (~ (modulo_sub_base_57_sva_1[31])) & (fsm_output[8]);
  assign butterFly1_4_f2_and_ssc_3 = (modulo_sub_base_57_sva_1[31]) & (fsm_output[8]);
  assign butterFly1_5_f1_and_ssc = ~((modulo_sub_base_26_sva_1[31]) | (fsm_output[8]));
  assign butterFly1_5_f1_and_ssc_2 = (~ (modulo_sub_base_58_sva_1[31])) & (fsm_output[8]);
  assign butterFly1_5_f1_and_ssc_3 = (modulo_sub_base_58_sva_1[31]) & (fsm_output[8]);
  assign butterFly1_5_f2_and_ssc = ~((modulo_sub_base_27_sva_1[31]) | (fsm_output[8]));
  assign butterFly1_5_f2_and_ssc_2 = (~ (modulo_sub_base_59_sva_1[31])) & (fsm_output[8]);
  assign butterFly1_5_f2_and_ssc_3 = (modulo_sub_base_59_sva_1[31]) & (fsm_output[8]);
  assign butterFly1_6_f1_and_ssc = ~((modulo_sub_base_28_sva_1[31]) | (fsm_output[8]));
  assign butterFly1_6_f1_and_ssc_2 = (~ (modulo_sub_base_60_sva_1[31])) & (fsm_output[8]);
  assign butterFly1_6_f1_and_ssc_3 = (modulo_sub_base_60_sva_1[31]) & (fsm_output[8]);
  assign butterFly1_6_f2_and_ssc = ~((modulo_sub_base_29_sva_1[31]) | (fsm_output[8]));
  assign butterFly1_6_f2_and_ssc_2 = (~ (modulo_sub_base_61_sva_1[31])) & (fsm_output[8]);
  assign butterFly1_6_f2_and_ssc_3 = (modulo_sub_base_61_sva_1[31]) & (fsm_output[8]);
  assign butterFly1_7_f1_and_ssc = ~((modulo_sub_base_30_sva_1[31]) | (fsm_output[8]));
  assign butterFly1_7_f1_and_ssc_2 = (~ (modulo_sub_base_62_sva_1[31])) & (fsm_output[8]);
  assign butterFly1_7_f1_and_ssc_3 = (modulo_sub_base_62_sva_1[31]) & (fsm_output[8]);
  assign butterFly1_7_f2_and_ssc = ~((modulo_sub_base_31_sva_1[31]) | (fsm_output[8]));
  assign butterFly1_7_f2_and_ssc_2 = (~ (modulo_sub_base_63_sva_1[31])) & (fsm_output[8]);
  assign butterFly1_7_f2_and_ssc_3 = (modulo_sub_base_63_sva_1[31]) & (fsm_output[8]);
  assign butterFly1_mux_nl = MUX_s_1_2_2((z_out_89[31]), (z_out_90[31]), butterFly1_and_ssc_3);
  assign butterFly1_and_4_rmff = butterFly1_mux_nl & (~(butterFly1_and_ssc | butterFly1_and_ssc_2));
  assign butterFly1_and_1_nl = (modulo_sub_base_sva_1[31]) & (~ (fsm_output[6]));
  assign butterFly1_mux1h_2_rmff = MUX1HOT_v_31_4_2((modulo_sub_base_sva_1[30:0]),
      (z_out_89[30:0]), (modulo_sub_base_32_sva_1[30:0]), (z_out_90[30:0]), {butterFly1_and_ssc
      , butterFly1_and_1_nl , butterFly1_and_ssc_2 , butterFly1_and_ssc_3});
  assign butterFly1_1_mux_4_nl = MUX_s_1_2_2((z_out_91[31]), (z_out_92[31]), butterFly1_1_and_ssc_3);
  assign butterFly1_1_and_4_rmff = butterFly1_1_mux_4_nl & (~(butterFly1_1_and_ssc
      | butterFly1_1_and_ssc_2));
  assign butterFly1_1_and_1_nl = (modulo_sub_base_1_sva_1[31]) & (~ (fsm_output[6]));
  assign butterFly1_1_mux1h_2_rmff = MUX1HOT_v_31_4_2((modulo_sub_base_1_sva_1[30:0]),
      (z_out_91[30:0]), (modulo_sub_base_33_sva_1[30:0]), (z_out_92[30:0]), {butterFly1_1_and_ssc
      , butterFly1_1_and_1_nl , butterFly1_1_and_ssc_2 , butterFly1_1_and_ssc_3});
  assign butterFly1_2_mux_nl = MUX_s_1_2_2((z_out_93[31]), (z_out_94[31]), butterFly1_2_and_ssc_3);
  assign butterFly1_2_and_4_rmff = butterFly1_2_mux_nl & (~(butterFly1_2_and_ssc
      | butterFly1_2_and_ssc_2));
  assign butterFly1_2_and_1_nl = (modulo_sub_base_2_sva_1[31]) & (~ (fsm_output[6]));
  assign butterFly1_2_mux1h_2_rmff = MUX1HOT_v_31_4_2((modulo_sub_base_2_sva_1[30:0]),
      (z_out_93[30:0]), (modulo_sub_base_34_sva_1[30:0]), (z_out_94[30:0]), {butterFly1_2_and_ssc
      , butterFly1_2_and_1_nl , butterFly1_2_and_ssc_2 , butterFly1_2_and_ssc_3});
  assign butterFly1_3_mux_nl = MUX_s_1_2_2((z_out_95[31]), (z_out_96[31]), butterFly1_3_and_ssc_3);
  assign butterFly1_3_and_4_rmff = butterFly1_3_mux_nl & (~(butterFly1_3_and_ssc
      | butterFly1_3_and_ssc_2));
  assign butterFly1_3_and_1_nl = (modulo_sub_base_3_sva_1[31]) & (~ (fsm_output[6]));
  assign butterFly1_3_mux1h_2_rmff = MUX1HOT_v_31_4_2((modulo_sub_base_3_sva_1[30:0]),
      (z_out_95[30:0]), (modulo_sub_base_35_sva_1[30:0]), (z_out_96[30:0]), {butterFly1_3_and_ssc
      , butterFly1_3_and_1_nl , butterFly1_3_and_ssc_2 , butterFly1_3_and_ssc_3});
  assign butterFly1_4_mux_nl = MUX_s_1_2_2((z_out_97[31]), (z_out_98[31]), butterFly1_4_and_ssc_3);
  assign butterFly1_4_and_4_rmff = butterFly1_4_mux_nl & (~(butterFly1_4_and_ssc
      | butterFly1_4_and_ssc_2));
  assign butterFly1_4_and_1_nl = (modulo_sub_base_4_sva_1[31]) & (~ (fsm_output[6]));
  assign butterFly1_4_mux1h_2_rmff = MUX1HOT_v_31_4_2((modulo_sub_base_4_sva_1[30:0]),
      (z_out_97[30:0]), (modulo_sub_base_36_sva_1[30:0]), (z_out_98[30:0]), {butterFly1_4_and_ssc
      , butterFly1_4_and_1_nl , butterFly1_4_and_ssc_2 , butterFly1_4_and_ssc_3});
  assign butterFly1_5_mux_nl = MUX_s_1_2_2((z_out_99[31]), (z_out_101[31]), butterFly1_5_and_ssc_3);
  assign butterFly1_5_and_4_rmff = butterFly1_5_mux_nl & (~(butterFly1_5_and_ssc
      | butterFly1_5_and_ssc_2));
  assign butterFly1_5_and_1_nl = (modulo_sub_base_5_sva_1[31]) & (~ (fsm_output[6]));
  assign butterFly1_5_mux1h_2_rmff = MUX1HOT_v_31_4_2((modulo_sub_base_5_sva_1[30:0]),
      (z_out_99[30:0]), (modulo_sub_base_37_sva_1[30:0]), (z_out_101[30:0]), {butterFly1_5_and_ssc
      , butterFly1_5_and_1_nl , butterFly1_5_and_ssc_2 , butterFly1_5_and_ssc_3});
  assign butterFly1_6_mux_nl = MUX_s_1_2_2((z_out_79[31]), (z_out_78[31]), butterFly1_6_and_ssc_3);
  assign butterFly1_6_and_4_rmff = butterFly1_6_mux_nl & (~(butterFly1_6_and_ssc
      | butterFly1_6_and_ssc_2));
  assign butterFly1_6_and_1_nl = (modulo_sub_base_6_sva_1[31]) & (~ (fsm_output[6]));
  assign butterFly1_6_mux1h_2_rmff = MUX1HOT_v_31_4_2((modulo_sub_base_6_sva_1[30:0]),
      (z_out_79[30:0]), (modulo_sub_base_38_sva_1[30:0]), (z_out_78[30:0]), {butterFly1_6_and_ssc
      , butterFly1_6_and_1_nl , butterFly1_6_and_ssc_2 , butterFly1_6_and_ssc_3});
  assign butterFly1_7_mux_nl = MUX_s_1_2_2((z_out_77[31]), (z_out_76[31]), butterFly1_7_and_ssc_3);
  assign butterFly1_7_and_4_rmff = butterFly1_7_mux_nl & (~(butterFly1_7_and_ssc
      | butterFly1_7_and_ssc_2));
  assign butterFly1_7_and_1_nl = (modulo_sub_base_7_sva_1[31]) & (~ (fsm_output[6]));
  assign butterFly1_7_mux1h_2_rmff = MUX1HOT_v_31_4_2((modulo_sub_base_7_sva_1[30:0]),
      (z_out_77[30:0]), (modulo_sub_base_39_sva_1[30:0]), (z_out_76[30:0]), {butterFly1_7_and_ssc
      , butterFly1_7_and_1_nl , butterFly1_7_and_ssc_2 , butterFly1_7_and_ssc_3});
  assign butterFly1_8_mux_nl = MUX_s_1_2_2((z_out_75[31]), (z_out_74[31]), butterFly1_8_and_ssc_3);
  assign butterFly1_8_and_4_rmff = butterFly1_8_mux_nl & (~(butterFly1_8_and_ssc
      | butterFly1_8_and_ssc_2));
  assign butterFly1_8_and_1_nl = (modulo_sub_base_8_sva_1[31]) & (~ (fsm_output[6]));
  assign butterFly1_8_mux1h_2_rmff = MUX1HOT_v_31_4_2((modulo_sub_base_8_sva_1[30:0]),
      (z_out_75[30:0]), (modulo_sub_base_40_sva_1[30:0]), (z_out_74[30:0]), {butterFly1_8_and_ssc
      , butterFly1_8_and_1_nl , butterFly1_8_and_ssc_2 , butterFly1_8_and_ssc_3});
  assign butterFly1_9_mux_nl = MUX_s_1_2_2((z_out_73[31]), (z_out_71[31]), butterFly1_9_and_ssc_3);
  assign butterFly1_9_and_4_rmff = butterFly1_9_mux_nl & (~(butterFly1_9_and_ssc
      | butterFly1_9_and_ssc_2));
  assign butterFly1_9_and_1_nl = (modulo_sub_base_9_sva_1[31]) & (~ (fsm_output[6]));
  assign butterFly1_9_mux1h_2_rmff = MUX1HOT_v_31_4_2((modulo_sub_base_9_sva_1[30:0]),
      (z_out_73[30:0]), (modulo_sub_base_41_sva_1[30:0]), (z_out_71[30:0]), {butterFly1_9_and_ssc
      , butterFly1_9_and_1_nl , butterFly1_9_and_ssc_2 , butterFly1_9_and_ssc_3});
  assign butterFly1_10_mux_nl = MUX_s_1_2_2((z_out_85[31]), (z_out_81[31]), butterFly1_10_and_ssc_3);
  assign butterFly1_10_and_4_rmff = butterFly1_10_mux_nl & (~(butterFly1_10_and_ssc
      | butterFly1_10_and_ssc_2));
  assign butterFly1_10_and_1_nl = (modulo_sub_base_10_sva_1[31]) & (~ (fsm_output[6]));
  assign butterFly1_10_mux1h_2_rmff = MUX1HOT_v_31_4_2((modulo_sub_base_10_sva_1[30:0]),
      (z_out_85[30:0]), (modulo_sub_base_42_sva_1[30:0]), (z_out_81[30:0]), {butterFly1_10_and_ssc
      , butterFly1_10_and_1_nl , butterFly1_10_and_ssc_2 , butterFly1_10_and_ssc_3});
  assign butterFly1_11_mux_nl = MUX_s_1_2_2((z_out_87[31]), (z_out_83[31]), butterFly1_11_and_ssc_3);
  assign butterFly1_11_and_4_rmff = butterFly1_11_mux_nl & (~(butterFly1_11_and_ssc
      | butterFly1_11_and_ssc_2));
  assign butterFly1_11_and_1_nl = (modulo_sub_base_11_sva_1[31]) & (~ (fsm_output[6]));
  assign butterFly1_11_mux1h_2_rmff = MUX1HOT_v_31_4_2((modulo_sub_base_11_sva_1[30:0]),
      (z_out_87[30:0]), (modulo_sub_base_43_sva_1[30:0]), (z_out_83[30:0]), {butterFly1_11_and_ssc
      , butterFly1_11_and_1_nl , butterFly1_11_and_ssc_2 , butterFly1_11_and_ssc_3});
  assign butterFly1_12_mux_nl = MUX_s_1_2_2((z_out_61[31]), (z_out_84[31]), butterFly1_12_and_ssc_3);
  assign butterFly1_12_and_4_rmff = butterFly1_12_mux_nl & (~(butterFly1_12_and_ssc
      | butterFly1_12_and_ssc_2));
  assign butterFly1_12_and_1_nl = (modulo_sub_base_12_sva_1[31]) & (~ (fsm_output[6]));
  assign butterFly1_12_mux1h_2_rmff = MUX1HOT_v_31_4_2((modulo_sub_base_12_sva_1[30:0]),
      (z_out_61[30:0]), (modulo_sub_base_44_sva_1[30:0]), (z_out_84[30:0]), {butterFly1_12_and_ssc
      , butterFly1_12_and_1_nl , butterFly1_12_and_ssc_2 , butterFly1_12_and_ssc_3});
  assign butterFly1_13_mux_nl = MUX_s_1_2_2((z_out_100[31]), (z_out_82[31]), butterFly1_13_and_ssc_3);
  assign butterFly1_13_and_4_rmff = butterFly1_13_mux_nl & (~(butterFly1_13_and_ssc
      | butterFly1_13_and_ssc_2));
  assign butterFly1_13_and_1_nl = (modulo_sub_base_13_sva_1[31]) & (~ (fsm_output[6]));
  assign butterFly1_13_mux1h_2_rmff = MUX1HOT_v_31_4_2((modulo_sub_base_13_sva_1[30:0]),
      (z_out_100[30:0]), (modulo_sub_base_45_sva_1[30:0]), (z_out_82[30:0]), {butterFly1_13_and_ssc
      , butterFly1_13_and_1_nl , butterFly1_13_and_ssc_2 , butterFly1_13_and_ssc_3});
  assign butterFly1_14_mux_nl = MUX_s_1_2_2((z_out_88[31]), (z_out_80[31]), butterFly1_14_and_ssc_3);
  assign butterFly1_14_and_4_rmff = butterFly1_14_mux_nl & (~(butterFly1_14_and_ssc
      | butterFly1_14_and_ssc_2));
  assign butterFly1_14_and_1_nl = (modulo_sub_base_14_sva_1[31]) & (~ (fsm_output[6]));
  assign butterFly1_14_mux1h_2_rmff = MUX1HOT_v_31_4_2((modulo_sub_base_14_sva_1[30:0]),
      (z_out_88[30:0]), (modulo_sub_base_46_sva_1[30:0]), (z_out_80[30:0]), {butterFly1_14_and_ssc
      , butterFly1_14_and_1_nl , butterFly1_14_and_ssc_2 , butterFly1_14_and_ssc_3});
  assign butterFly1_15_mux_nl = MUX_s_1_2_2((z_out_86[31]), (z_out_72[31]), butterFly1_15_and_ssc_3);
  assign butterFly1_15_and_4_rmff = butterFly1_15_mux_nl & (~(butterFly1_15_and_ssc
      | butterFly1_15_and_ssc_2));
  assign butterFly1_15_and_1_nl = (modulo_sub_base_15_sva_1[31]) & (~ (fsm_output[6]));
  assign butterFly1_15_mux1h_2_rmff = MUX1HOT_v_31_4_2((modulo_sub_base_15_sva_1[30:0]),
      (z_out_86[30:0]), (modulo_sub_base_47_sva_1[30:0]), (z_out_72[30:0]), {butterFly1_15_and_ssc
      , butterFly1_15_and_1_nl , butterFly1_15_and_ssc_2 , butterFly1_15_and_ssc_3});
  assign yt_rsc_0_0_i_d_d_pff = MUX_v_32_2_2(modulo_add_qr_lpi_3_dfm_1, modulo_add_32_qr_lpi_3_dfm_1,
      fsm_output[6]);
  assign yt_rsc_0_0_i_radr_d_pff = MUX_v_4_2_2((INNER_LOOP2_r_9_4_sva_4_0[3:0]),
      (INNER_LOOP4_r_9_4_sva_4_0[3:0]), fsm_output[8]);
  assign yt_rsc_0_0_i_wadr_d_pff = MUX_v_4_2_2(INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_290_itm_11,
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_321_itm_11, fsm_output[6]);
  assign yt_rsc_0_0_i_we_d_pff = (and_dcpl_142 & (fsm_output[6])) | (and_dcpl_144
      & (fsm_output[2]));
  assign yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_pff = (and_dcpl_146 & (fsm_output[4]))
      | (and_dcpl_148 & (fsm_output[8]));
  assign yt_rsc_0_1_i_d_d_pff = MUX_v_32_2_2(modulo_add_1_qr_lpi_3_dfm_1, modulo_add_33_qr_lpi_3_dfm_1,
      fsm_output[6]);
  assign yt_rsc_0_2_i_d_d_pff = MUX_v_32_2_2(modulo_add_2_qr_lpi_3_dfm_1, modulo_add_34_qr_lpi_3_dfm_1,
      fsm_output[6]);
  assign yt_rsc_0_3_i_d_d_pff = MUX_v_32_2_2(modulo_add_3_qr_lpi_3_dfm_1, modulo_add_35_qr_lpi_3_dfm_1,
      fsm_output[6]);
  assign yt_rsc_0_4_i_d_d_pff = MUX_v_32_2_2(modulo_add_4_qr_lpi_3_dfm_1, modulo_add_36_qr_lpi_3_dfm_1,
      fsm_output[6]);
  assign yt_rsc_0_5_i_d_d_pff = MUX_v_32_2_2(modulo_add_5_qr_lpi_3_dfm_1, modulo_add_37_qr_lpi_3_dfm_1,
      fsm_output[6]);
  assign yt_rsc_0_6_i_d_d_pff = MUX_v_32_2_2(modulo_add_6_qr_lpi_3_dfm_1, modulo_add_38_qr_lpi_3_dfm_1,
      fsm_output[6]);
  assign yt_rsc_0_7_i_d_d_pff = MUX_v_32_2_2(modulo_add_7_qr_lpi_3_dfm_1, modulo_add_39_qr_lpi_3_dfm_1,
      fsm_output[6]);
  assign yt_rsc_0_8_i_d_d_pff = MUX_v_32_2_2(modulo_add_8_qr_lpi_3_dfm_1, modulo_add_40_qr_lpi_3_dfm_1,
      fsm_output[6]);
  assign yt_rsc_0_9_i_d_d_pff = MUX_v_32_2_2(modulo_add_9_qr_lpi_3_dfm_1, modulo_add_41_qr_lpi_3_dfm_1,
      fsm_output[6]);
  assign yt_rsc_0_10_i_d_d_pff = MUX_v_32_2_2(modulo_add_10_qr_lpi_3_dfm_1, modulo_add_42_qr_lpi_3_dfm_1,
      fsm_output[6]);
  assign yt_rsc_0_11_i_d_d_pff = MUX_v_32_2_2(modulo_add_11_qr_lpi_3_dfm_1, modulo_add_43_qr_lpi_3_dfm_1,
      fsm_output[6]);
  assign yt_rsc_0_12_i_d_d_pff = MUX_v_32_2_2(modulo_add_12_qr_lpi_3_dfm_1, modulo_add_44_qr_lpi_3_dfm_1,
      fsm_output[6]);
  assign yt_rsc_0_13_i_d_d_pff = MUX_v_32_2_2(modulo_add_13_qr_lpi_3_dfm_1, modulo_add_45_qr_lpi_3_dfm_1,
      fsm_output[6]);
  assign yt_rsc_0_14_i_d_d_pff = MUX_v_32_2_2(modulo_add_14_qr_lpi_3_dfm_1, modulo_add_46_qr_lpi_3_dfm_1,
      fsm_output[6]);
  assign yt_rsc_0_15_i_d_d_pff = MUX_v_32_2_2(modulo_add_15_qr_lpi_3_dfm_1, modulo_add_47_qr_lpi_3_dfm_1,
      fsm_output[6]);
  assign yt_rsc_0_16_i_wadr_d_pff = MUX_v_4_2_2(INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_306_itm_11,
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_337_itm_11, fsm_output[6]);
  assign yt_rsc_0_16_i_we_d_pff = (and_dcpl_150 & (fsm_output[6])) | (and_dcpl_152
      & (fsm_output[2]));
  assign yt_rsc_1_0_i_d_d = {butterFly1_and_4_rmff , butterFly1_mux1h_2_rmff};
  assign yt_rsc_1_0_i_wadr_d_pff = MUX_v_4_2_2(INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_385_itm_10,
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_416_itm_10, fsm_output[6]);
  assign yt_rsc_1_0_i_we_d_pff = (and_dcpl_153 & (fsm_output[6])) | (and_dcpl_154
      & (fsm_output[2]));
  assign yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_pff = (and_dcpl_156 & (fsm_output[4]))
      | (and_dcpl_158 & (fsm_output[8]));
  assign yt_rsc_1_1_i_d_d = {butterFly1_1_and_4_rmff , butterFly1_1_mux1h_2_rmff};
  assign yt_rsc_1_2_i_d_d = {butterFly1_2_and_4_rmff , butterFly1_2_mux1h_2_rmff};
  assign yt_rsc_1_3_i_d_d = {butterFly1_3_and_4_rmff , butterFly1_3_mux1h_2_rmff};
  assign yt_rsc_1_4_i_d_d = {butterFly1_4_and_4_rmff , butterFly1_4_mux1h_2_rmff};
  assign yt_rsc_1_5_i_d_d = {butterFly1_5_and_4_rmff , butterFly1_5_mux1h_2_rmff};
  assign yt_rsc_1_6_i_d_d = {butterFly1_6_and_4_rmff , butterFly1_6_mux1h_2_rmff};
  assign yt_rsc_1_7_i_d_d = {butterFly1_7_and_4_rmff , butterFly1_7_mux1h_2_rmff};
  assign yt_rsc_1_8_i_d_d = {butterFly1_8_and_4_rmff , butterFly1_8_mux1h_2_rmff};
  assign yt_rsc_1_9_i_d_d = {butterFly1_9_and_4_rmff , butterFly1_9_mux1h_2_rmff};
  assign yt_rsc_1_10_i_d_d = {butterFly1_10_and_4_rmff , butterFly1_10_mux1h_2_rmff};
  assign yt_rsc_1_11_i_d_d = {butterFly1_11_and_4_rmff , butterFly1_11_mux1h_2_rmff};
  assign yt_rsc_1_12_i_d_d = {butterFly1_12_and_4_rmff , butterFly1_12_mux1h_2_rmff};
  assign yt_rsc_1_13_i_d_d = {butterFly1_13_and_4_rmff , butterFly1_13_mux1h_2_rmff};
  assign yt_rsc_1_14_i_d_d = {butterFly1_14_and_4_rmff , butterFly1_14_mux1h_2_rmff};
  assign yt_rsc_1_15_i_d_d = {butterFly1_15_and_4_rmff , butterFly1_15_mux1h_2_rmff};
  assign yt_rsc_1_16_i_d_d = {butterFly1_and_4_rmff , butterFly1_mux1h_2_rmff};
  assign yt_rsc_1_16_i_wadr_d_pff = MUX_v_4_2_2(INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_401_itm_10,
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_432_itm_10, fsm_output[6]);
  assign yt_rsc_1_16_i_we_d_pff = (and_dcpl_159 & (fsm_output[6])) | (and_dcpl_160
      & (fsm_output[2]));
  assign yt_rsc_1_17_i_d_d = {butterFly1_1_and_4_rmff , butterFly1_1_mux1h_2_rmff};
  assign yt_rsc_1_18_i_d_d = {butterFly1_2_and_4_rmff , butterFly1_2_mux1h_2_rmff};
  assign yt_rsc_1_19_i_d_d = {butterFly1_3_and_4_rmff , butterFly1_3_mux1h_2_rmff};
  assign yt_rsc_1_20_i_d_d = {butterFly1_4_and_4_rmff , butterFly1_4_mux1h_2_rmff};
  assign yt_rsc_1_21_i_d_d = {butterFly1_5_and_4_rmff , butterFly1_5_mux1h_2_rmff};
  assign yt_rsc_1_22_i_d_d = {butterFly1_6_and_4_rmff , butterFly1_6_mux1h_2_rmff};
  assign yt_rsc_1_23_i_d_d = {butterFly1_7_and_4_rmff , butterFly1_7_mux1h_2_rmff};
  assign yt_rsc_1_24_i_d_d = {butterFly1_8_and_4_rmff , butterFly1_8_mux1h_2_rmff};
  assign yt_rsc_1_25_i_d_d = {butterFly1_9_and_4_rmff , butterFly1_9_mux1h_2_rmff};
  assign yt_rsc_1_26_i_d_d = {butterFly1_10_and_4_rmff , butterFly1_10_mux1h_2_rmff};
  assign yt_rsc_1_27_i_d_d = {butterFly1_11_and_4_rmff , butterFly1_11_mux1h_2_rmff};
  assign yt_rsc_1_28_i_d_d = {butterFly1_12_and_4_rmff , butterFly1_12_mux1h_2_rmff};
  assign yt_rsc_1_29_i_d_d = {butterFly1_13_and_4_rmff , butterFly1_13_mux1h_2_rmff};
  assign yt_rsc_1_30_i_d_d = {butterFly1_14_and_4_rmff , butterFly1_14_mux1h_2_rmff};
  assign yt_rsc_1_31_i_d_d = {butterFly1_15_and_4_rmff , butterFly1_15_mux1h_2_rmff};
  always @(posedge clk) begin
    if ( core_wen & ((fsm_output[9]) | (fsm_output[0])) ) begin
      p_sva <= p_rsci_idat;
    end
  end
  always @(posedge clk) begin
    if ( core_wen ) begin
      c_1_sva <= (operator_20_false_acc_cse_sva[0]) | (~ (fsm_output[4]));
      reg_xt_rsc_0_0_i_s_raddr_core_cse <= MUX_v_4_2_2((INNER_LOOP1_r_9_4_sva_4_0[3:0]),
          (INNER_LOOP3_r_9_4_sva_4_0[3:0]), fsm_output[6]);
      reg_xt_rsc_0_0_i_s_waddr_core_cse <= MUX_v_4_2_2(INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_290_itm_10,
          INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_321_itm_10, fsm_output[8]);
      reg_xt_rsc_0_0_i_s_dout_core_cse <= MUX1HOT_v_32_3_2(modulo_add_base_16_sva_1,
          z_out_104, modulo_add_base_48_sva_1, {butterFly1_f1_butterFly1_f1_nor_nl
          , butterFly1_f1_or_nl , butterFly1_f1_and_7_nl});
      reg_xt_rsc_0_1_i_s_dout_core_cse <= MUX1HOT_v_32_3_2(modulo_add_base_17_sva_1,
          z_out_105, modulo_add_base_49_sva_1, {butterFly1_f2_butterFly1_f2_nor_nl
          , butterFly1_f2_or_nl , butterFly1_f2_and_7_nl});
      reg_xt_rsc_0_2_i_s_dout_core_cse <= MUX1HOT_v_32_3_2(modulo_add_base_18_sva_1,
          z_out_106, modulo_add_base_50_sva_1, {butterFly1_1_f1_butterFly1_1_f1_nor_nl
          , butterFly1_1_f1_or_nl , butterFly1_1_f1_and_7_nl});
      reg_xt_rsc_0_3_i_s_dout_core_cse <= MUX1HOT_v_32_3_2(modulo_add_base_19_sva_1,
          z_out_107, modulo_add_base_51_sva_1, {butterFly1_1_f2_butterFly1_1_f2_nor_nl
          , butterFly1_1_f2_or_nl , butterFly1_1_f2_and_7_nl});
      reg_xt_rsc_0_4_i_s_dout_core_cse <= MUX1HOT_v_32_3_2(modulo_add_base_20_sva_1,
          z_out_108, modulo_add_base_52_sva_1, {butterFly1_2_f1_butterFly1_2_f1_nor_nl
          , butterFly1_2_f1_or_nl , butterFly1_2_f1_and_7_nl});
      reg_xt_rsc_0_5_i_s_dout_core_cse <= MUX1HOT_v_32_4_2(modulo_add_base_21_sva_1,
          z_out_113, modulo_add_base_53_sva_1, z_out_109, {butterFly1_2_f2_butterFly1_2_f2_nor_nl
          , butterFly1_2_f2_and_6_nl , butterFly1_2_f2_and_7_nl , butterFly1_2_f2_and_8_nl});
      reg_xt_rsc_0_6_i_s_dout_core_cse <= MUX1HOT_v_32_4_2(modulo_add_base_22_sva_1,
          z_out_115, modulo_add_base_54_sva_1, z_out_110, {butterFly1_3_f1_butterFly1_3_f1_nor_nl
          , butterFly1_3_f1_and_6_nl , butterFly1_3_f1_and_7_nl , butterFly1_3_f1_and_8_nl});
      reg_xt_rsc_0_7_i_s_dout_core_cse <= MUX1HOT_v_32_4_2(modulo_add_base_23_sva_1,
          z_out_117, modulo_add_base_55_sva_1, z_out_111, {butterFly1_3_f2_butterFly1_3_f2_nor_nl
          , butterFly1_3_f2_and_6_nl , butterFly1_3_f2_and_7_nl , butterFly1_3_f2_and_8_nl});
      reg_xt_rsc_0_8_i_s_dout_core_cse <= MUX1HOT_v_32_4_2(modulo_add_base_24_sva_1,
          z_out_119, modulo_add_base_56_sva_1, z_out_112, {butterFly1_4_f1_butterFly1_4_f1_nor_nl
          , butterFly1_4_f1_and_6_nl , butterFly1_4_f1_and_7_nl , butterFly1_4_f1_and_8_nl});
      reg_xt_rsc_0_9_i_s_dout_core_cse <= MUX1HOT_v_32_4_2(modulo_add_base_25_sva_1,
          z_out_121, modulo_add_base_57_sva_1, z_out_113, {butterFly1_4_f2_butterFly1_4_f2_nor_nl
          , butterFly1_4_f2_and_6_nl , butterFly1_4_f2_and_7_nl , butterFly1_4_f2_and_8_nl});
      reg_xt_rsc_0_10_i_s_dout_core_cse <= MUX1HOT_v_32_4_2(modulo_add_base_26_sva_1,
          z_out_123, modulo_add_base_58_sva_1, z_out_114, {butterFly1_5_f1_butterFly1_5_f1_nor_nl
          , butterFly1_5_f1_and_6_nl , butterFly1_5_f1_and_7_nl , butterFly1_5_f1_and_8_nl});
      reg_xt_rsc_0_11_i_s_dout_core_cse <= MUX1HOT_v_32_4_2(modulo_add_base_27_sva_1,
          z_out_125, modulo_add_base_59_sva_1, z_out_115, {butterFly1_5_f2_butterFly1_5_f2_nor_nl
          , butterFly1_5_f2_and_6_nl , butterFly1_5_f2_and_7_nl , butterFly1_5_f2_and_8_nl});
      reg_xt_rsc_0_12_i_s_dout_core_cse <= MUX1HOT_v_32_4_2(modulo_add_base_28_sva_1,
          z_out_127, modulo_add_base_60_sva_1, z_out_117, {butterFly1_6_f1_butterFly1_6_f1_nor_nl
          , butterFly1_6_f1_and_6_nl , butterFly1_6_f1_and_7_nl , butterFly1_6_f1_and_8_nl});
      reg_xt_rsc_0_13_i_s_dout_core_cse <= MUX1HOT_v_32_4_2(modulo_add_base_29_sva_1,
          z_out_129, modulo_add_base_61_sva_1, z_out_119, {butterFly1_6_f2_butterFly1_6_f2_nor_nl
          , butterFly1_6_f2_and_6_nl , butterFly1_6_f2_and_7_nl , butterFly1_6_f2_and_8_nl});
      reg_xt_rsc_0_14_i_s_dout_core_cse <= MUX1HOT_v_32_4_2(modulo_add_base_30_sva_1,
          z_out_130, modulo_add_base_62_sva_1, z_out_121, {butterFly1_7_f1_butterFly1_7_f1_nor_nl
          , butterFly1_7_f1_and_6_nl , butterFly1_7_f1_and_7_nl , butterFly1_7_f1_and_8_nl});
      reg_xt_rsc_0_15_i_s_dout_core_cse <= MUX1HOT_v_32_4_2(modulo_add_base_31_sva_1,
          z_out_131, modulo_add_base_63_sva_1, z_out_123, {butterFly1_7_f2_butterFly1_7_f2_nor_nl
          , butterFly1_7_f2_and_6_nl , butterFly1_7_f2_and_7_nl , butterFly1_7_f2_and_8_nl});
      reg_xt_rsc_0_16_i_s_waddr_core_cse <= MUX_v_4_2_2(INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_306_itm_10,
          INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_337_itm_10, fsm_output[8]);
      reg_twiddle_rsc_0_0_i_s_raddr_core_3_0_cse <= MUX1HOT_v_4_4_2((INNER_LOOP1_tw_and_psp_sva_1[3:0]),
          INNER_LOOP2_tw_and_nl, (INNER_LOOP3_r_9_4_sva_4_0[3:0]), (INNER_LOOP4_r_9_4_sva_4_0[3:0]),
          {(fsm_output[2]) , (fsm_output[4]) , (fsm_output[6]) , (fsm_output[8])});
      reg_twiddle_rsc_0_1_i_s_raddr_core_4_0_cse <= butterFly2_1_tw_butterFly2_1_tw_mux_cse;
      reg_xt_rsc_1_0_i_s_dout_core_cse_rsp_0 <= butterFly1_f1_mux_4_nl & (~(butterFly1_f1_and_ssc
          | butterFly1_f1_and_ssc_2));
      reg_xt_rsc_1_0_i_s_dout_core_cse_rsp_1 <= MUX1HOT_v_31_4_2((modulo_sub_base_16_sva_1[30:0]),
          (z_out_61[30:0]), (modulo_sub_base_48_sva_1[30:0]), (z_out_84[30:0]), {butterFly1_f1_and_ssc
          , butterFly1_f1_and_1_nl , butterFly1_f1_and_ssc_2 , butterFly1_f1_and_ssc_3});
      reg_xt_rsc_1_1_i_s_dout_core_cse_rsp_0 <= butterFly1_f2_mux_5_nl & (~(butterFly1_f2_and_ssc
          | butterFly1_f2_and_ssc_2));
      reg_xt_rsc_1_1_i_s_dout_core_cse_rsp_1 <= MUX1HOT_v_31_4_2((modulo_sub_base_17_sva_1[30:0]),
          (z_out_88[30:0]), (modulo_sub_base_49_sva_1[30:0]), (z_out_83[30:0]), {butterFly1_f2_and_ssc
          , butterFly1_f2_and_1_nl , butterFly1_f2_and_ssc_2 , butterFly1_f2_and_ssc_3});
      reg_xt_rsc_1_2_i_s_dout_core_cse_rsp_0 <= butterFly1_1_f1_mux_4_nl & (~(butterFly1_1_f1_and_ssc
          | butterFly1_1_f1_and_ssc_2));
      reg_xt_rsc_1_2_i_s_dout_core_cse_rsp_1 <= MUX1HOT_v_31_4_2((modulo_sub_base_18_sva_1[30:0]),
          (z_out_77[30:0]), (modulo_sub_base_50_sva_1[30:0]), (z_out_82[30:0]), {butterFly1_1_f1_and_ssc
          , butterFly1_1_f1_and_1_nl , butterFly1_1_f1_and_ssc_2 , butterFly1_1_f1_and_ssc_3});
      reg_xt_rsc_1_3_i_s_dout_core_cse_rsp_0 <= butterFly1_1_f2_mux_4_nl & (~(butterFly1_1_f2_and_ssc
          | butterFly1_1_f2_and_ssc_2));
      reg_xt_rsc_1_3_i_s_dout_core_cse_rsp_1 <= MUX1HOT_v_31_4_2((modulo_sub_base_19_sva_1[30:0]),
          (z_out_85[30:0]), (modulo_sub_base_51_sva_1[30:0]), (z_out_81[30:0]), {butterFly1_1_f2_and_ssc
          , butterFly1_1_f2_and_1_nl , butterFly1_1_f2_and_ssc_2 , butterFly1_1_f2_and_ssc_3});
      reg_xt_rsc_1_4_i_s_dout_core_cse_rsp_0 <= butterFly1_2_f1_mux_4_nl & (~(butterFly1_2_f1_and_ssc
          | butterFly1_2_f1_and_ssc_2));
      reg_xt_rsc_1_4_i_s_dout_core_cse_rsp_1 <= MUX1HOT_v_31_4_2((modulo_sub_base_20_sva_1[30:0]),
          (z_out_73[30:0]), (modulo_sub_base_52_sva_1[30:0]), (z_out_80[30:0]), {butterFly1_2_f1_and_ssc
          , butterFly1_2_f1_and_1_nl , butterFly1_2_f1_and_ssc_2 , butterFly1_2_f1_and_ssc_3});
      reg_xt_rsc_1_5_i_s_dout_core_cse_rsp_0 <= butterFly1_2_f2_mux_4_nl & (~(butterFly1_2_f2_and_ssc
          | butterFly1_2_f2_and_ssc_2));
      reg_xt_rsc_1_5_i_s_dout_core_cse_rsp_1 <= MUX1HOT_v_31_4_2((modulo_sub_base_21_sva_1[30:0]),
          (z_out_75[30:0]), (modulo_sub_base_53_sva_1[30:0]), (z_out_71[30:0]), {butterFly1_2_f2_and_ssc
          , butterFly1_2_f2_and_1_nl , butterFly1_2_f2_and_ssc_2 , butterFly1_2_f2_and_ssc_3});
      reg_xt_rsc_1_6_i_s_dout_core_cse_rsp_0 <= butterFly1_3_f1_mux_4_nl & (~(butterFly1_3_f1_and_ssc
          | butterFly1_3_f1_and_ssc_2));
      reg_xt_rsc_1_6_i_s_dout_core_cse_rsp_1 <= MUX1HOT_v_31_4_2((modulo_sub_base_22_sva_1[30:0]),
          (z_out_86[30:0]), (modulo_sub_base_54_sva_1[30:0]), (z_out_72[30:0]), {butterFly1_3_f1_and_ssc
          , butterFly1_3_f1_and_1_nl , butterFly1_3_f1_and_ssc_2 , butterFly1_3_f1_and_ssc_3});
      reg_xt_rsc_1_7_i_s_dout_core_cse_rsp_0 <= butterFly1_3_f2_mux_4_nl & (~(butterFly1_3_f2_and_ssc
          | butterFly1_3_f2_and_ssc_2));
      reg_xt_rsc_1_7_i_s_dout_core_cse_rsp_1 <= MUX1HOT_v_31_4_2((modulo_sub_base_23_sva_1[30:0]),
          (z_out_87[30:0]), (modulo_sub_base_55_sva_1[30:0]), (z_out_74[30:0]), {butterFly1_3_f2_and_ssc
          , butterFly1_3_f2_and_1_nl , butterFly1_3_f2_and_ssc_2 , butterFly1_3_f2_and_ssc_3});
      reg_xt_rsc_1_8_i_s_dout_core_cse_rsp_0 <= butterFly1_4_f1_mux_4_nl & (~(butterFly1_4_f1_and_ssc
          | butterFly1_4_f1_and_ssc_2));
      reg_xt_rsc_1_8_i_s_dout_core_cse_rsp_1 <= MUX1HOT_v_31_4_2((modulo_sub_base_24_sva_1[30:0]),
          (z_out_79[30:0]), (modulo_sub_base_56_sva_1[30:0]), (z_out_76[30:0]), {butterFly1_4_f1_and_ssc
          , butterFly1_4_f1_and_1_nl , butterFly1_4_f1_and_ssc_2 , butterFly1_4_f1_and_ssc_3});
      reg_xt_rsc_1_9_i_s_dout_core_cse_rsp_0 <= butterFly1_4_f2_mux_4_nl & (~(butterFly1_4_f2_and_ssc
          | butterFly1_4_f2_and_ssc_2));
      reg_xt_rsc_1_9_i_s_dout_core_cse_rsp_1 <= MUX1HOT_v_31_4_2((modulo_sub_base_25_sva_1[30:0]),
          (z_out_100[30:0]), (modulo_sub_base_57_sva_1[30:0]), (z_out_78[30:0]),
          {butterFly1_4_f2_and_ssc , butterFly1_4_f2_and_1_nl , butterFly1_4_f2_and_ssc_2
          , butterFly1_4_f2_and_ssc_3});
      reg_xt_rsc_1_10_i_s_dout_core_cse_rsp_0 <= butterFly1_5_f1_mux_4_nl & (~(butterFly1_5_f1_and_ssc
          | butterFly1_5_f1_and_ssc_2));
      reg_xt_rsc_1_10_i_s_dout_core_cse_rsp_1 <= MUX1HOT_v_31_4_2((modulo_sub_base_26_sva_1[30:0]),
          (z_out_99[30:0]), (modulo_sub_base_58_sva_1[30:0]), (z_out_101[30:0]),
          {butterFly1_5_f1_and_ssc , butterFly1_5_f1_and_1_nl , butterFly1_5_f1_and_ssc_2
          , butterFly1_5_f1_and_ssc_3});
      reg_xt_rsc_1_11_i_s_dout_core_cse_rsp_0 <= butterFly1_5_f2_mux_4_nl & (~(butterFly1_5_f2_and_ssc
          | butterFly1_5_f2_and_ssc_2));
      reg_xt_rsc_1_11_i_s_dout_core_cse_rsp_1 <= MUX1HOT_v_31_4_2((modulo_sub_base_27_sva_1[30:0]),
          (z_out_97[30:0]), (modulo_sub_base_59_sva_1[30:0]), (z_out_98[30:0]), {butterFly1_5_f2_and_ssc
          , butterFly1_5_f2_and_1_nl , butterFly1_5_f2_and_ssc_2 , butterFly1_5_f2_and_ssc_3});
      reg_xt_rsc_1_12_i_s_dout_core_cse_rsp_0 <= butterFly1_6_f1_mux_4_nl & (~(butterFly1_6_f1_and_ssc
          | butterFly1_6_f1_and_ssc_2));
      reg_xt_rsc_1_12_i_s_dout_core_cse_rsp_1 <= MUX1HOT_v_31_4_2((modulo_sub_base_28_sva_1[30:0]),
          (z_out_95[30:0]), (modulo_sub_base_60_sva_1[30:0]), (z_out_96[30:0]), {butterFly1_6_f1_and_ssc
          , butterFly1_6_f1_and_1_nl , butterFly1_6_f1_and_ssc_2 , butterFly1_6_f1_and_ssc_3});
      reg_xt_rsc_1_13_i_s_dout_core_cse_rsp_0 <= butterFly1_6_f2_mux_4_nl & (~(butterFly1_6_f2_and_ssc
          | butterFly1_6_f2_and_ssc_2));
      reg_xt_rsc_1_13_i_s_dout_core_cse_rsp_1 <= MUX1HOT_v_31_4_2((modulo_sub_base_29_sva_1[30:0]),
          (z_out_93[30:0]), (modulo_sub_base_61_sva_1[30:0]), (z_out_94[30:0]), {butterFly1_6_f2_and_ssc
          , butterFly1_6_f2_and_1_nl , butterFly1_6_f2_and_ssc_2 , butterFly1_6_f2_and_ssc_3});
      reg_xt_rsc_1_14_i_s_dout_core_cse_rsp_0 <= butterFly1_7_f1_mux_4_nl & (~(butterFly1_7_f1_and_ssc
          | butterFly1_7_f1_and_ssc_2));
      reg_xt_rsc_1_14_i_s_dout_core_cse_rsp_1 <= MUX1HOT_v_31_4_2((modulo_sub_base_30_sva_1[30:0]),
          (z_out_91[30:0]), (modulo_sub_base_62_sva_1[30:0]), (z_out_92[30:0]), {butterFly1_7_f1_and_ssc
          , butterFly1_7_f1_and_1_nl , butterFly1_7_f1_and_ssc_2 , butterFly1_7_f1_and_ssc_3});
      reg_xt_rsc_1_15_i_s_dout_core_cse_rsp_0 <= butterFly1_7_f2_mux_4_nl & (~(butterFly1_7_f2_and_ssc
          | butterFly1_7_f2_and_ssc_2));
      reg_xt_rsc_1_15_i_s_dout_core_cse_rsp_1 <= MUX1HOT_v_31_4_2((modulo_sub_base_31_sva_1[30:0]),
          (z_out_89[30:0]), (modulo_sub_base_63_sva_1[30:0]), (z_out_90[30:0]), {butterFly1_7_f2_and_ssc
          , butterFly1_7_f2_and_1_nl , butterFly1_7_f2_and_ssc_2 , butterFly1_7_f2_and_ssc_3});
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      reg_yt_rsc_0_0_cgo_cse <= 1'b0;
      reg_yt_rsc_0_16_cgo_cse <= 1'b0;
      reg_yt_rsc_1_0_cgo_cse <= 1'b0;
      reg_yt_rsc_1_16_cgo_cse <= 1'b0;
      reg_xt_rsc_0_0_i_oswt_cse <= 1'b0;
      reg_xt_rsc_0_0_i_oswt_1_cse <= 1'b0;
      reg_xt_rsc_0_16_i_oswt_1_cse <= 1'b0;
      reg_xt_rsc_1_0_i_oswt_cse <= 1'b0;
      reg_twiddle_rsc_0_0_i_oswt_cse <= 1'b0;
      reg_twiddle_rsc_0_1_i_oswt_cse <= 1'b0;
      reg_twiddle_rsc_0_2_i_oswt_cse <= 1'b0;
      reg_twiddle_rsc_0_3_i_oswt_cse <= 1'b0;
      reg_twiddle_rsc_0_4_i_oswt_cse <= 1'b0;
      reg_twiddle_rsc_0_5_i_oswt_cse <= 1'b0;
      reg_twiddle_rsc_0_6_i_oswt_cse <= 1'b0;
      reg_twiddle_rsc_0_7_i_oswt_cse <= 1'b0;
      reg_twiddle_rsc_0_8_i_oswt_cse <= 1'b0;
      twiddle_h_rsc_0_0_i_s_raddr_core_4 <= 1'b0;
      reg_xt_rsc_triosy_1_31_obj_iswt0_cse <= 1'b0;
      reg_ensig_cgo_cse <= 1'b0;
      reg_ensig_cgo_17_cse <= 1'b0;
      butterFly2_19_tw_asn_itm <= 2'b00;
      INNER_LOOP1_stage_0 <= 1'b0;
      INNER_LOOP1_r_9_4_sva_4_0 <= 5'b00000;
      INNER_LOOP1_stage_0_2 <= 1'b0;
      INNER_LOOP1_stage_0_3 <= 1'b0;
      INNER_LOOP1_stage_0_4 <= 1'b0;
      INNER_LOOP1_stage_0_5 <= 1'b0;
      INNER_LOOP1_stage_0_6 <= 1'b0;
      INNER_LOOP1_stage_0_7 <= 1'b0;
      INNER_LOOP1_stage_0_8 <= 1'b0;
      INNER_LOOP1_stage_0_9 <= 1'b0;
      INNER_LOOP1_stage_0_10 <= 1'b0;
      INNER_LOOP1_stage_0_11 <= 1'b0;
      INNER_LOOP1_stage_0_12 <= 1'b0;
      INNER_LOOP1_stage_0_13 <= 1'b0;
      INNER_LOOP2_stage_0 <= 1'b0;
      INNER_LOOP2_r_9_4_sva_4_0 <= 5'b00000;
      INNER_LOOP2_stage_0_2 <= 1'b0;
      INNER_LOOP2_stage_0_3 <= 1'b0;
      INNER_LOOP2_stage_0_4 <= 1'b0;
      INNER_LOOP2_stage_0_5 <= 1'b0;
      INNER_LOOP2_stage_0_6 <= 1'b0;
      INNER_LOOP2_stage_0_7 <= 1'b0;
      INNER_LOOP2_stage_0_8 <= 1'b0;
      INNER_LOOP2_stage_0_9 <= 1'b0;
      INNER_LOOP2_stage_0_10 <= 1'b0;
      INNER_LOOP2_stage_0_11 <= 1'b0;
      INNER_LOOP3_stage_0 <= 1'b0;
      INNER_LOOP3_r_9_4_sva_4_0 <= 5'b00000;
      INNER_LOOP3_stage_0_2 <= 1'b0;
      INNER_LOOP3_stage_0_3 <= 1'b0;
      INNER_LOOP3_stage_0_4 <= 1'b0;
      INNER_LOOP3_stage_0_5 <= 1'b0;
      INNER_LOOP3_stage_0_6 <= 1'b0;
      INNER_LOOP3_stage_0_7 <= 1'b0;
      INNER_LOOP3_stage_0_8 <= 1'b0;
      INNER_LOOP3_stage_0_9 <= 1'b0;
      INNER_LOOP3_stage_0_10 <= 1'b0;
      INNER_LOOP3_stage_0_11 <= 1'b0;
      INNER_LOOP3_stage_0_12 <= 1'b0;
      INNER_LOOP3_stage_0_13 <= 1'b0;
      INNER_LOOP4_stage_0 <= 1'b0;
      INNER_LOOP4_r_9_4_sva_4_0 <= 5'b00000;
      INNER_LOOP4_stage_0_2 <= 1'b0;
      INNER_LOOP4_stage_0_3 <= 1'b0;
      INNER_LOOP4_stage_0_4 <= 1'b0;
      INNER_LOOP4_stage_0_5 <= 1'b0;
      INNER_LOOP4_stage_0_6 <= 1'b0;
      INNER_LOOP4_stage_0_7 <= 1'b0;
      INNER_LOOP4_stage_0_8 <= 1'b0;
      INNER_LOOP4_stage_0_9 <= 1'b0;
      INNER_LOOP4_stage_0_10 <= 1'b0;
      INNER_LOOP4_stage_0_11 <= 1'b0;
    end
    else if ( core_wen ) begin
      reg_yt_rsc_0_0_cgo_cse <= or_67_rmff;
      reg_yt_rsc_0_16_cgo_cse <= or_119_rmff;
      reg_yt_rsc_1_0_cgo_cse <= or_153_rmff;
      reg_yt_rsc_1_16_cgo_cse <= or_204_rmff;
      reg_xt_rsc_0_0_i_oswt_cse <= (INNER_LOOP3_stage_0 & (~ (INNER_LOOP3_r_9_4_sva_4_0[4]))
          & (fsm_output[6])) | (INNER_LOOP1_stage_0 & (~ (INNER_LOOP1_r_9_4_sva_4_0[4]))
          & (fsm_output[2]));
      reg_xt_rsc_0_0_i_oswt_1_cse <= ((~ INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_10)
          & INNER_LOOP2_stage_0_11 & (fsm_output[4])) | (INNER_LOOP4_stage_0_11 &
          (~ INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_10) & (fsm_output[8]));
      reg_xt_rsc_0_16_i_oswt_1_cse <= (INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_10
          & INNER_LOOP2_stage_0_11 & (fsm_output[4])) | (INNER_LOOP4_stage_0_11 &
          INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_10 & (fsm_output[8]));
      reg_xt_rsc_1_0_i_oswt_cse <= (INNER_LOOP3_stage_0 & (INNER_LOOP3_r_9_4_sva_4_0[4])
          & (fsm_output[6])) | (INNER_LOOP1_stage_0 & (INNER_LOOP1_r_9_4_sva_4_0[4])
          & (fsm_output[2]));
      reg_twiddle_rsc_0_0_i_oswt_cse <= INNER_LOOP3_INNER_LOOP3_and_1_cse | and_876_cse
          | and_877_cse | INNER_LOOP4_INNER_LOOP4_and_1_cse;
      reg_twiddle_rsc_0_1_i_oswt_cse <= (and_dcpl_169 & (fsm_output[6])) | and_897_cse;
      reg_twiddle_rsc_0_2_i_oswt_cse <= (and_dcpl_171 & (fsm_output[6])) | and_906_cse;
      reg_twiddle_rsc_0_3_i_oswt_cse <= (and_dcpl_169 & (operator_33_true_2_lshift_psp_2_0_sva[1])
          & (fsm_output[6])) | and_915_cse;
      reg_twiddle_rsc_0_4_i_oswt_cse <= (INNER_LOOP3_stage_0 & (operator_33_true_2_lshift_psp_2_0_sva[2])
          & (fsm_output[6])) | INNER_LOOP4_INNER_LOOP4_and_1_cse;
      reg_twiddle_rsc_0_5_i_oswt_cse <= (and_dcpl_169 & (operator_33_true_2_lshift_psp_2_0_sva[2])
          & (fsm_output[6])) | and_897_cse;
      reg_twiddle_rsc_0_6_i_oswt_cse <= (and_dcpl_171 & (operator_33_true_2_lshift_psp_2_0_sva[2])
          & (fsm_output[6])) | and_906_cse;
      reg_twiddle_rsc_0_7_i_oswt_cse <= (and_dcpl_169 & (operator_33_true_2_lshift_psp_2_0_sva[2:1]==2'b11)
          & (fsm_output[6])) | and_915_cse;
      reg_twiddle_rsc_0_8_i_oswt_cse <= INNER_LOOP3_INNER_LOOP3_and_1_cse | INNER_LOOP4_INNER_LOOP4_and_1_cse;
      twiddle_h_rsc_0_0_i_s_raddr_core_4 <= MUX1HOT_s_1_4_2((INNER_LOOP1_tw_and_psp_sva_1[4]),
          (INNER_LOOP2_r_9_4_sva_4_0[4]), (INNER_LOOP3_r_9_4_sva_4_0[4]), (INNER_LOOP4_r_9_4_sva_4_0[4]),
          {(fsm_output[2]) , (fsm_output[4]) , (fsm_output[6]) , (fsm_output[8])});
      reg_xt_rsc_triosy_1_31_obj_iswt0_cse <= and_dcpl_139 & (fsm_output[8]);
      reg_ensig_cgo_cse <= or_447_rmff;
      reg_ensig_cgo_17_cse <= or_570_rmff;
      butterFly2_19_tw_asn_itm <= MUX1HOT_v_2_4_2(2'b10, (operator_20_false_acc_cse_sva[2:1]),
          operator_33_true_3_lshift_psp_1_0_sva_mx0w2, operator_33_true_3_lshift_psp_1_0_sva,
          {nor_4_nl , (fsm_output[4]) , (fsm_output[7]) , (fsm_output[8])});
      INNER_LOOP1_stage_0 <= ~((~(INNER_LOOP1_stage_0 & (~ (z_out_49[5])))) & (fsm_output[2]));
      INNER_LOOP1_r_9_4_sva_4_0 <= MUX_v_5_2_2(5'b00000, (z_out_49[4:0]), (fsm_output[2]));
      INNER_LOOP1_stage_0_2 <= and_876_cse;
      INNER_LOOP1_stage_0_3 <= INNER_LOOP1_stage_0_2 & (fsm_output[2]);
      INNER_LOOP1_stage_0_4 <= INNER_LOOP1_stage_0_3 & (fsm_output[2]);
      INNER_LOOP1_stage_0_5 <= INNER_LOOP1_stage_0_4 & (fsm_output[2]);
      INNER_LOOP1_stage_0_6 <= INNER_LOOP1_stage_0_5 & (fsm_output[2]);
      INNER_LOOP1_stage_0_7 <= INNER_LOOP1_stage_0_6 & (fsm_output[2]);
      INNER_LOOP1_stage_0_8 <= INNER_LOOP1_stage_0_7 & (fsm_output[2]);
      INNER_LOOP1_stage_0_9 <= INNER_LOOP1_stage_0_8 & (fsm_output[2]);
      INNER_LOOP1_stage_0_10 <= INNER_LOOP1_stage_0_9 & (fsm_output[2]);
      INNER_LOOP1_stage_0_11 <= INNER_LOOP1_stage_0_10 & (fsm_output[2]);
      INNER_LOOP1_stage_0_12 <= INNER_LOOP1_stage_0_11 & (fsm_output[2]);
      INNER_LOOP1_stage_0_13 <= INNER_LOOP1_stage_0_12 & (fsm_output[2]);
      INNER_LOOP2_stage_0 <= ~((~(INNER_LOOP2_stage_0 & (~ (z_out_49[5])))) & (fsm_output[4]));
      INNER_LOOP2_r_9_4_sva_4_0 <= INNER_LOOP1_r_INNER_LOOP1_r_and_2_cse;
      INNER_LOOP2_stage_0_2 <= and_877_cse;
      INNER_LOOP2_stage_0_3 <= INNER_LOOP2_stage_0_2 & (fsm_output[4]);
      INNER_LOOP2_stage_0_4 <= INNER_LOOP2_stage_0_3 & (fsm_output[4]);
      INNER_LOOP2_stage_0_5 <= INNER_LOOP2_stage_0_4 & (fsm_output[4]);
      INNER_LOOP2_stage_0_6 <= INNER_LOOP2_stage_0_5 & (fsm_output[4]);
      INNER_LOOP2_stage_0_7 <= INNER_LOOP2_stage_0_6 & (fsm_output[4]);
      INNER_LOOP2_stage_0_8 <= INNER_LOOP2_stage_0_7 & (fsm_output[4]);
      INNER_LOOP2_stage_0_9 <= INNER_LOOP2_stage_0_8 & (fsm_output[4]);
      INNER_LOOP2_stage_0_10 <= INNER_LOOP2_stage_0_9 & (fsm_output[4]);
      INNER_LOOP2_stage_0_11 <= INNER_LOOP2_stage_0_10 & (fsm_output[4]);
      INNER_LOOP3_stage_0 <= ~((~(INNER_LOOP3_stage_0 & (~ (z_out_50[5])))) & (fsm_output[6]));
      INNER_LOOP3_r_9_4_sva_4_0 <= MUX_v_5_2_2(5'b00000, (z_out_50[4:0]), (fsm_output[6]));
      INNER_LOOP3_stage_0_2 <= INNER_LOOP3_INNER_LOOP3_and_1_cse;
      INNER_LOOP3_stage_0_3 <= INNER_LOOP3_stage_0_2 & (fsm_output[6]);
      INNER_LOOP3_stage_0_4 <= INNER_LOOP3_stage_0_3 & (fsm_output[6]);
      INNER_LOOP3_stage_0_5 <= INNER_LOOP3_stage_0_4 & (fsm_output[6]);
      INNER_LOOP3_stage_0_6 <= INNER_LOOP3_stage_0_5 & (fsm_output[6]);
      INNER_LOOP3_stage_0_7 <= INNER_LOOP3_stage_0_6 & (fsm_output[6]);
      INNER_LOOP3_stage_0_8 <= INNER_LOOP3_stage_0_7 & (fsm_output[6]);
      INNER_LOOP3_stage_0_9 <= INNER_LOOP3_stage_0_8 & (fsm_output[6]);
      INNER_LOOP3_stage_0_10 <= INNER_LOOP3_stage_0_9 & (fsm_output[6]);
      INNER_LOOP3_stage_0_11 <= INNER_LOOP3_stage_0_10 & (fsm_output[6]);
      INNER_LOOP3_stage_0_12 <= INNER_LOOP3_stage_0_11 & (fsm_output[6]);
      INNER_LOOP3_stage_0_13 <= INNER_LOOP3_stage_0_12 & (fsm_output[6]);
      INNER_LOOP4_stage_0 <= ~((~(INNER_LOOP4_stage_0 & (~ (z_out_50[5])))) & (fsm_output[8]));
      INNER_LOOP4_r_9_4_sva_4_0 <= INNER_LOOP1_r_INNER_LOOP1_r_and_6_cse;
      INNER_LOOP4_stage_0_2 <= INNER_LOOP4_INNER_LOOP4_and_1_cse;
      INNER_LOOP4_stage_0_3 <= INNER_LOOP4_stage_0_2 & (fsm_output[8]);
      INNER_LOOP4_stage_0_4 <= INNER_LOOP4_stage_0_3 & (fsm_output[8]);
      INNER_LOOP4_stage_0_5 <= INNER_LOOP4_stage_0_4 & (fsm_output[8]);
      INNER_LOOP4_stage_0_6 <= INNER_LOOP4_stage_0_5 & (fsm_output[8]);
      INNER_LOOP4_stage_0_7 <= INNER_LOOP4_stage_0_6 & (fsm_output[8]);
      INNER_LOOP4_stage_0_8 <= INNER_LOOP4_stage_0_7 & (fsm_output[8]);
      INNER_LOOP4_stage_0_9 <= INNER_LOOP4_stage_0_8 & (fsm_output[8]);
      INNER_LOOP4_stage_0_10 <= INNER_LOOP4_stage_0_9 & (fsm_output[8]);
      INNER_LOOP4_stage_0_11 <= INNER_LOOP4_stage_0_10 & (fsm_output[8]);
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_160_itm_12 <= 1'b0;
    end
    else if ( core_wen & INNER_LOOP1_stage_0_12 ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_160_itm_12 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_11;
    end
  end
  always @(posedge clk) begin
    if ( modulo_add_qelse_and_cse ) begin
      modulo_add_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_sva_1, z_out_104,
          z_out_32);
      modulo_add_1_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_1_sva_1, z_out_111,
          z_out_1_32);
      modulo_add_2_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_2_sva_1, z_out_112,
          z_out_2_32);
      modulo_add_3_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_3_sva_1, z_out_113,
          z_out_3_32);
      modulo_add_4_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_4_sva_1, z_out_114,
          z_out_4_32);
      modulo_add_5_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_5_sva_1, z_out_115,
          z_out_5_32);
      modulo_add_6_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_6_sva_1, z_out_116,
          z_out_6_32);
      modulo_add_7_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_7_sva_1, z_out_117,
          z_out_7_32);
      modulo_add_8_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_8_sva_1, z_out_119,
          z_out_8_32);
      modulo_add_9_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_9_sva_1, z_out_121,
          z_out_9_32);
      modulo_add_10_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_10_sva_1, z_out_123,
          z_out_10_32);
      modulo_add_11_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_11_sva_1, z_out_125,
          z_out_11_32);
      modulo_add_12_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_12_sva_1, z_out_127,
          z_out_12_32);
      modulo_add_13_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_13_sva_1, z_out_129,
          z_out_13_32);
      modulo_add_14_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_14_sva_1, z_out_130,
          z_out_14_32);
      modulo_add_15_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_15_sva_1, z_out_131,
          z_out_15_32);
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_11 <= 1'b0;
    end
    else if ( modulo_add_qelse_and_cse ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_11 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_10;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP1_stage_0_11 & (~ INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_10)
        ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_290_itm_11 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_385_itm_10;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP1_stage_0_11 & INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_10
        ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_306_itm_11 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_401_itm_10;
    end
  end
  always @(posedge clk) begin
    if ( butterFly1_and_cse ) begin
      modulo_add_base_15_sva_1 <= nl_modulo_add_base_15_sva_1[31:0];
      modulo_add_base_14_sva_1 <= nl_modulo_add_base_14_sva_1[31:0];
      modulo_add_base_13_sva_1 <= nl_modulo_add_base_13_sva_1[31:0];
      modulo_add_base_12_sva_1 <= nl_modulo_add_base_12_sva_1[31:0];
      modulo_add_base_11_sva_1 <= nl_modulo_add_base_11_sva_1[31:0];
      modulo_add_base_10_sva_1 <= nl_modulo_add_base_10_sva_1[31:0];
      modulo_add_base_9_sva_1 <= nl_modulo_add_base_9_sva_1[31:0];
      modulo_add_base_8_sva_1 <= nl_modulo_add_base_8_sva_1[31:0];
      modulo_add_base_7_sva_1 <= nl_modulo_add_base_7_sva_1[31:0];
      modulo_add_base_6_sva_1 <= z_out_133;
      modulo_add_base_5_sva_1 <= nl_modulo_add_base_5_sva_1[31:0];
      modulo_add_base_4_sva_1 <= nl_modulo_add_base_4_sva_1[31:0];
      modulo_add_base_3_sva_1 <= nl_modulo_add_base_3_sva_1[31:0];
      modulo_add_base_2_sva_1 <= nl_modulo_add_base_2_sva_1[31:0];
      modulo_add_base_1_sva_1 <= nl_modulo_add_base_1_sva_1[31:0];
      modulo_add_base_sva_1 <= nl_modulo_add_base_sva_1[31:0];
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      modulo_sub_base_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_1_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_2_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_3_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_4_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_5_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_6_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_7_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_8_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_9_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_10_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_11_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_12_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_13_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_14_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_15_sva_1 <= 32'b00000000000000000000000000000000;
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_10 <= 1'b0;
    end
    else if ( butterFly1_and_cse ) begin
      modulo_sub_base_sva_1 <= nl_modulo_sub_base_sva_1[31:0];
      modulo_sub_base_1_sva_1 <= nl_modulo_sub_base_1_sva_1[31:0];
      modulo_sub_base_2_sva_1 <= nl_modulo_sub_base_2_sva_1[31:0];
      modulo_sub_base_3_sva_1 <= nl_modulo_sub_base_3_sva_1[31:0];
      modulo_sub_base_4_sva_1 <= nl_modulo_sub_base_4_sva_1[31:0];
      modulo_sub_base_5_sva_1 <= nl_modulo_sub_base_5_sva_1[31:0];
      modulo_sub_base_6_sva_1 <= z_out_132;
      modulo_sub_base_7_sva_1 <= nl_modulo_sub_base_7_sva_1[31:0];
      modulo_sub_base_8_sva_1 <= nl_modulo_sub_base_8_sva_1[31:0];
      modulo_sub_base_9_sva_1 <= nl_modulo_sub_base_9_sva_1[31:0];
      modulo_sub_base_10_sva_1 <= nl_modulo_sub_base_10_sva_1[31:0];
      modulo_sub_base_11_sva_1 <= nl_modulo_sub_base_11_sva_1[31:0];
      modulo_sub_base_12_sva_1 <= nl_modulo_sub_base_12_sva_1[31:0];
      modulo_sub_base_13_sva_1 <= nl_modulo_sub_base_13_sva_1[31:0];
      modulo_sub_base_14_sva_1 <= nl_modulo_sub_base_14_sva_1[31:0];
      modulo_sub_base_15_sva_1 <= nl_modulo_sub_base_15_sva_1[31:0];
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_10 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_9;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP1_stage_0_10 & (~ INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_9)
        ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_385_itm_10 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_9;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP1_stage_0_10 & INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_9
        ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_401_itm_10 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_9;
    end
  end
  always @(posedge clk) begin
    if ( mult_15_if_and_cse ) begin
      mult_res_sva_1 <= mult_res_sva_2;
      mult_1_res_sva_1 <= mult_1_res_sva_2;
      mult_2_res_sva_1 <= mult_2_res_sva_2;
      mult_3_res_sva_1 <= mult_3_res_sva_2;
      mult_4_res_sva_1 <= mult_4_res_sva_2;
      mult_5_res_sva_1 <= mult_5_res_sva_2;
      mult_6_res_sva_1 <= mult_6_res_sva_2;
      mult_7_res_sva_1 <= mult_7_res_sva_2;
      mult_8_res_sva_1 <= mult_8_res_sva_2;
      mult_9_res_sva_1 <= mult_9_res_sva_2;
      mult_10_res_sva_1 <= mult_10_res_sva_2;
      mult_11_res_sva_1 <= mult_11_res_sva_2;
      mult_12_res_sva_1 <= mult_12_res_sva_2;
      mult_13_res_sva_1 <= mult_13_res_sva_2;
      mult_14_res_sva_1 <= mult_14_res_sva_2;
      mult_15_res_sva_1 <= mult_15_res_sva_2;
      tmp_94_lpi_3_dfm_8 <= tmp_94_lpi_3_dfm_7;
      tmp_92_lpi_3_dfm_8 <= tmp_92_lpi_3_dfm_7;
      tmp_90_lpi_3_dfm_8 <= tmp_90_lpi_3_dfm_7;
      tmp_88_lpi_3_dfm_8 <= tmp_88_lpi_3_dfm_7;
      tmp_86_lpi_3_dfm_8 <= tmp_86_lpi_3_dfm_7;
      tmp_84_lpi_3_dfm_8 <= tmp_84_lpi_3_dfm_7;
      tmp_82_lpi_3_dfm_8 <= tmp_82_lpi_3_dfm_7;
      tmp_80_lpi_3_dfm_8 <= tmp_80_lpi_3_dfm_7;
      tmp_78_lpi_3_dfm_8 <= tmp_78_lpi_3_dfm_7;
      tmp_76_lpi_3_dfm_8 <= tmp_76_lpi_3_dfm_7;
      tmp_74_lpi_3_dfm_8 <= tmp_74_lpi_3_dfm_7;
      tmp_72_lpi_3_dfm_8 <= tmp_72_lpi_3_dfm_7;
      tmp_70_lpi_3_dfm_8 <= tmp_70_lpi_3_dfm_7;
      tmp_68_lpi_3_dfm_8 <= tmp_68_lpi_3_dfm_7;
      tmp_66_lpi_3_dfm_8 <= tmp_66_lpi_3_dfm_7;
      tmp_64_lpi_3_dfm_8 <= tmp_64_lpi_3_dfm_7;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      mult_15_slc_32_svs_st_1 <= 1'b0;
      mult_14_slc_32_svs_st_1 <= 1'b0;
      mult_13_slc_32_svs_st_1 <= 1'b0;
      mult_12_slc_32_svs_st_1 <= 1'b0;
      mult_11_slc_32_svs_st_1 <= 1'b0;
      mult_10_slc_32_svs_st_1 <= 1'b0;
      mult_9_slc_32_svs_st_1 <= 1'b0;
      mult_8_slc_32_svs_st_1 <= 1'b0;
      mult_7_slc_32_svs_st_1 <= 1'b0;
      mult_6_slc_32_svs_st_1 <= 1'b0;
      mult_5_slc_32_svs_st_1 <= 1'b0;
      mult_4_slc_32_svs_st_1 <= 1'b0;
      mult_3_slc_32_svs_st_1 <= 1'b0;
      mult_2_slc_32_svs_st_1 <= 1'b0;
      mult_1_slc_32_svs_st_1 <= 1'b0;
      mult_slc_32_svs_st_1 <= 1'b0;
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_9 <= 1'b0;
    end
    else if ( mult_15_if_and_cse ) begin
      mult_15_slc_32_svs_st_1 <= z_out_16_32;
      mult_14_slc_32_svs_st_1 <= z_out_17_32;
      mult_13_slc_32_svs_st_1 <= z_out_18_32;
      mult_12_slc_32_svs_st_1 <= z_out_19_32;
      mult_11_slc_32_svs_st_1 <= z_out_20_32;
      mult_10_slc_32_svs_st_1 <= z_out_21_32;
      mult_9_slc_32_svs_st_1 <= z_out_22_32;
      mult_8_slc_32_svs_st_1 <= z_out_23_32;
      mult_7_slc_32_svs_st_1 <= z_out_24_32;
      mult_6_slc_32_svs_st_1 <= z_out_25_32;
      mult_5_slc_32_svs_st_1 <= z_out_26_32;
      mult_4_slc_32_svs_st_1 <= z_out_27_32;
      mult_3_slc_32_svs_st_1 <= z_out_28_32;
      mult_2_slc_32_svs_st_1 <= z_out_29_32;
      mult_1_slc_32_svs_st_1 <= z_out_30_32;
      mult_slc_32_svs_st_1 <= z_out_31_32;
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_9 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_8;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1 <= 1'b0;
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_1 <= 1'b0;
    end
    else if ( INNER_LOOP1_r_and_7_cse ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1 <= INNER_LOOP1_r_9_4_sva_4_0[4];
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_1 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & (~ (fsm_output[2])) ) begin
      operator_33_true_return_8_4_sva <= z_out_48[8:4];
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      operator_20_false_acc_cse_sva <= 3'b000;
    end
    else if ( core_wen & (fsm_output[4:2]==3'b000) ) begin
      operator_20_false_acc_cse_sva <= operator_20_false_acc_cse_sva_mx0w0;
    end
  end
  always @(posedge clk) begin
    if ( mult_15_z_and_cse ) begin
      mult_15_z_asn_itm_4 <= mult_15_z_asn_itm_3;
      mult_14_z_asn_itm_4 <= mult_14_z_asn_itm_3;
      mult_13_z_asn_itm_4 <= mult_13_z_asn_itm_3;
      mult_12_z_asn_itm_4 <= mult_12_z_asn_itm_3;
      mult_11_z_asn_itm_4 <= mult_11_z_asn_itm_3;
      mult_10_z_asn_itm_4 <= mult_10_z_asn_itm_3;
      mult_9_z_asn_itm_4 <= mult_9_z_asn_itm_3;
      mult_8_z_asn_itm_4 <= mult_8_z_asn_itm_3;
      mult_7_z_asn_itm_4 <= mult_7_z_asn_itm_3;
      mult_6_z_asn_itm_4 <= mult_6_z_asn_itm_3;
      mult_5_z_asn_itm_4 <= mult_5_z_asn_itm_3;
      mult_4_z_asn_itm_4 <= mult_4_z_asn_itm_3;
      mult_3_z_asn_itm_4 <= mult_3_z_asn_itm_3;
      mult_2_z_asn_itm_4 <= mult_2_z_asn_itm_3;
      mult_1_z_asn_itm_4 <= mult_1_z_asn_itm_3;
      mult_z_asn_itm_4 <= mult_z_asn_itm_3;
      tmp_94_lpi_3_dfm_7 <= tmp_94_lpi_3_dfm_6;
      tmp_92_lpi_3_dfm_7 <= tmp_92_lpi_3_dfm_6;
      tmp_90_lpi_3_dfm_7 <= tmp_90_lpi_3_dfm_6;
      tmp_88_lpi_3_dfm_7 <= tmp_88_lpi_3_dfm_6;
      tmp_86_lpi_3_dfm_7 <= tmp_86_lpi_3_dfm_6;
      tmp_84_lpi_3_dfm_7 <= tmp_84_lpi_3_dfm_6;
      tmp_82_lpi_3_dfm_7 <= tmp_82_lpi_3_dfm_6;
      tmp_80_lpi_3_dfm_7 <= tmp_80_lpi_3_dfm_6;
      tmp_78_lpi_3_dfm_7 <= tmp_78_lpi_3_dfm_6;
      tmp_76_lpi_3_dfm_7 <= tmp_76_lpi_3_dfm_6;
      tmp_74_lpi_3_dfm_7 <= tmp_74_lpi_3_dfm_6;
      tmp_72_lpi_3_dfm_7 <= tmp_72_lpi_3_dfm_6;
      tmp_70_lpi_3_dfm_7 <= tmp_70_lpi_3_dfm_6;
      tmp_68_lpi_3_dfm_7 <= tmp_68_lpi_3_dfm_6;
      tmp_66_lpi_3_dfm_7 <= tmp_66_lpi_3_dfm_6;
      tmp_64_lpi_3_dfm_7 <= tmp_64_lpi_3_dfm_6;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_8 <= 1'b0;
    end
    else if ( mult_15_z_and_cse ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_8 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_7;
    end
  end
  always @(posedge clk) begin
    if ( mult_15_z_and_cse_1 ) begin
      reg_mult_15_z_asn_itm_1_cse <= mult_z_mul_cmp_1_z;
      reg_mult_14_z_asn_itm_1_cse <= mult_z_mul_cmp_3_z;
      reg_mult_13_z_asn_itm_1_cse <= mult_z_mul_cmp_5_z;
      reg_mult_12_z_asn_itm_1_cse <= mult_z_mul_cmp_7_z;
      reg_mult_11_z_asn_itm_1_cse <= mult_z_mul_cmp_9_z;
      reg_mult_10_z_asn_itm_1_cse <= mult_z_mul_cmp_11_z;
      reg_mult_9_z_asn_itm_1_cse <= mult_z_mul_cmp_13_z;
      reg_mult_8_z_asn_itm_1_cse <= mult_z_mul_cmp_15_z;
      reg_mult_7_z_asn_itm_1_cse <= mult_z_mul_cmp_17_z;
      reg_mult_6_z_asn_itm_1_cse <= mult_z_mul_cmp_19_z;
      reg_mult_5_z_asn_itm_1_cse <= mult_z_mul_cmp_21_z;
      reg_mult_4_z_asn_itm_1_cse <= mult_z_mul_cmp_23_z;
      reg_mult_3_z_asn_itm_1_cse <= mult_z_mul_cmp_25_z;
      reg_mult_2_z_asn_itm_1_cse <= mult_z_mul_cmp_27_z;
      reg_mult_1_z_asn_itm_1_cse <= mult_z_mul_cmp_29_z;
      reg_mult_z_asn_itm_1_cse <= mult_z_mul_cmp_31_z;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP1_stage_0_9 & INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_8
        ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_9 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_8;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP1_stage_0_9 & (~ INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_8)
        ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_9 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_8;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP1_stage_0_8 & INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_7
        ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_8 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_7;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP1_stage_0_8 & (~ INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_7)
        ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_8 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_7;
    end
  end
  always @(posedge clk) begin
    if ( mult_15_z_and_1_cse ) begin
      mult_15_z_asn_itm_3 <= mult_15_z_asn_itm_2;
      mult_14_z_asn_itm_3 <= mult_14_z_asn_itm_2;
      mult_13_z_asn_itm_3 <= mult_13_z_asn_itm_2;
      mult_12_z_asn_itm_3 <= mult_12_z_asn_itm_2;
      mult_11_z_asn_itm_3 <= mult_11_z_asn_itm_2;
      mult_10_z_asn_itm_3 <= mult_10_z_asn_itm_2;
      mult_9_z_asn_itm_3 <= mult_9_z_asn_itm_2;
      mult_8_z_asn_itm_3 <= mult_8_z_asn_itm_2;
      mult_7_z_asn_itm_3 <= mult_7_z_asn_itm_2;
      mult_6_z_asn_itm_3 <= mult_6_z_asn_itm_2;
      mult_5_z_asn_itm_3 <= mult_5_z_asn_itm_2;
      mult_4_z_asn_itm_3 <= mult_4_z_asn_itm_2;
      mult_3_z_asn_itm_3 <= mult_3_z_asn_itm_2;
      mult_2_z_asn_itm_3 <= mult_2_z_asn_itm_2;
      mult_1_z_asn_itm_3 <= mult_1_z_asn_itm_2;
      mult_z_asn_itm_3 <= mult_z_asn_itm_2;
      tmp_94_lpi_3_dfm_6 <= tmp_94_lpi_3_dfm_5;
      tmp_92_lpi_3_dfm_6 <= tmp_92_lpi_3_dfm_5;
      tmp_90_lpi_3_dfm_6 <= tmp_90_lpi_3_dfm_5;
      tmp_88_lpi_3_dfm_6 <= tmp_88_lpi_3_dfm_5;
      tmp_86_lpi_3_dfm_6 <= tmp_86_lpi_3_dfm_5;
      tmp_84_lpi_3_dfm_6 <= tmp_84_lpi_3_dfm_5;
      tmp_82_lpi_3_dfm_6 <= tmp_82_lpi_3_dfm_5;
      tmp_80_lpi_3_dfm_6 <= tmp_80_lpi_3_dfm_5;
      tmp_78_lpi_3_dfm_6 <= tmp_78_lpi_3_dfm_5;
      tmp_76_lpi_3_dfm_6 <= tmp_76_lpi_3_dfm_5;
      tmp_74_lpi_3_dfm_6 <= tmp_74_lpi_3_dfm_5;
      tmp_72_lpi_3_dfm_6 <= tmp_72_lpi_3_dfm_5;
      tmp_70_lpi_3_dfm_6 <= tmp_70_lpi_3_dfm_5;
      tmp_68_lpi_3_dfm_6 <= tmp_68_lpi_3_dfm_5;
      tmp_66_lpi_3_dfm_6 <= tmp_66_lpi_3_dfm_5;
      tmp_64_lpi_3_dfm_6 <= tmp_64_lpi_3_dfm_5;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_7 <= 1'b0;
    end
    else if ( mult_15_z_and_1_cse ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_7 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_6;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP1_stage_0_7 & INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_6
        ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_7 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_6;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP1_stage_0_7 & (~ INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_6)
        ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_7 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_6;
    end
  end
  always @(posedge clk) begin
    if ( mult_15_z_and_2_cse ) begin
      mult_15_z_asn_itm_2 <= mult_15_z_asn_itm_1;
      mult_14_z_asn_itm_2 <= mult_14_z_asn_itm_1;
      mult_13_z_asn_itm_2 <= mult_13_z_asn_itm_1;
      mult_12_z_asn_itm_2 <= mult_12_z_asn_itm_1;
      mult_11_z_asn_itm_2 <= mult_11_z_asn_itm_1;
      mult_10_z_asn_itm_2 <= mult_10_z_asn_itm_1;
      mult_9_z_asn_itm_2 <= mult_9_z_asn_itm_1;
      mult_8_z_asn_itm_2 <= mult_8_z_asn_itm_1;
      mult_7_z_asn_itm_2 <= mult_7_z_asn_itm_1;
      mult_6_z_asn_itm_2 <= mult_6_z_asn_itm_1;
      mult_5_z_asn_itm_2 <= mult_5_z_asn_itm_1;
      mult_4_z_asn_itm_2 <= mult_4_z_asn_itm_1;
      mult_3_z_asn_itm_2 <= mult_3_z_asn_itm_1;
      mult_2_z_asn_itm_2 <= mult_2_z_asn_itm_1;
      mult_1_z_asn_itm_2 <= mult_1_z_asn_itm_1;
      mult_z_asn_itm_2 <= mult_z_asn_itm_1;
      tmp_94_lpi_3_dfm_5 <= tmp_94_lpi_3_dfm_4;
      tmp_92_lpi_3_dfm_5 <= tmp_92_lpi_3_dfm_4;
      tmp_90_lpi_3_dfm_5 <= tmp_90_lpi_3_dfm_4;
      tmp_88_lpi_3_dfm_5 <= tmp_88_lpi_3_dfm_4;
      tmp_86_lpi_3_dfm_5 <= tmp_86_lpi_3_dfm_4;
      tmp_84_lpi_3_dfm_5 <= tmp_84_lpi_3_dfm_4;
      tmp_82_lpi_3_dfm_5 <= tmp_82_lpi_3_dfm_4;
      tmp_80_lpi_3_dfm_5 <= tmp_80_lpi_3_dfm_4;
      tmp_78_lpi_3_dfm_5 <= tmp_78_lpi_3_dfm_4;
      tmp_76_lpi_3_dfm_5 <= tmp_76_lpi_3_dfm_4;
      tmp_74_lpi_3_dfm_5 <= tmp_74_lpi_3_dfm_4;
      tmp_72_lpi_3_dfm_5 <= tmp_72_lpi_3_dfm_4;
      tmp_70_lpi_3_dfm_5 <= tmp_70_lpi_3_dfm_4;
      tmp_68_lpi_3_dfm_5 <= tmp_68_lpi_3_dfm_4;
      tmp_66_lpi_3_dfm_5 <= tmp_66_lpi_3_dfm_4;
      tmp_64_lpi_3_dfm_5 <= tmp_64_lpi_3_dfm_4;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_6 <= 1'b0;
    end
    else if ( mult_15_z_and_2_cse ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_6 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_5;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP1_stage_0_6 & INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_5
        ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_6 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_5;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP1_stage_0_6 & (~ INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_5)
        ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_6 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_5;
    end
  end
  always @(posedge clk) begin
    if ( mult_15_z_and_3_cse ) begin
      mult_15_z_asn_itm_1 <= mult_z_mul_cmp_2_z;
      mult_14_z_asn_itm_1 <= mult_z_mul_cmp_4_z;
      mult_13_z_asn_itm_1 <= mult_z_mul_cmp_6_z;
      mult_12_z_asn_itm_1 <= mult_z_mul_cmp_8_z;
      mult_11_z_asn_itm_1 <= mult_z_mul_cmp_10_z;
      mult_10_z_asn_itm_1 <= mult_z_mul_cmp_12_z;
      mult_9_z_asn_itm_1 <= mult_z_mul_cmp_14_z;
      mult_8_z_asn_itm_1 <= mult_z_mul_cmp_16_z;
      mult_7_z_asn_itm_1 <= mult_z_mul_cmp_18_z;
      mult_6_z_asn_itm_1 <= mult_z_mul_cmp_20_z;
      mult_5_z_asn_itm_1 <= mult_z_mul_cmp_22_z;
      mult_4_z_asn_itm_1 <= mult_z_mul_cmp_24_z;
      mult_3_z_asn_itm_1 <= mult_z_mul_cmp_26_z;
      mult_2_z_asn_itm_1 <= mult_z_mul_cmp_28_z;
      mult_1_z_asn_itm_1 <= mult_z_mul_cmp_30_z;
      mult_z_asn_itm_1 <= mult_z_mul_cmp_z;
    end
  end
  always @(posedge clk) begin
    if ( INNER_LOOP1_r_and_20_cse ) begin
      tmp_94_lpi_3_dfm_4 <= tmp_94_lpi_3_dfm_3;
      tmp_92_lpi_3_dfm_4 <= tmp_92_lpi_3_dfm_3;
      tmp_90_lpi_3_dfm_4 <= tmp_90_lpi_3_dfm_3;
      tmp_88_lpi_3_dfm_4 <= tmp_88_lpi_3_dfm_3;
      tmp_86_lpi_3_dfm_4 <= tmp_86_lpi_3_dfm_3;
      tmp_84_lpi_3_dfm_4 <= tmp_84_lpi_3_dfm_3;
      tmp_82_lpi_3_dfm_4 <= tmp_82_lpi_3_dfm_3;
      tmp_80_lpi_3_dfm_4 <= tmp_80_lpi_3_dfm_3;
      tmp_78_lpi_3_dfm_4 <= tmp_78_lpi_3_dfm_3;
      tmp_76_lpi_3_dfm_4 <= tmp_76_lpi_3_dfm_3;
      tmp_74_lpi_3_dfm_4 <= tmp_74_lpi_3_dfm_3;
      tmp_72_lpi_3_dfm_4 <= tmp_72_lpi_3_dfm_3;
      tmp_70_lpi_3_dfm_4 <= tmp_70_lpi_3_dfm_3;
      tmp_68_lpi_3_dfm_4 <= tmp_68_lpi_3_dfm_3;
      tmp_66_lpi_3_dfm_4 <= tmp_66_lpi_3_dfm_3;
      tmp_64_lpi_3_dfm_4 <= tmp_64_lpi_3_dfm_3;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_5 <= 1'b0;
    end
    else if ( INNER_LOOP1_r_and_20_cse ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_5 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_4;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP1_stage_0_5 & INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_4
        ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_5 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_4;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP1_stage_0_5 & (~ INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_4)
        ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_5 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_4;
    end
  end
  always @(posedge clk) begin
    if ( INNER_LOOP1_r_and_23_cse ) begin
      tmp_94_lpi_3_dfm_3 <= tmp_94_lpi_3_dfm_2;
      tmp_92_lpi_3_dfm_3 <= tmp_92_lpi_3_dfm_2;
      tmp_90_lpi_3_dfm_3 <= tmp_90_lpi_3_dfm_2;
      tmp_88_lpi_3_dfm_3 <= tmp_88_lpi_3_dfm_2;
      tmp_86_lpi_3_dfm_3 <= tmp_86_lpi_3_dfm_2;
      tmp_84_lpi_3_dfm_3 <= tmp_84_lpi_3_dfm_2;
      tmp_82_lpi_3_dfm_3 <= tmp_82_lpi_3_dfm_2;
      tmp_80_lpi_3_dfm_3 <= tmp_80_lpi_3_dfm_2;
      tmp_78_lpi_3_dfm_3 <= tmp_78_lpi_3_dfm_2;
      tmp_76_lpi_3_dfm_3 <= tmp_76_lpi_3_dfm_2;
      tmp_74_lpi_3_dfm_3 <= tmp_74_lpi_3_dfm_2;
      tmp_72_lpi_3_dfm_3 <= tmp_72_lpi_3_dfm_2;
      tmp_70_lpi_3_dfm_3 <= tmp_70_lpi_3_dfm_2;
      tmp_68_lpi_3_dfm_3 <= tmp_68_lpi_3_dfm_2;
      tmp_66_lpi_3_dfm_3 <= tmp_66_lpi_3_dfm_2;
      tmp_64_lpi_3_dfm_3 <= tmp_64_lpi_3_dfm_2;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_4 <= 1'b0;
    end
    else if ( INNER_LOOP1_r_and_23_cse ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_4 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_3;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP1_stage_0_4 & INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_3
        ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_4 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_3;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP1_stage_0_4 & (~ INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_3)
        ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_4 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_3;
    end
  end
  always @(posedge clk) begin
    if ( INNER_LOOP1_r_and_26_cse ) begin
      tmp_94_lpi_3_dfm_2 <= tmp_94_lpi_3_dfm_1;
      tmp_92_lpi_3_dfm_2 <= tmp_92_lpi_3_dfm_1;
      tmp_90_lpi_3_dfm_2 <= tmp_90_lpi_3_dfm_1;
      tmp_88_lpi_3_dfm_2 <= tmp_88_lpi_3_dfm_1;
      tmp_86_lpi_3_dfm_2 <= tmp_86_lpi_3_dfm_1;
      tmp_84_lpi_3_dfm_2 <= tmp_84_lpi_3_dfm_1;
      tmp_82_lpi_3_dfm_2 <= tmp_82_lpi_3_dfm_1;
      tmp_80_lpi_3_dfm_2 <= tmp_80_lpi_3_dfm_1;
      tmp_78_lpi_3_dfm_2 <= tmp_78_lpi_3_dfm_1;
      tmp_76_lpi_3_dfm_2 <= tmp_76_lpi_3_dfm_1;
      tmp_74_lpi_3_dfm_2 <= tmp_74_lpi_3_dfm_1;
      tmp_72_lpi_3_dfm_2 <= tmp_72_lpi_3_dfm_1;
      tmp_70_lpi_3_dfm_2 <= tmp_70_lpi_3_dfm_1;
      tmp_68_lpi_3_dfm_2 <= tmp_68_lpi_3_dfm_1;
      tmp_66_lpi_3_dfm_2 <= tmp_66_lpi_3_dfm_1;
      tmp_64_lpi_3_dfm_2 <= tmp_64_lpi_3_dfm_1;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_3 <= 1'b0;
    end
    else if ( INNER_LOOP1_r_and_26_cse ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_3 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_2;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP1_stage_0_3 & INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_2
        ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_3 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_2;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP1_stage_0_3 & (~ INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_2)
        ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_3 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_2;
    end
  end
  always @(posedge clk) begin
    if ( INNER_LOOP1_r_and_29_cse ) begin
      tmp_94_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_30_i_s_din_mxwt, xt_rsc_1_30_i_s_din_mxwt,
          INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
      tmp_92_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_28_i_s_din_mxwt, xt_rsc_1_28_i_s_din_mxwt,
          INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
      tmp_90_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_26_i_s_din_mxwt, xt_rsc_1_26_i_s_din_mxwt,
          INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
      tmp_88_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_24_i_s_din_mxwt, xt_rsc_1_24_i_s_din_mxwt,
          INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
      tmp_86_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_22_i_s_din_mxwt, xt_rsc_1_22_i_s_din_mxwt,
          INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
      tmp_84_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_20_i_s_din_mxwt, xt_rsc_1_20_i_s_din_mxwt,
          INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
      tmp_82_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_18_i_s_din_mxwt, xt_rsc_1_18_i_s_din_mxwt,
          INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
      tmp_80_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_16_i_s_din_mxwt, xt_rsc_1_16_i_s_din_mxwt,
          INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
      tmp_78_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_14_i_s_din_mxwt, xt_rsc_1_14_i_s_din_mxwt,
          INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
      tmp_76_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_12_i_s_din_mxwt, xt_rsc_1_12_i_s_din_mxwt,
          INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
      tmp_74_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_10_i_s_din_mxwt, xt_rsc_1_10_i_s_din_mxwt,
          INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
      tmp_72_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_8_i_s_din_mxwt, xt_rsc_1_8_i_s_din_mxwt,
          INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
      tmp_70_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_6_i_s_din_mxwt, xt_rsc_1_6_i_s_din_mxwt,
          INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
      tmp_68_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_4_i_s_din_mxwt, xt_rsc_1_4_i_s_din_mxwt,
          INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
      tmp_66_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_2_i_s_din_mxwt, xt_rsc_1_2_i_s_din_mxwt,
          INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
      tmp_64_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_0_i_s_din_mxwt, xt_rsc_1_0_i_s_din_mxwt,
          INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_63_itm_1);
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_2 <= 1'b0;
    end
    else if ( INNER_LOOP1_r_and_29_cse ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_2 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_1;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP1_stage_0_2 & INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_1
        ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_2 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_1;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP1_stage_0_2 & (~ INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm_1)
        ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_2 <= INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_1;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm & INNER_LOOP1_stage_0
        ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_20_itm_1 <= INNER_LOOP1_r_9_4_sva_4_0[4:1];
    end
  end
  always @(posedge clk) begin
    if ( core_wen & (~(INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm | INNER_LOOP1_nor_tmp))
        & INNER_LOOP1_stage_0 ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_4210_itm_1 <= INNER_LOOP1_r_9_4_sva_4_0[4:1];
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm <= 1'b0;
    end
    else if ( core_wen & ((fsm_output[1]) | (INNER_LOOP1_stage_0 & (~ (z_out_49[5]))
        & (fsm_output[2]))) ) begin
      INNER_LOOP1_r_slc_INNER_LOOP1_r_9_4_4_0_161_itm <= (z_out_49[0]) & (fsm_output[2]);
    end
  end
  always @(posedge clk) begin
    if ( butterFly1_16_and_cse ) begin
      modulo_add_base_16_sva_1 <= nl_modulo_add_base_16_sva_1[31:0];
      modulo_add_base_17_sva_1 <= nl_modulo_add_base_17_sva_1[31:0];
      modulo_add_base_18_sva_1 <= nl_modulo_add_base_18_sva_1[31:0];
      modulo_add_base_19_sva_1 <= nl_modulo_add_base_19_sva_1[31:0];
      modulo_add_base_20_sva_1 <= nl_modulo_add_base_20_sva_1[31:0];
      modulo_add_base_21_sva_1 <= nl_modulo_add_base_21_sva_1[31:0];
      modulo_add_base_22_sva_1 <= z_out_102;
      modulo_add_base_23_sva_1 <= z_out_103;
      modulo_add_base_24_sva_1 <= z_out_136;
      modulo_add_base_25_sva_1 <= z_out_138;
      modulo_add_base_26_sva_1 <= z_out_140;
      modulo_add_base_27_sva_1 <= nl_modulo_add_base_27_sva_1[31:0];
      modulo_add_base_28_sva_1 <= nl_modulo_add_base_28_sva_1[31:0];
      modulo_add_base_29_sva_1 <= nl_modulo_add_base_29_sva_1[31:0];
      modulo_add_base_30_sva_1 <= nl_modulo_add_base_30_sva_1[31:0];
      modulo_add_base_31_sva_1 <= nl_modulo_add_base_31_sva_1[31:0];
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      modulo_sub_base_16_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_17_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_18_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_19_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_20_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_21_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_22_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_23_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_24_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_25_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_26_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_27_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_28_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_29_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_30_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_31_sva_1 <= 32'b00000000000000000000000000000000;
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_10 <= 1'b0;
    end
    else if ( butterFly1_16_and_cse ) begin
      modulo_sub_base_16_sva_1 <= nl_modulo_sub_base_16_sva_1[31:0];
      modulo_sub_base_17_sva_1 <= nl_modulo_sub_base_17_sva_1[31:0];
      modulo_sub_base_18_sva_1 <= nl_modulo_sub_base_18_sva_1[31:0];
      modulo_sub_base_19_sva_1 <= nl_modulo_sub_base_19_sva_1[31:0];
      modulo_sub_base_20_sva_1 <= nl_modulo_sub_base_20_sva_1[31:0];
      modulo_sub_base_21_sva_1 <= nl_modulo_sub_base_21_sva_1[31:0];
      modulo_sub_base_22_sva_1 <= z_out_134;
      modulo_sub_base_23_sva_1 <= z_out_135;
      modulo_sub_base_24_sva_1 <= z_out_137;
      modulo_sub_base_25_sva_1 <= z_out_139;
      modulo_sub_base_26_sva_1 <= z_out_141;
      modulo_sub_base_27_sva_1 <= nl_modulo_sub_base_27_sva_1[31:0];
      modulo_sub_base_28_sva_1 <= nl_modulo_sub_base_28_sva_1[31:0];
      modulo_sub_base_29_sva_1 <= nl_modulo_sub_base_29_sva_1[31:0];
      modulo_sub_base_30_sva_1 <= nl_modulo_sub_base_30_sva_1[31:0];
      modulo_sub_base_31_sva_1 <= nl_modulo_sub_base_31_sva_1[31:0];
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_10 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_9;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP2_stage_0_10 & (~ INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_9)
        ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_290_itm_10 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_9;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP2_stage_0_10 & INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_9
        ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_306_itm_10 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_9;
    end
  end
  always @(posedge clk) begin
    if ( mult_31_if_and_cse ) begin
      mult_16_res_sva_1 <= mult_16_res_sva_2;
      mult_17_res_sva_1 <= mult_17_res_sva_2;
      mult_18_res_sva_1 <= mult_18_res_sva_2;
      mult_19_res_sva_1 <= mult_19_res_sva_2;
      mult_20_res_sva_1 <= mult_20_res_sva_2;
      mult_21_res_sva_1 <= mult_21_res_sva_2;
      mult_22_res_sva_1 <= mult_22_res_sva_2;
      mult_23_res_sva_1 <= mult_23_res_sva_2;
      mult_24_res_sva_1 <= mult_24_res_sva_2;
      mult_25_res_sva_1 <= mult_25_res_sva_2;
      mult_26_res_sva_1 <= mult_26_res_sva_2;
      mult_27_res_sva_1 <= mult_27_res_sva_2;
      mult_28_res_sva_1 <= mult_28_res_sva_2;
      mult_29_res_sva_1 <= mult_29_res_sva_2;
      mult_30_res_sva_1 <= mult_30_res_sva_2;
      mult_31_res_sva_1 <= mult_31_res_sva_2;
      tmp_30_lpi_3_dfm_8 <= tmp_30_lpi_3_dfm_7;
      tmp_28_lpi_3_dfm_8 <= tmp_28_lpi_3_dfm_7;
      tmp_26_lpi_3_dfm_8 <= tmp_26_lpi_3_dfm_7;
      tmp_24_lpi_3_dfm_8 <= tmp_24_lpi_3_dfm_7;
      tmp_22_lpi_3_dfm_8 <= tmp_22_lpi_3_dfm_7;
      tmp_20_lpi_3_dfm_8 <= tmp_20_lpi_3_dfm_7;
      tmp_18_lpi_3_dfm_8 <= tmp_18_lpi_3_dfm_7;
      tmp_16_lpi_3_dfm_8 <= tmp_16_lpi_3_dfm_7;
      tmp_14_lpi_3_dfm_8 <= tmp_14_lpi_3_dfm_7;
      tmp_12_lpi_3_dfm_8 <= tmp_12_lpi_3_dfm_7;
      tmp_10_lpi_3_dfm_8 <= tmp_10_lpi_3_dfm_7;
      tmp_8_lpi_3_dfm_8 <= tmp_8_lpi_3_dfm_7;
      tmp_6_lpi_3_dfm_8 <= tmp_6_lpi_3_dfm_7;
      tmp_4_lpi_3_dfm_8 <= tmp_4_lpi_3_dfm_7;
      tmp_2_lpi_3_dfm_8 <= tmp_2_lpi_3_dfm_7;
      tmp_lpi_3_dfm_8 <= tmp_lpi_3_dfm_7;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      mult_31_slc_32_svs_st_1 <= 1'b0;
      mult_30_slc_32_svs_st_1 <= 1'b0;
      mult_29_slc_32_svs_st_1 <= 1'b0;
      mult_28_slc_32_svs_st_1 <= 1'b0;
      mult_27_slc_32_svs_st_1 <= 1'b0;
      mult_26_slc_32_svs_st_1 <= 1'b0;
      mult_25_slc_32_svs_st_1 <= 1'b0;
      mult_24_slc_32_svs_st_1 <= 1'b0;
      mult_23_slc_32_svs_st_1 <= 1'b0;
      mult_22_slc_32_svs_st_1 <= 1'b0;
      mult_21_slc_32_svs_st_1 <= 1'b0;
      mult_20_slc_32_svs_st_1 <= 1'b0;
      mult_19_slc_32_svs_st_1 <= 1'b0;
      mult_18_slc_32_svs_st_1 <= 1'b0;
      mult_17_slc_32_svs_st_1 <= 1'b0;
      mult_16_slc_32_svs_st_1 <= 1'b0;
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_9 <= 1'b0;
    end
    else if ( mult_31_if_and_cse ) begin
      mult_31_slc_32_svs_st_1 <= z_out_16_32;
      mult_30_slc_32_svs_st_1 <= z_out_17_32;
      mult_29_slc_32_svs_st_1 <= z_out_18_32;
      mult_28_slc_32_svs_st_1 <= z_out_19_32;
      mult_27_slc_32_svs_st_1 <= z_out_20_32;
      mult_26_slc_32_svs_st_1 <= z_out_21_32;
      mult_25_slc_32_svs_st_1 <= z_out_22_32;
      mult_24_slc_32_svs_st_1 <= z_out_23_32;
      mult_23_slc_32_svs_st_1 <= z_out_24_32;
      mult_22_slc_32_svs_st_1 <= z_out_25_32;
      mult_21_slc_32_svs_st_1 <= z_out_26_32;
      mult_20_slc_32_svs_st_1 <= z_out_27_32;
      mult_19_slc_32_svs_st_1 <= z_out_28_32;
      mult_18_slc_32_svs_st_1 <= z_out_29_32;
      mult_17_slc_32_svs_st_1 <= z_out_30_32;
      mult_16_slc_32_svs_st_1 <= z_out_31_32;
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_9 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_8;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4302_itm_1 <= 1'b0;
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_1 <= 1'b0;
    end
    else if ( INNER_LOOP2_r_and_3_cse ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4302_itm_1 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4302_itm;
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_1 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & (~ (fsm_output[4])) ) begin
      operator_33_true_1_lshift_psp_7_4_sva <= z_out_48[7:4];
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4302_itm <= 1'b0;
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm <= 1'b0;
    end
    else if ( INNER_LOOP2_r_and_4_cse ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4302_itm <= INNER_LOOP1_r_INNER_LOOP1_r_and_2_cse[4];
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm <= INNER_LOOP1_r_INNER_LOOP1_r_and_2_cse[0];
    end
  end
  always @(posedge clk) begin
    if ( mult_31_z_and_cse ) begin
      mult_31_z_asn_itm_4 <= mult_31_z_asn_itm_3;
      mult_30_z_asn_itm_4 <= mult_30_z_asn_itm_3;
      mult_29_z_asn_itm_4 <= mult_29_z_asn_itm_3;
      mult_28_z_asn_itm_4 <= mult_28_z_asn_itm_3;
      mult_27_z_asn_itm_4 <= mult_27_z_asn_itm_3;
      mult_26_z_asn_itm_4 <= mult_26_z_asn_itm_3;
      mult_25_z_asn_itm_4 <= mult_25_z_asn_itm_3;
      mult_24_z_asn_itm_4 <= mult_24_z_asn_itm_3;
      mult_23_z_asn_itm_4 <= mult_23_z_asn_itm_3;
      mult_22_z_asn_itm_4 <= mult_22_z_asn_itm_3;
      mult_21_z_asn_itm_4 <= mult_21_z_asn_itm_3;
      mult_20_z_asn_itm_4 <= mult_20_z_asn_itm_3;
      mult_19_z_asn_itm_4 <= mult_19_z_asn_itm_3;
      mult_18_z_asn_itm_4 <= mult_18_z_asn_itm_3;
      mult_17_z_asn_itm_4 <= mult_17_z_asn_itm_3;
      mult_16_z_asn_itm_4 <= mult_16_z_asn_itm_3;
      tmp_30_lpi_3_dfm_7 <= tmp_30_lpi_3_dfm_6;
      tmp_28_lpi_3_dfm_7 <= tmp_28_lpi_3_dfm_6;
      tmp_26_lpi_3_dfm_7 <= tmp_26_lpi_3_dfm_6;
      tmp_24_lpi_3_dfm_7 <= tmp_24_lpi_3_dfm_6;
      tmp_22_lpi_3_dfm_7 <= tmp_22_lpi_3_dfm_6;
      tmp_20_lpi_3_dfm_7 <= tmp_20_lpi_3_dfm_6;
      tmp_18_lpi_3_dfm_7 <= tmp_18_lpi_3_dfm_6;
      tmp_16_lpi_3_dfm_7 <= tmp_16_lpi_3_dfm_6;
      tmp_14_lpi_3_dfm_7 <= tmp_14_lpi_3_dfm_6;
      tmp_12_lpi_3_dfm_7 <= tmp_12_lpi_3_dfm_6;
      tmp_10_lpi_3_dfm_7 <= tmp_10_lpi_3_dfm_6;
      tmp_8_lpi_3_dfm_7 <= tmp_8_lpi_3_dfm_6;
      tmp_6_lpi_3_dfm_7 <= tmp_6_lpi_3_dfm_6;
      tmp_4_lpi_3_dfm_7 <= tmp_4_lpi_3_dfm_6;
      tmp_2_lpi_3_dfm_7 <= tmp_2_lpi_3_dfm_6;
      tmp_lpi_3_dfm_7 <= tmp_lpi_3_dfm_6;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_8 <= 1'b0;
    end
    else if ( mult_31_z_and_cse ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_8 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_7;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP2_stage_0_9 & INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_8
        ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_9 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_8;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP2_stage_0_9 & (~ INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_8)
        ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_9 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_8;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP2_stage_0_8 & INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_7
        ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_8 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_7;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP2_stage_0_8 & (~ INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_7)
        ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_8 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_7;
    end
  end
  always @(posedge clk) begin
    if ( mult_31_z_and_1_cse ) begin
      mult_31_z_asn_itm_3 <= mult_31_z_asn_itm_2;
      mult_30_z_asn_itm_3 <= mult_30_z_asn_itm_2;
      mult_29_z_asn_itm_3 <= mult_29_z_asn_itm_2;
      mult_28_z_asn_itm_3 <= mult_28_z_asn_itm_2;
      mult_27_z_asn_itm_3 <= mult_27_z_asn_itm_2;
      mult_26_z_asn_itm_3 <= mult_26_z_asn_itm_2;
      mult_25_z_asn_itm_3 <= mult_25_z_asn_itm_2;
      mult_24_z_asn_itm_3 <= mult_24_z_asn_itm_2;
      mult_23_z_asn_itm_3 <= mult_23_z_asn_itm_2;
      mult_22_z_asn_itm_3 <= mult_22_z_asn_itm_2;
      mult_21_z_asn_itm_3 <= mult_21_z_asn_itm_2;
      mult_20_z_asn_itm_3 <= mult_20_z_asn_itm_2;
      mult_19_z_asn_itm_3 <= mult_19_z_asn_itm_2;
      mult_18_z_asn_itm_3 <= mult_18_z_asn_itm_2;
      mult_17_z_asn_itm_3 <= mult_17_z_asn_itm_2;
      mult_16_z_asn_itm_3 <= mult_16_z_asn_itm_2;
      tmp_30_lpi_3_dfm_6 <= tmp_30_lpi_3_dfm_5;
      tmp_28_lpi_3_dfm_6 <= tmp_28_lpi_3_dfm_5;
      tmp_26_lpi_3_dfm_6 <= tmp_26_lpi_3_dfm_5;
      tmp_24_lpi_3_dfm_6 <= tmp_24_lpi_3_dfm_5;
      tmp_22_lpi_3_dfm_6 <= tmp_22_lpi_3_dfm_5;
      tmp_20_lpi_3_dfm_6 <= tmp_20_lpi_3_dfm_5;
      tmp_18_lpi_3_dfm_6 <= tmp_18_lpi_3_dfm_5;
      tmp_16_lpi_3_dfm_6 <= tmp_16_lpi_3_dfm_5;
      tmp_14_lpi_3_dfm_6 <= tmp_14_lpi_3_dfm_5;
      tmp_12_lpi_3_dfm_6 <= tmp_12_lpi_3_dfm_5;
      tmp_10_lpi_3_dfm_6 <= tmp_10_lpi_3_dfm_5;
      tmp_8_lpi_3_dfm_6 <= tmp_8_lpi_3_dfm_5;
      tmp_6_lpi_3_dfm_6 <= tmp_6_lpi_3_dfm_5;
      tmp_4_lpi_3_dfm_6 <= tmp_4_lpi_3_dfm_5;
      tmp_2_lpi_3_dfm_6 <= tmp_2_lpi_3_dfm_5;
      tmp_lpi_3_dfm_6 <= tmp_lpi_3_dfm_5;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_7 <= 1'b0;
    end
    else if ( mult_31_z_and_1_cse ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_7 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_6;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP2_stage_0_7 & INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_6
        ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_7 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_6;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP2_stage_0_7 & (~ INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_6)
        ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_7 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_6;
    end
  end
  always @(posedge clk) begin
    if ( mult_31_z_and_2_cse ) begin
      mult_31_z_asn_itm_2 <= mult_15_z_asn_itm_1;
      mult_30_z_asn_itm_2 <= mult_14_z_asn_itm_1;
      mult_29_z_asn_itm_2 <= mult_13_z_asn_itm_1;
      mult_28_z_asn_itm_2 <= mult_12_z_asn_itm_1;
      mult_27_z_asn_itm_2 <= mult_11_z_asn_itm_1;
      mult_26_z_asn_itm_2 <= mult_10_z_asn_itm_1;
      mult_25_z_asn_itm_2 <= mult_9_z_asn_itm_1;
      mult_24_z_asn_itm_2 <= mult_8_z_asn_itm_1;
      mult_23_z_asn_itm_2 <= mult_7_z_asn_itm_1;
      mult_22_z_asn_itm_2 <= mult_6_z_asn_itm_1;
      mult_21_z_asn_itm_2 <= mult_5_z_asn_itm_1;
      mult_20_z_asn_itm_2 <= mult_4_z_asn_itm_1;
      mult_19_z_asn_itm_2 <= mult_3_z_asn_itm_1;
      mult_18_z_asn_itm_2 <= mult_2_z_asn_itm_1;
      mult_17_z_asn_itm_2 <= mult_1_z_asn_itm_1;
      mult_16_z_asn_itm_2 <= mult_z_asn_itm_1;
      tmp_30_lpi_3_dfm_5 <= tmp_30_lpi_3_dfm_4;
      tmp_28_lpi_3_dfm_5 <= tmp_28_lpi_3_dfm_4;
      tmp_26_lpi_3_dfm_5 <= tmp_26_lpi_3_dfm_4;
      tmp_24_lpi_3_dfm_5 <= tmp_24_lpi_3_dfm_4;
      tmp_22_lpi_3_dfm_5 <= tmp_22_lpi_3_dfm_4;
      tmp_20_lpi_3_dfm_5 <= tmp_20_lpi_3_dfm_4;
      tmp_18_lpi_3_dfm_5 <= tmp_18_lpi_3_dfm_4;
      tmp_16_lpi_3_dfm_5 <= tmp_16_lpi_3_dfm_4;
      tmp_14_lpi_3_dfm_5 <= tmp_14_lpi_3_dfm_4;
      tmp_12_lpi_3_dfm_5 <= tmp_12_lpi_3_dfm_4;
      tmp_10_lpi_3_dfm_5 <= tmp_10_lpi_3_dfm_4;
      tmp_8_lpi_3_dfm_5 <= tmp_8_lpi_3_dfm_4;
      tmp_6_lpi_3_dfm_5 <= tmp_6_lpi_3_dfm_4;
      tmp_4_lpi_3_dfm_5 <= tmp_4_lpi_3_dfm_4;
      tmp_2_lpi_3_dfm_5 <= tmp_2_lpi_3_dfm_4;
      tmp_lpi_3_dfm_5 <= tmp_lpi_3_dfm_4;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_6 <= 1'b0;
    end
    else if ( mult_31_z_and_2_cse ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_6 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_5;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP2_stage_0_6 & INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_5
        ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_6 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_5;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP2_stage_0_6 & (~ INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_5)
        ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_6 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_5;
    end
  end
  always @(posedge clk) begin
    if ( INNER_LOOP2_r_and_17_cse ) begin
      tmp_30_lpi_3_dfm_4 <= tmp_30_lpi_3_dfm_3;
      tmp_28_lpi_3_dfm_4 <= tmp_28_lpi_3_dfm_3;
      tmp_26_lpi_3_dfm_4 <= tmp_26_lpi_3_dfm_3;
      tmp_24_lpi_3_dfm_4 <= tmp_24_lpi_3_dfm_3;
      tmp_22_lpi_3_dfm_4 <= tmp_22_lpi_3_dfm_3;
      tmp_20_lpi_3_dfm_4 <= tmp_20_lpi_3_dfm_3;
      tmp_18_lpi_3_dfm_4 <= tmp_18_lpi_3_dfm_3;
      tmp_16_lpi_3_dfm_4 <= tmp_16_lpi_3_dfm_3;
      tmp_14_lpi_3_dfm_4 <= tmp_14_lpi_3_dfm_3;
      tmp_12_lpi_3_dfm_4 <= tmp_12_lpi_3_dfm_3;
      tmp_10_lpi_3_dfm_4 <= tmp_10_lpi_3_dfm_3;
      tmp_8_lpi_3_dfm_4 <= tmp_8_lpi_3_dfm_3;
      tmp_6_lpi_3_dfm_4 <= tmp_6_lpi_3_dfm_3;
      tmp_4_lpi_3_dfm_4 <= tmp_4_lpi_3_dfm_3;
      tmp_2_lpi_3_dfm_4 <= tmp_2_lpi_3_dfm_3;
      tmp_lpi_3_dfm_4 <= tmp_lpi_3_dfm_3;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_5 <= 1'b0;
    end
    else if ( INNER_LOOP2_r_and_17_cse ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_5 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_4;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP2_stage_0_5 & INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_4
        ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_5 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_4;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP2_stage_0_5 & (~ INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_4)
        ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_5 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_4;
    end
  end
  always @(posedge clk) begin
    if ( INNER_LOOP2_r_and_20_cse ) begin
      tmp_30_lpi_3_dfm_3 <= tmp_30_lpi_3_dfm_2;
      tmp_28_lpi_3_dfm_3 <= tmp_28_lpi_3_dfm_2;
      tmp_26_lpi_3_dfm_3 <= tmp_26_lpi_3_dfm_2;
      tmp_24_lpi_3_dfm_3 <= tmp_24_lpi_3_dfm_2;
      tmp_22_lpi_3_dfm_3 <= tmp_22_lpi_3_dfm_2;
      tmp_20_lpi_3_dfm_3 <= tmp_20_lpi_3_dfm_2;
      tmp_18_lpi_3_dfm_3 <= tmp_18_lpi_3_dfm_2;
      tmp_16_lpi_3_dfm_3 <= tmp_16_lpi_3_dfm_2;
      tmp_14_lpi_3_dfm_3 <= tmp_14_lpi_3_dfm_2;
      tmp_12_lpi_3_dfm_3 <= tmp_12_lpi_3_dfm_2;
      tmp_10_lpi_3_dfm_3 <= tmp_10_lpi_3_dfm_2;
      tmp_8_lpi_3_dfm_3 <= tmp_8_lpi_3_dfm_2;
      tmp_6_lpi_3_dfm_3 <= tmp_6_lpi_3_dfm_2;
      tmp_4_lpi_3_dfm_3 <= tmp_4_lpi_3_dfm_2;
      tmp_2_lpi_3_dfm_3 <= tmp_2_lpi_3_dfm_2;
      tmp_lpi_3_dfm_3 <= tmp_lpi_3_dfm_2;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_4 <= 1'b0;
    end
    else if ( INNER_LOOP2_r_and_20_cse ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_4 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_3;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP2_stage_0_4 & INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_3
        ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_4 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_3;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP2_stage_0_4 & (~ INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_3)
        ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_4 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_3;
    end
  end
  always @(posedge clk) begin
    if ( INNER_LOOP2_r_and_23_cse ) begin
      tmp_30_lpi_3_dfm_2 <= tmp_30_lpi_3_dfm_1;
      tmp_28_lpi_3_dfm_2 <= tmp_28_lpi_3_dfm_1;
      tmp_26_lpi_3_dfm_2 <= tmp_26_lpi_3_dfm_1;
      tmp_24_lpi_3_dfm_2 <= tmp_24_lpi_3_dfm_1;
      tmp_22_lpi_3_dfm_2 <= tmp_22_lpi_3_dfm_1;
      tmp_20_lpi_3_dfm_2 <= tmp_20_lpi_3_dfm_1;
      tmp_18_lpi_3_dfm_2 <= tmp_18_lpi_3_dfm_1;
      tmp_16_lpi_3_dfm_2 <= tmp_16_lpi_3_dfm_1;
      tmp_14_lpi_3_dfm_2 <= tmp_14_lpi_3_dfm_1;
      tmp_12_lpi_3_dfm_2 <= tmp_12_lpi_3_dfm_1;
      tmp_10_lpi_3_dfm_2 <= tmp_10_lpi_3_dfm_1;
      tmp_8_lpi_3_dfm_2 <= tmp_8_lpi_3_dfm_1;
      tmp_6_lpi_3_dfm_2 <= tmp_6_lpi_3_dfm_1;
      tmp_4_lpi_3_dfm_2 <= tmp_4_lpi_3_dfm_1;
      tmp_2_lpi_3_dfm_2 <= tmp_2_lpi_3_dfm_1;
      tmp_lpi_3_dfm_2 <= tmp_lpi_3_dfm_1;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_3 <= 1'b0;
    end
    else if ( INNER_LOOP2_r_and_23_cse ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_3 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_2;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP2_stage_0_3 & INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_2
        ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_3 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_2;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP2_stage_0_3 & (~ INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_2)
        ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_3 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_2;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_2 <= 1'b0;
    end
    else if ( core_wen & INNER_LOOP2_stage_0_2 ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_2 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_1;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP2_stage_0_2 & INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_1
        ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_2 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_1;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP2_stage_0_2 & (~ INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm_1)
        ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_2 <= INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_1;
    end
  end
  always @(posedge clk) begin
    if ( butterFly1_31_f1_and_7_cse ) begin
      tmp_30_lpi_3_dfm_1 <= MUX_v_32_2_2(yt_rsc_0_30_i_q_d, yt_rsc_1_30_i_q_d, twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_28_lpi_3_dfm_1 <= MUX_v_32_2_2(yt_rsc_0_28_i_q_d, yt_rsc_1_28_i_q_d, twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_26_lpi_3_dfm_1 <= MUX_v_32_2_2(yt_rsc_0_26_i_q_d, yt_rsc_1_26_i_q_d, twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_24_lpi_3_dfm_1 <= MUX_v_32_2_2(yt_rsc_0_24_i_q_d, yt_rsc_1_24_i_q_d, twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_22_lpi_3_dfm_1 <= MUX_v_32_2_2(yt_rsc_0_22_i_q_d, yt_rsc_1_22_i_q_d, twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_20_lpi_3_dfm_1 <= MUX_v_32_2_2(yt_rsc_0_20_i_q_d, yt_rsc_1_20_i_q_d, twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_18_lpi_3_dfm_1 <= MUX_v_32_2_2(yt_rsc_0_18_i_q_d, yt_rsc_1_18_i_q_d, twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_16_lpi_3_dfm_1 <= MUX_v_32_2_2(yt_rsc_0_16_i_q_d, yt_rsc_1_16_i_q_d, twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_14_lpi_3_dfm_1 <= MUX_v_32_2_2(yt_rsc_0_14_i_q_d, yt_rsc_1_14_i_q_d, twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_12_lpi_3_dfm_1 <= MUX_v_32_2_2(yt_rsc_0_12_i_q_d, yt_rsc_1_12_i_q_d, twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_10_lpi_3_dfm_1 <= MUX_v_32_2_2(yt_rsc_0_10_i_q_d, yt_rsc_1_10_i_q_d, twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_8_lpi_3_dfm_1 <= MUX_v_32_2_2(yt_rsc_0_8_i_q_d, yt_rsc_1_8_i_q_d, twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_6_lpi_3_dfm_1 <= MUX_v_32_2_2(yt_rsc_0_6_i_q_d, yt_rsc_1_6_i_q_d, twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_4_lpi_3_dfm_1 <= MUX_v_32_2_2(yt_rsc_0_4_i_q_d, yt_rsc_1_4_i_q_d, twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_2_lpi_3_dfm_1 <= MUX_v_32_2_2(yt_rsc_0_2_i_q_d, yt_rsc_1_2_i_q_d, twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_lpi_3_dfm_1 <= MUX_v_32_2_2(yt_rsc_0_0_i_q_d, yt_rsc_1_0_i_q_d, twiddle_h_rsc_0_0_i_s_raddr_core_4);
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP2_stage_0 & INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm
        ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_20_itm_1 <= INNER_LOOP2_r_9_4_sva_4_0[4:1];
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP2_stage_0 & (~ INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_161_itm)
        ) begin
      INNER_LOOP2_r_slc_INNER_LOOP2_r_9_4_4_0_4210_itm_1 <= INNER_LOOP2_r_9_4_sva_4_0[4:1];
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      c_1_sva_1 <= 1'b0;
    end
    else if ( core_wen & c_or_cse ) begin
      c_1_sva_1 <= MUX_s_1_2_2((operator_20_false_acc_cse_sva[0]), butterFly2_21_tw_butterFly2_21_tw_or_nl,
          fsm_output[8]);
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_191_itm_12 <= 1'b0;
    end
    else if ( core_wen & INNER_LOOP3_stage_0_12 ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_191_itm_12 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_11;
    end
  end
  always @(posedge clk) begin
    if ( modulo_add_32_qelse_and_cse ) begin
      modulo_add_32_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_32_sva_1, z_out_128,
          z_out_32);
      modulo_add_33_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_33_sva_1, z_out_126,
          z_out_1_32);
      modulo_add_34_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_34_sva_1, modulo_add_34_qif_acc_nl,
          z_out_2_32);
      modulo_add_35_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_35_sva_1, modulo_add_35_qif_acc_nl,
          z_out_3_32);
      modulo_add_36_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_36_sva_1, z_out_131,
          z_out_4_32);
      modulo_add_37_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_37_sva_1, modulo_add_37_qif_acc_nl,
          z_out_5_32);
      modulo_add_38_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_38_sva_1, z_out_130,
          z_out_6_32);
      modulo_add_39_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_39_sva_1, modulo_add_39_qif_acc_nl,
          z_out_7_32);
      modulo_add_40_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_40_sva_1, z_out_129,
          z_out_8_32);
      modulo_add_41_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_41_sva_1, modulo_add_41_qif_acc_nl,
          z_out_9_32);
      modulo_add_42_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_42_sva_1, z_out_127,
          z_out_10_32);
      modulo_add_43_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_43_sva_1, modulo_add_43_qif_acc_nl,
          z_out_11_32);
      modulo_add_44_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_44_sva_1, modulo_add_44_qif_acc_nl,
          z_out_12_32);
      modulo_add_45_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_45_sva_1, modulo_add_45_qif_acc_nl,
          z_out_13_32);
      modulo_add_46_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_46_sva_1, z_out_125,
          z_out_14_32);
      modulo_add_47_qr_lpi_3_dfm_1 <= MUX_v_32_2_2(modulo_add_base_47_sva_1, modulo_add_47_qif_acc_nl,
          z_out_15_32);
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_11 <= 1'b0;
    end
    else if ( modulo_add_32_qelse_and_cse ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_11 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_10;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0_11 & (~ INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_10)
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_321_itm_11 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_416_itm_10;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0_11 & INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_10
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_337_itm_11 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_432_itm_10;
    end
  end
  always @(posedge clk) begin
    if ( butterFly2_and_cse ) begin
      modulo_add_base_47_sva_1 <= nl_modulo_add_base_47_sva_1[31:0];
      modulo_add_base_46_sva_1 <= nl_modulo_add_base_46_sva_1[31:0];
      modulo_add_base_45_sva_1 <= nl_modulo_add_base_45_sva_1[31:0];
      modulo_add_base_44_sva_1 <= nl_modulo_add_base_44_sva_1[31:0];
      modulo_add_base_43_sva_1 <= nl_modulo_add_base_43_sva_1[31:0];
      modulo_add_base_42_sva_1 <= nl_modulo_add_base_42_sva_1[31:0];
      modulo_add_base_41_sva_1 <= nl_modulo_add_base_41_sva_1[31:0];
      modulo_add_base_40_sva_1 <= nl_modulo_add_base_40_sva_1[31:0];
      modulo_add_base_39_sva_1 <= nl_modulo_add_base_39_sva_1[31:0];
      modulo_add_base_38_sva_1 <= z_out_136;
      modulo_add_base_37_sva_1 <= z_out_137;
      modulo_add_base_36_sva_1 <= z_out_133;
      modulo_add_base_35_sva_1 <= z_out_139;
      modulo_add_base_34_sva_1 <= z_out_140;
      modulo_add_base_33_sva_1 <= z_out_141;
      modulo_add_base_32_sva_1 <= z_out_138;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      modulo_sub_base_32_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_33_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_34_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_35_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_36_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_37_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_38_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_39_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_40_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_41_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_42_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_43_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_44_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_45_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_46_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_47_sva_1 <= 32'b00000000000000000000000000000000;
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_10 <= 1'b0;
    end
    else if ( butterFly2_and_cse ) begin
      modulo_sub_base_32_sva_1 <= z_out_142;
      modulo_sub_base_33_sva_1 <= z_out_143;
      modulo_sub_base_34_sva_1 <= z_out_144;
      modulo_sub_base_35_sva_1 <= z_out_145;
      modulo_sub_base_36_sva_1 <= z_out_146;
      modulo_sub_base_37_sva_1 <= z_out_134;
      modulo_sub_base_38_sva_1 <= z_out_135;
      modulo_sub_base_39_sva_1 <= nl_modulo_sub_base_39_sva_1[31:0];
      modulo_sub_base_40_sva_1 <= nl_modulo_sub_base_40_sva_1[31:0];
      modulo_sub_base_41_sva_1 <= nl_modulo_sub_base_41_sva_1[31:0];
      modulo_sub_base_42_sva_1 <= nl_modulo_sub_base_42_sva_1[31:0];
      modulo_sub_base_43_sva_1 <= nl_modulo_sub_base_43_sva_1[31:0];
      modulo_sub_base_44_sva_1 <= nl_modulo_sub_base_44_sva_1[31:0];
      modulo_sub_base_45_sva_1 <= nl_modulo_sub_base_45_sva_1[31:0];
      modulo_sub_base_46_sva_1 <= nl_modulo_sub_base_46_sva_1[31:0];
      modulo_sub_base_47_sva_1 <= nl_modulo_sub_base_47_sva_1[31:0];
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_10 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_9;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0_10 & (~ INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_9)
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_416_itm_10 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_9;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0_10 & INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_9
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_432_itm_10 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_9;
    end
  end
  always @(posedge clk) begin
    if ( mult_47_if_and_cse ) begin
      mult_32_res_sva_1 <= z_out_62;
      mult_33_res_sva_1 <= z_out_63;
      mult_34_res_sva_1 <= z_out_64;
      mult_35_res_sva_1 <= z_out_65;
      mult_36_res_sva_1 <= z_out_66;
      mult_37_res_sva_1 <= z_out_67;
      mult_38_res_sva_1 <= z_out_68;
      mult_39_res_sva_1 <= z_out_69;
      mult_40_res_sva_1 <= z_out_70;
      mult_41_res_sva_1 <= mult_41_res_sva_2;
      mult_42_res_sva_1 <= mult_42_res_sva_2;
      mult_43_res_sva_1 <= mult_43_res_sva_2;
      mult_44_res_sva_1 <= mult_44_res_sva_2;
      mult_45_res_sva_1 <= mult_45_res_sva_2;
      mult_46_res_sva_1 <= mult_46_res_sva_2;
      mult_47_res_sva_1 <= mult_47_res_sva_2;
      tmp_126_lpi_3_dfm_8 <= tmp_126_lpi_3_dfm_7;
      tmp_124_lpi_3_dfm_8 <= tmp_124_lpi_3_dfm_7;
      tmp_122_lpi_3_dfm_8 <= tmp_122_lpi_3_dfm_7;
      tmp_120_lpi_3_dfm_8 <= tmp_120_lpi_3_dfm_7;
      tmp_118_lpi_3_dfm_8 <= tmp_118_lpi_3_dfm_7;
      tmp_116_lpi_3_dfm_8 <= tmp_116_lpi_3_dfm_7;
      tmp_114_lpi_3_dfm_8 <= tmp_114_lpi_3_dfm_7;
      tmp_112_lpi_3_dfm_8 <= tmp_112_lpi_3_dfm_7;
      tmp_110_lpi_3_dfm_8 <= tmp_110_lpi_3_dfm_7;
      tmp_108_lpi_3_dfm_8 <= tmp_108_lpi_3_dfm_7;
      tmp_106_lpi_3_dfm_8 <= tmp_106_lpi_3_dfm_7;
      tmp_104_lpi_3_dfm_8 <= tmp_104_lpi_3_dfm_7;
      tmp_102_lpi_3_dfm_8 <= tmp_102_lpi_3_dfm_7;
      tmp_100_lpi_3_dfm_8 <= tmp_100_lpi_3_dfm_7;
      tmp_98_lpi_3_dfm_8 <= tmp_98_lpi_3_dfm_7;
      tmp_96_lpi_3_dfm_8 <= tmp_96_lpi_3_dfm_7;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      mult_47_slc_32_svs_st_1 <= 1'b0;
      mult_46_slc_32_svs_st_1 <= 1'b0;
      mult_45_slc_32_svs_st_1 <= 1'b0;
      mult_44_slc_32_svs_st_1 <= 1'b0;
      mult_43_slc_32_svs_st_1 <= 1'b0;
      mult_42_slc_32_svs_st_1 <= 1'b0;
      mult_41_slc_32_svs_st_1 <= 1'b0;
      mult_40_slc_32_svs_st_1 <= 1'b0;
      mult_39_slc_32_svs_st_1 <= 1'b0;
      mult_38_slc_32_svs_st_1 <= 1'b0;
      mult_37_slc_32_svs_st_1 <= 1'b0;
      mult_36_slc_32_svs_st_1 <= 1'b0;
      mult_35_slc_32_svs_st_1 <= 1'b0;
      mult_34_slc_32_svs_st_1 <= 1'b0;
      mult_33_slc_32_svs_st_1 <= 1'b0;
      mult_32_slc_32_svs_st_1 <= 1'b0;
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_9 <= 1'b0;
    end
    else if ( mult_47_if_and_cse ) begin
      mult_47_slc_32_svs_st_1 <= readslicef_33_1_32(mult_47_if_acc_1_nl);
      mult_46_slc_32_svs_st_1 <= readslicef_33_1_32(mult_46_if_acc_1_nl);
      mult_45_slc_32_svs_st_1 <= readslicef_33_1_32(mult_45_if_acc_1_nl);
      mult_44_slc_32_svs_st_1 <= readslicef_33_1_32(mult_44_if_acc_1_nl);
      mult_43_slc_32_svs_st_1 <= readslicef_33_1_32(mult_43_if_acc_1_nl);
      mult_42_slc_32_svs_st_1 <= readslicef_33_1_32(mult_42_if_acc_1_nl);
      mult_41_slc_32_svs_st_1 <= readslicef_33_1_32(mult_41_if_acc_1_nl);
      mult_40_slc_32_svs_st_1 <= readslicef_33_1_32(mult_40_if_acc_1_nl);
      mult_39_slc_32_svs_st_1 <= readslicef_33_1_32(mult_39_if_acc_1_nl);
      mult_38_slc_32_svs_st_1 <= readslicef_33_1_32(mult_38_if_acc_1_nl);
      mult_37_slc_32_svs_st_1 <= readslicef_33_1_32(mult_37_if_acc_1_nl);
      mult_36_slc_32_svs_st_1 <= readslicef_33_1_32(mult_36_if_acc_1_nl);
      mult_35_slc_32_svs_st_1 <= readslicef_33_1_32(mult_35_if_acc_1_nl);
      mult_34_slc_32_svs_st_1 <= readslicef_33_1_32(mult_34_if_acc_1_nl);
      mult_33_slc_32_svs_st_1 <= readslicef_33_1_32(mult_33_if_acc_1_nl);
      mult_32_slc_32_svs_st_1 <= readslicef_33_1_32(mult_32_if_acc_1_nl);
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_9 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_8;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      butterFly2_15_tw_equal_tmp_1 <= 1'b0;
      butterFly2_15_tw_equal_tmp_3_1 <= 1'b0;
      butterFly2_15_tw_equal_tmp_5_1 <= 1'b0;
      butterFly2_15_tw_equal_tmp_6_1 <= 1'b0;
      butterFly2_15_tw_equal_tmp_7_1 <= 1'b0;
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_1 <= 1'b0;
    end
    else if ( butterFly2_15_tw_and_cse ) begin
      butterFly2_15_tw_equal_tmp_1 <= ~((operator_33_true_2_lshift_psp_2_0_sva!=3'b000));
      butterFly2_15_tw_equal_tmp_3_1 <= (operator_33_true_2_lshift_psp_2_0_sva==3'b011);
      butterFly2_15_tw_equal_tmp_5_1 <= (operator_33_true_2_lshift_psp_2_0_sva==3'b101);
      butterFly2_15_tw_equal_tmp_6_1 <= (operator_33_true_2_lshift_psp_2_0_sva==3'b110);
      butterFly2_15_tw_equal_tmp_7_1 <= (operator_33_true_2_lshift_psp_2_0_sva==3'b111);
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_1 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      operator_33_true_2_lshift_psp_2_0_sva <= 3'b000;
    end
    else if ( core_wen & (~ (fsm_output[6])) ) begin
      operator_33_true_2_lshift_psp_2_0_sva <= z_out_48[2:0];
    end
  end
  always @(posedge clk) begin
    if ( mult_47_z_and_cse ) begin
      mult_47_z_asn_itm_4 <= mult_47_z_asn_itm_3;
      mult_46_z_asn_itm_4 <= mult_46_z_asn_itm_3;
      mult_45_z_asn_itm_4 <= mult_45_z_asn_itm_3;
      mult_44_z_asn_itm_4 <= mult_44_z_asn_itm_3;
      mult_43_z_asn_itm_4 <= mult_43_z_asn_itm_3;
      mult_42_z_asn_itm_4 <= mult_42_z_asn_itm_3;
      mult_41_z_asn_itm_4 <= mult_41_z_asn_itm_3;
      mult_40_z_asn_itm_4 <= mult_40_z_asn_itm_3;
      mult_39_z_asn_itm_4 <= mult_39_z_asn_itm_3;
      mult_38_z_asn_itm_4 <= mult_38_z_asn_itm_3;
      mult_37_z_asn_itm_4 <= mult_37_z_asn_itm_3;
      mult_36_z_asn_itm_4 <= mult_36_z_asn_itm_3;
      mult_35_z_asn_itm_4 <= mult_35_z_asn_itm_3;
      mult_34_z_asn_itm_4 <= mult_34_z_asn_itm_3;
      mult_33_z_asn_itm_4 <= mult_33_z_asn_itm_3;
      mult_32_z_asn_itm_4 <= mult_32_z_asn_itm_3;
      tmp_126_lpi_3_dfm_7 <= tmp_126_lpi_3_dfm_6;
      tmp_124_lpi_3_dfm_7 <= tmp_124_lpi_3_dfm_6;
      tmp_122_lpi_3_dfm_7 <= tmp_122_lpi_3_dfm_6;
      tmp_120_lpi_3_dfm_7 <= tmp_120_lpi_3_dfm_6;
      tmp_118_lpi_3_dfm_7 <= tmp_118_lpi_3_dfm_6;
      tmp_116_lpi_3_dfm_7 <= tmp_116_lpi_3_dfm_6;
      tmp_114_lpi_3_dfm_7 <= tmp_114_lpi_3_dfm_6;
      tmp_112_lpi_3_dfm_7 <= tmp_112_lpi_3_dfm_6;
      tmp_110_lpi_3_dfm_7 <= tmp_110_lpi_3_dfm_6;
      tmp_108_lpi_3_dfm_7 <= tmp_108_lpi_3_dfm_6;
      tmp_106_lpi_3_dfm_7 <= tmp_106_lpi_3_dfm_6;
      tmp_104_lpi_3_dfm_7 <= tmp_104_lpi_3_dfm_6;
      tmp_102_lpi_3_dfm_7 <= tmp_102_lpi_3_dfm_6;
      tmp_100_lpi_3_dfm_7 <= tmp_100_lpi_3_dfm_6;
      tmp_98_lpi_3_dfm_7 <= tmp_98_lpi_3_dfm_6;
      tmp_96_lpi_3_dfm_7 <= tmp_96_lpi_3_dfm_6;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_8 <= 1'b0;
    end
    else if ( mult_47_z_and_cse ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_8 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_7;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0_9 & INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_8
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_9 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_8;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0_9 & (~ INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_8)
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_9 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_8;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0_8 & INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_7
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_8 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_7;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0_8 & (~ INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_7)
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_8 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_7;
    end
  end
  always @(posedge clk) begin
    if ( mult_47_z_and_1_cse ) begin
      mult_47_z_asn_itm_3 <= mult_47_z_asn_itm_2;
      mult_46_z_asn_itm_3 <= mult_46_z_asn_itm_2;
      mult_45_z_asn_itm_3 <= mult_45_z_asn_itm_2;
      mult_44_z_asn_itm_3 <= mult_44_z_asn_itm_2;
      mult_43_z_asn_itm_3 <= mult_43_z_asn_itm_2;
      mult_42_z_asn_itm_3 <= mult_42_z_asn_itm_2;
      mult_41_z_asn_itm_3 <= mult_41_z_asn_itm_2;
      mult_40_z_asn_itm_3 <= mult_40_z_asn_itm_2;
      mult_39_z_asn_itm_3 <= mult_39_z_asn_itm_2;
      mult_38_z_asn_itm_3 <= mult_38_z_asn_itm_2;
      mult_37_z_asn_itm_3 <= mult_37_z_asn_itm_2;
      mult_36_z_asn_itm_3 <= mult_36_z_asn_itm_2;
      mult_35_z_asn_itm_3 <= mult_35_z_asn_itm_2;
      mult_34_z_asn_itm_3 <= mult_34_z_asn_itm_2;
      mult_33_z_asn_itm_3 <= mult_33_z_asn_itm_2;
      mult_32_z_asn_itm_3 <= mult_32_z_asn_itm_2;
      tmp_126_lpi_3_dfm_6 <= tmp_126_lpi_3_dfm_5;
      tmp_124_lpi_3_dfm_6 <= tmp_124_lpi_3_dfm_5;
      tmp_122_lpi_3_dfm_6 <= tmp_122_lpi_3_dfm_5;
      tmp_120_lpi_3_dfm_6 <= tmp_120_lpi_3_dfm_5;
      tmp_118_lpi_3_dfm_6 <= tmp_118_lpi_3_dfm_5;
      tmp_116_lpi_3_dfm_6 <= tmp_116_lpi_3_dfm_5;
      tmp_114_lpi_3_dfm_6 <= tmp_114_lpi_3_dfm_5;
      tmp_112_lpi_3_dfm_6 <= tmp_112_lpi_3_dfm_5;
      tmp_110_lpi_3_dfm_6 <= tmp_110_lpi_3_dfm_5;
      tmp_108_lpi_3_dfm_6 <= tmp_108_lpi_3_dfm_5;
      tmp_106_lpi_3_dfm_6 <= tmp_106_lpi_3_dfm_5;
      tmp_104_lpi_3_dfm_6 <= tmp_104_lpi_3_dfm_5;
      tmp_102_lpi_3_dfm_6 <= tmp_102_lpi_3_dfm_5;
      tmp_100_lpi_3_dfm_6 <= tmp_100_lpi_3_dfm_5;
      tmp_98_lpi_3_dfm_6 <= tmp_98_lpi_3_dfm_5;
      tmp_96_lpi_3_dfm_6 <= tmp_96_lpi_3_dfm_5;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_7 <= 1'b0;
    end
    else if ( mult_47_z_and_1_cse ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_7 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_6;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0_7 & INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_6
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_7 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_6;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0_7 & (~ INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_6)
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_7 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_6;
    end
  end
  always @(posedge clk) begin
    if ( mult_47_z_and_2_cse ) begin
      mult_47_z_asn_itm_2 <= mult_z_asn_itm_1;
      mult_46_z_asn_itm_2 <= mult_14_z_asn_itm_1;
      mult_45_z_asn_itm_2 <= mult_9_z_asn_itm_1;
      mult_44_z_asn_itm_2 <= mult_6_z_asn_itm_1;
      mult_43_z_asn_itm_2 <= mult_1_z_asn_itm_1;
      mult_42_z_asn_itm_2 <= mult_3_z_asn_itm_1;
      mult_41_z_asn_itm_2 <= mult_7_z_asn_itm_1;
      mult_40_z_asn_itm_2 <= mult_11_z_asn_itm_1;
      mult_39_z_asn_itm_2 <= mult_13_z_asn_itm_1;
      mult_38_z_asn_itm_2 <= mult_8_z_asn_itm_1;
      mult_37_z_asn_itm_2 <= mult_5_z_asn_itm_1;
      mult_36_z_asn_itm_2 <= mult_2_z_asn_itm_1;
      mult_35_z_asn_itm_2 <= mult_4_z_asn_itm_1;
      mult_34_z_asn_itm_2 <= mult_10_z_asn_itm_1;
      mult_33_z_asn_itm_2 <= mult_12_z_asn_itm_1;
      mult_32_z_asn_itm_2 <= mult_15_z_asn_itm_1;
      tmp_126_lpi_3_dfm_5 <= tmp_126_lpi_3_dfm_4;
      tmp_124_lpi_3_dfm_5 <= tmp_124_lpi_3_dfm_4;
      tmp_122_lpi_3_dfm_5 <= tmp_122_lpi_3_dfm_4;
      tmp_120_lpi_3_dfm_5 <= tmp_120_lpi_3_dfm_4;
      tmp_118_lpi_3_dfm_5 <= tmp_118_lpi_3_dfm_4;
      tmp_116_lpi_3_dfm_5 <= tmp_116_lpi_3_dfm_4;
      tmp_114_lpi_3_dfm_5 <= tmp_114_lpi_3_dfm_4;
      tmp_112_lpi_3_dfm_5 <= tmp_112_lpi_3_dfm_4;
      tmp_110_lpi_3_dfm_5 <= tmp_110_lpi_3_dfm_4;
      tmp_108_lpi_3_dfm_5 <= tmp_108_lpi_3_dfm_4;
      tmp_106_lpi_3_dfm_5 <= tmp_106_lpi_3_dfm_4;
      tmp_104_lpi_3_dfm_5 <= tmp_104_lpi_3_dfm_4;
      tmp_102_lpi_3_dfm_5 <= tmp_102_lpi_3_dfm_4;
      tmp_100_lpi_3_dfm_5 <= tmp_100_lpi_3_dfm_4;
      tmp_98_lpi_3_dfm_5 <= tmp_98_lpi_3_dfm_4;
      tmp_96_lpi_3_dfm_5 <= tmp_96_lpi_3_dfm_4;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_6 <= 1'b0;
    end
    else if ( mult_47_z_and_2_cse ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_6 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_5;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0_6 & INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_5
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_6 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_5;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0_6 & (~ INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_5)
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_6 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_5;
    end
  end
  always @(posedge clk) begin
    if ( INNER_LOOP3_r_and_19_cse ) begin
      tmp_126_lpi_3_dfm_4 <= tmp_126_lpi_3_dfm_3;
      tmp_124_lpi_3_dfm_4 <= tmp_124_lpi_3_dfm_3;
      tmp_122_lpi_3_dfm_4 <= tmp_122_lpi_3_dfm_3;
      tmp_120_lpi_3_dfm_4 <= tmp_120_lpi_3_dfm_3;
      tmp_118_lpi_3_dfm_4 <= tmp_118_lpi_3_dfm_3;
      tmp_116_lpi_3_dfm_4 <= tmp_116_lpi_3_dfm_3;
      tmp_114_lpi_3_dfm_4 <= tmp_114_lpi_3_dfm_3;
      tmp_112_lpi_3_dfm_4 <= tmp_112_lpi_3_dfm_3;
      tmp_110_lpi_3_dfm_4 <= tmp_110_lpi_3_dfm_3;
      tmp_108_lpi_3_dfm_4 <= tmp_108_lpi_3_dfm_3;
      tmp_106_lpi_3_dfm_4 <= tmp_106_lpi_3_dfm_3;
      tmp_104_lpi_3_dfm_4 <= tmp_104_lpi_3_dfm_3;
      tmp_102_lpi_3_dfm_4 <= tmp_102_lpi_3_dfm_3;
      tmp_100_lpi_3_dfm_4 <= tmp_100_lpi_3_dfm_3;
      tmp_98_lpi_3_dfm_4 <= tmp_98_lpi_3_dfm_3;
      tmp_96_lpi_3_dfm_4 <= tmp_96_lpi_3_dfm_3;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_5 <= 1'b0;
    end
    else if ( INNER_LOOP3_r_and_19_cse ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_5 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_4;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0_5 & INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_4
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_5 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_4;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0_5 & (~ INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_4)
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_5 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_4;
    end
  end
  always @(posedge clk) begin
    if ( INNER_LOOP3_r_and_22_cse ) begin
      tmp_126_lpi_3_dfm_3 <= tmp_126_lpi_3_dfm_2;
      tmp_124_lpi_3_dfm_3 <= tmp_124_lpi_3_dfm_2;
      tmp_122_lpi_3_dfm_3 <= tmp_122_lpi_3_dfm_2;
      tmp_120_lpi_3_dfm_3 <= tmp_120_lpi_3_dfm_2;
      tmp_118_lpi_3_dfm_3 <= tmp_118_lpi_3_dfm_2;
      tmp_116_lpi_3_dfm_3 <= tmp_116_lpi_3_dfm_2;
      tmp_114_lpi_3_dfm_3 <= tmp_114_lpi_3_dfm_2;
      tmp_112_lpi_3_dfm_3 <= tmp_112_lpi_3_dfm_2;
      tmp_110_lpi_3_dfm_3 <= tmp_110_lpi_3_dfm_2;
      tmp_108_lpi_3_dfm_3 <= tmp_108_lpi_3_dfm_2;
      tmp_106_lpi_3_dfm_3 <= tmp_106_lpi_3_dfm_2;
      tmp_104_lpi_3_dfm_3 <= tmp_104_lpi_3_dfm_2;
      tmp_102_lpi_3_dfm_3 <= tmp_102_lpi_3_dfm_2;
      tmp_100_lpi_3_dfm_3 <= tmp_100_lpi_3_dfm_2;
      tmp_98_lpi_3_dfm_3 <= tmp_98_lpi_3_dfm_2;
      tmp_96_lpi_3_dfm_3 <= tmp_96_lpi_3_dfm_2;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_4 <= 1'b0;
    end
    else if ( INNER_LOOP3_r_and_22_cse ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_4 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_3;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0_4 & INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_3
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_4 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_3;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0_4 & (~ INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_3)
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_4 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_3;
    end
  end
  always @(posedge clk) begin
    if ( INNER_LOOP3_r_and_25_cse ) begin
      tmp_126_lpi_3_dfm_2 <= tmp_126_lpi_3_dfm_1;
      tmp_124_lpi_3_dfm_2 <= tmp_124_lpi_3_dfm_1;
      tmp_122_lpi_3_dfm_2 <= tmp_122_lpi_3_dfm_1;
      tmp_120_lpi_3_dfm_2 <= tmp_120_lpi_3_dfm_1;
      tmp_118_lpi_3_dfm_2 <= tmp_118_lpi_3_dfm_1;
      tmp_116_lpi_3_dfm_2 <= tmp_116_lpi_3_dfm_1;
      tmp_114_lpi_3_dfm_2 <= tmp_114_lpi_3_dfm_1;
      tmp_112_lpi_3_dfm_2 <= tmp_112_lpi_3_dfm_1;
      tmp_110_lpi_3_dfm_2 <= tmp_110_lpi_3_dfm_1;
      tmp_108_lpi_3_dfm_2 <= tmp_108_lpi_3_dfm_1;
      tmp_106_lpi_3_dfm_2 <= tmp_106_lpi_3_dfm_1;
      tmp_104_lpi_3_dfm_2 <= tmp_104_lpi_3_dfm_1;
      tmp_102_lpi_3_dfm_2 <= tmp_102_lpi_3_dfm_1;
      tmp_100_lpi_3_dfm_2 <= tmp_100_lpi_3_dfm_1;
      tmp_98_lpi_3_dfm_2 <= tmp_98_lpi_3_dfm_1;
      tmp_96_lpi_3_dfm_2 <= tmp_96_lpi_3_dfm_1;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_3 <= 1'b0;
    end
    else if ( INNER_LOOP3_r_and_25_cse ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_3 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_2;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0_3 & INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_2
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_3 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_2;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0_3 & (~ INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_2)
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_3 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_2;
    end
  end
  always @(posedge clk) begin
    if ( INNER_LOOP3_r_and_28_cse ) begin
      tmp_126_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_30_i_s_din_mxwt, xt_rsc_1_30_i_s_din_mxwt,
          twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_124_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_28_i_s_din_mxwt, xt_rsc_1_28_i_s_din_mxwt,
          twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_122_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_26_i_s_din_mxwt, xt_rsc_1_26_i_s_din_mxwt,
          twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_120_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_24_i_s_din_mxwt, xt_rsc_1_24_i_s_din_mxwt,
          twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_118_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_22_i_s_din_mxwt, xt_rsc_1_22_i_s_din_mxwt,
          twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_116_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_20_i_s_din_mxwt, xt_rsc_1_20_i_s_din_mxwt,
          twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_114_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_18_i_s_din_mxwt, xt_rsc_1_18_i_s_din_mxwt,
          twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_112_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_16_i_s_din_mxwt, xt_rsc_1_16_i_s_din_mxwt,
          twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_110_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_14_i_s_din_mxwt, xt_rsc_1_14_i_s_din_mxwt,
          twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_108_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_12_i_s_din_mxwt, xt_rsc_1_12_i_s_din_mxwt,
          twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_106_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_10_i_s_din_mxwt, xt_rsc_1_10_i_s_din_mxwt,
          twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_104_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_8_i_s_din_mxwt, xt_rsc_1_8_i_s_din_mxwt,
          twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_102_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_6_i_s_din_mxwt, xt_rsc_1_6_i_s_din_mxwt,
          twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_100_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_4_i_s_din_mxwt, xt_rsc_1_4_i_s_din_mxwt,
          twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_98_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_2_i_s_din_mxwt, xt_rsc_1_2_i_s_din_mxwt,
          twiddle_h_rsc_0_0_i_s_raddr_core_4);
      tmp_96_lpi_3_dfm_1 <= MUX_v_32_2_2(xt_rsc_0_0_i_s_din_mxwt, xt_rsc_1_0_i_s_din_mxwt,
          twiddle_h_rsc_0_0_i_s_raddr_core_4);
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_2 <= 1'b0;
    end
    else if ( INNER_LOOP3_r_and_28_cse ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_2 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_1;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0_2 & INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_1
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_2 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_1;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0_2 & (~ INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm_1)
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_2 <= INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_1;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0 & INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_20_itm_1 <= INNER_LOOP3_r_9_4_sva_4_0[4:1];
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP3_stage_0 & (~ INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm)
        ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_4241_itm_1 <= INNER_LOOP3_r_9_4_sva_4_0[4:1];
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm <= 1'b0;
    end
    else if ( core_wen & ((fsm_output[5]) | (INNER_LOOP3_stage_0 & (~ (z_out_50[5]))
        & (fsm_output[6]))) ) begin
      INNER_LOOP3_r_slc_INNER_LOOP3_r_9_4_4_0_192_itm <= (z_out_50[0]) & (fsm_output[6]);
    end
  end
  always @(posedge clk) begin
    if ( butterFly2_16_and_cse ) begin
      modulo_add_base_48_sva_1 <= z_out_102;
      modulo_add_base_49_sva_1 <= z_out_103;
      modulo_add_base_50_sva_1 <= nl_modulo_add_base_50_sva_1[31:0];
      modulo_add_base_51_sva_1 <= nl_modulo_add_base_51_sva_1[31:0];
      modulo_add_base_52_sva_1 <= nl_modulo_add_base_52_sva_1[31:0];
      modulo_add_base_53_sva_1 <= nl_modulo_add_base_53_sva_1[31:0];
      modulo_add_base_54_sva_1 <= nl_modulo_add_base_54_sva_1[31:0];
      modulo_add_base_55_sva_1 <= nl_modulo_add_base_55_sva_1[31:0];
      modulo_add_base_56_sva_1 <= nl_modulo_add_base_56_sva_1[31:0];
      modulo_add_base_57_sva_1 <= nl_modulo_add_base_57_sva_1[31:0];
      modulo_add_base_58_sva_1 <= nl_modulo_add_base_58_sva_1[31:0];
      modulo_add_base_59_sva_1 <= nl_modulo_add_base_59_sva_1[31:0];
      modulo_add_base_60_sva_1 <= nl_modulo_add_base_60_sva_1[31:0];
      modulo_add_base_61_sva_1 <= nl_modulo_add_base_61_sva_1[31:0];
      modulo_add_base_62_sva_1 <= nl_modulo_add_base_62_sva_1[31:0];
      modulo_add_base_63_sva_1 <= nl_modulo_add_base_63_sva_1[31:0];
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      modulo_sub_base_48_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_49_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_50_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_51_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_52_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_53_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_54_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_55_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_56_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_57_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_58_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_59_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_60_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_61_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_62_sva_1 <= 32'b00000000000000000000000000000000;
      modulo_sub_base_63_sva_1 <= 32'b00000000000000000000000000000000;
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_10 <= 1'b0;
    end
    else if ( butterFly2_16_and_cse ) begin
      modulo_sub_base_48_sva_1 <= z_out_142;
      modulo_sub_base_49_sva_1 <= z_out_143;
      modulo_sub_base_50_sva_1 <= z_out_146;
      modulo_sub_base_51_sva_1 <= z_out_145;
      modulo_sub_base_52_sva_1 <= z_out_144;
      modulo_sub_base_53_sva_1 <= z_out_132;
      modulo_sub_base_54_sva_1 <= nl_modulo_sub_base_54_sva_1[31:0];
      modulo_sub_base_55_sva_1 <= nl_modulo_sub_base_55_sva_1[31:0];
      modulo_sub_base_56_sva_1 <= nl_modulo_sub_base_56_sva_1[31:0];
      modulo_sub_base_57_sva_1 <= nl_modulo_sub_base_57_sva_1[31:0];
      modulo_sub_base_58_sva_1 <= nl_modulo_sub_base_58_sva_1[31:0];
      modulo_sub_base_59_sva_1 <= nl_modulo_sub_base_59_sva_1[31:0];
      modulo_sub_base_60_sva_1 <= nl_modulo_sub_base_60_sva_1[31:0];
      modulo_sub_base_61_sva_1 <= nl_modulo_sub_base_61_sva_1[31:0];
      modulo_sub_base_62_sva_1 <= nl_modulo_sub_base_62_sva_1[31:0];
      modulo_sub_base_63_sva_1 <= nl_modulo_sub_base_63_sva_1[31:0];
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_10 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_9;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP4_stage_0_10 & (~ INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_9)
        ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_321_itm_10 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_9;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP4_stage_0_10 & INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_9
        ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_337_itm_10 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_9;
    end
  end
  always @(posedge clk) begin
    if ( mult_63_if_and_cse ) begin
      mult_48_res_sva_1 <= mult_48_res_sva_2;
      mult_49_res_sva_1 <= mult_49_res_sva_2;
      mult_50_res_sva_1 <= mult_50_res_sva_2;
      mult_51_res_sva_1 <= mult_51_res_sva_2;
      mult_52_res_sva_1 <= mult_52_res_sva_2;
      mult_53_res_sva_1 <= mult_53_res_sva_2;
      mult_54_res_sva_1 <= mult_54_res_sva_2;
      mult_55_res_sva_1 <= mult_55_res_sva_2;
      mult_56_res_sva_1 <= mult_56_res_sva_2;
      mult_57_res_sva_1 <= mult_57_res_sva_2;
      mult_58_res_sva_1 <= mult_58_res_sva_2;
      mult_59_res_sva_1 <= mult_59_res_sva_2;
      mult_60_res_sva_1 <= mult_60_res_sva_2;
      mult_61_res_sva_1 <= mult_61_res_sva_2;
      mult_62_res_sva_1 <= mult_62_res_sva_2;
      mult_63_res_sva_1 <= mult_63_res_sva_2;
      tmp_62_lpi_3_dfm_8 <= tmp_62_lpi_3_dfm_7;
      tmp_60_lpi_3_dfm_8 <= tmp_60_lpi_3_dfm_7;
      tmp_58_lpi_3_dfm_8 <= tmp_58_lpi_3_dfm_7;
      tmp_56_lpi_3_dfm_8 <= tmp_56_lpi_3_dfm_7;
      tmp_54_lpi_3_dfm_8 <= tmp_54_lpi_3_dfm_7;
      tmp_52_lpi_3_dfm_8 <= tmp_52_lpi_3_dfm_7;
      tmp_50_lpi_3_dfm_8 <= tmp_50_lpi_3_dfm_7;
      tmp_48_lpi_3_dfm_8 <= tmp_48_lpi_3_dfm_7;
      tmp_46_lpi_3_dfm_8 <= tmp_46_lpi_3_dfm_7;
      tmp_44_lpi_3_dfm_8 <= tmp_44_lpi_3_dfm_7;
      tmp_42_lpi_3_dfm_8 <= tmp_42_lpi_3_dfm_7;
      tmp_40_lpi_3_dfm_8 <= tmp_40_lpi_3_dfm_7;
      tmp_38_lpi_3_dfm_8 <= tmp_38_lpi_3_dfm_7;
      tmp_36_lpi_3_dfm_8 <= tmp_36_lpi_3_dfm_7;
      tmp_34_lpi_3_dfm_8 <= tmp_34_lpi_3_dfm_7;
      tmp_32_lpi_3_dfm_8 <= tmp_32_lpi_3_dfm_7;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      mult_63_slc_32_svs_st_1 <= 1'b0;
      mult_62_slc_32_svs_st_1 <= 1'b0;
      mult_61_slc_32_svs_st_1 <= 1'b0;
      mult_60_slc_32_svs_st_1 <= 1'b0;
      mult_59_slc_32_svs_st_1 <= 1'b0;
      mult_58_slc_32_svs_st_1 <= 1'b0;
      mult_57_slc_32_svs_st_1 <= 1'b0;
      mult_56_slc_32_svs_st_1 <= 1'b0;
      mult_55_slc_32_svs_st_1 <= 1'b0;
      mult_54_slc_32_svs_st_1 <= 1'b0;
      mult_53_slc_32_svs_st_1 <= 1'b0;
      mult_52_slc_32_svs_st_1 <= 1'b0;
      mult_51_slc_32_svs_st_1 <= 1'b0;
      mult_50_slc_32_svs_st_1 <= 1'b0;
      mult_49_slc_32_svs_st_1 <= 1'b0;
      mult_48_slc_32_svs_st_1 <= 1'b0;
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_9 <= 1'b0;
    end
    else if ( mult_63_if_and_cse ) begin
      mult_63_slc_32_svs_st_1 <= z_out_31_32;
      mult_62_slc_32_svs_st_1 <= z_out_24_32;
      mult_61_slc_32_svs_st_1 <= z_out_30_32;
      mult_60_slc_32_svs_st_1 <= z_out_23_32;
      mult_59_slc_32_svs_st_1 <= z_out_29_32;
      mult_58_slc_32_svs_st_1 <= z_out_22_32;
      mult_57_slc_32_svs_st_1 <= z_out_28_32;
      mult_56_slc_32_svs_st_1 <= z_out_21_32;
      mult_55_slc_32_svs_st_1 <= z_out_27_32;
      mult_54_slc_32_svs_st_1 <= z_out_20_32;
      mult_53_slc_32_svs_st_1 <= z_out_26_32;
      mult_52_slc_32_svs_st_1 <= z_out_19_32;
      mult_51_slc_32_svs_st_1 <= z_out_25_32;
      mult_50_slc_32_svs_st_1 <= z_out_18_32;
      mult_49_slc_32_svs_st_1 <= z_out_17_32;
      mult_48_slc_32_svs_st_1 <= z_out_16_32;
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_9 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_8;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4377_itm_1 <= 1'b0;
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_1 <= 1'b0;
    end
    else if ( INNER_LOOP4_r_and_3_cse ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4377_itm_1 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4377_itm;
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_1 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      operator_33_true_3_lshift_psp_1_0_sva <= 2'b00;
    end
    else if ( core_wen & (~ (fsm_output[8])) ) begin
      operator_33_true_3_lshift_psp_1_0_sva <= operator_33_true_3_lshift_psp_1_0_sva_mx0w2;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4377_itm <= 1'b0;
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm <= 1'b0;
    end
    else if ( INNER_LOOP4_r_and_4_cse ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4377_itm <= INNER_LOOP1_r_INNER_LOOP1_r_and_6_cse[4];
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm <= INNER_LOOP1_r_INNER_LOOP1_r_and_6_cse[0];
    end
  end
  always @(posedge clk) begin
    if ( mult_63_z_and_cse ) begin
      mult_63_z_asn_itm_4 <= mult_63_z_asn_itm_3;
      mult_62_z_asn_itm_4 <= mult_62_z_asn_itm_3;
      mult_61_z_asn_itm_4 <= mult_61_z_asn_itm_3;
      mult_60_z_asn_itm_4 <= mult_60_z_asn_itm_3;
      mult_59_z_asn_itm_4 <= mult_59_z_asn_itm_3;
      mult_58_z_asn_itm_4 <= mult_58_z_asn_itm_3;
      mult_57_z_asn_itm_4 <= mult_57_z_asn_itm_3;
      mult_56_z_asn_itm_4 <= mult_56_z_asn_itm_3;
      mult_55_z_asn_itm_4 <= mult_55_z_asn_itm_3;
      mult_54_z_asn_itm_4 <= mult_54_z_asn_itm_3;
      mult_53_z_asn_itm_4 <= mult_53_z_asn_itm_3;
      mult_52_z_asn_itm_4 <= mult_52_z_asn_itm_3;
      mult_51_z_asn_itm_4 <= mult_51_z_asn_itm_3;
      mult_50_z_asn_itm_4 <= mult_50_z_asn_itm_3;
      mult_49_z_asn_itm_4 <= mult_49_z_asn_itm_3;
      mult_48_z_asn_itm_4 <= mult_48_z_asn_itm_3;
      tmp_62_lpi_3_dfm_7 <= tmp_62_lpi_3_dfm_6;
      tmp_60_lpi_3_dfm_7 <= tmp_60_lpi_3_dfm_6;
      tmp_58_lpi_3_dfm_7 <= tmp_58_lpi_3_dfm_6;
      tmp_56_lpi_3_dfm_7 <= tmp_56_lpi_3_dfm_6;
      tmp_54_lpi_3_dfm_7 <= tmp_54_lpi_3_dfm_6;
      tmp_52_lpi_3_dfm_7 <= tmp_52_lpi_3_dfm_6;
      tmp_50_lpi_3_dfm_7 <= tmp_50_lpi_3_dfm_6;
      tmp_48_lpi_3_dfm_7 <= tmp_48_lpi_3_dfm_6;
      tmp_46_lpi_3_dfm_7 <= tmp_46_lpi_3_dfm_6;
      tmp_44_lpi_3_dfm_7 <= tmp_44_lpi_3_dfm_6;
      tmp_42_lpi_3_dfm_7 <= tmp_42_lpi_3_dfm_6;
      tmp_40_lpi_3_dfm_7 <= tmp_40_lpi_3_dfm_6;
      tmp_38_lpi_3_dfm_7 <= tmp_38_lpi_3_dfm_6;
      tmp_36_lpi_3_dfm_7 <= tmp_36_lpi_3_dfm_6;
      tmp_34_lpi_3_dfm_7 <= tmp_34_lpi_3_dfm_6;
      tmp_32_lpi_3_dfm_7 <= tmp_32_lpi_3_dfm_6;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_8 <= 1'b0;
    end
    else if ( mult_63_z_and_cse ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_8 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_7;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP4_stage_0_9 & INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_8
        ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_9 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_8;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP4_stage_0_9 & (~ INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_8)
        ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_9 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_8;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP4_stage_0_8 & INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_7
        ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_8 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_7;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP4_stage_0_8 & (~ INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_7)
        ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_8 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_7;
    end
  end
  always @(posedge clk) begin
    if ( mult_63_z_and_1_cse ) begin
      mult_63_z_asn_itm_3 <= mult_63_z_asn_itm_2;
      mult_62_z_asn_itm_3 <= mult_62_z_asn_itm_2;
      mult_61_z_asn_itm_3 <= mult_61_z_asn_itm_2;
      mult_60_z_asn_itm_3 <= mult_60_z_asn_itm_2;
      mult_59_z_asn_itm_3 <= mult_59_z_asn_itm_2;
      mult_58_z_asn_itm_3 <= mult_58_z_asn_itm_2;
      mult_57_z_asn_itm_3 <= mult_57_z_asn_itm_2;
      mult_56_z_asn_itm_3 <= mult_56_z_asn_itm_2;
      mult_55_z_asn_itm_3 <= mult_55_z_asn_itm_2;
      mult_54_z_asn_itm_3 <= mult_54_z_asn_itm_2;
      mult_53_z_asn_itm_3 <= mult_53_z_asn_itm_2;
      mult_52_z_asn_itm_3 <= mult_52_z_asn_itm_2;
      mult_51_z_asn_itm_3 <= mult_51_z_asn_itm_2;
      mult_50_z_asn_itm_3 <= mult_50_z_asn_itm_2;
      mult_49_z_asn_itm_3 <= mult_49_z_asn_itm_2;
      mult_48_z_asn_itm_3 <= mult_48_z_asn_itm_2;
      tmp_62_lpi_3_dfm_6 <= tmp_62_lpi_3_dfm_5;
      tmp_60_lpi_3_dfm_6 <= tmp_60_lpi_3_dfm_5;
      tmp_58_lpi_3_dfm_6 <= tmp_58_lpi_3_dfm_5;
      tmp_56_lpi_3_dfm_6 <= tmp_56_lpi_3_dfm_5;
      tmp_54_lpi_3_dfm_6 <= tmp_54_lpi_3_dfm_5;
      tmp_52_lpi_3_dfm_6 <= tmp_52_lpi_3_dfm_5;
      tmp_50_lpi_3_dfm_6 <= tmp_50_lpi_3_dfm_5;
      tmp_48_lpi_3_dfm_6 <= tmp_48_lpi_3_dfm_5;
      tmp_46_lpi_3_dfm_6 <= tmp_46_lpi_3_dfm_5;
      tmp_44_lpi_3_dfm_6 <= tmp_44_lpi_3_dfm_5;
      tmp_42_lpi_3_dfm_6 <= tmp_42_lpi_3_dfm_5;
      tmp_40_lpi_3_dfm_6 <= tmp_40_lpi_3_dfm_5;
      tmp_38_lpi_3_dfm_6 <= tmp_38_lpi_3_dfm_5;
      tmp_36_lpi_3_dfm_6 <= tmp_36_lpi_3_dfm_5;
      tmp_34_lpi_3_dfm_6 <= tmp_34_lpi_3_dfm_5;
      tmp_32_lpi_3_dfm_6 <= tmp_32_lpi_3_dfm_5;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_7 <= 1'b0;
    end
    else if ( mult_63_z_and_1_cse ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_7 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_6;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP4_stage_0_7 & INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_6
        ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_7 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_6;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP4_stage_0_7 & (~ INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_6)
        ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_7 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_6;
    end
  end
  always @(posedge clk) begin
    if ( mult_63_z_and_2_cse ) begin
      mult_63_z_asn_itm_2 <= mult_13_z_asn_itm_1;
      mult_62_z_asn_itm_2 <= mult_9_z_asn_itm_1;
      mult_61_z_asn_itm_2 <= mult_5_z_asn_itm_1;
      mult_60_z_asn_itm_2 <= mult_1_z_asn_itm_1;
      mult_59_z_asn_itm_2 <= mult_4_z_asn_itm_1;
      mult_58_z_asn_itm_2 <= mult_7_z_asn_itm_1;
      mult_57_z_asn_itm_2 <= mult_12_z_asn_itm_1;
      mult_56_z_asn_itm_2 <= mult_15_z_asn_itm_1;
      mult_55_z_asn_itm_2 <= mult_11_z_asn_itm_1;
      mult_54_z_asn_itm_2 <= mult_3_z_asn_itm_1;
      mult_53_z_asn_itm_2 <= mult_6_z_asn_itm_1;
      mult_52_z_asn_itm_2 <= mult_14_z_asn_itm_1;
      mult_51_z_asn_itm_2 <= mult_10_z_asn_itm_1;
      mult_50_z_asn_itm_2 <= mult_2_z_asn_itm_1;
      mult_49_z_asn_itm_2 <= mult_8_z_asn_itm_1;
      mult_48_z_asn_itm_2 <= mult_z_asn_itm_1;
      tmp_62_lpi_3_dfm_5 <= tmp_62_lpi_3_dfm_4;
      tmp_60_lpi_3_dfm_5 <= tmp_60_lpi_3_dfm_4;
      tmp_58_lpi_3_dfm_5 <= tmp_58_lpi_3_dfm_4;
      tmp_56_lpi_3_dfm_5 <= tmp_56_lpi_3_dfm_4;
      tmp_54_lpi_3_dfm_5 <= tmp_54_lpi_3_dfm_4;
      tmp_52_lpi_3_dfm_5 <= tmp_52_lpi_3_dfm_4;
      tmp_50_lpi_3_dfm_5 <= tmp_50_lpi_3_dfm_4;
      tmp_48_lpi_3_dfm_5 <= tmp_48_lpi_3_dfm_4;
      tmp_46_lpi_3_dfm_5 <= tmp_46_lpi_3_dfm_4;
      tmp_44_lpi_3_dfm_5 <= tmp_44_lpi_3_dfm_4;
      tmp_42_lpi_3_dfm_5 <= tmp_42_lpi_3_dfm_4;
      tmp_40_lpi_3_dfm_5 <= tmp_40_lpi_3_dfm_4;
      tmp_38_lpi_3_dfm_5 <= tmp_38_lpi_3_dfm_4;
      tmp_36_lpi_3_dfm_5 <= tmp_36_lpi_3_dfm_4;
      tmp_34_lpi_3_dfm_5 <= tmp_34_lpi_3_dfm_4;
      tmp_32_lpi_3_dfm_5 <= tmp_32_lpi_3_dfm_4;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_6 <= 1'b0;
    end
    else if ( mult_63_z_and_2_cse ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_6 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_5;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP4_stage_0_6 & INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_5
        ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_6 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_5;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP4_stage_0_6 & (~ INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_5)
        ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_6 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_5;
    end
  end
  always @(posedge clk) begin
    if ( INNER_LOOP4_r_and_17_cse ) begin
      tmp_62_lpi_3_dfm_4 <= tmp_62_lpi_3_dfm_3;
      tmp_60_lpi_3_dfm_4 <= tmp_60_lpi_3_dfm_3;
      tmp_58_lpi_3_dfm_4 <= tmp_58_lpi_3_dfm_3;
      tmp_56_lpi_3_dfm_4 <= tmp_56_lpi_3_dfm_3;
      tmp_54_lpi_3_dfm_4 <= tmp_54_lpi_3_dfm_3;
      tmp_52_lpi_3_dfm_4 <= tmp_52_lpi_3_dfm_3;
      tmp_50_lpi_3_dfm_4 <= tmp_50_lpi_3_dfm_3;
      tmp_48_lpi_3_dfm_4 <= tmp_48_lpi_3_dfm_3;
      tmp_46_lpi_3_dfm_4 <= tmp_46_lpi_3_dfm_3;
      tmp_44_lpi_3_dfm_4 <= tmp_44_lpi_3_dfm_3;
      tmp_42_lpi_3_dfm_4 <= tmp_42_lpi_3_dfm_3;
      tmp_40_lpi_3_dfm_4 <= tmp_40_lpi_3_dfm_3;
      tmp_38_lpi_3_dfm_4 <= tmp_38_lpi_3_dfm_3;
      tmp_36_lpi_3_dfm_4 <= tmp_36_lpi_3_dfm_3;
      tmp_34_lpi_3_dfm_4 <= tmp_34_lpi_3_dfm_3;
      tmp_32_lpi_3_dfm_4 <= tmp_32_lpi_3_dfm_3;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_5 <= 1'b0;
    end
    else if ( INNER_LOOP4_r_and_17_cse ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_5 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_4;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP4_stage_0_5 & INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_4
        ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_5 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_4;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP4_stage_0_5 & (~ INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_4)
        ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_5 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_4;
    end
  end
  always @(posedge clk) begin
    if ( INNER_LOOP4_r_and_20_cse ) begin
      tmp_62_lpi_3_dfm_3 <= tmp_62_lpi_3_dfm_2;
      tmp_60_lpi_3_dfm_3 <= tmp_60_lpi_3_dfm_2;
      tmp_58_lpi_3_dfm_3 <= tmp_58_lpi_3_dfm_2;
      tmp_56_lpi_3_dfm_3 <= tmp_56_lpi_3_dfm_2;
      tmp_54_lpi_3_dfm_3 <= tmp_54_lpi_3_dfm_2;
      tmp_52_lpi_3_dfm_3 <= tmp_52_lpi_3_dfm_2;
      tmp_50_lpi_3_dfm_3 <= tmp_50_lpi_3_dfm_2;
      tmp_48_lpi_3_dfm_3 <= tmp_48_lpi_3_dfm_2;
      tmp_46_lpi_3_dfm_3 <= tmp_46_lpi_3_dfm_2;
      tmp_44_lpi_3_dfm_3 <= tmp_44_lpi_3_dfm_2;
      tmp_42_lpi_3_dfm_3 <= tmp_42_lpi_3_dfm_2;
      tmp_40_lpi_3_dfm_3 <= tmp_40_lpi_3_dfm_2;
      tmp_38_lpi_3_dfm_3 <= tmp_38_lpi_3_dfm_2;
      tmp_36_lpi_3_dfm_3 <= tmp_36_lpi_3_dfm_2;
      tmp_34_lpi_3_dfm_3 <= tmp_34_lpi_3_dfm_2;
      tmp_32_lpi_3_dfm_3 <= tmp_32_lpi_3_dfm_2;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_4 <= 1'b0;
    end
    else if ( INNER_LOOP4_r_and_20_cse ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_4 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_3;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP4_stage_0_4 & INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_3
        ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_4 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_3;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP4_stage_0_4 & (~ INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_3)
        ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_4 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_3;
    end
  end
  always @(posedge clk) begin
    if ( INNER_LOOP4_r_and_23_cse ) begin
      tmp_62_lpi_3_dfm_2 <= tmp_30_lpi_3_dfm_1;
      tmp_60_lpi_3_dfm_2 <= tmp_28_lpi_3_dfm_1;
      tmp_58_lpi_3_dfm_2 <= tmp_26_lpi_3_dfm_1;
      tmp_56_lpi_3_dfm_2 <= tmp_24_lpi_3_dfm_1;
      tmp_54_lpi_3_dfm_2 <= tmp_22_lpi_3_dfm_1;
      tmp_52_lpi_3_dfm_2 <= tmp_20_lpi_3_dfm_1;
      tmp_50_lpi_3_dfm_2 <= tmp_18_lpi_3_dfm_1;
      tmp_48_lpi_3_dfm_2 <= tmp_16_lpi_3_dfm_1;
      tmp_46_lpi_3_dfm_2 <= tmp_14_lpi_3_dfm_1;
      tmp_44_lpi_3_dfm_2 <= tmp_12_lpi_3_dfm_1;
      tmp_42_lpi_3_dfm_2 <= tmp_10_lpi_3_dfm_1;
      tmp_40_lpi_3_dfm_2 <= tmp_8_lpi_3_dfm_1;
      tmp_38_lpi_3_dfm_2 <= tmp_6_lpi_3_dfm_1;
      tmp_36_lpi_3_dfm_2 <= tmp_4_lpi_3_dfm_1;
      tmp_34_lpi_3_dfm_2 <= tmp_2_lpi_3_dfm_1;
      tmp_32_lpi_3_dfm_2 <= tmp_lpi_3_dfm_1;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_3 <= 1'b0;
    end
    else if ( INNER_LOOP4_r_and_23_cse ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_3 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_2;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP4_stage_0_3 & INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_2
        ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_3 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_2;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP4_stage_0_3 & (~ INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_2)
        ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_3 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_2;
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_2 <= 1'b0;
    end
    else if ( core_wen & INNER_LOOP4_stage_0_2 ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_2 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_1;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP4_stage_0_2 & INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_1
        ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_2 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_1;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP4_stage_0_2 & (~ INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm_1)
        ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_2 <= INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_1;
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP4_stage_0 & INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm
        ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_20_itm_1 <= INNER_LOOP4_r_9_4_sva_4_0[4:1];
    end
  end
  always @(posedge clk) begin
    if ( core_wen & INNER_LOOP4_stage_0 & (~ INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_192_itm)
        ) begin
      INNER_LOOP4_r_slc_INNER_LOOP4_r_9_4_4_0_4241_itm_1 <= INNER_LOOP4_r_9_4_sva_4_0[4:1];
    end
  end
  assign butterFly1_f1_butterFly1_f1_nor_nl = ~(z_out_47_32 | (fsm_output[8]));
  assign butterFly1_f1_or_nl = (z_out_47_32 & (~ (fsm_output[8]))) | (z_out_47_32
      & (fsm_output[8]));
  assign butterFly1_f1_and_7_nl = (~ z_out_47_32) & (fsm_output[8]);
  assign butterFly1_f2_butterFly1_f2_nor_nl = ~(z_out_46_32 | (fsm_output[8]));
  assign butterFly1_f2_or_nl = (z_out_46_32 & (~ (fsm_output[8]))) | (z_out_45_32
      & (fsm_output[8]));
  assign butterFly1_f2_and_7_nl = (~ z_out_45_32) & (fsm_output[8]);
  assign butterFly1_1_f1_butterFly1_1_f1_nor_nl = ~(z_out_44_32 | (fsm_output[8]));
  assign butterFly1_1_f1_or_nl = (z_out_44_32 & (~ (fsm_output[8]))) | (z_out_43_32
      & (fsm_output[8]));
  assign butterFly1_1_f1_and_7_nl = (~ z_out_43_32) & (fsm_output[8]);
  assign butterFly1_1_f2_butterFly1_1_f2_nor_nl = ~(z_out_42_32 | (fsm_output[8]));
  assign butterFly1_1_f2_or_nl = (z_out_42_32 & (~ (fsm_output[8]))) | (z_out_41_32
      & (fsm_output[8]));
  assign butterFly1_1_f2_and_7_nl = (~ z_out_41_32) & (fsm_output[8]);
  assign butterFly1_2_f1_butterFly1_2_f1_nor_nl = ~(z_out_40_32 | (fsm_output[8]));
  assign butterFly1_2_f1_or_nl = (z_out_40_32 & (~ (fsm_output[8]))) | (z_out_39_32
      & (fsm_output[8]));
  assign butterFly1_2_f1_and_7_nl = (~ z_out_39_32) & (fsm_output[8]);
  assign butterFly1_2_f2_butterFly1_2_f2_nor_nl = ~(z_out_38_32 | (fsm_output[8]));
  assign butterFly1_2_f2_and_6_nl = z_out_38_32 & (~ (fsm_output[8]));
  assign butterFly1_2_f2_and_7_nl = (~ z_out_37_32) & (fsm_output[8]);
  assign butterFly1_2_f2_and_8_nl = z_out_37_32 & (fsm_output[8]);
  assign butterFly1_3_f1_butterFly1_3_f1_nor_nl = ~(z_out_36_32 | (fsm_output[8]));
  assign butterFly1_3_f1_and_6_nl = z_out_36_32 & (~ (fsm_output[8]));
  assign butterFly1_3_f1_and_7_nl = (~ z_out_35_32) & (fsm_output[8]);
  assign butterFly1_3_f1_and_8_nl = z_out_35_32 & (fsm_output[8]);
  assign butterFly1_3_f2_butterFly1_3_f2_nor_nl = ~(z_out_34_32 | (fsm_output[8]));
  assign butterFly1_3_f2_and_6_nl = z_out_34_32 & (~ (fsm_output[8]));
  assign butterFly1_3_f2_and_7_nl = (~ z_out_33_32) & (fsm_output[8]);
  assign butterFly1_3_f2_and_8_nl = z_out_33_32 & (fsm_output[8]);
  assign butterFly1_4_f1_butterFly1_4_f1_nor_nl = ~(z_out_45_32 | (fsm_output[8]));
  assign butterFly1_4_f1_and_6_nl = z_out_45_32 & (~ (fsm_output[8]));
  assign butterFly1_4_f1_and_7_nl = (~ z_out_46_32) & (fsm_output[8]);
  assign butterFly1_4_f1_and_8_nl = z_out_46_32 & (fsm_output[8]);
  assign butterFly1_4_f2_butterFly1_4_f2_nor_nl = ~(z_out_43_32 | (fsm_output[8]));
  assign butterFly1_4_f2_and_6_nl = z_out_43_32 & (~ (fsm_output[8]));
  assign butterFly1_4_f2_and_7_nl = (~ z_out_44_32) & (fsm_output[8]);
  assign butterFly1_4_f2_and_8_nl = z_out_44_32 & (fsm_output[8]);
  assign butterFly1_5_f1_butterFly1_5_f1_nor_nl = ~(z_out_41_32 | (fsm_output[8]));
  assign butterFly1_5_f1_and_6_nl = z_out_41_32 & (~ (fsm_output[8]));
  assign butterFly1_5_f1_and_7_nl = (~ z_out_42_32) & (fsm_output[8]);
  assign butterFly1_5_f1_and_8_nl = z_out_42_32 & (fsm_output[8]);
  assign butterFly1_5_f2_butterFly1_5_f2_nor_nl = ~(z_out_39_32 | (fsm_output[8]));
  assign butterFly1_5_f2_and_6_nl = z_out_39_32 & (~ (fsm_output[8]));
  assign butterFly1_5_f2_and_7_nl = (~ z_out_40_32) & (fsm_output[8]);
  assign butterFly1_5_f2_and_8_nl = z_out_40_32 & (fsm_output[8]);
  assign butterFly1_6_f1_butterFly1_6_f1_nor_nl = ~(z_out_37_32 | (fsm_output[8]));
  assign butterFly1_6_f1_and_6_nl = z_out_37_32 & (~ (fsm_output[8]));
  assign butterFly1_6_f1_and_7_nl = (~ z_out_38_32) & (fsm_output[8]);
  assign butterFly1_6_f1_and_8_nl = z_out_38_32 & (fsm_output[8]);
  assign butterFly1_6_f2_butterFly1_6_f2_nor_nl = ~(z_out_35_32 | (fsm_output[8]));
  assign butterFly1_6_f2_and_6_nl = z_out_35_32 & (~ (fsm_output[8]));
  assign butterFly1_6_f2_and_7_nl = (~ z_out_36_32) & (fsm_output[8]);
  assign butterFly1_6_f2_and_8_nl = z_out_36_32 & (fsm_output[8]);
  assign butterFly1_7_f1_butterFly1_7_f1_nor_nl = ~(z_out_33_32 | (fsm_output[8]));
  assign butterFly1_7_f1_and_6_nl = z_out_33_32 & (~ (fsm_output[8]));
  assign butterFly1_7_f1_and_7_nl = (~ z_out_34_32) & (fsm_output[8]);
  assign butterFly1_7_f1_and_8_nl = z_out_34_32 & (fsm_output[8]);
  assign butterFly1_7_f2_butterFly1_7_f2_nor_nl = ~(z_out_32_32 | (fsm_output[8]));
  assign butterFly1_7_f2_and_6_nl = z_out_32_32 & (~ (fsm_output[8]));
  assign butterFly1_7_f2_and_7_nl = (~ z_out_32_32) & (fsm_output[8]);
  assign butterFly1_7_f2_and_8_nl = z_out_32_32 & (fsm_output[8]);
  assign INNER_LOOP2_tw_and_nl = operator_33_true_1_lshift_psp_7_4_sva & (INNER_LOOP2_r_9_4_sva_4_0[3:0]);
  assign nor_4_nl = ~((fsm_output[7]) | (fsm_output[4]) | (fsm_output[8]));
  assign butterFly1_f1_mux_4_nl = MUX_s_1_2_2((z_out_61[31]), (z_out_84[31]), butterFly1_f1_and_ssc_3);
  assign butterFly1_f1_and_1_nl = (modulo_sub_base_16_sva_1[31]) & (~ (fsm_output[8]));
  assign butterFly1_f2_mux_5_nl = MUX_s_1_2_2((z_out_88[31]), (z_out_83[31]), butterFly1_f2_and_ssc_3);
  assign butterFly1_f2_and_1_nl = (modulo_sub_base_17_sva_1[31]) & (~ (fsm_output[8]));
  assign butterFly1_1_f1_mux_4_nl = MUX_s_1_2_2((z_out_77[31]), (z_out_82[31]), butterFly1_1_f1_and_ssc_3);
  assign butterFly1_1_f1_and_1_nl = (modulo_sub_base_18_sva_1[31]) & (~ (fsm_output[8]));
  assign butterFly1_1_f2_mux_4_nl = MUX_s_1_2_2((z_out_85[31]), (z_out_81[31]), butterFly1_1_f2_and_ssc_3);
  assign butterFly1_1_f2_and_1_nl = (modulo_sub_base_19_sva_1[31]) & (~ (fsm_output[8]));
  assign butterFly1_2_f1_mux_4_nl = MUX_s_1_2_2((z_out_73[31]), (z_out_80[31]), butterFly1_2_f1_and_ssc_3);
  assign butterFly1_2_f1_and_1_nl = (modulo_sub_base_20_sva_1[31]) & (~ (fsm_output[8]));
  assign butterFly1_2_f2_mux_4_nl = MUX_s_1_2_2((z_out_75[31]), (z_out_71[31]), butterFly1_2_f2_and_ssc_3);
  assign butterFly1_2_f2_and_1_nl = (modulo_sub_base_21_sva_1[31]) & (~ (fsm_output[8]));
  assign butterFly1_3_f1_mux_4_nl = MUX_s_1_2_2((z_out_86[31]), (z_out_72[31]), butterFly1_3_f1_and_ssc_3);
  assign butterFly1_3_f1_and_1_nl = (modulo_sub_base_22_sva_1[31]) & (~ (fsm_output[8]));
  assign butterFly1_3_f2_mux_4_nl = MUX_s_1_2_2((z_out_87[31]), (z_out_74[31]), butterFly1_3_f2_and_ssc_3);
  assign butterFly1_3_f2_and_1_nl = (modulo_sub_base_23_sva_1[31]) & (~ (fsm_output[8]));
  assign butterFly1_4_f1_mux_4_nl = MUX_s_1_2_2((z_out_79[31]), (z_out_76[31]), butterFly1_4_f1_and_ssc_3);
  assign butterFly1_4_f1_and_1_nl = (modulo_sub_base_24_sva_1[31]) & (~ (fsm_output[8]));
  assign butterFly1_4_f2_mux_4_nl = MUX_s_1_2_2((z_out_100[31]), (z_out_78[31]),
      butterFly1_4_f2_and_ssc_3);
  assign butterFly1_4_f2_and_1_nl = (modulo_sub_base_25_sva_1[31]) & (~ (fsm_output[8]));
  assign butterFly1_5_f1_mux_4_nl = MUX_s_1_2_2((z_out_99[31]), (z_out_101[31]),
      butterFly1_5_f1_and_ssc_3);
  assign butterFly1_5_f1_and_1_nl = (modulo_sub_base_26_sva_1[31]) & (~ (fsm_output[8]));
  assign butterFly1_5_f2_mux_4_nl = MUX_s_1_2_2((z_out_97[31]), (z_out_98[31]), butterFly1_5_f2_and_ssc_3);
  assign butterFly1_5_f2_and_1_nl = (modulo_sub_base_27_sva_1[31]) & (~ (fsm_output[8]));
  assign butterFly1_6_f1_mux_4_nl = MUX_s_1_2_2((z_out_95[31]), (z_out_96[31]), butterFly1_6_f1_and_ssc_3);
  assign butterFly1_6_f1_and_1_nl = (modulo_sub_base_28_sva_1[31]) & (~ (fsm_output[8]));
  assign butterFly1_6_f2_mux_4_nl = MUX_s_1_2_2((z_out_93[31]), (z_out_94[31]), butterFly1_6_f2_and_ssc_3);
  assign butterFly1_6_f2_and_1_nl = (modulo_sub_base_29_sva_1[31]) & (~ (fsm_output[8]));
  assign butterFly1_7_f1_mux_4_nl = MUX_s_1_2_2((z_out_91[31]), (z_out_92[31]), butterFly1_7_f1_and_ssc_3);
  assign butterFly1_7_f1_and_1_nl = (modulo_sub_base_30_sva_1[31]) & (~ (fsm_output[8]));
  assign butterFly1_7_f2_mux_4_nl = MUX_s_1_2_2((z_out_89[31]), (z_out_90[31]), butterFly1_7_f2_and_ssc_3);
  assign butterFly1_7_f2_and_1_nl = (modulo_sub_base_31_sva_1[31]) & (~ (fsm_output[8]));
  assign nl_modulo_sub_base_sva_1  = tmp_64_lpi_3_dfm_8 - mult_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_1_sva_1  = tmp_66_lpi_3_dfm_8 - mult_1_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_2_sva_1  = tmp_68_lpi_3_dfm_8 - mult_2_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_3_sva_1  = tmp_70_lpi_3_dfm_8 - mult_3_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_4_sva_1  = tmp_72_lpi_3_dfm_8 - mult_4_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_5_sva_1  = tmp_74_lpi_3_dfm_8 - mult_5_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_7_sva_1  = tmp_78_lpi_3_dfm_8 - mult_7_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_8_sva_1  = tmp_80_lpi_3_dfm_8 - mult_8_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_9_sva_1  = tmp_82_lpi_3_dfm_8 - mult_9_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_10_sva_1  = tmp_84_lpi_3_dfm_8 - mult_10_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_11_sva_1  = tmp_86_lpi_3_dfm_8 - mult_11_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_12_sva_1  = tmp_88_lpi_3_dfm_8 - mult_12_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_13_sva_1  = tmp_90_lpi_3_dfm_8 - mult_13_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_14_sva_1  = tmp_92_lpi_3_dfm_8 - mult_14_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_15_sva_1  = tmp_94_lpi_3_dfm_8 - mult_15_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_15_sva_1  = tmp_94_lpi_3_dfm_8 + mult_15_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_14_sva_1  = tmp_92_lpi_3_dfm_8 + mult_14_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_13_sva_1  = tmp_90_lpi_3_dfm_8 + mult_13_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_12_sva_1  = tmp_88_lpi_3_dfm_8 + mult_12_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_11_sva_1  = tmp_86_lpi_3_dfm_8 + mult_11_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_10_sva_1  = tmp_84_lpi_3_dfm_8 + mult_10_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_9_sva_1  = tmp_82_lpi_3_dfm_8 + mult_9_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_8_sva_1  = tmp_80_lpi_3_dfm_8 + mult_8_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_7_sva_1  = tmp_78_lpi_3_dfm_8 + mult_7_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_5_sva_1  = tmp_74_lpi_3_dfm_8 + mult_5_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_4_sva_1  = tmp_72_lpi_3_dfm_8 + mult_4_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_3_sva_1  = tmp_70_lpi_3_dfm_8 + mult_3_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_2_sva_1  = tmp_68_lpi_3_dfm_8 + mult_2_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_1_sva_1  = tmp_66_lpi_3_dfm_8 + mult_1_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_sva_1  = tmp_64_lpi_3_dfm_8 + mult_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_16_sva_1  = tmp_lpi_3_dfm_8 + mult_16_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_16_sva_1  = tmp_lpi_3_dfm_8 - mult_16_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_17_sva_1  = tmp_2_lpi_3_dfm_8 + mult_17_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_17_sva_1  = tmp_2_lpi_3_dfm_8 - mult_17_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_18_sva_1  = tmp_4_lpi_3_dfm_8 + mult_18_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_18_sva_1  = tmp_4_lpi_3_dfm_8 - mult_18_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_19_sva_1  = tmp_6_lpi_3_dfm_8 + mult_19_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_19_sva_1  = tmp_6_lpi_3_dfm_8 - mult_19_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_20_sva_1  = tmp_8_lpi_3_dfm_8 + mult_20_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_20_sva_1  = tmp_8_lpi_3_dfm_8 - mult_20_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_21_sva_1  = tmp_10_lpi_3_dfm_8 + mult_21_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_21_sva_1  = tmp_10_lpi_3_dfm_8 - mult_21_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_27_sva_1  = tmp_22_lpi_3_dfm_8 + mult_27_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_27_sva_1  = tmp_22_lpi_3_dfm_8 - mult_27_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_28_sva_1  = tmp_24_lpi_3_dfm_8 + mult_28_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_28_sva_1  = tmp_24_lpi_3_dfm_8 - mult_28_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_29_sva_1  = tmp_26_lpi_3_dfm_8 + mult_29_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_29_sva_1  = tmp_26_lpi_3_dfm_8 - mult_29_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_30_sva_1  = tmp_28_lpi_3_dfm_8 + mult_30_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_30_sva_1  = tmp_28_lpi_3_dfm_8 - mult_30_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_31_sva_1  = tmp_30_lpi_3_dfm_8 + mult_31_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_31_sva_1  = tmp_30_lpi_3_dfm_8 - mult_31_res_lpi_3_dfm_mx0;
  assign butterFly2_21_tw_butterFly2_21_tw_or_nl = c_1_sva_1 | INNER_LOOP4_nor_tmp;
  assign nl_modulo_add_34_qif_acc_nl = modulo_add_base_34_sva_1 - p_sva;
  assign modulo_add_34_qif_acc_nl = nl_modulo_add_34_qif_acc_nl[31:0];
  assign nl_modulo_add_35_qif_acc_nl = modulo_add_base_35_sva_1 - p_sva;
  assign modulo_add_35_qif_acc_nl = nl_modulo_add_35_qif_acc_nl[31:0];
  assign nl_modulo_add_37_qif_acc_nl = modulo_add_base_37_sva_1 - p_sva;
  assign modulo_add_37_qif_acc_nl = nl_modulo_add_37_qif_acc_nl[31:0];
  assign nl_modulo_add_39_qif_acc_nl = modulo_add_base_39_sva_1 - p_sva;
  assign modulo_add_39_qif_acc_nl = nl_modulo_add_39_qif_acc_nl[31:0];
  assign nl_modulo_add_41_qif_acc_nl = modulo_add_base_41_sva_1 - p_sva;
  assign modulo_add_41_qif_acc_nl = nl_modulo_add_41_qif_acc_nl[31:0];
  assign nl_modulo_add_43_qif_acc_nl = modulo_add_base_43_sva_1 - p_sva;
  assign modulo_add_43_qif_acc_nl = nl_modulo_add_43_qif_acc_nl[31:0];
  assign nl_modulo_add_44_qif_acc_nl = modulo_add_base_44_sva_1 - p_sva;
  assign modulo_add_44_qif_acc_nl = nl_modulo_add_44_qif_acc_nl[31:0];
  assign nl_modulo_add_45_qif_acc_nl = modulo_add_base_45_sva_1 - p_sva;
  assign modulo_add_45_qif_acc_nl = nl_modulo_add_45_qif_acc_nl[31:0];
  assign nl_modulo_add_47_qif_acc_nl = modulo_add_base_47_sva_1 - p_sva;
  assign modulo_add_47_qif_acc_nl = nl_modulo_add_47_qif_acc_nl[31:0];
  assign nl_modulo_sub_base_39_sva_1  = tmp_110_lpi_3_dfm_8 - mult_39_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_40_sva_1  = tmp_112_lpi_3_dfm_8 - mult_40_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_41_sva_1  = tmp_114_lpi_3_dfm_8 - mult_41_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_42_sva_1  = tmp_116_lpi_3_dfm_8 - mult_42_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_43_sva_1  = tmp_118_lpi_3_dfm_8 - mult_43_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_44_sva_1  = tmp_120_lpi_3_dfm_8 - mult_44_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_45_sva_1  = tmp_122_lpi_3_dfm_8 - mult_45_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_46_sva_1  = tmp_124_lpi_3_dfm_8 - mult_46_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_47_sva_1  = tmp_126_lpi_3_dfm_8 - mult_47_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_47_sva_1  = tmp_126_lpi_3_dfm_8 + mult_47_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_46_sva_1  = tmp_124_lpi_3_dfm_8 + mult_46_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_45_sva_1  = tmp_122_lpi_3_dfm_8 + mult_45_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_44_sva_1  = tmp_120_lpi_3_dfm_8 + mult_44_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_43_sva_1  = tmp_118_lpi_3_dfm_8 + mult_43_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_42_sva_1  = tmp_116_lpi_3_dfm_8 + mult_42_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_41_sva_1  = tmp_114_lpi_3_dfm_8 + mult_41_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_40_sva_1  = tmp_112_lpi_3_dfm_8 + mult_40_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_39_sva_1  = tmp_110_lpi_3_dfm_8 + mult_39_res_lpi_3_dfm_mx0;
  assign nl_mult_47_if_acc_1_nl = ({1'b1 , mult_47_res_sva_2}) + conv_u2u_32_33(~
      p_sva) + 33'b000000000000000000000000000000001;
  assign mult_47_if_acc_1_nl = nl_mult_47_if_acc_1_nl[32:0];
  assign nl_mult_46_if_acc_1_nl = ({1'b1 , mult_46_res_sva_2}) + conv_u2u_32_33(~
      p_sva) + 33'b000000000000000000000000000000001;
  assign mult_46_if_acc_1_nl = nl_mult_46_if_acc_1_nl[32:0];
  assign nl_mult_45_if_acc_1_nl = ({1'b1 , mult_45_res_sva_2}) + conv_u2u_32_33(~
      p_sva) + 33'b000000000000000000000000000000001;
  assign mult_45_if_acc_1_nl = nl_mult_45_if_acc_1_nl[32:0];
  assign nl_mult_44_if_acc_1_nl = ({1'b1 , mult_44_res_sva_2}) + conv_u2u_32_33(~
      p_sva) + 33'b000000000000000000000000000000001;
  assign mult_44_if_acc_1_nl = nl_mult_44_if_acc_1_nl[32:0];
  assign nl_mult_43_if_acc_1_nl = ({1'b1 , mult_43_res_sva_2}) + conv_u2u_32_33(~
      p_sva) + 33'b000000000000000000000000000000001;
  assign mult_43_if_acc_1_nl = nl_mult_43_if_acc_1_nl[32:0];
  assign nl_mult_42_if_acc_1_nl = ({1'b1 , mult_42_res_sva_2}) + conv_u2u_32_33(~
      p_sva) + 33'b000000000000000000000000000000001;
  assign mult_42_if_acc_1_nl = nl_mult_42_if_acc_1_nl[32:0];
  assign nl_mult_41_if_acc_1_nl = ({1'b1 , mult_41_res_sva_2}) + conv_u2u_32_33(~
      p_sva) + 33'b000000000000000000000000000000001;
  assign mult_41_if_acc_1_nl = nl_mult_41_if_acc_1_nl[32:0];
  assign nl_mult_40_if_acc_1_nl = ({1'b1 , z_out_70}) + conv_u2u_32_33(~ p_sva) +
      33'b000000000000000000000000000000001;
  assign mult_40_if_acc_1_nl = nl_mult_40_if_acc_1_nl[32:0];
  assign nl_mult_39_if_acc_1_nl = ({1'b1 , z_out_69}) + conv_u2u_32_33(~ p_sva) +
      33'b000000000000000000000000000000001;
  assign mult_39_if_acc_1_nl = nl_mult_39_if_acc_1_nl[32:0];
  assign nl_mult_38_if_acc_1_nl = ({1'b1 , z_out_68}) + conv_u2u_32_33(~ p_sva) +
      33'b000000000000000000000000000000001;
  assign mult_38_if_acc_1_nl = nl_mult_38_if_acc_1_nl[32:0];
  assign nl_mult_37_if_acc_1_nl = ({1'b1 , z_out_67}) + conv_u2u_32_33(~ p_sva) +
      33'b000000000000000000000000000000001;
  assign mult_37_if_acc_1_nl = nl_mult_37_if_acc_1_nl[32:0];
  assign nl_mult_36_if_acc_1_nl = ({1'b1 , z_out_66}) + conv_u2u_32_33(~ p_sva) +
      33'b000000000000000000000000000000001;
  assign mult_36_if_acc_1_nl = nl_mult_36_if_acc_1_nl[32:0];
  assign nl_mult_35_if_acc_1_nl = ({1'b1 , z_out_65}) + conv_u2u_32_33(~ p_sva) +
      33'b000000000000000000000000000000001;
  assign mult_35_if_acc_1_nl = nl_mult_35_if_acc_1_nl[32:0];
  assign nl_mult_34_if_acc_1_nl = ({1'b1 , z_out_64}) + conv_u2u_32_33(~ p_sva) +
      33'b000000000000000000000000000000001;
  assign mult_34_if_acc_1_nl = nl_mult_34_if_acc_1_nl[32:0];
  assign nl_mult_33_if_acc_1_nl = ({1'b1 , z_out_63}) + conv_u2u_32_33(~ p_sva) +
      33'b000000000000000000000000000000001;
  assign mult_33_if_acc_1_nl = nl_mult_33_if_acc_1_nl[32:0];
  assign nl_mult_32_if_acc_1_nl = ({1'b1 , z_out_62}) + conv_u2u_32_33(~ p_sva) +
      33'b000000000000000000000000000000001;
  assign mult_32_if_acc_1_nl = nl_mult_32_if_acc_1_nl[32:0];
  assign nl_modulo_add_base_50_sva_1  = tmp_36_lpi_3_dfm_8 + mult_50_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_51_sva_1  = tmp_38_lpi_3_dfm_8 + mult_51_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_52_sva_1  = tmp_40_lpi_3_dfm_8 + mult_52_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_53_sva_1  = tmp_42_lpi_3_dfm_8 + mult_53_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_54_sva_1  = tmp_44_lpi_3_dfm_8 + mult_54_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_54_sva_1  = tmp_44_lpi_3_dfm_8 - mult_54_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_55_sva_1  = tmp_46_lpi_3_dfm_8 + mult_55_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_55_sva_1  = tmp_46_lpi_3_dfm_8 - mult_55_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_56_sva_1  = tmp_48_lpi_3_dfm_8 + mult_56_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_56_sva_1  = tmp_48_lpi_3_dfm_8 - mult_56_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_57_sva_1  = tmp_50_lpi_3_dfm_8 + mult_57_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_57_sva_1  = tmp_50_lpi_3_dfm_8 - mult_57_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_58_sva_1  = tmp_52_lpi_3_dfm_8 + mult_58_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_58_sva_1  = tmp_52_lpi_3_dfm_8 - mult_58_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_59_sva_1  = tmp_54_lpi_3_dfm_8 + mult_59_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_59_sva_1  = tmp_54_lpi_3_dfm_8 - mult_59_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_60_sva_1  = tmp_56_lpi_3_dfm_8 + mult_60_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_60_sva_1  = tmp_56_lpi_3_dfm_8 - mult_60_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_61_sva_1  = tmp_58_lpi_3_dfm_8 + mult_61_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_61_sva_1  = tmp_58_lpi_3_dfm_8 - mult_61_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_62_sva_1  = tmp_60_lpi_3_dfm_8 + mult_62_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_62_sva_1  = tmp_60_lpi_3_dfm_8 - mult_62_res_lpi_3_dfm_mx0;
  assign nl_modulo_add_base_63_sva_1  = tmp_62_lpi_3_dfm_8 + mult_63_res_lpi_3_dfm_mx0;
  assign nl_modulo_sub_base_63_sva_1  = tmp_62_lpi_3_dfm_8 - mult_63_res_lpi_3_dfm_mx0;
  assign modulo_add_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_sva_1), (~ modulo_add_base_32_sva_1),
      fsm_output[6]);
  assign nl_acc_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_mux_3_nl
      , 1'b1});
  assign acc_nl = nl_acc_nl[33:0];
  assign z_out_32 = readslicef_34_1_33(acc_nl);
  assign modulo_add_1_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_1_sva_1), (~ modulo_add_base_33_sva_1),
      fsm_output[6]);
  assign nl_acc_1_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_1_mux_3_nl
      , 1'b1});
  assign acc_1_nl = nl_acc_1_nl[33:0];
  assign z_out_1_32 = readslicef_34_1_33(acc_1_nl);
  assign modulo_add_2_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_2_sva_1), (~ modulo_add_base_34_sva_1),
      fsm_output[6]);
  assign nl_acc_2_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_2_mux_3_nl
      , 1'b1});
  assign acc_2_nl = nl_acc_2_nl[33:0];
  assign z_out_2_32 = readslicef_34_1_33(acc_2_nl);
  assign modulo_add_3_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_3_sva_1), (~ modulo_add_base_35_sva_1),
      fsm_output[6]);
  assign nl_acc_3_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_3_mux_3_nl
      , 1'b1});
  assign acc_3_nl = nl_acc_3_nl[33:0];
  assign z_out_3_32 = readslicef_34_1_33(acc_3_nl);
  assign modulo_add_4_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_4_sva_1), (~ modulo_add_base_36_sva_1),
      fsm_output[6]);
  assign nl_acc_4_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_4_mux_3_nl
      , 1'b1});
  assign acc_4_nl = nl_acc_4_nl[33:0];
  assign z_out_4_32 = readslicef_34_1_33(acc_4_nl);
  assign modulo_add_5_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_5_sva_1), (~ modulo_add_base_37_sva_1),
      fsm_output[6]);
  assign nl_acc_5_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_5_mux_3_nl
      , 1'b1});
  assign acc_5_nl = nl_acc_5_nl[33:0];
  assign z_out_5_32 = readslicef_34_1_33(acc_5_nl);
  assign modulo_add_6_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_6_sva_1), (~ modulo_add_base_38_sva_1),
      fsm_output[6]);
  assign nl_acc_6_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_6_mux_3_nl
      , 1'b1});
  assign acc_6_nl = nl_acc_6_nl[33:0];
  assign z_out_6_32 = readslicef_34_1_33(acc_6_nl);
  assign modulo_add_7_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_7_sva_1), (~ modulo_add_base_39_sva_1),
      fsm_output[6]);
  assign nl_acc_7_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_7_mux_3_nl
      , 1'b1});
  assign acc_7_nl = nl_acc_7_nl[33:0];
  assign z_out_7_32 = readslicef_34_1_33(acc_7_nl);
  assign modulo_add_8_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_8_sva_1), (~ modulo_add_base_40_sva_1),
      fsm_output[6]);
  assign nl_acc_8_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_8_mux_3_nl
      , 1'b1});
  assign acc_8_nl = nl_acc_8_nl[33:0];
  assign z_out_8_32 = readslicef_34_1_33(acc_8_nl);
  assign modulo_add_9_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_9_sva_1), (~ modulo_add_base_41_sva_1),
      fsm_output[6]);
  assign nl_acc_9_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_9_mux_3_nl
      , 1'b1});
  assign acc_9_nl = nl_acc_9_nl[33:0];
  assign z_out_9_32 = readslicef_34_1_33(acc_9_nl);
  assign modulo_add_10_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_10_sva_1), (~ modulo_add_base_42_sva_1),
      fsm_output[6]);
  assign nl_acc_10_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_10_mux_3_nl
      , 1'b1});
  assign acc_10_nl = nl_acc_10_nl[33:0];
  assign z_out_10_32 = readslicef_34_1_33(acc_10_nl);
  assign modulo_add_11_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_11_sva_1), (~ modulo_add_base_43_sva_1),
      fsm_output[6]);
  assign nl_acc_11_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_11_mux_3_nl
      , 1'b1});
  assign acc_11_nl = nl_acc_11_nl[33:0];
  assign z_out_11_32 = readslicef_34_1_33(acc_11_nl);
  assign modulo_add_12_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_12_sva_1), (~ modulo_add_base_44_sva_1),
      fsm_output[6]);
  assign nl_acc_12_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_12_mux_3_nl
      , 1'b1});
  assign acc_12_nl = nl_acc_12_nl[33:0];
  assign z_out_12_32 = readslicef_34_1_33(acc_12_nl);
  assign modulo_add_13_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_13_sva_1), (~ modulo_add_base_45_sva_1),
      fsm_output[6]);
  assign nl_acc_13_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_13_mux_3_nl
      , 1'b1});
  assign acc_13_nl = nl_acc_13_nl[33:0];
  assign z_out_13_32 = readslicef_34_1_33(acc_13_nl);
  assign modulo_add_14_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_14_sva_1), (~ modulo_add_base_46_sva_1),
      fsm_output[6]);
  assign nl_acc_14_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_14_mux_3_nl
      , 1'b1});
  assign acc_14_nl = nl_acc_14_nl[33:0];
  assign z_out_14_32 = readslicef_34_1_33(acc_14_nl);
  assign modulo_add_15_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_15_sva_1), (~ modulo_add_base_47_sva_1),
      fsm_output[6]);
  assign nl_acc_15_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_15_mux_3_nl
      , 1'b1});
  assign acc_15_nl = nl_acc_15_nl[33:0];
  assign z_out_15_32 = readslicef_34_1_33(acc_15_nl);
  assign mult_15_if_mux1h_6_nl = MUX1HOT_v_32_3_2(mult_15_res_sva_2, mult_31_res_sva_2,
      mult_48_res_sva_2, {(fsm_output[2]) , (fsm_output[4]) , (fsm_output[8])});
  assign nl_acc_16_nl = ({1'b1 , mult_15_if_mux1h_6_nl , 1'b1}) + conv_u2u_33_34({(~
      p_sva) , 1'b1});
  assign acc_16_nl = nl_acc_16_nl[33:0];
  assign z_out_16_32 = readslicef_34_1_33(acc_16_nl);
  assign mult_14_if_mux1h_6_nl = MUX1HOT_v_32_3_2(mult_14_res_sva_2, mult_30_res_sva_2,
      mult_49_res_sva_2, {(fsm_output[2]) , (fsm_output[4]) , (fsm_output[8])});
  assign nl_acc_17_nl = ({1'b1 , mult_14_if_mux1h_6_nl , 1'b1}) + conv_u2u_33_34({(~
      p_sva) , 1'b1});
  assign acc_17_nl = nl_acc_17_nl[33:0];
  assign z_out_17_32 = readslicef_34_1_33(acc_17_nl);
  assign mult_13_if_mux1h_6_nl = MUX1HOT_v_32_3_2(mult_13_res_sva_2, mult_29_res_sva_2,
      mult_50_res_sva_2, {(fsm_output[2]) , (fsm_output[4]) , (fsm_output[8])});
  assign nl_acc_18_nl = ({1'b1 , mult_13_if_mux1h_6_nl , 1'b1}) + conv_u2u_33_34({(~
      p_sva) , 1'b1});
  assign acc_18_nl = nl_acc_18_nl[33:0];
  assign z_out_18_32 = readslicef_34_1_33(acc_18_nl);
  assign mult_12_if_mux1h_6_nl = MUX1HOT_v_32_3_2(mult_12_res_sva_2, mult_28_res_sva_2,
      mult_52_res_sva_2, {(fsm_output[2]) , (fsm_output[4]) , (fsm_output[8])});
  assign nl_acc_19_nl = ({1'b1 , mult_12_if_mux1h_6_nl , 1'b1}) + conv_u2u_33_34({(~
      p_sva) , 1'b1});
  assign acc_19_nl = nl_acc_19_nl[33:0];
  assign z_out_19_32 = readslicef_34_1_33(acc_19_nl);
  assign mult_11_if_mux1h_6_nl = MUX1HOT_v_32_3_2(mult_11_res_sva_2, mult_27_res_sva_2,
      mult_54_res_sva_2, {(fsm_output[2]) , (fsm_output[4]) , (fsm_output[8])});
  assign nl_acc_20_nl = ({1'b1 , mult_11_if_mux1h_6_nl , 1'b1}) + conv_u2u_33_34({(~
      p_sva) , 1'b1});
  assign acc_20_nl = nl_acc_20_nl[33:0];
  assign z_out_20_32 = readslicef_34_1_33(acc_20_nl);
  assign mult_10_if_mux1h_6_nl = MUX1HOT_v_32_3_2(mult_10_res_sva_2, mult_26_res_sva_2,
      mult_56_res_sva_2, {(fsm_output[2]) , (fsm_output[4]) , (fsm_output[8])});
  assign nl_acc_21_nl = ({1'b1 , mult_10_if_mux1h_6_nl , 1'b1}) + conv_u2u_33_34({(~
      p_sva) , 1'b1});
  assign acc_21_nl = nl_acc_21_nl[33:0];
  assign z_out_21_32 = readslicef_34_1_33(acc_21_nl);
  assign mult_9_if_mux1h_6_nl = MUX1HOT_v_32_3_2(mult_9_res_sva_2, mult_25_res_sva_2,
      mult_58_res_sva_2, {(fsm_output[2]) , (fsm_output[4]) , (fsm_output[8])});
  assign nl_acc_22_nl = ({1'b1 , mult_9_if_mux1h_6_nl , 1'b1}) + conv_u2u_33_34({(~
      p_sva) , 1'b1});
  assign acc_22_nl = nl_acc_22_nl[33:0];
  assign z_out_22_32 = readslicef_34_1_33(acc_22_nl);
  assign mult_8_if_mux1h_6_nl = MUX1HOT_v_32_3_2(mult_8_res_sva_2, mult_24_res_sva_2,
      mult_60_res_sva_2, {(fsm_output[2]) , (fsm_output[4]) , (fsm_output[8])});
  assign nl_acc_23_nl = ({1'b1 , mult_8_if_mux1h_6_nl , 1'b1}) + conv_u2u_33_34({(~
      p_sva) , 1'b1});
  assign acc_23_nl = nl_acc_23_nl[33:0];
  assign z_out_23_32 = readslicef_34_1_33(acc_23_nl);
  assign mult_7_if_mux1h_6_nl = MUX1HOT_v_32_3_2(mult_7_res_sva_2, mult_23_res_sva_2,
      mult_62_res_sva_2, {(fsm_output[2]) , (fsm_output[4]) , (fsm_output[8])});
  assign nl_acc_24_nl = ({1'b1 , mult_7_if_mux1h_6_nl , 1'b1}) + conv_u2u_33_34({(~
      p_sva) , 1'b1});
  assign acc_24_nl = nl_acc_24_nl[33:0];
  assign z_out_24_32 = readslicef_34_1_33(acc_24_nl);
  assign mult_6_if_mux1h_4_nl = MUX1HOT_v_32_3_2(mult_6_res_sva_2, mult_22_res_sva_2,
      mult_51_res_sva_2, {(fsm_output[2]) , (fsm_output[4]) , (fsm_output[8])});
  assign nl_acc_25_nl = ({1'b1 , mult_6_if_mux1h_4_nl , 1'b1}) + conv_u2u_33_34({(~
      p_sva) , 1'b1});
  assign acc_25_nl = nl_acc_25_nl[33:0];
  assign z_out_25_32 = readslicef_34_1_33(acc_25_nl);
  assign mult_5_if_mux1h_4_nl = MUX1HOT_v_32_3_2(mult_5_res_sva_2, mult_21_res_sva_2,
      mult_53_res_sva_2, {(fsm_output[2]) , (fsm_output[4]) , (fsm_output[8])});
  assign nl_acc_26_nl = ({1'b1 , mult_5_if_mux1h_4_nl , 1'b1}) + conv_u2u_33_34({(~
      p_sva) , 1'b1});
  assign acc_26_nl = nl_acc_26_nl[33:0];
  assign z_out_26_32 = readslicef_34_1_33(acc_26_nl);
  assign mult_4_if_mux1h_4_nl = MUX1HOT_v_32_3_2(mult_4_res_sva_2, mult_20_res_sva_2,
      mult_55_res_sva_2, {(fsm_output[2]) , (fsm_output[4]) , (fsm_output[8])});
  assign nl_acc_27_nl = ({1'b1 , mult_4_if_mux1h_4_nl , 1'b1}) + conv_u2u_33_34({(~
      p_sva) , 1'b1});
  assign acc_27_nl = nl_acc_27_nl[33:0];
  assign z_out_27_32 = readslicef_34_1_33(acc_27_nl);
  assign mult_3_if_mux1h_4_nl = MUX1HOT_v_32_3_2(mult_3_res_sva_2, mult_19_res_sva_2,
      mult_57_res_sva_2, {(fsm_output[2]) , (fsm_output[4]) , (fsm_output[8])});
  assign nl_acc_28_nl = ({1'b1 , mult_3_if_mux1h_4_nl , 1'b1}) + conv_u2u_33_34({(~
      p_sva) , 1'b1});
  assign acc_28_nl = nl_acc_28_nl[33:0];
  assign z_out_28_32 = readslicef_34_1_33(acc_28_nl);
  assign mult_2_if_mux1h_4_nl = MUX1HOT_v_32_3_2(mult_2_res_sva_2, mult_18_res_sva_2,
      mult_59_res_sva_2, {(fsm_output[2]) , (fsm_output[4]) , (fsm_output[8])});
  assign nl_acc_29_nl = ({1'b1 , mult_2_if_mux1h_4_nl , 1'b1}) + conv_u2u_33_34({(~
      p_sva) , 1'b1});
  assign acc_29_nl = nl_acc_29_nl[33:0];
  assign z_out_29_32 = readslicef_34_1_33(acc_29_nl);
  assign mult_1_if_mux1h_4_nl = MUX1HOT_v_32_3_2(mult_1_res_sva_2, mult_17_res_sva_2,
      mult_61_res_sva_2, {(fsm_output[2]) , (fsm_output[4]) , (fsm_output[8])});
  assign nl_acc_30_nl = ({1'b1 , mult_1_if_mux1h_4_nl , 1'b1}) + conv_u2u_33_34({(~
      p_sva) , 1'b1});
  assign acc_30_nl = nl_acc_30_nl[33:0];
  assign z_out_30_32 = readslicef_34_1_33(acc_30_nl);
  assign mult_if_mux1h_4_nl = MUX1HOT_v_32_3_2(mult_res_sva_2, mult_16_res_sva_2,
      mult_63_res_sva_2, {(fsm_output[2]) , (fsm_output[4]) , (fsm_output[8])});
  assign nl_acc_31_nl = ({1'b1 , mult_if_mux1h_4_nl , 1'b1}) + conv_u2u_33_34({(~
      p_sva) , 1'b1});
  assign acc_31_nl = nl_acc_31_nl[33:0];
  assign z_out_31_32 = readslicef_34_1_33(acc_31_nl);
  assign modulo_add_31_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_31_sva_1), (~ modulo_add_base_63_sva_1),
      fsm_output[8]);
  assign nl_acc_32_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_31_mux_3_nl
      , 1'b1});
  assign acc_32_nl = nl_acc_32_nl[33:0];
  assign z_out_32_32 = readslicef_34_1_33(acc_32_nl);
  assign modulo_add_55_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_55_sva_1), (~ modulo_add_base_30_sva_1),
      fsm_output[4]);
  assign nl_acc_33_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_55_mux_3_nl
      , 1'b1});
  assign acc_33_nl = nl_acc_33_nl[33:0];
  assign z_out_33_32 = readslicef_34_1_33(acc_33_nl);
  assign modulo_add_23_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_23_sva_1), (~ modulo_add_base_62_sva_1),
      fsm_output[8]);
  assign nl_acc_34_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_23_mux_3_nl
      , 1'b1});
  assign acc_34_nl = nl_acc_34_nl[33:0];
  assign z_out_34_32 = readslicef_34_1_33(acc_34_nl);
  assign modulo_add_54_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_54_sva_1), (~ modulo_add_base_29_sva_1),
      fsm_output[4]);
  assign nl_acc_35_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_54_mux_3_nl
      , 1'b1});
  assign acc_35_nl = nl_acc_35_nl[33:0];
  assign z_out_35_32 = readslicef_34_1_33(acc_35_nl);
  assign modulo_add_22_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_22_sva_1), (~ modulo_add_base_61_sva_1),
      fsm_output[8]);
  assign nl_acc_36_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_22_mux_3_nl
      , 1'b1});
  assign acc_36_nl = nl_acc_36_nl[33:0];
  assign z_out_36_32 = readslicef_34_1_33(acc_36_nl);
  assign modulo_add_53_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_53_sva_1), (~ modulo_add_base_28_sva_1),
      fsm_output[4]);
  assign nl_acc_37_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_53_mux_3_nl
      , 1'b1});
  assign acc_37_nl = nl_acc_37_nl[33:0];
  assign z_out_37_32 = readslicef_34_1_33(acc_37_nl);
  assign modulo_add_21_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_21_sva_1), (~ modulo_add_base_60_sva_1),
      fsm_output[8]);
  assign nl_acc_38_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_21_mux_3_nl
      , 1'b1});
  assign acc_38_nl = nl_acc_38_nl[33:0];
  assign z_out_38_32 = readslicef_34_1_33(acc_38_nl);
  assign modulo_add_52_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_52_sva_1), (~ modulo_add_base_27_sva_1),
      fsm_output[4]);
  assign nl_acc_39_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_52_mux_3_nl
      , 1'b1});
  assign acc_39_nl = nl_acc_39_nl[33:0];
  assign z_out_39_32 = readslicef_34_1_33(acc_39_nl);
  assign modulo_add_20_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_20_sva_1), (~ modulo_add_base_59_sva_1),
      fsm_output[8]);
  assign nl_acc_40_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_20_mux_3_nl
      , 1'b1});
  assign acc_40_nl = nl_acc_40_nl[33:0];
  assign z_out_40_32 = readslicef_34_1_33(acc_40_nl);
  assign modulo_add_51_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_51_sva_1), (~ modulo_add_base_26_sva_1),
      fsm_output[4]);
  assign nl_acc_41_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_51_mux_3_nl
      , 1'b1});
  assign acc_41_nl = nl_acc_41_nl[33:0];
  assign z_out_41_32 = readslicef_34_1_33(acc_41_nl);
  assign modulo_add_19_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_19_sva_1), (~ modulo_add_base_58_sva_1),
      fsm_output[8]);
  assign nl_acc_42_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_19_mux_3_nl
      , 1'b1});
  assign acc_42_nl = nl_acc_42_nl[33:0];
  assign z_out_42_32 = readslicef_34_1_33(acc_42_nl);
  assign modulo_add_50_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_50_sva_1), (~ modulo_add_base_25_sva_1),
      fsm_output[4]);
  assign nl_acc_43_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_50_mux_3_nl
      , 1'b1});
  assign acc_43_nl = nl_acc_43_nl[33:0];
  assign z_out_43_32 = readslicef_34_1_33(acc_43_nl);
  assign modulo_add_18_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_18_sva_1), (~ modulo_add_base_57_sva_1),
      fsm_output[8]);
  assign nl_acc_44_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_18_mux_3_nl
      , 1'b1});
  assign acc_44_nl = nl_acc_44_nl[33:0];
  assign z_out_44_32 = readslicef_34_1_33(acc_44_nl);
  assign modulo_add_49_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_49_sva_1), (~ modulo_add_base_24_sva_1),
      fsm_output[4]);
  assign nl_acc_45_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_49_mux_3_nl
      , 1'b1});
  assign acc_45_nl = nl_acc_45_nl[33:0];
  assign z_out_45_32 = readslicef_34_1_33(acc_45_nl);
  assign modulo_add_17_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_17_sva_1), (~ modulo_add_base_56_sva_1),
      fsm_output[8]);
  assign nl_acc_46_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_17_mux_3_nl
      , 1'b1});
  assign acc_46_nl = nl_acc_46_nl[33:0];
  assign z_out_46_32 = readslicef_34_1_33(acc_46_nl);
  assign modulo_add_16_mux_3_nl = MUX_v_32_2_2((~ modulo_add_base_16_sva_1), (~ modulo_add_base_48_sva_1),
      fsm_output[8]);
  assign nl_acc_47_nl = ({1'b1 , p_sva , 1'b1}) + conv_u2u_33_34({modulo_add_16_mux_3_nl
      , 1'b1});
  assign acc_47_nl = nl_acc_47_nl[33:0];
  assign z_out_47_32 = readslicef_34_1_33(acc_47_nl);
  assign operator_20_false_mux_2_nl = MUX_v_5_2_2(INNER_LOOP1_r_9_4_sva_4_0, INNER_LOOP2_r_9_4_sva_4_0,
      fsm_output[4]);
  assign nl_z_out_49 = conv_u2u_5_6(operator_20_false_mux_2_nl) + 6'b000001;
  assign z_out_49 = nl_z_out_49[5:0];
  assign nl_z_out_50 = conv_u2u_5_6(butterFly2_1_tw_butterFly2_1_tw_mux_cse) + 6'b000001;
  assign z_out_50 = nl_z_out_50[5:0];
  assign mult_15_if_mux1h_7_nl = MUX1HOT_v_32_3_2(mult_15_res_sva_1, mult_47_res_sva_1,
      mult_63_res_sva_1, {(fsm_output[2]) , (fsm_output[6]) , (fsm_output[8])});
  assign nl_acc_50_nl = ({mult_15_if_mux1h_7_nl , 1'b1}) + ({(~ p_sva) , 1'b1});
  assign acc_50_nl = nl_acc_50_nl[32:0];
  assign z_out_51 = readslicef_33_32_1(acc_50_nl);
  assign mult_14_if_mux1h_7_nl = MUX1HOT_v_32_3_2(mult_14_res_sva_1, mult_46_res_sva_1,
      mult_62_res_sva_1, {(fsm_output[2]) , (fsm_output[6]) , (fsm_output[8])});
  assign nl_acc_51_nl = ({mult_14_if_mux1h_7_nl , 1'b1}) + ({(~ p_sva) , 1'b1});
  assign acc_51_nl = nl_acc_51_nl[32:0];
  assign z_out_52 = readslicef_33_32_1(acc_51_nl);
  assign mult_13_if_mux1h_7_nl = MUX1HOT_v_32_3_2(mult_13_res_sva_1, mult_45_res_sva_1,
      mult_61_res_sva_1, {(fsm_output[2]) , (fsm_output[6]) , (fsm_output[8])});
  assign nl_acc_52_nl = ({mult_13_if_mux1h_7_nl , 1'b1}) + ({(~ p_sva) , 1'b1});
  assign acc_52_nl = nl_acc_52_nl[32:0];
  assign z_out_53 = readslicef_33_32_1(acc_52_nl);
  assign mult_12_if_mux1h_7_nl = MUX1HOT_v_32_3_2(mult_12_res_sva_1, mult_44_res_sva_1,
      mult_60_res_sva_1, {(fsm_output[2]) , (fsm_output[6]) , (fsm_output[8])});
  assign nl_acc_53_nl = ({mult_12_if_mux1h_7_nl , 1'b1}) + ({(~ p_sva) , 1'b1});
  assign acc_53_nl = nl_acc_53_nl[32:0];
  assign z_out_54 = readslicef_33_32_1(acc_53_nl);
  assign mult_11_if_mux1h_7_nl = MUX1HOT_v_32_3_2(mult_11_res_sva_1, mult_43_res_sva_1,
      mult_59_res_sva_1, {(fsm_output[2]) , (fsm_output[6]) , (fsm_output[8])});
  assign nl_acc_54_nl = ({mult_11_if_mux1h_7_nl , 1'b1}) + ({(~ p_sva) , 1'b1});
  assign acc_54_nl = nl_acc_54_nl[32:0];
  assign z_out_55 = readslicef_33_32_1(acc_54_nl);
  assign mult_10_if_mux1h_7_nl = MUX1HOT_v_32_3_2(mult_10_res_sva_1, mult_42_res_sva_1,
      mult_58_res_sva_1, {(fsm_output[2]) , (fsm_output[6]) , (fsm_output[8])});
  assign nl_acc_55_nl = ({mult_10_if_mux1h_7_nl , 1'b1}) + ({(~ p_sva) , 1'b1});
  assign acc_55_nl = nl_acc_55_nl[32:0];
  assign z_out_56 = readslicef_33_32_1(acc_55_nl);
  assign mult_9_if_mux1h_7_nl = MUX1HOT_v_32_3_2(mult_9_res_sva_1, mult_41_res_sva_1,
      mult_57_res_sva_1, {(fsm_output[2]) , (fsm_output[6]) , (fsm_output[8])});
  assign nl_acc_56_nl = ({mult_9_if_mux1h_7_nl , 1'b1}) + ({(~ p_sva) , 1'b1});
  assign acc_56_nl = nl_acc_56_nl[32:0];
  assign z_out_57 = readslicef_33_32_1(acc_56_nl);
  assign mult_8_if_mux1h_7_nl = MUX1HOT_v_32_3_2(mult_8_res_sva_1, mult_40_res_sva_1,
      mult_56_res_sva_1, {(fsm_output[2]) , (fsm_output[6]) , (fsm_output[8])});
  assign nl_acc_57_nl = ({mult_8_if_mux1h_7_nl , 1'b1}) + ({(~ p_sva) , 1'b1});
  assign acc_57_nl = nl_acc_57_nl[32:0];
  assign z_out_58 = readslicef_33_32_1(acc_57_nl);
  assign mult_7_if_mux1h_7_nl = MUX1HOT_v_32_3_2(mult_7_res_sva_1, mult_39_res_sva_1,
      mult_55_res_sva_1, {(fsm_output[2]) , (fsm_output[6]) , (fsm_output[8])});
  assign nl_acc_58_nl = ({mult_7_if_mux1h_7_nl , 1'b1}) + ({(~ p_sva) , 1'b1});
  assign acc_58_nl = nl_acc_58_nl[32:0];
  assign z_out_59 = readslicef_33_32_1(acc_58_nl);
  assign mult_6_if_mux_2_nl = MUX_v_32_2_2(mult_6_res_sva_1, mult_31_res_sva_1, fsm_output[4]);
  assign nl_acc_59_nl = ({mult_6_if_mux_2_nl , 1'b1}) + ({(~ p_sva) , 1'b1});
  assign acc_59_nl = nl_acc_59_nl[32:0];
  assign z_out_60 = readslicef_33_32_1(acc_59_nl);
  assign modulo_sub_12_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_12_sva_1[30:0]),
      (modulo_sub_base_16_sva_1[30:0]), fsm_output[4]);
  assign nl_z_out_61 = ({1'b1 , modulo_sub_12_qif_mux_2_nl}) + p_sva;
  assign z_out_61 = nl_z_out_61[31:0];
  assign mult_30_if_mux_2_nl = MUX_v_32_2_2(mult_30_res_sva_1, mult_32_z_asn_itm_4,
      fsm_output[6]);
  assign mult_30_if_mux_3_nl = MUX_v_32_2_2((~ p_sva), (~ reg_mult_z_asn_itm_1_cse),
      fsm_output[6]);
  assign nl_acc_61_nl = ({mult_30_if_mux_2_nl , 1'b1}) + ({mult_30_if_mux_3_nl ,
      1'b1});
  assign acc_61_nl = nl_acc_61_nl[32:0];
  assign z_out_62 = readslicef_33_32_1(acc_61_nl);
  assign mult_29_if_mux_2_nl = MUX_v_32_2_2(mult_29_res_sva_1, mult_33_z_asn_itm_4,
      fsm_output[6]);
  assign mult_29_if_mux_3_nl = MUX_v_32_2_2((~ p_sva), (~ reg_mult_5_z_asn_itm_1_cse),
      fsm_output[6]);
  assign nl_acc_62_nl = ({mult_29_if_mux_2_nl , 1'b1}) + ({mult_29_if_mux_3_nl ,
      1'b1});
  assign acc_62_nl = nl_acc_62_nl[32:0];
  assign z_out_63 = readslicef_33_32_1(acc_62_nl);
  assign mult_28_if_mux_2_nl = MUX_v_32_2_2(mult_28_res_sva_1, mult_34_z_asn_itm_4,
      fsm_output[6]);
  assign mult_28_if_mux_3_nl = MUX_v_32_2_2((~ p_sva), (~ reg_mult_8_z_asn_itm_1_cse),
      fsm_output[6]);
  assign nl_acc_63_nl = ({mult_28_if_mux_2_nl , 1'b1}) + ({mult_28_if_mux_3_nl ,
      1'b1});
  assign acc_63_nl = nl_acc_63_nl[32:0];
  assign z_out_64 = readslicef_33_32_1(acc_63_nl);
  assign mult_27_if_mux_2_nl = MUX_v_32_2_2(mult_27_res_sva_1, mult_35_z_asn_itm_4,
      fsm_output[6]);
  assign mult_27_if_mux_3_nl = MUX_v_32_2_2((~ p_sva), (~ reg_mult_13_z_asn_itm_1_cse),
      fsm_output[6]);
  assign nl_acc_64_nl = ({mult_27_if_mux_2_nl , 1'b1}) + ({mult_27_if_mux_3_nl ,
      1'b1});
  assign acc_64_nl = nl_acc_64_nl[32:0];
  assign z_out_65 = readslicef_33_32_1(acc_64_nl);
  assign mult_26_if_mux_2_nl = MUX_v_32_2_2(mult_26_res_sva_1, mult_36_z_asn_itm_4,
      fsm_output[6]);
  assign mult_26_if_mux_3_nl = MUX_v_32_2_2((~ p_sva), (~ reg_mult_15_z_asn_itm_1_cse),
      fsm_output[6]);
  assign nl_acc_65_nl = ({mult_26_if_mux_2_nl , 1'b1}) + ({mult_26_if_mux_3_nl ,
      1'b1});
  assign acc_65_nl = nl_acc_65_nl[32:0];
  assign z_out_66 = readslicef_33_32_1(acc_65_nl);
  assign mult_25_if_mux_2_nl = MUX_v_32_2_2(mult_25_res_sva_1, mult_37_z_asn_itm_4,
      fsm_output[6]);
  assign mult_25_if_mux_3_nl = MUX_v_32_2_2((~ p_sva), (~ reg_mult_11_z_asn_itm_1_cse),
      fsm_output[6]);
  assign nl_acc_66_nl = ({mult_25_if_mux_2_nl , 1'b1}) + ({mult_25_if_mux_3_nl ,
      1'b1});
  assign acc_66_nl = nl_acc_66_nl[32:0];
  assign z_out_67 = readslicef_33_32_1(acc_66_nl);
  assign mult_24_if_mux_2_nl = MUX_v_32_2_2(mult_24_res_sva_1, mult_38_z_asn_itm_4,
      fsm_output[6]);
  assign mult_24_if_mux_3_nl = MUX_v_32_2_2((~ p_sva), (~ reg_mult_7_z_asn_itm_1_cse),
      fsm_output[6]);
  assign nl_acc_67_nl = ({mult_24_if_mux_2_nl , 1'b1}) + ({mult_24_if_mux_3_nl ,
      1'b1});
  assign acc_67_nl = nl_acc_67_nl[32:0];
  assign z_out_68 = readslicef_33_32_1(acc_67_nl);
  assign mult_23_if_mux_2_nl = MUX_v_32_2_2(mult_23_res_sva_1, mult_39_z_asn_itm_4,
      fsm_output[6]);
  assign mult_23_if_mux_3_nl = MUX_v_32_2_2((~ p_sva), (~ reg_mult_3_z_asn_itm_1_cse),
      fsm_output[6]);
  assign nl_acc_68_nl = ({mult_23_if_mux_2_nl , 1'b1}) + ({mult_23_if_mux_3_nl ,
      1'b1});
  assign acc_68_nl = nl_acc_68_nl[32:0];
  assign z_out_69 = readslicef_33_32_1(acc_68_nl);
  assign mult_22_if_mux_2_nl = MUX_v_32_2_2(mult_22_res_sva_1, mult_40_z_asn_itm_4,
      fsm_output[6]);
  assign mult_22_if_mux_3_nl = MUX_v_32_2_2((~ p_sva), (~ reg_mult_2_z_asn_itm_1_cse),
      fsm_output[6]);
  assign nl_acc_69_nl = ({mult_22_if_mux_2_nl , 1'b1}) + ({mult_22_if_mux_3_nl ,
      1'b1});
  assign acc_69_nl = nl_acc_69_nl[32:0];
  assign z_out_70 = readslicef_33_32_1(acc_69_nl);
  assign modulo_sub_41_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_41_sva_1[30:0]),
      (modulo_sub_base_53_sva_1[30:0]), fsm_output[8]);
  assign nl_z_out_71 = ({1'b1 , modulo_sub_41_qif_mux_2_nl}) + p_sva;
  assign z_out_71 = nl_z_out_71[31:0];
  assign modulo_sub_47_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_47_sva_1[30:0]),
      (modulo_sub_base_54_sva_1[30:0]), fsm_output[8]);
  assign nl_z_out_72 = ({1'b1 , modulo_sub_47_qif_mux_2_nl}) + p_sva;
  assign z_out_72 = nl_z_out_72[31:0];
  assign modulo_sub_9_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_9_sva_1[30:0]),
      (modulo_sub_base_20_sva_1[30:0]), fsm_output[4]);
  assign nl_z_out_73 = ({1'b1 , modulo_sub_9_qif_mux_2_nl}) + p_sva;
  assign z_out_73 = nl_z_out_73[31:0];
  assign modulo_sub_40_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_40_sva_1[30:0]),
      (modulo_sub_base_55_sva_1[30:0]), fsm_output[8]);
  assign nl_z_out_74 = ({1'b1 , modulo_sub_40_qif_mux_2_nl}) + p_sva;
  assign z_out_74 = nl_z_out_74[31:0];
  assign modulo_sub_8_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_8_sva_1[30:0]),
      (modulo_sub_base_21_sva_1[30:0]), fsm_output[4]);
  assign nl_z_out_75 = ({1'b1 , modulo_sub_8_qif_mux_2_nl}) + p_sva;
  assign z_out_75 = nl_z_out_75[31:0];
  assign modulo_sub_39_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_39_sva_1[30:0]),
      (modulo_sub_base_56_sva_1[30:0]), fsm_output[8]);
  assign nl_z_out_76 = ({1'b1 , modulo_sub_39_qif_mux_2_nl}) + p_sva;
  assign z_out_76 = nl_z_out_76[31:0];
  assign modulo_sub_7_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_7_sva_1[30:0]),
      (modulo_sub_base_18_sva_1[30:0]), fsm_output[4]);
  assign nl_z_out_77 = ({1'b1 , modulo_sub_7_qif_mux_2_nl}) + p_sva;
  assign z_out_77 = nl_z_out_77[31:0];
  assign modulo_sub_38_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_38_sva_1[30:0]),
      (modulo_sub_base_57_sva_1[30:0]), fsm_output[8]);
  assign nl_z_out_78 = ({1'b1 , modulo_sub_38_qif_mux_2_nl}) + p_sva;
  assign z_out_78 = nl_z_out_78[31:0];
  assign modulo_sub_6_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_6_sva_1[30:0]),
      (modulo_sub_base_24_sva_1[30:0]), fsm_output[4]);
  assign nl_z_out_79 = ({1'b1 , modulo_sub_6_qif_mux_2_nl}) + p_sva;
  assign z_out_79 = nl_z_out_79[31:0];
  assign modulo_sub_46_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_46_sva_1[30:0]),
      (modulo_sub_base_52_sva_1[30:0]), fsm_output[8]);
  assign nl_z_out_80 = ({1'b1 , modulo_sub_46_qif_mux_2_nl}) + p_sva;
  assign z_out_80 = nl_z_out_80[31:0];
  assign modulo_sub_42_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_42_sva_1[30:0]),
      (modulo_sub_base_51_sva_1[30:0]), fsm_output[8]);
  assign nl_z_out_81 = ({1'b1 , modulo_sub_42_qif_mux_2_nl}) + p_sva;
  assign z_out_81 = nl_z_out_81[31:0];
  assign modulo_sub_45_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_45_sva_1[30:0]),
      (modulo_sub_base_50_sva_1[30:0]), fsm_output[8]);
  assign nl_z_out_82 = ({1'b1 , modulo_sub_45_qif_mux_2_nl}) + p_sva;
  assign z_out_82 = nl_z_out_82[31:0];
  assign modulo_sub_43_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_43_sva_1[30:0]),
      (modulo_sub_base_49_sva_1[30:0]), fsm_output[8]);
  assign nl_z_out_83 = ({1'b1 , modulo_sub_43_qif_mux_2_nl}) + p_sva;
  assign z_out_83 = nl_z_out_83[31:0];
  assign modulo_sub_44_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_44_sva_1[30:0]),
      (modulo_sub_base_48_sva_1[30:0]), fsm_output[8]);
  assign nl_z_out_84 = ({1'b1 , modulo_sub_44_qif_mux_2_nl}) + p_sva;
  assign z_out_84 = nl_z_out_84[31:0];
  assign modulo_sub_10_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_10_sva_1[30:0]),
      (modulo_sub_base_19_sva_1[30:0]), fsm_output[4]);
  assign nl_z_out_85 = ({1'b1 , modulo_sub_10_qif_mux_2_nl}) + p_sva;
  assign z_out_85 = nl_z_out_85[31:0];
  assign modulo_sub_15_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_15_sva_1[30:0]),
      (modulo_sub_base_22_sva_1[30:0]), fsm_output[4]);
  assign nl_z_out_86 = ({1'b1 , modulo_sub_15_qif_mux_2_nl}) + p_sva;
  assign z_out_86 = nl_z_out_86[31:0];
  assign modulo_sub_11_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_11_sva_1[30:0]),
      (modulo_sub_base_23_sva_1[30:0]), fsm_output[4]);
  assign nl_z_out_87 = ({1'b1 , modulo_sub_11_qif_mux_2_nl}) + p_sva;
  assign z_out_87 = nl_z_out_87[31:0];
  assign modulo_sub_14_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_14_sva_1[30:0]),
      (modulo_sub_base_17_sva_1[30:0]), fsm_output[4]);
  assign nl_z_out_88 = ({1'b1 , modulo_sub_14_qif_mux_2_nl}) + p_sva;
  assign z_out_88 = nl_z_out_88[31:0];
  assign modulo_sub_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_sva_1[30:0]), (modulo_sub_base_31_sva_1[30:0]),
      fsm_output[4]);
  assign nl_z_out_89 = ({1'b1 , modulo_sub_qif_mux_2_nl}) + p_sva;
  assign z_out_89 = nl_z_out_89[31:0];
  assign modulo_sub_32_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_32_sva_1[30:0]),
      (modulo_sub_base_63_sva_1[30:0]), fsm_output[8]);
  assign nl_z_out_90 = ({1'b1 , modulo_sub_32_qif_mux_2_nl}) + p_sva;
  assign z_out_90 = nl_z_out_90[31:0];
  assign modulo_sub_1_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_1_sva_1[30:0]),
      (modulo_sub_base_30_sva_1[30:0]), fsm_output[4]);
  assign nl_z_out_91 = ({1'b1 , modulo_sub_1_qif_mux_2_nl}) + p_sva;
  assign z_out_91 = nl_z_out_91[31:0];
  assign modulo_sub_33_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_33_sva_1[30:0]),
      (modulo_sub_base_62_sva_1[30:0]), fsm_output[8]);
  assign nl_z_out_92 = ({1'b1 , modulo_sub_33_qif_mux_2_nl}) + p_sva;
  assign z_out_92 = nl_z_out_92[31:0];
  assign modulo_sub_2_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_2_sva_1[30:0]),
      (modulo_sub_base_29_sva_1[30:0]), fsm_output[4]);
  assign nl_z_out_93 = ({1'b1 , modulo_sub_2_qif_mux_2_nl}) + p_sva;
  assign z_out_93 = nl_z_out_93[31:0];
  assign modulo_sub_34_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_34_sva_1[30:0]),
      (modulo_sub_base_61_sva_1[30:0]), fsm_output[8]);
  assign nl_z_out_94 = ({1'b1 , modulo_sub_34_qif_mux_2_nl}) + p_sva;
  assign z_out_94 = nl_z_out_94[31:0];
  assign modulo_sub_3_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_3_sva_1[30:0]),
      (modulo_sub_base_28_sva_1[30:0]), fsm_output[4]);
  assign nl_z_out_95 = ({1'b1 , modulo_sub_3_qif_mux_2_nl}) + p_sva;
  assign z_out_95 = nl_z_out_95[31:0];
  assign modulo_sub_35_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_35_sva_1[30:0]),
      (modulo_sub_base_60_sva_1[30:0]), fsm_output[8]);
  assign nl_z_out_96 = ({1'b1 , modulo_sub_35_qif_mux_2_nl}) + p_sva;
  assign z_out_96 = nl_z_out_96[31:0];
  assign modulo_sub_4_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_4_sva_1[30:0]),
      (modulo_sub_base_27_sva_1[30:0]), fsm_output[4]);
  assign nl_z_out_97 = ({1'b1 , modulo_sub_4_qif_mux_2_nl}) + p_sva;
  assign z_out_97 = nl_z_out_97[31:0];
  assign modulo_sub_36_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_36_sva_1[30:0]),
      (modulo_sub_base_59_sva_1[30:0]), fsm_output[8]);
  assign nl_z_out_98 = ({1'b1 , modulo_sub_36_qif_mux_2_nl}) + p_sva;
  assign z_out_98 = nl_z_out_98[31:0];
  assign modulo_sub_5_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_5_sva_1[30:0]),
      (modulo_sub_base_26_sva_1[30:0]), fsm_output[4]);
  assign nl_z_out_99 = ({1'b1 , modulo_sub_5_qif_mux_2_nl}) + p_sva;
  assign z_out_99 = nl_z_out_99[31:0];
  assign modulo_sub_13_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_13_sva_1[30:0]),
      (modulo_sub_base_25_sva_1[30:0]), fsm_output[4]);
  assign nl_z_out_100 = ({1'b1 , modulo_sub_13_qif_mux_2_nl}) + p_sva;
  assign z_out_100 = nl_z_out_100[31:0];
  assign modulo_sub_37_qif_mux_2_nl = MUX_v_31_2_2((modulo_sub_base_37_sva_1[30:0]),
      (modulo_sub_base_58_sva_1[30:0]), fsm_output[8]);
  assign nl_z_out_101 = ({1'b1 , modulo_sub_37_qif_mux_2_nl}) + p_sva;
  assign z_out_101 = nl_z_out_101[31:0];
  assign butterFly1_22_mux_4_nl = MUX_v_32_2_2(tmp_12_lpi_3_dfm_8, tmp_32_lpi_3_dfm_8,
      fsm_output[8]);
  assign butterFly1_22_mux_5_nl = MUX_v_32_2_2(mult_22_res_lpi_3_dfm_mx0, mult_48_res_lpi_3_dfm_mx0,
      fsm_output[8]);
  assign nl_z_out_102 = butterFly1_22_mux_4_nl + butterFly1_22_mux_5_nl;
  assign z_out_102 = nl_z_out_102[31:0];
  assign butterFly1_23_mux_4_nl = MUX_v_32_2_2(tmp_14_lpi_3_dfm_8, tmp_34_lpi_3_dfm_8,
      fsm_output[8]);
  assign butterFly1_23_mux_5_nl = MUX_v_32_2_2(mult_23_res_lpi_3_dfm_mx0, mult_49_res_lpi_3_dfm_mx0,
      fsm_output[8]);
  assign nl_z_out_103 = butterFly1_23_mux_4_nl + butterFly1_23_mux_5_nl;
  assign z_out_103 = nl_z_out_103[31:0];
  assign modulo_add_16_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_16_sva_1,
      modulo_add_base_48_sva_1, modulo_add_base_sva_1, {(fsm_output[4]) , (fsm_output[8])
      , (fsm_output[2])});
  assign nl_acc_103_nl = ({modulo_add_16_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) ,
      1'b1});
  assign acc_103_nl = nl_acc_103_nl[32:0];
  assign z_out_104 = readslicef_33_32_1(acc_103_nl);
  assign modulo_add_17_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_17_sva_1,
      modulo_add_base_49_sva_1, mult_5_res_sva_1, {(fsm_output[4]) , (fsm_output[8])
      , (fsm_output[2])});
  assign nl_acc_104_nl = ({modulo_add_17_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) ,
      1'b1});
  assign acc_104_nl = nl_acc_104_nl[32:0];
  assign z_out_105 = readslicef_33_32_1(acc_104_nl);
  assign modulo_add_18_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_18_sva_1,
      modulo_add_base_50_sva_1, mult_4_res_sva_1, {(fsm_output[4]) , (fsm_output[8])
      , (fsm_output[2])});
  assign nl_acc_105_nl = ({modulo_add_18_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) ,
      1'b1});
  assign acc_105_nl = nl_acc_105_nl[32:0];
  assign z_out_106 = readslicef_33_32_1(acc_105_nl);
  assign modulo_add_19_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_19_sva_1,
      modulo_add_base_51_sva_1, mult_3_res_sva_1, {(fsm_output[4]) , (fsm_output[8])
      , (fsm_output[2])});
  assign nl_acc_106_nl = ({modulo_add_19_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) ,
      1'b1});
  assign acc_106_nl = nl_acc_106_nl[32:0];
  assign z_out_107 = readslicef_33_32_1(acc_106_nl);
  assign modulo_add_20_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_20_sva_1,
      modulo_add_base_52_sva_1, mult_2_res_sva_1, {(fsm_output[4]) , (fsm_output[8])
      , (fsm_output[2])});
  assign nl_acc_107_nl = ({modulo_add_20_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) ,
      1'b1});
  assign acc_107_nl = nl_acc_107_nl[32:0];
  assign z_out_108 = readslicef_33_32_1(acc_107_nl);
  assign modulo_add_53_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_53_sva_1,
      mult_1_res_sva_1, mult_21_res_sva_1, {(fsm_output[8]) , (fsm_output[2]) , (fsm_output[4])});
  assign nl_acc_108_nl = ({modulo_add_53_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) ,
      1'b1});
  assign acc_108_nl = nl_acc_108_nl[32:0];
  assign z_out_109 = readslicef_33_32_1(acc_108_nl);
  assign modulo_add_54_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_54_sva_1,
      mult_res_sva_1, mult_19_res_sva_1, {(fsm_output[8]) , (fsm_output[2]) , (fsm_output[4])});
  assign nl_acc_109_nl = ({modulo_add_54_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) ,
      1'b1});
  assign acc_109_nl = nl_acc_109_nl[32:0];
  assign z_out_110 = readslicef_33_32_1(acc_109_nl);
  assign modulo_add_55_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_55_sva_1,
      modulo_add_base_1_sva_1, mult_17_res_sva_1, {(fsm_output[8]) , (fsm_output[2])
      , (fsm_output[4])});
  assign nl_acc_110_nl = ({modulo_add_55_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) ,
      1'b1});
  assign acc_110_nl = nl_acc_110_nl[32:0];
  assign z_out_111 = readslicef_33_32_1(acc_110_nl);
  assign modulo_add_56_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_56_sva_1,
      modulo_add_base_2_sva_1, mult_20_res_sva_1, {(fsm_output[8]) , (fsm_output[2])
      , (fsm_output[4])});
  assign nl_acc_111_nl = ({modulo_add_56_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) ,
      1'b1});
  assign acc_111_nl = nl_acc_111_nl[32:0];
  assign z_out_112 = readslicef_33_32_1(acc_111_nl);
  assign modulo_add_21_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_21_sva_1,
      modulo_add_base_57_sva_1, modulo_add_base_3_sva_1, {(fsm_output[4]) , (fsm_output[8])
      , (fsm_output[2])});
  assign nl_acc_112_nl = ({modulo_add_21_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) ,
      1'b1});
  assign acc_112_nl = nl_acc_112_nl[32:0];
  assign z_out_113 = readslicef_33_32_1(acc_112_nl);
  assign modulo_add_58_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_58_sva_1,
      modulo_add_base_4_sva_1, mult_18_res_sva_1, {(fsm_output[8]) , (fsm_output[2])
      , (fsm_output[4])});
  assign nl_acc_113_nl = ({modulo_add_58_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) ,
      1'b1});
  assign acc_113_nl = nl_acc_113_nl[32:0];
  assign z_out_114 = readslicef_33_32_1(acc_113_nl);
  assign modulo_add_22_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_22_sva_1,
      modulo_add_base_59_sva_1, modulo_add_base_5_sva_1, {(fsm_output[4]) , (fsm_output[8])
      , (fsm_output[2])});
  assign nl_acc_114_nl = ({modulo_add_22_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) ,
      1'b1});
  assign acc_114_nl = nl_acc_114_nl[32:0];
  assign z_out_115 = readslicef_33_32_1(acc_114_nl);
  assign modulo_add_6_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_6_sva_1,
      mult_16_res_sva_1, mult_54_res_sva_1, {(fsm_output[2]) , (fsm_output[4]) ,
      (fsm_output[8])});
  assign nl_acc_115_nl = ({modulo_add_6_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) , 1'b1});
  assign acc_115_nl = nl_acc_115_nl[32:0];
  assign z_out_116 = readslicef_33_32_1(acc_115_nl);
  assign modulo_add_23_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_23_sva_1,
      modulo_add_base_60_sva_1, modulo_add_base_7_sva_1, {(fsm_output[4]) , (fsm_output[8])
      , (fsm_output[2])});
  assign nl_acc_116_nl = ({modulo_add_23_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) ,
      1'b1});
  assign acc_116_nl = nl_acc_116_nl[32:0];
  assign z_out_117 = readslicef_33_32_1(acc_116_nl);
  assign mult_38_if_mux_2_nl = MUX_v_32_2_2(mult_38_res_sva_1, mult_52_res_sva_1,
      fsm_output[8]);
  assign nl_acc_117_nl = ({mult_38_if_mux_2_nl , 1'b1}) + ({(~ p_sva) , 1'b1});
  assign acc_117_nl = nl_acc_117_nl[32:0];
  assign z_out_118 = readslicef_33_32_1(acc_117_nl);
  assign modulo_add_24_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_24_sva_1,
      modulo_add_base_61_sva_1, modulo_add_base_8_sva_1, {(fsm_output[4]) , (fsm_output[8])
      , (fsm_output[2])});
  assign nl_acc_118_nl = ({modulo_add_24_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) ,
      1'b1});
  assign acc_118_nl = nl_acc_118_nl[32:0];
  assign z_out_119 = readslicef_33_32_1(acc_118_nl);
  assign mult_36_if_mux_2_nl = MUX_v_32_2_2(mult_36_res_sva_1, mult_50_res_sva_1,
      fsm_output[8]);
  assign nl_acc_119_nl = ({mult_36_if_mux_2_nl , 1'b1}) + ({(~ p_sva) , 1'b1});
  assign acc_119_nl = nl_acc_119_nl[32:0];
  assign z_out_120 = readslicef_33_32_1(acc_119_nl);
  assign modulo_add_25_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_25_sva_1,
      modulo_add_base_62_sva_1, modulo_add_base_9_sva_1, {(fsm_output[4]) , (fsm_output[8])
      , (fsm_output[2])});
  assign nl_acc_120_nl = ({modulo_add_25_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) ,
      1'b1});
  assign acc_120_nl = nl_acc_120_nl[32:0];
  assign z_out_121 = readslicef_33_32_1(acc_120_nl);
  assign mult_34_if_mux_2_nl = MUX_v_32_2_2(mult_34_res_sva_1, mult_48_res_sva_1,
      fsm_output[8]);
  assign nl_acc_121_nl = ({mult_34_if_mux_2_nl , 1'b1}) + ({(~ p_sva) , 1'b1});
  assign acc_121_nl = nl_acc_121_nl[32:0];
  assign z_out_122 = readslicef_33_32_1(acc_121_nl);
  assign modulo_add_26_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_26_sva_1,
      modulo_add_base_63_sva_1, modulo_add_base_10_sva_1, {(fsm_output[4]) , (fsm_output[8])
      , (fsm_output[2])});
  assign nl_acc_122_nl = ({modulo_add_26_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) ,
      1'b1});
  assign acc_122_nl = nl_acc_122_nl[32:0];
  assign z_out_123 = readslicef_33_32_1(acc_122_nl);
  assign mult_32_if_mux_2_nl = MUX_v_32_2_2(mult_32_res_sva_1, mult_53_res_sva_1,
      fsm_output[8]);
  assign nl_acc_123_nl = ({mult_32_if_mux_2_nl , 1'b1}) + ({(~ p_sva) , 1'b1});
  assign acc_123_nl = nl_acc_123_nl[32:0];
  assign z_out_124 = readslicef_33_32_1(acc_123_nl);
  assign modulo_add_27_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_27_sva_1,
      modulo_add_base_11_sva_1, modulo_add_base_46_sva_1, {(fsm_output[4]) , (fsm_output[2])
      , (fsm_output[6])});
  assign nl_acc_124_nl = ({modulo_add_27_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) ,
      1'b1});
  assign acc_124_nl = nl_acc_124_nl[32:0];
  assign z_out_125 = readslicef_33_32_1(acc_124_nl);
  assign modulo_add_33_qif_mux_2_nl = MUX_v_32_2_2(modulo_add_base_33_sva_1, mult_51_res_sva_1,
      fsm_output[8]);
  assign nl_acc_125_nl = ({modulo_add_33_qif_mux_2_nl , 1'b1}) + ({(~ p_sva) , 1'b1});
  assign acc_125_nl = nl_acc_125_nl[32:0];
  assign z_out_126 = readslicef_33_32_1(acc_125_nl);
  assign modulo_add_28_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_28_sva_1,
      modulo_add_base_12_sva_1, modulo_add_base_42_sva_1, {(fsm_output[4]) , (fsm_output[2])
      , (fsm_output[6])});
  assign nl_acc_126_nl = ({modulo_add_28_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) ,
      1'b1});
  assign acc_126_nl = nl_acc_126_nl[32:0];
  assign z_out_127 = readslicef_33_32_1(acc_126_nl);
  assign modulo_add_32_qif_mux_2_nl = MUX_v_32_2_2(modulo_add_base_32_sva_1, mult_49_res_sva_1,
      fsm_output[8]);
  assign nl_acc_127_nl = ({modulo_add_32_qif_mux_2_nl , 1'b1}) + ({(~ p_sva) , 1'b1});
  assign acc_127_nl = nl_acc_127_nl[32:0];
  assign z_out_128 = readslicef_33_32_1(acc_127_nl);
  assign modulo_add_29_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_29_sva_1,
      modulo_add_base_13_sva_1, modulo_add_base_40_sva_1, {(fsm_output[4]) , (fsm_output[2])
      , (fsm_output[6])});
  assign nl_acc_128_nl = ({modulo_add_29_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) ,
      1'b1});
  assign acc_128_nl = nl_acc_128_nl[32:0];
  assign z_out_129 = readslicef_33_32_1(acc_128_nl);
  assign modulo_add_30_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_30_sva_1,
      modulo_add_base_14_sva_1, modulo_add_base_38_sva_1, {(fsm_output[4]) , (fsm_output[2])
      , (fsm_output[6])});
  assign nl_acc_129_nl = ({modulo_add_30_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) ,
      1'b1});
  assign acc_129_nl = nl_acc_129_nl[32:0];
  assign z_out_130 = readslicef_33_32_1(acc_129_nl);
  assign modulo_add_31_qif_mux1h_2_nl = MUX1HOT_v_32_3_2(modulo_add_base_31_sva_1,
      modulo_add_base_15_sva_1, modulo_add_base_36_sva_1, {(fsm_output[4]) , (fsm_output[2])
      , (fsm_output[6])});
  assign nl_acc_130_nl = ({modulo_add_31_qif_mux1h_2_nl , 1'b1}) + ({(~ p_sva) ,
      1'b1});
  assign acc_130_nl = nl_acc_130_nl[32:0];
  assign z_out_131 = readslicef_33_32_1(acc_130_nl);
  assign butterFly1_6_mux_7_nl = MUX_v_32_2_2(tmp_76_lpi_3_dfm_8, tmp_42_lpi_3_dfm_8,
      fsm_output[8]);
  assign butterFly1_6_mux_8_nl = MUX_v_32_2_2((~ mult_6_res_lpi_3_dfm_mx0), (~ mult_53_res_lpi_3_dfm_mx0),
      fsm_output[8]);
  assign nl_acc_131_nl = ({butterFly1_6_mux_7_nl , 1'b1}) + ({butterFly1_6_mux_8_nl
      , 1'b1});
  assign acc_131_nl = nl_acc_131_nl[32:0];
  assign z_out_132 = readslicef_33_32_1(acc_131_nl);
  assign butterFly1_6_mux_9_nl = MUX_v_32_2_2(tmp_76_lpi_3_dfm_8, tmp_104_lpi_3_dfm_8,
      fsm_output[6]);
  assign butterFly1_6_mux_10_nl = MUX_v_32_2_2(mult_6_res_lpi_3_dfm_mx0, mult_36_res_lpi_3_dfm_mx0,
      fsm_output[6]);
  assign nl_z_out_133 = butterFly1_6_mux_9_nl + butterFly1_6_mux_10_nl;
  assign z_out_133 = nl_z_out_133[31:0];
  assign butterFly1_22_mux_6_nl = MUX_v_32_2_2(tmp_12_lpi_3_dfm_8, tmp_106_lpi_3_dfm_8,
      fsm_output[6]);
  assign butterFly1_22_mux_7_nl = MUX_v_32_2_2((~ mult_22_res_lpi_3_dfm_mx0), (~
      mult_37_res_lpi_3_dfm_mx0), fsm_output[6]);
  assign nl_acc_133_nl = ({butterFly1_22_mux_6_nl , 1'b1}) + ({butterFly1_22_mux_7_nl
      , 1'b1});
  assign acc_133_nl = nl_acc_133_nl[32:0];
  assign z_out_134 = readslicef_33_32_1(acc_133_nl);
  assign butterFly1_23_mux_6_nl = MUX_v_32_2_2(tmp_14_lpi_3_dfm_8, tmp_108_lpi_3_dfm_8,
      fsm_output[6]);
  assign butterFly1_23_mux_7_nl = MUX_v_32_2_2((~ mult_23_res_lpi_3_dfm_mx0), (~
      mult_38_res_lpi_3_dfm_mx0), fsm_output[6]);
  assign nl_acc_134_nl = ({butterFly1_23_mux_6_nl , 1'b1}) + ({butterFly1_23_mux_7_nl
      , 1'b1});
  assign acc_134_nl = nl_acc_134_nl[32:0];
  assign z_out_135 = readslicef_33_32_1(acc_134_nl);
  assign butterFly1_24_mux_4_nl = MUX_v_32_2_2(tmp_16_lpi_3_dfm_8, tmp_108_lpi_3_dfm_8,
      fsm_output[6]);
  assign butterFly1_24_mux_5_nl = MUX_v_32_2_2(mult_24_res_lpi_3_dfm_mx0, mult_38_res_lpi_3_dfm_mx0,
      fsm_output[6]);
  assign nl_z_out_136 = butterFly1_24_mux_4_nl + butterFly1_24_mux_5_nl;
  assign z_out_136 = nl_z_out_136[31:0];
  assign butterFly1_24_or_1_cse = (~ (fsm_output[6])) | (fsm_output[4]);
  assign butterFly1_24_mux_6_nl = MUX_v_32_2_2(tmp_16_lpi_3_dfm_8, tmp_106_lpi_3_dfm_8,
      fsm_output[6]);
  assign butterFly1_24_mux_7_nl = MUX_v_32_2_2((~ mult_24_res_lpi_3_dfm_mx0), mult_37_res_lpi_3_dfm_mx0,
      fsm_output[6]);
  assign nl_acc_136_nl = ({butterFly1_24_mux_6_nl , butterFly1_24_or_1_cse}) + ({butterFly1_24_mux_7_nl
      , 1'b1});
  assign acc_136_nl = nl_acc_136_nl[32:0];
  assign z_out_137 = readslicef_33_32_1(acc_136_nl);
  assign butterFly1_25_mux_4_nl = MUX_v_32_2_2(tmp_18_lpi_3_dfm_8, tmp_96_lpi_3_dfm_8,
      fsm_output[6]);
  assign butterFly1_25_mux_5_nl = MUX_v_32_2_2(mult_25_res_lpi_3_dfm_mx0, mult_32_res_lpi_3_dfm_mx0,
      fsm_output[6]);
  assign nl_z_out_138 = butterFly1_25_mux_4_nl + butterFly1_25_mux_5_nl;
  assign z_out_138 = nl_z_out_138[31:0];
  assign butterFly1_25_mux_6_nl = MUX_v_32_2_2(tmp_18_lpi_3_dfm_8, tmp_102_lpi_3_dfm_8,
      fsm_output[6]);
  assign butterFly1_25_mux_7_nl = MUX_v_32_2_2((~ mult_25_res_lpi_3_dfm_mx0), mult_35_res_lpi_3_dfm_mx0,
      fsm_output[6]);
  assign nl_acc_138_nl = ({butterFly1_25_mux_6_nl , butterFly1_24_or_1_cse}) + ({butterFly1_25_mux_7_nl
      , 1'b1});
  assign acc_138_nl = nl_acc_138_nl[32:0];
  assign z_out_139 = readslicef_33_32_1(acc_138_nl);
  assign butterFly1_26_mux_4_nl = MUX_v_32_2_2(tmp_20_lpi_3_dfm_8, tmp_100_lpi_3_dfm_8,
      fsm_output[6]);
  assign butterFly1_26_mux_5_nl = MUX_v_32_2_2(mult_26_res_lpi_3_dfm_mx0, mult_34_res_lpi_3_dfm_mx0,
      fsm_output[6]);
  assign nl_z_out_140 = butterFly1_26_mux_4_nl + butterFly1_26_mux_5_nl;
  assign z_out_140 = nl_z_out_140[31:0];
  assign butterFly1_26_mux_6_nl = MUX_v_32_2_2(tmp_20_lpi_3_dfm_8, tmp_98_lpi_3_dfm_8,
      fsm_output[6]);
  assign butterFly1_26_mux_7_nl = MUX_v_32_2_2((~ mult_26_res_lpi_3_dfm_mx0), mult_33_res_lpi_3_dfm_mx0,
      fsm_output[6]);
  assign nl_acc_140_nl = ({butterFly1_26_mux_6_nl , butterFly1_24_or_1_cse}) + ({butterFly1_26_mux_7_nl
      , 1'b1});
  assign acc_140_nl = nl_acc_140_nl[32:0];
  assign z_out_141 = readslicef_33_32_1(acc_140_nl);
  assign butterFly2_mux_2_nl = MUX_v_32_2_2(tmp_96_lpi_3_dfm_8, tmp_32_lpi_3_dfm_8,
      fsm_output[8]);
  assign butterFly2_mux_3_nl = MUX_v_32_2_2((~ mult_32_res_lpi_3_dfm_mx0), (~ mult_48_res_lpi_3_dfm_mx0),
      fsm_output[8]);
  assign nl_acc_141_nl = ({butterFly2_mux_2_nl , 1'b1}) + ({butterFly2_mux_3_nl ,
      1'b1});
  assign acc_141_nl = nl_acc_141_nl[32:0];
  assign z_out_142 = readslicef_33_32_1(acc_141_nl);
  assign butterFly2_1_mux_2_nl = MUX_v_32_2_2(tmp_98_lpi_3_dfm_8, tmp_34_lpi_3_dfm_8,
      fsm_output[8]);
  assign butterFly2_1_mux_3_nl = MUX_v_32_2_2((~ mult_33_res_lpi_3_dfm_mx0), (~ mult_49_res_lpi_3_dfm_mx0),
      fsm_output[8]);
  assign nl_acc_142_nl = ({butterFly2_1_mux_2_nl , 1'b1}) + ({butterFly2_1_mux_3_nl
      , 1'b1});
  assign acc_142_nl = nl_acc_142_nl[32:0];
  assign z_out_143 = readslicef_33_32_1(acc_142_nl);
  assign butterFly2_2_mux_2_nl = MUX_v_32_2_2(tmp_100_lpi_3_dfm_8, tmp_40_lpi_3_dfm_8,
      fsm_output[8]);
  assign butterFly2_2_mux_3_nl = MUX_v_32_2_2((~ mult_34_res_lpi_3_dfm_mx0), (~ mult_52_res_lpi_3_dfm_mx0),
      fsm_output[8]);
  assign nl_acc_143_nl = ({butterFly2_2_mux_2_nl , 1'b1}) + ({butterFly2_2_mux_3_nl
      , 1'b1});
  assign acc_143_nl = nl_acc_143_nl[32:0];
  assign z_out_144 = readslicef_33_32_1(acc_143_nl);
  assign butterFly2_3_mux_2_nl = MUX_v_32_2_2(tmp_102_lpi_3_dfm_8, tmp_38_lpi_3_dfm_8,
      fsm_output[8]);
  assign butterFly2_3_mux_3_nl = MUX_v_32_2_2((~ mult_35_res_lpi_3_dfm_mx0), (~ mult_51_res_lpi_3_dfm_mx0),
      fsm_output[8]);
  assign nl_acc_144_nl = ({butterFly2_3_mux_2_nl , 1'b1}) + ({butterFly2_3_mux_3_nl
      , 1'b1});
  assign acc_144_nl = nl_acc_144_nl[32:0];
  assign z_out_145 = readslicef_33_32_1(acc_144_nl);
  assign butterFly2_4_mux_2_nl = MUX_v_32_2_2(tmp_104_lpi_3_dfm_8, tmp_36_lpi_3_dfm_8,
      fsm_output[8]);
  assign butterFly2_4_mux_3_nl = MUX_v_32_2_2((~ mult_36_res_lpi_3_dfm_mx0), (~ mult_50_res_lpi_3_dfm_mx0),
      fsm_output[8]);
  assign nl_acc_145_nl = ({butterFly2_4_mux_2_nl , 1'b1}) + ({butterFly2_4_mux_3_nl
      , 1'b1});
  assign acc_145_nl = nl_acc_145_nl[32:0];
  assign z_out_146 = readslicef_33_32_1(acc_145_nl);

  function automatic [0:0] MUX1HOT_s_1_4_2;
    input [0:0] input_3;
    input [0:0] input_2;
    input [0:0] input_1;
    input [0:0] input_0;
    input [3:0] sel;
    reg [0:0] result;
  begin
    result = input_0 & {1{sel[0]}};
    result = result | ( input_1 & {1{sel[1]}});
    result = result | ( input_2 & {1{sel[2]}});
    result = result | ( input_3 & {1{sel[3]}});
    MUX1HOT_s_1_4_2 = result;
  end
  endfunction


  function automatic [1:0] MUX1HOT_v_2_4_2;
    input [1:0] input_3;
    input [1:0] input_2;
    input [1:0] input_1;
    input [1:0] input_0;
    input [3:0] sel;
    reg [1:0] result;
  begin
    result = input_0 & {2{sel[0]}};
    result = result | ( input_1 & {2{sel[1]}});
    result = result | ( input_2 & {2{sel[2]}});
    result = result | ( input_3 & {2{sel[3]}});
    MUX1HOT_v_2_4_2 = result;
  end
  endfunction


  function automatic [30:0] MUX1HOT_v_31_4_2;
    input [30:0] input_3;
    input [30:0] input_2;
    input [30:0] input_1;
    input [30:0] input_0;
    input [3:0] sel;
    reg [30:0] result;
  begin
    result = input_0 & {31{sel[0]}};
    result = result | ( input_1 & {31{sel[1]}});
    result = result | ( input_2 & {31{sel[2]}});
    result = result | ( input_3 & {31{sel[3]}});
    MUX1HOT_v_31_4_2 = result;
  end
  endfunction


  function automatic [31:0] MUX1HOT_v_32_12_2;
    input [31:0] input_11;
    input [31:0] input_10;
    input [31:0] input_9;
    input [31:0] input_8;
    input [31:0] input_7;
    input [31:0] input_6;
    input [31:0] input_5;
    input [31:0] input_4;
    input [31:0] input_3;
    input [31:0] input_2;
    input [31:0] input_1;
    input [31:0] input_0;
    input [11:0] sel;
    reg [31:0] result;
  begin
    result = input_0 & {32{sel[0]}};
    result = result | ( input_1 & {32{sel[1]}});
    result = result | ( input_2 & {32{sel[2]}});
    result = result | ( input_3 & {32{sel[3]}});
    result = result | ( input_4 & {32{sel[4]}});
    result = result | ( input_5 & {32{sel[5]}});
    result = result | ( input_6 & {32{sel[6]}});
    result = result | ( input_7 & {32{sel[7]}});
    result = result | ( input_8 & {32{sel[8]}});
    result = result | ( input_9 & {32{sel[9]}});
    result = result | ( input_10 & {32{sel[10]}});
    result = result | ( input_11 & {32{sel[11]}});
    MUX1HOT_v_32_12_2 = result;
  end
  endfunction


  function automatic [31:0] MUX1HOT_v_32_3_2;
    input [31:0] input_2;
    input [31:0] input_1;
    input [31:0] input_0;
    input [2:0] sel;
    reg [31:0] result;
  begin
    result = input_0 & {32{sel[0]}};
    result = result | ( input_1 & {32{sel[1]}});
    result = result | ( input_2 & {32{sel[2]}});
    MUX1HOT_v_32_3_2 = result;
  end
  endfunction


  function automatic [31:0] MUX1HOT_v_32_4_2;
    input [31:0] input_3;
    input [31:0] input_2;
    input [31:0] input_1;
    input [31:0] input_0;
    input [3:0] sel;
    reg [31:0] result;
  begin
    result = input_0 & {32{sel[0]}};
    result = result | ( input_1 & {32{sel[1]}});
    result = result | ( input_2 & {32{sel[2]}});
    result = result | ( input_3 & {32{sel[3]}});
    MUX1HOT_v_32_4_2 = result;
  end
  endfunction


  function automatic [31:0] MUX1HOT_v_32_5_2;
    input [31:0] input_4;
    input [31:0] input_3;
    input [31:0] input_2;
    input [31:0] input_1;
    input [31:0] input_0;
    input [4:0] sel;
    reg [31:0] result;
  begin
    result = input_0 & {32{sel[0]}};
    result = result | ( input_1 & {32{sel[1]}});
    result = result | ( input_2 & {32{sel[2]}});
    result = result | ( input_3 & {32{sel[3]}});
    result = result | ( input_4 & {32{sel[4]}});
    MUX1HOT_v_32_5_2 = result;
  end
  endfunction


  function automatic [31:0] MUX1HOT_v_32_6_2;
    input [31:0] input_5;
    input [31:0] input_4;
    input [31:0] input_3;
    input [31:0] input_2;
    input [31:0] input_1;
    input [31:0] input_0;
    input [5:0] sel;
    reg [31:0] result;
  begin
    result = input_0 & {32{sel[0]}};
    result = result | ( input_1 & {32{sel[1]}});
    result = result | ( input_2 & {32{sel[2]}});
    result = result | ( input_3 & {32{sel[3]}});
    result = result | ( input_4 & {32{sel[4]}});
    result = result | ( input_5 & {32{sel[5]}});
    MUX1HOT_v_32_6_2 = result;
  end
  endfunction


  function automatic [31:0] MUX1HOT_v_32_8_2;
    input [31:0] input_7;
    input [31:0] input_6;
    input [31:0] input_5;
    input [31:0] input_4;
    input [31:0] input_3;
    input [31:0] input_2;
    input [31:0] input_1;
    input [31:0] input_0;
    input [7:0] sel;
    reg [31:0] result;
  begin
    result = input_0 & {32{sel[0]}};
    result = result | ( input_1 & {32{sel[1]}});
    result = result | ( input_2 & {32{sel[2]}});
    result = result | ( input_3 & {32{sel[3]}});
    result = result | ( input_4 & {32{sel[4]}});
    result = result | ( input_5 & {32{sel[5]}});
    result = result | ( input_6 & {32{sel[6]}});
    result = result | ( input_7 & {32{sel[7]}});
    MUX1HOT_v_32_8_2 = result;
  end
  endfunction


  function automatic [31:0] MUX1HOT_v_32_9_2;
    input [31:0] input_8;
    input [31:0] input_7;
    input [31:0] input_6;
    input [31:0] input_5;
    input [31:0] input_4;
    input [31:0] input_3;
    input [31:0] input_2;
    input [31:0] input_1;
    input [31:0] input_0;
    input [8:0] sel;
    reg [31:0] result;
  begin
    result = input_0 & {32{sel[0]}};
    result = result | ( input_1 & {32{sel[1]}});
    result = result | ( input_2 & {32{sel[2]}});
    result = result | ( input_3 & {32{sel[3]}});
    result = result | ( input_4 & {32{sel[4]}});
    result = result | ( input_5 & {32{sel[5]}});
    result = result | ( input_6 & {32{sel[6]}});
    result = result | ( input_7 & {32{sel[7]}});
    result = result | ( input_8 & {32{sel[8]}});
    MUX1HOT_v_32_9_2 = result;
  end
  endfunction


  function automatic [2:0] MUX1HOT_v_3_3_2;
    input [2:0] input_2;
    input [2:0] input_1;
    input [2:0] input_0;
    input [2:0] sel;
    reg [2:0] result;
  begin
    result = input_0 & {3{sel[0]}};
    result = result | ( input_1 & {3{sel[1]}});
    result = result | ( input_2 & {3{sel[2]}});
    MUX1HOT_v_3_3_2 = result;
  end
  endfunction


  function automatic [3:0] MUX1HOT_v_4_4_2;
    input [3:0] input_3;
    input [3:0] input_2;
    input [3:0] input_1;
    input [3:0] input_0;
    input [3:0] sel;
    reg [3:0] result;
  begin
    result = input_0 & {4{sel[0]}};
    result = result | ( input_1 & {4{sel[1]}});
    result = result | ( input_2 & {4{sel[2]}});
    result = result | ( input_3 & {4{sel[3]}});
    MUX1HOT_v_4_4_2 = result;
  end
  endfunction


  function automatic [0:0] MUX_s_1_2_2;
    input [0:0] input_0;
    input [0:0] input_1;
    input [0:0] sel;
    reg [0:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_s_1_2_2 = result;
  end
  endfunction


  function automatic [30:0] MUX_v_31_2_2;
    input [30:0] input_0;
    input [30:0] input_1;
    input [0:0] sel;
    reg [30:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_31_2_2 = result;
  end
  endfunction


  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction


  function automatic [0:0] readslicef_33_1_32;
    input [32:0] vector;
    reg [32:0] tmp;
  begin
    tmp = vector >> 32;
    readslicef_33_1_32 = tmp[0:0];
  end
  endfunction


  function automatic [31:0] readslicef_33_32_1;
    input [32:0] vector;
    reg [32:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_33_32_1 = tmp[31:0];
  end
  endfunction


  function automatic [0:0] readslicef_34_1_33;
    input [33:0] vector;
    reg [33:0] tmp;
  begin
    tmp = vector >> 33;
    readslicef_34_1_33 = tmp[0:0];
  end
  endfunction


  function automatic [5:0] conv_u2u_5_6 ;
    input [4:0]  vector ;
  begin
    conv_u2u_5_6 = {1'b0, vector};
  end
  endfunction


  function automatic [32:0] conv_u2u_32_33 ;
    input [31:0]  vector ;
  begin
    conv_u2u_32_33 = {1'b0, vector};
  end
  endfunction


  function automatic [33:0] conv_u2u_33_34 ;
    input [32:0]  vector ;
  begin
    conv_u2u_33_34 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    peaseNTT
// ------------------------------------------------------------------


module peaseNTT (
  clk, rst, xt_rsc_0_0_s_tdone, xt_rsc_0_0_tr_write_done, xt_rsc_0_0_RREADY, xt_rsc_0_0_RVALID,
      xt_rsc_0_0_RUSER, xt_rsc_0_0_RLAST, xt_rsc_0_0_RRESP, xt_rsc_0_0_RDATA, xt_rsc_0_0_RID,
      xt_rsc_0_0_ARREADY, xt_rsc_0_0_ARVALID, xt_rsc_0_0_ARUSER, xt_rsc_0_0_ARREGION,
      xt_rsc_0_0_ARQOS, xt_rsc_0_0_ARPROT, xt_rsc_0_0_ARCACHE, xt_rsc_0_0_ARLOCK,
      xt_rsc_0_0_ARBURST, xt_rsc_0_0_ARSIZE, xt_rsc_0_0_ARLEN, xt_rsc_0_0_ARADDR,
      xt_rsc_0_0_ARID, xt_rsc_0_0_BREADY, xt_rsc_0_0_BVALID, xt_rsc_0_0_BUSER, xt_rsc_0_0_BRESP,
      xt_rsc_0_0_BID, xt_rsc_0_0_WREADY, xt_rsc_0_0_WVALID, xt_rsc_0_0_WUSER, xt_rsc_0_0_WLAST,
      xt_rsc_0_0_WSTRB, xt_rsc_0_0_WDATA, xt_rsc_0_0_AWREADY, xt_rsc_0_0_AWVALID,
      xt_rsc_0_0_AWUSER, xt_rsc_0_0_AWREGION, xt_rsc_0_0_AWQOS, xt_rsc_0_0_AWPROT,
      xt_rsc_0_0_AWCACHE, xt_rsc_0_0_AWLOCK, xt_rsc_0_0_AWBURST, xt_rsc_0_0_AWSIZE,
      xt_rsc_0_0_AWLEN, xt_rsc_0_0_AWADDR, xt_rsc_0_0_AWID, xt_rsc_triosy_0_0_lz,
      xt_rsc_0_1_s_tdone, xt_rsc_0_1_tr_write_done, xt_rsc_0_1_RREADY, xt_rsc_0_1_RVALID,
      xt_rsc_0_1_RUSER, xt_rsc_0_1_RLAST, xt_rsc_0_1_RRESP, xt_rsc_0_1_RDATA, xt_rsc_0_1_RID,
      xt_rsc_0_1_ARREADY, xt_rsc_0_1_ARVALID, xt_rsc_0_1_ARUSER, xt_rsc_0_1_ARREGION,
      xt_rsc_0_1_ARQOS, xt_rsc_0_1_ARPROT, xt_rsc_0_1_ARCACHE, xt_rsc_0_1_ARLOCK,
      xt_rsc_0_1_ARBURST, xt_rsc_0_1_ARSIZE, xt_rsc_0_1_ARLEN, xt_rsc_0_1_ARADDR,
      xt_rsc_0_1_ARID, xt_rsc_0_1_BREADY, xt_rsc_0_1_BVALID, xt_rsc_0_1_BUSER, xt_rsc_0_1_BRESP,
      xt_rsc_0_1_BID, xt_rsc_0_1_WREADY, xt_rsc_0_1_WVALID, xt_rsc_0_1_WUSER, xt_rsc_0_1_WLAST,
      xt_rsc_0_1_WSTRB, xt_rsc_0_1_WDATA, xt_rsc_0_1_AWREADY, xt_rsc_0_1_AWVALID,
      xt_rsc_0_1_AWUSER, xt_rsc_0_1_AWREGION, xt_rsc_0_1_AWQOS, xt_rsc_0_1_AWPROT,
      xt_rsc_0_1_AWCACHE, xt_rsc_0_1_AWLOCK, xt_rsc_0_1_AWBURST, xt_rsc_0_1_AWSIZE,
      xt_rsc_0_1_AWLEN, xt_rsc_0_1_AWADDR, xt_rsc_0_1_AWID, xt_rsc_triosy_0_1_lz,
      xt_rsc_0_2_s_tdone, xt_rsc_0_2_tr_write_done, xt_rsc_0_2_RREADY, xt_rsc_0_2_RVALID,
      xt_rsc_0_2_RUSER, xt_rsc_0_2_RLAST, xt_rsc_0_2_RRESP, xt_rsc_0_2_RDATA, xt_rsc_0_2_RID,
      xt_rsc_0_2_ARREADY, xt_rsc_0_2_ARVALID, xt_rsc_0_2_ARUSER, xt_rsc_0_2_ARREGION,
      xt_rsc_0_2_ARQOS, xt_rsc_0_2_ARPROT, xt_rsc_0_2_ARCACHE, xt_rsc_0_2_ARLOCK,
      xt_rsc_0_2_ARBURST, xt_rsc_0_2_ARSIZE, xt_rsc_0_2_ARLEN, xt_rsc_0_2_ARADDR,
      xt_rsc_0_2_ARID, xt_rsc_0_2_BREADY, xt_rsc_0_2_BVALID, xt_rsc_0_2_BUSER, xt_rsc_0_2_BRESP,
      xt_rsc_0_2_BID, xt_rsc_0_2_WREADY, xt_rsc_0_2_WVALID, xt_rsc_0_2_WUSER, xt_rsc_0_2_WLAST,
      xt_rsc_0_2_WSTRB, xt_rsc_0_2_WDATA, xt_rsc_0_2_AWREADY, xt_rsc_0_2_AWVALID,
      xt_rsc_0_2_AWUSER, xt_rsc_0_2_AWREGION, xt_rsc_0_2_AWQOS, xt_rsc_0_2_AWPROT,
      xt_rsc_0_2_AWCACHE, xt_rsc_0_2_AWLOCK, xt_rsc_0_2_AWBURST, xt_rsc_0_2_AWSIZE,
      xt_rsc_0_2_AWLEN, xt_rsc_0_2_AWADDR, xt_rsc_0_2_AWID, xt_rsc_triosy_0_2_lz,
      xt_rsc_0_3_s_tdone, xt_rsc_0_3_tr_write_done, xt_rsc_0_3_RREADY, xt_rsc_0_3_RVALID,
      xt_rsc_0_3_RUSER, xt_rsc_0_3_RLAST, xt_rsc_0_3_RRESP, xt_rsc_0_3_RDATA, xt_rsc_0_3_RID,
      xt_rsc_0_3_ARREADY, xt_rsc_0_3_ARVALID, xt_rsc_0_3_ARUSER, xt_rsc_0_3_ARREGION,
      xt_rsc_0_3_ARQOS, xt_rsc_0_3_ARPROT, xt_rsc_0_3_ARCACHE, xt_rsc_0_3_ARLOCK,
      xt_rsc_0_3_ARBURST, xt_rsc_0_3_ARSIZE, xt_rsc_0_3_ARLEN, xt_rsc_0_3_ARADDR,
      xt_rsc_0_3_ARID, xt_rsc_0_3_BREADY, xt_rsc_0_3_BVALID, xt_rsc_0_3_BUSER, xt_rsc_0_3_BRESP,
      xt_rsc_0_3_BID, xt_rsc_0_3_WREADY, xt_rsc_0_3_WVALID, xt_rsc_0_3_WUSER, xt_rsc_0_3_WLAST,
      xt_rsc_0_3_WSTRB, xt_rsc_0_3_WDATA, xt_rsc_0_3_AWREADY, xt_rsc_0_3_AWVALID,
      xt_rsc_0_3_AWUSER, xt_rsc_0_3_AWREGION, xt_rsc_0_3_AWQOS, xt_rsc_0_3_AWPROT,
      xt_rsc_0_3_AWCACHE, xt_rsc_0_3_AWLOCK, xt_rsc_0_3_AWBURST, xt_rsc_0_3_AWSIZE,
      xt_rsc_0_3_AWLEN, xt_rsc_0_3_AWADDR, xt_rsc_0_3_AWID, xt_rsc_triosy_0_3_lz,
      xt_rsc_0_4_s_tdone, xt_rsc_0_4_tr_write_done, xt_rsc_0_4_RREADY, xt_rsc_0_4_RVALID,
      xt_rsc_0_4_RUSER, xt_rsc_0_4_RLAST, xt_rsc_0_4_RRESP, xt_rsc_0_4_RDATA, xt_rsc_0_4_RID,
      xt_rsc_0_4_ARREADY, xt_rsc_0_4_ARVALID, xt_rsc_0_4_ARUSER, xt_rsc_0_4_ARREGION,
      xt_rsc_0_4_ARQOS, xt_rsc_0_4_ARPROT, xt_rsc_0_4_ARCACHE, xt_rsc_0_4_ARLOCK,
      xt_rsc_0_4_ARBURST, xt_rsc_0_4_ARSIZE, xt_rsc_0_4_ARLEN, xt_rsc_0_4_ARADDR,
      xt_rsc_0_4_ARID, xt_rsc_0_4_BREADY, xt_rsc_0_4_BVALID, xt_rsc_0_4_BUSER, xt_rsc_0_4_BRESP,
      xt_rsc_0_4_BID, xt_rsc_0_4_WREADY, xt_rsc_0_4_WVALID, xt_rsc_0_4_WUSER, xt_rsc_0_4_WLAST,
      xt_rsc_0_4_WSTRB, xt_rsc_0_4_WDATA, xt_rsc_0_4_AWREADY, xt_rsc_0_4_AWVALID,
      xt_rsc_0_4_AWUSER, xt_rsc_0_4_AWREGION, xt_rsc_0_4_AWQOS, xt_rsc_0_4_AWPROT,
      xt_rsc_0_4_AWCACHE, xt_rsc_0_4_AWLOCK, xt_rsc_0_4_AWBURST, xt_rsc_0_4_AWSIZE,
      xt_rsc_0_4_AWLEN, xt_rsc_0_4_AWADDR, xt_rsc_0_4_AWID, xt_rsc_triosy_0_4_lz,
      xt_rsc_0_5_s_tdone, xt_rsc_0_5_tr_write_done, xt_rsc_0_5_RREADY, xt_rsc_0_5_RVALID,
      xt_rsc_0_5_RUSER, xt_rsc_0_5_RLAST, xt_rsc_0_5_RRESP, xt_rsc_0_5_RDATA, xt_rsc_0_5_RID,
      xt_rsc_0_5_ARREADY, xt_rsc_0_5_ARVALID, xt_rsc_0_5_ARUSER, xt_rsc_0_5_ARREGION,
      xt_rsc_0_5_ARQOS, xt_rsc_0_5_ARPROT, xt_rsc_0_5_ARCACHE, xt_rsc_0_5_ARLOCK,
      xt_rsc_0_5_ARBURST, xt_rsc_0_5_ARSIZE, xt_rsc_0_5_ARLEN, xt_rsc_0_5_ARADDR,
      xt_rsc_0_5_ARID, xt_rsc_0_5_BREADY, xt_rsc_0_5_BVALID, xt_rsc_0_5_BUSER, xt_rsc_0_5_BRESP,
      xt_rsc_0_5_BID, xt_rsc_0_5_WREADY, xt_rsc_0_5_WVALID, xt_rsc_0_5_WUSER, xt_rsc_0_5_WLAST,
      xt_rsc_0_5_WSTRB, xt_rsc_0_5_WDATA, xt_rsc_0_5_AWREADY, xt_rsc_0_5_AWVALID,
      xt_rsc_0_5_AWUSER, xt_rsc_0_5_AWREGION, xt_rsc_0_5_AWQOS, xt_rsc_0_5_AWPROT,
      xt_rsc_0_5_AWCACHE, xt_rsc_0_5_AWLOCK, xt_rsc_0_5_AWBURST, xt_rsc_0_5_AWSIZE,
      xt_rsc_0_5_AWLEN, xt_rsc_0_5_AWADDR, xt_rsc_0_5_AWID, xt_rsc_triosy_0_5_lz,
      xt_rsc_0_6_s_tdone, xt_rsc_0_6_tr_write_done, xt_rsc_0_6_RREADY, xt_rsc_0_6_RVALID,
      xt_rsc_0_6_RUSER, xt_rsc_0_6_RLAST, xt_rsc_0_6_RRESP, xt_rsc_0_6_RDATA, xt_rsc_0_6_RID,
      xt_rsc_0_6_ARREADY, xt_rsc_0_6_ARVALID, xt_rsc_0_6_ARUSER, xt_rsc_0_6_ARREGION,
      xt_rsc_0_6_ARQOS, xt_rsc_0_6_ARPROT, xt_rsc_0_6_ARCACHE, xt_rsc_0_6_ARLOCK,
      xt_rsc_0_6_ARBURST, xt_rsc_0_6_ARSIZE, xt_rsc_0_6_ARLEN, xt_rsc_0_6_ARADDR,
      xt_rsc_0_6_ARID, xt_rsc_0_6_BREADY, xt_rsc_0_6_BVALID, xt_rsc_0_6_BUSER, xt_rsc_0_6_BRESP,
      xt_rsc_0_6_BID, xt_rsc_0_6_WREADY, xt_rsc_0_6_WVALID, xt_rsc_0_6_WUSER, xt_rsc_0_6_WLAST,
      xt_rsc_0_6_WSTRB, xt_rsc_0_6_WDATA, xt_rsc_0_6_AWREADY, xt_rsc_0_6_AWVALID,
      xt_rsc_0_6_AWUSER, xt_rsc_0_6_AWREGION, xt_rsc_0_6_AWQOS, xt_rsc_0_6_AWPROT,
      xt_rsc_0_6_AWCACHE, xt_rsc_0_6_AWLOCK, xt_rsc_0_6_AWBURST, xt_rsc_0_6_AWSIZE,
      xt_rsc_0_6_AWLEN, xt_rsc_0_6_AWADDR, xt_rsc_0_6_AWID, xt_rsc_triosy_0_6_lz,
      xt_rsc_0_7_s_tdone, xt_rsc_0_7_tr_write_done, xt_rsc_0_7_RREADY, xt_rsc_0_7_RVALID,
      xt_rsc_0_7_RUSER, xt_rsc_0_7_RLAST, xt_rsc_0_7_RRESP, xt_rsc_0_7_RDATA, xt_rsc_0_7_RID,
      xt_rsc_0_7_ARREADY, xt_rsc_0_7_ARVALID, xt_rsc_0_7_ARUSER, xt_rsc_0_7_ARREGION,
      xt_rsc_0_7_ARQOS, xt_rsc_0_7_ARPROT, xt_rsc_0_7_ARCACHE, xt_rsc_0_7_ARLOCK,
      xt_rsc_0_7_ARBURST, xt_rsc_0_7_ARSIZE, xt_rsc_0_7_ARLEN, xt_rsc_0_7_ARADDR,
      xt_rsc_0_7_ARID, xt_rsc_0_7_BREADY, xt_rsc_0_7_BVALID, xt_rsc_0_7_BUSER, xt_rsc_0_7_BRESP,
      xt_rsc_0_7_BID, xt_rsc_0_7_WREADY, xt_rsc_0_7_WVALID, xt_rsc_0_7_WUSER, xt_rsc_0_7_WLAST,
      xt_rsc_0_7_WSTRB, xt_rsc_0_7_WDATA, xt_rsc_0_7_AWREADY, xt_rsc_0_7_AWVALID,
      xt_rsc_0_7_AWUSER, xt_rsc_0_7_AWREGION, xt_rsc_0_7_AWQOS, xt_rsc_0_7_AWPROT,
      xt_rsc_0_7_AWCACHE, xt_rsc_0_7_AWLOCK, xt_rsc_0_7_AWBURST, xt_rsc_0_7_AWSIZE,
      xt_rsc_0_7_AWLEN, xt_rsc_0_7_AWADDR, xt_rsc_0_7_AWID, xt_rsc_triosy_0_7_lz,
      xt_rsc_0_8_s_tdone, xt_rsc_0_8_tr_write_done, xt_rsc_0_8_RREADY, xt_rsc_0_8_RVALID,
      xt_rsc_0_8_RUSER, xt_rsc_0_8_RLAST, xt_rsc_0_8_RRESP, xt_rsc_0_8_RDATA, xt_rsc_0_8_RID,
      xt_rsc_0_8_ARREADY, xt_rsc_0_8_ARVALID, xt_rsc_0_8_ARUSER, xt_rsc_0_8_ARREGION,
      xt_rsc_0_8_ARQOS, xt_rsc_0_8_ARPROT, xt_rsc_0_8_ARCACHE, xt_rsc_0_8_ARLOCK,
      xt_rsc_0_8_ARBURST, xt_rsc_0_8_ARSIZE, xt_rsc_0_8_ARLEN, xt_rsc_0_8_ARADDR,
      xt_rsc_0_8_ARID, xt_rsc_0_8_BREADY, xt_rsc_0_8_BVALID, xt_rsc_0_8_BUSER, xt_rsc_0_8_BRESP,
      xt_rsc_0_8_BID, xt_rsc_0_8_WREADY, xt_rsc_0_8_WVALID, xt_rsc_0_8_WUSER, xt_rsc_0_8_WLAST,
      xt_rsc_0_8_WSTRB, xt_rsc_0_8_WDATA, xt_rsc_0_8_AWREADY, xt_rsc_0_8_AWVALID,
      xt_rsc_0_8_AWUSER, xt_rsc_0_8_AWREGION, xt_rsc_0_8_AWQOS, xt_rsc_0_8_AWPROT,
      xt_rsc_0_8_AWCACHE, xt_rsc_0_8_AWLOCK, xt_rsc_0_8_AWBURST, xt_rsc_0_8_AWSIZE,
      xt_rsc_0_8_AWLEN, xt_rsc_0_8_AWADDR, xt_rsc_0_8_AWID, xt_rsc_triosy_0_8_lz,
      xt_rsc_0_9_s_tdone, xt_rsc_0_9_tr_write_done, xt_rsc_0_9_RREADY, xt_rsc_0_9_RVALID,
      xt_rsc_0_9_RUSER, xt_rsc_0_9_RLAST, xt_rsc_0_9_RRESP, xt_rsc_0_9_RDATA, xt_rsc_0_9_RID,
      xt_rsc_0_9_ARREADY, xt_rsc_0_9_ARVALID, xt_rsc_0_9_ARUSER, xt_rsc_0_9_ARREGION,
      xt_rsc_0_9_ARQOS, xt_rsc_0_9_ARPROT, xt_rsc_0_9_ARCACHE, xt_rsc_0_9_ARLOCK,
      xt_rsc_0_9_ARBURST, xt_rsc_0_9_ARSIZE, xt_rsc_0_9_ARLEN, xt_rsc_0_9_ARADDR,
      xt_rsc_0_9_ARID, xt_rsc_0_9_BREADY, xt_rsc_0_9_BVALID, xt_rsc_0_9_BUSER, xt_rsc_0_9_BRESP,
      xt_rsc_0_9_BID, xt_rsc_0_9_WREADY, xt_rsc_0_9_WVALID, xt_rsc_0_9_WUSER, xt_rsc_0_9_WLAST,
      xt_rsc_0_9_WSTRB, xt_rsc_0_9_WDATA, xt_rsc_0_9_AWREADY, xt_rsc_0_9_AWVALID,
      xt_rsc_0_9_AWUSER, xt_rsc_0_9_AWREGION, xt_rsc_0_9_AWQOS, xt_rsc_0_9_AWPROT,
      xt_rsc_0_9_AWCACHE, xt_rsc_0_9_AWLOCK, xt_rsc_0_9_AWBURST, xt_rsc_0_9_AWSIZE,
      xt_rsc_0_9_AWLEN, xt_rsc_0_9_AWADDR, xt_rsc_0_9_AWID, xt_rsc_triosy_0_9_lz,
      xt_rsc_0_10_s_tdone, xt_rsc_0_10_tr_write_done, xt_rsc_0_10_RREADY, xt_rsc_0_10_RVALID,
      xt_rsc_0_10_RUSER, xt_rsc_0_10_RLAST, xt_rsc_0_10_RRESP, xt_rsc_0_10_RDATA,
      xt_rsc_0_10_RID, xt_rsc_0_10_ARREADY, xt_rsc_0_10_ARVALID, xt_rsc_0_10_ARUSER,
      xt_rsc_0_10_ARREGION, xt_rsc_0_10_ARQOS, xt_rsc_0_10_ARPROT, xt_rsc_0_10_ARCACHE,
      xt_rsc_0_10_ARLOCK, xt_rsc_0_10_ARBURST, xt_rsc_0_10_ARSIZE, xt_rsc_0_10_ARLEN,
      xt_rsc_0_10_ARADDR, xt_rsc_0_10_ARID, xt_rsc_0_10_BREADY, xt_rsc_0_10_BVALID,
      xt_rsc_0_10_BUSER, xt_rsc_0_10_BRESP, xt_rsc_0_10_BID, xt_rsc_0_10_WREADY,
      xt_rsc_0_10_WVALID, xt_rsc_0_10_WUSER, xt_rsc_0_10_WLAST, xt_rsc_0_10_WSTRB,
      xt_rsc_0_10_WDATA, xt_rsc_0_10_AWREADY, xt_rsc_0_10_AWVALID, xt_rsc_0_10_AWUSER,
      xt_rsc_0_10_AWREGION, xt_rsc_0_10_AWQOS, xt_rsc_0_10_AWPROT, xt_rsc_0_10_AWCACHE,
      xt_rsc_0_10_AWLOCK, xt_rsc_0_10_AWBURST, xt_rsc_0_10_AWSIZE, xt_rsc_0_10_AWLEN,
      xt_rsc_0_10_AWADDR, xt_rsc_0_10_AWID, xt_rsc_triosy_0_10_lz, xt_rsc_0_11_s_tdone,
      xt_rsc_0_11_tr_write_done, xt_rsc_0_11_RREADY, xt_rsc_0_11_RVALID, xt_rsc_0_11_RUSER,
      xt_rsc_0_11_RLAST, xt_rsc_0_11_RRESP, xt_rsc_0_11_RDATA, xt_rsc_0_11_RID, xt_rsc_0_11_ARREADY,
      xt_rsc_0_11_ARVALID, xt_rsc_0_11_ARUSER, xt_rsc_0_11_ARREGION, xt_rsc_0_11_ARQOS,
      xt_rsc_0_11_ARPROT, xt_rsc_0_11_ARCACHE, xt_rsc_0_11_ARLOCK, xt_rsc_0_11_ARBURST,
      xt_rsc_0_11_ARSIZE, xt_rsc_0_11_ARLEN, xt_rsc_0_11_ARADDR, xt_rsc_0_11_ARID,
      xt_rsc_0_11_BREADY, xt_rsc_0_11_BVALID, xt_rsc_0_11_BUSER, xt_rsc_0_11_BRESP,
      xt_rsc_0_11_BID, xt_rsc_0_11_WREADY, xt_rsc_0_11_WVALID, xt_rsc_0_11_WUSER,
      xt_rsc_0_11_WLAST, xt_rsc_0_11_WSTRB, xt_rsc_0_11_WDATA, xt_rsc_0_11_AWREADY,
      xt_rsc_0_11_AWVALID, xt_rsc_0_11_AWUSER, xt_rsc_0_11_AWREGION, xt_rsc_0_11_AWQOS,
      xt_rsc_0_11_AWPROT, xt_rsc_0_11_AWCACHE, xt_rsc_0_11_AWLOCK, xt_rsc_0_11_AWBURST,
      xt_rsc_0_11_AWSIZE, xt_rsc_0_11_AWLEN, xt_rsc_0_11_AWADDR, xt_rsc_0_11_AWID,
      xt_rsc_triosy_0_11_lz, xt_rsc_0_12_s_tdone, xt_rsc_0_12_tr_write_done, xt_rsc_0_12_RREADY,
      xt_rsc_0_12_RVALID, xt_rsc_0_12_RUSER, xt_rsc_0_12_RLAST, xt_rsc_0_12_RRESP,
      xt_rsc_0_12_RDATA, xt_rsc_0_12_RID, xt_rsc_0_12_ARREADY, xt_rsc_0_12_ARVALID,
      xt_rsc_0_12_ARUSER, xt_rsc_0_12_ARREGION, xt_rsc_0_12_ARQOS, xt_rsc_0_12_ARPROT,
      xt_rsc_0_12_ARCACHE, xt_rsc_0_12_ARLOCK, xt_rsc_0_12_ARBURST, xt_rsc_0_12_ARSIZE,
      xt_rsc_0_12_ARLEN, xt_rsc_0_12_ARADDR, xt_rsc_0_12_ARID, xt_rsc_0_12_BREADY,
      xt_rsc_0_12_BVALID, xt_rsc_0_12_BUSER, xt_rsc_0_12_BRESP, xt_rsc_0_12_BID,
      xt_rsc_0_12_WREADY, xt_rsc_0_12_WVALID, xt_rsc_0_12_WUSER, xt_rsc_0_12_WLAST,
      xt_rsc_0_12_WSTRB, xt_rsc_0_12_WDATA, xt_rsc_0_12_AWREADY, xt_rsc_0_12_AWVALID,
      xt_rsc_0_12_AWUSER, xt_rsc_0_12_AWREGION, xt_rsc_0_12_AWQOS, xt_rsc_0_12_AWPROT,
      xt_rsc_0_12_AWCACHE, xt_rsc_0_12_AWLOCK, xt_rsc_0_12_AWBURST, xt_rsc_0_12_AWSIZE,
      xt_rsc_0_12_AWLEN, xt_rsc_0_12_AWADDR, xt_rsc_0_12_AWID, xt_rsc_triosy_0_12_lz,
      xt_rsc_0_13_s_tdone, xt_rsc_0_13_tr_write_done, xt_rsc_0_13_RREADY, xt_rsc_0_13_RVALID,
      xt_rsc_0_13_RUSER, xt_rsc_0_13_RLAST, xt_rsc_0_13_RRESP, xt_rsc_0_13_RDATA,
      xt_rsc_0_13_RID, xt_rsc_0_13_ARREADY, xt_rsc_0_13_ARVALID, xt_rsc_0_13_ARUSER,
      xt_rsc_0_13_ARREGION, xt_rsc_0_13_ARQOS, xt_rsc_0_13_ARPROT, xt_rsc_0_13_ARCACHE,
      xt_rsc_0_13_ARLOCK, xt_rsc_0_13_ARBURST, xt_rsc_0_13_ARSIZE, xt_rsc_0_13_ARLEN,
      xt_rsc_0_13_ARADDR, xt_rsc_0_13_ARID, xt_rsc_0_13_BREADY, xt_rsc_0_13_BVALID,
      xt_rsc_0_13_BUSER, xt_rsc_0_13_BRESP, xt_rsc_0_13_BID, xt_rsc_0_13_WREADY,
      xt_rsc_0_13_WVALID, xt_rsc_0_13_WUSER, xt_rsc_0_13_WLAST, xt_rsc_0_13_WSTRB,
      xt_rsc_0_13_WDATA, xt_rsc_0_13_AWREADY, xt_rsc_0_13_AWVALID, xt_rsc_0_13_AWUSER,
      xt_rsc_0_13_AWREGION, xt_rsc_0_13_AWQOS, xt_rsc_0_13_AWPROT, xt_rsc_0_13_AWCACHE,
      xt_rsc_0_13_AWLOCK, xt_rsc_0_13_AWBURST, xt_rsc_0_13_AWSIZE, xt_rsc_0_13_AWLEN,
      xt_rsc_0_13_AWADDR, xt_rsc_0_13_AWID, xt_rsc_triosy_0_13_lz, xt_rsc_0_14_s_tdone,
      xt_rsc_0_14_tr_write_done, xt_rsc_0_14_RREADY, xt_rsc_0_14_RVALID, xt_rsc_0_14_RUSER,
      xt_rsc_0_14_RLAST, xt_rsc_0_14_RRESP, xt_rsc_0_14_RDATA, xt_rsc_0_14_RID, xt_rsc_0_14_ARREADY,
      xt_rsc_0_14_ARVALID, xt_rsc_0_14_ARUSER, xt_rsc_0_14_ARREGION, xt_rsc_0_14_ARQOS,
      xt_rsc_0_14_ARPROT, xt_rsc_0_14_ARCACHE, xt_rsc_0_14_ARLOCK, xt_rsc_0_14_ARBURST,
      xt_rsc_0_14_ARSIZE, xt_rsc_0_14_ARLEN, xt_rsc_0_14_ARADDR, xt_rsc_0_14_ARID,
      xt_rsc_0_14_BREADY, xt_rsc_0_14_BVALID, xt_rsc_0_14_BUSER, xt_rsc_0_14_BRESP,
      xt_rsc_0_14_BID, xt_rsc_0_14_WREADY, xt_rsc_0_14_WVALID, xt_rsc_0_14_WUSER,
      xt_rsc_0_14_WLAST, xt_rsc_0_14_WSTRB, xt_rsc_0_14_WDATA, xt_rsc_0_14_AWREADY,
      xt_rsc_0_14_AWVALID, xt_rsc_0_14_AWUSER, xt_rsc_0_14_AWREGION, xt_rsc_0_14_AWQOS,
      xt_rsc_0_14_AWPROT, xt_rsc_0_14_AWCACHE, xt_rsc_0_14_AWLOCK, xt_rsc_0_14_AWBURST,
      xt_rsc_0_14_AWSIZE, xt_rsc_0_14_AWLEN, xt_rsc_0_14_AWADDR, xt_rsc_0_14_AWID,
      xt_rsc_triosy_0_14_lz, xt_rsc_0_15_s_tdone, xt_rsc_0_15_tr_write_done, xt_rsc_0_15_RREADY,
      xt_rsc_0_15_RVALID, xt_rsc_0_15_RUSER, xt_rsc_0_15_RLAST, xt_rsc_0_15_RRESP,
      xt_rsc_0_15_RDATA, xt_rsc_0_15_RID, xt_rsc_0_15_ARREADY, xt_rsc_0_15_ARVALID,
      xt_rsc_0_15_ARUSER, xt_rsc_0_15_ARREGION, xt_rsc_0_15_ARQOS, xt_rsc_0_15_ARPROT,
      xt_rsc_0_15_ARCACHE, xt_rsc_0_15_ARLOCK, xt_rsc_0_15_ARBURST, xt_rsc_0_15_ARSIZE,
      xt_rsc_0_15_ARLEN, xt_rsc_0_15_ARADDR, xt_rsc_0_15_ARID, xt_rsc_0_15_BREADY,
      xt_rsc_0_15_BVALID, xt_rsc_0_15_BUSER, xt_rsc_0_15_BRESP, xt_rsc_0_15_BID,
      xt_rsc_0_15_WREADY, xt_rsc_0_15_WVALID, xt_rsc_0_15_WUSER, xt_rsc_0_15_WLAST,
      xt_rsc_0_15_WSTRB, xt_rsc_0_15_WDATA, xt_rsc_0_15_AWREADY, xt_rsc_0_15_AWVALID,
      xt_rsc_0_15_AWUSER, xt_rsc_0_15_AWREGION, xt_rsc_0_15_AWQOS, xt_rsc_0_15_AWPROT,
      xt_rsc_0_15_AWCACHE, xt_rsc_0_15_AWLOCK, xt_rsc_0_15_AWBURST, xt_rsc_0_15_AWSIZE,
      xt_rsc_0_15_AWLEN, xt_rsc_0_15_AWADDR, xt_rsc_0_15_AWID, xt_rsc_triosy_0_15_lz,
      xt_rsc_0_16_s_tdone, xt_rsc_0_16_tr_write_done, xt_rsc_0_16_RREADY, xt_rsc_0_16_RVALID,
      xt_rsc_0_16_RUSER, xt_rsc_0_16_RLAST, xt_rsc_0_16_RRESP, xt_rsc_0_16_RDATA,
      xt_rsc_0_16_RID, xt_rsc_0_16_ARREADY, xt_rsc_0_16_ARVALID, xt_rsc_0_16_ARUSER,
      xt_rsc_0_16_ARREGION, xt_rsc_0_16_ARQOS, xt_rsc_0_16_ARPROT, xt_rsc_0_16_ARCACHE,
      xt_rsc_0_16_ARLOCK, xt_rsc_0_16_ARBURST, xt_rsc_0_16_ARSIZE, xt_rsc_0_16_ARLEN,
      xt_rsc_0_16_ARADDR, xt_rsc_0_16_ARID, xt_rsc_0_16_BREADY, xt_rsc_0_16_BVALID,
      xt_rsc_0_16_BUSER, xt_rsc_0_16_BRESP, xt_rsc_0_16_BID, xt_rsc_0_16_WREADY,
      xt_rsc_0_16_WVALID, xt_rsc_0_16_WUSER, xt_rsc_0_16_WLAST, xt_rsc_0_16_WSTRB,
      xt_rsc_0_16_WDATA, xt_rsc_0_16_AWREADY, xt_rsc_0_16_AWVALID, xt_rsc_0_16_AWUSER,
      xt_rsc_0_16_AWREGION, xt_rsc_0_16_AWQOS, xt_rsc_0_16_AWPROT, xt_rsc_0_16_AWCACHE,
      xt_rsc_0_16_AWLOCK, xt_rsc_0_16_AWBURST, xt_rsc_0_16_AWSIZE, xt_rsc_0_16_AWLEN,
      xt_rsc_0_16_AWADDR, xt_rsc_0_16_AWID, xt_rsc_triosy_0_16_lz, xt_rsc_0_17_s_tdone,
      xt_rsc_0_17_tr_write_done, xt_rsc_0_17_RREADY, xt_rsc_0_17_RVALID, xt_rsc_0_17_RUSER,
      xt_rsc_0_17_RLAST, xt_rsc_0_17_RRESP, xt_rsc_0_17_RDATA, xt_rsc_0_17_RID, xt_rsc_0_17_ARREADY,
      xt_rsc_0_17_ARVALID, xt_rsc_0_17_ARUSER, xt_rsc_0_17_ARREGION, xt_rsc_0_17_ARQOS,
      xt_rsc_0_17_ARPROT, xt_rsc_0_17_ARCACHE, xt_rsc_0_17_ARLOCK, xt_rsc_0_17_ARBURST,
      xt_rsc_0_17_ARSIZE, xt_rsc_0_17_ARLEN, xt_rsc_0_17_ARADDR, xt_rsc_0_17_ARID,
      xt_rsc_0_17_BREADY, xt_rsc_0_17_BVALID, xt_rsc_0_17_BUSER, xt_rsc_0_17_BRESP,
      xt_rsc_0_17_BID, xt_rsc_0_17_WREADY, xt_rsc_0_17_WVALID, xt_rsc_0_17_WUSER,
      xt_rsc_0_17_WLAST, xt_rsc_0_17_WSTRB, xt_rsc_0_17_WDATA, xt_rsc_0_17_AWREADY,
      xt_rsc_0_17_AWVALID, xt_rsc_0_17_AWUSER, xt_rsc_0_17_AWREGION, xt_rsc_0_17_AWQOS,
      xt_rsc_0_17_AWPROT, xt_rsc_0_17_AWCACHE, xt_rsc_0_17_AWLOCK, xt_rsc_0_17_AWBURST,
      xt_rsc_0_17_AWSIZE, xt_rsc_0_17_AWLEN, xt_rsc_0_17_AWADDR, xt_rsc_0_17_AWID,
      xt_rsc_triosy_0_17_lz, xt_rsc_0_18_s_tdone, xt_rsc_0_18_tr_write_done, xt_rsc_0_18_RREADY,
      xt_rsc_0_18_RVALID, xt_rsc_0_18_RUSER, xt_rsc_0_18_RLAST, xt_rsc_0_18_RRESP,
      xt_rsc_0_18_RDATA, xt_rsc_0_18_RID, xt_rsc_0_18_ARREADY, xt_rsc_0_18_ARVALID,
      xt_rsc_0_18_ARUSER, xt_rsc_0_18_ARREGION, xt_rsc_0_18_ARQOS, xt_rsc_0_18_ARPROT,
      xt_rsc_0_18_ARCACHE, xt_rsc_0_18_ARLOCK, xt_rsc_0_18_ARBURST, xt_rsc_0_18_ARSIZE,
      xt_rsc_0_18_ARLEN, xt_rsc_0_18_ARADDR, xt_rsc_0_18_ARID, xt_rsc_0_18_BREADY,
      xt_rsc_0_18_BVALID, xt_rsc_0_18_BUSER, xt_rsc_0_18_BRESP, xt_rsc_0_18_BID,
      xt_rsc_0_18_WREADY, xt_rsc_0_18_WVALID, xt_rsc_0_18_WUSER, xt_rsc_0_18_WLAST,
      xt_rsc_0_18_WSTRB, xt_rsc_0_18_WDATA, xt_rsc_0_18_AWREADY, xt_rsc_0_18_AWVALID,
      xt_rsc_0_18_AWUSER, xt_rsc_0_18_AWREGION, xt_rsc_0_18_AWQOS, xt_rsc_0_18_AWPROT,
      xt_rsc_0_18_AWCACHE, xt_rsc_0_18_AWLOCK, xt_rsc_0_18_AWBURST, xt_rsc_0_18_AWSIZE,
      xt_rsc_0_18_AWLEN, xt_rsc_0_18_AWADDR, xt_rsc_0_18_AWID, xt_rsc_triosy_0_18_lz,
      xt_rsc_0_19_s_tdone, xt_rsc_0_19_tr_write_done, xt_rsc_0_19_RREADY, xt_rsc_0_19_RVALID,
      xt_rsc_0_19_RUSER, xt_rsc_0_19_RLAST, xt_rsc_0_19_RRESP, xt_rsc_0_19_RDATA,
      xt_rsc_0_19_RID, xt_rsc_0_19_ARREADY, xt_rsc_0_19_ARVALID, xt_rsc_0_19_ARUSER,
      xt_rsc_0_19_ARREGION, xt_rsc_0_19_ARQOS, xt_rsc_0_19_ARPROT, xt_rsc_0_19_ARCACHE,
      xt_rsc_0_19_ARLOCK, xt_rsc_0_19_ARBURST, xt_rsc_0_19_ARSIZE, xt_rsc_0_19_ARLEN,
      xt_rsc_0_19_ARADDR, xt_rsc_0_19_ARID, xt_rsc_0_19_BREADY, xt_rsc_0_19_BVALID,
      xt_rsc_0_19_BUSER, xt_rsc_0_19_BRESP, xt_rsc_0_19_BID, xt_rsc_0_19_WREADY,
      xt_rsc_0_19_WVALID, xt_rsc_0_19_WUSER, xt_rsc_0_19_WLAST, xt_rsc_0_19_WSTRB,
      xt_rsc_0_19_WDATA, xt_rsc_0_19_AWREADY, xt_rsc_0_19_AWVALID, xt_rsc_0_19_AWUSER,
      xt_rsc_0_19_AWREGION, xt_rsc_0_19_AWQOS, xt_rsc_0_19_AWPROT, xt_rsc_0_19_AWCACHE,
      xt_rsc_0_19_AWLOCK, xt_rsc_0_19_AWBURST, xt_rsc_0_19_AWSIZE, xt_rsc_0_19_AWLEN,
      xt_rsc_0_19_AWADDR, xt_rsc_0_19_AWID, xt_rsc_triosy_0_19_lz, xt_rsc_0_20_s_tdone,
      xt_rsc_0_20_tr_write_done, xt_rsc_0_20_RREADY, xt_rsc_0_20_RVALID, xt_rsc_0_20_RUSER,
      xt_rsc_0_20_RLAST, xt_rsc_0_20_RRESP, xt_rsc_0_20_RDATA, xt_rsc_0_20_RID, xt_rsc_0_20_ARREADY,
      xt_rsc_0_20_ARVALID, xt_rsc_0_20_ARUSER, xt_rsc_0_20_ARREGION, xt_rsc_0_20_ARQOS,
      xt_rsc_0_20_ARPROT, xt_rsc_0_20_ARCACHE, xt_rsc_0_20_ARLOCK, xt_rsc_0_20_ARBURST,
      xt_rsc_0_20_ARSIZE, xt_rsc_0_20_ARLEN, xt_rsc_0_20_ARADDR, xt_rsc_0_20_ARID,
      xt_rsc_0_20_BREADY, xt_rsc_0_20_BVALID, xt_rsc_0_20_BUSER, xt_rsc_0_20_BRESP,
      xt_rsc_0_20_BID, xt_rsc_0_20_WREADY, xt_rsc_0_20_WVALID, xt_rsc_0_20_WUSER,
      xt_rsc_0_20_WLAST, xt_rsc_0_20_WSTRB, xt_rsc_0_20_WDATA, xt_rsc_0_20_AWREADY,
      xt_rsc_0_20_AWVALID, xt_rsc_0_20_AWUSER, xt_rsc_0_20_AWREGION, xt_rsc_0_20_AWQOS,
      xt_rsc_0_20_AWPROT, xt_rsc_0_20_AWCACHE, xt_rsc_0_20_AWLOCK, xt_rsc_0_20_AWBURST,
      xt_rsc_0_20_AWSIZE, xt_rsc_0_20_AWLEN, xt_rsc_0_20_AWADDR, xt_rsc_0_20_AWID,
      xt_rsc_triosy_0_20_lz, xt_rsc_0_21_s_tdone, xt_rsc_0_21_tr_write_done, xt_rsc_0_21_RREADY,
      xt_rsc_0_21_RVALID, xt_rsc_0_21_RUSER, xt_rsc_0_21_RLAST, xt_rsc_0_21_RRESP,
      xt_rsc_0_21_RDATA, xt_rsc_0_21_RID, xt_rsc_0_21_ARREADY, xt_rsc_0_21_ARVALID,
      xt_rsc_0_21_ARUSER, xt_rsc_0_21_ARREGION, xt_rsc_0_21_ARQOS, xt_rsc_0_21_ARPROT,
      xt_rsc_0_21_ARCACHE, xt_rsc_0_21_ARLOCK, xt_rsc_0_21_ARBURST, xt_rsc_0_21_ARSIZE,
      xt_rsc_0_21_ARLEN, xt_rsc_0_21_ARADDR, xt_rsc_0_21_ARID, xt_rsc_0_21_BREADY,
      xt_rsc_0_21_BVALID, xt_rsc_0_21_BUSER, xt_rsc_0_21_BRESP, xt_rsc_0_21_BID,
      xt_rsc_0_21_WREADY, xt_rsc_0_21_WVALID, xt_rsc_0_21_WUSER, xt_rsc_0_21_WLAST,
      xt_rsc_0_21_WSTRB, xt_rsc_0_21_WDATA, xt_rsc_0_21_AWREADY, xt_rsc_0_21_AWVALID,
      xt_rsc_0_21_AWUSER, xt_rsc_0_21_AWREGION, xt_rsc_0_21_AWQOS, xt_rsc_0_21_AWPROT,
      xt_rsc_0_21_AWCACHE, xt_rsc_0_21_AWLOCK, xt_rsc_0_21_AWBURST, xt_rsc_0_21_AWSIZE,
      xt_rsc_0_21_AWLEN, xt_rsc_0_21_AWADDR, xt_rsc_0_21_AWID, xt_rsc_triosy_0_21_lz,
      xt_rsc_0_22_s_tdone, xt_rsc_0_22_tr_write_done, xt_rsc_0_22_RREADY, xt_rsc_0_22_RVALID,
      xt_rsc_0_22_RUSER, xt_rsc_0_22_RLAST, xt_rsc_0_22_RRESP, xt_rsc_0_22_RDATA,
      xt_rsc_0_22_RID, xt_rsc_0_22_ARREADY, xt_rsc_0_22_ARVALID, xt_rsc_0_22_ARUSER,
      xt_rsc_0_22_ARREGION, xt_rsc_0_22_ARQOS, xt_rsc_0_22_ARPROT, xt_rsc_0_22_ARCACHE,
      xt_rsc_0_22_ARLOCK, xt_rsc_0_22_ARBURST, xt_rsc_0_22_ARSIZE, xt_rsc_0_22_ARLEN,
      xt_rsc_0_22_ARADDR, xt_rsc_0_22_ARID, xt_rsc_0_22_BREADY, xt_rsc_0_22_BVALID,
      xt_rsc_0_22_BUSER, xt_rsc_0_22_BRESP, xt_rsc_0_22_BID, xt_rsc_0_22_WREADY,
      xt_rsc_0_22_WVALID, xt_rsc_0_22_WUSER, xt_rsc_0_22_WLAST, xt_rsc_0_22_WSTRB,
      xt_rsc_0_22_WDATA, xt_rsc_0_22_AWREADY, xt_rsc_0_22_AWVALID, xt_rsc_0_22_AWUSER,
      xt_rsc_0_22_AWREGION, xt_rsc_0_22_AWQOS, xt_rsc_0_22_AWPROT, xt_rsc_0_22_AWCACHE,
      xt_rsc_0_22_AWLOCK, xt_rsc_0_22_AWBURST, xt_rsc_0_22_AWSIZE, xt_rsc_0_22_AWLEN,
      xt_rsc_0_22_AWADDR, xt_rsc_0_22_AWID, xt_rsc_triosy_0_22_lz, xt_rsc_0_23_s_tdone,
      xt_rsc_0_23_tr_write_done, xt_rsc_0_23_RREADY, xt_rsc_0_23_RVALID, xt_rsc_0_23_RUSER,
      xt_rsc_0_23_RLAST, xt_rsc_0_23_RRESP, xt_rsc_0_23_RDATA, xt_rsc_0_23_RID, xt_rsc_0_23_ARREADY,
      xt_rsc_0_23_ARVALID, xt_rsc_0_23_ARUSER, xt_rsc_0_23_ARREGION, xt_rsc_0_23_ARQOS,
      xt_rsc_0_23_ARPROT, xt_rsc_0_23_ARCACHE, xt_rsc_0_23_ARLOCK, xt_rsc_0_23_ARBURST,
      xt_rsc_0_23_ARSIZE, xt_rsc_0_23_ARLEN, xt_rsc_0_23_ARADDR, xt_rsc_0_23_ARID,
      xt_rsc_0_23_BREADY, xt_rsc_0_23_BVALID, xt_rsc_0_23_BUSER, xt_rsc_0_23_BRESP,
      xt_rsc_0_23_BID, xt_rsc_0_23_WREADY, xt_rsc_0_23_WVALID, xt_rsc_0_23_WUSER,
      xt_rsc_0_23_WLAST, xt_rsc_0_23_WSTRB, xt_rsc_0_23_WDATA, xt_rsc_0_23_AWREADY,
      xt_rsc_0_23_AWVALID, xt_rsc_0_23_AWUSER, xt_rsc_0_23_AWREGION, xt_rsc_0_23_AWQOS,
      xt_rsc_0_23_AWPROT, xt_rsc_0_23_AWCACHE, xt_rsc_0_23_AWLOCK, xt_rsc_0_23_AWBURST,
      xt_rsc_0_23_AWSIZE, xt_rsc_0_23_AWLEN, xt_rsc_0_23_AWADDR, xt_rsc_0_23_AWID,
      xt_rsc_triosy_0_23_lz, xt_rsc_0_24_s_tdone, xt_rsc_0_24_tr_write_done, xt_rsc_0_24_RREADY,
      xt_rsc_0_24_RVALID, xt_rsc_0_24_RUSER, xt_rsc_0_24_RLAST, xt_rsc_0_24_RRESP,
      xt_rsc_0_24_RDATA, xt_rsc_0_24_RID, xt_rsc_0_24_ARREADY, xt_rsc_0_24_ARVALID,
      xt_rsc_0_24_ARUSER, xt_rsc_0_24_ARREGION, xt_rsc_0_24_ARQOS, xt_rsc_0_24_ARPROT,
      xt_rsc_0_24_ARCACHE, xt_rsc_0_24_ARLOCK, xt_rsc_0_24_ARBURST, xt_rsc_0_24_ARSIZE,
      xt_rsc_0_24_ARLEN, xt_rsc_0_24_ARADDR, xt_rsc_0_24_ARID, xt_rsc_0_24_BREADY,
      xt_rsc_0_24_BVALID, xt_rsc_0_24_BUSER, xt_rsc_0_24_BRESP, xt_rsc_0_24_BID,
      xt_rsc_0_24_WREADY, xt_rsc_0_24_WVALID, xt_rsc_0_24_WUSER, xt_rsc_0_24_WLAST,
      xt_rsc_0_24_WSTRB, xt_rsc_0_24_WDATA, xt_rsc_0_24_AWREADY, xt_rsc_0_24_AWVALID,
      xt_rsc_0_24_AWUSER, xt_rsc_0_24_AWREGION, xt_rsc_0_24_AWQOS, xt_rsc_0_24_AWPROT,
      xt_rsc_0_24_AWCACHE, xt_rsc_0_24_AWLOCK, xt_rsc_0_24_AWBURST, xt_rsc_0_24_AWSIZE,
      xt_rsc_0_24_AWLEN, xt_rsc_0_24_AWADDR, xt_rsc_0_24_AWID, xt_rsc_triosy_0_24_lz,
      xt_rsc_0_25_s_tdone, xt_rsc_0_25_tr_write_done, xt_rsc_0_25_RREADY, xt_rsc_0_25_RVALID,
      xt_rsc_0_25_RUSER, xt_rsc_0_25_RLAST, xt_rsc_0_25_RRESP, xt_rsc_0_25_RDATA,
      xt_rsc_0_25_RID, xt_rsc_0_25_ARREADY, xt_rsc_0_25_ARVALID, xt_rsc_0_25_ARUSER,
      xt_rsc_0_25_ARREGION, xt_rsc_0_25_ARQOS, xt_rsc_0_25_ARPROT, xt_rsc_0_25_ARCACHE,
      xt_rsc_0_25_ARLOCK, xt_rsc_0_25_ARBURST, xt_rsc_0_25_ARSIZE, xt_rsc_0_25_ARLEN,
      xt_rsc_0_25_ARADDR, xt_rsc_0_25_ARID, xt_rsc_0_25_BREADY, xt_rsc_0_25_BVALID,
      xt_rsc_0_25_BUSER, xt_rsc_0_25_BRESP, xt_rsc_0_25_BID, xt_rsc_0_25_WREADY,
      xt_rsc_0_25_WVALID, xt_rsc_0_25_WUSER, xt_rsc_0_25_WLAST, xt_rsc_0_25_WSTRB,
      xt_rsc_0_25_WDATA, xt_rsc_0_25_AWREADY, xt_rsc_0_25_AWVALID, xt_rsc_0_25_AWUSER,
      xt_rsc_0_25_AWREGION, xt_rsc_0_25_AWQOS, xt_rsc_0_25_AWPROT, xt_rsc_0_25_AWCACHE,
      xt_rsc_0_25_AWLOCK, xt_rsc_0_25_AWBURST, xt_rsc_0_25_AWSIZE, xt_rsc_0_25_AWLEN,
      xt_rsc_0_25_AWADDR, xt_rsc_0_25_AWID, xt_rsc_triosy_0_25_lz, xt_rsc_0_26_s_tdone,
      xt_rsc_0_26_tr_write_done, xt_rsc_0_26_RREADY, xt_rsc_0_26_RVALID, xt_rsc_0_26_RUSER,
      xt_rsc_0_26_RLAST, xt_rsc_0_26_RRESP, xt_rsc_0_26_RDATA, xt_rsc_0_26_RID, xt_rsc_0_26_ARREADY,
      xt_rsc_0_26_ARVALID, xt_rsc_0_26_ARUSER, xt_rsc_0_26_ARREGION, xt_rsc_0_26_ARQOS,
      xt_rsc_0_26_ARPROT, xt_rsc_0_26_ARCACHE, xt_rsc_0_26_ARLOCK, xt_rsc_0_26_ARBURST,
      xt_rsc_0_26_ARSIZE, xt_rsc_0_26_ARLEN, xt_rsc_0_26_ARADDR, xt_rsc_0_26_ARID,
      xt_rsc_0_26_BREADY, xt_rsc_0_26_BVALID, xt_rsc_0_26_BUSER, xt_rsc_0_26_BRESP,
      xt_rsc_0_26_BID, xt_rsc_0_26_WREADY, xt_rsc_0_26_WVALID, xt_rsc_0_26_WUSER,
      xt_rsc_0_26_WLAST, xt_rsc_0_26_WSTRB, xt_rsc_0_26_WDATA, xt_rsc_0_26_AWREADY,
      xt_rsc_0_26_AWVALID, xt_rsc_0_26_AWUSER, xt_rsc_0_26_AWREGION, xt_rsc_0_26_AWQOS,
      xt_rsc_0_26_AWPROT, xt_rsc_0_26_AWCACHE, xt_rsc_0_26_AWLOCK, xt_rsc_0_26_AWBURST,
      xt_rsc_0_26_AWSIZE, xt_rsc_0_26_AWLEN, xt_rsc_0_26_AWADDR, xt_rsc_0_26_AWID,
      xt_rsc_triosy_0_26_lz, xt_rsc_0_27_s_tdone, xt_rsc_0_27_tr_write_done, xt_rsc_0_27_RREADY,
      xt_rsc_0_27_RVALID, xt_rsc_0_27_RUSER, xt_rsc_0_27_RLAST, xt_rsc_0_27_RRESP,
      xt_rsc_0_27_RDATA, xt_rsc_0_27_RID, xt_rsc_0_27_ARREADY, xt_rsc_0_27_ARVALID,
      xt_rsc_0_27_ARUSER, xt_rsc_0_27_ARREGION, xt_rsc_0_27_ARQOS, xt_rsc_0_27_ARPROT,
      xt_rsc_0_27_ARCACHE, xt_rsc_0_27_ARLOCK, xt_rsc_0_27_ARBURST, xt_rsc_0_27_ARSIZE,
      xt_rsc_0_27_ARLEN, xt_rsc_0_27_ARADDR, xt_rsc_0_27_ARID, xt_rsc_0_27_BREADY,
      xt_rsc_0_27_BVALID, xt_rsc_0_27_BUSER, xt_rsc_0_27_BRESP, xt_rsc_0_27_BID,
      xt_rsc_0_27_WREADY, xt_rsc_0_27_WVALID, xt_rsc_0_27_WUSER, xt_rsc_0_27_WLAST,
      xt_rsc_0_27_WSTRB, xt_rsc_0_27_WDATA, xt_rsc_0_27_AWREADY, xt_rsc_0_27_AWVALID,
      xt_rsc_0_27_AWUSER, xt_rsc_0_27_AWREGION, xt_rsc_0_27_AWQOS, xt_rsc_0_27_AWPROT,
      xt_rsc_0_27_AWCACHE, xt_rsc_0_27_AWLOCK, xt_rsc_0_27_AWBURST, xt_rsc_0_27_AWSIZE,
      xt_rsc_0_27_AWLEN, xt_rsc_0_27_AWADDR, xt_rsc_0_27_AWID, xt_rsc_triosy_0_27_lz,
      xt_rsc_0_28_s_tdone, xt_rsc_0_28_tr_write_done, xt_rsc_0_28_RREADY, xt_rsc_0_28_RVALID,
      xt_rsc_0_28_RUSER, xt_rsc_0_28_RLAST, xt_rsc_0_28_RRESP, xt_rsc_0_28_RDATA,
      xt_rsc_0_28_RID, xt_rsc_0_28_ARREADY, xt_rsc_0_28_ARVALID, xt_rsc_0_28_ARUSER,
      xt_rsc_0_28_ARREGION, xt_rsc_0_28_ARQOS, xt_rsc_0_28_ARPROT, xt_rsc_0_28_ARCACHE,
      xt_rsc_0_28_ARLOCK, xt_rsc_0_28_ARBURST, xt_rsc_0_28_ARSIZE, xt_rsc_0_28_ARLEN,
      xt_rsc_0_28_ARADDR, xt_rsc_0_28_ARID, xt_rsc_0_28_BREADY, xt_rsc_0_28_BVALID,
      xt_rsc_0_28_BUSER, xt_rsc_0_28_BRESP, xt_rsc_0_28_BID, xt_rsc_0_28_WREADY,
      xt_rsc_0_28_WVALID, xt_rsc_0_28_WUSER, xt_rsc_0_28_WLAST, xt_rsc_0_28_WSTRB,
      xt_rsc_0_28_WDATA, xt_rsc_0_28_AWREADY, xt_rsc_0_28_AWVALID, xt_rsc_0_28_AWUSER,
      xt_rsc_0_28_AWREGION, xt_rsc_0_28_AWQOS, xt_rsc_0_28_AWPROT, xt_rsc_0_28_AWCACHE,
      xt_rsc_0_28_AWLOCK, xt_rsc_0_28_AWBURST, xt_rsc_0_28_AWSIZE, xt_rsc_0_28_AWLEN,
      xt_rsc_0_28_AWADDR, xt_rsc_0_28_AWID, xt_rsc_triosy_0_28_lz, xt_rsc_0_29_s_tdone,
      xt_rsc_0_29_tr_write_done, xt_rsc_0_29_RREADY, xt_rsc_0_29_RVALID, xt_rsc_0_29_RUSER,
      xt_rsc_0_29_RLAST, xt_rsc_0_29_RRESP, xt_rsc_0_29_RDATA, xt_rsc_0_29_RID, xt_rsc_0_29_ARREADY,
      xt_rsc_0_29_ARVALID, xt_rsc_0_29_ARUSER, xt_rsc_0_29_ARREGION, xt_rsc_0_29_ARQOS,
      xt_rsc_0_29_ARPROT, xt_rsc_0_29_ARCACHE, xt_rsc_0_29_ARLOCK, xt_rsc_0_29_ARBURST,
      xt_rsc_0_29_ARSIZE, xt_rsc_0_29_ARLEN, xt_rsc_0_29_ARADDR, xt_rsc_0_29_ARID,
      xt_rsc_0_29_BREADY, xt_rsc_0_29_BVALID, xt_rsc_0_29_BUSER, xt_rsc_0_29_BRESP,
      xt_rsc_0_29_BID, xt_rsc_0_29_WREADY, xt_rsc_0_29_WVALID, xt_rsc_0_29_WUSER,
      xt_rsc_0_29_WLAST, xt_rsc_0_29_WSTRB, xt_rsc_0_29_WDATA, xt_rsc_0_29_AWREADY,
      xt_rsc_0_29_AWVALID, xt_rsc_0_29_AWUSER, xt_rsc_0_29_AWREGION, xt_rsc_0_29_AWQOS,
      xt_rsc_0_29_AWPROT, xt_rsc_0_29_AWCACHE, xt_rsc_0_29_AWLOCK, xt_rsc_0_29_AWBURST,
      xt_rsc_0_29_AWSIZE, xt_rsc_0_29_AWLEN, xt_rsc_0_29_AWADDR, xt_rsc_0_29_AWID,
      xt_rsc_triosy_0_29_lz, xt_rsc_0_30_s_tdone, xt_rsc_0_30_tr_write_done, xt_rsc_0_30_RREADY,
      xt_rsc_0_30_RVALID, xt_rsc_0_30_RUSER, xt_rsc_0_30_RLAST, xt_rsc_0_30_RRESP,
      xt_rsc_0_30_RDATA, xt_rsc_0_30_RID, xt_rsc_0_30_ARREADY, xt_rsc_0_30_ARVALID,
      xt_rsc_0_30_ARUSER, xt_rsc_0_30_ARREGION, xt_rsc_0_30_ARQOS, xt_rsc_0_30_ARPROT,
      xt_rsc_0_30_ARCACHE, xt_rsc_0_30_ARLOCK, xt_rsc_0_30_ARBURST, xt_rsc_0_30_ARSIZE,
      xt_rsc_0_30_ARLEN, xt_rsc_0_30_ARADDR, xt_rsc_0_30_ARID, xt_rsc_0_30_BREADY,
      xt_rsc_0_30_BVALID, xt_rsc_0_30_BUSER, xt_rsc_0_30_BRESP, xt_rsc_0_30_BID,
      xt_rsc_0_30_WREADY, xt_rsc_0_30_WVALID, xt_rsc_0_30_WUSER, xt_rsc_0_30_WLAST,
      xt_rsc_0_30_WSTRB, xt_rsc_0_30_WDATA, xt_rsc_0_30_AWREADY, xt_rsc_0_30_AWVALID,
      xt_rsc_0_30_AWUSER, xt_rsc_0_30_AWREGION, xt_rsc_0_30_AWQOS, xt_rsc_0_30_AWPROT,
      xt_rsc_0_30_AWCACHE, xt_rsc_0_30_AWLOCK, xt_rsc_0_30_AWBURST, xt_rsc_0_30_AWSIZE,
      xt_rsc_0_30_AWLEN, xt_rsc_0_30_AWADDR, xt_rsc_0_30_AWID, xt_rsc_triosy_0_30_lz,
      xt_rsc_0_31_s_tdone, xt_rsc_0_31_tr_write_done, xt_rsc_0_31_RREADY, xt_rsc_0_31_RVALID,
      xt_rsc_0_31_RUSER, xt_rsc_0_31_RLAST, xt_rsc_0_31_RRESP, xt_rsc_0_31_RDATA,
      xt_rsc_0_31_RID, xt_rsc_0_31_ARREADY, xt_rsc_0_31_ARVALID, xt_rsc_0_31_ARUSER,
      xt_rsc_0_31_ARREGION, xt_rsc_0_31_ARQOS, xt_rsc_0_31_ARPROT, xt_rsc_0_31_ARCACHE,
      xt_rsc_0_31_ARLOCK, xt_rsc_0_31_ARBURST, xt_rsc_0_31_ARSIZE, xt_rsc_0_31_ARLEN,
      xt_rsc_0_31_ARADDR, xt_rsc_0_31_ARID, xt_rsc_0_31_BREADY, xt_rsc_0_31_BVALID,
      xt_rsc_0_31_BUSER, xt_rsc_0_31_BRESP, xt_rsc_0_31_BID, xt_rsc_0_31_WREADY,
      xt_rsc_0_31_WVALID, xt_rsc_0_31_WUSER, xt_rsc_0_31_WLAST, xt_rsc_0_31_WSTRB,
      xt_rsc_0_31_WDATA, xt_rsc_0_31_AWREADY, xt_rsc_0_31_AWVALID, xt_rsc_0_31_AWUSER,
      xt_rsc_0_31_AWREGION, xt_rsc_0_31_AWQOS, xt_rsc_0_31_AWPROT, xt_rsc_0_31_AWCACHE,
      xt_rsc_0_31_AWLOCK, xt_rsc_0_31_AWBURST, xt_rsc_0_31_AWSIZE, xt_rsc_0_31_AWLEN,
      xt_rsc_0_31_AWADDR, xt_rsc_0_31_AWID, xt_rsc_triosy_0_31_lz, xt_rsc_1_0_s_tdone,
      xt_rsc_1_0_tr_write_done, xt_rsc_1_0_RREADY, xt_rsc_1_0_RVALID, xt_rsc_1_0_RUSER,
      xt_rsc_1_0_RLAST, xt_rsc_1_0_RRESP, xt_rsc_1_0_RDATA, xt_rsc_1_0_RID, xt_rsc_1_0_ARREADY,
      xt_rsc_1_0_ARVALID, xt_rsc_1_0_ARUSER, xt_rsc_1_0_ARREGION, xt_rsc_1_0_ARQOS,
      xt_rsc_1_0_ARPROT, xt_rsc_1_0_ARCACHE, xt_rsc_1_0_ARLOCK, xt_rsc_1_0_ARBURST,
      xt_rsc_1_0_ARSIZE, xt_rsc_1_0_ARLEN, xt_rsc_1_0_ARADDR, xt_rsc_1_0_ARID, xt_rsc_1_0_BREADY,
      xt_rsc_1_0_BVALID, xt_rsc_1_0_BUSER, xt_rsc_1_0_BRESP, xt_rsc_1_0_BID, xt_rsc_1_0_WREADY,
      xt_rsc_1_0_WVALID, xt_rsc_1_0_WUSER, xt_rsc_1_0_WLAST, xt_rsc_1_0_WSTRB, xt_rsc_1_0_WDATA,
      xt_rsc_1_0_AWREADY, xt_rsc_1_0_AWVALID, xt_rsc_1_0_AWUSER, xt_rsc_1_0_AWREGION,
      xt_rsc_1_0_AWQOS, xt_rsc_1_0_AWPROT, xt_rsc_1_0_AWCACHE, xt_rsc_1_0_AWLOCK,
      xt_rsc_1_0_AWBURST, xt_rsc_1_0_AWSIZE, xt_rsc_1_0_AWLEN, xt_rsc_1_0_AWADDR,
      xt_rsc_1_0_AWID, xt_rsc_triosy_1_0_lz, xt_rsc_1_1_s_tdone, xt_rsc_1_1_tr_write_done,
      xt_rsc_1_1_RREADY, xt_rsc_1_1_RVALID, xt_rsc_1_1_RUSER, xt_rsc_1_1_RLAST, xt_rsc_1_1_RRESP,
      xt_rsc_1_1_RDATA, xt_rsc_1_1_RID, xt_rsc_1_1_ARREADY, xt_rsc_1_1_ARVALID, xt_rsc_1_1_ARUSER,
      xt_rsc_1_1_ARREGION, xt_rsc_1_1_ARQOS, xt_rsc_1_1_ARPROT, xt_rsc_1_1_ARCACHE,
      xt_rsc_1_1_ARLOCK, xt_rsc_1_1_ARBURST, xt_rsc_1_1_ARSIZE, xt_rsc_1_1_ARLEN,
      xt_rsc_1_1_ARADDR, xt_rsc_1_1_ARID, xt_rsc_1_1_BREADY, xt_rsc_1_1_BVALID, xt_rsc_1_1_BUSER,
      xt_rsc_1_1_BRESP, xt_rsc_1_1_BID, xt_rsc_1_1_WREADY, xt_rsc_1_1_WVALID, xt_rsc_1_1_WUSER,
      xt_rsc_1_1_WLAST, xt_rsc_1_1_WSTRB, xt_rsc_1_1_WDATA, xt_rsc_1_1_AWREADY, xt_rsc_1_1_AWVALID,
      xt_rsc_1_1_AWUSER, xt_rsc_1_1_AWREGION, xt_rsc_1_1_AWQOS, xt_rsc_1_1_AWPROT,
      xt_rsc_1_1_AWCACHE, xt_rsc_1_1_AWLOCK, xt_rsc_1_1_AWBURST, xt_rsc_1_1_AWSIZE,
      xt_rsc_1_1_AWLEN, xt_rsc_1_1_AWADDR, xt_rsc_1_1_AWID, xt_rsc_triosy_1_1_lz,
      xt_rsc_1_2_s_tdone, xt_rsc_1_2_tr_write_done, xt_rsc_1_2_RREADY, xt_rsc_1_2_RVALID,
      xt_rsc_1_2_RUSER, xt_rsc_1_2_RLAST, xt_rsc_1_2_RRESP, xt_rsc_1_2_RDATA, xt_rsc_1_2_RID,
      xt_rsc_1_2_ARREADY, xt_rsc_1_2_ARVALID, xt_rsc_1_2_ARUSER, xt_rsc_1_2_ARREGION,
      xt_rsc_1_2_ARQOS, xt_rsc_1_2_ARPROT, xt_rsc_1_2_ARCACHE, xt_rsc_1_2_ARLOCK,
      xt_rsc_1_2_ARBURST, xt_rsc_1_2_ARSIZE, xt_rsc_1_2_ARLEN, xt_rsc_1_2_ARADDR,
      xt_rsc_1_2_ARID, xt_rsc_1_2_BREADY, xt_rsc_1_2_BVALID, xt_rsc_1_2_BUSER, xt_rsc_1_2_BRESP,
      xt_rsc_1_2_BID, xt_rsc_1_2_WREADY, xt_rsc_1_2_WVALID, xt_rsc_1_2_WUSER, xt_rsc_1_2_WLAST,
      xt_rsc_1_2_WSTRB, xt_rsc_1_2_WDATA, xt_rsc_1_2_AWREADY, xt_rsc_1_2_AWVALID,
      xt_rsc_1_2_AWUSER, xt_rsc_1_2_AWREGION, xt_rsc_1_2_AWQOS, xt_rsc_1_2_AWPROT,
      xt_rsc_1_2_AWCACHE, xt_rsc_1_2_AWLOCK, xt_rsc_1_2_AWBURST, xt_rsc_1_2_AWSIZE,
      xt_rsc_1_2_AWLEN, xt_rsc_1_2_AWADDR, xt_rsc_1_2_AWID, xt_rsc_triosy_1_2_lz,
      xt_rsc_1_3_s_tdone, xt_rsc_1_3_tr_write_done, xt_rsc_1_3_RREADY, xt_rsc_1_3_RVALID,
      xt_rsc_1_3_RUSER, xt_rsc_1_3_RLAST, xt_rsc_1_3_RRESP, xt_rsc_1_3_RDATA, xt_rsc_1_3_RID,
      xt_rsc_1_3_ARREADY, xt_rsc_1_3_ARVALID, xt_rsc_1_3_ARUSER, xt_rsc_1_3_ARREGION,
      xt_rsc_1_3_ARQOS, xt_rsc_1_3_ARPROT, xt_rsc_1_3_ARCACHE, xt_rsc_1_3_ARLOCK,
      xt_rsc_1_3_ARBURST, xt_rsc_1_3_ARSIZE, xt_rsc_1_3_ARLEN, xt_rsc_1_3_ARADDR,
      xt_rsc_1_3_ARID, xt_rsc_1_3_BREADY, xt_rsc_1_3_BVALID, xt_rsc_1_3_BUSER, xt_rsc_1_3_BRESP,
      xt_rsc_1_3_BID, xt_rsc_1_3_WREADY, xt_rsc_1_3_WVALID, xt_rsc_1_3_WUSER, xt_rsc_1_3_WLAST,
      xt_rsc_1_3_WSTRB, xt_rsc_1_3_WDATA, xt_rsc_1_3_AWREADY, xt_rsc_1_3_AWVALID,
      xt_rsc_1_3_AWUSER, xt_rsc_1_3_AWREGION, xt_rsc_1_3_AWQOS, xt_rsc_1_3_AWPROT,
      xt_rsc_1_3_AWCACHE, xt_rsc_1_3_AWLOCK, xt_rsc_1_3_AWBURST, xt_rsc_1_3_AWSIZE,
      xt_rsc_1_3_AWLEN, xt_rsc_1_3_AWADDR, xt_rsc_1_3_AWID, xt_rsc_triosy_1_3_lz,
      xt_rsc_1_4_s_tdone, xt_rsc_1_4_tr_write_done, xt_rsc_1_4_RREADY, xt_rsc_1_4_RVALID,
      xt_rsc_1_4_RUSER, xt_rsc_1_4_RLAST, xt_rsc_1_4_RRESP, xt_rsc_1_4_RDATA, xt_rsc_1_4_RID,
      xt_rsc_1_4_ARREADY, xt_rsc_1_4_ARVALID, xt_rsc_1_4_ARUSER, xt_rsc_1_4_ARREGION,
      xt_rsc_1_4_ARQOS, xt_rsc_1_4_ARPROT, xt_rsc_1_4_ARCACHE, xt_rsc_1_4_ARLOCK,
      xt_rsc_1_4_ARBURST, xt_rsc_1_4_ARSIZE, xt_rsc_1_4_ARLEN, xt_rsc_1_4_ARADDR,
      xt_rsc_1_4_ARID, xt_rsc_1_4_BREADY, xt_rsc_1_4_BVALID, xt_rsc_1_4_BUSER, xt_rsc_1_4_BRESP,
      xt_rsc_1_4_BID, xt_rsc_1_4_WREADY, xt_rsc_1_4_WVALID, xt_rsc_1_4_WUSER, xt_rsc_1_4_WLAST,
      xt_rsc_1_4_WSTRB, xt_rsc_1_4_WDATA, xt_rsc_1_4_AWREADY, xt_rsc_1_4_AWVALID,
      xt_rsc_1_4_AWUSER, xt_rsc_1_4_AWREGION, xt_rsc_1_4_AWQOS, xt_rsc_1_4_AWPROT,
      xt_rsc_1_4_AWCACHE, xt_rsc_1_4_AWLOCK, xt_rsc_1_4_AWBURST, xt_rsc_1_4_AWSIZE,
      xt_rsc_1_4_AWLEN, xt_rsc_1_4_AWADDR, xt_rsc_1_4_AWID, xt_rsc_triosy_1_4_lz,
      xt_rsc_1_5_s_tdone, xt_rsc_1_5_tr_write_done, xt_rsc_1_5_RREADY, xt_rsc_1_5_RVALID,
      xt_rsc_1_5_RUSER, xt_rsc_1_5_RLAST, xt_rsc_1_5_RRESP, xt_rsc_1_5_RDATA, xt_rsc_1_5_RID,
      xt_rsc_1_5_ARREADY, xt_rsc_1_5_ARVALID, xt_rsc_1_5_ARUSER, xt_rsc_1_5_ARREGION,
      xt_rsc_1_5_ARQOS, xt_rsc_1_5_ARPROT, xt_rsc_1_5_ARCACHE, xt_rsc_1_5_ARLOCK,
      xt_rsc_1_5_ARBURST, xt_rsc_1_5_ARSIZE, xt_rsc_1_5_ARLEN, xt_rsc_1_5_ARADDR,
      xt_rsc_1_5_ARID, xt_rsc_1_5_BREADY, xt_rsc_1_5_BVALID, xt_rsc_1_5_BUSER, xt_rsc_1_5_BRESP,
      xt_rsc_1_5_BID, xt_rsc_1_5_WREADY, xt_rsc_1_5_WVALID, xt_rsc_1_5_WUSER, xt_rsc_1_5_WLAST,
      xt_rsc_1_5_WSTRB, xt_rsc_1_5_WDATA, xt_rsc_1_5_AWREADY, xt_rsc_1_5_AWVALID,
      xt_rsc_1_5_AWUSER, xt_rsc_1_5_AWREGION, xt_rsc_1_5_AWQOS, xt_rsc_1_5_AWPROT,
      xt_rsc_1_5_AWCACHE, xt_rsc_1_5_AWLOCK, xt_rsc_1_5_AWBURST, xt_rsc_1_5_AWSIZE,
      xt_rsc_1_5_AWLEN, xt_rsc_1_5_AWADDR, xt_rsc_1_5_AWID, xt_rsc_triosy_1_5_lz,
      xt_rsc_1_6_s_tdone, xt_rsc_1_6_tr_write_done, xt_rsc_1_6_RREADY, xt_rsc_1_6_RVALID,
      xt_rsc_1_6_RUSER, xt_rsc_1_6_RLAST, xt_rsc_1_6_RRESP, xt_rsc_1_6_RDATA, xt_rsc_1_6_RID,
      xt_rsc_1_6_ARREADY, xt_rsc_1_6_ARVALID, xt_rsc_1_6_ARUSER, xt_rsc_1_6_ARREGION,
      xt_rsc_1_6_ARQOS, xt_rsc_1_6_ARPROT, xt_rsc_1_6_ARCACHE, xt_rsc_1_6_ARLOCK,
      xt_rsc_1_6_ARBURST, xt_rsc_1_6_ARSIZE, xt_rsc_1_6_ARLEN, xt_rsc_1_6_ARADDR,
      xt_rsc_1_6_ARID, xt_rsc_1_6_BREADY, xt_rsc_1_6_BVALID, xt_rsc_1_6_BUSER, xt_rsc_1_6_BRESP,
      xt_rsc_1_6_BID, xt_rsc_1_6_WREADY, xt_rsc_1_6_WVALID, xt_rsc_1_6_WUSER, xt_rsc_1_6_WLAST,
      xt_rsc_1_6_WSTRB, xt_rsc_1_6_WDATA, xt_rsc_1_6_AWREADY, xt_rsc_1_6_AWVALID,
      xt_rsc_1_6_AWUSER, xt_rsc_1_6_AWREGION, xt_rsc_1_6_AWQOS, xt_rsc_1_6_AWPROT,
      xt_rsc_1_6_AWCACHE, xt_rsc_1_6_AWLOCK, xt_rsc_1_6_AWBURST, xt_rsc_1_6_AWSIZE,
      xt_rsc_1_6_AWLEN, xt_rsc_1_6_AWADDR, xt_rsc_1_6_AWID, xt_rsc_triosy_1_6_lz,
      xt_rsc_1_7_s_tdone, xt_rsc_1_7_tr_write_done, xt_rsc_1_7_RREADY, xt_rsc_1_7_RVALID,
      xt_rsc_1_7_RUSER, xt_rsc_1_7_RLAST, xt_rsc_1_7_RRESP, xt_rsc_1_7_RDATA, xt_rsc_1_7_RID,
      xt_rsc_1_7_ARREADY, xt_rsc_1_7_ARVALID, xt_rsc_1_7_ARUSER, xt_rsc_1_7_ARREGION,
      xt_rsc_1_7_ARQOS, xt_rsc_1_7_ARPROT, xt_rsc_1_7_ARCACHE, xt_rsc_1_7_ARLOCK,
      xt_rsc_1_7_ARBURST, xt_rsc_1_7_ARSIZE, xt_rsc_1_7_ARLEN, xt_rsc_1_7_ARADDR,
      xt_rsc_1_7_ARID, xt_rsc_1_7_BREADY, xt_rsc_1_7_BVALID, xt_rsc_1_7_BUSER, xt_rsc_1_7_BRESP,
      xt_rsc_1_7_BID, xt_rsc_1_7_WREADY, xt_rsc_1_7_WVALID, xt_rsc_1_7_WUSER, xt_rsc_1_7_WLAST,
      xt_rsc_1_7_WSTRB, xt_rsc_1_7_WDATA, xt_rsc_1_7_AWREADY, xt_rsc_1_7_AWVALID,
      xt_rsc_1_7_AWUSER, xt_rsc_1_7_AWREGION, xt_rsc_1_7_AWQOS, xt_rsc_1_7_AWPROT,
      xt_rsc_1_7_AWCACHE, xt_rsc_1_7_AWLOCK, xt_rsc_1_7_AWBURST, xt_rsc_1_7_AWSIZE,
      xt_rsc_1_7_AWLEN, xt_rsc_1_7_AWADDR, xt_rsc_1_7_AWID, xt_rsc_triosy_1_7_lz,
      xt_rsc_1_8_s_tdone, xt_rsc_1_8_tr_write_done, xt_rsc_1_8_RREADY, xt_rsc_1_8_RVALID,
      xt_rsc_1_8_RUSER, xt_rsc_1_8_RLAST, xt_rsc_1_8_RRESP, xt_rsc_1_8_RDATA, xt_rsc_1_8_RID,
      xt_rsc_1_8_ARREADY, xt_rsc_1_8_ARVALID, xt_rsc_1_8_ARUSER, xt_rsc_1_8_ARREGION,
      xt_rsc_1_8_ARQOS, xt_rsc_1_8_ARPROT, xt_rsc_1_8_ARCACHE, xt_rsc_1_8_ARLOCK,
      xt_rsc_1_8_ARBURST, xt_rsc_1_8_ARSIZE, xt_rsc_1_8_ARLEN, xt_rsc_1_8_ARADDR,
      xt_rsc_1_8_ARID, xt_rsc_1_8_BREADY, xt_rsc_1_8_BVALID, xt_rsc_1_8_BUSER, xt_rsc_1_8_BRESP,
      xt_rsc_1_8_BID, xt_rsc_1_8_WREADY, xt_rsc_1_8_WVALID, xt_rsc_1_8_WUSER, xt_rsc_1_8_WLAST,
      xt_rsc_1_8_WSTRB, xt_rsc_1_8_WDATA, xt_rsc_1_8_AWREADY, xt_rsc_1_8_AWVALID,
      xt_rsc_1_8_AWUSER, xt_rsc_1_8_AWREGION, xt_rsc_1_8_AWQOS, xt_rsc_1_8_AWPROT,
      xt_rsc_1_8_AWCACHE, xt_rsc_1_8_AWLOCK, xt_rsc_1_8_AWBURST, xt_rsc_1_8_AWSIZE,
      xt_rsc_1_8_AWLEN, xt_rsc_1_8_AWADDR, xt_rsc_1_8_AWID, xt_rsc_triosy_1_8_lz,
      xt_rsc_1_9_s_tdone, xt_rsc_1_9_tr_write_done, xt_rsc_1_9_RREADY, xt_rsc_1_9_RVALID,
      xt_rsc_1_9_RUSER, xt_rsc_1_9_RLAST, xt_rsc_1_9_RRESP, xt_rsc_1_9_RDATA, xt_rsc_1_9_RID,
      xt_rsc_1_9_ARREADY, xt_rsc_1_9_ARVALID, xt_rsc_1_9_ARUSER, xt_rsc_1_9_ARREGION,
      xt_rsc_1_9_ARQOS, xt_rsc_1_9_ARPROT, xt_rsc_1_9_ARCACHE, xt_rsc_1_9_ARLOCK,
      xt_rsc_1_9_ARBURST, xt_rsc_1_9_ARSIZE, xt_rsc_1_9_ARLEN, xt_rsc_1_9_ARADDR,
      xt_rsc_1_9_ARID, xt_rsc_1_9_BREADY, xt_rsc_1_9_BVALID, xt_rsc_1_9_BUSER, xt_rsc_1_9_BRESP,
      xt_rsc_1_9_BID, xt_rsc_1_9_WREADY, xt_rsc_1_9_WVALID, xt_rsc_1_9_WUSER, xt_rsc_1_9_WLAST,
      xt_rsc_1_9_WSTRB, xt_rsc_1_9_WDATA, xt_rsc_1_9_AWREADY, xt_rsc_1_9_AWVALID,
      xt_rsc_1_9_AWUSER, xt_rsc_1_9_AWREGION, xt_rsc_1_9_AWQOS, xt_rsc_1_9_AWPROT,
      xt_rsc_1_9_AWCACHE, xt_rsc_1_9_AWLOCK, xt_rsc_1_9_AWBURST, xt_rsc_1_9_AWSIZE,
      xt_rsc_1_9_AWLEN, xt_rsc_1_9_AWADDR, xt_rsc_1_9_AWID, xt_rsc_triosy_1_9_lz,
      xt_rsc_1_10_s_tdone, xt_rsc_1_10_tr_write_done, xt_rsc_1_10_RREADY, xt_rsc_1_10_RVALID,
      xt_rsc_1_10_RUSER, xt_rsc_1_10_RLAST, xt_rsc_1_10_RRESP, xt_rsc_1_10_RDATA,
      xt_rsc_1_10_RID, xt_rsc_1_10_ARREADY, xt_rsc_1_10_ARVALID, xt_rsc_1_10_ARUSER,
      xt_rsc_1_10_ARREGION, xt_rsc_1_10_ARQOS, xt_rsc_1_10_ARPROT, xt_rsc_1_10_ARCACHE,
      xt_rsc_1_10_ARLOCK, xt_rsc_1_10_ARBURST, xt_rsc_1_10_ARSIZE, xt_rsc_1_10_ARLEN,
      xt_rsc_1_10_ARADDR, xt_rsc_1_10_ARID, xt_rsc_1_10_BREADY, xt_rsc_1_10_BVALID,
      xt_rsc_1_10_BUSER, xt_rsc_1_10_BRESP, xt_rsc_1_10_BID, xt_rsc_1_10_WREADY,
      xt_rsc_1_10_WVALID, xt_rsc_1_10_WUSER, xt_rsc_1_10_WLAST, xt_rsc_1_10_WSTRB,
      xt_rsc_1_10_WDATA, xt_rsc_1_10_AWREADY, xt_rsc_1_10_AWVALID, xt_rsc_1_10_AWUSER,
      xt_rsc_1_10_AWREGION, xt_rsc_1_10_AWQOS, xt_rsc_1_10_AWPROT, xt_rsc_1_10_AWCACHE,
      xt_rsc_1_10_AWLOCK, xt_rsc_1_10_AWBURST, xt_rsc_1_10_AWSIZE, xt_rsc_1_10_AWLEN,
      xt_rsc_1_10_AWADDR, xt_rsc_1_10_AWID, xt_rsc_triosy_1_10_lz, xt_rsc_1_11_s_tdone,
      xt_rsc_1_11_tr_write_done, xt_rsc_1_11_RREADY, xt_rsc_1_11_RVALID, xt_rsc_1_11_RUSER,
      xt_rsc_1_11_RLAST, xt_rsc_1_11_RRESP, xt_rsc_1_11_RDATA, xt_rsc_1_11_RID, xt_rsc_1_11_ARREADY,
      xt_rsc_1_11_ARVALID, xt_rsc_1_11_ARUSER, xt_rsc_1_11_ARREGION, xt_rsc_1_11_ARQOS,
      xt_rsc_1_11_ARPROT, xt_rsc_1_11_ARCACHE, xt_rsc_1_11_ARLOCK, xt_rsc_1_11_ARBURST,
      xt_rsc_1_11_ARSIZE, xt_rsc_1_11_ARLEN, xt_rsc_1_11_ARADDR, xt_rsc_1_11_ARID,
      xt_rsc_1_11_BREADY, xt_rsc_1_11_BVALID, xt_rsc_1_11_BUSER, xt_rsc_1_11_BRESP,
      xt_rsc_1_11_BID, xt_rsc_1_11_WREADY, xt_rsc_1_11_WVALID, xt_rsc_1_11_WUSER,
      xt_rsc_1_11_WLAST, xt_rsc_1_11_WSTRB, xt_rsc_1_11_WDATA, xt_rsc_1_11_AWREADY,
      xt_rsc_1_11_AWVALID, xt_rsc_1_11_AWUSER, xt_rsc_1_11_AWREGION, xt_rsc_1_11_AWQOS,
      xt_rsc_1_11_AWPROT, xt_rsc_1_11_AWCACHE, xt_rsc_1_11_AWLOCK, xt_rsc_1_11_AWBURST,
      xt_rsc_1_11_AWSIZE, xt_rsc_1_11_AWLEN, xt_rsc_1_11_AWADDR, xt_rsc_1_11_AWID,
      xt_rsc_triosy_1_11_lz, xt_rsc_1_12_s_tdone, xt_rsc_1_12_tr_write_done, xt_rsc_1_12_RREADY,
      xt_rsc_1_12_RVALID, xt_rsc_1_12_RUSER, xt_rsc_1_12_RLAST, xt_rsc_1_12_RRESP,
      xt_rsc_1_12_RDATA, xt_rsc_1_12_RID, xt_rsc_1_12_ARREADY, xt_rsc_1_12_ARVALID,
      xt_rsc_1_12_ARUSER, xt_rsc_1_12_ARREGION, xt_rsc_1_12_ARQOS, xt_rsc_1_12_ARPROT,
      xt_rsc_1_12_ARCACHE, xt_rsc_1_12_ARLOCK, xt_rsc_1_12_ARBURST, xt_rsc_1_12_ARSIZE,
      xt_rsc_1_12_ARLEN, xt_rsc_1_12_ARADDR, xt_rsc_1_12_ARID, xt_rsc_1_12_BREADY,
      xt_rsc_1_12_BVALID, xt_rsc_1_12_BUSER, xt_rsc_1_12_BRESP, xt_rsc_1_12_BID,
      xt_rsc_1_12_WREADY, xt_rsc_1_12_WVALID, xt_rsc_1_12_WUSER, xt_rsc_1_12_WLAST,
      xt_rsc_1_12_WSTRB, xt_rsc_1_12_WDATA, xt_rsc_1_12_AWREADY, xt_rsc_1_12_AWVALID,
      xt_rsc_1_12_AWUSER, xt_rsc_1_12_AWREGION, xt_rsc_1_12_AWQOS, xt_rsc_1_12_AWPROT,
      xt_rsc_1_12_AWCACHE, xt_rsc_1_12_AWLOCK, xt_rsc_1_12_AWBURST, xt_rsc_1_12_AWSIZE,
      xt_rsc_1_12_AWLEN, xt_rsc_1_12_AWADDR, xt_rsc_1_12_AWID, xt_rsc_triosy_1_12_lz,
      xt_rsc_1_13_s_tdone, xt_rsc_1_13_tr_write_done, xt_rsc_1_13_RREADY, xt_rsc_1_13_RVALID,
      xt_rsc_1_13_RUSER, xt_rsc_1_13_RLAST, xt_rsc_1_13_RRESP, xt_rsc_1_13_RDATA,
      xt_rsc_1_13_RID, xt_rsc_1_13_ARREADY, xt_rsc_1_13_ARVALID, xt_rsc_1_13_ARUSER,
      xt_rsc_1_13_ARREGION, xt_rsc_1_13_ARQOS, xt_rsc_1_13_ARPROT, xt_rsc_1_13_ARCACHE,
      xt_rsc_1_13_ARLOCK, xt_rsc_1_13_ARBURST, xt_rsc_1_13_ARSIZE, xt_rsc_1_13_ARLEN,
      xt_rsc_1_13_ARADDR, xt_rsc_1_13_ARID, xt_rsc_1_13_BREADY, xt_rsc_1_13_BVALID,
      xt_rsc_1_13_BUSER, xt_rsc_1_13_BRESP, xt_rsc_1_13_BID, xt_rsc_1_13_WREADY,
      xt_rsc_1_13_WVALID, xt_rsc_1_13_WUSER, xt_rsc_1_13_WLAST, xt_rsc_1_13_WSTRB,
      xt_rsc_1_13_WDATA, xt_rsc_1_13_AWREADY, xt_rsc_1_13_AWVALID, xt_rsc_1_13_AWUSER,
      xt_rsc_1_13_AWREGION, xt_rsc_1_13_AWQOS, xt_rsc_1_13_AWPROT, xt_rsc_1_13_AWCACHE,
      xt_rsc_1_13_AWLOCK, xt_rsc_1_13_AWBURST, xt_rsc_1_13_AWSIZE, xt_rsc_1_13_AWLEN,
      xt_rsc_1_13_AWADDR, xt_rsc_1_13_AWID, xt_rsc_triosy_1_13_lz, xt_rsc_1_14_s_tdone,
      xt_rsc_1_14_tr_write_done, xt_rsc_1_14_RREADY, xt_rsc_1_14_RVALID, xt_rsc_1_14_RUSER,
      xt_rsc_1_14_RLAST, xt_rsc_1_14_RRESP, xt_rsc_1_14_RDATA, xt_rsc_1_14_RID, xt_rsc_1_14_ARREADY,
      xt_rsc_1_14_ARVALID, xt_rsc_1_14_ARUSER, xt_rsc_1_14_ARREGION, xt_rsc_1_14_ARQOS,
      xt_rsc_1_14_ARPROT, xt_rsc_1_14_ARCACHE, xt_rsc_1_14_ARLOCK, xt_rsc_1_14_ARBURST,
      xt_rsc_1_14_ARSIZE, xt_rsc_1_14_ARLEN, xt_rsc_1_14_ARADDR, xt_rsc_1_14_ARID,
      xt_rsc_1_14_BREADY, xt_rsc_1_14_BVALID, xt_rsc_1_14_BUSER, xt_rsc_1_14_BRESP,
      xt_rsc_1_14_BID, xt_rsc_1_14_WREADY, xt_rsc_1_14_WVALID, xt_rsc_1_14_WUSER,
      xt_rsc_1_14_WLAST, xt_rsc_1_14_WSTRB, xt_rsc_1_14_WDATA, xt_rsc_1_14_AWREADY,
      xt_rsc_1_14_AWVALID, xt_rsc_1_14_AWUSER, xt_rsc_1_14_AWREGION, xt_rsc_1_14_AWQOS,
      xt_rsc_1_14_AWPROT, xt_rsc_1_14_AWCACHE, xt_rsc_1_14_AWLOCK, xt_rsc_1_14_AWBURST,
      xt_rsc_1_14_AWSIZE, xt_rsc_1_14_AWLEN, xt_rsc_1_14_AWADDR, xt_rsc_1_14_AWID,
      xt_rsc_triosy_1_14_lz, xt_rsc_1_15_s_tdone, xt_rsc_1_15_tr_write_done, xt_rsc_1_15_RREADY,
      xt_rsc_1_15_RVALID, xt_rsc_1_15_RUSER, xt_rsc_1_15_RLAST, xt_rsc_1_15_RRESP,
      xt_rsc_1_15_RDATA, xt_rsc_1_15_RID, xt_rsc_1_15_ARREADY, xt_rsc_1_15_ARVALID,
      xt_rsc_1_15_ARUSER, xt_rsc_1_15_ARREGION, xt_rsc_1_15_ARQOS, xt_rsc_1_15_ARPROT,
      xt_rsc_1_15_ARCACHE, xt_rsc_1_15_ARLOCK, xt_rsc_1_15_ARBURST, xt_rsc_1_15_ARSIZE,
      xt_rsc_1_15_ARLEN, xt_rsc_1_15_ARADDR, xt_rsc_1_15_ARID, xt_rsc_1_15_BREADY,
      xt_rsc_1_15_BVALID, xt_rsc_1_15_BUSER, xt_rsc_1_15_BRESP, xt_rsc_1_15_BID,
      xt_rsc_1_15_WREADY, xt_rsc_1_15_WVALID, xt_rsc_1_15_WUSER, xt_rsc_1_15_WLAST,
      xt_rsc_1_15_WSTRB, xt_rsc_1_15_WDATA, xt_rsc_1_15_AWREADY, xt_rsc_1_15_AWVALID,
      xt_rsc_1_15_AWUSER, xt_rsc_1_15_AWREGION, xt_rsc_1_15_AWQOS, xt_rsc_1_15_AWPROT,
      xt_rsc_1_15_AWCACHE, xt_rsc_1_15_AWLOCK, xt_rsc_1_15_AWBURST, xt_rsc_1_15_AWSIZE,
      xt_rsc_1_15_AWLEN, xt_rsc_1_15_AWADDR, xt_rsc_1_15_AWID, xt_rsc_triosy_1_15_lz,
      xt_rsc_1_16_s_tdone, xt_rsc_1_16_tr_write_done, xt_rsc_1_16_RREADY, xt_rsc_1_16_RVALID,
      xt_rsc_1_16_RUSER, xt_rsc_1_16_RLAST, xt_rsc_1_16_RRESP, xt_rsc_1_16_RDATA,
      xt_rsc_1_16_RID, xt_rsc_1_16_ARREADY, xt_rsc_1_16_ARVALID, xt_rsc_1_16_ARUSER,
      xt_rsc_1_16_ARREGION, xt_rsc_1_16_ARQOS, xt_rsc_1_16_ARPROT, xt_rsc_1_16_ARCACHE,
      xt_rsc_1_16_ARLOCK, xt_rsc_1_16_ARBURST, xt_rsc_1_16_ARSIZE, xt_rsc_1_16_ARLEN,
      xt_rsc_1_16_ARADDR, xt_rsc_1_16_ARID, xt_rsc_1_16_BREADY, xt_rsc_1_16_BVALID,
      xt_rsc_1_16_BUSER, xt_rsc_1_16_BRESP, xt_rsc_1_16_BID, xt_rsc_1_16_WREADY,
      xt_rsc_1_16_WVALID, xt_rsc_1_16_WUSER, xt_rsc_1_16_WLAST, xt_rsc_1_16_WSTRB,
      xt_rsc_1_16_WDATA, xt_rsc_1_16_AWREADY, xt_rsc_1_16_AWVALID, xt_rsc_1_16_AWUSER,
      xt_rsc_1_16_AWREGION, xt_rsc_1_16_AWQOS, xt_rsc_1_16_AWPROT, xt_rsc_1_16_AWCACHE,
      xt_rsc_1_16_AWLOCK, xt_rsc_1_16_AWBURST, xt_rsc_1_16_AWSIZE, xt_rsc_1_16_AWLEN,
      xt_rsc_1_16_AWADDR, xt_rsc_1_16_AWID, xt_rsc_triosy_1_16_lz, xt_rsc_1_17_s_tdone,
      xt_rsc_1_17_tr_write_done, xt_rsc_1_17_RREADY, xt_rsc_1_17_RVALID, xt_rsc_1_17_RUSER,
      xt_rsc_1_17_RLAST, xt_rsc_1_17_RRESP, xt_rsc_1_17_RDATA, xt_rsc_1_17_RID, xt_rsc_1_17_ARREADY,
      xt_rsc_1_17_ARVALID, xt_rsc_1_17_ARUSER, xt_rsc_1_17_ARREGION, xt_rsc_1_17_ARQOS,
      xt_rsc_1_17_ARPROT, xt_rsc_1_17_ARCACHE, xt_rsc_1_17_ARLOCK, xt_rsc_1_17_ARBURST,
      xt_rsc_1_17_ARSIZE, xt_rsc_1_17_ARLEN, xt_rsc_1_17_ARADDR, xt_rsc_1_17_ARID,
      xt_rsc_1_17_BREADY, xt_rsc_1_17_BVALID, xt_rsc_1_17_BUSER, xt_rsc_1_17_BRESP,
      xt_rsc_1_17_BID, xt_rsc_1_17_WREADY, xt_rsc_1_17_WVALID, xt_rsc_1_17_WUSER,
      xt_rsc_1_17_WLAST, xt_rsc_1_17_WSTRB, xt_rsc_1_17_WDATA, xt_rsc_1_17_AWREADY,
      xt_rsc_1_17_AWVALID, xt_rsc_1_17_AWUSER, xt_rsc_1_17_AWREGION, xt_rsc_1_17_AWQOS,
      xt_rsc_1_17_AWPROT, xt_rsc_1_17_AWCACHE, xt_rsc_1_17_AWLOCK, xt_rsc_1_17_AWBURST,
      xt_rsc_1_17_AWSIZE, xt_rsc_1_17_AWLEN, xt_rsc_1_17_AWADDR, xt_rsc_1_17_AWID,
      xt_rsc_triosy_1_17_lz, xt_rsc_1_18_s_tdone, xt_rsc_1_18_tr_write_done, xt_rsc_1_18_RREADY,
      xt_rsc_1_18_RVALID, xt_rsc_1_18_RUSER, xt_rsc_1_18_RLAST, xt_rsc_1_18_RRESP,
      xt_rsc_1_18_RDATA, xt_rsc_1_18_RID, xt_rsc_1_18_ARREADY, xt_rsc_1_18_ARVALID,
      xt_rsc_1_18_ARUSER, xt_rsc_1_18_ARREGION, xt_rsc_1_18_ARQOS, xt_rsc_1_18_ARPROT,
      xt_rsc_1_18_ARCACHE, xt_rsc_1_18_ARLOCK, xt_rsc_1_18_ARBURST, xt_rsc_1_18_ARSIZE,
      xt_rsc_1_18_ARLEN, xt_rsc_1_18_ARADDR, xt_rsc_1_18_ARID, xt_rsc_1_18_BREADY,
      xt_rsc_1_18_BVALID, xt_rsc_1_18_BUSER, xt_rsc_1_18_BRESP, xt_rsc_1_18_BID,
      xt_rsc_1_18_WREADY, xt_rsc_1_18_WVALID, xt_rsc_1_18_WUSER, xt_rsc_1_18_WLAST,
      xt_rsc_1_18_WSTRB, xt_rsc_1_18_WDATA, xt_rsc_1_18_AWREADY, xt_rsc_1_18_AWVALID,
      xt_rsc_1_18_AWUSER, xt_rsc_1_18_AWREGION, xt_rsc_1_18_AWQOS, xt_rsc_1_18_AWPROT,
      xt_rsc_1_18_AWCACHE, xt_rsc_1_18_AWLOCK, xt_rsc_1_18_AWBURST, xt_rsc_1_18_AWSIZE,
      xt_rsc_1_18_AWLEN, xt_rsc_1_18_AWADDR, xt_rsc_1_18_AWID, xt_rsc_triosy_1_18_lz,
      xt_rsc_1_19_s_tdone, xt_rsc_1_19_tr_write_done, xt_rsc_1_19_RREADY, xt_rsc_1_19_RVALID,
      xt_rsc_1_19_RUSER, xt_rsc_1_19_RLAST, xt_rsc_1_19_RRESP, xt_rsc_1_19_RDATA,
      xt_rsc_1_19_RID, xt_rsc_1_19_ARREADY, xt_rsc_1_19_ARVALID, xt_rsc_1_19_ARUSER,
      xt_rsc_1_19_ARREGION, xt_rsc_1_19_ARQOS, xt_rsc_1_19_ARPROT, xt_rsc_1_19_ARCACHE,
      xt_rsc_1_19_ARLOCK, xt_rsc_1_19_ARBURST, xt_rsc_1_19_ARSIZE, xt_rsc_1_19_ARLEN,
      xt_rsc_1_19_ARADDR, xt_rsc_1_19_ARID, xt_rsc_1_19_BREADY, xt_rsc_1_19_BVALID,
      xt_rsc_1_19_BUSER, xt_rsc_1_19_BRESP, xt_rsc_1_19_BID, xt_rsc_1_19_WREADY,
      xt_rsc_1_19_WVALID, xt_rsc_1_19_WUSER, xt_rsc_1_19_WLAST, xt_rsc_1_19_WSTRB,
      xt_rsc_1_19_WDATA, xt_rsc_1_19_AWREADY, xt_rsc_1_19_AWVALID, xt_rsc_1_19_AWUSER,
      xt_rsc_1_19_AWREGION, xt_rsc_1_19_AWQOS, xt_rsc_1_19_AWPROT, xt_rsc_1_19_AWCACHE,
      xt_rsc_1_19_AWLOCK, xt_rsc_1_19_AWBURST, xt_rsc_1_19_AWSIZE, xt_rsc_1_19_AWLEN,
      xt_rsc_1_19_AWADDR, xt_rsc_1_19_AWID, xt_rsc_triosy_1_19_lz, xt_rsc_1_20_s_tdone,
      xt_rsc_1_20_tr_write_done, xt_rsc_1_20_RREADY, xt_rsc_1_20_RVALID, xt_rsc_1_20_RUSER,
      xt_rsc_1_20_RLAST, xt_rsc_1_20_RRESP, xt_rsc_1_20_RDATA, xt_rsc_1_20_RID, xt_rsc_1_20_ARREADY,
      xt_rsc_1_20_ARVALID, xt_rsc_1_20_ARUSER, xt_rsc_1_20_ARREGION, xt_rsc_1_20_ARQOS,
      xt_rsc_1_20_ARPROT, xt_rsc_1_20_ARCACHE, xt_rsc_1_20_ARLOCK, xt_rsc_1_20_ARBURST,
      xt_rsc_1_20_ARSIZE, xt_rsc_1_20_ARLEN, xt_rsc_1_20_ARADDR, xt_rsc_1_20_ARID,
      xt_rsc_1_20_BREADY, xt_rsc_1_20_BVALID, xt_rsc_1_20_BUSER, xt_rsc_1_20_BRESP,
      xt_rsc_1_20_BID, xt_rsc_1_20_WREADY, xt_rsc_1_20_WVALID, xt_rsc_1_20_WUSER,
      xt_rsc_1_20_WLAST, xt_rsc_1_20_WSTRB, xt_rsc_1_20_WDATA, xt_rsc_1_20_AWREADY,
      xt_rsc_1_20_AWVALID, xt_rsc_1_20_AWUSER, xt_rsc_1_20_AWREGION, xt_rsc_1_20_AWQOS,
      xt_rsc_1_20_AWPROT, xt_rsc_1_20_AWCACHE, xt_rsc_1_20_AWLOCK, xt_rsc_1_20_AWBURST,
      xt_rsc_1_20_AWSIZE, xt_rsc_1_20_AWLEN, xt_rsc_1_20_AWADDR, xt_rsc_1_20_AWID,
      xt_rsc_triosy_1_20_lz, xt_rsc_1_21_s_tdone, xt_rsc_1_21_tr_write_done, xt_rsc_1_21_RREADY,
      xt_rsc_1_21_RVALID, xt_rsc_1_21_RUSER, xt_rsc_1_21_RLAST, xt_rsc_1_21_RRESP,
      xt_rsc_1_21_RDATA, xt_rsc_1_21_RID, xt_rsc_1_21_ARREADY, xt_rsc_1_21_ARVALID,
      xt_rsc_1_21_ARUSER, xt_rsc_1_21_ARREGION, xt_rsc_1_21_ARQOS, xt_rsc_1_21_ARPROT,
      xt_rsc_1_21_ARCACHE, xt_rsc_1_21_ARLOCK, xt_rsc_1_21_ARBURST, xt_rsc_1_21_ARSIZE,
      xt_rsc_1_21_ARLEN, xt_rsc_1_21_ARADDR, xt_rsc_1_21_ARID, xt_rsc_1_21_BREADY,
      xt_rsc_1_21_BVALID, xt_rsc_1_21_BUSER, xt_rsc_1_21_BRESP, xt_rsc_1_21_BID,
      xt_rsc_1_21_WREADY, xt_rsc_1_21_WVALID, xt_rsc_1_21_WUSER, xt_rsc_1_21_WLAST,
      xt_rsc_1_21_WSTRB, xt_rsc_1_21_WDATA, xt_rsc_1_21_AWREADY, xt_rsc_1_21_AWVALID,
      xt_rsc_1_21_AWUSER, xt_rsc_1_21_AWREGION, xt_rsc_1_21_AWQOS, xt_rsc_1_21_AWPROT,
      xt_rsc_1_21_AWCACHE, xt_rsc_1_21_AWLOCK, xt_rsc_1_21_AWBURST, xt_rsc_1_21_AWSIZE,
      xt_rsc_1_21_AWLEN, xt_rsc_1_21_AWADDR, xt_rsc_1_21_AWID, xt_rsc_triosy_1_21_lz,
      xt_rsc_1_22_s_tdone, xt_rsc_1_22_tr_write_done, xt_rsc_1_22_RREADY, xt_rsc_1_22_RVALID,
      xt_rsc_1_22_RUSER, xt_rsc_1_22_RLAST, xt_rsc_1_22_RRESP, xt_rsc_1_22_RDATA,
      xt_rsc_1_22_RID, xt_rsc_1_22_ARREADY, xt_rsc_1_22_ARVALID, xt_rsc_1_22_ARUSER,
      xt_rsc_1_22_ARREGION, xt_rsc_1_22_ARQOS, xt_rsc_1_22_ARPROT, xt_rsc_1_22_ARCACHE,
      xt_rsc_1_22_ARLOCK, xt_rsc_1_22_ARBURST, xt_rsc_1_22_ARSIZE, xt_rsc_1_22_ARLEN,
      xt_rsc_1_22_ARADDR, xt_rsc_1_22_ARID, xt_rsc_1_22_BREADY, xt_rsc_1_22_BVALID,
      xt_rsc_1_22_BUSER, xt_rsc_1_22_BRESP, xt_rsc_1_22_BID, xt_rsc_1_22_WREADY,
      xt_rsc_1_22_WVALID, xt_rsc_1_22_WUSER, xt_rsc_1_22_WLAST, xt_rsc_1_22_WSTRB,
      xt_rsc_1_22_WDATA, xt_rsc_1_22_AWREADY, xt_rsc_1_22_AWVALID, xt_rsc_1_22_AWUSER,
      xt_rsc_1_22_AWREGION, xt_rsc_1_22_AWQOS, xt_rsc_1_22_AWPROT, xt_rsc_1_22_AWCACHE,
      xt_rsc_1_22_AWLOCK, xt_rsc_1_22_AWBURST, xt_rsc_1_22_AWSIZE, xt_rsc_1_22_AWLEN,
      xt_rsc_1_22_AWADDR, xt_rsc_1_22_AWID, xt_rsc_triosy_1_22_lz, xt_rsc_1_23_s_tdone,
      xt_rsc_1_23_tr_write_done, xt_rsc_1_23_RREADY, xt_rsc_1_23_RVALID, xt_rsc_1_23_RUSER,
      xt_rsc_1_23_RLAST, xt_rsc_1_23_RRESP, xt_rsc_1_23_RDATA, xt_rsc_1_23_RID, xt_rsc_1_23_ARREADY,
      xt_rsc_1_23_ARVALID, xt_rsc_1_23_ARUSER, xt_rsc_1_23_ARREGION, xt_rsc_1_23_ARQOS,
      xt_rsc_1_23_ARPROT, xt_rsc_1_23_ARCACHE, xt_rsc_1_23_ARLOCK, xt_rsc_1_23_ARBURST,
      xt_rsc_1_23_ARSIZE, xt_rsc_1_23_ARLEN, xt_rsc_1_23_ARADDR, xt_rsc_1_23_ARID,
      xt_rsc_1_23_BREADY, xt_rsc_1_23_BVALID, xt_rsc_1_23_BUSER, xt_rsc_1_23_BRESP,
      xt_rsc_1_23_BID, xt_rsc_1_23_WREADY, xt_rsc_1_23_WVALID, xt_rsc_1_23_WUSER,
      xt_rsc_1_23_WLAST, xt_rsc_1_23_WSTRB, xt_rsc_1_23_WDATA, xt_rsc_1_23_AWREADY,
      xt_rsc_1_23_AWVALID, xt_rsc_1_23_AWUSER, xt_rsc_1_23_AWREGION, xt_rsc_1_23_AWQOS,
      xt_rsc_1_23_AWPROT, xt_rsc_1_23_AWCACHE, xt_rsc_1_23_AWLOCK, xt_rsc_1_23_AWBURST,
      xt_rsc_1_23_AWSIZE, xt_rsc_1_23_AWLEN, xt_rsc_1_23_AWADDR, xt_rsc_1_23_AWID,
      xt_rsc_triosy_1_23_lz, xt_rsc_1_24_s_tdone, xt_rsc_1_24_tr_write_done, xt_rsc_1_24_RREADY,
      xt_rsc_1_24_RVALID, xt_rsc_1_24_RUSER, xt_rsc_1_24_RLAST, xt_rsc_1_24_RRESP,
      xt_rsc_1_24_RDATA, xt_rsc_1_24_RID, xt_rsc_1_24_ARREADY, xt_rsc_1_24_ARVALID,
      xt_rsc_1_24_ARUSER, xt_rsc_1_24_ARREGION, xt_rsc_1_24_ARQOS, xt_rsc_1_24_ARPROT,
      xt_rsc_1_24_ARCACHE, xt_rsc_1_24_ARLOCK, xt_rsc_1_24_ARBURST, xt_rsc_1_24_ARSIZE,
      xt_rsc_1_24_ARLEN, xt_rsc_1_24_ARADDR, xt_rsc_1_24_ARID, xt_rsc_1_24_BREADY,
      xt_rsc_1_24_BVALID, xt_rsc_1_24_BUSER, xt_rsc_1_24_BRESP, xt_rsc_1_24_BID,
      xt_rsc_1_24_WREADY, xt_rsc_1_24_WVALID, xt_rsc_1_24_WUSER, xt_rsc_1_24_WLAST,
      xt_rsc_1_24_WSTRB, xt_rsc_1_24_WDATA, xt_rsc_1_24_AWREADY, xt_rsc_1_24_AWVALID,
      xt_rsc_1_24_AWUSER, xt_rsc_1_24_AWREGION, xt_rsc_1_24_AWQOS, xt_rsc_1_24_AWPROT,
      xt_rsc_1_24_AWCACHE, xt_rsc_1_24_AWLOCK, xt_rsc_1_24_AWBURST, xt_rsc_1_24_AWSIZE,
      xt_rsc_1_24_AWLEN, xt_rsc_1_24_AWADDR, xt_rsc_1_24_AWID, xt_rsc_triosy_1_24_lz,
      xt_rsc_1_25_s_tdone, xt_rsc_1_25_tr_write_done, xt_rsc_1_25_RREADY, xt_rsc_1_25_RVALID,
      xt_rsc_1_25_RUSER, xt_rsc_1_25_RLAST, xt_rsc_1_25_RRESP, xt_rsc_1_25_RDATA,
      xt_rsc_1_25_RID, xt_rsc_1_25_ARREADY, xt_rsc_1_25_ARVALID, xt_rsc_1_25_ARUSER,
      xt_rsc_1_25_ARREGION, xt_rsc_1_25_ARQOS, xt_rsc_1_25_ARPROT, xt_rsc_1_25_ARCACHE,
      xt_rsc_1_25_ARLOCK, xt_rsc_1_25_ARBURST, xt_rsc_1_25_ARSIZE, xt_rsc_1_25_ARLEN,
      xt_rsc_1_25_ARADDR, xt_rsc_1_25_ARID, xt_rsc_1_25_BREADY, xt_rsc_1_25_BVALID,
      xt_rsc_1_25_BUSER, xt_rsc_1_25_BRESP, xt_rsc_1_25_BID, xt_rsc_1_25_WREADY,
      xt_rsc_1_25_WVALID, xt_rsc_1_25_WUSER, xt_rsc_1_25_WLAST, xt_rsc_1_25_WSTRB,
      xt_rsc_1_25_WDATA, xt_rsc_1_25_AWREADY, xt_rsc_1_25_AWVALID, xt_rsc_1_25_AWUSER,
      xt_rsc_1_25_AWREGION, xt_rsc_1_25_AWQOS, xt_rsc_1_25_AWPROT, xt_rsc_1_25_AWCACHE,
      xt_rsc_1_25_AWLOCK, xt_rsc_1_25_AWBURST, xt_rsc_1_25_AWSIZE, xt_rsc_1_25_AWLEN,
      xt_rsc_1_25_AWADDR, xt_rsc_1_25_AWID, xt_rsc_triosy_1_25_lz, xt_rsc_1_26_s_tdone,
      xt_rsc_1_26_tr_write_done, xt_rsc_1_26_RREADY, xt_rsc_1_26_RVALID, xt_rsc_1_26_RUSER,
      xt_rsc_1_26_RLAST, xt_rsc_1_26_RRESP, xt_rsc_1_26_RDATA, xt_rsc_1_26_RID, xt_rsc_1_26_ARREADY,
      xt_rsc_1_26_ARVALID, xt_rsc_1_26_ARUSER, xt_rsc_1_26_ARREGION, xt_rsc_1_26_ARQOS,
      xt_rsc_1_26_ARPROT, xt_rsc_1_26_ARCACHE, xt_rsc_1_26_ARLOCK, xt_rsc_1_26_ARBURST,
      xt_rsc_1_26_ARSIZE, xt_rsc_1_26_ARLEN, xt_rsc_1_26_ARADDR, xt_rsc_1_26_ARID,
      xt_rsc_1_26_BREADY, xt_rsc_1_26_BVALID, xt_rsc_1_26_BUSER, xt_rsc_1_26_BRESP,
      xt_rsc_1_26_BID, xt_rsc_1_26_WREADY, xt_rsc_1_26_WVALID, xt_rsc_1_26_WUSER,
      xt_rsc_1_26_WLAST, xt_rsc_1_26_WSTRB, xt_rsc_1_26_WDATA, xt_rsc_1_26_AWREADY,
      xt_rsc_1_26_AWVALID, xt_rsc_1_26_AWUSER, xt_rsc_1_26_AWREGION, xt_rsc_1_26_AWQOS,
      xt_rsc_1_26_AWPROT, xt_rsc_1_26_AWCACHE, xt_rsc_1_26_AWLOCK, xt_rsc_1_26_AWBURST,
      xt_rsc_1_26_AWSIZE, xt_rsc_1_26_AWLEN, xt_rsc_1_26_AWADDR, xt_rsc_1_26_AWID,
      xt_rsc_triosy_1_26_lz, xt_rsc_1_27_s_tdone, xt_rsc_1_27_tr_write_done, xt_rsc_1_27_RREADY,
      xt_rsc_1_27_RVALID, xt_rsc_1_27_RUSER, xt_rsc_1_27_RLAST, xt_rsc_1_27_RRESP,
      xt_rsc_1_27_RDATA, xt_rsc_1_27_RID, xt_rsc_1_27_ARREADY, xt_rsc_1_27_ARVALID,
      xt_rsc_1_27_ARUSER, xt_rsc_1_27_ARREGION, xt_rsc_1_27_ARQOS, xt_rsc_1_27_ARPROT,
      xt_rsc_1_27_ARCACHE, xt_rsc_1_27_ARLOCK, xt_rsc_1_27_ARBURST, xt_rsc_1_27_ARSIZE,
      xt_rsc_1_27_ARLEN, xt_rsc_1_27_ARADDR, xt_rsc_1_27_ARID, xt_rsc_1_27_BREADY,
      xt_rsc_1_27_BVALID, xt_rsc_1_27_BUSER, xt_rsc_1_27_BRESP, xt_rsc_1_27_BID,
      xt_rsc_1_27_WREADY, xt_rsc_1_27_WVALID, xt_rsc_1_27_WUSER, xt_rsc_1_27_WLAST,
      xt_rsc_1_27_WSTRB, xt_rsc_1_27_WDATA, xt_rsc_1_27_AWREADY, xt_rsc_1_27_AWVALID,
      xt_rsc_1_27_AWUSER, xt_rsc_1_27_AWREGION, xt_rsc_1_27_AWQOS, xt_rsc_1_27_AWPROT,
      xt_rsc_1_27_AWCACHE, xt_rsc_1_27_AWLOCK, xt_rsc_1_27_AWBURST, xt_rsc_1_27_AWSIZE,
      xt_rsc_1_27_AWLEN, xt_rsc_1_27_AWADDR, xt_rsc_1_27_AWID, xt_rsc_triosy_1_27_lz,
      xt_rsc_1_28_s_tdone, xt_rsc_1_28_tr_write_done, xt_rsc_1_28_RREADY, xt_rsc_1_28_RVALID,
      xt_rsc_1_28_RUSER, xt_rsc_1_28_RLAST, xt_rsc_1_28_RRESP, xt_rsc_1_28_RDATA,
      xt_rsc_1_28_RID, xt_rsc_1_28_ARREADY, xt_rsc_1_28_ARVALID, xt_rsc_1_28_ARUSER,
      xt_rsc_1_28_ARREGION, xt_rsc_1_28_ARQOS, xt_rsc_1_28_ARPROT, xt_rsc_1_28_ARCACHE,
      xt_rsc_1_28_ARLOCK, xt_rsc_1_28_ARBURST, xt_rsc_1_28_ARSIZE, xt_rsc_1_28_ARLEN,
      xt_rsc_1_28_ARADDR, xt_rsc_1_28_ARID, xt_rsc_1_28_BREADY, xt_rsc_1_28_BVALID,
      xt_rsc_1_28_BUSER, xt_rsc_1_28_BRESP, xt_rsc_1_28_BID, xt_rsc_1_28_WREADY,
      xt_rsc_1_28_WVALID, xt_rsc_1_28_WUSER, xt_rsc_1_28_WLAST, xt_rsc_1_28_WSTRB,
      xt_rsc_1_28_WDATA, xt_rsc_1_28_AWREADY, xt_rsc_1_28_AWVALID, xt_rsc_1_28_AWUSER,
      xt_rsc_1_28_AWREGION, xt_rsc_1_28_AWQOS, xt_rsc_1_28_AWPROT, xt_rsc_1_28_AWCACHE,
      xt_rsc_1_28_AWLOCK, xt_rsc_1_28_AWBURST, xt_rsc_1_28_AWSIZE, xt_rsc_1_28_AWLEN,
      xt_rsc_1_28_AWADDR, xt_rsc_1_28_AWID, xt_rsc_triosy_1_28_lz, xt_rsc_1_29_s_tdone,
      xt_rsc_1_29_tr_write_done, xt_rsc_1_29_RREADY, xt_rsc_1_29_RVALID, xt_rsc_1_29_RUSER,
      xt_rsc_1_29_RLAST, xt_rsc_1_29_RRESP, xt_rsc_1_29_RDATA, xt_rsc_1_29_RID, xt_rsc_1_29_ARREADY,
      xt_rsc_1_29_ARVALID, xt_rsc_1_29_ARUSER, xt_rsc_1_29_ARREGION, xt_rsc_1_29_ARQOS,
      xt_rsc_1_29_ARPROT, xt_rsc_1_29_ARCACHE, xt_rsc_1_29_ARLOCK, xt_rsc_1_29_ARBURST,
      xt_rsc_1_29_ARSIZE, xt_rsc_1_29_ARLEN, xt_rsc_1_29_ARADDR, xt_rsc_1_29_ARID,
      xt_rsc_1_29_BREADY, xt_rsc_1_29_BVALID, xt_rsc_1_29_BUSER, xt_rsc_1_29_BRESP,
      xt_rsc_1_29_BID, xt_rsc_1_29_WREADY, xt_rsc_1_29_WVALID, xt_rsc_1_29_WUSER,
      xt_rsc_1_29_WLAST, xt_rsc_1_29_WSTRB, xt_rsc_1_29_WDATA, xt_rsc_1_29_AWREADY,
      xt_rsc_1_29_AWVALID, xt_rsc_1_29_AWUSER, xt_rsc_1_29_AWREGION, xt_rsc_1_29_AWQOS,
      xt_rsc_1_29_AWPROT, xt_rsc_1_29_AWCACHE, xt_rsc_1_29_AWLOCK, xt_rsc_1_29_AWBURST,
      xt_rsc_1_29_AWSIZE, xt_rsc_1_29_AWLEN, xt_rsc_1_29_AWADDR, xt_rsc_1_29_AWID,
      xt_rsc_triosy_1_29_lz, xt_rsc_1_30_s_tdone, xt_rsc_1_30_tr_write_done, xt_rsc_1_30_RREADY,
      xt_rsc_1_30_RVALID, xt_rsc_1_30_RUSER, xt_rsc_1_30_RLAST, xt_rsc_1_30_RRESP,
      xt_rsc_1_30_RDATA, xt_rsc_1_30_RID, xt_rsc_1_30_ARREADY, xt_rsc_1_30_ARVALID,
      xt_rsc_1_30_ARUSER, xt_rsc_1_30_ARREGION, xt_rsc_1_30_ARQOS, xt_rsc_1_30_ARPROT,
      xt_rsc_1_30_ARCACHE, xt_rsc_1_30_ARLOCK, xt_rsc_1_30_ARBURST, xt_rsc_1_30_ARSIZE,
      xt_rsc_1_30_ARLEN, xt_rsc_1_30_ARADDR, xt_rsc_1_30_ARID, xt_rsc_1_30_BREADY,
      xt_rsc_1_30_BVALID, xt_rsc_1_30_BUSER, xt_rsc_1_30_BRESP, xt_rsc_1_30_BID,
      xt_rsc_1_30_WREADY, xt_rsc_1_30_WVALID, xt_rsc_1_30_WUSER, xt_rsc_1_30_WLAST,
      xt_rsc_1_30_WSTRB, xt_rsc_1_30_WDATA, xt_rsc_1_30_AWREADY, xt_rsc_1_30_AWVALID,
      xt_rsc_1_30_AWUSER, xt_rsc_1_30_AWREGION, xt_rsc_1_30_AWQOS, xt_rsc_1_30_AWPROT,
      xt_rsc_1_30_AWCACHE, xt_rsc_1_30_AWLOCK, xt_rsc_1_30_AWBURST, xt_rsc_1_30_AWSIZE,
      xt_rsc_1_30_AWLEN, xt_rsc_1_30_AWADDR, xt_rsc_1_30_AWID, xt_rsc_triosy_1_30_lz,
      xt_rsc_1_31_s_tdone, xt_rsc_1_31_tr_write_done, xt_rsc_1_31_RREADY, xt_rsc_1_31_RVALID,
      xt_rsc_1_31_RUSER, xt_rsc_1_31_RLAST, xt_rsc_1_31_RRESP, xt_rsc_1_31_RDATA,
      xt_rsc_1_31_RID, xt_rsc_1_31_ARREADY, xt_rsc_1_31_ARVALID, xt_rsc_1_31_ARUSER,
      xt_rsc_1_31_ARREGION, xt_rsc_1_31_ARQOS, xt_rsc_1_31_ARPROT, xt_rsc_1_31_ARCACHE,
      xt_rsc_1_31_ARLOCK, xt_rsc_1_31_ARBURST, xt_rsc_1_31_ARSIZE, xt_rsc_1_31_ARLEN,
      xt_rsc_1_31_ARADDR, xt_rsc_1_31_ARID, xt_rsc_1_31_BREADY, xt_rsc_1_31_BVALID,
      xt_rsc_1_31_BUSER, xt_rsc_1_31_BRESP, xt_rsc_1_31_BID, xt_rsc_1_31_WREADY,
      xt_rsc_1_31_WVALID, xt_rsc_1_31_WUSER, xt_rsc_1_31_WLAST, xt_rsc_1_31_WSTRB,
      xt_rsc_1_31_WDATA, xt_rsc_1_31_AWREADY, xt_rsc_1_31_AWVALID, xt_rsc_1_31_AWUSER,
      xt_rsc_1_31_AWREGION, xt_rsc_1_31_AWQOS, xt_rsc_1_31_AWPROT, xt_rsc_1_31_AWCACHE,
      xt_rsc_1_31_AWLOCK, xt_rsc_1_31_AWBURST, xt_rsc_1_31_AWSIZE, xt_rsc_1_31_AWLEN,
      xt_rsc_1_31_AWADDR, xt_rsc_1_31_AWID, xt_rsc_triosy_1_31_lz, p_rsc_dat, p_rsc_triosy_lz,
      r_rsc_dat, r_rsc_triosy_lz, twiddle_rsc_0_0_s_tdone, twiddle_rsc_0_0_tr_write_done,
      twiddle_rsc_0_0_RREADY, twiddle_rsc_0_0_RVALID, twiddle_rsc_0_0_RUSER, twiddle_rsc_0_0_RLAST,
      twiddle_rsc_0_0_RRESP, twiddle_rsc_0_0_RDATA, twiddle_rsc_0_0_RID, twiddle_rsc_0_0_ARREADY,
      twiddle_rsc_0_0_ARVALID, twiddle_rsc_0_0_ARUSER, twiddle_rsc_0_0_ARREGION,
      twiddle_rsc_0_0_ARQOS, twiddle_rsc_0_0_ARPROT, twiddle_rsc_0_0_ARCACHE, twiddle_rsc_0_0_ARLOCK,
      twiddle_rsc_0_0_ARBURST, twiddle_rsc_0_0_ARSIZE, twiddle_rsc_0_0_ARLEN, twiddle_rsc_0_0_ARADDR,
      twiddle_rsc_0_0_ARID, twiddle_rsc_0_0_BREADY, twiddle_rsc_0_0_BVALID, twiddle_rsc_0_0_BUSER,
      twiddle_rsc_0_0_BRESP, twiddle_rsc_0_0_BID, twiddle_rsc_0_0_WREADY, twiddle_rsc_0_0_WVALID,
      twiddle_rsc_0_0_WUSER, twiddle_rsc_0_0_WLAST, twiddle_rsc_0_0_WSTRB, twiddle_rsc_0_0_WDATA,
      twiddle_rsc_0_0_AWREADY, twiddle_rsc_0_0_AWVALID, twiddle_rsc_0_0_AWUSER, twiddle_rsc_0_0_AWREGION,
      twiddle_rsc_0_0_AWQOS, twiddle_rsc_0_0_AWPROT, twiddle_rsc_0_0_AWCACHE, twiddle_rsc_0_0_AWLOCK,
      twiddle_rsc_0_0_AWBURST, twiddle_rsc_0_0_AWSIZE, twiddle_rsc_0_0_AWLEN, twiddle_rsc_0_0_AWADDR,
      twiddle_rsc_0_0_AWID, twiddle_rsc_triosy_0_0_lz, twiddle_rsc_0_1_s_tdone, twiddle_rsc_0_1_tr_write_done,
      twiddle_rsc_0_1_RREADY, twiddle_rsc_0_1_RVALID, twiddle_rsc_0_1_RUSER, twiddle_rsc_0_1_RLAST,
      twiddle_rsc_0_1_RRESP, twiddle_rsc_0_1_RDATA, twiddle_rsc_0_1_RID, twiddle_rsc_0_1_ARREADY,
      twiddle_rsc_0_1_ARVALID, twiddle_rsc_0_1_ARUSER, twiddle_rsc_0_1_ARREGION,
      twiddle_rsc_0_1_ARQOS, twiddle_rsc_0_1_ARPROT, twiddle_rsc_0_1_ARCACHE, twiddle_rsc_0_1_ARLOCK,
      twiddle_rsc_0_1_ARBURST, twiddle_rsc_0_1_ARSIZE, twiddle_rsc_0_1_ARLEN, twiddle_rsc_0_1_ARADDR,
      twiddle_rsc_0_1_ARID, twiddle_rsc_0_1_BREADY, twiddle_rsc_0_1_BVALID, twiddle_rsc_0_1_BUSER,
      twiddle_rsc_0_1_BRESP, twiddle_rsc_0_1_BID, twiddle_rsc_0_1_WREADY, twiddle_rsc_0_1_WVALID,
      twiddle_rsc_0_1_WUSER, twiddle_rsc_0_1_WLAST, twiddle_rsc_0_1_WSTRB, twiddle_rsc_0_1_WDATA,
      twiddle_rsc_0_1_AWREADY, twiddle_rsc_0_1_AWVALID, twiddle_rsc_0_1_AWUSER, twiddle_rsc_0_1_AWREGION,
      twiddle_rsc_0_1_AWQOS, twiddle_rsc_0_1_AWPROT, twiddle_rsc_0_1_AWCACHE, twiddle_rsc_0_1_AWLOCK,
      twiddle_rsc_0_1_AWBURST, twiddle_rsc_0_1_AWSIZE, twiddle_rsc_0_1_AWLEN, twiddle_rsc_0_1_AWADDR,
      twiddle_rsc_0_1_AWID, twiddle_rsc_triosy_0_1_lz, twiddle_rsc_0_2_s_tdone, twiddle_rsc_0_2_tr_write_done,
      twiddle_rsc_0_2_RREADY, twiddle_rsc_0_2_RVALID, twiddle_rsc_0_2_RUSER, twiddle_rsc_0_2_RLAST,
      twiddle_rsc_0_2_RRESP, twiddle_rsc_0_2_RDATA, twiddle_rsc_0_2_RID, twiddle_rsc_0_2_ARREADY,
      twiddle_rsc_0_2_ARVALID, twiddle_rsc_0_2_ARUSER, twiddle_rsc_0_2_ARREGION,
      twiddle_rsc_0_2_ARQOS, twiddle_rsc_0_2_ARPROT, twiddle_rsc_0_2_ARCACHE, twiddle_rsc_0_2_ARLOCK,
      twiddle_rsc_0_2_ARBURST, twiddle_rsc_0_2_ARSIZE, twiddle_rsc_0_2_ARLEN, twiddle_rsc_0_2_ARADDR,
      twiddle_rsc_0_2_ARID, twiddle_rsc_0_2_BREADY, twiddle_rsc_0_2_BVALID, twiddle_rsc_0_2_BUSER,
      twiddle_rsc_0_2_BRESP, twiddle_rsc_0_2_BID, twiddle_rsc_0_2_WREADY, twiddle_rsc_0_2_WVALID,
      twiddle_rsc_0_2_WUSER, twiddle_rsc_0_2_WLAST, twiddle_rsc_0_2_WSTRB, twiddle_rsc_0_2_WDATA,
      twiddle_rsc_0_2_AWREADY, twiddle_rsc_0_2_AWVALID, twiddle_rsc_0_2_AWUSER, twiddle_rsc_0_2_AWREGION,
      twiddle_rsc_0_2_AWQOS, twiddle_rsc_0_2_AWPROT, twiddle_rsc_0_2_AWCACHE, twiddle_rsc_0_2_AWLOCK,
      twiddle_rsc_0_2_AWBURST, twiddle_rsc_0_2_AWSIZE, twiddle_rsc_0_2_AWLEN, twiddle_rsc_0_2_AWADDR,
      twiddle_rsc_0_2_AWID, twiddle_rsc_triosy_0_2_lz, twiddle_rsc_0_3_s_tdone, twiddle_rsc_0_3_tr_write_done,
      twiddle_rsc_0_3_RREADY, twiddle_rsc_0_3_RVALID, twiddle_rsc_0_3_RUSER, twiddle_rsc_0_3_RLAST,
      twiddle_rsc_0_3_RRESP, twiddle_rsc_0_3_RDATA, twiddle_rsc_0_3_RID, twiddle_rsc_0_3_ARREADY,
      twiddle_rsc_0_3_ARVALID, twiddle_rsc_0_3_ARUSER, twiddle_rsc_0_3_ARREGION,
      twiddle_rsc_0_3_ARQOS, twiddle_rsc_0_3_ARPROT, twiddle_rsc_0_3_ARCACHE, twiddle_rsc_0_3_ARLOCK,
      twiddle_rsc_0_3_ARBURST, twiddle_rsc_0_3_ARSIZE, twiddle_rsc_0_3_ARLEN, twiddle_rsc_0_3_ARADDR,
      twiddle_rsc_0_3_ARID, twiddle_rsc_0_3_BREADY, twiddle_rsc_0_3_BVALID, twiddle_rsc_0_3_BUSER,
      twiddle_rsc_0_3_BRESP, twiddle_rsc_0_3_BID, twiddle_rsc_0_3_WREADY, twiddle_rsc_0_3_WVALID,
      twiddle_rsc_0_3_WUSER, twiddle_rsc_0_3_WLAST, twiddle_rsc_0_3_WSTRB, twiddle_rsc_0_3_WDATA,
      twiddle_rsc_0_3_AWREADY, twiddle_rsc_0_3_AWVALID, twiddle_rsc_0_3_AWUSER, twiddle_rsc_0_3_AWREGION,
      twiddle_rsc_0_3_AWQOS, twiddle_rsc_0_3_AWPROT, twiddle_rsc_0_3_AWCACHE, twiddle_rsc_0_3_AWLOCK,
      twiddle_rsc_0_3_AWBURST, twiddle_rsc_0_3_AWSIZE, twiddle_rsc_0_3_AWLEN, twiddle_rsc_0_3_AWADDR,
      twiddle_rsc_0_3_AWID, twiddle_rsc_triosy_0_3_lz, twiddle_rsc_0_4_s_tdone, twiddle_rsc_0_4_tr_write_done,
      twiddle_rsc_0_4_RREADY, twiddle_rsc_0_4_RVALID, twiddle_rsc_0_4_RUSER, twiddle_rsc_0_4_RLAST,
      twiddle_rsc_0_4_RRESP, twiddle_rsc_0_4_RDATA, twiddle_rsc_0_4_RID, twiddle_rsc_0_4_ARREADY,
      twiddle_rsc_0_4_ARVALID, twiddle_rsc_0_4_ARUSER, twiddle_rsc_0_4_ARREGION,
      twiddle_rsc_0_4_ARQOS, twiddle_rsc_0_4_ARPROT, twiddle_rsc_0_4_ARCACHE, twiddle_rsc_0_4_ARLOCK,
      twiddle_rsc_0_4_ARBURST, twiddle_rsc_0_4_ARSIZE, twiddle_rsc_0_4_ARLEN, twiddle_rsc_0_4_ARADDR,
      twiddle_rsc_0_4_ARID, twiddle_rsc_0_4_BREADY, twiddle_rsc_0_4_BVALID, twiddle_rsc_0_4_BUSER,
      twiddle_rsc_0_4_BRESP, twiddle_rsc_0_4_BID, twiddle_rsc_0_4_WREADY, twiddle_rsc_0_4_WVALID,
      twiddle_rsc_0_4_WUSER, twiddle_rsc_0_4_WLAST, twiddle_rsc_0_4_WSTRB, twiddle_rsc_0_4_WDATA,
      twiddle_rsc_0_4_AWREADY, twiddle_rsc_0_4_AWVALID, twiddle_rsc_0_4_AWUSER, twiddle_rsc_0_4_AWREGION,
      twiddle_rsc_0_4_AWQOS, twiddle_rsc_0_4_AWPROT, twiddle_rsc_0_4_AWCACHE, twiddle_rsc_0_4_AWLOCK,
      twiddle_rsc_0_4_AWBURST, twiddle_rsc_0_4_AWSIZE, twiddle_rsc_0_4_AWLEN, twiddle_rsc_0_4_AWADDR,
      twiddle_rsc_0_4_AWID, twiddle_rsc_triosy_0_4_lz, twiddle_rsc_0_5_s_tdone, twiddle_rsc_0_5_tr_write_done,
      twiddle_rsc_0_5_RREADY, twiddle_rsc_0_5_RVALID, twiddle_rsc_0_5_RUSER, twiddle_rsc_0_5_RLAST,
      twiddle_rsc_0_5_RRESP, twiddle_rsc_0_5_RDATA, twiddle_rsc_0_5_RID, twiddle_rsc_0_5_ARREADY,
      twiddle_rsc_0_5_ARVALID, twiddle_rsc_0_5_ARUSER, twiddle_rsc_0_5_ARREGION,
      twiddle_rsc_0_5_ARQOS, twiddle_rsc_0_5_ARPROT, twiddle_rsc_0_5_ARCACHE, twiddle_rsc_0_5_ARLOCK,
      twiddle_rsc_0_5_ARBURST, twiddle_rsc_0_5_ARSIZE, twiddle_rsc_0_5_ARLEN, twiddle_rsc_0_5_ARADDR,
      twiddle_rsc_0_5_ARID, twiddle_rsc_0_5_BREADY, twiddle_rsc_0_5_BVALID, twiddle_rsc_0_5_BUSER,
      twiddle_rsc_0_5_BRESP, twiddle_rsc_0_5_BID, twiddle_rsc_0_5_WREADY, twiddle_rsc_0_5_WVALID,
      twiddle_rsc_0_5_WUSER, twiddle_rsc_0_5_WLAST, twiddle_rsc_0_5_WSTRB, twiddle_rsc_0_5_WDATA,
      twiddle_rsc_0_5_AWREADY, twiddle_rsc_0_5_AWVALID, twiddle_rsc_0_5_AWUSER, twiddle_rsc_0_5_AWREGION,
      twiddle_rsc_0_5_AWQOS, twiddle_rsc_0_5_AWPROT, twiddle_rsc_0_5_AWCACHE, twiddle_rsc_0_5_AWLOCK,
      twiddle_rsc_0_5_AWBURST, twiddle_rsc_0_5_AWSIZE, twiddle_rsc_0_5_AWLEN, twiddle_rsc_0_5_AWADDR,
      twiddle_rsc_0_5_AWID, twiddle_rsc_triosy_0_5_lz, twiddle_rsc_0_6_s_tdone, twiddle_rsc_0_6_tr_write_done,
      twiddle_rsc_0_6_RREADY, twiddle_rsc_0_6_RVALID, twiddle_rsc_0_6_RUSER, twiddle_rsc_0_6_RLAST,
      twiddle_rsc_0_6_RRESP, twiddle_rsc_0_6_RDATA, twiddle_rsc_0_6_RID, twiddle_rsc_0_6_ARREADY,
      twiddle_rsc_0_6_ARVALID, twiddle_rsc_0_6_ARUSER, twiddle_rsc_0_6_ARREGION,
      twiddle_rsc_0_6_ARQOS, twiddle_rsc_0_6_ARPROT, twiddle_rsc_0_6_ARCACHE, twiddle_rsc_0_6_ARLOCK,
      twiddle_rsc_0_6_ARBURST, twiddle_rsc_0_6_ARSIZE, twiddle_rsc_0_6_ARLEN, twiddle_rsc_0_6_ARADDR,
      twiddle_rsc_0_6_ARID, twiddle_rsc_0_6_BREADY, twiddle_rsc_0_6_BVALID, twiddle_rsc_0_6_BUSER,
      twiddle_rsc_0_6_BRESP, twiddle_rsc_0_6_BID, twiddle_rsc_0_6_WREADY, twiddle_rsc_0_6_WVALID,
      twiddle_rsc_0_6_WUSER, twiddle_rsc_0_6_WLAST, twiddle_rsc_0_6_WSTRB, twiddle_rsc_0_6_WDATA,
      twiddle_rsc_0_6_AWREADY, twiddle_rsc_0_6_AWVALID, twiddle_rsc_0_6_AWUSER, twiddle_rsc_0_6_AWREGION,
      twiddle_rsc_0_6_AWQOS, twiddle_rsc_0_6_AWPROT, twiddle_rsc_0_6_AWCACHE, twiddle_rsc_0_6_AWLOCK,
      twiddle_rsc_0_6_AWBURST, twiddle_rsc_0_6_AWSIZE, twiddle_rsc_0_6_AWLEN, twiddle_rsc_0_6_AWADDR,
      twiddle_rsc_0_6_AWID, twiddle_rsc_triosy_0_6_lz, twiddle_rsc_0_7_s_tdone, twiddle_rsc_0_7_tr_write_done,
      twiddle_rsc_0_7_RREADY, twiddle_rsc_0_7_RVALID, twiddle_rsc_0_7_RUSER, twiddle_rsc_0_7_RLAST,
      twiddle_rsc_0_7_RRESP, twiddle_rsc_0_7_RDATA, twiddle_rsc_0_7_RID, twiddle_rsc_0_7_ARREADY,
      twiddle_rsc_0_7_ARVALID, twiddle_rsc_0_7_ARUSER, twiddle_rsc_0_7_ARREGION,
      twiddle_rsc_0_7_ARQOS, twiddle_rsc_0_7_ARPROT, twiddle_rsc_0_7_ARCACHE, twiddle_rsc_0_7_ARLOCK,
      twiddle_rsc_0_7_ARBURST, twiddle_rsc_0_7_ARSIZE, twiddle_rsc_0_7_ARLEN, twiddle_rsc_0_7_ARADDR,
      twiddle_rsc_0_7_ARID, twiddle_rsc_0_7_BREADY, twiddle_rsc_0_7_BVALID, twiddle_rsc_0_7_BUSER,
      twiddle_rsc_0_7_BRESP, twiddle_rsc_0_7_BID, twiddle_rsc_0_7_WREADY, twiddle_rsc_0_7_WVALID,
      twiddle_rsc_0_7_WUSER, twiddle_rsc_0_7_WLAST, twiddle_rsc_0_7_WSTRB, twiddle_rsc_0_7_WDATA,
      twiddle_rsc_0_7_AWREADY, twiddle_rsc_0_7_AWVALID, twiddle_rsc_0_7_AWUSER, twiddle_rsc_0_7_AWREGION,
      twiddle_rsc_0_7_AWQOS, twiddle_rsc_0_7_AWPROT, twiddle_rsc_0_7_AWCACHE, twiddle_rsc_0_7_AWLOCK,
      twiddle_rsc_0_7_AWBURST, twiddle_rsc_0_7_AWSIZE, twiddle_rsc_0_7_AWLEN, twiddle_rsc_0_7_AWADDR,
      twiddle_rsc_0_7_AWID, twiddle_rsc_triosy_0_7_lz, twiddle_rsc_0_8_s_tdone, twiddle_rsc_0_8_tr_write_done,
      twiddle_rsc_0_8_RREADY, twiddle_rsc_0_8_RVALID, twiddle_rsc_0_8_RUSER, twiddle_rsc_0_8_RLAST,
      twiddle_rsc_0_8_RRESP, twiddle_rsc_0_8_RDATA, twiddle_rsc_0_8_RID, twiddle_rsc_0_8_ARREADY,
      twiddle_rsc_0_8_ARVALID, twiddle_rsc_0_8_ARUSER, twiddle_rsc_0_8_ARREGION,
      twiddle_rsc_0_8_ARQOS, twiddle_rsc_0_8_ARPROT, twiddle_rsc_0_8_ARCACHE, twiddle_rsc_0_8_ARLOCK,
      twiddle_rsc_0_8_ARBURST, twiddle_rsc_0_8_ARSIZE, twiddle_rsc_0_8_ARLEN, twiddle_rsc_0_8_ARADDR,
      twiddle_rsc_0_8_ARID, twiddle_rsc_0_8_BREADY, twiddle_rsc_0_8_BVALID, twiddle_rsc_0_8_BUSER,
      twiddle_rsc_0_8_BRESP, twiddle_rsc_0_8_BID, twiddle_rsc_0_8_WREADY, twiddle_rsc_0_8_WVALID,
      twiddle_rsc_0_8_WUSER, twiddle_rsc_0_8_WLAST, twiddle_rsc_0_8_WSTRB, twiddle_rsc_0_8_WDATA,
      twiddle_rsc_0_8_AWREADY, twiddle_rsc_0_8_AWVALID, twiddle_rsc_0_8_AWUSER, twiddle_rsc_0_8_AWREGION,
      twiddle_rsc_0_8_AWQOS, twiddle_rsc_0_8_AWPROT, twiddle_rsc_0_8_AWCACHE, twiddle_rsc_0_8_AWLOCK,
      twiddle_rsc_0_8_AWBURST, twiddle_rsc_0_8_AWSIZE, twiddle_rsc_0_8_AWLEN, twiddle_rsc_0_8_AWADDR,
      twiddle_rsc_0_8_AWID, twiddle_rsc_triosy_0_8_lz, twiddle_rsc_0_9_s_tdone, twiddle_rsc_0_9_tr_write_done,
      twiddle_rsc_0_9_RREADY, twiddle_rsc_0_9_RVALID, twiddle_rsc_0_9_RUSER, twiddle_rsc_0_9_RLAST,
      twiddle_rsc_0_9_RRESP, twiddle_rsc_0_9_RDATA, twiddle_rsc_0_9_RID, twiddle_rsc_0_9_ARREADY,
      twiddle_rsc_0_9_ARVALID, twiddle_rsc_0_9_ARUSER, twiddle_rsc_0_9_ARREGION,
      twiddle_rsc_0_9_ARQOS, twiddle_rsc_0_9_ARPROT, twiddle_rsc_0_9_ARCACHE, twiddle_rsc_0_9_ARLOCK,
      twiddle_rsc_0_9_ARBURST, twiddle_rsc_0_9_ARSIZE, twiddle_rsc_0_9_ARLEN, twiddle_rsc_0_9_ARADDR,
      twiddle_rsc_0_9_ARID, twiddle_rsc_0_9_BREADY, twiddle_rsc_0_9_BVALID, twiddle_rsc_0_9_BUSER,
      twiddle_rsc_0_9_BRESP, twiddle_rsc_0_9_BID, twiddle_rsc_0_9_WREADY, twiddle_rsc_0_9_WVALID,
      twiddle_rsc_0_9_WUSER, twiddle_rsc_0_9_WLAST, twiddle_rsc_0_9_WSTRB, twiddle_rsc_0_9_WDATA,
      twiddle_rsc_0_9_AWREADY, twiddle_rsc_0_9_AWVALID, twiddle_rsc_0_9_AWUSER, twiddle_rsc_0_9_AWREGION,
      twiddle_rsc_0_9_AWQOS, twiddle_rsc_0_9_AWPROT, twiddle_rsc_0_9_AWCACHE, twiddle_rsc_0_9_AWLOCK,
      twiddle_rsc_0_9_AWBURST, twiddle_rsc_0_9_AWSIZE, twiddle_rsc_0_9_AWLEN, twiddle_rsc_0_9_AWADDR,
      twiddle_rsc_0_9_AWID, twiddle_rsc_triosy_0_9_lz, twiddle_rsc_0_10_s_tdone,
      twiddle_rsc_0_10_tr_write_done, twiddle_rsc_0_10_RREADY, twiddle_rsc_0_10_RVALID,
      twiddle_rsc_0_10_RUSER, twiddle_rsc_0_10_RLAST, twiddle_rsc_0_10_RRESP, twiddle_rsc_0_10_RDATA,
      twiddle_rsc_0_10_RID, twiddle_rsc_0_10_ARREADY, twiddle_rsc_0_10_ARVALID, twiddle_rsc_0_10_ARUSER,
      twiddle_rsc_0_10_ARREGION, twiddle_rsc_0_10_ARQOS, twiddle_rsc_0_10_ARPROT,
      twiddle_rsc_0_10_ARCACHE, twiddle_rsc_0_10_ARLOCK, twiddle_rsc_0_10_ARBURST,
      twiddle_rsc_0_10_ARSIZE, twiddle_rsc_0_10_ARLEN, twiddle_rsc_0_10_ARADDR, twiddle_rsc_0_10_ARID,
      twiddle_rsc_0_10_BREADY, twiddle_rsc_0_10_BVALID, twiddle_rsc_0_10_BUSER, twiddle_rsc_0_10_BRESP,
      twiddle_rsc_0_10_BID, twiddle_rsc_0_10_WREADY, twiddle_rsc_0_10_WVALID, twiddle_rsc_0_10_WUSER,
      twiddle_rsc_0_10_WLAST, twiddle_rsc_0_10_WSTRB, twiddle_rsc_0_10_WDATA, twiddle_rsc_0_10_AWREADY,
      twiddle_rsc_0_10_AWVALID, twiddle_rsc_0_10_AWUSER, twiddle_rsc_0_10_AWREGION,
      twiddle_rsc_0_10_AWQOS, twiddle_rsc_0_10_AWPROT, twiddle_rsc_0_10_AWCACHE,
      twiddle_rsc_0_10_AWLOCK, twiddle_rsc_0_10_AWBURST, twiddle_rsc_0_10_AWSIZE,
      twiddle_rsc_0_10_AWLEN, twiddle_rsc_0_10_AWADDR, twiddle_rsc_0_10_AWID, twiddle_rsc_triosy_0_10_lz,
      twiddle_rsc_0_11_s_tdone, twiddle_rsc_0_11_tr_write_done, twiddle_rsc_0_11_RREADY,
      twiddle_rsc_0_11_RVALID, twiddle_rsc_0_11_RUSER, twiddle_rsc_0_11_RLAST, twiddle_rsc_0_11_RRESP,
      twiddle_rsc_0_11_RDATA, twiddle_rsc_0_11_RID, twiddle_rsc_0_11_ARREADY, twiddle_rsc_0_11_ARVALID,
      twiddle_rsc_0_11_ARUSER, twiddle_rsc_0_11_ARREGION, twiddle_rsc_0_11_ARQOS,
      twiddle_rsc_0_11_ARPROT, twiddle_rsc_0_11_ARCACHE, twiddle_rsc_0_11_ARLOCK,
      twiddle_rsc_0_11_ARBURST, twiddle_rsc_0_11_ARSIZE, twiddle_rsc_0_11_ARLEN,
      twiddle_rsc_0_11_ARADDR, twiddle_rsc_0_11_ARID, twiddle_rsc_0_11_BREADY, twiddle_rsc_0_11_BVALID,
      twiddle_rsc_0_11_BUSER, twiddle_rsc_0_11_BRESP, twiddle_rsc_0_11_BID, twiddle_rsc_0_11_WREADY,
      twiddle_rsc_0_11_WVALID, twiddle_rsc_0_11_WUSER, twiddle_rsc_0_11_WLAST, twiddle_rsc_0_11_WSTRB,
      twiddle_rsc_0_11_WDATA, twiddle_rsc_0_11_AWREADY, twiddle_rsc_0_11_AWVALID,
      twiddle_rsc_0_11_AWUSER, twiddle_rsc_0_11_AWREGION, twiddle_rsc_0_11_AWQOS,
      twiddle_rsc_0_11_AWPROT, twiddle_rsc_0_11_AWCACHE, twiddle_rsc_0_11_AWLOCK,
      twiddle_rsc_0_11_AWBURST, twiddle_rsc_0_11_AWSIZE, twiddle_rsc_0_11_AWLEN,
      twiddle_rsc_0_11_AWADDR, twiddle_rsc_0_11_AWID, twiddle_rsc_triosy_0_11_lz,
      twiddle_rsc_0_12_s_tdone, twiddle_rsc_0_12_tr_write_done, twiddle_rsc_0_12_RREADY,
      twiddle_rsc_0_12_RVALID, twiddle_rsc_0_12_RUSER, twiddle_rsc_0_12_RLAST, twiddle_rsc_0_12_RRESP,
      twiddle_rsc_0_12_RDATA, twiddle_rsc_0_12_RID, twiddle_rsc_0_12_ARREADY, twiddle_rsc_0_12_ARVALID,
      twiddle_rsc_0_12_ARUSER, twiddle_rsc_0_12_ARREGION, twiddle_rsc_0_12_ARQOS,
      twiddle_rsc_0_12_ARPROT, twiddle_rsc_0_12_ARCACHE, twiddle_rsc_0_12_ARLOCK,
      twiddle_rsc_0_12_ARBURST, twiddle_rsc_0_12_ARSIZE, twiddle_rsc_0_12_ARLEN,
      twiddle_rsc_0_12_ARADDR, twiddle_rsc_0_12_ARID, twiddle_rsc_0_12_BREADY, twiddle_rsc_0_12_BVALID,
      twiddle_rsc_0_12_BUSER, twiddle_rsc_0_12_BRESP, twiddle_rsc_0_12_BID, twiddle_rsc_0_12_WREADY,
      twiddle_rsc_0_12_WVALID, twiddle_rsc_0_12_WUSER, twiddle_rsc_0_12_WLAST, twiddle_rsc_0_12_WSTRB,
      twiddle_rsc_0_12_WDATA, twiddle_rsc_0_12_AWREADY, twiddle_rsc_0_12_AWVALID,
      twiddle_rsc_0_12_AWUSER, twiddle_rsc_0_12_AWREGION, twiddle_rsc_0_12_AWQOS,
      twiddle_rsc_0_12_AWPROT, twiddle_rsc_0_12_AWCACHE, twiddle_rsc_0_12_AWLOCK,
      twiddle_rsc_0_12_AWBURST, twiddle_rsc_0_12_AWSIZE, twiddle_rsc_0_12_AWLEN,
      twiddle_rsc_0_12_AWADDR, twiddle_rsc_0_12_AWID, twiddle_rsc_triosy_0_12_lz,
      twiddle_rsc_0_13_s_tdone, twiddle_rsc_0_13_tr_write_done, twiddle_rsc_0_13_RREADY,
      twiddle_rsc_0_13_RVALID, twiddle_rsc_0_13_RUSER, twiddle_rsc_0_13_RLAST, twiddle_rsc_0_13_RRESP,
      twiddle_rsc_0_13_RDATA, twiddle_rsc_0_13_RID, twiddle_rsc_0_13_ARREADY, twiddle_rsc_0_13_ARVALID,
      twiddle_rsc_0_13_ARUSER, twiddle_rsc_0_13_ARREGION, twiddle_rsc_0_13_ARQOS,
      twiddle_rsc_0_13_ARPROT, twiddle_rsc_0_13_ARCACHE, twiddle_rsc_0_13_ARLOCK,
      twiddle_rsc_0_13_ARBURST, twiddle_rsc_0_13_ARSIZE, twiddle_rsc_0_13_ARLEN,
      twiddle_rsc_0_13_ARADDR, twiddle_rsc_0_13_ARID, twiddle_rsc_0_13_BREADY, twiddle_rsc_0_13_BVALID,
      twiddle_rsc_0_13_BUSER, twiddle_rsc_0_13_BRESP, twiddle_rsc_0_13_BID, twiddle_rsc_0_13_WREADY,
      twiddle_rsc_0_13_WVALID, twiddle_rsc_0_13_WUSER, twiddle_rsc_0_13_WLAST, twiddle_rsc_0_13_WSTRB,
      twiddle_rsc_0_13_WDATA, twiddle_rsc_0_13_AWREADY, twiddle_rsc_0_13_AWVALID,
      twiddle_rsc_0_13_AWUSER, twiddle_rsc_0_13_AWREGION, twiddle_rsc_0_13_AWQOS,
      twiddle_rsc_0_13_AWPROT, twiddle_rsc_0_13_AWCACHE, twiddle_rsc_0_13_AWLOCK,
      twiddle_rsc_0_13_AWBURST, twiddle_rsc_0_13_AWSIZE, twiddle_rsc_0_13_AWLEN,
      twiddle_rsc_0_13_AWADDR, twiddle_rsc_0_13_AWID, twiddle_rsc_triosy_0_13_lz,
      twiddle_rsc_0_14_s_tdone, twiddle_rsc_0_14_tr_write_done, twiddle_rsc_0_14_RREADY,
      twiddle_rsc_0_14_RVALID, twiddle_rsc_0_14_RUSER, twiddle_rsc_0_14_RLAST, twiddle_rsc_0_14_RRESP,
      twiddle_rsc_0_14_RDATA, twiddle_rsc_0_14_RID, twiddle_rsc_0_14_ARREADY, twiddle_rsc_0_14_ARVALID,
      twiddle_rsc_0_14_ARUSER, twiddle_rsc_0_14_ARREGION, twiddle_rsc_0_14_ARQOS,
      twiddle_rsc_0_14_ARPROT, twiddle_rsc_0_14_ARCACHE, twiddle_rsc_0_14_ARLOCK,
      twiddle_rsc_0_14_ARBURST, twiddle_rsc_0_14_ARSIZE, twiddle_rsc_0_14_ARLEN,
      twiddle_rsc_0_14_ARADDR, twiddle_rsc_0_14_ARID, twiddle_rsc_0_14_BREADY, twiddle_rsc_0_14_BVALID,
      twiddle_rsc_0_14_BUSER, twiddle_rsc_0_14_BRESP, twiddle_rsc_0_14_BID, twiddle_rsc_0_14_WREADY,
      twiddle_rsc_0_14_WVALID, twiddle_rsc_0_14_WUSER, twiddle_rsc_0_14_WLAST, twiddle_rsc_0_14_WSTRB,
      twiddle_rsc_0_14_WDATA, twiddle_rsc_0_14_AWREADY, twiddle_rsc_0_14_AWVALID,
      twiddle_rsc_0_14_AWUSER, twiddle_rsc_0_14_AWREGION, twiddle_rsc_0_14_AWQOS,
      twiddle_rsc_0_14_AWPROT, twiddle_rsc_0_14_AWCACHE, twiddle_rsc_0_14_AWLOCK,
      twiddle_rsc_0_14_AWBURST, twiddle_rsc_0_14_AWSIZE, twiddle_rsc_0_14_AWLEN,
      twiddle_rsc_0_14_AWADDR, twiddle_rsc_0_14_AWID, twiddle_rsc_triosy_0_14_lz,
      twiddle_rsc_0_15_s_tdone, twiddle_rsc_0_15_tr_write_done, twiddle_rsc_0_15_RREADY,
      twiddle_rsc_0_15_RVALID, twiddle_rsc_0_15_RUSER, twiddle_rsc_0_15_RLAST, twiddle_rsc_0_15_RRESP,
      twiddle_rsc_0_15_RDATA, twiddle_rsc_0_15_RID, twiddle_rsc_0_15_ARREADY, twiddle_rsc_0_15_ARVALID,
      twiddle_rsc_0_15_ARUSER, twiddle_rsc_0_15_ARREGION, twiddle_rsc_0_15_ARQOS,
      twiddle_rsc_0_15_ARPROT, twiddle_rsc_0_15_ARCACHE, twiddle_rsc_0_15_ARLOCK,
      twiddle_rsc_0_15_ARBURST, twiddle_rsc_0_15_ARSIZE, twiddle_rsc_0_15_ARLEN,
      twiddle_rsc_0_15_ARADDR, twiddle_rsc_0_15_ARID, twiddle_rsc_0_15_BREADY, twiddle_rsc_0_15_BVALID,
      twiddle_rsc_0_15_BUSER, twiddle_rsc_0_15_BRESP, twiddle_rsc_0_15_BID, twiddle_rsc_0_15_WREADY,
      twiddle_rsc_0_15_WVALID, twiddle_rsc_0_15_WUSER, twiddle_rsc_0_15_WLAST, twiddle_rsc_0_15_WSTRB,
      twiddle_rsc_0_15_WDATA, twiddle_rsc_0_15_AWREADY, twiddle_rsc_0_15_AWVALID,
      twiddle_rsc_0_15_AWUSER, twiddle_rsc_0_15_AWREGION, twiddle_rsc_0_15_AWQOS,
      twiddle_rsc_0_15_AWPROT, twiddle_rsc_0_15_AWCACHE, twiddle_rsc_0_15_AWLOCK,
      twiddle_rsc_0_15_AWBURST, twiddle_rsc_0_15_AWSIZE, twiddle_rsc_0_15_AWLEN,
      twiddle_rsc_0_15_AWADDR, twiddle_rsc_0_15_AWID, twiddle_rsc_triosy_0_15_lz,
      twiddle_h_rsc_0_0_s_tdone, twiddle_h_rsc_0_0_tr_write_done, twiddle_h_rsc_0_0_RREADY,
      twiddle_h_rsc_0_0_RVALID, twiddle_h_rsc_0_0_RUSER, twiddle_h_rsc_0_0_RLAST,
      twiddle_h_rsc_0_0_RRESP, twiddle_h_rsc_0_0_RDATA, twiddle_h_rsc_0_0_RID, twiddle_h_rsc_0_0_ARREADY,
      twiddle_h_rsc_0_0_ARVALID, twiddle_h_rsc_0_0_ARUSER, twiddle_h_rsc_0_0_ARREGION,
      twiddle_h_rsc_0_0_ARQOS, twiddle_h_rsc_0_0_ARPROT, twiddle_h_rsc_0_0_ARCACHE,
      twiddle_h_rsc_0_0_ARLOCK, twiddle_h_rsc_0_0_ARBURST, twiddle_h_rsc_0_0_ARSIZE,
      twiddle_h_rsc_0_0_ARLEN, twiddle_h_rsc_0_0_ARADDR, twiddle_h_rsc_0_0_ARID,
      twiddle_h_rsc_0_0_BREADY, twiddle_h_rsc_0_0_BVALID, twiddle_h_rsc_0_0_BUSER,
      twiddle_h_rsc_0_0_BRESP, twiddle_h_rsc_0_0_BID, twiddle_h_rsc_0_0_WREADY, twiddle_h_rsc_0_0_WVALID,
      twiddle_h_rsc_0_0_WUSER, twiddle_h_rsc_0_0_WLAST, twiddle_h_rsc_0_0_WSTRB,
      twiddle_h_rsc_0_0_WDATA, twiddle_h_rsc_0_0_AWREADY, twiddle_h_rsc_0_0_AWVALID,
      twiddle_h_rsc_0_0_AWUSER, twiddle_h_rsc_0_0_AWREGION, twiddle_h_rsc_0_0_AWQOS,
      twiddle_h_rsc_0_0_AWPROT, twiddle_h_rsc_0_0_AWCACHE, twiddle_h_rsc_0_0_AWLOCK,
      twiddle_h_rsc_0_0_AWBURST, twiddle_h_rsc_0_0_AWSIZE, twiddle_h_rsc_0_0_AWLEN,
      twiddle_h_rsc_0_0_AWADDR, twiddle_h_rsc_0_0_AWID, twiddle_h_rsc_triosy_0_0_lz,
      twiddle_h_rsc_0_1_s_tdone, twiddle_h_rsc_0_1_tr_write_done, twiddle_h_rsc_0_1_RREADY,
      twiddle_h_rsc_0_1_RVALID, twiddle_h_rsc_0_1_RUSER, twiddle_h_rsc_0_1_RLAST,
      twiddle_h_rsc_0_1_RRESP, twiddle_h_rsc_0_1_RDATA, twiddle_h_rsc_0_1_RID, twiddle_h_rsc_0_1_ARREADY,
      twiddle_h_rsc_0_1_ARVALID, twiddle_h_rsc_0_1_ARUSER, twiddle_h_rsc_0_1_ARREGION,
      twiddle_h_rsc_0_1_ARQOS, twiddle_h_rsc_0_1_ARPROT, twiddle_h_rsc_0_1_ARCACHE,
      twiddle_h_rsc_0_1_ARLOCK, twiddle_h_rsc_0_1_ARBURST, twiddle_h_rsc_0_1_ARSIZE,
      twiddle_h_rsc_0_1_ARLEN, twiddle_h_rsc_0_1_ARADDR, twiddle_h_rsc_0_1_ARID,
      twiddle_h_rsc_0_1_BREADY, twiddle_h_rsc_0_1_BVALID, twiddle_h_rsc_0_1_BUSER,
      twiddle_h_rsc_0_1_BRESP, twiddle_h_rsc_0_1_BID, twiddle_h_rsc_0_1_WREADY, twiddle_h_rsc_0_1_WVALID,
      twiddle_h_rsc_0_1_WUSER, twiddle_h_rsc_0_1_WLAST, twiddle_h_rsc_0_1_WSTRB,
      twiddle_h_rsc_0_1_WDATA, twiddle_h_rsc_0_1_AWREADY, twiddle_h_rsc_0_1_AWVALID,
      twiddle_h_rsc_0_1_AWUSER, twiddle_h_rsc_0_1_AWREGION, twiddle_h_rsc_0_1_AWQOS,
      twiddle_h_rsc_0_1_AWPROT, twiddle_h_rsc_0_1_AWCACHE, twiddle_h_rsc_0_1_AWLOCK,
      twiddle_h_rsc_0_1_AWBURST, twiddle_h_rsc_0_1_AWSIZE, twiddle_h_rsc_0_1_AWLEN,
      twiddle_h_rsc_0_1_AWADDR, twiddle_h_rsc_0_1_AWID, twiddle_h_rsc_triosy_0_1_lz,
      twiddle_h_rsc_0_2_s_tdone, twiddle_h_rsc_0_2_tr_write_done, twiddle_h_rsc_0_2_RREADY,
      twiddle_h_rsc_0_2_RVALID, twiddle_h_rsc_0_2_RUSER, twiddle_h_rsc_0_2_RLAST,
      twiddle_h_rsc_0_2_RRESP, twiddle_h_rsc_0_2_RDATA, twiddle_h_rsc_0_2_RID, twiddle_h_rsc_0_2_ARREADY,
      twiddle_h_rsc_0_2_ARVALID, twiddle_h_rsc_0_2_ARUSER, twiddle_h_rsc_0_2_ARREGION,
      twiddle_h_rsc_0_2_ARQOS, twiddle_h_rsc_0_2_ARPROT, twiddle_h_rsc_0_2_ARCACHE,
      twiddle_h_rsc_0_2_ARLOCK, twiddle_h_rsc_0_2_ARBURST, twiddle_h_rsc_0_2_ARSIZE,
      twiddle_h_rsc_0_2_ARLEN, twiddle_h_rsc_0_2_ARADDR, twiddle_h_rsc_0_2_ARID,
      twiddle_h_rsc_0_2_BREADY, twiddle_h_rsc_0_2_BVALID, twiddle_h_rsc_0_2_BUSER,
      twiddle_h_rsc_0_2_BRESP, twiddle_h_rsc_0_2_BID, twiddle_h_rsc_0_2_WREADY, twiddle_h_rsc_0_2_WVALID,
      twiddle_h_rsc_0_2_WUSER, twiddle_h_rsc_0_2_WLAST, twiddle_h_rsc_0_2_WSTRB,
      twiddle_h_rsc_0_2_WDATA, twiddle_h_rsc_0_2_AWREADY, twiddle_h_rsc_0_2_AWVALID,
      twiddle_h_rsc_0_2_AWUSER, twiddle_h_rsc_0_2_AWREGION, twiddle_h_rsc_0_2_AWQOS,
      twiddle_h_rsc_0_2_AWPROT, twiddle_h_rsc_0_2_AWCACHE, twiddle_h_rsc_0_2_AWLOCK,
      twiddle_h_rsc_0_2_AWBURST, twiddle_h_rsc_0_2_AWSIZE, twiddle_h_rsc_0_2_AWLEN,
      twiddle_h_rsc_0_2_AWADDR, twiddle_h_rsc_0_2_AWID, twiddle_h_rsc_triosy_0_2_lz,
      twiddle_h_rsc_0_3_s_tdone, twiddle_h_rsc_0_3_tr_write_done, twiddle_h_rsc_0_3_RREADY,
      twiddle_h_rsc_0_3_RVALID, twiddle_h_rsc_0_3_RUSER, twiddle_h_rsc_0_3_RLAST,
      twiddle_h_rsc_0_3_RRESP, twiddle_h_rsc_0_3_RDATA, twiddle_h_rsc_0_3_RID, twiddle_h_rsc_0_3_ARREADY,
      twiddle_h_rsc_0_3_ARVALID, twiddle_h_rsc_0_3_ARUSER, twiddle_h_rsc_0_3_ARREGION,
      twiddle_h_rsc_0_3_ARQOS, twiddle_h_rsc_0_3_ARPROT, twiddle_h_rsc_0_3_ARCACHE,
      twiddle_h_rsc_0_3_ARLOCK, twiddle_h_rsc_0_3_ARBURST, twiddle_h_rsc_0_3_ARSIZE,
      twiddle_h_rsc_0_3_ARLEN, twiddle_h_rsc_0_3_ARADDR, twiddle_h_rsc_0_3_ARID,
      twiddle_h_rsc_0_3_BREADY, twiddle_h_rsc_0_3_BVALID, twiddle_h_rsc_0_3_BUSER,
      twiddle_h_rsc_0_3_BRESP, twiddle_h_rsc_0_3_BID, twiddle_h_rsc_0_3_WREADY, twiddle_h_rsc_0_3_WVALID,
      twiddle_h_rsc_0_3_WUSER, twiddle_h_rsc_0_3_WLAST, twiddle_h_rsc_0_3_WSTRB,
      twiddle_h_rsc_0_3_WDATA, twiddle_h_rsc_0_3_AWREADY, twiddle_h_rsc_0_3_AWVALID,
      twiddle_h_rsc_0_3_AWUSER, twiddle_h_rsc_0_3_AWREGION, twiddle_h_rsc_0_3_AWQOS,
      twiddle_h_rsc_0_3_AWPROT, twiddle_h_rsc_0_3_AWCACHE, twiddle_h_rsc_0_3_AWLOCK,
      twiddle_h_rsc_0_3_AWBURST, twiddle_h_rsc_0_3_AWSIZE, twiddle_h_rsc_0_3_AWLEN,
      twiddle_h_rsc_0_3_AWADDR, twiddle_h_rsc_0_3_AWID, twiddle_h_rsc_triosy_0_3_lz,
      twiddle_h_rsc_0_4_s_tdone, twiddle_h_rsc_0_4_tr_write_done, twiddle_h_rsc_0_4_RREADY,
      twiddle_h_rsc_0_4_RVALID, twiddle_h_rsc_0_4_RUSER, twiddle_h_rsc_0_4_RLAST,
      twiddle_h_rsc_0_4_RRESP, twiddle_h_rsc_0_4_RDATA, twiddle_h_rsc_0_4_RID, twiddle_h_rsc_0_4_ARREADY,
      twiddle_h_rsc_0_4_ARVALID, twiddle_h_rsc_0_4_ARUSER, twiddle_h_rsc_0_4_ARREGION,
      twiddle_h_rsc_0_4_ARQOS, twiddle_h_rsc_0_4_ARPROT, twiddle_h_rsc_0_4_ARCACHE,
      twiddle_h_rsc_0_4_ARLOCK, twiddle_h_rsc_0_4_ARBURST, twiddle_h_rsc_0_4_ARSIZE,
      twiddle_h_rsc_0_4_ARLEN, twiddle_h_rsc_0_4_ARADDR, twiddle_h_rsc_0_4_ARID,
      twiddle_h_rsc_0_4_BREADY, twiddle_h_rsc_0_4_BVALID, twiddle_h_rsc_0_4_BUSER,
      twiddle_h_rsc_0_4_BRESP, twiddle_h_rsc_0_4_BID, twiddle_h_rsc_0_4_WREADY, twiddle_h_rsc_0_4_WVALID,
      twiddle_h_rsc_0_4_WUSER, twiddle_h_rsc_0_4_WLAST, twiddle_h_rsc_0_4_WSTRB,
      twiddle_h_rsc_0_4_WDATA, twiddle_h_rsc_0_4_AWREADY, twiddle_h_rsc_0_4_AWVALID,
      twiddle_h_rsc_0_4_AWUSER, twiddle_h_rsc_0_4_AWREGION, twiddle_h_rsc_0_4_AWQOS,
      twiddle_h_rsc_0_4_AWPROT, twiddle_h_rsc_0_4_AWCACHE, twiddle_h_rsc_0_4_AWLOCK,
      twiddle_h_rsc_0_4_AWBURST, twiddle_h_rsc_0_4_AWSIZE, twiddle_h_rsc_0_4_AWLEN,
      twiddle_h_rsc_0_4_AWADDR, twiddle_h_rsc_0_4_AWID, twiddle_h_rsc_triosy_0_4_lz,
      twiddle_h_rsc_0_5_s_tdone, twiddle_h_rsc_0_5_tr_write_done, twiddle_h_rsc_0_5_RREADY,
      twiddle_h_rsc_0_5_RVALID, twiddle_h_rsc_0_5_RUSER, twiddle_h_rsc_0_5_RLAST,
      twiddle_h_rsc_0_5_RRESP, twiddle_h_rsc_0_5_RDATA, twiddle_h_rsc_0_5_RID, twiddle_h_rsc_0_5_ARREADY,
      twiddle_h_rsc_0_5_ARVALID, twiddle_h_rsc_0_5_ARUSER, twiddle_h_rsc_0_5_ARREGION,
      twiddle_h_rsc_0_5_ARQOS, twiddle_h_rsc_0_5_ARPROT, twiddle_h_rsc_0_5_ARCACHE,
      twiddle_h_rsc_0_5_ARLOCK, twiddle_h_rsc_0_5_ARBURST, twiddle_h_rsc_0_5_ARSIZE,
      twiddle_h_rsc_0_5_ARLEN, twiddle_h_rsc_0_5_ARADDR, twiddle_h_rsc_0_5_ARID,
      twiddle_h_rsc_0_5_BREADY, twiddle_h_rsc_0_5_BVALID, twiddle_h_rsc_0_5_BUSER,
      twiddle_h_rsc_0_5_BRESP, twiddle_h_rsc_0_5_BID, twiddle_h_rsc_0_5_WREADY, twiddle_h_rsc_0_5_WVALID,
      twiddle_h_rsc_0_5_WUSER, twiddle_h_rsc_0_5_WLAST, twiddle_h_rsc_0_5_WSTRB,
      twiddle_h_rsc_0_5_WDATA, twiddle_h_rsc_0_5_AWREADY, twiddle_h_rsc_0_5_AWVALID,
      twiddle_h_rsc_0_5_AWUSER, twiddle_h_rsc_0_5_AWREGION, twiddle_h_rsc_0_5_AWQOS,
      twiddle_h_rsc_0_5_AWPROT, twiddle_h_rsc_0_5_AWCACHE, twiddle_h_rsc_0_5_AWLOCK,
      twiddle_h_rsc_0_5_AWBURST, twiddle_h_rsc_0_5_AWSIZE, twiddle_h_rsc_0_5_AWLEN,
      twiddle_h_rsc_0_5_AWADDR, twiddle_h_rsc_0_5_AWID, twiddle_h_rsc_triosy_0_5_lz,
      twiddle_h_rsc_0_6_s_tdone, twiddle_h_rsc_0_6_tr_write_done, twiddle_h_rsc_0_6_RREADY,
      twiddle_h_rsc_0_6_RVALID, twiddle_h_rsc_0_6_RUSER, twiddle_h_rsc_0_6_RLAST,
      twiddle_h_rsc_0_6_RRESP, twiddle_h_rsc_0_6_RDATA, twiddle_h_rsc_0_6_RID, twiddle_h_rsc_0_6_ARREADY,
      twiddle_h_rsc_0_6_ARVALID, twiddle_h_rsc_0_6_ARUSER, twiddle_h_rsc_0_6_ARREGION,
      twiddle_h_rsc_0_6_ARQOS, twiddle_h_rsc_0_6_ARPROT, twiddle_h_rsc_0_6_ARCACHE,
      twiddle_h_rsc_0_6_ARLOCK, twiddle_h_rsc_0_6_ARBURST, twiddle_h_rsc_0_6_ARSIZE,
      twiddle_h_rsc_0_6_ARLEN, twiddle_h_rsc_0_6_ARADDR, twiddle_h_rsc_0_6_ARID,
      twiddle_h_rsc_0_6_BREADY, twiddle_h_rsc_0_6_BVALID, twiddle_h_rsc_0_6_BUSER,
      twiddle_h_rsc_0_6_BRESP, twiddle_h_rsc_0_6_BID, twiddle_h_rsc_0_6_WREADY, twiddle_h_rsc_0_6_WVALID,
      twiddle_h_rsc_0_6_WUSER, twiddle_h_rsc_0_6_WLAST, twiddle_h_rsc_0_6_WSTRB,
      twiddle_h_rsc_0_6_WDATA, twiddle_h_rsc_0_6_AWREADY, twiddle_h_rsc_0_6_AWVALID,
      twiddle_h_rsc_0_6_AWUSER, twiddle_h_rsc_0_6_AWREGION, twiddle_h_rsc_0_6_AWQOS,
      twiddle_h_rsc_0_6_AWPROT, twiddle_h_rsc_0_6_AWCACHE, twiddle_h_rsc_0_6_AWLOCK,
      twiddle_h_rsc_0_6_AWBURST, twiddle_h_rsc_0_6_AWSIZE, twiddle_h_rsc_0_6_AWLEN,
      twiddle_h_rsc_0_6_AWADDR, twiddle_h_rsc_0_6_AWID, twiddle_h_rsc_triosy_0_6_lz,
      twiddle_h_rsc_0_7_s_tdone, twiddle_h_rsc_0_7_tr_write_done, twiddle_h_rsc_0_7_RREADY,
      twiddle_h_rsc_0_7_RVALID, twiddle_h_rsc_0_7_RUSER, twiddle_h_rsc_0_7_RLAST,
      twiddle_h_rsc_0_7_RRESP, twiddle_h_rsc_0_7_RDATA, twiddle_h_rsc_0_7_RID, twiddle_h_rsc_0_7_ARREADY,
      twiddle_h_rsc_0_7_ARVALID, twiddle_h_rsc_0_7_ARUSER, twiddle_h_rsc_0_7_ARREGION,
      twiddle_h_rsc_0_7_ARQOS, twiddle_h_rsc_0_7_ARPROT, twiddle_h_rsc_0_7_ARCACHE,
      twiddle_h_rsc_0_7_ARLOCK, twiddle_h_rsc_0_7_ARBURST, twiddle_h_rsc_0_7_ARSIZE,
      twiddle_h_rsc_0_7_ARLEN, twiddle_h_rsc_0_7_ARADDR, twiddle_h_rsc_0_7_ARID,
      twiddle_h_rsc_0_7_BREADY, twiddle_h_rsc_0_7_BVALID, twiddle_h_rsc_0_7_BUSER,
      twiddle_h_rsc_0_7_BRESP, twiddle_h_rsc_0_7_BID, twiddle_h_rsc_0_7_WREADY, twiddle_h_rsc_0_7_WVALID,
      twiddle_h_rsc_0_7_WUSER, twiddle_h_rsc_0_7_WLAST, twiddle_h_rsc_0_7_WSTRB,
      twiddle_h_rsc_0_7_WDATA, twiddle_h_rsc_0_7_AWREADY, twiddle_h_rsc_0_7_AWVALID,
      twiddle_h_rsc_0_7_AWUSER, twiddle_h_rsc_0_7_AWREGION, twiddle_h_rsc_0_7_AWQOS,
      twiddle_h_rsc_0_7_AWPROT, twiddle_h_rsc_0_7_AWCACHE, twiddle_h_rsc_0_7_AWLOCK,
      twiddle_h_rsc_0_7_AWBURST, twiddle_h_rsc_0_7_AWSIZE, twiddle_h_rsc_0_7_AWLEN,
      twiddle_h_rsc_0_7_AWADDR, twiddle_h_rsc_0_7_AWID, twiddle_h_rsc_triosy_0_7_lz,
      twiddle_h_rsc_0_8_s_tdone, twiddle_h_rsc_0_8_tr_write_done, twiddle_h_rsc_0_8_RREADY,
      twiddle_h_rsc_0_8_RVALID, twiddle_h_rsc_0_8_RUSER, twiddle_h_rsc_0_8_RLAST,
      twiddle_h_rsc_0_8_RRESP, twiddle_h_rsc_0_8_RDATA, twiddle_h_rsc_0_8_RID, twiddle_h_rsc_0_8_ARREADY,
      twiddle_h_rsc_0_8_ARVALID, twiddle_h_rsc_0_8_ARUSER, twiddle_h_rsc_0_8_ARREGION,
      twiddle_h_rsc_0_8_ARQOS, twiddle_h_rsc_0_8_ARPROT, twiddle_h_rsc_0_8_ARCACHE,
      twiddle_h_rsc_0_8_ARLOCK, twiddle_h_rsc_0_8_ARBURST, twiddle_h_rsc_0_8_ARSIZE,
      twiddle_h_rsc_0_8_ARLEN, twiddle_h_rsc_0_8_ARADDR, twiddle_h_rsc_0_8_ARID,
      twiddle_h_rsc_0_8_BREADY, twiddle_h_rsc_0_8_BVALID, twiddle_h_rsc_0_8_BUSER,
      twiddle_h_rsc_0_8_BRESP, twiddle_h_rsc_0_8_BID, twiddle_h_rsc_0_8_WREADY, twiddle_h_rsc_0_8_WVALID,
      twiddle_h_rsc_0_8_WUSER, twiddle_h_rsc_0_8_WLAST, twiddle_h_rsc_0_8_WSTRB,
      twiddle_h_rsc_0_8_WDATA, twiddle_h_rsc_0_8_AWREADY, twiddle_h_rsc_0_8_AWVALID,
      twiddle_h_rsc_0_8_AWUSER, twiddle_h_rsc_0_8_AWREGION, twiddle_h_rsc_0_8_AWQOS,
      twiddle_h_rsc_0_8_AWPROT, twiddle_h_rsc_0_8_AWCACHE, twiddle_h_rsc_0_8_AWLOCK,
      twiddle_h_rsc_0_8_AWBURST, twiddle_h_rsc_0_8_AWSIZE, twiddle_h_rsc_0_8_AWLEN,
      twiddle_h_rsc_0_8_AWADDR, twiddle_h_rsc_0_8_AWID, twiddle_h_rsc_triosy_0_8_lz,
      twiddle_h_rsc_0_9_s_tdone, twiddle_h_rsc_0_9_tr_write_done, twiddle_h_rsc_0_9_RREADY,
      twiddle_h_rsc_0_9_RVALID, twiddle_h_rsc_0_9_RUSER, twiddle_h_rsc_0_9_RLAST,
      twiddle_h_rsc_0_9_RRESP, twiddle_h_rsc_0_9_RDATA, twiddle_h_rsc_0_9_RID, twiddle_h_rsc_0_9_ARREADY,
      twiddle_h_rsc_0_9_ARVALID, twiddle_h_rsc_0_9_ARUSER, twiddle_h_rsc_0_9_ARREGION,
      twiddle_h_rsc_0_9_ARQOS, twiddle_h_rsc_0_9_ARPROT, twiddle_h_rsc_0_9_ARCACHE,
      twiddle_h_rsc_0_9_ARLOCK, twiddle_h_rsc_0_9_ARBURST, twiddle_h_rsc_0_9_ARSIZE,
      twiddle_h_rsc_0_9_ARLEN, twiddle_h_rsc_0_9_ARADDR, twiddle_h_rsc_0_9_ARID,
      twiddle_h_rsc_0_9_BREADY, twiddle_h_rsc_0_9_BVALID, twiddle_h_rsc_0_9_BUSER,
      twiddle_h_rsc_0_9_BRESP, twiddle_h_rsc_0_9_BID, twiddle_h_rsc_0_9_WREADY, twiddle_h_rsc_0_9_WVALID,
      twiddle_h_rsc_0_9_WUSER, twiddle_h_rsc_0_9_WLAST, twiddle_h_rsc_0_9_WSTRB,
      twiddle_h_rsc_0_9_WDATA, twiddle_h_rsc_0_9_AWREADY, twiddle_h_rsc_0_9_AWVALID,
      twiddle_h_rsc_0_9_AWUSER, twiddle_h_rsc_0_9_AWREGION, twiddle_h_rsc_0_9_AWQOS,
      twiddle_h_rsc_0_9_AWPROT, twiddle_h_rsc_0_9_AWCACHE, twiddle_h_rsc_0_9_AWLOCK,
      twiddle_h_rsc_0_9_AWBURST, twiddle_h_rsc_0_9_AWSIZE, twiddle_h_rsc_0_9_AWLEN,
      twiddle_h_rsc_0_9_AWADDR, twiddle_h_rsc_0_9_AWID, twiddle_h_rsc_triosy_0_9_lz,
      twiddle_h_rsc_0_10_s_tdone, twiddle_h_rsc_0_10_tr_write_done, twiddle_h_rsc_0_10_RREADY,
      twiddle_h_rsc_0_10_RVALID, twiddle_h_rsc_0_10_RUSER, twiddle_h_rsc_0_10_RLAST,
      twiddle_h_rsc_0_10_RRESP, twiddle_h_rsc_0_10_RDATA, twiddle_h_rsc_0_10_RID,
      twiddle_h_rsc_0_10_ARREADY, twiddle_h_rsc_0_10_ARVALID, twiddle_h_rsc_0_10_ARUSER,
      twiddle_h_rsc_0_10_ARREGION, twiddle_h_rsc_0_10_ARQOS, twiddle_h_rsc_0_10_ARPROT,
      twiddle_h_rsc_0_10_ARCACHE, twiddle_h_rsc_0_10_ARLOCK, twiddle_h_rsc_0_10_ARBURST,
      twiddle_h_rsc_0_10_ARSIZE, twiddle_h_rsc_0_10_ARLEN, twiddle_h_rsc_0_10_ARADDR,
      twiddle_h_rsc_0_10_ARID, twiddle_h_rsc_0_10_BREADY, twiddle_h_rsc_0_10_BVALID,
      twiddle_h_rsc_0_10_BUSER, twiddle_h_rsc_0_10_BRESP, twiddle_h_rsc_0_10_BID,
      twiddle_h_rsc_0_10_WREADY, twiddle_h_rsc_0_10_WVALID, twiddle_h_rsc_0_10_WUSER,
      twiddle_h_rsc_0_10_WLAST, twiddle_h_rsc_0_10_WSTRB, twiddle_h_rsc_0_10_WDATA,
      twiddle_h_rsc_0_10_AWREADY, twiddle_h_rsc_0_10_AWVALID, twiddle_h_rsc_0_10_AWUSER,
      twiddle_h_rsc_0_10_AWREGION, twiddle_h_rsc_0_10_AWQOS, twiddle_h_rsc_0_10_AWPROT,
      twiddle_h_rsc_0_10_AWCACHE, twiddle_h_rsc_0_10_AWLOCK, twiddle_h_rsc_0_10_AWBURST,
      twiddle_h_rsc_0_10_AWSIZE, twiddle_h_rsc_0_10_AWLEN, twiddle_h_rsc_0_10_AWADDR,
      twiddle_h_rsc_0_10_AWID, twiddle_h_rsc_triosy_0_10_lz, twiddle_h_rsc_0_11_s_tdone,
      twiddle_h_rsc_0_11_tr_write_done, twiddle_h_rsc_0_11_RREADY, twiddle_h_rsc_0_11_RVALID,
      twiddle_h_rsc_0_11_RUSER, twiddle_h_rsc_0_11_RLAST, twiddle_h_rsc_0_11_RRESP,
      twiddle_h_rsc_0_11_RDATA, twiddle_h_rsc_0_11_RID, twiddle_h_rsc_0_11_ARREADY,
      twiddle_h_rsc_0_11_ARVALID, twiddle_h_rsc_0_11_ARUSER, twiddle_h_rsc_0_11_ARREGION,
      twiddle_h_rsc_0_11_ARQOS, twiddle_h_rsc_0_11_ARPROT, twiddle_h_rsc_0_11_ARCACHE,
      twiddle_h_rsc_0_11_ARLOCK, twiddle_h_rsc_0_11_ARBURST, twiddle_h_rsc_0_11_ARSIZE,
      twiddle_h_rsc_0_11_ARLEN, twiddle_h_rsc_0_11_ARADDR, twiddle_h_rsc_0_11_ARID,
      twiddle_h_rsc_0_11_BREADY, twiddle_h_rsc_0_11_BVALID, twiddle_h_rsc_0_11_BUSER,
      twiddle_h_rsc_0_11_BRESP, twiddle_h_rsc_0_11_BID, twiddle_h_rsc_0_11_WREADY,
      twiddle_h_rsc_0_11_WVALID, twiddle_h_rsc_0_11_WUSER, twiddle_h_rsc_0_11_WLAST,
      twiddle_h_rsc_0_11_WSTRB, twiddle_h_rsc_0_11_WDATA, twiddle_h_rsc_0_11_AWREADY,
      twiddle_h_rsc_0_11_AWVALID, twiddle_h_rsc_0_11_AWUSER, twiddle_h_rsc_0_11_AWREGION,
      twiddle_h_rsc_0_11_AWQOS, twiddle_h_rsc_0_11_AWPROT, twiddle_h_rsc_0_11_AWCACHE,
      twiddle_h_rsc_0_11_AWLOCK, twiddle_h_rsc_0_11_AWBURST, twiddle_h_rsc_0_11_AWSIZE,
      twiddle_h_rsc_0_11_AWLEN, twiddle_h_rsc_0_11_AWADDR, twiddle_h_rsc_0_11_AWID,
      twiddle_h_rsc_triosy_0_11_lz, twiddle_h_rsc_0_12_s_tdone, twiddle_h_rsc_0_12_tr_write_done,
      twiddle_h_rsc_0_12_RREADY, twiddle_h_rsc_0_12_RVALID, twiddle_h_rsc_0_12_RUSER,
      twiddle_h_rsc_0_12_RLAST, twiddle_h_rsc_0_12_RRESP, twiddle_h_rsc_0_12_RDATA,
      twiddle_h_rsc_0_12_RID, twiddle_h_rsc_0_12_ARREADY, twiddle_h_rsc_0_12_ARVALID,
      twiddle_h_rsc_0_12_ARUSER, twiddle_h_rsc_0_12_ARREGION, twiddle_h_rsc_0_12_ARQOS,
      twiddle_h_rsc_0_12_ARPROT, twiddle_h_rsc_0_12_ARCACHE, twiddle_h_rsc_0_12_ARLOCK,
      twiddle_h_rsc_0_12_ARBURST, twiddle_h_rsc_0_12_ARSIZE, twiddle_h_rsc_0_12_ARLEN,
      twiddle_h_rsc_0_12_ARADDR, twiddle_h_rsc_0_12_ARID, twiddle_h_rsc_0_12_BREADY,
      twiddle_h_rsc_0_12_BVALID, twiddle_h_rsc_0_12_BUSER, twiddle_h_rsc_0_12_BRESP,
      twiddle_h_rsc_0_12_BID, twiddle_h_rsc_0_12_WREADY, twiddle_h_rsc_0_12_WVALID,
      twiddle_h_rsc_0_12_WUSER, twiddle_h_rsc_0_12_WLAST, twiddle_h_rsc_0_12_WSTRB,
      twiddle_h_rsc_0_12_WDATA, twiddle_h_rsc_0_12_AWREADY, twiddle_h_rsc_0_12_AWVALID,
      twiddle_h_rsc_0_12_AWUSER, twiddle_h_rsc_0_12_AWREGION, twiddle_h_rsc_0_12_AWQOS,
      twiddle_h_rsc_0_12_AWPROT, twiddle_h_rsc_0_12_AWCACHE, twiddle_h_rsc_0_12_AWLOCK,
      twiddle_h_rsc_0_12_AWBURST, twiddle_h_rsc_0_12_AWSIZE, twiddle_h_rsc_0_12_AWLEN,
      twiddle_h_rsc_0_12_AWADDR, twiddle_h_rsc_0_12_AWID, twiddle_h_rsc_triosy_0_12_lz,
      twiddle_h_rsc_0_13_s_tdone, twiddle_h_rsc_0_13_tr_write_done, twiddle_h_rsc_0_13_RREADY,
      twiddle_h_rsc_0_13_RVALID, twiddle_h_rsc_0_13_RUSER, twiddle_h_rsc_0_13_RLAST,
      twiddle_h_rsc_0_13_RRESP, twiddle_h_rsc_0_13_RDATA, twiddle_h_rsc_0_13_RID,
      twiddle_h_rsc_0_13_ARREADY, twiddle_h_rsc_0_13_ARVALID, twiddle_h_rsc_0_13_ARUSER,
      twiddle_h_rsc_0_13_ARREGION, twiddle_h_rsc_0_13_ARQOS, twiddle_h_rsc_0_13_ARPROT,
      twiddle_h_rsc_0_13_ARCACHE, twiddle_h_rsc_0_13_ARLOCK, twiddle_h_rsc_0_13_ARBURST,
      twiddle_h_rsc_0_13_ARSIZE, twiddle_h_rsc_0_13_ARLEN, twiddle_h_rsc_0_13_ARADDR,
      twiddle_h_rsc_0_13_ARID, twiddle_h_rsc_0_13_BREADY, twiddle_h_rsc_0_13_BVALID,
      twiddle_h_rsc_0_13_BUSER, twiddle_h_rsc_0_13_BRESP, twiddle_h_rsc_0_13_BID,
      twiddle_h_rsc_0_13_WREADY, twiddle_h_rsc_0_13_WVALID, twiddle_h_rsc_0_13_WUSER,
      twiddle_h_rsc_0_13_WLAST, twiddle_h_rsc_0_13_WSTRB, twiddle_h_rsc_0_13_WDATA,
      twiddle_h_rsc_0_13_AWREADY, twiddle_h_rsc_0_13_AWVALID, twiddle_h_rsc_0_13_AWUSER,
      twiddle_h_rsc_0_13_AWREGION, twiddle_h_rsc_0_13_AWQOS, twiddle_h_rsc_0_13_AWPROT,
      twiddle_h_rsc_0_13_AWCACHE, twiddle_h_rsc_0_13_AWLOCK, twiddle_h_rsc_0_13_AWBURST,
      twiddle_h_rsc_0_13_AWSIZE, twiddle_h_rsc_0_13_AWLEN, twiddle_h_rsc_0_13_AWADDR,
      twiddle_h_rsc_0_13_AWID, twiddle_h_rsc_triosy_0_13_lz, twiddle_h_rsc_0_14_s_tdone,
      twiddle_h_rsc_0_14_tr_write_done, twiddle_h_rsc_0_14_RREADY, twiddle_h_rsc_0_14_RVALID,
      twiddle_h_rsc_0_14_RUSER, twiddle_h_rsc_0_14_RLAST, twiddle_h_rsc_0_14_RRESP,
      twiddle_h_rsc_0_14_RDATA, twiddle_h_rsc_0_14_RID, twiddle_h_rsc_0_14_ARREADY,
      twiddle_h_rsc_0_14_ARVALID, twiddle_h_rsc_0_14_ARUSER, twiddle_h_rsc_0_14_ARREGION,
      twiddle_h_rsc_0_14_ARQOS, twiddle_h_rsc_0_14_ARPROT, twiddle_h_rsc_0_14_ARCACHE,
      twiddle_h_rsc_0_14_ARLOCK, twiddle_h_rsc_0_14_ARBURST, twiddle_h_rsc_0_14_ARSIZE,
      twiddle_h_rsc_0_14_ARLEN, twiddle_h_rsc_0_14_ARADDR, twiddle_h_rsc_0_14_ARID,
      twiddle_h_rsc_0_14_BREADY, twiddle_h_rsc_0_14_BVALID, twiddle_h_rsc_0_14_BUSER,
      twiddle_h_rsc_0_14_BRESP, twiddle_h_rsc_0_14_BID, twiddle_h_rsc_0_14_WREADY,
      twiddle_h_rsc_0_14_WVALID, twiddle_h_rsc_0_14_WUSER, twiddle_h_rsc_0_14_WLAST,
      twiddle_h_rsc_0_14_WSTRB, twiddle_h_rsc_0_14_WDATA, twiddle_h_rsc_0_14_AWREADY,
      twiddle_h_rsc_0_14_AWVALID, twiddle_h_rsc_0_14_AWUSER, twiddle_h_rsc_0_14_AWREGION,
      twiddle_h_rsc_0_14_AWQOS, twiddle_h_rsc_0_14_AWPROT, twiddle_h_rsc_0_14_AWCACHE,
      twiddle_h_rsc_0_14_AWLOCK, twiddle_h_rsc_0_14_AWBURST, twiddle_h_rsc_0_14_AWSIZE,
      twiddle_h_rsc_0_14_AWLEN, twiddle_h_rsc_0_14_AWADDR, twiddle_h_rsc_0_14_AWID,
      twiddle_h_rsc_triosy_0_14_lz, twiddle_h_rsc_0_15_s_tdone, twiddle_h_rsc_0_15_tr_write_done,
      twiddle_h_rsc_0_15_RREADY, twiddle_h_rsc_0_15_RVALID, twiddle_h_rsc_0_15_RUSER,
      twiddle_h_rsc_0_15_RLAST, twiddle_h_rsc_0_15_RRESP, twiddle_h_rsc_0_15_RDATA,
      twiddle_h_rsc_0_15_RID, twiddle_h_rsc_0_15_ARREADY, twiddle_h_rsc_0_15_ARVALID,
      twiddle_h_rsc_0_15_ARUSER, twiddle_h_rsc_0_15_ARREGION, twiddle_h_rsc_0_15_ARQOS,
      twiddle_h_rsc_0_15_ARPROT, twiddle_h_rsc_0_15_ARCACHE, twiddle_h_rsc_0_15_ARLOCK,
      twiddle_h_rsc_0_15_ARBURST, twiddle_h_rsc_0_15_ARSIZE, twiddle_h_rsc_0_15_ARLEN,
      twiddle_h_rsc_0_15_ARADDR, twiddle_h_rsc_0_15_ARID, twiddle_h_rsc_0_15_BREADY,
      twiddle_h_rsc_0_15_BVALID, twiddle_h_rsc_0_15_BUSER, twiddle_h_rsc_0_15_BRESP,
      twiddle_h_rsc_0_15_BID, twiddle_h_rsc_0_15_WREADY, twiddle_h_rsc_0_15_WVALID,
      twiddle_h_rsc_0_15_WUSER, twiddle_h_rsc_0_15_WLAST, twiddle_h_rsc_0_15_WSTRB,
      twiddle_h_rsc_0_15_WDATA, twiddle_h_rsc_0_15_AWREADY, twiddle_h_rsc_0_15_AWVALID,
      twiddle_h_rsc_0_15_AWUSER, twiddle_h_rsc_0_15_AWREGION, twiddle_h_rsc_0_15_AWQOS,
      twiddle_h_rsc_0_15_AWPROT, twiddle_h_rsc_0_15_AWCACHE, twiddle_h_rsc_0_15_AWLOCK,
      twiddle_h_rsc_0_15_AWBURST, twiddle_h_rsc_0_15_AWSIZE, twiddle_h_rsc_0_15_AWLEN,
      twiddle_h_rsc_0_15_AWADDR, twiddle_h_rsc_0_15_AWID, twiddle_h_rsc_triosy_0_15_lz
);
  input clk;
  input rst;
  input xt_rsc_0_0_s_tdone;
  input xt_rsc_0_0_tr_write_done;
  input xt_rsc_0_0_RREADY;
  output xt_rsc_0_0_RVALID;
  output xt_rsc_0_0_RUSER;
  output xt_rsc_0_0_RLAST;
  output [1:0] xt_rsc_0_0_RRESP;
  output [31:0] xt_rsc_0_0_RDATA;
  output xt_rsc_0_0_RID;
  output xt_rsc_0_0_ARREADY;
  input xt_rsc_0_0_ARVALID;
  input xt_rsc_0_0_ARUSER;
  input [3:0] xt_rsc_0_0_ARREGION;
  input [3:0] xt_rsc_0_0_ARQOS;
  input [2:0] xt_rsc_0_0_ARPROT;
  input [3:0] xt_rsc_0_0_ARCACHE;
  input xt_rsc_0_0_ARLOCK;
  input [1:0] xt_rsc_0_0_ARBURST;
  input [2:0] xt_rsc_0_0_ARSIZE;
  input [7:0] xt_rsc_0_0_ARLEN;
  input [11:0] xt_rsc_0_0_ARADDR;
  input xt_rsc_0_0_ARID;
  input xt_rsc_0_0_BREADY;
  output xt_rsc_0_0_BVALID;
  output xt_rsc_0_0_BUSER;
  output [1:0] xt_rsc_0_0_BRESP;
  output xt_rsc_0_0_BID;
  output xt_rsc_0_0_WREADY;
  input xt_rsc_0_0_WVALID;
  input xt_rsc_0_0_WUSER;
  input xt_rsc_0_0_WLAST;
  input [3:0] xt_rsc_0_0_WSTRB;
  input [31:0] xt_rsc_0_0_WDATA;
  output xt_rsc_0_0_AWREADY;
  input xt_rsc_0_0_AWVALID;
  input xt_rsc_0_0_AWUSER;
  input [3:0] xt_rsc_0_0_AWREGION;
  input [3:0] xt_rsc_0_0_AWQOS;
  input [2:0] xt_rsc_0_0_AWPROT;
  input [3:0] xt_rsc_0_0_AWCACHE;
  input xt_rsc_0_0_AWLOCK;
  input [1:0] xt_rsc_0_0_AWBURST;
  input [2:0] xt_rsc_0_0_AWSIZE;
  input [7:0] xt_rsc_0_0_AWLEN;
  input [11:0] xt_rsc_0_0_AWADDR;
  input xt_rsc_0_0_AWID;
  output xt_rsc_triosy_0_0_lz;
  input xt_rsc_0_1_s_tdone;
  input xt_rsc_0_1_tr_write_done;
  input xt_rsc_0_1_RREADY;
  output xt_rsc_0_1_RVALID;
  output xt_rsc_0_1_RUSER;
  output xt_rsc_0_1_RLAST;
  output [1:0] xt_rsc_0_1_RRESP;
  output [31:0] xt_rsc_0_1_RDATA;
  output xt_rsc_0_1_RID;
  output xt_rsc_0_1_ARREADY;
  input xt_rsc_0_1_ARVALID;
  input xt_rsc_0_1_ARUSER;
  input [3:0] xt_rsc_0_1_ARREGION;
  input [3:0] xt_rsc_0_1_ARQOS;
  input [2:0] xt_rsc_0_1_ARPROT;
  input [3:0] xt_rsc_0_1_ARCACHE;
  input xt_rsc_0_1_ARLOCK;
  input [1:0] xt_rsc_0_1_ARBURST;
  input [2:0] xt_rsc_0_1_ARSIZE;
  input [7:0] xt_rsc_0_1_ARLEN;
  input [11:0] xt_rsc_0_1_ARADDR;
  input xt_rsc_0_1_ARID;
  input xt_rsc_0_1_BREADY;
  output xt_rsc_0_1_BVALID;
  output xt_rsc_0_1_BUSER;
  output [1:0] xt_rsc_0_1_BRESP;
  output xt_rsc_0_1_BID;
  output xt_rsc_0_1_WREADY;
  input xt_rsc_0_1_WVALID;
  input xt_rsc_0_1_WUSER;
  input xt_rsc_0_1_WLAST;
  input [3:0] xt_rsc_0_1_WSTRB;
  input [31:0] xt_rsc_0_1_WDATA;
  output xt_rsc_0_1_AWREADY;
  input xt_rsc_0_1_AWVALID;
  input xt_rsc_0_1_AWUSER;
  input [3:0] xt_rsc_0_1_AWREGION;
  input [3:0] xt_rsc_0_1_AWQOS;
  input [2:0] xt_rsc_0_1_AWPROT;
  input [3:0] xt_rsc_0_1_AWCACHE;
  input xt_rsc_0_1_AWLOCK;
  input [1:0] xt_rsc_0_1_AWBURST;
  input [2:0] xt_rsc_0_1_AWSIZE;
  input [7:0] xt_rsc_0_1_AWLEN;
  input [11:0] xt_rsc_0_1_AWADDR;
  input xt_rsc_0_1_AWID;
  output xt_rsc_triosy_0_1_lz;
  input xt_rsc_0_2_s_tdone;
  input xt_rsc_0_2_tr_write_done;
  input xt_rsc_0_2_RREADY;
  output xt_rsc_0_2_RVALID;
  output xt_rsc_0_2_RUSER;
  output xt_rsc_0_2_RLAST;
  output [1:0] xt_rsc_0_2_RRESP;
  output [31:0] xt_rsc_0_2_RDATA;
  output xt_rsc_0_2_RID;
  output xt_rsc_0_2_ARREADY;
  input xt_rsc_0_2_ARVALID;
  input xt_rsc_0_2_ARUSER;
  input [3:0] xt_rsc_0_2_ARREGION;
  input [3:0] xt_rsc_0_2_ARQOS;
  input [2:0] xt_rsc_0_2_ARPROT;
  input [3:0] xt_rsc_0_2_ARCACHE;
  input xt_rsc_0_2_ARLOCK;
  input [1:0] xt_rsc_0_2_ARBURST;
  input [2:0] xt_rsc_0_2_ARSIZE;
  input [7:0] xt_rsc_0_2_ARLEN;
  input [11:0] xt_rsc_0_2_ARADDR;
  input xt_rsc_0_2_ARID;
  input xt_rsc_0_2_BREADY;
  output xt_rsc_0_2_BVALID;
  output xt_rsc_0_2_BUSER;
  output [1:0] xt_rsc_0_2_BRESP;
  output xt_rsc_0_2_BID;
  output xt_rsc_0_2_WREADY;
  input xt_rsc_0_2_WVALID;
  input xt_rsc_0_2_WUSER;
  input xt_rsc_0_2_WLAST;
  input [3:0] xt_rsc_0_2_WSTRB;
  input [31:0] xt_rsc_0_2_WDATA;
  output xt_rsc_0_2_AWREADY;
  input xt_rsc_0_2_AWVALID;
  input xt_rsc_0_2_AWUSER;
  input [3:0] xt_rsc_0_2_AWREGION;
  input [3:0] xt_rsc_0_2_AWQOS;
  input [2:0] xt_rsc_0_2_AWPROT;
  input [3:0] xt_rsc_0_2_AWCACHE;
  input xt_rsc_0_2_AWLOCK;
  input [1:0] xt_rsc_0_2_AWBURST;
  input [2:0] xt_rsc_0_2_AWSIZE;
  input [7:0] xt_rsc_0_2_AWLEN;
  input [11:0] xt_rsc_0_2_AWADDR;
  input xt_rsc_0_2_AWID;
  output xt_rsc_triosy_0_2_lz;
  input xt_rsc_0_3_s_tdone;
  input xt_rsc_0_3_tr_write_done;
  input xt_rsc_0_3_RREADY;
  output xt_rsc_0_3_RVALID;
  output xt_rsc_0_3_RUSER;
  output xt_rsc_0_3_RLAST;
  output [1:0] xt_rsc_0_3_RRESP;
  output [31:0] xt_rsc_0_3_RDATA;
  output xt_rsc_0_3_RID;
  output xt_rsc_0_3_ARREADY;
  input xt_rsc_0_3_ARVALID;
  input xt_rsc_0_3_ARUSER;
  input [3:0] xt_rsc_0_3_ARREGION;
  input [3:0] xt_rsc_0_3_ARQOS;
  input [2:0] xt_rsc_0_3_ARPROT;
  input [3:0] xt_rsc_0_3_ARCACHE;
  input xt_rsc_0_3_ARLOCK;
  input [1:0] xt_rsc_0_3_ARBURST;
  input [2:0] xt_rsc_0_3_ARSIZE;
  input [7:0] xt_rsc_0_3_ARLEN;
  input [11:0] xt_rsc_0_3_ARADDR;
  input xt_rsc_0_3_ARID;
  input xt_rsc_0_3_BREADY;
  output xt_rsc_0_3_BVALID;
  output xt_rsc_0_3_BUSER;
  output [1:0] xt_rsc_0_3_BRESP;
  output xt_rsc_0_3_BID;
  output xt_rsc_0_3_WREADY;
  input xt_rsc_0_3_WVALID;
  input xt_rsc_0_3_WUSER;
  input xt_rsc_0_3_WLAST;
  input [3:0] xt_rsc_0_3_WSTRB;
  input [31:0] xt_rsc_0_3_WDATA;
  output xt_rsc_0_3_AWREADY;
  input xt_rsc_0_3_AWVALID;
  input xt_rsc_0_3_AWUSER;
  input [3:0] xt_rsc_0_3_AWREGION;
  input [3:0] xt_rsc_0_3_AWQOS;
  input [2:0] xt_rsc_0_3_AWPROT;
  input [3:0] xt_rsc_0_3_AWCACHE;
  input xt_rsc_0_3_AWLOCK;
  input [1:0] xt_rsc_0_3_AWBURST;
  input [2:0] xt_rsc_0_3_AWSIZE;
  input [7:0] xt_rsc_0_3_AWLEN;
  input [11:0] xt_rsc_0_3_AWADDR;
  input xt_rsc_0_3_AWID;
  output xt_rsc_triosy_0_3_lz;
  input xt_rsc_0_4_s_tdone;
  input xt_rsc_0_4_tr_write_done;
  input xt_rsc_0_4_RREADY;
  output xt_rsc_0_4_RVALID;
  output xt_rsc_0_4_RUSER;
  output xt_rsc_0_4_RLAST;
  output [1:0] xt_rsc_0_4_RRESP;
  output [31:0] xt_rsc_0_4_RDATA;
  output xt_rsc_0_4_RID;
  output xt_rsc_0_4_ARREADY;
  input xt_rsc_0_4_ARVALID;
  input xt_rsc_0_4_ARUSER;
  input [3:0] xt_rsc_0_4_ARREGION;
  input [3:0] xt_rsc_0_4_ARQOS;
  input [2:0] xt_rsc_0_4_ARPROT;
  input [3:0] xt_rsc_0_4_ARCACHE;
  input xt_rsc_0_4_ARLOCK;
  input [1:0] xt_rsc_0_4_ARBURST;
  input [2:0] xt_rsc_0_4_ARSIZE;
  input [7:0] xt_rsc_0_4_ARLEN;
  input [11:0] xt_rsc_0_4_ARADDR;
  input xt_rsc_0_4_ARID;
  input xt_rsc_0_4_BREADY;
  output xt_rsc_0_4_BVALID;
  output xt_rsc_0_4_BUSER;
  output [1:0] xt_rsc_0_4_BRESP;
  output xt_rsc_0_4_BID;
  output xt_rsc_0_4_WREADY;
  input xt_rsc_0_4_WVALID;
  input xt_rsc_0_4_WUSER;
  input xt_rsc_0_4_WLAST;
  input [3:0] xt_rsc_0_4_WSTRB;
  input [31:0] xt_rsc_0_4_WDATA;
  output xt_rsc_0_4_AWREADY;
  input xt_rsc_0_4_AWVALID;
  input xt_rsc_0_4_AWUSER;
  input [3:0] xt_rsc_0_4_AWREGION;
  input [3:0] xt_rsc_0_4_AWQOS;
  input [2:0] xt_rsc_0_4_AWPROT;
  input [3:0] xt_rsc_0_4_AWCACHE;
  input xt_rsc_0_4_AWLOCK;
  input [1:0] xt_rsc_0_4_AWBURST;
  input [2:0] xt_rsc_0_4_AWSIZE;
  input [7:0] xt_rsc_0_4_AWLEN;
  input [11:0] xt_rsc_0_4_AWADDR;
  input xt_rsc_0_4_AWID;
  output xt_rsc_triosy_0_4_lz;
  input xt_rsc_0_5_s_tdone;
  input xt_rsc_0_5_tr_write_done;
  input xt_rsc_0_5_RREADY;
  output xt_rsc_0_5_RVALID;
  output xt_rsc_0_5_RUSER;
  output xt_rsc_0_5_RLAST;
  output [1:0] xt_rsc_0_5_RRESP;
  output [31:0] xt_rsc_0_5_RDATA;
  output xt_rsc_0_5_RID;
  output xt_rsc_0_5_ARREADY;
  input xt_rsc_0_5_ARVALID;
  input xt_rsc_0_5_ARUSER;
  input [3:0] xt_rsc_0_5_ARREGION;
  input [3:0] xt_rsc_0_5_ARQOS;
  input [2:0] xt_rsc_0_5_ARPROT;
  input [3:0] xt_rsc_0_5_ARCACHE;
  input xt_rsc_0_5_ARLOCK;
  input [1:0] xt_rsc_0_5_ARBURST;
  input [2:0] xt_rsc_0_5_ARSIZE;
  input [7:0] xt_rsc_0_5_ARLEN;
  input [11:0] xt_rsc_0_5_ARADDR;
  input xt_rsc_0_5_ARID;
  input xt_rsc_0_5_BREADY;
  output xt_rsc_0_5_BVALID;
  output xt_rsc_0_5_BUSER;
  output [1:0] xt_rsc_0_5_BRESP;
  output xt_rsc_0_5_BID;
  output xt_rsc_0_5_WREADY;
  input xt_rsc_0_5_WVALID;
  input xt_rsc_0_5_WUSER;
  input xt_rsc_0_5_WLAST;
  input [3:0] xt_rsc_0_5_WSTRB;
  input [31:0] xt_rsc_0_5_WDATA;
  output xt_rsc_0_5_AWREADY;
  input xt_rsc_0_5_AWVALID;
  input xt_rsc_0_5_AWUSER;
  input [3:0] xt_rsc_0_5_AWREGION;
  input [3:0] xt_rsc_0_5_AWQOS;
  input [2:0] xt_rsc_0_5_AWPROT;
  input [3:0] xt_rsc_0_5_AWCACHE;
  input xt_rsc_0_5_AWLOCK;
  input [1:0] xt_rsc_0_5_AWBURST;
  input [2:0] xt_rsc_0_5_AWSIZE;
  input [7:0] xt_rsc_0_5_AWLEN;
  input [11:0] xt_rsc_0_5_AWADDR;
  input xt_rsc_0_5_AWID;
  output xt_rsc_triosy_0_5_lz;
  input xt_rsc_0_6_s_tdone;
  input xt_rsc_0_6_tr_write_done;
  input xt_rsc_0_6_RREADY;
  output xt_rsc_0_6_RVALID;
  output xt_rsc_0_6_RUSER;
  output xt_rsc_0_6_RLAST;
  output [1:0] xt_rsc_0_6_RRESP;
  output [31:0] xt_rsc_0_6_RDATA;
  output xt_rsc_0_6_RID;
  output xt_rsc_0_6_ARREADY;
  input xt_rsc_0_6_ARVALID;
  input xt_rsc_0_6_ARUSER;
  input [3:0] xt_rsc_0_6_ARREGION;
  input [3:0] xt_rsc_0_6_ARQOS;
  input [2:0] xt_rsc_0_6_ARPROT;
  input [3:0] xt_rsc_0_6_ARCACHE;
  input xt_rsc_0_6_ARLOCK;
  input [1:0] xt_rsc_0_6_ARBURST;
  input [2:0] xt_rsc_0_6_ARSIZE;
  input [7:0] xt_rsc_0_6_ARLEN;
  input [11:0] xt_rsc_0_6_ARADDR;
  input xt_rsc_0_6_ARID;
  input xt_rsc_0_6_BREADY;
  output xt_rsc_0_6_BVALID;
  output xt_rsc_0_6_BUSER;
  output [1:0] xt_rsc_0_6_BRESP;
  output xt_rsc_0_6_BID;
  output xt_rsc_0_6_WREADY;
  input xt_rsc_0_6_WVALID;
  input xt_rsc_0_6_WUSER;
  input xt_rsc_0_6_WLAST;
  input [3:0] xt_rsc_0_6_WSTRB;
  input [31:0] xt_rsc_0_6_WDATA;
  output xt_rsc_0_6_AWREADY;
  input xt_rsc_0_6_AWVALID;
  input xt_rsc_0_6_AWUSER;
  input [3:0] xt_rsc_0_6_AWREGION;
  input [3:0] xt_rsc_0_6_AWQOS;
  input [2:0] xt_rsc_0_6_AWPROT;
  input [3:0] xt_rsc_0_6_AWCACHE;
  input xt_rsc_0_6_AWLOCK;
  input [1:0] xt_rsc_0_6_AWBURST;
  input [2:0] xt_rsc_0_6_AWSIZE;
  input [7:0] xt_rsc_0_6_AWLEN;
  input [11:0] xt_rsc_0_6_AWADDR;
  input xt_rsc_0_6_AWID;
  output xt_rsc_triosy_0_6_lz;
  input xt_rsc_0_7_s_tdone;
  input xt_rsc_0_7_tr_write_done;
  input xt_rsc_0_7_RREADY;
  output xt_rsc_0_7_RVALID;
  output xt_rsc_0_7_RUSER;
  output xt_rsc_0_7_RLAST;
  output [1:0] xt_rsc_0_7_RRESP;
  output [31:0] xt_rsc_0_7_RDATA;
  output xt_rsc_0_7_RID;
  output xt_rsc_0_7_ARREADY;
  input xt_rsc_0_7_ARVALID;
  input xt_rsc_0_7_ARUSER;
  input [3:0] xt_rsc_0_7_ARREGION;
  input [3:0] xt_rsc_0_7_ARQOS;
  input [2:0] xt_rsc_0_7_ARPROT;
  input [3:0] xt_rsc_0_7_ARCACHE;
  input xt_rsc_0_7_ARLOCK;
  input [1:0] xt_rsc_0_7_ARBURST;
  input [2:0] xt_rsc_0_7_ARSIZE;
  input [7:0] xt_rsc_0_7_ARLEN;
  input [11:0] xt_rsc_0_7_ARADDR;
  input xt_rsc_0_7_ARID;
  input xt_rsc_0_7_BREADY;
  output xt_rsc_0_7_BVALID;
  output xt_rsc_0_7_BUSER;
  output [1:0] xt_rsc_0_7_BRESP;
  output xt_rsc_0_7_BID;
  output xt_rsc_0_7_WREADY;
  input xt_rsc_0_7_WVALID;
  input xt_rsc_0_7_WUSER;
  input xt_rsc_0_7_WLAST;
  input [3:0] xt_rsc_0_7_WSTRB;
  input [31:0] xt_rsc_0_7_WDATA;
  output xt_rsc_0_7_AWREADY;
  input xt_rsc_0_7_AWVALID;
  input xt_rsc_0_7_AWUSER;
  input [3:0] xt_rsc_0_7_AWREGION;
  input [3:0] xt_rsc_0_7_AWQOS;
  input [2:0] xt_rsc_0_7_AWPROT;
  input [3:0] xt_rsc_0_7_AWCACHE;
  input xt_rsc_0_7_AWLOCK;
  input [1:0] xt_rsc_0_7_AWBURST;
  input [2:0] xt_rsc_0_7_AWSIZE;
  input [7:0] xt_rsc_0_7_AWLEN;
  input [11:0] xt_rsc_0_7_AWADDR;
  input xt_rsc_0_7_AWID;
  output xt_rsc_triosy_0_7_lz;
  input xt_rsc_0_8_s_tdone;
  input xt_rsc_0_8_tr_write_done;
  input xt_rsc_0_8_RREADY;
  output xt_rsc_0_8_RVALID;
  output xt_rsc_0_8_RUSER;
  output xt_rsc_0_8_RLAST;
  output [1:0] xt_rsc_0_8_RRESP;
  output [31:0] xt_rsc_0_8_RDATA;
  output xt_rsc_0_8_RID;
  output xt_rsc_0_8_ARREADY;
  input xt_rsc_0_8_ARVALID;
  input xt_rsc_0_8_ARUSER;
  input [3:0] xt_rsc_0_8_ARREGION;
  input [3:0] xt_rsc_0_8_ARQOS;
  input [2:0] xt_rsc_0_8_ARPROT;
  input [3:0] xt_rsc_0_8_ARCACHE;
  input xt_rsc_0_8_ARLOCK;
  input [1:0] xt_rsc_0_8_ARBURST;
  input [2:0] xt_rsc_0_8_ARSIZE;
  input [7:0] xt_rsc_0_8_ARLEN;
  input [11:0] xt_rsc_0_8_ARADDR;
  input xt_rsc_0_8_ARID;
  input xt_rsc_0_8_BREADY;
  output xt_rsc_0_8_BVALID;
  output xt_rsc_0_8_BUSER;
  output [1:0] xt_rsc_0_8_BRESP;
  output xt_rsc_0_8_BID;
  output xt_rsc_0_8_WREADY;
  input xt_rsc_0_8_WVALID;
  input xt_rsc_0_8_WUSER;
  input xt_rsc_0_8_WLAST;
  input [3:0] xt_rsc_0_8_WSTRB;
  input [31:0] xt_rsc_0_8_WDATA;
  output xt_rsc_0_8_AWREADY;
  input xt_rsc_0_8_AWVALID;
  input xt_rsc_0_8_AWUSER;
  input [3:0] xt_rsc_0_8_AWREGION;
  input [3:0] xt_rsc_0_8_AWQOS;
  input [2:0] xt_rsc_0_8_AWPROT;
  input [3:0] xt_rsc_0_8_AWCACHE;
  input xt_rsc_0_8_AWLOCK;
  input [1:0] xt_rsc_0_8_AWBURST;
  input [2:0] xt_rsc_0_8_AWSIZE;
  input [7:0] xt_rsc_0_8_AWLEN;
  input [11:0] xt_rsc_0_8_AWADDR;
  input xt_rsc_0_8_AWID;
  output xt_rsc_triosy_0_8_lz;
  input xt_rsc_0_9_s_tdone;
  input xt_rsc_0_9_tr_write_done;
  input xt_rsc_0_9_RREADY;
  output xt_rsc_0_9_RVALID;
  output xt_rsc_0_9_RUSER;
  output xt_rsc_0_9_RLAST;
  output [1:0] xt_rsc_0_9_RRESP;
  output [31:0] xt_rsc_0_9_RDATA;
  output xt_rsc_0_9_RID;
  output xt_rsc_0_9_ARREADY;
  input xt_rsc_0_9_ARVALID;
  input xt_rsc_0_9_ARUSER;
  input [3:0] xt_rsc_0_9_ARREGION;
  input [3:0] xt_rsc_0_9_ARQOS;
  input [2:0] xt_rsc_0_9_ARPROT;
  input [3:0] xt_rsc_0_9_ARCACHE;
  input xt_rsc_0_9_ARLOCK;
  input [1:0] xt_rsc_0_9_ARBURST;
  input [2:0] xt_rsc_0_9_ARSIZE;
  input [7:0] xt_rsc_0_9_ARLEN;
  input [11:0] xt_rsc_0_9_ARADDR;
  input xt_rsc_0_9_ARID;
  input xt_rsc_0_9_BREADY;
  output xt_rsc_0_9_BVALID;
  output xt_rsc_0_9_BUSER;
  output [1:0] xt_rsc_0_9_BRESP;
  output xt_rsc_0_9_BID;
  output xt_rsc_0_9_WREADY;
  input xt_rsc_0_9_WVALID;
  input xt_rsc_0_9_WUSER;
  input xt_rsc_0_9_WLAST;
  input [3:0] xt_rsc_0_9_WSTRB;
  input [31:0] xt_rsc_0_9_WDATA;
  output xt_rsc_0_9_AWREADY;
  input xt_rsc_0_9_AWVALID;
  input xt_rsc_0_9_AWUSER;
  input [3:0] xt_rsc_0_9_AWREGION;
  input [3:0] xt_rsc_0_9_AWQOS;
  input [2:0] xt_rsc_0_9_AWPROT;
  input [3:0] xt_rsc_0_9_AWCACHE;
  input xt_rsc_0_9_AWLOCK;
  input [1:0] xt_rsc_0_9_AWBURST;
  input [2:0] xt_rsc_0_9_AWSIZE;
  input [7:0] xt_rsc_0_9_AWLEN;
  input [11:0] xt_rsc_0_9_AWADDR;
  input xt_rsc_0_9_AWID;
  output xt_rsc_triosy_0_9_lz;
  input xt_rsc_0_10_s_tdone;
  input xt_rsc_0_10_tr_write_done;
  input xt_rsc_0_10_RREADY;
  output xt_rsc_0_10_RVALID;
  output xt_rsc_0_10_RUSER;
  output xt_rsc_0_10_RLAST;
  output [1:0] xt_rsc_0_10_RRESP;
  output [31:0] xt_rsc_0_10_RDATA;
  output xt_rsc_0_10_RID;
  output xt_rsc_0_10_ARREADY;
  input xt_rsc_0_10_ARVALID;
  input xt_rsc_0_10_ARUSER;
  input [3:0] xt_rsc_0_10_ARREGION;
  input [3:0] xt_rsc_0_10_ARQOS;
  input [2:0] xt_rsc_0_10_ARPROT;
  input [3:0] xt_rsc_0_10_ARCACHE;
  input xt_rsc_0_10_ARLOCK;
  input [1:0] xt_rsc_0_10_ARBURST;
  input [2:0] xt_rsc_0_10_ARSIZE;
  input [7:0] xt_rsc_0_10_ARLEN;
  input [11:0] xt_rsc_0_10_ARADDR;
  input xt_rsc_0_10_ARID;
  input xt_rsc_0_10_BREADY;
  output xt_rsc_0_10_BVALID;
  output xt_rsc_0_10_BUSER;
  output [1:0] xt_rsc_0_10_BRESP;
  output xt_rsc_0_10_BID;
  output xt_rsc_0_10_WREADY;
  input xt_rsc_0_10_WVALID;
  input xt_rsc_0_10_WUSER;
  input xt_rsc_0_10_WLAST;
  input [3:0] xt_rsc_0_10_WSTRB;
  input [31:0] xt_rsc_0_10_WDATA;
  output xt_rsc_0_10_AWREADY;
  input xt_rsc_0_10_AWVALID;
  input xt_rsc_0_10_AWUSER;
  input [3:0] xt_rsc_0_10_AWREGION;
  input [3:0] xt_rsc_0_10_AWQOS;
  input [2:0] xt_rsc_0_10_AWPROT;
  input [3:0] xt_rsc_0_10_AWCACHE;
  input xt_rsc_0_10_AWLOCK;
  input [1:0] xt_rsc_0_10_AWBURST;
  input [2:0] xt_rsc_0_10_AWSIZE;
  input [7:0] xt_rsc_0_10_AWLEN;
  input [11:0] xt_rsc_0_10_AWADDR;
  input xt_rsc_0_10_AWID;
  output xt_rsc_triosy_0_10_lz;
  input xt_rsc_0_11_s_tdone;
  input xt_rsc_0_11_tr_write_done;
  input xt_rsc_0_11_RREADY;
  output xt_rsc_0_11_RVALID;
  output xt_rsc_0_11_RUSER;
  output xt_rsc_0_11_RLAST;
  output [1:0] xt_rsc_0_11_RRESP;
  output [31:0] xt_rsc_0_11_RDATA;
  output xt_rsc_0_11_RID;
  output xt_rsc_0_11_ARREADY;
  input xt_rsc_0_11_ARVALID;
  input xt_rsc_0_11_ARUSER;
  input [3:0] xt_rsc_0_11_ARREGION;
  input [3:0] xt_rsc_0_11_ARQOS;
  input [2:0] xt_rsc_0_11_ARPROT;
  input [3:0] xt_rsc_0_11_ARCACHE;
  input xt_rsc_0_11_ARLOCK;
  input [1:0] xt_rsc_0_11_ARBURST;
  input [2:0] xt_rsc_0_11_ARSIZE;
  input [7:0] xt_rsc_0_11_ARLEN;
  input [11:0] xt_rsc_0_11_ARADDR;
  input xt_rsc_0_11_ARID;
  input xt_rsc_0_11_BREADY;
  output xt_rsc_0_11_BVALID;
  output xt_rsc_0_11_BUSER;
  output [1:0] xt_rsc_0_11_BRESP;
  output xt_rsc_0_11_BID;
  output xt_rsc_0_11_WREADY;
  input xt_rsc_0_11_WVALID;
  input xt_rsc_0_11_WUSER;
  input xt_rsc_0_11_WLAST;
  input [3:0] xt_rsc_0_11_WSTRB;
  input [31:0] xt_rsc_0_11_WDATA;
  output xt_rsc_0_11_AWREADY;
  input xt_rsc_0_11_AWVALID;
  input xt_rsc_0_11_AWUSER;
  input [3:0] xt_rsc_0_11_AWREGION;
  input [3:0] xt_rsc_0_11_AWQOS;
  input [2:0] xt_rsc_0_11_AWPROT;
  input [3:0] xt_rsc_0_11_AWCACHE;
  input xt_rsc_0_11_AWLOCK;
  input [1:0] xt_rsc_0_11_AWBURST;
  input [2:0] xt_rsc_0_11_AWSIZE;
  input [7:0] xt_rsc_0_11_AWLEN;
  input [11:0] xt_rsc_0_11_AWADDR;
  input xt_rsc_0_11_AWID;
  output xt_rsc_triosy_0_11_lz;
  input xt_rsc_0_12_s_tdone;
  input xt_rsc_0_12_tr_write_done;
  input xt_rsc_0_12_RREADY;
  output xt_rsc_0_12_RVALID;
  output xt_rsc_0_12_RUSER;
  output xt_rsc_0_12_RLAST;
  output [1:0] xt_rsc_0_12_RRESP;
  output [31:0] xt_rsc_0_12_RDATA;
  output xt_rsc_0_12_RID;
  output xt_rsc_0_12_ARREADY;
  input xt_rsc_0_12_ARVALID;
  input xt_rsc_0_12_ARUSER;
  input [3:0] xt_rsc_0_12_ARREGION;
  input [3:0] xt_rsc_0_12_ARQOS;
  input [2:0] xt_rsc_0_12_ARPROT;
  input [3:0] xt_rsc_0_12_ARCACHE;
  input xt_rsc_0_12_ARLOCK;
  input [1:0] xt_rsc_0_12_ARBURST;
  input [2:0] xt_rsc_0_12_ARSIZE;
  input [7:0] xt_rsc_0_12_ARLEN;
  input [11:0] xt_rsc_0_12_ARADDR;
  input xt_rsc_0_12_ARID;
  input xt_rsc_0_12_BREADY;
  output xt_rsc_0_12_BVALID;
  output xt_rsc_0_12_BUSER;
  output [1:0] xt_rsc_0_12_BRESP;
  output xt_rsc_0_12_BID;
  output xt_rsc_0_12_WREADY;
  input xt_rsc_0_12_WVALID;
  input xt_rsc_0_12_WUSER;
  input xt_rsc_0_12_WLAST;
  input [3:0] xt_rsc_0_12_WSTRB;
  input [31:0] xt_rsc_0_12_WDATA;
  output xt_rsc_0_12_AWREADY;
  input xt_rsc_0_12_AWVALID;
  input xt_rsc_0_12_AWUSER;
  input [3:0] xt_rsc_0_12_AWREGION;
  input [3:0] xt_rsc_0_12_AWQOS;
  input [2:0] xt_rsc_0_12_AWPROT;
  input [3:0] xt_rsc_0_12_AWCACHE;
  input xt_rsc_0_12_AWLOCK;
  input [1:0] xt_rsc_0_12_AWBURST;
  input [2:0] xt_rsc_0_12_AWSIZE;
  input [7:0] xt_rsc_0_12_AWLEN;
  input [11:0] xt_rsc_0_12_AWADDR;
  input xt_rsc_0_12_AWID;
  output xt_rsc_triosy_0_12_lz;
  input xt_rsc_0_13_s_tdone;
  input xt_rsc_0_13_tr_write_done;
  input xt_rsc_0_13_RREADY;
  output xt_rsc_0_13_RVALID;
  output xt_rsc_0_13_RUSER;
  output xt_rsc_0_13_RLAST;
  output [1:0] xt_rsc_0_13_RRESP;
  output [31:0] xt_rsc_0_13_RDATA;
  output xt_rsc_0_13_RID;
  output xt_rsc_0_13_ARREADY;
  input xt_rsc_0_13_ARVALID;
  input xt_rsc_0_13_ARUSER;
  input [3:0] xt_rsc_0_13_ARREGION;
  input [3:0] xt_rsc_0_13_ARQOS;
  input [2:0] xt_rsc_0_13_ARPROT;
  input [3:0] xt_rsc_0_13_ARCACHE;
  input xt_rsc_0_13_ARLOCK;
  input [1:0] xt_rsc_0_13_ARBURST;
  input [2:0] xt_rsc_0_13_ARSIZE;
  input [7:0] xt_rsc_0_13_ARLEN;
  input [11:0] xt_rsc_0_13_ARADDR;
  input xt_rsc_0_13_ARID;
  input xt_rsc_0_13_BREADY;
  output xt_rsc_0_13_BVALID;
  output xt_rsc_0_13_BUSER;
  output [1:0] xt_rsc_0_13_BRESP;
  output xt_rsc_0_13_BID;
  output xt_rsc_0_13_WREADY;
  input xt_rsc_0_13_WVALID;
  input xt_rsc_0_13_WUSER;
  input xt_rsc_0_13_WLAST;
  input [3:0] xt_rsc_0_13_WSTRB;
  input [31:0] xt_rsc_0_13_WDATA;
  output xt_rsc_0_13_AWREADY;
  input xt_rsc_0_13_AWVALID;
  input xt_rsc_0_13_AWUSER;
  input [3:0] xt_rsc_0_13_AWREGION;
  input [3:0] xt_rsc_0_13_AWQOS;
  input [2:0] xt_rsc_0_13_AWPROT;
  input [3:0] xt_rsc_0_13_AWCACHE;
  input xt_rsc_0_13_AWLOCK;
  input [1:0] xt_rsc_0_13_AWBURST;
  input [2:0] xt_rsc_0_13_AWSIZE;
  input [7:0] xt_rsc_0_13_AWLEN;
  input [11:0] xt_rsc_0_13_AWADDR;
  input xt_rsc_0_13_AWID;
  output xt_rsc_triosy_0_13_lz;
  input xt_rsc_0_14_s_tdone;
  input xt_rsc_0_14_tr_write_done;
  input xt_rsc_0_14_RREADY;
  output xt_rsc_0_14_RVALID;
  output xt_rsc_0_14_RUSER;
  output xt_rsc_0_14_RLAST;
  output [1:0] xt_rsc_0_14_RRESP;
  output [31:0] xt_rsc_0_14_RDATA;
  output xt_rsc_0_14_RID;
  output xt_rsc_0_14_ARREADY;
  input xt_rsc_0_14_ARVALID;
  input xt_rsc_0_14_ARUSER;
  input [3:0] xt_rsc_0_14_ARREGION;
  input [3:0] xt_rsc_0_14_ARQOS;
  input [2:0] xt_rsc_0_14_ARPROT;
  input [3:0] xt_rsc_0_14_ARCACHE;
  input xt_rsc_0_14_ARLOCK;
  input [1:0] xt_rsc_0_14_ARBURST;
  input [2:0] xt_rsc_0_14_ARSIZE;
  input [7:0] xt_rsc_0_14_ARLEN;
  input [11:0] xt_rsc_0_14_ARADDR;
  input xt_rsc_0_14_ARID;
  input xt_rsc_0_14_BREADY;
  output xt_rsc_0_14_BVALID;
  output xt_rsc_0_14_BUSER;
  output [1:0] xt_rsc_0_14_BRESP;
  output xt_rsc_0_14_BID;
  output xt_rsc_0_14_WREADY;
  input xt_rsc_0_14_WVALID;
  input xt_rsc_0_14_WUSER;
  input xt_rsc_0_14_WLAST;
  input [3:0] xt_rsc_0_14_WSTRB;
  input [31:0] xt_rsc_0_14_WDATA;
  output xt_rsc_0_14_AWREADY;
  input xt_rsc_0_14_AWVALID;
  input xt_rsc_0_14_AWUSER;
  input [3:0] xt_rsc_0_14_AWREGION;
  input [3:0] xt_rsc_0_14_AWQOS;
  input [2:0] xt_rsc_0_14_AWPROT;
  input [3:0] xt_rsc_0_14_AWCACHE;
  input xt_rsc_0_14_AWLOCK;
  input [1:0] xt_rsc_0_14_AWBURST;
  input [2:0] xt_rsc_0_14_AWSIZE;
  input [7:0] xt_rsc_0_14_AWLEN;
  input [11:0] xt_rsc_0_14_AWADDR;
  input xt_rsc_0_14_AWID;
  output xt_rsc_triosy_0_14_lz;
  input xt_rsc_0_15_s_tdone;
  input xt_rsc_0_15_tr_write_done;
  input xt_rsc_0_15_RREADY;
  output xt_rsc_0_15_RVALID;
  output xt_rsc_0_15_RUSER;
  output xt_rsc_0_15_RLAST;
  output [1:0] xt_rsc_0_15_RRESP;
  output [31:0] xt_rsc_0_15_RDATA;
  output xt_rsc_0_15_RID;
  output xt_rsc_0_15_ARREADY;
  input xt_rsc_0_15_ARVALID;
  input xt_rsc_0_15_ARUSER;
  input [3:0] xt_rsc_0_15_ARREGION;
  input [3:0] xt_rsc_0_15_ARQOS;
  input [2:0] xt_rsc_0_15_ARPROT;
  input [3:0] xt_rsc_0_15_ARCACHE;
  input xt_rsc_0_15_ARLOCK;
  input [1:0] xt_rsc_0_15_ARBURST;
  input [2:0] xt_rsc_0_15_ARSIZE;
  input [7:0] xt_rsc_0_15_ARLEN;
  input [11:0] xt_rsc_0_15_ARADDR;
  input xt_rsc_0_15_ARID;
  input xt_rsc_0_15_BREADY;
  output xt_rsc_0_15_BVALID;
  output xt_rsc_0_15_BUSER;
  output [1:0] xt_rsc_0_15_BRESP;
  output xt_rsc_0_15_BID;
  output xt_rsc_0_15_WREADY;
  input xt_rsc_0_15_WVALID;
  input xt_rsc_0_15_WUSER;
  input xt_rsc_0_15_WLAST;
  input [3:0] xt_rsc_0_15_WSTRB;
  input [31:0] xt_rsc_0_15_WDATA;
  output xt_rsc_0_15_AWREADY;
  input xt_rsc_0_15_AWVALID;
  input xt_rsc_0_15_AWUSER;
  input [3:0] xt_rsc_0_15_AWREGION;
  input [3:0] xt_rsc_0_15_AWQOS;
  input [2:0] xt_rsc_0_15_AWPROT;
  input [3:0] xt_rsc_0_15_AWCACHE;
  input xt_rsc_0_15_AWLOCK;
  input [1:0] xt_rsc_0_15_AWBURST;
  input [2:0] xt_rsc_0_15_AWSIZE;
  input [7:0] xt_rsc_0_15_AWLEN;
  input [11:0] xt_rsc_0_15_AWADDR;
  input xt_rsc_0_15_AWID;
  output xt_rsc_triosy_0_15_lz;
  input xt_rsc_0_16_s_tdone;
  input xt_rsc_0_16_tr_write_done;
  input xt_rsc_0_16_RREADY;
  output xt_rsc_0_16_RVALID;
  output xt_rsc_0_16_RUSER;
  output xt_rsc_0_16_RLAST;
  output [1:0] xt_rsc_0_16_RRESP;
  output [31:0] xt_rsc_0_16_RDATA;
  output xt_rsc_0_16_RID;
  output xt_rsc_0_16_ARREADY;
  input xt_rsc_0_16_ARVALID;
  input xt_rsc_0_16_ARUSER;
  input [3:0] xt_rsc_0_16_ARREGION;
  input [3:0] xt_rsc_0_16_ARQOS;
  input [2:0] xt_rsc_0_16_ARPROT;
  input [3:0] xt_rsc_0_16_ARCACHE;
  input xt_rsc_0_16_ARLOCK;
  input [1:0] xt_rsc_0_16_ARBURST;
  input [2:0] xt_rsc_0_16_ARSIZE;
  input [7:0] xt_rsc_0_16_ARLEN;
  input [11:0] xt_rsc_0_16_ARADDR;
  input xt_rsc_0_16_ARID;
  input xt_rsc_0_16_BREADY;
  output xt_rsc_0_16_BVALID;
  output xt_rsc_0_16_BUSER;
  output [1:0] xt_rsc_0_16_BRESP;
  output xt_rsc_0_16_BID;
  output xt_rsc_0_16_WREADY;
  input xt_rsc_0_16_WVALID;
  input xt_rsc_0_16_WUSER;
  input xt_rsc_0_16_WLAST;
  input [3:0] xt_rsc_0_16_WSTRB;
  input [31:0] xt_rsc_0_16_WDATA;
  output xt_rsc_0_16_AWREADY;
  input xt_rsc_0_16_AWVALID;
  input xt_rsc_0_16_AWUSER;
  input [3:0] xt_rsc_0_16_AWREGION;
  input [3:0] xt_rsc_0_16_AWQOS;
  input [2:0] xt_rsc_0_16_AWPROT;
  input [3:0] xt_rsc_0_16_AWCACHE;
  input xt_rsc_0_16_AWLOCK;
  input [1:0] xt_rsc_0_16_AWBURST;
  input [2:0] xt_rsc_0_16_AWSIZE;
  input [7:0] xt_rsc_0_16_AWLEN;
  input [11:0] xt_rsc_0_16_AWADDR;
  input xt_rsc_0_16_AWID;
  output xt_rsc_triosy_0_16_lz;
  input xt_rsc_0_17_s_tdone;
  input xt_rsc_0_17_tr_write_done;
  input xt_rsc_0_17_RREADY;
  output xt_rsc_0_17_RVALID;
  output xt_rsc_0_17_RUSER;
  output xt_rsc_0_17_RLAST;
  output [1:0] xt_rsc_0_17_RRESP;
  output [31:0] xt_rsc_0_17_RDATA;
  output xt_rsc_0_17_RID;
  output xt_rsc_0_17_ARREADY;
  input xt_rsc_0_17_ARVALID;
  input xt_rsc_0_17_ARUSER;
  input [3:0] xt_rsc_0_17_ARREGION;
  input [3:0] xt_rsc_0_17_ARQOS;
  input [2:0] xt_rsc_0_17_ARPROT;
  input [3:0] xt_rsc_0_17_ARCACHE;
  input xt_rsc_0_17_ARLOCK;
  input [1:0] xt_rsc_0_17_ARBURST;
  input [2:0] xt_rsc_0_17_ARSIZE;
  input [7:0] xt_rsc_0_17_ARLEN;
  input [11:0] xt_rsc_0_17_ARADDR;
  input xt_rsc_0_17_ARID;
  input xt_rsc_0_17_BREADY;
  output xt_rsc_0_17_BVALID;
  output xt_rsc_0_17_BUSER;
  output [1:0] xt_rsc_0_17_BRESP;
  output xt_rsc_0_17_BID;
  output xt_rsc_0_17_WREADY;
  input xt_rsc_0_17_WVALID;
  input xt_rsc_0_17_WUSER;
  input xt_rsc_0_17_WLAST;
  input [3:0] xt_rsc_0_17_WSTRB;
  input [31:0] xt_rsc_0_17_WDATA;
  output xt_rsc_0_17_AWREADY;
  input xt_rsc_0_17_AWVALID;
  input xt_rsc_0_17_AWUSER;
  input [3:0] xt_rsc_0_17_AWREGION;
  input [3:0] xt_rsc_0_17_AWQOS;
  input [2:0] xt_rsc_0_17_AWPROT;
  input [3:0] xt_rsc_0_17_AWCACHE;
  input xt_rsc_0_17_AWLOCK;
  input [1:0] xt_rsc_0_17_AWBURST;
  input [2:0] xt_rsc_0_17_AWSIZE;
  input [7:0] xt_rsc_0_17_AWLEN;
  input [11:0] xt_rsc_0_17_AWADDR;
  input xt_rsc_0_17_AWID;
  output xt_rsc_triosy_0_17_lz;
  input xt_rsc_0_18_s_tdone;
  input xt_rsc_0_18_tr_write_done;
  input xt_rsc_0_18_RREADY;
  output xt_rsc_0_18_RVALID;
  output xt_rsc_0_18_RUSER;
  output xt_rsc_0_18_RLAST;
  output [1:0] xt_rsc_0_18_RRESP;
  output [31:0] xt_rsc_0_18_RDATA;
  output xt_rsc_0_18_RID;
  output xt_rsc_0_18_ARREADY;
  input xt_rsc_0_18_ARVALID;
  input xt_rsc_0_18_ARUSER;
  input [3:0] xt_rsc_0_18_ARREGION;
  input [3:0] xt_rsc_0_18_ARQOS;
  input [2:0] xt_rsc_0_18_ARPROT;
  input [3:0] xt_rsc_0_18_ARCACHE;
  input xt_rsc_0_18_ARLOCK;
  input [1:0] xt_rsc_0_18_ARBURST;
  input [2:0] xt_rsc_0_18_ARSIZE;
  input [7:0] xt_rsc_0_18_ARLEN;
  input [11:0] xt_rsc_0_18_ARADDR;
  input xt_rsc_0_18_ARID;
  input xt_rsc_0_18_BREADY;
  output xt_rsc_0_18_BVALID;
  output xt_rsc_0_18_BUSER;
  output [1:0] xt_rsc_0_18_BRESP;
  output xt_rsc_0_18_BID;
  output xt_rsc_0_18_WREADY;
  input xt_rsc_0_18_WVALID;
  input xt_rsc_0_18_WUSER;
  input xt_rsc_0_18_WLAST;
  input [3:0] xt_rsc_0_18_WSTRB;
  input [31:0] xt_rsc_0_18_WDATA;
  output xt_rsc_0_18_AWREADY;
  input xt_rsc_0_18_AWVALID;
  input xt_rsc_0_18_AWUSER;
  input [3:0] xt_rsc_0_18_AWREGION;
  input [3:0] xt_rsc_0_18_AWQOS;
  input [2:0] xt_rsc_0_18_AWPROT;
  input [3:0] xt_rsc_0_18_AWCACHE;
  input xt_rsc_0_18_AWLOCK;
  input [1:0] xt_rsc_0_18_AWBURST;
  input [2:0] xt_rsc_0_18_AWSIZE;
  input [7:0] xt_rsc_0_18_AWLEN;
  input [11:0] xt_rsc_0_18_AWADDR;
  input xt_rsc_0_18_AWID;
  output xt_rsc_triosy_0_18_lz;
  input xt_rsc_0_19_s_tdone;
  input xt_rsc_0_19_tr_write_done;
  input xt_rsc_0_19_RREADY;
  output xt_rsc_0_19_RVALID;
  output xt_rsc_0_19_RUSER;
  output xt_rsc_0_19_RLAST;
  output [1:0] xt_rsc_0_19_RRESP;
  output [31:0] xt_rsc_0_19_RDATA;
  output xt_rsc_0_19_RID;
  output xt_rsc_0_19_ARREADY;
  input xt_rsc_0_19_ARVALID;
  input xt_rsc_0_19_ARUSER;
  input [3:0] xt_rsc_0_19_ARREGION;
  input [3:0] xt_rsc_0_19_ARQOS;
  input [2:0] xt_rsc_0_19_ARPROT;
  input [3:0] xt_rsc_0_19_ARCACHE;
  input xt_rsc_0_19_ARLOCK;
  input [1:0] xt_rsc_0_19_ARBURST;
  input [2:0] xt_rsc_0_19_ARSIZE;
  input [7:0] xt_rsc_0_19_ARLEN;
  input [11:0] xt_rsc_0_19_ARADDR;
  input xt_rsc_0_19_ARID;
  input xt_rsc_0_19_BREADY;
  output xt_rsc_0_19_BVALID;
  output xt_rsc_0_19_BUSER;
  output [1:0] xt_rsc_0_19_BRESP;
  output xt_rsc_0_19_BID;
  output xt_rsc_0_19_WREADY;
  input xt_rsc_0_19_WVALID;
  input xt_rsc_0_19_WUSER;
  input xt_rsc_0_19_WLAST;
  input [3:0] xt_rsc_0_19_WSTRB;
  input [31:0] xt_rsc_0_19_WDATA;
  output xt_rsc_0_19_AWREADY;
  input xt_rsc_0_19_AWVALID;
  input xt_rsc_0_19_AWUSER;
  input [3:0] xt_rsc_0_19_AWREGION;
  input [3:0] xt_rsc_0_19_AWQOS;
  input [2:0] xt_rsc_0_19_AWPROT;
  input [3:0] xt_rsc_0_19_AWCACHE;
  input xt_rsc_0_19_AWLOCK;
  input [1:0] xt_rsc_0_19_AWBURST;
  input [2:0] xt_rsc_0_19_AWSIZE;
  input [7:0] xt_rsc_0_19_AWLEN;
  input [11:0] xt_rsc_0_19_AWADDR;
  input xt_rsc_0_19_AWID;
  output xt_rsc_triosy_0_19_lz;
  input xt_rsc_0_20_s_tdone;
  input xt_rsc_0_20_tr_write_done;
  input xt_rsc_0_20_RREADY;
  output xt_rsc_0_20_RVALID;
  output xt_rsc_0_20_RUSER;
  output xt_rsc_0_20_RLAST;
  output [1:0] xt_rsc_0_20_RRESP;
  output [31:0] xt_rsc_0_20_RDATA;
  output xt_rsc_0_20_RID;
  output xt_rsc_0_20_ARREADY;
  input xt_rsc_0_20_ARVALID;
  input xt_rsc_0_20_ARUSER;
  input [3:0] xt_rsc_0_20_ARREGION;
  input [3:0] xt_rsc_0_20_ARQOS;
  input [2:0] xt_rsc_0_20_ARPROT;
  input [3:0] xt_rsc_0_20_ARCACHE;
  input xt_rsc_0_20_ARLOCK;
  input [1:0] xt_rsc_0_20_ARBURST;
  input [2:0] xt_rsc_0_20_ARSIZE;
  input [7:0] xt_rsc_0_20_ARLEN;
  input [11:0] xt_rsc_0_20_ARADDR;
  input xt_rsc_0_20_ARID;
  input xt_rsc_0_20_BREADY;
  output xt_rsc_0_20_BVALID;
  output xt_rsc_0_20_BUSER;
  output [1:0] xt_rsc_0_20_BRESP;
  output xt_rsc_0_20_BID;
  output xt_rsc_0_20_WREADY;
  input xt_rsc_0_20_WVALID;
  input xt_rsc_0_20_WUSER;
  input xt_rsc_0_20_WLAST;
  input [3:0] xt_rsc_0_20_WSTRB;
  input [31:0] xt_rsc_0_20_WDATA;
  output xt_rsc_0_20_AWREADY;
  input xt_rsc_0_20_AWVALID;
  input xt_rsc_0_20_AWUSER;
  input [3:0] xt_rsc_0_20_AWREGION;
  input [3:0] xt_rsc_0_20_AWQOS;
  input [2:0] xt_rsc_0_20_AWPROT;
  input [3:0] xt_rsc_0_20_AWCACHE;
  input xt_rsc_0_20_AWLOCK;
  input [1:0] xt_rsc_0_20_AWBURST;
  input [2:0] xt_rsc_0_20_AWSIZE;
  input [7:0] xt_rsc_0_20_AWLEN;
  input [11:0] xt_rsc_0_20_AWADDR;
  input xt_rsc_0_20_AWID;
  output xt_rsc_triosy_0_20_lz;
  input xt_rsc_0_21_s_tdone;
  input xt_rsc_0_21_tr_write_done;
  input xt_rsc_0_21_RREADY;
  output xt_rsc_0_21_RVALID;
  output xt_rsc_0_21_RUSER;
  output xt_rsc_0_21_RLAST;
  output [1:0] xt_rsc_0_21_RRESP;
  output [31:0] xt_rsc_0_21_RDATA;
  output xt_rsc_0_21_RID;
  output xt_rsc_0_21_ARREADY;
  input xt_rsc_0_21_ARVALID;
  input xt_rsc_0_21_ARUSER;
  input [3:0] xt_rsc_0_21_ARREGION;
  input [3:0] xt_rsc_0_21_ARQOS;
  input [2:0] xt_rsc_0_21_ARPROT;
  input [3:0] xt_rsc_0_21_ARCACHE;
  input xt_rsc_0_21_ARLOCK;
  input [1:0] xt_rsc_0_21_ARBURST;
  input [2:0] xt_rsc_0_21_ARSIZE;
  input [7:0] xt_rsc_0_21_ARLEN;
  input [11:0] xt_rsc_0_21_ARADDR;
  input xt_rsc_0_21_ARID;
  input xt_rsc_0_21_BREADY;
  output xt_rsc_0_21_BVALID;
  output xt_rsc_0_21_BUSER;
  output [1:0] xt_rsc_0_21_BRESP;
  output xt_rsc_0_21_BID;
  output xt_rsc_0_21_WREADY;
  input xt_rsc_0_21_WVALID;
  input xt_rsc_0_21_WUSER;
  input xt_rsc_0_21_WLAST;
  input [3:0] xt_rsc_0_21_WSTRB;
  input [31:0] xt_rsc_0_21_WDATA;
  output xt_rsc_0_21_AWREADY;
  input xt_rsc_0_21_AWVALID;
  input xt_rsc_0_21_AWUSER;
  input [3:0] xt_rsc_0_21_AWREGION;
  input [3:0] xt_rsc_0_21_AWQOS;
  input [2:0] xt_rsc_0_21_AWPROT;
  input [3:0] xt_rsc_0_21_AWCACHE;
  input xt_rsc_0_21_AWLOCK;
  input [1:0] xt_rsc_0_21_AWBURST;
  input [2:0] xt_rsc_0_21_AWSIZE;
  input [7:0] xt_rsc_0_21_AWLEN;
  input [11:0] xt_rsc_0_21_AWADDR;
  input xt_rsc_0_21_AWID;
  output xt_rsc_triosy_0_21_lz;
  input xt_rsc_0_22_s_tdone;
  input xt_rsc_0_22_tr_write_done;
  input xt_rsc_0_22_RREADY;
  output xt_rsc_0_22_RVALID;
  output xt_rsc_0_22_RUSER;
  output xt_rsc_0_22_RLAST;
  output [1:0] xt_rsc_0_22_RRESP;
  output [31:0] xt_rsc_0_22_RDATA;
  output xt_rsc_0_22_RID;
  output xt_rsc_0_22_ARREADY;
  input xt_rsc_0_22_ARVALID;
  input xt_rsc_0_22_ARUSER;
  input [3:0] xt_rsc_0_22_ARREGION;
  input [3:0] xt_rsc_0_22_ARQOS;
  input [2:0] xt_rsc_0_22_ARPROT;
  input [3:0] xt_rsc_0_22_ARCACHE;
  input xt_rsc_0_22_ARLOCK;
  input [1:0] xt_rsc_0_22_ARBURST;
  input [2:0] xt_rsc_0_22_ARSIZE;
  input [7:0] xt_rsc_0_22_ARLEN;
  input [11:0] xt_rsc_0_22_ARADDR;
  input xt_rsc_0_22_ARID;
  input xt_rsc_0_22_BREADY;
  output xt_rsc_0_22_BVALID;
  output xt_rsc_0_22_BUSER;
  output [1:0] xt_rsc_0_22_BRESP;
  output xt_rsc_0_22_BID;
  output xt_rsc_0_22_WREADY;
  input xt_rsc_0_22_WVALID;
  input xt_rsc_0_22_WUSER;
  input xt_rsc_0_22_WLAST;
  input [3:0] xt_rsc_0_22_WSTRB;
  input [31:0] xt_rsc_0_22_WDATA;
  output xt_rsc_0_22_AWREADY;
  input xt_rsc_0_22_AWVALID;
  input xt_rsc_0_22_AWUSER;
  input [3:0] xt_rsc_0_22_AWREGION;
  input [3:0] xt_rsc_0_22_AWQOS;
  input [2:0] xt_rsc_0_22_AWPROT;
  input [3:0] xt_rsc_0_22_AWCACHE;
  input xt_rsc_0_22_AWLOCK;
  input [1:0] xt_rsc_0_22_AWBURST;
  input [2:0] xt_rsc_0_22_AWSIZE;
  input [7:0] xt_rsc_0_22_AWLEN;
  input [11:0] xt_rsc_0_22_AWADDR;
  input xt_rsc_0_22_AWID;
  output xt_rsc_triosy_0_22_lz;
  input xt_rsc_0_23_s_tdone;
  input xt_rsc_0_23_tr_write_done;
  input xt_rsc_0_23_RREADY;
  output xt_rsc_0_23_RVALID;
  output xt_rsc_0_23_RUSER;
  output xt_rsc_0_23_RLAST;
  output [1:0] xt_rsc_0_23_RRESP;
  output [31:0] xt_rsc_0_23_RDATA;
  output xt_rsc_0_23_RID;
  output xt_rsc_0_23_ARREADY;
  input xt_rsc_0_23_ARVALID;
  input xt_rsc_0_23_ARUSER;
  input [3:0] xt_rsc_0_23_ARREGION;
  input [3:0] xt_rsc_0_23_ARQOS;
  input [2:0] xt_rsc_0_23_ARPROT;
  input [3:0] xt_rsc_0_23_ARCACHE;
  input xt_rsc_0_23_ARLOCK;
  input [1:0] xt_rsc_0_23_ARBURST;
  input [2:0] xt_rsc_0_23_ARSIZE;
  input [7:0] xt_rsc_0_23_ARLEN;
  input [11:0] xt_rsc_0_23_ARADDR;
  input xt_rsc_0_23_ARID;
  input xt_rsc_0_23_BREADY;
  output xt_rsc_0_23_BVALID;
  output xt_rsc_0_23_BUSER;
  output [1:0] xt_rsc_0_23_BRESP;
  output xt_rsc_0_23_BID;
  output xt_rsc_0_23_WREADY;
  input xt_rsc_0_23_WVALID;
  input xt_rsc_0_23_WUSER;
  input xt_rsc_0_23_WLAST;
  input [3:0] xt_rsc_0_23_WSTRB;
  input [31:0] xt_rsc_0_23_WDATA;
  output xt_rsc_0_23_AWREADY;
  input xt_rsc_0_23_AWVALID;
  input xt_rsc_0_23_AWUSER;
  input [3:0] xt_rsc_0_23_AWREGION;
  input [3:0] xt_rsc_0_23_AWQOS;
  input [2:0] xt_rsc_0_23_AWPROT;
  input [3:0] xt_rsc_0_23_AWCACHE;
  input xt_rsc_0_23_AWLOCK;
  input [1:0] xt_rsc_0_23_AWBURST;
  input [2:0] xt_rsc_0_23_AWSIZE;
  input [7:0] xt_rsc_0_23_AWLEN;
  input [11:0] xt_rsc_0_23_AWADDR;
  input xt_rsc_0_23_AWID;
  output xt_rsc_triosy_0_23_lz;
  input xt_rsc_0_24_s_tdone;
  input xt_rsc_0_24_tr_write_done;
  input xt_rsc_0_24_RREADY;
  output xt_rsc_0_24_RVALID;
  output xt_rsc_0_24_RUSER;
  output xt_rsc_0_24_RLAST;
  output [1:0] xt_rsc_0_24_RRESP;
  output [31:0] xt_rsc_0_24_RDATA;
  output xt_rsc_0_24_RID;
  output xt_rsc_0_24_ARREADY;
  input xt_rsc_0_24_ARVALID;
  input xt_rsc_0_24_ARUSER;
  input [3:0] xt_rsc_0_24_ARREGION;
  input [3:0] xt_rsc_0_24_ARQOS;
  input [2:0] xt_rsc_0_24_ARPROT;
  input [3:0] xt_rsc_0_24_ARCACHE;
  input xt_rsc_0_24_ARLOCK;
  input [1:0] xt_rsc_0_24_ARBURST;
  input [2:0] xt_rsc_0_24_ARSIZE;
  input [7:0] xt_rsc_0_24_ARLEN;
  input [11:0] xt_rsc_0_24_ARADDR;
  input xt_rsc_0_24_ARID;
  input xt_rsc_0_24_BREADY;
  output xt_rsc_0_24_BVALID;
  output xt_rsc_0_24_BUSER;
  output [1:0] xt_rsc_0_24_BRESP;
  output xt_rsc_0_24_BID;
  output xt_rsc_0_24_WREADY;
  input xt_rsc_0_24_WVALID;
  input xt_rsc_0_24_WUSER;
  input xt_rsc_0_24_WLAST;
  input [3:0] xt_rsc_0_24_WSTRB;
  input [31:0] xt_rsc_0_24_WDATA;
  output xt_rsc_0_24_AWREADY;
  input xt_rsc_0_24_AWVALID;
  input xt_rsc_0_24_AWUSER;
  input [3:0] xt_rsc_0_24_AWREGION;
  input [3:0] xt_rsc_0_24_AWQOS;
  input [2:0] xt_rsc_0_24_AWPROT;
  input [3:0] xt_rsc_0_24_AWCACHE;
  input xt_rsc_0_24_AWLOCK;
  input [1:0] xt_rsc_0_24_AWBURST;
  input [2:0] xt_rsc_0_24_AWSIZE;
  input [7:0] xt_rsc_0_24_AWLEN;
  input [11:0] xt_rsc_0_24_AWADDR;
  input xt_rsc_0_24_AWID;
  output xt_rsc_triosy_0_24_lz;
  input xt_rsc_0_25_s_tdone;
  input xt_rsc_0_25_tr_write_done;
  input xt_rsc_0_25_RREADY;
  output xt_rsc_0_25_RVALID;
  output xt_rsc_0_25_RUSER;
  output xt_rsc_0_25_RLAST;
  output [1:0] xt_rsc_0_25_RRESP;
  output [31:0] xt_rsc_0_25_RDATA;
  output xt_rsc_0_25_RID;
  output xt_rsc_0_25_ARREADY;
  input xt_rsc_0_25_ARVALID;
  input xt_rsc_0_25_ARUSER;
  input [3:0] xt_rsc_0_25_ARREGION;
  input [3:0] xt_rsc_0_25_ARQOS;
  input [2:0] xt_rsc_0_25_ARPROT;
  input [3:0] xt_rsc_0_25_ARCACHE;
  input xt_rsc_0_25_ARLOCK;
  input [1:0] xt_rsc_0_25_ARBURST;
  input [2:0] xt_rsc_0_25_ARSIZE;
  input [7:0] xt_rsc_0_25_ARLEN;
  input [11:0] xt_rsc_0_25_ARADDR;
  input xt_rsc_0_25_ARID;
  input xt_rsc_0_25_BREADY;
  output xt_rsc_0_25_BVALID;
  output xt_rsc_0_25_BUSER;
  output [1:0] xt_rsc_0_25_BRESP;
  output xt_rsc_0_25_BID;
  output xt_rsc_0_25_WREADY;
  input xt_rsc_0_25_WVALID;
  input xt_rsc_0_25_WUSER;
  input xt_rsc_0_25_WLAST;
  input [3:0] xt_rsc_0_25_WSTRB;
  input [31:0] xt_rsc_0_25_WDATA;
  output xt_rsc_0_25_AWREADY;
  input xt_rsc_0_25_AWVALID;
  input xt_rsc_0_25_AWUSER;
  input [3:0] xt_rsc_0_25_AWREGION;
  input [3:0] xt_rsc_0_25_AWQOS;
  input [2:0] xt_rsc_0_25_AWPROT;
  input [3:0] xt_rsc_0_25_AWCACHE;
  input xt_rsc_0_25_AWLOCK;
  input [1:0] xt_rsc_0_25_AWBURST;
  input [2:0] xt_rsc_0_25_AWSIZE;
  input [7:0] xt_rsc_0_25_AWLEN;
  input [11:0] xt_rsc_0_25_AWADDR;
  input xt_rsc_0_25_AWID;
  output xt_rsc_triosy_0_25_lz;
  input xt_rsc_0_26_s_tdone;
  input xt_rsc_0_26_tr_write_done;
  input xt_rsc_0_26_RREADY;
  output xt_rsc_0_26_RVALID;
  output xt_rsc_0_26_RUSER;
  output xt_rsc_0_26_RLAST;
  output [1:0] xt_rsc_0_26_RRESP;
  output [31:0] xt_rsc_0_26_RDATA;
  output xt_rsc_0_26_RID;
  output xt_rsc_0_26_ARREADY;
  input xt_rsc_0_26_ARVALID;
  input xt_rsc_0_26_ARUSER;
  input [3:0] xt_rsc_0_26_ARREGION;
  input [3:0] xt_rsc_0_26_ARQOS;
  input [2:0] xt_rsc_0_26_ARPROT;
  input [3:0] xt_rsc_0_26_ARCACHE;
  input xt_rsc_0_26_ARLOCK;
  input [1:0] xt_rsc_0_26_ARBURST;
  input [2:0] xt_rsc_0_26_ARSIZE;
  input [7:0] xt_rsc_0_26_ARLEN;
  input [11:0] xt_rsc_0_26_ARADDR;
  input xt_rsc_0_26_ARID;
  input xt_rsc_0_26_BREADY;
  output xt_rsc_0_26_BVALID;
  output xt_rsc_0_26_BUSER;
  output [1:0] xt_rsc_0_26_BRESP;
  output xt_rsc_0_26_BID;
  output xt_rsc_0_26_WREADY;
  input xt_rsc_0_26_WVALID;
  input xt_rsc_0_26_WUSER;
  input xt_rsc_0_26_WLAST;
  input [3:0] xt_rsc_0_26_WSTRB;
  input [31:0] xt_rsc_0_26_WDATA;
  output xt_rsc_0_26_AWREADY;
  input xt_rsc_0_26_AWVALID;
  input xt_rsc_0_26_AWUSER;
  input [3:0] xt_rsc_0_26_AWREGION;
  input [3:0] xt_rsc_0_26_AWQOS;
  input [2:0] xt_rsc_0_26_AWPROT;
  input [3:0] xt_rsc_0_26_AWCACHE;
  input xt_rsc_0_26_AWLOCK;
  input [1:0] xt_rsc_0_26_AWBURST;
  input [2:0] xt_rsc_0_26_AWSIZE;
  input [7:0] xt_rsc_0_26_AWLEN;
  input [11:0] xt_rsc_0_26_AWADDR;
  input xt_rsc_0_26_AWID;
  output xt_rsc_triosy_0_26_lz;
  input xt_rsc_0_27_s_tdone;
  input xt_rsc_0_27_tr_write_done;
  input xt_rsc_0_27_RREADY;
  output xt_rsc_0_27_RVALID;
  output xt_rsc_0_27_RUSER;
  output xt_rsc_0_27_RLAST;
  output [1:0] xt_rsc_0_27_RRESP;
  output [31:0] xt_rsc_0_27_RDATA;
  output xt_rsc_0_27_RID;
  output xt_rsc_0_27_ARREADY;
  input xt_rsc_0_27_ARVALID;
  input xt_rsc_0_27_ARUSER;
  input [3:0] xt_rsc_0_27_ARREGION;
  input [3:0] xt_rsc_0_27_ARQOS;
  input [2:0] xt_rsc_0_27_ARPROT;
  input [3:0] xt_rsc_0_27_ARCACHE;
  input xt_rsc_0_27_ARLOCK;
  input [1:0] xt_rsc_0_27_ARBURST;
  input [2:0] xt_rsc_0_27_ARSIZE;
  input [7:0] xt_rsc_0_27_ARLEN;
  input [11:0] xt_rsc_0_27_ARADDR;
  input xt_rsc_0_27_ARID;
  input xt_rsc_0_27_BREADY;
  output xt_rsc_0_27_BVALID;
  output xt_rsc_0_27_BUSER;
  output [1:0] xt_rsc_0_27_BRESP;
  output xt_rsc_0_27_BID;
  output xt_rsc_0_27_WREADY;
  input xt_rsc_0_27_WVALID;
  input xt_rsc_0_27_WUSER;
  input xt_rsc_0_27_WLAST;
  input [3:0] xt_rsc_0_27_WSTRB;
  input [31:0] xt_rsc_0_27_WDATA;
  output xt_rsc_0_27_AWREADY;
  input xt_rsc_0_27_AWVALID;
  input xt_rsc_0_27_AWUSER;
  input [3:0] xt_rsc_0_27_AWREGION;
  input [3:0] xt_rsc_0_27_AWQOS;
  input [2:0] xt_rsc_0_27_AWPROT;
  input [3:0] xt_rsc_0_27_AWCACHE;
  input xt_rsc_0_27_AWLOCK;
  input [1:0] xt_rsc_0_27_AWBURST;
  input [2:0] xt_rsc_0_27_AWSIZE;
  input [7:0] xt_rsc_0_27_AWLEN;
  input [11:0] xt_rsc_0_27_AWADDR;
  input xt_rsc_0_27_AWID;
  output xt_rsc_triosy_0_27_lz;
  input xt_rsc_0_28_s_tdone;
  input xt_rsc_0_28_tr_write_done;
  input xt_rsc_0_28_RREADY;
  output xt_rsc_0_28_RVALID;
  output xt_rsc_0_28_RUSER;
  output xt_rsc_0_28_RLAST;
  output [1:0] xt_rsc_0_28_RRESP;
  output [31:0] xt_rsc_0_28_RDATA;
  output xt_rsc_0_28_RID;
  output xt_rsc_0_28_ARREADY;
  input xt_rsc_0_28_ARVALID;
  input xt_rsc_0_28_ARUSER;
  input [3:0] xt_rsc_0_28_ARREGION;
  input [3:0] xt_rsc_0_28_ARQOS;
  input [2:0] xt_rsc_0_28_ARPROT;
  input [3:0] xt_rsc_0_28_ARCACHE;
  input xt_rsc_0_28_ARLOCK;
  input [1:0] xt_rsc_0_28_ARBURST;
  input [2:0] xt_rsc_0_28_ARSIZE;
  input [7:0] xt_rsc_0_28_ARLEN;
  input [11:0] xt_rsc_0_28_ARADDR;
  input xt_rsc_0_28_ARID;
  input xt_rsc_0_28_BREADY;
  output xt_rsc_0_28_BVALID;
  output xt_rsc_0_28_BUSER;
  output [1:0] xt_rsc_0_28_BRESP;
  output xt_rsc_0_28_BID;
  output xt_rsc_0_28_WREADY;
  input xt_rsc_0_28_WVALID;
  input xt_rsc_0_28_WUSER;
  input xt_rsc_0_28_WLAST;
  input [3:0] xt_rsc_0_28_WSTRB;
  input [31:0] xt_rsc_0_28_WDATA;
  output xt_rsc_0_28_AWREADY;
  input xt_rsc_0_28_AWVALID;
  input xt_rsc_0_28_AWUSER;
  input [3:0] xt_rsc_0_28_AWREGION;
  input [3:0] xt_rsc_0_28_AWQOS;
  input [2:0] xt_rsc_0_28_AWPROT;
  input [3:0] xt_rsc_0_28_AWCACHE;
  input xt_rsc_0_28_AWLOCK;
  input [1:0] xt_rsc_0_28_AWBURST;
  input [2:0] xt_rsc_0_28_AWSIZE;
  input [7:0] xt_rsc_0_28_AWLEN;
  input [11:0] xt_rsc_0_28_AWADDR;
  input xt_rsc_0_28_AWID;
  output xt_rsc_triosy_0_28_lz;
  input xt_rsc_0_29_s_tdone;
  input xt_rsc_0_29_tr_write_done;
  input xt_rsc_0_29_RREADY;
  output xt_rsc_0_29_RVALID;
  output xt_rsc_0_29_RUSER;
  output xt_rsc_0_29_RLAST;
  output [1:0] xt_rsc_0_29_RRESP;
  output [31:0] xt_rsc_0_29_RDATA;
  output xt_rsc_0_29_RID;
  output xt_rsc_0_29_ARREADY;
  input xt_rsc_0_29_ARVALID;
  input xt_rsc_0_29_ARUSER;
  input [3:0] xt_rsc_0_29_ARREGION;
  input [3:0] xt_rsc_0_29_ARQOS;
  input [2:0] xt_rsc_0_29_ARPROT;
  input [3:0] xt_rsc_0_29_ARCACHE;
  input xt_rsc_0_29_ARLOCK;
  input [1:0] xt_rsc_0_29_ARBURST;
  input [2:0] xt_rsc_0_29_ARSIZE;
  input [7:0] xt_rsc_0_29_ARLEN;
  input [11:0] xt_rsc_0_29_ARADDR;
  input xt_rsc_0_29_ARID;
  input xt_rsc_0_29_BREADY;
  output xt_rsc_0_29_BVALID;
  output xt_rsc_0_29_BUSER;
  output [1:0] xt_rsc_0_29_BRESP;
  output xt_rsc_0_29_BID;
  output xt_rsc_0_29_WREADY;
  input xt_rsc_0_29_WVALID;
  input xt_rsc_0_29_WUSER;
  input xt_rsc_0_29_WLAST;
  input [3:0] xt_rsc_0_29_WSTRB;
  input [31:0] xt_rsc_0_29_WDATA;
  output xt_rsc_0_29_AWREADY;
  input xt_rsc_0_29_AWVALID;
  input xt_rsc_0_29_AWUSER;
  input [3:0] xt_rsc_0_29_AWREGION;
  input [3:0] xt_rsc_0_29_AWQOS;
  input [2:0] xt_rsc_0_29_AWPROT;
  input [3:0] xt_rsc_0_29_AWCACHE;
  input xt_rsc_0_29_AWLOCK;
  input [1:0] xt_rsc_0_29_AWBURST;
  input [2:0] xt_rsc_0_29_AWSIZE;
  input [7:0] xt_rsc_0_29_AWLEN;
  input [11:0] xt_rsc_0_29_AWADDR;
  input xt_rsc_0_29_AWID;
  output xt_rsc_triosy_0_29_lz;
  input xt_rsc_0_30_s_tdone;
  input xt_rsc_0_30_tr_write_done;
  input xt_rsc_0_30_RREADY;
  output xt_rsc_0_30_RVALID;
  output xt_rsc_0_30_RUSER;
  output xt_rsc_0_30_RLAST;
  output [1:0] xt_rsc_0_30_RRESP;
  output [31:0] xt_rsc_0_30_RDATA;
  output xt_rsc_0_30_RID;
  output xt_rsc_0_30_ARREADY;
  input xt_rsc_0_30_ARVALID;
  input xt_rsc_0_30_ARUSER;
  input [3:0] xt_rsc_0_30_ARREGION;
  input [3:0] xt_rsc_0_30_ARQOS;
  input [2:0] xt_rsc_0_30_ARPROT;
  input [3:0] xt_rsc_0_30_ARCACHE;
  input xt_rsc_0_30_ARLOCK;
  input [1:0] xt_rsc_0_30_ARBURST;
  input [2:0] xt_rsc_0_30_ARSIZE;
  input [7:0] xt_rsc_0_30_ARLEN;
  input [11:0] xt_rsc_0_30_ARADDR;
  input xt_rsc_0_30_ARID;
  input xt_rsc_0_30_BREADY;
  output xt_rsc_0_30_BVALID;
  output xt_rsc_0_30_BUSER;
  output [1:0] xt_rsc_0_30_BRESP;
  output xt_rsc_0_30_BID;
  output xt_rsc_0_30_WREADY;
  input xt_rsc_0_30_WVALID;
  input xt_rsc_0_30_WUSER;
  input xt_rsc_0_30_WLAST;
  input [3:0] xt_rsc_0_30_WSTRB;
  input [31:0] xt_rsc_0_30_WDATA;
  output xt_rsc_0_30_AWREADY;
  input xt_rsc_0_30_AWVALID;
  input xt_rsc_0_30_AWUSER;
  input [3:0] xt_rsc_0_30_AWREGION;
  input [3:0] xt_rsc_0_30_AWQOS;
  input [2:0] xt_rsc_0_30_AWPROT;
  input [3:0] xt_rsc_0_30_AWCACHE;
  input xt_rsc_0_30_AWLOCK;
  input [1:0] xt_rsc_0_30_AWBURST;
  input [2:0] xt_rsc_0_30_AWSIZE;
  input [7:0] xt_rsc_0_30_AWLEN;
  input [11:0] xt_rsc_0_30_AWADDR;
  input xt_rsc_0_30_AWID;
  output xt_rsc_triosy_0_30_lz;
  input xt_rsc_0_31_s_tdone;
  input xt_rsc_0_31_tr_write_done;
  input xt_rsc_0_31_RREADY;
  output xt_rsc_0_31_RVALID;
  output xt_rsc_0_31_RUSER;
  output xt_rsc_0_31_RLAST;
  output [1:0] xt_rsc_0_31_RRESP;
  output [31:0] xt_rsc_0_31_RDATA;
  output xt_rsc_0_31_RID;
  output xt_rsc_0_31_ARREADY;
  input xt_rsc_0_31_ARVALID;
  input xt_rsc_0_31_ARUSER;
  input [3:0] xt_rsc_0_31_ARREGION;
  input [3:0] xt_rsc_0_31_ARQOS;
  input [2:0] xt_rsc_0_31_ARPROT;
  input [3:0] xt_rsc_0_31_ARCACHE;
  input xt_rsc_0_31_ARLOCK;
  input [1:0] xt_rsc_0_31_ARBURST;
  input [2:0] xt_rsc_0_31_ARSIZE;
  input [7:0] xt_rsc_0_31_ARLEN;
  input [11:0] xt_rsc_0_31_ARADDR;
  input xt_rsc_0_31_ARID;
  input xt_rsc_0_31_BREADY;
  output xt_rsc_0_31_BVALID;
  output xt_rsc_0_31_BUSER;
  output [1:0] xt_rsc_0_31_BRESP;
  output xt_rsc_0_31_BID;
  output xt_rsc_0_31_WREADY;
  input xt_rsc_0_31_WVALID;
  input xt_rsc_0_31_WUSER;
  input xt_rsc_0_31_WLAST;
  input [3:0] xt_rsc_0_31_WSTRB;
  input [31:0] xt_rsc_0_31_WDATA;
  output xt_rsc_0_31_AWREADY;
  input xt_rsc_0_31_AWVALID;
  input xt_rsc_0_31_AWUSER;
  input [3:0] xt_rsc_0_31_AWREGION;
  input [3:0] xt_rsc_0_31_AWQOS;
  input [2:0] xt_rsc_0_31_AWPROT;
  input [3:0] xt_rsc_0_31_AWCACHE;
  input xt_rsc_0_31_AWLOCK;
  input [1:0] xt_rsc_0_31_AWBURST;
  input [2:0] xt_rsc_0_31_AWSIZE;
  input [7:0] xt_rsc_0_31_AWLEN;
  input [11:0] xt_rsc_0_31_AWADDR;
  input xt_rsc_0_31_AWID;
  output xt_rsc_triosy_0_31_lz;
  input xt_rsc_1_0_s_tdone;
  input xt_rsc_1_0_tr_write_done;
  input xt_rsc_1_0_RREADY;
  output xt_rsc_1_0_RVALID;
  output xt_rsc_1_0_RUSER;
  output xt_rsc_1_0_RLAST;
  output [1:0] xt_rsc_1_0_RRESP;
  output [31:0] xt_rsc_1_0_RDATA;
  output xt_rsc_1_0_RID;
  output xt_rsc_1_0_ARREADY;
  input xt_rsc_1_0_ARVALID;
  input xt_rsc_1_0_ARUSER;
  input [3:0] xt_rsc_1_0_ARREGION;
  input [3:0] xt_rsc_1_0_ARQOS;
  input [2:0] xt_rsc_1_0_ARPROT;
  input [3:0] xt_rsc_1_0_ARCACHE;
  input xt_rsc_1_0_ARLOCK;
  input [1:0] xt_rsc_1_0_ARBURST;
  input [2:0] xt_rsc_1_0_ARSIZE;
  input [7:0] xt_rsc_1_0_ARLEN;
  input [11:0] xt_rsc_1_0_ARADDR;
  input xt_rsc_1_0_ARID;
  input xt_rsc_1_0_BREADY;
  output xt_rsc_1_0_BVALID;
  output xt_rsc_1_0_BUSER;
  output [1:0] xt_rsc_1_0_BRESP;
  output xt_rsc_1_0_BID;
  output xt_rsc_1_0_WREADY;
  input xt_rsc_1_0_WVALID;
  input xt_rsc_1_0_WUSER;
  input xt_rsc_1_0_WLAST;
  input [3:0] xt_rsc_1_0_WSTRB;
  input [31:0] xt_rsc_1_0_WDATA;
  output xt_rsc_1_0_AWREADY;
  input xt_rsc_1_0_AWVALID;
  input xt_rsc_1_0_AWUSER;
  input [3:0] xt_rsc_1_0_AWREGION;
  input [3:0] xt_rsc_1_0_AWQOS;
  input [2:0] xt_rsc_1_0_AWPROT;
  input [3:0] xt_rsc_1_0_AWCACHE;
  input xt_rsc_1_0_AWLOCK;
  input [1:0] xt_rsc_1_0_AWBURST;
  input [2:0] xt_rsc_1_0_AWSIZE;
  input [7:0] xt_rsc_1_0_AWLEN;
  input [11:0] xt_rsc_1_0_AWADDR;
  input xt_rsc_1_0_AWID;
  output xt_rsc_triosy_1_0_lz;
  input xt_rsc_1_1_s_tdone;
  input xt_rsc_1_1_tr_write_done;
  input xt_rsc_1_1_RREADY;
  output xt_rsc_1_1_RVALID;
  output xt_rsc_1_1_RUSER;
  output xt_rsc_1_1_RLAST;
  output [1:0] xt_rsc_1_1_RRESP;
  output [31:0] xt_rsc_1_1_RDATA;
  output xt_rsc_1_1_RID;
  output xt_rsc_1_1_ARREADY;
  input xt_rsc_1_1_ARVALID;
  input xt_rsc_1_1_ARUSER;
  input [3:0] xt_rsc_1_1_ARREGION;
  input [3:0] xt_rsc_1_1_ARQOS;
  input [2:0] xt_rsc_1_1_ARPROT;
  input [3:0] xt_rsc_1_1_ARCACHE;
  input xt_rsc_1_1_ARLOCK;
  input [1:0] xt_rsc_1_1_ARBURST;
  input [2:0] xt_rsc_1_1_ARSIZE;
  input [7:0] xt_rsc_1_1_ARLEN;
  input [11:0] xt_rsc_1_1_ARADDR;
  input xt_rsc_1_1_ARID;
  input xt_rsc_1_1_BREADY;
  output xt_rsc_1_1_BVALID;
  output xt_rsc_1_1_BUSER;
  output [1:0] xt_rsc_1_1_BRESP;
  output xt_rsc_1_1_BID;
  output xt_rsc_1_1_WREADY;
  input xt_rsc_1_1_WVALID;
  input xt_rsc_1_1_WUSER;
  input xt_rsc_1_1_WLAST;
  input [3:0] xt_rsc_1_1_WSTRB;
  input [31:0] xt_rsc_1_1_WDATA;
  output xt_rsc_1_1_AWREADY;
  input xt_rsc_1_1_AWVALID;
  input xt_rsc_1_1_AWUSER;
  input [3:0] xt_rsc_1_1_AWREGION;
  input [3:0] xt_rsc_1_1_AWQOS;
  input [2:0] xt_rsc_1_1_AWPROT;
  input [3:0] xt_rsc_1_1_AWCACHE;
  input xt_rsc_1_1_AWLOCK;
  input [1:0] xt_rsc_1_1_AWBURST;
  input [2:0] xt_rsc_1_1_AWSIZE;
  input [7:0] xt_rsc_1_1_AWLEN;
  input [11:0] xt_rsc_1_1_AWADDR;
  input xt_rsc_1_1_AWID;
  output xt_rsc_triosy_1_1_lz;
  input xt_rsc_1_2_s_tdone;
  input xt_rsc_1_2_tr_write_done;
  input xt_rsc_1_2_RREADY;
  output xt_rsc_1_2_RVALID;
  output xt_rsc_1_2_RUSER;
  output xt_rsc_1_2_RLAST;
  output [1:0] xt_rsc_1_2_RRESP;
  output [31:0] xt_rsc_1_2_RDATA;
  output xt_rsc_1_2_RID;
  output xt_rsc_1_2_ARREADY;
  input xt_rsc_1_2_ARVALID;
  input xt_rsc_1_2_ARUSER;
  input [3:0] xt_rsc_1_2_ARREGION;
  input [3:0] xt_rsc_1_2_ARQOS;
  input [2:0] xt_rsc_1_2_ARPROT;
  input [3:0] xt_rsc_1_2_ARCACHE;
  input xt_rsc_1_2_ARLOCK;
  input [1:0] xt_rsc_1_2_ARBURST;
  input [2:0] xt_rsc_1_2_ARSIZE;
  input [7:0] xt_rsc_1_2_ARLEN;
  input [11:0] xt_rsc_1_2_ARADDR;
  input xt_rsc_1_2_ARID;
  input xt_rsc_1_2_BREADY;
  output xt_rsc_1_2_BVALID;
  output xt_rsc_1_2_BUSER;
  output [1:0] xt_rsc_1_2_BRESP;
  output xt_rsc_1_2_BID;
  output xt_rsc_1_2_WREADY;
  input xt_rsc_1_2_WVALID;
  input xt_rsc_1_2_WUSER;
  input xt_rsc_1_2_WLAST;
  input [3:0] xt_rsc_1_2_WSTRB;
  input [31:0] xt_rsc_1_2_WDATA;
  output xt_rsc_1_2_AWREADY;
  input xt_rsc_1_2_AWVALID;
  input xt_rsc_1_2_AWUSER;
  input [3:0] xt_rsc_1_2_AWREGION;
  input [3:0] xt_rsc_1_2_AWQOS;
  input [2:0] xt_rsc_1_2_AWPROT;
  input [3:0] xt_rsc_1_2_AWCACHE;
  input xt_rsc_1_2_AWLOCK;
  input [1:0] xt_rsc_1_2_AWBURST;
  input [2:0] xt_rsc_1_2_AWSIZE;
  input [7:0] xt_rsc_1_2_AWLEN;
  input [11:0] xt_rsc_1_2_AWADDR;
  input xt_rsc_1_2_AWID;
  output xt_rsc_triosy_1_2_lz;
  input xt_rsc_1_3_s_tdone;
  input xt_rsc_1_3_tr_write_done;
  input xt_rsc_1_3_RREADY;
  output xt_rsc_1_3_RVALID;
  output xt_rsc_1_3_RUSER;
  output xt_rsc_1_3_RLAST;
  output [1:0] xt_rsc_1_3_RRESP;
  output [31:0] xt_rsc_1_3_RDATA;
  output xt_rsc_1_3_RID;
  output xt_rsc_1_3_ARREADY;
  input xt_rsc_1_3_ARVALID;
  input xt_rsc_1_3_ARUSER;
  input [3:0] xt_rsc_1_3_ARREGION;
  input [3:0] xt_rsc_1_3_ARQOS;
  input [2:0] xt_rsc_1_3_ARPROT;
  input [3:0] xt_rsc_1_3_ARCACHE;
  input xt_rsc_1_3_ARLOCK;
  input [1:0] xt_rsc_1_3_ARBURST;
  input [2:0] xt_rsc_1_3_ARSIZE;
  input [7:0] xt_rsc_1_3_ARLEN;
  input [11:0] xt_rsc_1_3_ARADDR;
  input xt_rsc_1_3_ARID;
  input xt_rsc_1_3_BREADY;
  output xt_rsc_1_3_BVALID;
  output xt_rsc_1_3_BUSER;
  output [1:0] xt_rsc_1_3_BRESP;
  output xt_rsc_1_3_BID;
  output xt_rsc_1_3_WREADY;
  input xt_rsc_1_3_WVALID;
  input xt_rsc_1_3_WUSER;
  input xt_rsc_1_3_WLAST;
  input [3:0] xt_rsc_1_3_WSTRB;
  input [31:0] xt_rsc_1_3_WDATA;
  output xt_rsc_1_3_AWREADY;
  input xt_rsc_1_3_AWVALID;
  input xt_rsc_1_3_AWUSER;
  input [3:0] xt_rsc_1_3_AWREGION;
  input [3:0] xt_rsc_1_3_AWQOS;
  input [2:0] xt_rsc_1_3_AWPROT;
  input [3:0] xt_rsc_1_3_AWCACHE;
  input xt_rsc_1_3_AWLOCK;
  input [1:0] xt_rsc_1_3_AWBURST;
  input [2:0] xt_rsc_1_3_AWSIZE;
  input [7:0] xt_rsc_1_3_AWLEN;
  input [11:0] xt_rsc_1_3_AWADDR;
  input xt_rsc_1_3_AWID;
  output xt_rsc_triosy_1_3_lz;
  input xt_rsc_1_4_s_tdone;
  input xt_rsc_1_4_tr_write_done;
  input xt_rsc_1_4_RREADY;
  output xt_rsc_1_4_RVALID;
  output xt_rsc_1_4_RUSER;
  output xt_rsc_1_4_RLAST;
  output [1:0] xt_rsc_1_4_RRESP;
  output [31:0] xt_rsc_1_4_RDATA;
  output xt_rsc_1_4_RID;
  output xt_rsc_1_4_ARREADY;
  input xt_rsc_1_4_ARVALID;
  input xt_rsc_1_4_ARUSER;
  input [3:0] xt_rsc_1_4_ARREGION;
  input [3:0] xt_rsc_1_4_ARQOS;
  input [2:0] xt_rsc_1_4_ARPROT;
  input [3:0] xt_rsc_1_4_ARCACHE;
  input xt_rsc_1_4_ARLOCK;
  input [1:0] xt_rsc_1_4_ARBURST;
  input [2:0] xt_rsc_1_4_ARSIZE;
  input [7:0] xt_rsc_1_4_ARLEN;
  input [11:0] xt_rsc_1_4_ARADDR;
  input xt_rsc_1_4_ARID;
  input xt_rsc_1_4_BREADY;
  output xt_rsc_1_4_BVALID;
  output xt_rsc_1_4_BUSER;
  output [1:0] xt_rsc_1_4_BRESP;
  output xt_rsc_1_4_BID;
  output xt_rsc_1_4_WREADY;
  input xt_rsc_1_4_WVALID;
  input xt_rsc_1_4_WUSER;
  input xt_rsc_1_4_WLAST;
  input [3:0] xt_rsc_1_4_WSTRB;
  input [31:0] xt_rsc_1_4_WDATA;
  output xt_rsc_1_4_AWREADY;
  input xt_rsc_1_4_AWVALID;
  input xt_rsc_1_4_AWUSER;
  input [3:0] xt_rsc_1_4_AWREGION;
  input [3:0] xt_rsc_1_4_AWQOS;
  input [2:0] xt_rsc_1_4_AWPROT;
  input [3:0] xt_rsc_1_4_AWCACHE;
  input xt_rsc_1_4_AWLOCK;
  input [1:0] xt_rsc_1_4_AWBURST;
  input [2:0] xt_rsc_1_4_AWSIZE;
  input [7:0] xt_rsc_1_4_AWLEN;
  input [11:0] xt_rsc_1_4_AWADDR;
  input xt_rsc_1_4_AWID;
  output xt_rsc_triosy_1_4_lz;
  input xt_rsc_1_5_s_tdone;
  input xt_rsc_1_5_tr_write_done;
  input xt_rsc_1_5_RREADY;
  output xt_rsc_1_5_RVALID;
  output xt_rsc_1_5_RUSER;
  output xt_rsc_1_5_RLAST;
  output [1:0] xt_rsc_1_5_RRESP;
  output [31:0] xt_rsc_1_5_RDATA;
  output xt_rsc_1_5_RID;
  output xt_rsc_1_5_ARREADY;
  input xt_rsc_1_5_ARVALID;
  input xt_rsc_1_5_ARUSER;
  input [3:0] xt_rsc_1_5_ARREGION;
  input [3:0] xt_rsc_1_5_ARQOS;
  input [2:0] xt_rsc_1_5_ARPROT;
  input [3:0] xt_rsc_1_5_ARCACHE;
  input xt_rsc_1_5_ARLOCK;
  input [1:0] xt_rsc_1_5_ARBURST;
  input [2:0] xt_rsc_1_5_ARSIZE;
  input [7:0] xt_rsc_1_5_ARLEN;
  input [11:0] xt_rsc_1_5_ARADDR;
  input xt_rsc_1_5_ARID;
  input xt_rsc_1_5_BREADY;
  output xt_rsc_1_5_BVALID;
  output xt_rsc_1_5_BUSER;
  output [1:0] xt_rsc_1_5_BRESP;
  output xt_rsc_1_5_BID;
  output xt_rsc_1_5_WREADY;
  input xt_rsc_1_5_WVALID;
  input xt_rsc_1_5_WUSER;
  input xt_rsc_1_5_WLAST;
  input [3:0] xt_rsc_1_5_WSTRB;
  input [31:0] xt_rsc_1_5_WDATA;
  output xt_rsc_1_5_AWREADY;
  input xt_rsc_1_5_AWVALID;
  input xt_rsc_1_5_AWUSER;
  input [3:0] xt_rsc_1_5_AWREGION;
  input [3:0] xt_rsc_1_5_AWQOS;
  input [2:0] xt_rsc_1_5_AWPROT;
  input [3:0] xt_rsc_1_5_AWCACHE;
  input xt_rsc_1_5_AWLOCK;
  input [1:0] xt_rsc_1_5_AWBURST;
  input [2:0] xt_rsc_1_5_AWSIZE;
  input [7:0] xt_rsc_1_5_AWLEN;
  input [11:0] xt_rsc_1_5_AWADDR;
  input xt_rsc_1_5_AWID;
  output xt_rsc_triosy_1_5_lz;
  input xt_rsc_1_6_s_tdone;
  input xt_rsc_1_6_tr_write_done;
  input xt_rsc_1_6_RREADY;
  output xt_rsc_1_6_RVALID;
  output xt_rsc_1_6_RUSER;
  output xt_rsc_1_6_RLAST;
  output [1:0] xt_rsc_1_6_RRESP;
  output [31:0] xt_rsc_1_6_RDATA;
  output xt_rsc_1_6_RID;
  output xt_rsc_1_6_ARREADY;
  input xt_rsc_1_6_ARVALID;
  input xt_rsc_1_6_ARUSER;
  input [3:0] xt_rsc_1_6_ARREGION;
  input [3:0] xt_rsc_1_6_ARQOS;
  input [2:0] xt_rsc_1_6_ARPROT;
  input [3:0] xt_rsc_1_6_ARCACHE;
  input xt_rsc_1_6_ARLOCK;
  input [1:0] xt_rsc_1_6_ARBURST;
  input [2:0] xt_rsc_1_6_ARSIZE;
  input [7:0] xt_rsc_1_6_ARLEN;
  input [11:0] xt_rsc_1_6_ARADDR;
  input xt_rsc_1_6_ARID;
  input xt_rsc_1_6_BREADY;
  output xt_rsc_1_6_BVALID;
  output xt_rsc_1_6_BUSER;
  output [1:0] xt_rsc_1_6_BRESP;
  output xt_rsc_1_6_BID;
  output xt_rsc_1_6_WREADY;
  input xt_rsc_1_6_WVALID;
  input xt_rsc_1_6_WUSER;
  input xt_rsc_1_6_WLAST;
  input [3:0] xt_rsc_1_6_WSTRB;
  input [31:0] xt_rsc_1_6_WDATA;
  output xt_rsc_1_6_AWREADY;
  input xt_rsc_1_6_AWVALID;
  input xt_rsc_1_6_AWUSER;
  input [3:0] xt_rsc_1_6_AWREGION;
  input [3:0] xt_rsc_1_6_AWQOS;
  input [2:0] xt_rsc_1_6_AWPROT;
  input [3:0] xt_rsc_1_6_AWCACHE;
  input xt_rsc_1_6_AWLOCK;
  input [1:0] xt_rsc_1_6_AWBURST;
  input [2:0] xt_rsc_1_6_AWSIZE;
  input [7:0] xt_rsc_1_6_AWLEN;
  input [11:0] xt_rsc_1_6_AWADDR;
  input xt_rsc_1_6_AWID;
  output xt_rsc_triosy_1_6_lz;
  input xt_rsc_1_7_s_tdone;
  input xt_rsc_1_7_tr_write_done;
  input xt_rsc_1_7_RREADY;
  output xt_rsc_1_7_RVALID;
  output xt_rsc_1_7_RUSER;
  output xt_rsc_1_7_RLAST;
  output [1:0] xt_rsc_1_7_RRESP;
  output [31:0] xt_rsc_1_7_RDATA;
  output xt_rsc_1_7_RID;
  output xt_rsc_1_7_ARREADY;
  input xt_rsc_1_7_ARVALID;
  input xt_rsc_1_7_ARUSER;
  input [3:0] xt_rsc_1_7_ARREGION;
  input [3:0] xt_rsc_1_7_ARQOS;
  input [2:0] xt_rsc_1_7_ARPROT;
  input [3:0] xt_rsc_1_7_ARCACHE;
  input xt_rsc_1_7_ARLOCK;
  input [1:0] xt_rsc_1_7_ARBURST;
  input [2:0] xt_rsc_1_7_ARSIZE;
  input [7:0] xt_rsc_1_7_ARLEN;
  input [11:0] xt_rsc_1_7_ARADDR;
  input xt_rsc_1_7_ARID;
  input xt_rsc_1_7_BREADY;
  output xt_rsc_1_7_BVALID;
  output xt_rsc_1_7_BUSER;
  output [1:0] xt_rsc_1_7_BRESP;
  output xt_rsc_1_7_BID;
  output xt_rsc_1_7_WREADY;
  input xt_rsc_1_7_WVALID;
  input xt_rsc_1_7_WUSER;
  input xt_rsc_1_7_WLAST;
  input [3:0] xt_rsc_1_7_WSTRB;
  input [31:0] xt_rsc_1_7_WDATA;
  output xt_rsc_1_7_AWREADY;
  input xt_rsc_1_7_AWVALID;
  input xt_rsc_1_7_AWUSER;
  input [3:0] xt_rsc_1_7_AWREGION;
  input [3:0] xt_rsc_1_7_AWQOS;
  input [2:0] xt_rsc_1_7_AWPROT;
  input [3:0] xt_rsc_1_7_AWCACHE;
  input xt_rsc_1_7_AWLOCK;
  input [1:0] xt_rsc_1_7_AWBURST;
  input [2:0] xt_rsc_1_7_AWSIZE;
  input [7:0] xt_rsc_1_7_AWLEN;
  input [11:0] xt_rsc_1_7_AWADDR;
  input xt_rsc_1_7_AWID;
  output xt_rsc_triosy_1_7_lz;
  input xt_rsc_1_8_s_tdone;
  input xt_rsc_1_8_tr_write_done;
  input xt_rsc_1_8_RREADY;
  output xt_rsc_1_8_RVALID;
  output xt_rsc_1_8_RUSER;
  output xt_rsc_1_8_RLAST;
  output [1:0] xt_rsc_1_8_RRESP;
  output [31:0] xt_rsc_1_8_RDATA;
  output xt_rsc_1_8_RID;
  output xt_rsc_1_8_ARREADY;
  input xt_rsc_1_8_ARVALID;
  input xt_rsc_1_8_ARUSER;
  input [3:0] xt_rsc_1_8_ARREGION;
  input [3:0] xt_rsc_1_8_ARQOS;
  input [2:0] xt_rsc_1_8_ARPROT;
  input [3:0] xt_rsc_1_8_ARCACHE;
  input xt_rsc_1_8_ARLOCK;
  input [1:0] xt_rsc_1_8_ARBURST;
  input [2:0] xt_rsc_1_8_ARSIZE;
  input [7:0] xt_rsc_1_8_ARLEN;
  input [11:0] xt_rsc_1_8_ARADDR;
  input xt_rsc_1_8_ARID;
  input xt_rsc_1_8_BREADY;
  output xt_rsc_1_8_BVALID;
  output xt_rsc_1_8_BUSER;
  output [1:0] xt_rsc_1_8_BRESP;
  output xt_rsc_1_8_BID;
  output xt_rsc_1_8_WREADY;
  input xt_rsc_1_8_WVALID;
  input xt_rsc_1_8_WUSER;
  input xt_rsc_1_8_WLAST;
  input [3:0] xt_rsc_1_8_WSTRB;
  input [31:0] xt_rsc_1_8_WDATA;
  output xt_rsc_1_8_AWREADY;
  input xt_rsc_1_8_AWVALID;
  input xt_rsc_1_8_AWUSER;
  input [3:0] xt_rsc_1_8_AWREGION;
  input [3:0] xt_rsc_1_8_AWQOS;
  input [2:0] xt_rsc_1_8_AWPROT;
  input [3:0] xt_rsc_1_8_AWCACHE;
  input xt_rsc_1_8_AWLOCK;
  input [1:0] xt_rsc_1_8_AWBURST;
  input [2:0] xt_rsc_1_8_AWSIZE;
  input [7:0] xt_rsc_1_8_AWLEN;
  input [11:0] xt_rsc_1_8_AWADDR;
  input xt_rsc_1_8_AWID;
  output xt_rsc_triosy_1_8_lz;
  input xt_rsc_1_9_s_tdone;
  input xt_rsc_1_9_tr_write_done;
  input xt_rsc_1_9_RREADY;
  output xt_rsc_1_9_RVALID;
  output xt_rsc_1_9_RUSER;
  output xt_rsc_1_9_RLAST;
  output [1:0] xt_rsc_1_9_RRESP;
  output [31:0] xt_rsc_1_9_RDATA;
  output xt_rsc_1_9_RID;
  output xt_rsc_1_9_ARREADY;
  input xt_rsc_1_9_ARVALID;
  input xt_rsc_1_9_ARUSER;
  input [3:0] xt_rsc_1_9_ARREGION;
  input [3:0] xt_rsc_1_9_ARQOS;
  input [2:0] xt_rsc_1_9_ARPROT;
  input [3:0] xt_rsc_1_9_ARCACHE;
  input xt_rsc_1_9_ARLOCK;
  input [1:0] xt_rsc_1_9_ARBURST;
  input [2:0] xt_rsc_1_9_ARSIZE;
  input [7:0] xt_rsc_1_9_ARLEN;
  input [11:0] xt_rsc_1_9_ARADDR;
  input xt_rsc_1_9_ARID;
  input xt_rsc_1_9_BREADY;
  output xt_rsc_1_9_BVALID;
  output xt_rsc_1_9_BUSER;
  output [1:0] xt_rsc_1_9_BRESP;
  output xt_rsc_1_9_BID;
  output xt_rsc_1_9_WREADY;
  input xt_rsc_1_9_WVALID;
  input xt_rsc_1_9_WUSER;
  input xt_rsc_1_9_WLAST;
  input [3:0] xt_rsc_1_9_WSTRB;
  input [31:0] xt_rsc_1_9_WDATA;
  output xt_rsc_1_9_AWREADY;
  input xt_rsc_1_9_AWVALID;
  input xt_rsc_1_9_AWUSER;
  input [3:0] xt_rsc_1_9_AWREGION;
  input [3:0] xt_rsc_1_9_AWQOS;
  input [2:0] xt_rsc_1_9_AWPROT;
  input [3:0] xt_rsc_1_9_AWCACHE;
  input xt_rsc_1_9_AWLOCK;
  input [1:0] xt_rsc_1_9_AWBURST;
  input [2:0] xt_rsc_1_9_AWSIZE;
  input [7:0] xt_rsc_1_9_AWLEN;
  input [11:0] xt_rsc_1_9_AWADDR;
  input xt_rsc_1_9_AWID;
  output xt_rsc_triosy_1_9_lz;
  input xt_rsc_1_10_s_tdone;
  input xt_rsc_1_10_tr_write_done;
  input xt_rsc_1_10_RREADY;
  output xt_rsc_1_10_RVALID;
  output xt_rsc_1_10_RUSER;
  output xt_rsc_1_10_RLAST;
  output [1:0] xt_rsc_1_10_RRESP;
  output [31:0] xt_rsc_1_10_RDATA;
  output xt_rsc_1_10_RID;
  output xt_rsc_1_10_ARREADY;
  input xt_rsc_1_10_ARVALID;
  input xt_rsc_1_10_ARUSER;
  input [3:0] xt_rsc_1_10_ARREGION;
  input [3:0] xt_rsc_1_10_ARQOS;
  input [2:0] xt_rsc_1_10_ARPROT;
  input [3:0] xt_rsc_1_10_ARCACHE;
  input xt_rsc_1_10_ARLOCK;
  input [1:0] xt_rsc_1_10_ARBURST;
  input [2:0] xt_rsc_1_10_ARSIZE;
  input [7:0] xt_rsc_1_10_ARLEN;
  input [11:0] xt_rsc_1_10_ARADDR;
  input xt_rsc_1_10_ARID;
  input xt_rsc_1_10_BREADY;
  output xt_rsc_1_10_BVALID;
  output xt_rsc_1_10_BUSER;
  output [1:0] xt_rsc_1_10_BRESP;
  output xt_rsc_1_10_BID;
  output xt_rsc_1_10_WREADY;
  input xt_rsc_1_10_WVALID;
  input xt_rsc_1_10_WUSER;
  input xt_rsc_1_10_WLAST;
  input [3:0] xt_rsc_1_10_WSTRB;
  input [31:0] xt_rsc_1_10_WDATA;
  output xt_rsc_1_10_AWREADY;
  input xt_rsc_1_10_AWVALID;
  input xt_rsc_1_10_AWUSER;
  input [3:0] xt_rsc_1_10_AWREGION;
  input [3:0] xt_rsc_1_10_AWQOS;
  input [2:0] xt_rsc_1_10_AWPROT;
  input [3:0] xt_rsc_1_10_AWCACHE;
  input xt_rsc_1_10_AWLOCK;
  input [1:0] xt_rsc_1_10_AWBURST;
  input [2:0] xt_rsc_1_10_AWSIZE;
  input [7:0] xt_rsc_1_10_AWLEN;
  input [11:0] xt_rsc_1_10_AWADDR;
  input xt_rsc_1_10_AWID;
  output xt_rsc_triosy_1_10_lz;
  input xt_rsc_1_11_s_tdone;
  input xt_rsc_1_11_tr_write_done;
  input xt_rsc_1_11_RREADY;
  output xt_rsc_1_11_RVALID;
  output xt_rsc_1_11_RUSER;
  output xt_rsc_1_11_RLAST;
  output [1:0] xt_rsc_1_11_RRESP;
  output [31:0] xt_rsc_1_11_RDATA;
  output xt_rsc_1_11_RID;
  output xt_rsc_1_11_ARREADY;
  input xt_rsc_1_11_ARVALID;
  input xt_rsc_1_11_ARUSER;
  input [3:0] xt_rsc_1_11_ARREGION;
  input [3:0] xt_rsc_1_11_ARQOS;
  input [2:0] xt_rsc_1_11_ARPROT;
  input [3:0] xt_rsc_1_11_ARCACHE;
  input xt_rsc_1_11_ARLOCK;
  input [1:0] xt_rsc_1_11_ARBURST;
  input [2:0] xt_rsc_1_11_ARSIZE;
  input [7:0] xt_rsc_1_11_ARLEN;
  input [11:0] xt_rsc_1_11_ARADDR;
  input xt_rsc_1_11_ARID;
  input xt_rsc_1_11_BREADY;
  output xt_rsc_1_11_BVALID;
  output xt_rsc_1_11_BUSER;
  output [1:0] xt_rsc_1_11_BRESP;
  output xt_rsc_1_11_BID;
  output xt_rsc_1_11_WREADY;
  input xt_rsc_1_11_WVALID;
  input xt_rsc_1_11_WUSER;
  input xt_rsc_1_11_WLAST;
  input [3:0] xt_rsc_1_11_WSTRB;
  input [31:0] xt_rsc_1_11_WDATA;
  output xt_rsc_1_11_AWREADY;
  input xt_rsc_1_11_AWVALID;
  input xt_rsc_1_11_AWUSER;
  input [3:0] xt_rsc_1_11_AWREGION;
  input [3:0] xt_rsc_1_11_AWQOS;
  input [2:0] xt_rsc_1_11_AWPROT;
  input [3:0] xt_rsc_1_11_AWCACHE;
  input xt_rsc_1_11_AWLOCK;
  input [1:0] xt_rsc_1_11_AWBURST;
  input [2:0] xt_rsc_1_11_AWSIZE;
  input [7:0] xt_rsc_1_11_AWLEN;
  input [11:0] xt_rsc_1_11_AWADDR;
  input xt_rsc_1_11_AWID;
  output xt_rsc_triosy_1_11_lz;
  input xt_rsc_1_12_s_tdone;
  input xt_rsc_1_12_tr_write_done;
  input xt_rsc_1_12_RREADY;
  output xt_rsc_1_12_RVALID;
  output xt_rsc_1_12_RUSER;
  output xt_rsc_1_12_RLAST;
  output [1:0] xt_rsc_1_12_RRESP;
  output [31:0] xt_rsc_1_12_RDATA;
  output xt_rsc_1_12_RID;
  output xt_rsc_1_12_ARREADY;
  input xt_rsc_1_12_ARVALID;
  input xt_rsc_1_12_ARUSER;
  input [3:0] xt_rsc_1_12_ARREGION;
  input [3:0] xt_rsc_1_12_ARQOS;
  input [2:0] xt_rsc_1_12_ARPROT;
  input [3:0] xt_rsc_1_12_ARCACHE;
  input xt_rsc_1_12_ARLOCK;
  input [1:0] xt_rsc_1_12_ARBURST;
  input [2:0] xt_rsc_1_12_ARSIZE;
  input [7:0] xt_rsc_1_12_ARLEN;
  input [11:0] xt_rsc_1_12_ARADDR;
  input xt_rsc_1_12_ARID;
  input xt_rsc_1_12_BREADY;
  output xt_rsc_1_12_BVALID;
  output xt_rsc_1_12_BUSER;
  output [1:0] xt_rsc_1_12_BRESP;
  output xt_rsc_1_12_BID;
  output xt_rsc_1_12_WREADY;
  input xt_rsc_1_12_WVALID;
  input xt_rsc_1_12_WUSER;
  input xt_rsc_1_12_WLAST;
  input [3:0] xt_rsc_1_12_WSTRB;
  input [31:0] xt_rsc_1_12_WDATA;
  output xt_rsc_1_12_AWREADY;
  input xt_rsc_1_12_AWVALID;
  input xt_rsc_1_12_AWUSER;
  input [3:0] xt_rsc_1_12_AWREGION;
  input [3:0] xt_rsc_1_12_AWQOS;
  input [2:0] xt_rsc_1_12_AWPROT;
  input [3:0] xt_rsc_1_12_AWCACHE;
  input xt_rsc_1_12_AWLOCK;
  input [1:0] xt_rsc_1_12_AWBURST;
  input [2:0] xt_rsc_1_12_AWSIZE;
  input [7:0] xt_rsc_1_12_AWLEN;
  input [11:0] xt_rsc_1_12_AWADDR;
  input xt_rsc_1_12_AWID;
  output xt_rsc_triosy_1_12_lz;
  input xt_rsc_1_13_s_tdone;
  input xt_rsc_1_13_tr_write_done;
  input xt_rsc_1_13_RREADY;
  output xt_rsc_1_13_RVALID;
  output xt_rsc_1_13_RUSER;
  output xt_rsc_1_13_RLAST;
  output [1:0] xt_rsc_1_13_RRESP;
  output [31:0] xt_rsc_1_13_RDATA;
  output xt_rsc_1_13_RID;
  output xt_rsc_1_13_ARREADY;
  input xt_rsc_1_13_ARVALID;
  input xt_rsc_1_13_ARUSER;
  input [3:0] xt_rsc_1_13_ARREGION;
  input [3:0] xt_rsc_1_13_ARQOS;
  input [2:0] xt_rsc_1_13_ARPROT;
  input [3:0] xt_rsc_1_13_ARCACHE;
  input xt_rsc_1_13_ARLOCK;
  input [1:0] xt_rsc_1_13_ARBURST;
  input [2:0] xt_rsc_1_13_ARSIZE;
  input [7:0] xt_rsc_1_13_ARLEN;
  input [11:0] xt_rsc_1_13_ARADDR;
  input xt_rsc_1_13_ARID;
  input xt_rsc_1_13_BREADY;
  output xt_rsc_1_13_BVALID;
  output xt_rsc_1_13_BUSER;
  output [1:0] xt_rsc_1_13_BRESP;
  output xt_rsc_1_13_BID;
  output xt_rsc_1_13_WREADY;
  input xt_rsc_1_13_WVALID;
  input xt_rsc_1_13_WUSER;
  input xt_rsc_1_13_WLAST;
  input [3:0] xt_rsc_1_13_WSTRB;
  input [31:0] xt_rsc_1_13_WDATA;
  output xt_rsc_1_13_AWREADY;
  input xt_rsc_1_13_AWVALID;
  input xt_rsc_1_13_AWUSER;
  input [3:0] xt_rsc_1_13_AWREGION;
  input [3:0] xt_rsc_1_13_AWQOS;
  input [2:0] xt_rsc_1_13_AWPROT;
  input [3:0] xt_rsc_1_13_AWCACHE;
  input xt_rsc_1_13_AWLOCK;
  input [1:0] xt_rsc_1_13_AWBURST;
  input [2:0] xt_rsc_1_13_AWSIZE;
  input [7:0] xt_rsc_1_13_AWLEN;
  input [11:0] xt_rsc_1_13_AWADDR;
  input xt_rsc_1_13_AWID;
  output xt_rsc_triosy_1_13_lz;
  input xt_rsc_1_14_s_tdone;
  input xt_rsc_1_14_tr_write_done;
  input xt_rsc_1_14_RREADY;
  output xt_rsc_1_14_RVALID;
  output xt_rsc_1_14_RUSER;
  output xt_rsc_1_14_RLAST;
  output [1:0] xt_rsc_1_14_RRESP;
  output [31:0] xt_rsc_1_14_RDATA;
  output xt_rsc_1_14_RID;
  output xt_rsc_1_14_ARREADY;
  input xt_rsc_1_14_ARVALID;
  input xt_rsc_1_14_ARUSER;
  input [3:0] xt_rsc_1_14_ARREGION;
  input [3:0] xt_rsc_1_14_ARQOS;
  input [2:0] xt_rsc_1_14_ARPROT;
  input [3:0] xt_rsc_1_14_ARCACHE;
  input xt_rsc_1_14_ARLOCK;
  input [1:0] xt_rsc_1_14_ARBURST;
  input [2:0] xt_rsc_1_14_ARSIZE;
  input [7:0] xt_rsc_1_14_ARLEN;
  input [11:0] xt_rsc_1_14_ARADDR;
  input xt_rsc_1_14_ARID;
  input xt_rsc_1_14_BREADY;
  output xt_rsc_1_14_BVALID;
  output xt_rsc_1_14_BUSER;
  output [1:0] xt_rsc_1_14_BRESP;
  output xt_rsc_1_14_BID;
  output xt_rsc_1_14_WREADY;
  input xt_rsc_1_14_WVALID;
  input xt_rsc_1_14_WUSER;
  input xt_rsc_1_14_WLAST;
  input [3:0] xt_rsc_1_14_WSTRB;
  input [31:0] xt_rsc_1_14_WDATA;
  output xt_rsc_1_14_AWREADY;
  input xt_rsc_1_14_AWVALID;
  input xt_rsc_1_14_AWUSER;
  input [3:0] xt_rsc_1_14_AWREGION;
  input [3:0] xt_rsc_1_14_AWQOS;
  input [2:0] xt_rsc_1_14_AWPROT;
  input [3:0] xt_rsc_1_14_AWCACHE;
  input xt_rsc_1_14_AWLOCK;
  input [1:0] xt_rsc_1_14_AWBURST;
  input [2:0] xt_rsc_1_14_AWSIZE;
  input [7:0] xt_rsc_1_14_AWLEN;
  input [11:0] xt_rsc_1_14_AWADDR;
  input xt_rsc_1_14_AWID;
  output xt_rsc_triosy_1_14_lz;
  input xt_rsc_1_15_s_tdone;
  input xt_rsc_1_15_tr_write_done;
  input xt_rsc_1_15_RREADY;
  output xt_rsc_1_15_RVALID;
  output xt_rsc_1_15_RUSER;
  output xt_rsc_1_15_RLAST;
  output [1:0] xt_rsc_1_15_RRESP;
  output [31:0] xt_rsc_1_15_RDATA;
  output xt_rsc_1_15_RID;
  output xt_rsc_1_15_ARREADY;
  input xt_rsc_1_15_ARVALID;
  input xt_rsc_1_15_ARUSER;
  input [3:0] xt_rsc_1_15_ARREGION;
  input [3:0] xt_rsc_1_15_ARQOS;
  input [2:0] xt_rsc_1_15_ARPROT;
  input [3:0] xt_rsc_1_15_ARCACHE;
  input xt_rsc_1_15_ARLOCK;
  input [1:0] xt_rsc_1_15_ARBURST;
  input [2:0] xt_rsc_1_15_ARSIZE;
  input [7:0] xt_rsc_1_15_ARLEN;
  input [11:0] xt_rsc_1_15_ARADDR;
  input xt_rsc_1_15_ARID;
  input xt_rsc_1_15_BREADY;
  output xt_rsc_1_15_BVALID;
  output xt_rsc_1_15_BUSER;
  output [1:0] xt_rsc_1_15_BRESP;
  output xt_rsc_1_15_BID;
  output xt_rsc_1_15_WREADY;
  input xt_rsc_1_15_WVALID;
  input xt_rsc_1_15_WUSER;
  input xt_rsc_1_15_WLAST;
  input [3:0] xt_rsc_1_15_WSTRB;
  input [31:0] xt_rsc_1_15_WDATA;
  output xt_rsc_1_15_AWREADY;
  input xt_rsc_1_15_AWVALID;
  input xt_rsc_1_15_AWUSER;
  input [3:0] xt_rsc_1_15_AWREGION;
  input [3:0] xt_rsc_1_15_AWQOS;
  input [2:0] xt_rsc_1_15_AWPROT;
  input [3:0] xt_rsc_1_15_AWCACHE;
  input xt_rsc_1_15_AWLOCK;
  input [1:0] xt_rsc_1_15_AWBURST;
  input [2:0] xt_rsc_1_15_AWSIZE;
  input [7:0] xt_rsc_1_15_AWLEN;
  input [11:0] xt_rsc_1_15_AWADDR;
  input xt_rsc_1_15_AWID;
  output xt_rsc_triosy_1_15_lz;
  input xt_rsc_1_16_s_tdone;
  input xt_rsc_1_16_tr_write_done;
  input xt_rsc_1_16_RREADY;
  output xt_rsc_1_16_RVALID;
  output xt_rsc_1_16_RUSER;
  output xt_rsc_1_16_RLAST;
  output [1:0] xt_rsc_1_16_RRESP;
  output [31:0] xt_rsc_1_16_RDATA;
  output xt_rsc_1_16_RID;
  output xt_rsc_1_16_ARREADY;
  input xt_rsc_1_16_ARVALID;
  input xt_rsc_1_16_ARUSER;
  input [3:0] xt_rsc_1_16_ARREGION;
  input [3:0] xt_rsc_1_16_ARQOS;
  input [2:0] xt_rsc_1_16_ARPROT;
  input [3:0] xt_rsc_1_16_ARCACHE;
  input xt_rsc_1_16_ARLOCK;
  input [1:0] xt_rsc_1_16_ARBURST;
  input [2:0] xt_rsc_1_16_ARSIZE;
  input [7:0] xt_rsc_1_16_ARLEN;
  input [11:0] xt_rsc_1_16_ARADDR;
  input xt_rsc_1_16_ARID;
  input xt_rsc_1_16_BREADY;
  output xt_rsc_1_16_BVALID;
  output xt_rsc_1_16_BUSER;
  output [1:0] xt_rsc_1_16_BRESP;
  output xt_rsc_1_16_BID;
  output xt_rsc_1_16_WREADY;
  input xt_rsc_1_16_WVALID;
  input xt_rsc_1_16_WUSER;
  input xt_rsc_1_16_WLAST;
  input [3:0] xt_rsc_1_16_WSTRB;
  input [31:0] xt_rsc_1_16_WDATA;
  output xt_rsc_1_16_AWREADY;
  input xt_rsc_1_16_AWVALID;
  input xt_rsc_1_16_AWUSER;
  input [3:0] xt_rsc_1_16_AWREGION;
  input [3:0] xt_rsc_1_16_AWQOS;
  input [2:0] xt_rsc_1_16_AWPROT;
  input [3:0] xt_rsc_1_16_AWCACHE;
  input xt_rsc_1_16_AWLOCK;
  input [1:0] xt_rsc_1_16_AWBURST;
  input [2:0] xt_rsc_1_16_AWSIZE;
  input [7:0] xt_rsc_1_16_AWLEN;
  input [11:0] xt_rsc_1_16_AWADDR;
  input xt_rsc_1_16_AWID;
  output xt_rsc_triosy_1_16_lz;
  input xt_rsc_1_17_s_tdone;
  input xt_rsc_1_17_tr_write_done;
  input xt_rsc_1_17_RREADY;
  output xt_rsc_1_17_RVALID;
  output xt_rsc_1_17_RUSER;
  output xt_rsc_1_17_RLAST;
  output [1:0] xt_rsc_1_17_RRESP;
  output [31:0] xt_rsc_1_17_RDATA;
  output xt_rsc_1_17_RID;
  output xt_rsc_1_17_ARREADY;
  input xt_rsc_1_17_ARVALID;
  input xt_rsc_1_17_ARUSER;
  input [3:0] xt_rsc_1_17_ARREGION;
  input [3:0] xt_rsc_1_17_ARQOS;
  input [2:0] xt_rsc_1_17_ARPROT;
  input [3:0] xt_rsc_1_17_ARCACHE;
  input xt_rsc_1_17_ARLOCK;
  input [1:0] xt_rsc_1_17_ARBURST;
  input [2:0] xt_rsc_1_17_ARSIZE;
  input [7:0] xt_rsc_1_17_ARLEN;
  input [11:0] xt_rsc_1_17_ARADDR;
  input xt_rsc_1_17_ARID;
  input xt_rsc_1_17_BREADY;
  output xt_rsc_1_17_BVALID;
  output xt_rsc_1_17_BUSER;
  output [1:0] xt_rsc_1_17_BRESP;
  output xt_rsc_1_17_BID;
  output xt_rsc_1_17_WREADY;
  input xt_rsc_1_17_WVALID;
  input xt_rsc_1_17_WUSER;
  input xt_rsc_1_17_WLAST;
  input [3:0] xt_rsc_1_17_WSTRB;
  input [31:0] xt_rsc_1_17_WDATA;
  output xt_rsc_1_17_AWREADY;
  input xt_rsc_1_17_AWVALID;
  input xt_rsc_1_17_AWUSER;
  input [3:0] xt_rsc_1_17_AWREGION;
  input [3:0] xt_rsc_1_17_AWQOS;
  input [2:0] xt_rsc_1_17_AWPROT;
  input [3:0] xt_rsc_1_17_AWCACHE;
  input xt_rsc_1_17_AWLOCK;
  input [1:0] xt_rsc_1_17_AWBURST;
  input [2:0] xt_rsc_1_17_AWSIZE;
  input [7:0] xt_rsc_1_17_AWLEN;
  input [11:0] xt_rsc_1_17_AWADDR;
  input xt_rsc_1_17_AWID;
  output xt_rsc_triosy_1_17_lz;
  input xt_rsc_1_18_s_tdone;
  input xt_rsc_1_18_tr_write_done;
  input xt_rsc_1_18_RREADY;
  output xt_rsc_1_18_RVALID;
  output xt_rsc_1_18_RUSER;
  output xt_rsc_1_18_RLAST;
  output [1:0] xt_rsc_1_18_RRESP;
  output [31:0] xt_rsc_1_18_RDATA;
  output xt_rsc_1_18_RID;
  output xt_rsc_1_18_ARREADY;
  input xt_rsc_1_18_ARVALID;
  input xt_rsc_1_18_ARUSER;
  input [3:0] xt_rsc_1_18_ARREGION;
  input [3:0] xt_rsc_1_18_ARQOS;
  input [2:0] xt_rsc_1_18_ARPROT;
  input [3:0] xt_rsc_1_18_ARCACHE;
  input xt_rsc_1_18_ARLOCK;
  input [1:0] xt_rsc_1_18_ARBURST;
  input [2:0] xt_rsc_1_18_ARSIZE;
  input [7:0] xt_rsc_1_18_ARLEN;
  input [11:0] xt_rsc_1_18_ARADDR;
  input xt_rsc_1_18_ARID;
  input xt_rsc_1_18_BREADY;
  output xt_rsc_1_18_BVALID;
  output xt_rsc_1_18_BUSER;
  output [1:0] xt_rsc_1_18_BRESP;
  output xt_rsc_1_18_BID;
  output xt_rsc_1_18_WREADY;
  input xt_rsc_1_18_WVALID;
  input xt_rsc_1_18_WUSER;
  input xt_rsc_1_18_WLAST;
  input [3:0] xt_rsc_1_18_WSTRB;
  input [31:0] xt_rsc_1_18_WDATA;
  output xt_rsc_1_18_AWREADY;
  input xt_rsc_1_18_AWVALID;
  input xt_rsc_1_18_AWUSER;
  input [3:0] xt_rsc_1_18_AWREGION;
  input [3:0] xt_rsc_1_18_AWQOS;
  input [2:0] xt_rsc_1_18_AWPROT;
  input [3:0] xt_rsc_1_18_AWCACHE;
  input xt_rsc_1_18_AWLOCK;
  input [1:0] xt_rsc_1_18_AWBURST;
  input [2:0] xt_rsc_1_18_AWSIZE;
  input [7:0] xt_rsc_1_18_AWLEN;
  input [11:0] xt_rsc_1_18_AWADDR;
  input xt_rsc_1_18_AWID;
  output xt_rsc_triosy_1_18_lz;
  input xt_rsc_1_19_s_tdone;
  input xt_rsc_1_19_tr_write_done;
  input xt_rsc_1_19_RREADY;
  output xt_rsc_1_19_RVALID;
  output xt_rsc_1_19_RUSER;
  output xt_rsc_1_19_RLAST;
  output [1:0] xt_rsc_1_19_RRESP;
  output [31:0] xt_rsc_1_19_RDATA;
  output xt_rsc_1_19_RID;
  output xt_rsc_1_19_ARREADY;
  input xt_rsc_1_19_ARVALID;
  input xt_rsc_1_19_ARUSER;
  input [3:0] xt_rsc_1_19_ARREGION;
  input [3:0] xt_rsc_1_19_ARQOS;
  input [2:0] xt_rsc_1_19_ARPROT;
  input [3:0] xt_rsc_1_19_ARCACHE;
  input xt_rsc_1_19_ARLOCK;
  input [1:0] xt_rsc_1_19_ARBURST;
  input [2:0] xt_rsc_1_19_ARSIZE;
  input [7:0] xt_rsc_1_19_ARLEN;
  input [11:0] xt_rsc_1_19_ARADDR;
  input xt_rsc_1_19_ARID;
  input xt_rsc_1_19_BREADY;
  output xt_rsc_1_19_BVALID;
  output xt_rsc_1_19_BUSER;
  output [1:0] xt_rsc_1_19_BRESP;
  output xt_rsc_1_19_BID;
  output xt_rsc_1_19_WREADY;
  input xt_rsc_1_19_WVALID;
  input xt_rsc_1_19_WUSER;
  input xt_rsc_1_19_WLAST;
  input [3:0] xt_rsc_1_19_WSTRB;
  input [31:0] xt_rsc_1_19_WDATA;
  output xt_rsc_1_19_AWREADY;
  input xt_rsc_1_19_AWVALID;
  input xt_rsc_1_19_AWUSER;
  input [3:0] xt_rsc_1_19_AWREGION;
  input [3:0] xt_rsc_1_19_AWQOS;
  input [2:0] xt_rsc_1_19_AWPROT;
  input [3:0] xt_rsc_1_19_AWCACHE;
  input xt_rsc_1_19_AWLOCK;
  input [1:0] xt_rsc_1_19_AWBURST;
  input [2:0] xt_rsc_1_19_AWSIZE;
  input [7:0] xt_rsc_1_19_AWLEN;
  input [11:0] xt_rsc_1_19_AWADDR;
  input xt_rsc_1_19_AWID;
  output xt_rsc_triosy_1_19_lz;
  input xt_rsc_1_20_s_tdone;
  input xt_rsc_1_20_tr_write_done;
  input xt_rsc_1_20_RREADY;
  output xt_rsc_1_20_RVALID;
  output xt_rsc_1_20_RUSER;
  output xt_rsc_1_20_RLAST;
  output [1:0] xt_rsc_1_20_RRESP;
  output [31:0] xt_rsc_1_20_RDATA;
  output xt_rsc_1_20_RID;
  output xt_rsc_1_20_ARREADY;
  input xt_rsc_1_20_ARVALID;
  input xt_rsc_1_20_ARUSER;
  input [3:0] xt_rsc_1_20_ARREGION;
  input [3:0] xt_rsc_1_20_ARQOS;
  input [2:0] xt_rsc_1_20_ARPROT;
  input [3:0] xt_rsc_1_20_ARCACHE;
  input xt_rsc_1_20_ARLOCK;
  input [1:0] xt_rsc_1_20_ARBURST;
  input [2:0] xt_rsc_1_20_ARSIZE;
  input [7:0] xt_rsc_1_20_ARLEN;
  input [11:0] xt_rsc_1_20_ARADDR;
  input xt_rsc_1_20_ARID;
  input xt_rsc_1_20_BREADY;
  output xt_rsc_1_20_BVALID;
  output xt_rsc_1_20_BUSER;
  output [1:0] xt_rsc_1_20_BRESP;
  output xt_rsc_1_20_BID;
  output xt_rsc_1_20_WREADY;
  input xt_rsc_1_20_WVALID;
  input xt_rsc_1_20_WUSER;
  input xt_rsc_1_20_WLAST;
  input [3:0] xt_rsc_1_20_WSTRB;
  input [31:0] xt_rsc_1_20_WDATA;
  output xt_rsc_1_20_AWREADY;
  input xt_rsc_1_20_AWVALID;
  input xt_rsc_1_20_AWUSER;
  input [3:0] xt_rsc_1_20_AWREGION;
  input [3:0] xt_rsc_1_20_AWQOS;
  input [2:0] xt_rsc_1_20_AWPROT;
  input [3:0] xt_rsc_1_20_AWCACHE;
  input xt_rsc_1_20_AWLOCK;
  input [1:0] xt_rsc_1_20_AWBURST;
  input [2:0] xt_rsc_1_20_AWSIZE;
  input [7:0] xt_rsc_1_20_AWLEN;
  input [11:0] xt_rsc_1_20_AWADDR;
  input xt_rsc_1_20_AWID;
  output xt_rsc_triosy_1_20_lz;
  input xt_rsc_1_21_s_tdone;
  input xt_rsc_1_21_tr_write_done;
  input xt_rsc_1_21_RREADY;
  output xt_rsc_1_21_RVALID;
  output xt_rsc_1_21_RUSER;
  output xt_rsc_1_21_RLAST;
  output [1:0] xt_rsc_1_21_RRESP;
  output [31:0] xt_rsc_1_21_RDATA;
  output xt_rsc_1_21_RID;
  output xt_rsc_1_21_ARREADY;
  input xt_rsc_1_21_ARVALID;
  input xt_rsc_1_21_ARUSER;
  input [3:0] xt_rsc_1_21_ARREGION;
  input [3:0] xt_rsc_1_21_ARQOS;
  input [2:0] xt_rsc_1_21_ARPROT;
  input [3:0] xt_rsc_1_21_ARCACHE;
  input xt_rsc_1_21_ARLOCK;
  input [1:0] xt_rsc_1_21_ARBURST;
  input [2:0] xt_rsc_1_21_ARSIZE;
  input [7:0] xt_rsc_1_21_ARLEN;
  input [11:0] xt_rsc_1_21_ARADDR;
  input xt_rsc_1_21_ARID;
  input xt_rsc_1_21_BREADY;
  output xt_rsc_1_21_BVALID;
  output xt_rsc_1_21_BUSER;
  output [1:0] xt_rsc_1_21_BRESP;
  output xt_rsc_1_21_BID;
  output xt_rsc_1_21_WREADY;
  input xt_rsc_1_21_WVALID;
  input xt_rsc_1_21_WUSER;
  input xt_rsc_1_21_WLAST;
  input [3:0] xt_rsc_1_21_WSTRB;
  input [31:0] xt_rsc_1_21_WDATA;
  output xt_rsc_1_21_AWREADY;
  input xt_rsc_1_21_AWVALID;
  input xt_rsc_1_21_AWUSER;
  input [3:0] xt_rsc_1_21_AWREGION;
  input [3:0] xt_rsc_1_21_AWQOS;
  input [2:0] xt_rsc_1_21_AWPROT;
  input [3:0] xt_rsc_1_21_AWCACHE;
  input xt_rsc_1_21_AWLOCK;
  input [1:0] xt_rsc_1_21_AWBURST;
  input [2:0] xt_rsc_1_21_AWSIZE;
  input [7:0] xt_rsc_1_21_AWLEN;
  input [11:0] xt_rsc_1_21_AWADDR;
  input xt_rsc_1_21_AWID;
  output xt_rsc_triosy_1_21_lz;
  input xt_rsc_1_22_s_tdone;
  input xt_rsc_1_22_tr_write_done;
  input xt_rsc_1_22_RREADY;
  output xt_rsc_1_22_RVALID;
  output xt_rsc_1_22_RUSER;
  output xt_rsc_1_22_RLAST;
  output [1:0] xt_rsc_1_22_RRESP;
  output [31:0] xt_rsc_1_22_RDATA;
  output xt_rsc_1_22_RID;
  output xt_rsc_1_22_ARREADY;
  input xt_rsc_1_22_ARVALID;
  input xt_rsc_1_22_ARUSER;
  input [3:0] xt_rsc_1_22_ARREGION;
  input [3:0] xt_rsc_1_22_ARQOS;
  input [2:0] xt_rsc_1_22_ARPROT;
  input [3:0] xt_rsc_1_22_ARCACHE;
  input xt_rsc_1_22_ARLOCK;
  input [1:0] xt_rsc_1_22_ARBURST;
  input [2:0] xt_rsc_1_22_ARSIZE;
  input [7:0] xt_rsc_1_22_ARLEN;
  input [11:0] xt_rsc_1_22_ARADDR;
  input xt_rsc_1_22_ARID;
  input xt_rsc_1_22_BREADY;
  output xt_rsc_1_22_BVALID;
  output xt_rsc_1_22_BUSER;
  output [1:0] xt_rsc_1_22_BRESP;
  output xt_rsc_1_22_BID;
  output xt_rsc_1_22_WREADY;
  input xt_rsc_1_22_WVALID;
  input xt_rsc_1_22_WUSER;
  input xt_rsc_1_22_WLAST;
  input [3:0] xt_rsc_1_22_WSTRB;
  input [31:0] xt_rsc_1_22_WDATA;
  output xt_rsc_1_22_AWREADY;
  input xt_rsc_1_22_AWVALID;
  input xt_rsc_1_22_AWUSER;
  input [3:0] xt_rsc_1_22_AWREGION;
  input [3:0] xt_rsc_1_22_AWQOS;
  input [2:0] xt_rsc_1_22_AWPROT;
  input [3:0] xt_rsc_1_22_AWCACHE;
  input xt_rsc_1_22_AWLOCK;
  input [1:0] xt_rsc_1_22_AWBURST;
  input [2:0] xt_rsc_1_22_AWSIZE;
  input [7:0] xt_rsc_1_22_AWLEN;
  input [11:0] xt_rsc_1_22_AWADDR;
  input xt_rsc_1_22_AWID;
  output xt_rsc_triosy_1_22_lz;
  input xt_rsc_1_23_s_tdone;
  input xt_rsc_1_23_tr_write_done;
  input xt_rsc_1_23_RREADY;
  output xt_rsc_1_23_RVALID;
  output xt_rsc_1_23_RUSER;
  output xt_rsc_1_23_RLAST;
  output [1:0] xt_rsc_1_23_RRESP;
  output [31:0] xt_rsc_1_23_RDATA;
  output xt_rsc_1_23_RID;
  output xt_rsc_1_23_ARREADY;
  input xt_rsc_1_23_ARVALID;
  input xt_rsc_1_23_ARUSER;
  input [3:0] xt_rsc_1_23_ARREGION;
  input [3:0] xt_rsc_1_23_ARQOS;
  input [2:0] xt_rsc_1_23_ARPROT;
  input [3:0] xt_rsc_1_23_ARCACHE;
  input xt_rsc_1_23_ARLOCK;
  input [1:0] xt_rsc_1_23_ARBURST;
  input [2:0] xt_rsc_1_23_ARSIZE;
  input [7:0] xt_rsc_1_23_ARLEN;
  input [11:0] xt_rsc_1_23_ARADDR;
  input xt_rsc_1_23_ARID;
  input xt_rsc_1_23_BREADY;
  output xt_rsc_1_23_BVALID;
  output xt_rsc_1_23_BUSER;
  output [1:0] xt_rsc_1_23_BRESP;
  output xt_rsc_1_23_BID;
  output xt_rsc_1_23_WREADY;
  input xt_rsc_1_23_WVALID;
  input xt_rsc_1_23_WUSER;
  input xt_rsc_1_23_WLAST;
  input [3:0] xt_rsc_1_23_WSTRB;
  input [31:0] xt_rsc_1_23_WDATA;
  output xt_rsc_1_23_AWREADY;
  input xt_rsc_1_23_AWVALID;
  input xt_rsc_1_23_AWUSER;
  input [3:0] xt_rsc_1_23_AWREGION;
  input [3:0] xt_rsc_1_23_AWQOS;
  input [2:0] xt_rsc_1_23_AWPROT;
  input [3:0] xt_rsc_1_23_AWCACHE;
  input xt_rsc_1_23_AWLOCK;
  input [1:0] xt_rsc_1_23_AWBURST;
  input [2:0] xt_rsc_1_23_AWSIZE;
  input [7:0] xt_rsc_1_23_AWLEN;
  input [11:0] xt_rsc_1_23_AWADDR;
  input xt_rsc_1_23_AWID;
  output xt_rsc_triosy_1_23_lz;
  input xt_rsc_1_24_s_tdone;
  input xt_rsc_1_24_tr_write_done;
  input xt_rsc_1_24_RREADY;
  output xt_rsc_1_24_RVALID;
  output xt_rsc_1_24_RUSER;
  output xt_rsc_1_24_RLAST;
  output [1:0] xt_rsc_1_24_RRESP;
  output [31:0] xt_rsc_1_24_RDATA;
  output xt_rsc_1_24_RID;
  output xt_rsc_1_24_ARREADY;
  input xt_rsc_1_24_ARVALID;
  input xt_rsc_1_24_ARUSER;
  input [3:0] xt_rsc_1_24_ARREGION;
  input [3:0] xt_rsc_1_24_ARQOS;
  input [2:0] xt_rsc_1_24_ARPROT;
  input [3:0] xt_rsc_1_24_ARCACHE;
  input xt_rsc_1_24_ARLOCK;
  input [1:0] xt_rsc_1_24_ARBURST;
  input [2:0] xt_rsc_1_24_ARSIZE;
  input [7:0] xt_rsc_1_24_ARLEN;
  input [11:0] xt_rsc_1_24_ARADDR;
  input xt_rsc_1_24_ARID;
  input xt_rsc_1_24_BREADY;
  output xt_rsc_1_24_BVALID;
  output xt_rsc_1_24_BUSER;
  output [1:0] xt_rsc_1_24_BRESP;
  output xt_rsc_1_24_BID;
  output xt_rsc_1_24_WREADY;
  input xt_rsc_1_24_WVALID;
  input xt_rsc_1_24_WUSER;
  input xt_rsc_1_24_WLAST;
  input [3:0] xt_rsc_1_24_WSTRB;
  input [31:0] xt_rsc_1_24_WDATA;
  output xt_rsc_1_24_AWREADY;
  input xt_rsc_1_24_AWVALID;
  input xt_rsc_1_24_AWUSER;
  input [3:0] xt_rsc_1_24_AWREGION;
  input [3:0] xt_rsc_1_24_AWQOS;
  input [2:0] xt_rsc_1_24_AWPROT;
  input [3:0] xt_rsc_1_24_AWCACHE;
  input xt_rsc_1_24_AWLOCK;
  input [1:0] xt_rsc_1_24_AWBURST;
  input [2:0] xt_rsc_1_24_AWSIZE;
  input [7:0] xt_rsc_1_24_AWLEN;
  input [11:0] xt_rsc_1_24_AWADDR;
  input xt_rsc_1_24_AWID;
  output xt_rsc_triosy_1_24_lz;
  input xt_rsc_1_25_s_tdone;
  input xt_rsc_1_25_tr_write_done;
  input xt_rsc_1_25_RREADY;
  output xt_rsc_1_25_RVALID;
  output xt_rsc_1_25_RUSER;
  output xt_rsc_1_25_RLAST;
  output [1:0] xt_rsc_1_25_RRESP;
  output [31:0] xt_rsc_1_25_RDATA;
  output xt_rsc_1_25_RID;
  output xt_rsc_1_25_ARREADY;
  input xt_rsc_1_25_ARVALID;
  input xt_rsc_1_25_ARUSER;
  input [3:0] xt_rsc_1_25_ARREGION;
  input [3:0] xt_rsc_1_25_ARQOS;
  input [2:0] xt_rsc_1_25_ARPROT;
  input [3:0] xt_rsc_1_25_ARCACHE;
  input xt_rsc_1_25_ARLOCK;
  input [1:0] xt_rsc_1_25_ARBURST;
  input [2:0] xt_rsc_1_25_ARSIZE;
  input [7:0] xt_rsc_1_25_ARLEN;
  input [11:0] xt_rsc_1_25_ARADDR;
  input xt_rsc_1_25_ARID;
  input xt_rsc_1_25_BREADY;
  output xt_rsc_1_25_BVALID;
  output xt_rsc_1_25_BUSER;
  output [1:0] xt_rsc_1_25_BRESP;
  output xt_rsc_1_25_BID;
  output xt_rsc_1_25_WREADY;
  input xt_rsc_1_25_WVALID;
  input xt_rsc_1_25_WUSER;
  input xt_rsc_1_25_WLAST;
  input [3:0] xt_rsc_1_25_WSTRB;
  input [31:0] xt_rsc_1_25_WDATA;
  output xt_rsc_1_25_AWREADY;
  input xt_rsc_1_25_AWVALID;
  input xt_rsc_1_25_AWUSER;
  input [3:0] xt_rsc_1_25_AWREGION;
  input [3:0] xt_rsc_1_25_AWQOS;
  input [2:0] xt_rsc_1_25_AWPROT;
  input [3:0] xt_rsc_1_25_AWCACHE;
  input xt_rsc_1_25_AWLOCK;
  input [1:0] xt_rsc_1_25_AWBURST;
  input [2:0] xt_rsc_1_25_AWSIZE;
  input [7:0] xt_rsc_1_25_AWLEN;
  input [11:0] xt_rsc_1_25_AWADDR;
  input xt_rsc_1_25_AWID;
  output xt_rsc_triosy_1_25_lz;
  input xt_rsc_1_26_s_tdone;
  input xt_rsc_1_26_tr_write_done;
  input xt_rsc_1_26_RREADY;
  output xt_rsc_1_26_RVALID;
  output xt_rsc_1_26_RUSER;
  output xt_rsc_1_26_RLAST;
  output [1:0] xt_rsc_1_26_RRESP;
  output [31:0] xt_rsc_1_26_RDATA;
  output xt_rsc_1_26_RID;
  output xt_rsc_1_26_ARREADY;
  input xt_rsc_1_26_ARVALID;
  input xt_rsc_1_26_ARUSER;
  input [3:0] xt_rsc_1_26_ARREGION;
  input [3:0] xt_rsc_1_26_ARQOS;
  input [2:0] xt_rsc_1_26_ARPROT;
  input [3:0] xt_rsc_1_26_ARCACHE;
  input xt_rsc_1_26_ARLOCK;
  input [1:0] xt_rsc_1_26_ARBURST;
  input [2:0] xt_rsc_1_26_ARSIZE;
  input [7:0] xt_rsc_1_26_ARLEN;
  input [11:0] xt_rsc_1_26_ARADDR;
  input xt_rsc_1_26_ARID;
  input xt_rsc_1_26_BREADY;
  output xt_rsc_1_26_BVALID;
  output xt_rsc_1_26_BUSER;
  output [1:0] xt_rsc_1_26_BRESP;
  output xt_rsc_1_26_BID;
  output xt_rsc_1_26_WREADY;
  input xt_rsc_1_26_WVALID;
  input xt_rsc_1_26_WUSER;
  input xt_rsc_1_26_WLAST;
  input [3:0] xt_rsc_1_26_WSTRB;
  input [31:0] xt_rsc_1_26_WDATA;
  output xt_rsc_1_26_AWREADY;
  input xt_rsc_1_26_AWVALID;
  input xt_rsc_1_26_AWUSER;
  input [3:0] xt_rsc_1_26_AWREGION;
  input [3:0] xt_rsc_1_26_AWQOS;
  input [2:0] xt_rsc_1_26_AWPROT;
  input [3:0] xt_rsc_1_26_AWCACHE;
  input xt_rsc_1_26_AWLOCK;
  input [1:0] xt_rsc_1_26_AWBURST;
  input [2:0] xt_rsc_1_26_AWSIZE;
  input [7:0] xt_rsc_1_26_AWLEN;
  input [11:0] xt_rsc_1_26_AWADDR;
  input xt_rsc_1_26_AWID;
  output xt_rsc_triosy_1_26_lz;
  input xt_rsc_1_27_s_tdone;
  input xt_rsc_1_27_tr_write_done;
  input xt_rsc_1_27_RREADY;
  output xt_rsc_1_27_RVALID;
  output xt_rsc_1_27_RUSER;
  output xt_rsc_1_27_RLAST;
  output [1:0] xt_rsc_1_27_RRESP;
  output [31:0] xt_rsc_1_27_RDATA;
  output xt_rsc_1_27_RID;
  output xt_rsc_1_27_ARREADY;
  input xt_rsc_1_27_ARVALID;
  input xt_rsc_1_27_ARUSER;
  input [3:0] xt_rsc_1_27_ARREGION;
  input [3:0] xt_rsc_1_27_ARQOS;
  input [2:0] xt_rsc_1_27_ARPROT;
  input [3:0] xt_rsc_1_27_ARCACHE;
  input xt_rsc_1_27_ARLOCK;
  input [1:0] xt_rsc_1_27_ARBURST;
  input [2:0] xt_rsc_1_27_ARSIZE;
  input [7:0] xt_rsc_1_27_ARLEN;
  input [11:0] xt_rsc_1_27_ARADDR;
  input xt_rsc_1_27_ARID;
  input xt_rsc_1_27_BREADY;
  output xt_rsc_1_27_BVALID;
  output xt_rsc_1_27_BUSER;
  output [1:0] xt_rsc_1_27_BRESP;
  output xt_rsc_1_27_BID;
  output xt_rsc_1_27_WREADY;
  input xt_rsc_1_27_WVALID;
  input xt_rsc_1_27_WUSER;
  input xt_rsc_1_27_WLAST;
  input [3:0] xt_rsc_1_27_WSTRB;
  input [31:0] xt_rsc_1_27_WDATA;
  output xt_rsc_1_27_AWREADY;
  input xt_rsc_1_27_AWVALID;
  input xt_rsc_1_27_AWUSER;
  input [3:0] xt_rsc_1_27_AWREGION;
  input [3:0] xt_rsc_1_27_AWQOS;
  input [2:0] xt_rsc_1_27_AWPROT;
  input [3:0] xt_rsc_1_27_AWCACHE;
  input xt_rsc_1_27_AWLOCK;
  input [1:0] xt_rsc_1_27_AWBURST;
  input [2:0] xt_rsc_1_27_AWSIZE;
  input [7:0] xt_rsc_1_27_AWLEN;
  input [11:0] xt_rsc_1_27_AWADDR;
  input xt_rsc_1_27_AWID;
  output xt_rsc_triosy_1_27_lz;
  input xt_rsc_1_28_s_tdone;
  input xt_rsc_1_28_tr_write_done;
  input xt_rsc_1_28_RREADY;
  output xt_rsc_1_28_RVALID;
  output xt_rsc_1_28_RUSER;
  output xt_rsc_1_28_RLAST;
  output [1:0] xt_rsc_1_28_RRESP;
  output [31:0] xt_rsc_1_28_RDATA;
  output xt_rsc_1_28_RID;
  output xt_rsc_1_28_ARREADY;
  input xt_rsc_1_28_ARVALID;
  input xt_rsc_1_28_ARUSER;
  input [3:0] xt_rsc_1_28_ARREGION;
  input [3:0] xt_rsc_1_28_ARQOS;
  input [2:0] xt_rsc_1_28_ARPROT;
  input [3:0] xt_rsc_1_28_ARCACHE;
  input xt_rsc_1_28_ARLOCK;
  input [1:0] xt_rsc_1_28_ARBURST;
  input [2:0] xt_rsc_1_28_ARSIZE;
  input [7:0] xt_rsc_1_28_ARLEN;
  input [11:0] xt_rsc_1_28_ARADDR;
  input xt_rsc_1_28_ARID;
  input xt_rsc_1_28_BREADY;
  output xt_rsc_1_28_BVALID;
  output xt_rsc_1_28_BUSER;
  output [1:0] xt_rsc_1_28_BRESP;
  output xt_rsc_1_28_BID;
  output xt_rsc_1_28_WREADY;
  input xt_rsc_1_28_WVALID;
  input xt_rsc_1_28_WUSER;
  input xt_rsc_1_28_WLAST;
  input [3:0] xt_rsc_1_28_WSTRB;
  input [31:0] xt_rsc_1_28_WDATA;
  output xt_rsc_1_28_AWREADY;
  input xt_rsc_1_28_AWVALID;
  input xt_rsc_1_28_AWUSER;
  input [3:0] xt_rsc_1_28_AWREGION;
  input [3:0] xt_rsc_1_28_AWQOS;
  input [2:0] xt_rsc_1_28_AWPROT;
  input [3:0] xt_rsc_1_28_AWCACHE;
  input xt_rsc_1_28_AWLOCK;
  input [1:0] xt_rsc_1_28_AWBURST;
  input [2:0] xt_rsc_1_28_AWSIZE;
  input [7:0] xt_rsc_1_28_AWLEN;
  input [11:0] xt_rsc_1_28_AWADDR;
  input xt_rsc_1_28_AWID;
  output xt_rsc_triosy_1_28_lz;
  input xt_rsc_1_29_s_tdone;
  input xt_rsc_1_29_tr_write_done;
  input xt_rsc_1_29_RREADY;
  output xt_rsc_1_29_RVALID;
  output xt_rsc_1_29_RUSER;
  output xt_rsc_1_29_RLAST;
  output [1:0] xt_rsc_1_29_RRESP;
  output [31:0] xt_rsc_1_29_RDATA;
  output xt_rsc_1_29_RID;
  output xt_rsc_1_29_ARREADY;
  input xt_rsc_1_29_ARVALID;
  input xt_rsc_1_29_ARUSER;
  input [3:0] xt_rsc_1_29_ARREGION;
  input [3:0] xt_rsc_1_29_ARQOS;
  input [2:0] xt_rsc_1_29_ARPROT;
  input [3:0] xt_rsc_1_29_ARCACHE;
  input xt_rsc_1_29_ARLOCK;
  input [1:0] xt_rsc_1_29_ARBURST;
  input [2:0] xt_rsc_1_29_ARSIZE;
  input [7:0] xt_rsc_1_29_ARLEN;
  input [11:0] xt_rsc_1_29_ARADDR;
  input xt_rsc_1_29_ARID;
  input xt_rsc_1_29_BREADY;
  output xt_rsc_1_29_BVALID;
  output xt_rsc_1_29_BUSER;
  output [1:0] xt_rsc_1_29_BRESP;
  output xt_rsc_1_29_BID;
  output xt_rsc_1_29_WREADY;
  input xt_rsc_1_29_WVALID;
  input xt_rsc_1_29_WUSER;
  input xt_rsc_1_29_WLAST;
  input [3:0] xt_rsc_1_29_WSTRB;
  input [31:0] xt_rsc_1_29_WDATA;
  output xt_rsc_1_29_AWREADY;
  input xt_rsc_1_29_AWVALID;
  input xt_rsc_1_29_AWUSER;
  input [3:0] xt_rsc_1_29_AWREGION;
  input [3:0] xt_rsc_1_29_AWQOS;
  input [2:0] xt_rsc_1_29_AWPROT;
  input [3:0] xt_rsc_1_29_AWCACHE;
  input xt_rsc_1_29_AWLOCK;
  input [1:0] xt_rsc_1_29_AWBURST;
  input [2:0] xt_rsc_1_29_AWSIZE;
  input [7:0] xt_rsc_1_29_AWLEN;
  input [11:0] xt_rsc_1_29_AWADDR;
  input xt_rsc_1_29_AWID;
  output xt_rsc_triosy_1_29_lz;
  input xt_rsc_1_30_s_tdone;
  input xt_rsc_1_30_tr_write_done;
  input xt_rsc_1_30_RREADY;
  output xt_rsc_1_30_RVALID;
  output xt_rsc_1_30_RUSER;
  output xt_rsc_1_30_RLAST;
  output [1:0] xt_rsc_1_30_RRESP;
  output [31:0] xt_rsc_1_30_RDATA;
  output xt_rsc_1_30_RID;
  output xt_rsc_1_30_ARREADY;
  input xt_rsc_1_30_ARVALID;
  input xt_rsc_1_30_ARUSER;
  input [3:0] xt_rsc_1_30_ARREGION;
  input [3:0] xt_rsc_1_30_ARQOS;
  input [2:0] xt_rsc_1_30_ARPROT;
  input [3:0] xt_rsc_1_30_ARCACHE;
  input xt_rsc_1_30_ARLOCK;
  input [1:0] xt_rsc_1_30_ARBURST;
  input [2:0] xt_rsc_1_30_ARSIZE;
  input [7:0] xt_rsc_1_30_ARLEN;
  input [11:0] xt_rsc_1_30_ARADDR;
  input xt_rsc_1_30_ARID;
  input xt_rsc_1_30_BREADY;
  output xt_rsc_1_30_BVALID;
  output xt_rsc_1_30_BUSER;
  output [1:0] xt_rsc_1_30_BRESP;
  output xt_rsc_1_30_BID;
  output xt_rsc_1_30_WREADY;
  input xt_rsc_1_30_WVALID;
  input xt_rsc_1_30_WUSER;
  input xt_rsc_1_30_WLAST;
  input [3:0] xt_rsc_1_30_WSTRB;
  input [31:0] xt_rsc_1_30_WDATA;
  output xt_rsc_1_30_AWREADY;
  input xt_rsc_1_30_AWVALID;
  input xt_rsc_1_30_AWUSER;
  input [3:0] xt_rsc_1_30_AWREGION;
  input [3:0] xt_rsc_1_30_AWQOS;
  input [2:0] xt_rsc_1_30_AWPROT;
  input [3:0] xt_rsc_1_30_AWCACHE;
  input xt_rsc_1_30_AWLOCK;
  input [1:0] xt_rsc_1_30_AWBURST;
  input [2:0] xt_rsc_1_30_AWSIZE;
  input [7:0] xt_rsc_1_30_AWLEN;
  input [11:0] xt_rsc_1_30_AWADDR;
  input xt_rsc_1_30_AWID;
  output xt_rsc_triosy_1_30_lz;
  input xt_rsc_1_31_s_tdone;
  input xt_rsc_1_31_tr_write_done;
  input xt_rsc_1_31_RREADY;
  output xt_rsc_1_31_RVALID;
  output xt_rsc_1_31_RUSER;
  output xt_rsc_1_31_RLAST;
  output [1:0] xt_rsc_1_31_RRESP;
  output [31:0] xt_rsc_1_31_RDATA;
  output xt_rsc_1_31_RID;
  output xt_rsc_1_31_ARREADY;
  input xt_rsc_1_31_ARVALID;
  input xt_rsc_1_31_ARUSER;
  input [3:0] xt_rsc_1_31_ARREGION;
  input [3:0] xt_rsc_1_31_ARQOS;
  input [2:0] xt_rsc_1_31_ARPROT;
  input [3:0] xt_rsc_1_31_ARCACHE;
  input xt_rsc_1_31_ARLOCK;
  input [1:0] xt_rsc_1_31_ARBURST;
  input [2:0] xt_rsc_1_31_ARSIZE;
  input [7:0] xt_rsc_1_31_ARLEN;
  input [11:0] xt_rsc_1_31_ARADDR;
  input xt_rsc_1_31_ARID;
  input xt_rsc_1_31_BREADY;
  output xt_rsc_1_31_BVALID;
  output xt_rsc_1_31_BUSER;
  output [1:0] xt_rsc_1_31_BRESP;
  output xt_rsc_1_31_BID;
  output xt_rsc_1_31_WREADY;
  input xt_rsc_1_31_WVALID;
  input xt_rsc_1_31_WUSER;
  input xt_rsc_1_31_WLAST;
  input [3:0] xt_rsc_1_31_WSTRB;
  input [31:0] xt_rsc_1_31_WDATA;
  output xt_rsc_1_31_AWREADY;
  input xt_rsc_1_31_AWVALID;
  input xt_rsc_1_31_AWUSER;
  input [3:0] xt_rsc_1_31_AWREGION;
  input [3:0] xt_rsc_1_31_AWQOS;
  input [2:0] xt_rsc_1_31_AWPROT;
  input [3:0] xt_rsc_1_31_AWCACHE;
  input xt_rsc_1_31_AWLOCK;
  input [1:0] xt_rsc_1_31_AWBURST;
  input [2:0] xt_rsc_1_31_AWSIZE;
  input [7:0] xt_rsc_1_31_AWLEN;
  input [11:0] xt_rsc_1_31_AWADDR;
  input xt_rsc_1_31_AWID;
  output xt_rsc_triosy_1_31_lz;
  input [31:0] p_rsc_dat;
  output p_rsc_triosy_lz;
  input [31:0] r_rsc_dat;
  output r_rsc_triosy_lz;
  input twiddle_rsc_0_0_s_tdone;
  input twiddle_rsc_0_0_tr_write_done;
  input twiddle_rsc_0_0_RREADY;
  output twiddle_rsc_0_0_RVALID;
  output twiddle_rsc_0_0_RUSER;
  output twiddle_rsc_0_0_RLAST;
  output [1:0] twiddle_rsc_0_0_RRESP;
  output [31:0] twiddle_rsc_0_0_RDATA;
  output twiddle_rsc_0_0_RID;
  output twiddle_rsc_0_0_ARREADY;
  input twiddle_rsc_0_0_ARVALID;
  input twiddle_rsc_0_0_ARUSER;
  input [3:0] twiddle_rsc_0_0_ARREGION;
  input [3:0] twiddle_rsc_0_0_ARQOS;
  input [2:0] twiddle_rsc_0_0_ARPROT;
  input [3:0] twiddle_rsc_0_0_ARCACHE;
  input twiddle_rsc_0_0_ARLOCK;
  input [1:0] twiddle_rsc_0_0_ARBURST;
  input [2:0] twiddle_rsc_0_0_ARSIZE;
  input [7:0] twiddle_rsc_0_0_ARLEN;
  input [11:0] twiddle_rsc_0_0_ARADDR;
  input twiddle_rsc_0_0_ARID;
  input twiddle_rsc_0_0_BREADY;
  output twiddle_rsc_0_0_BVALID;
  output twiddle_rsc_0_0_BUSER;
  output [1:0] twiddle_rsc_0_0_BRESP;
  output twiddle_rsc_0_0_BID;
  output twiddle_rsc_0_0_WREADY;
  input twiddle_rsc_0_0_WVALID;
  input twiddle_rsc_0_0_WUSER;
  input twiddle_rsc_0_0_WLAST;
  input [3:0] twiddle_rsc_0_0_WSTRB;
  input [31:0] twiddle_rsc_0_0_WDATA;
  output twiddle_rsc_0_0_AWREADY;
  input twiddle_rsc_0_0_AWVALID;
  input twiddle_rsc_0_0_AWUSER;
  input [3:0] twiddle_rsc_0_0_AWREGION;
  input [3:0] twiddle_rsc_0_0_AWQOS;
  input [2:0] twiddle_rsc_0_0_AWPROT;
  input [3:0] twiddle_rsc_0_0_AWCACHE;
  input twiddle_rsc_0_0_AWLOCK;
  input [1:0] twiddle_rsc_0_0_AWBURST;
  input [2:0] twiddle_rsc_0_0_AWSIZE;
  input [7:0] twiddle_rsc_0_0_AWLEN;
  input [11:0] twiddle_rsc_0_0_AWADDR;
  input twiddle_rsc_0_0_AWID;
  output twiddle_rsc_triosy_0_0_lz;
  input twiddle_rsc_0_1_s_tdone;
  input twiddle_rsc_0_1_tr_write_done;
  input twiddle_rsc_0_1_RREADY;
  output twiddle_rsc_0_1_RVALID;
  output twiddle_rsc_0_1_RUSER;
  output twiddle_rsc_0_1_RLAST;
  output [1:0] twiddle_rsc_0_1_RRESP;
  output [31:0] twiddle_rsc_0_1_RDATA;
  output twiddle_rsc_0_1_RID;
  output twiddle_rsc_0_1_ARREADY;
  input twiddle_rsc_0_1_ARVALID;
  input twiddle_rsc_0_1_ARUSER;
  input [3:0] twiddle_rsc_0_1_ARREGION;
  input [3:0] twiddle_rsc_0_1_ARQOS;
  input [2:0] twiddle_rsc_0_1_ARPROT;
  input [3:0] twiddle_rsc_0_1_ARCACHE;
  input twiddle_rsc_0_1_ARLOCK;
  input [1:0] twiddle_rsc_0_1_ARBURST;
  input [2:0] twiddle_rsc_0_1_ARSIZE;
  input [7:0] twiddle_rsc_0_1_ARLEN;
  input [11:0] twiddle_rsc_0_1_ARADDR;
  input twiddle_rsc_0_1_ARID;
  input twiddle_rsc_0_1_BREADY;
  output twiddle_rsc_0_1_BVALID;
  output twiddle_rsc_0_1_BUSER;
  output [1:0] twiddle_rsc_0_1_BRESP;
  output twiddle_rsc_0_1_BID;
  output twiddle_rsc_0_1_WREADY;
  input twiddle_rsc_0_1_WVALID;
  input twiddle_rsc_0_1_WUSER;
  input twiddle_rsc_0_1_WLAST;
  input [3:0] twiddle_rsc_0_1_WSTRB;
  input [31:0] twiddle_rsc_0_1_WDATA;
  output twiddle_rsc_0_1_AWREADY;
  input twiddle_rsc_0_1_AWVALID;
  input twiddle_rsc_0_1_AWUSER;
  input [3:0] twiddle_rsc_0_1_AWREGION;
  input [3:0] twiddle_rsc_0_1_AWQOS;
  input [2:0] twiddle_rsc_0_1_AWPROT;
  input [3:0] twiddle_rsc_0_1_AWCACHE;
  input twiddle_rsc_0_1_AWLOCK;
  input [1:0] twiddle_rsc_0_1_AWBURST;
  input [2:0] twiddle_rsc_0_1_AWSIZE;
  input [7:0] twiddle_rsc_0_1_AWLEN;
  input [11:0] twiddle_rsc_0_1_AWADDR;
  input twiddle_rsc_0_1_AWID;
  output twiddle_rsc_triosy_0_1_lz;
  input twiddle_rsc_0_2_s_tdone;
  input twiddle_rsc_0_2_tr_write_done;
  input twiddle_rsc_0_2_RREADY;
  output twiddle_rsc_0_2_RVALID;
  output twiddle_rsc_0_2_RUSER;
  output twiddle_rsc_0_2_RLAST;
  output [1:0] twiddle_rsc_0_2_RRESP;
  output [31:0] twiddle_rsc_0_2_RDATA;
  output twiddle_rsc_0_2_RID;
  output twiddle_rsc_0_2_ARREADY;
  input twiddle_rsc_0_2_ARVALID;
  input twiddle_rsc_0_2_ARUSER;
  input [3:0] twiddle_rsc_0_2_ARREGION;
  input [3:0] twiddle_rsc_0_2_ARQOS;
  input [2:0] twiddle_rsc_0_2_ARPROT;
  input [3:0] twiddle_rsc_0_2_ARCACHE;
  input twiddle_rsc_0_2_ARLOCK;
  input [1:0] twiddle_rsc_0_2_ARBURST;
  input [2:0] twiddle_rsc_0_2_ARSIZE;
  input [7:0] twiddle_rsc_0_2_ARLEN;
  input [11:0] twiddle_rsc_0_2_ARADDR;
  input twiddle_rsc_0_2_ARID;
  input twiddle_rsc_0_2_BREADY;
  output twiddle_rsc_0_2_BVALID;
  output twiddle_rsc_0_2_BUSER;
  output [1:0] twiddle_rsc_0_2_BRESP;
  output twiddle_rsc_0_2_BID;
  output twiddle_rsc_0_2_WREADY;
  input twiddle_rsc_0_2_WVALID;
  input twiddle_rsc_0_2_WUSER;
  input twiddle_rsc_0_2_WLAST;
  input [3:0] twiddle_rsc_0_2_WSTRB;
  input [31:0] twiddle_rsc_0_2_WDATA;
  output twiddle_rsc_0_2_AWREADY;
  input twiddle_rsc_0_2_AWVALID;
  input twiddle_rsc_0_2_AWUSER;
  input [3:0] twiddle_rsc_0_2_AWREGION;
  input [3:0] twiddle_rsc_0_2_AWQOS;
  input [2:0] twiddle_rsc_0_2_AWPROT;
  input [3:0] twiddle_rsc_0_2_AWCACHE;
  input twiddle_rsc_0_2_AWLOCK;
  input [1:0] twiddle_rsc_0_2_AWBURST;
  input [2:0] twiddle_rsc_0_2_AWSIZE;
  input [7:0] twiddle_rsc_0_2_AWLEN;
  input [11:0] twiddle_rsc_0_2_AWADDR;
  input twiddle_rsc_0_2_AWID;
  output twiddle_rsc_triosy_0_2_lz;
  input twiddle_rsc_0_3_s_tdone;
  input twiddle_rsc_0_3_tr_write_done;
  input twiddle_rsc_0_3_RREADY;
  output twiddle_rsc_0_3_RVALID;
  output twiddle_rsc_0_3_RUSER;
  output twiddle_rsc_0_3_RLAST;
  output [1:0] twiddle_rsc_0_3_RRESP;
  output [31:0] twiddle_rsc_0_3_RDATA;
  output twiddle_rsc_0_3_RID;
  output twiddle_rsc_0_3_ARREADY;
  input twiddle_rsc_0_3_ARVALID;
  input twiddle_rsc_0_3_ARUSER;
  input [3:0] twiddle_rsc_0_3_ARREGION;
  input [3:0] twiddle_rsc_0_3_ARQOS;
  input [2:0] twiddle_rsc_0_3_ARPROT;
  input [3:0] twiddle_rsc_0_3_ARCACHE;
  input twiddle_rsc_0_3_ARLOCK;
  input [1:0] twiddle_rsc_0_3_ARBURST;
  input [2:0] twiddle_rsc_0_3_ARSIZE;
  input [7:0] twiddle_rsc_0_3_ARLEN;
  input [11:0] twiddle_rsc_0_3_ARADDR;
  input twiddle_rsc_0_3_ARID;
  input twiddle_rsc_0_3_BREADY;
  output twiddle_rsc_0_3_BVALID;
  output twiddle_rsc_0_3_BUSER;
  output [1:0] twiddle_rsc_0_3_BRESP;
  output twiddle_rsc_0_3_BID;
  output twiddle_rsc_0_3_WREADY;
  input twiddle_rsc_0_3_WVALID;
  input twiddle_rsc_0_3_WUSER;
  input twiddle_rsc_0_3_WLAST;
  input [3:0] twiddle_rsc_0_3_WSTRB;
  input [31:0] twiddle_rsc_0_3_WDATA;
  output twiddle_rsc_0_3_AWREADY;
  input twiddle_rsc_0_3_AWVALID;
  input twiddle_rsc_0_3_AWUSER;
  input [3:0] twiddle_rsc_0_3_AWREGION;
  input [3:0] twiddle_rsc_0_3_AWQOS;
  input [2:0] twiddle_rsc_0_3_AWPROT;
  input [3:0] twiddle_rsc_0_3_AWCACHE;
  input twiddle_rsc_0_3_AWLOCK;
  input [1:0] twiddle_rsc_0_3_AWBURST;
  input [2:0] twiddle_rsc_0_3_AWSIZE;
  input [7:0] twiddle_rsc_0_3_AWLEN;
  input [11:0] twiddle_rsc_0_3_AWADDR;
  input twiddle_rsc_0_3_AWID;
  output twiddle_rsc_triosy_0_3_lz;
  input twiddle_rsc_0_4_s_tdone;
  input twiddle_rsc_0_4_tr_write_done;
  input twiddle_rsc_0_4_RREADY;
  output twiddle_rsc_0_4_RVALID;
  output twiddle_rsc_0_4_RUSER;
  output twiddle_rsc_0_4_RLAST;
  output [1:0] twiddle_rsc_0_4_RRESP;
  output [31:0] twiddle_rsc_0_4_RDATA;
  output twiddle_rsc_0_4_RID;
  output twiddle_rsc_0_4_ARREADY;
  input twiddle_rsc_0_4_ARVALID;
  input twiddle_rsc_0_4_ARUSER;
  input [3:0] twiddle_rsc_0_4_ARREGION;
  input [3:0] twiddle_rsc_0_4_ARQOS;
  input [2:0] twiddle_rsc_0_4_ARPROT;
  input [3:0] twiddle_rsc_0_4_ARCACHE;
  input twiddle_rsc_0_4_ARLOCK;
  input [1:0] twiddle_rsc_0_4_ARBURST;
  input [2:0] twiddle_rsc_0_4_ARSIZE;
  input [7:0] twiddle_rsc_0_4_ARLEN;
  input [11:0] twiddle_rsc_0_4_ARADDR;
  input twiddle_rsc_0_4_ARID;
  input twiddle_rsc_0_4_BREADY;
  output twiddle_rsc_0_4_BVALID;
  output twiddle_rsc_0_4_BUSER;
  output [1:0] twiddle_rsc_0_4_BRESP;
  output twiddle_rsc_0_4_BID;
  output twiddle_rsc_0_4_WREADY;
  input twiddle_rsc_0_4_WVALID;
  input twiddle_rsc_0_4_WUSER;
  input twiddle_rsc_0_4_WLAST;
  input [3:0] twiddle_rsc_0_4_WSTRB;
  input [31:0] twiddle_rsc_0_4_WDATA;
  output twiddle_rsc_0_4_AWREADY;
  input twiddle_rsc_0_4_AWVALID;
  input twiddle_rsc_0_4_AWUSER;
  input [3:0] twiddle_rsc_0_4_AWREGION;
  input [3:0] twiddle_rsc_0_4_AWQOS;
  input [2:0] twiddle_rsc_0_4_AWPROT;
  input [3:0] twiddle_rsc_0_4_AWCACHE;
  input twiddle_rsc_0_4_AWLOCK;
  input [1:0] twiddle_rsc_0_4_AWBURST;
  input [2:0] twiddle_rsc_0_4_AWSIZE;
  input [7:0] twiddle_rsc_0_4_AWLEN;
  input [11:0] twiddle_rsc_0_4_AWADDR;
  input twiddle_rsc_0_4_AWID;
  output twiddle_rsc_triosy_0_4_lz;
  input twiddle_rsc_0_5_s_tdone;
  input twiddle_rsc_0_5_tr_write_done;
  input twiddle_rsc_0_5_RREADY;
  output twiddle_rsc_0_5_RVALID;
  output twiddle_rsc_0_5_RUSER;
  output twiddle_rsc_0_5_RLAST;
  output [1:0] twiddle_rsc_0_5_RRESP;
  output [31:0] twiddle_rsc_0_5_RDATA;
  output twiddle_rsc_0_5_RID;
  output twiddle_rsc_0_5_ARREADY;
  input twiddle_rsc_0_5_ARVALID;
  input twiddle_rsc_0_5_ARUSER;
  input [3:0] twiddle_rsc_0_5_ARREGION;
  input [3:0] twiddle_rsc_0_5_ARQOS;
  input [2:0] twiddle_rsc_0_5_ARPROT;
  input [3:0] twiddle_rsc_0_5_ARCACHE;
  input twiddle_rsc_0_5_ARLOCK;
  input [1:0] twiddle_rsc_0_5_ARBURST;
  input [2:0] twiddle_rsc_0_5_ARSIZE;
  input [7:0] twiddle_rsc_0_5_ARLEN;
  input [11:0] twiddle_rsc_0_5_ARADDR;
  input twiddle_rsc_0_5_ARID;
  input twiddle_rsc_0_5_BREADY;
  output twiddle_rsc_0_5_BVALID;
  output twiddle_rsc_0_5_BUSER;
  output [1:0] twiddle_rsc_0_5_BRESP;
  output twiddle_rsc_0_5_BID;
  output twiddle_rsc_0_5_WREADY;
  input twiddle_rsc_0_5_WVALID;
  input twiddle_rsc_0_5_WUSER;
  input twiddle_rsc_0_5_WLAST;
  input [3:0] twiddle_rsc_0_5_WSTRB;
  input [31:0] twiddle_rsc_0_5_WDATA;
  output twiddle_rsc_0_5_AWREADY;
  input twiddle_rsc_0_5_AWVALID;
  input twiddle_rsc_0_5_AWUSER;
  input [3:0] twiddle_rsc_0_5_AWREGION;
  input [3:0] twiddle_rsc_0_5_AWQOS;
  input [2:0] twiddle_rsc_0_5_AWPROT;
  input [3:0] twiddle_rsc_0_5_AWCACHE;
  input twiddle_rsc_0_5_AWLOCK;
  input [1:0] twiddle_rsc_0_5_AWBURST;
  input [2:0] twiddle_rsc_0_5_AWSIZE;
  input [7:0] twiddle_rsc_0_5_AWLEN;
  input [11:0] twiddle_rsc_0_5_AWADDR;
  input twiddle_rsc_0_5_AWID;
  output twiddle_rsc_triosy_0_5_lz;
  input twiddle_rsc_0_6_s_tdone;
  input twiddle_rsc_0_6_tr_write_done;
  input twiddle_rsc_0_6_RREADY;
  output twiddle_rsc_0_6_RVALID;
  output twiddle_rsc_0_6_RUSER;
  output twiddle_rsc_0_6_RLAST;
  output [1:0] twiddle_rsc_0_6_RRESP;
  output [31:0] twiddle_rsc_0_6_RDATA;
  output twiddle_rsc_0_6_RID;
  output twiddle_rsc_0_6_ARREADY;
  input twiddle_rsc_0_6_ARVALID;
  input twiddle_rsc_0_6_ARUSER;
  input [3:0] twiddle_rsc_0_6_ARREGION;
  input [3:0] twiddle_rsc_0_6_ARQOS;
  input [2:0] twiddle_rsc_0_6_ARPROT;
  input [3:0] twiddle_rsc_0_6_ARCACHE;
  input twiddle_rsc_0_6_ARLOCK;
  input [1:0] twiddle_rsc_0_6_ARBURST;
  input [2:0] twiddle_rsc_0_6_ARSIZE;
  input [7:0] twiddle_rsc_0_6_ARLEN;
  input [11:0] twiddle_rsc_0_6_ARADDR;
  input twiddle_rsc_0_6_ARID;
  input twiddle_rsc_0_6_BREADY;
  output twiddle_rsc_0_6_BVALID;
  output twiddle_rsc_0_6_BUSER;
  output [1:0] twiddle_rsc_0_6_BRESP;
  output twiddle_rsc_0_6_BID;
  output twiddle_rsc_0_6_WREADY;
  input twiddle_rsc_0_6_WVALID;
  input twiddle_rsc_0_6_WUSER;
  input twiddle_rsc_0_6_WLAST;
  input [3:0] twiddle_rsc_0_6_WSTRB;
  input [31:0] twiddle_rsc_0_6_WDATA;
  output twiddle_rsc_0_6_AWREADY;
  input twiddle_rsc_0_6_AWVALID;
  input twiddle_rsc_0_6_AWUSER;
  input [3:0] twiddle_rsc_0_6_AWREGION;
  input [3:0] twiddle_rsc_0_6_AWQOS;
  input [2:0] twiddle_rsc_0_6_AWPROT;
  input [3:0] twiddle_rsc_0_6_AWCACHE;
  input twiddle_rsc_0_6_AWLOCK;
  input [1:0] twiddle_rsc_0_6_AWBURST;
  input [2:0] twiddle_rsc_0_6_AWSIZE;
  input [7:0] twiddle_rsc_0_6_AWLEN;
  input [11:0] twiddle_rsc_0_6_AWADDR;
  input twiddle_rsc_0_6_AWID;
  output twiddle_rsc_triosy_0_6_lz;
  input twiddle_rsc_0_7_s_tdone;
  input twiddle_rsc_0_7_tr_write_done;
  input twiddle_rsc_0_7_RREADY;
  output twiddle_rsc_0_7_RVALID;
  output twiddle_rsc_0_7_RUSER;
  output twiddle_rsc_0_7_RLAST;
  output [1:0] twiddle_rsc_0_7_RRESP;
  output [31:0] twiddle_rsc_0_7_RDATA;
  output twiddle_rsc_0_7_RID;
  output twiddle_rsc_0_7_ARREADY;
  input twiddle_rsc_0_7_ARVALID;
  input twiddle_rsc_0_7_ARUSER;
  input [3:0] twiddle_rsc_0_7_ARREGION;
  input [3:0] twiddle_rsc_0_7_ARQOS;
  input [2:0] twiddle_rsc_0_7_ARPROT;
  input [3:0] twiddle_rsc_0_7_ARCACHE;
  input twiddle_rsc_0_7_ARLOCK;
  input [1:0] twiddle_rsc_0_7_ARBURST;
  input [2:0] twiddle_rsc_0_7_ARSIZE;
  input [7:0] twiddle_rsc_0_7_ARLEN;
  input [11:0] twiddle_rsc_0_7_ARADDR;
  input twiddle_rsc_0_7_ARID;
  input twiddle_rsc_0_7_BREADY;
  output twiddle_rsc_0_7_BVALID;
  output twiddle_rsc_0_7_BUSER;
  output [1:0] twiddle_rsc_0_7_BRESP;
  output twiddle_rsc_0_7_BID;
  output twiddle_rsc_0_7_WREADY;
  input twiddle_rsc_0_7_WVALID;
  input twiddle_rsc_0_7_WUSER;
  input twiddle_rsc_0_7_WLAST;
  input [3:0] twiddle_rsc_0_7_WSTRB;
  input [31:0] twiddle_rsc_0_7_WDATA;
  output twiddle_rsc_0_7_AWREADY;
  input twiddle_rsc_0_7_AWVALID;
  input twiddle_rsc_0_7_AWUSER;
  input [3:0] twiddle_rsc_0_7_AWREGION;
  input [3:0] twiddle_rsc_0_7_AWQOS;
  input [2:0] twiddle_rsc_0_7_AWPROT;
  input [3:0] twiddle_rsc_0_7_AWCACHE;
  input twiddle_rsc_0_7_AWLOCK;
  input [1:0] twiddle_rsc_0_7_AWBURST;
  input [2:0] twiddle_rsc_0_7_AWSIZE;
  input [7:0] twiddle_rsc_0_7_AWLEN;
  input [11:0] twiddle_rsc_0_7_AWADDR;
  input twiddle_rsc_0_7_AWID;
  output twiddle_rsc_triosy_0_7_lz;
  input twiddle_rsc_0_8_s_tdone;
  input twiddle_rsc_0_8_tr_write_done;
  input twiddle_rsc_0_8_RREADY;
  output twiddle_rsc_0_8_RVALID;
  output twiddle_rsc_0_8_RUSER;
  output twiddle_rsc_0_8_RLAST;
  output [1:0] twiddle_rsc_0_8_RRESP;
  output [31:0] twiddle_rsc_0_8_RDATA;
  output twiddle_rsc_0_8_RID;
  output twiddle_rsc_0_8_ARREADY;
  input twiddle_rsc_0_8_ARVALID;
  input twiddle_rsc_0_8_ARUSER;
  input [3:0] twiddle_rsc_0_8_ARREGION;
  input [3:0] twiddle_rsc_0_8_ARQOS;
  input [2:0] twiddle_rsc_0_8_ARPROT;
  input [3:0] twiddle_rsc_0_8_ARCACHE;
  input twiddle_rsc_0_8_ARLOCK;
  input [1:0] twiddle_rsc_0_8_ARBURST;
  input [2:0] twiddle_rsc_0_8_ARSIZE;
  input [7:0] twiddle_rsc_0_8_ARLEN;
  input [11:0] twiddle_rsc_0_8_ARADDR;
  input twiddle_rsc_0_8_ARID;
  input twiddle_rsc_0_8_BREADY;
  output twiddle_rsc_0_8_BVALID;
  output twiddle_rsc_0_8_BUSER;
  output [1:0] twiddle_rsc_0_8_BRESP;
  output twiddle_rsc_0_8_BID;
  output twiddle_rsc_0_8_WREADY;
  input twiddle_rsc_0_8_WVALID;
  input twiddle_rsc_0_8_WUSER;
  input twiddle_rsc_0_8_WLAST;
  input [3:0] twiddle_rsc_0_8_WSTRB;
  input [31:0] twiddle_rsc_0_8_WDATA;
  output twiddle_rsc_0_8_AWREADY;
  input twiddle_rsc_0_8_AWVALID;
  input twiddle_rsc_0_8_AWUSER;
  input [3:0] twiddle_rsc_0_8_AWREGION;
  input [3:0] twiddle_rsc_0_8_AWQOS;
  input [2:0] twiddle_rsc_0_8_AWPROT;
  input [3:0] twiddle_rsc_0_8_AWCACHE;
  input twiddle_rsc_0_8_AWLOCK;
  input [1:0] twiddle_rsc_0_8_AWBURST;
  input [2:0] twiddle_rsc_0_8_AWSIZE;
  input [7:0] twiddle_rsc_0_8_AWLEN;
  input [11:0] twiddle_rsc_0_8_AWADDR;
  input twiddle_rsc_0_8_AWID;
  output twiddle_rsc_triosy_0_8_lz;
  input twiddle_rsc_0_9_s_tdone;
  input twiddle_rsc_0_9_tr_write_done;
  input twiddle_rsc_0_9_RREADY;
  output twiddle_rsc_0_9_RVALID;
  output twiddle_rsc_0_9_RUSER;
  output twiddle_rsc_0_9_RLAST;
  output [1:0] twiddle_rsc_0_9_RRESP;
  output [31:0] twiddle_rsc_0_9_RDATA;
  output twiddle_rsc_0_9_RID;
  output twiddle_rsc_0_9_ARREADY;
  input twiddle_rsc_0_9_ARVALID;
  input twiddle_rsc_0_9_ARUSER;
  input [3:0] twiddle_rsc_0_9_ARREGION;
  input [3:0] twiddle_rsc_0_9_ARQOS;
  input [2:0] twiddle_rsc_0_9_ARPROT;
  input [3:0] twiddle_rsc_0_9_ARCACHE;
  input twiddle_rsc_0_9_ARLOCK;
  input [1:0] twiddle_rsc_0_9_ARBURST;
  input [2:0] twiddle_rsc_0_9_ARSIZE;
  input [7:0] twiddle_rsc_0_9_ARLEN;
  input [11:0] twiddle_rsc_0_9_ARADDR;
  input twiddle_rsc_0_9_ARID;
  input twiddle_rsc_0_9_BREADY;
  output twiddle_rsc_0_9_BVALID;
  output twiddle_rsc_0_9_BUSER;
  output [1:0] twiddle_rsc_0_9_BRESP;
  output twiddle_rsc_0_9_BID;
  output twiddle_rsc_0_9_WREADY;
  input twiddle_rsc_0_9_WVALID;
  input twiddle_rsc_0_9_WUSER;
  input twiddle_rsc_0_9_WLAST;
  input [3:0] twiddle_rsc_0_9_WSTRB;
  input [31:0] twiddle_rsc_0_9_WDATA;
  output twiddle_rsc_0_9_AWREADY;
  input twiddle_rsc_0_9_AWVALID;
  input twiddle_rsc_0_9_AWUSER;
  input [3:0] twiddle_rsc_0_9_AWREGION;
  input [3:0] twiddle_rsc_0_9_AWQOS;
  input [2:0] twiddle_rsc_0_9_AWPROT;
  input [3:0] twiddle_rsc_0_9_AWCACHE;
  input twiddle_rsc_0_9_AWLOCK;
  input [1:0] twiddle_rsc_0_9_AWBURST;
  input [2:0] twiddle_rsc_0_9_AWSIZE;
  input [7:0] twiddle_rsc_0_9_AWLEN;
  input [11:0] twiddle_rsc_0_9_AWADDR;
  input twiddle_rsc_0_9_AWID;
  output twiddle_rsc_triosy_0_9_lz;
  input twiddle_rsc_0_10_s_tdone;
  input twiddle_rsc_0_10_tr_write_done;
  input twiddle_rsc_0_10_RREADY;
  output twiddle_rsc_0_10_RVALID;
  output twiddle_rsc_0_10_RUSER;
  output twiddle_rsc_0_10_RLAST;
  output [1:0] twiddle_rsc_0_10_RRESP;
  output [31:0] twiddle_rsc_0_10_RDATA;
  output twiddle_rsc_0_10_RID;
  output twiddle_rsc_0_10_ARREADY;
  input twiddle_rsc_0_10_ARVALID;
  input twiddle_rsc_0_10_ARUSER;
  input [3:0] twiddle_rsc_0_10_ARREGION;
  input [3:0] twiddle_rsc_0_10_ARQOS;
  input [2:0] twiddle_rsc_0_10_ARPROT;
  input [3:0] twiddle_rsc_0_10_ARCACHE;
  input twiddle_rsc_0_10_ARLOCK;
  input [1:0] twiddle_rsc_0_10_ARBURST;
  input [2:0] twiddle_rsc_0_10_ARSIZE;
  input [7:0] twiddle_rsc_0_10_ARLEN;
  input [11:0] twiddle_rsc_0_10_ARADDR;
  input twiddle_rsc_0_10_ARID;
  input twiddle_rsc_0_10_BREADY;
  output twiddle_rsc_0_10_BVALID;
  output twiddle_rsc_0_10_BUSER;
  output [1:0] twiddle_rsc_0_10_BRESP;
  output twiddle_rsc_0_10_BID;
  output twiddle_rsc_0_10_WREADY;
  input twiddle_rsc_0_10_WVALID;
  input twiddle_rsc_0_10_WUSER;
  input twiddle_rsc_0_10_WLAST;
  input [3:0] twiddle_rsc_0_10_WSTRB;
  input [31:0] twiddle_rsc_0_10_WDATA;
  output twiddle_rsc_0_10_AWREADY;
  input twiddle_rsc_0_10_AWVALID;
  input twiddle_rsc_0_10_AWUSER;
  input [3:0] twiddle_rsc_0_10_AWREGION;
  input [3:0] twiddle_rsc_0_10_AWQOS;
  input [2:0] twiddle_rsc_0_10_AWPROT;
  input [3:0] twiddle_rsc_0_10_AWCACHE;
  input twiddle_rsc_0_10_AWLOCK;
  input [1:0] twiddle_rsc_0_10_AWBURST;
  input [2:0] twiddle_rsc_0_10_AWSIZE;
  input [7:0] twiddle_rsc_0_10_AWLEN;
  input [11:0] twiddle_rsc_0_10_AWADDR;
  input twiddle_rsc_0_10_AWID;
  output twiddle_rsc_triosy_0_10_lz;
  input twiddle_rsc_0_11_s_tdone;
  input twiddle_rsc_0_11_tr_write_done;
  input twiddle_rsc_0_11_RREADY;
  output twiddle_rsc_0_11_RVALID;
  output twiddle_rsc_0_11_RUSER;
  output twiddle_rsc_0_11_RLAST;
  output [1:0] twiddle_rsc_0_11_RRESP;
  output [31:0] twiddle_rsc_0_11_RDATA;
  output twiddle_rsc_0_11_RID;
  output twiddle_rsc_0_11_ARREADY;
  input twiddle_rsc_0_11_ARVALID;
  input twiddle_rsc_0_11_ARUSER;
  input [3:0] twiddle_rsc_0_11_ARREGION;
  input [3:0] twiddle_rsc_0_11_ARQOS;
  input [2:0] twiddle_rsc_0_11_ARPROT;
  input [3:0] twiddle_rsc_0_11_ARCACHE;
  input twiddle_rsc_0_11_ARLOCK;
  input [1:0] twiddle_rsc_0_11_ARBURST;
  input [2:0] twiddle_rsc_0_11_ARSIZE;
  input [7:0] twiddle_rsc_0_11_ARLEN;
  input [11:0] twiddle_rsc_0_11_ARADDR;
  input twiddle_rsc_0_11_ARID;
  input twiddle_rsc_0_11_BREADY;
  output twiddle_rsc_0_11_BVALID;
  output twiddle_rsc_0_11_BUSER;
  output [1:0] twiddle_rsc_0_11_BRESP;
  output twiddle_rsc_0_11_BID;
  output twiddle_rsc_0_11_WREADY;
  input twiddle_rsc_0_11_WVALID;
  input twiddle_rsc_0_11_WUSER;
  input twiddle_rsc_0_11_WLAST;
  input [3:0] twiddle_rsc_0_11_WSTRB;
  input [31:0] twiddle_rsc_0_11_WDATA;
  output twiddle_rsc_0_11_AWREADY;
  input twiddle_rsc_0_11_AWVALID;
  input twiddle_rsc_0_11_AWUSER;
  input [3:0] twiddle_rsc_0_11_AWREGION;
  input [3:0] twiddle_rsc_0_11_AWQOS;
  input [2:0] twiddle_rsc_0_11_AWPROT;
  input [3:0] twiddle_rsc_0_11_AWCACHE;
  input twiddle_rsc_0_11_AWLOCK;
  input [1:0] twiddle_rsc_0_11_AWBURST;
  input [2:0] twiddle_rsc_0_11_AWSIZE;
  input [7:0] twiddle_rsc_0_11_AWLEN;
  input [11:0] twiddle_rsc_0_11_AWADDR;
  input twiddle_rsc_0_11_AWID;
  output twiddle_rsc_triosy_0_11_lz;
  input twiddle_rsc_0_12_s_tdone;
  input twiddle_rsc_0_12_tr_write_done;
  input twiddle_rsc_0_12_RREADY;
  output twiddle_rsc_0_12_RVALID;
  output twiddle_rsc_0_12_RUSER;
  output twiddle_rsc_0_12_RLAST;
  output [1:0] twiddle_rsc_0_12_RRESP;
  output [31:0] twiddle_rsc_0_12_RDATA;
  output twiddle_rsc_0_12_RID;
  output twiddle_rsc_0_12_ARREADY;
  input twiddle_rsc_0_12_ARVALID;
  input twiddle_rsc_0_12_ARUSER;
  input [3:0] twiddle_rsc_0_12_ARREGION;
  input [3:0] twiddle_rsc_0_12_ARQOS;
  input [2:0] twiddle_rsc_0_12_ARPROT;
  input [3:0] twiddle_rsc_0_12_ARCACHE;
  input twiddle_rsc_0_12_ARLOCK;
  input [1:0] twiddle_rsc_0_12_ARBURST;
  input [2:0] twiddle_rsc_0_12_ARSIZE;
  input [7:0] twiddle_rsc_0_12_ARLEN;
  input [11:0] twiddle_rsc_0_12_ARADDR;
  input twiddle_rsc_0_12_ARID;
  input twiddle_rsc_0_12_BREADY;
  output twiddle_rsc_0_12_BVALID;
  output twiddle_rsc_0_12_BUSER;
  output [1:0] twiddle_rsc_0_12_BRESP;
  output twiddle_rsc_0_12_BID;
  output twiddle_rsc_0_12_WREADY;
  input twiddle_rsc_0_12_WVALID;
  input twiddle_rsc_0_12_WUSER;
  input twiddle_rsc_0_12_WLAST;
  input [3:0] twiddle_rsc_0_12_WSTRB;
  input [31:0] twiddle_rsc_0_12_WDATA;
  output twiddle_rsc_0_12_AWREADY;
  input twiddle_rsc_0_12_AWVALID;
  input twiddle_rsc_0_12_AWUSER;
  input [3:0] twiddle_rsc_0_12_AWREGION;
  input [3:0] twiddle_rsc_0_12_AWQOS;
  input [2:0] twiddle_rsc_0_12_AWPROT;
  input [3:0] twiddle_rsc_0_12_AWCACHE;
  input twiddle_rsc_0_12_AWLOCK;
  input [1:0] twiddle_rsc_0_12_AWBURST;
  input [2:0] twiddle_rsc_0_12_AWSIZE;
  input [7:0] twiddle_rsc_0_12_AWLEN;
  input [11:0] twiddle_rsc_0_12_AWADDR;
  input twiddle_rsc_0_12_AWID;
  output twiddle_rsc_triosy_0_12_lz;
  input twiddle_rsc_0_13_s_tdone;
  input twiddle_rsc_0_13_tr_write_done;
  input twiddle_rsc_0_13_RREADY;
  output twiddle_rsc_0_13_RVALID;
  output twiddle_rsc_0_13_RUSER;
  output twiddle_rsc_0_13_RLAST;
  output [1:0] twiddle_rsc_0_13_RRESP;
  output [31:0] twiddle_rsc_0_13_RDATA;
  output twiddle_rsc_0_13_RID;
  output twiddle_rsc_0_13_ARREADY;
  input twiddle_rsc_0_13_ARVALID;
  input twiddle_rsc_0_13_ARUSER;
  input [3:0] twiddle_rsc_0_13_ARREGION;
  input [3:0] twiddle_rsc_0_13_ARQOS;
  input [2:0] twiddle_rsc_0_13_ARPROT;
  input [3:0] twiddle_rsc_0_13_ARCACHE;
  input twiddle_rsc_0_13_ARLOCK;
  input [1:0] twiddle_rsc_0_13_ARBURST;
  input [2:0] twiddle_rsc_0_13_ARSIZE;
  input [7:0] twiddle_rsc_0_13_ARLEN;
  input [11:0] twiddle_rsc_0_13_ARADDR;
  input twiddle_rsc_0_13_ARID;
  input twiddle_rsc_0_13_BREADY;
  output twiddle_rsc_0_13_BVALID;
  output twiddle_rsc_0_13_BUSER;
  output [1:0] twiddle_rsc_0_13_BRESP;
  output twiddle_rsc_0_13_BID;
  output twiddle_rsc_0_13_WREADY;
  input twiddle_rsc_0_13_WVALID;
  input twiddle_rsc_0_13_WUSER;
  input twiddle_rsc_0_13_WLAST;
  input [3:0] twiddle_rsc_0_13_WSTRB;
  input [31:0] twiddle_rsc_0_13_WDATA;
  output twiddle_rsc_0_13_AWREADY;
  input twiddle_rsc_0_13_AWVALID;
  input twiddle_rsc_0_13_AWUSER;
  input [3:0] twiddle_rsc_0_13_AWREGION;
  input [3:0] twiddle_rsc_0_13_AWQOS;
  input [2:0] twiddle_rsc_0_13_AWPROT;
  input [3:0] twiddle_rsc_0_13_AWCACHE;
  input twiddle_rsc_0_13_AWLOCK;
  input [1:0] twiddle_rsc_0_13_AWBURST;
  input [2:0] twiddle_rsc_0_13_AWSIZE;
  input [7:0] twiddle_rsc_0_13_AWLEN;
  input [11:0] twiddle_rsc_0_13_AWADDR;
  input twiddle_rsc_0_13_AWID;
  output twiddle_rsc_triosy_0_13_lz;
  input twiddle_rsc_0_14_s_tdone;
  input twiddle_rsc_0_14_tr_write_done;
  input twiddle_rsc_0_14_RREADY;
  output twiddle_rsc_0_14_RVALID;
  output twiddle_rsc_0_14_RUSER;
  output twiddle_rsc_0_14_RLAST;
  output [1:0] twiddle_rsc_0_14_RRESP;
  output [31:0] twiddle_rsc_0_14_RDATA;
  output twiddle_rsc_0_14_RID;
  output twiddle_rsc_0_14_ARREADY;
  input twiddle_rsc_0_14_ARVALID;
  input twiddle_rsc_0_14_ARUSER;
  input [3:0] twiddle_rsc_0_14_ARREGION;
  input [3:0] twiddle_rsc_0_14_ARQOS;
  input [2:0] twiddle_rsc_0_14_ARPROT;
  input [3:0] twiddle_rsc_0_14_ARCACHE;
  input twiddle_rsc_0_14_ARLOCK;
  input [1:0] twiddle_rsc_0_14_ARBURST;
  input [2:0] twiddle_rsc_0_14_ARSIZE;
  input [7:0] twiddle_rsc_0_14_ARLEN;
  input [11:0] twiddle_rsc_0_14_ARADDR;
  input twiddle_rsc_0_14_ARID;
  input twiddle_rsc_0_14_BREADY;
  output twiddle_rsc_0_14_BVALID;
  output twiddle_rsc_0_14_BUSER;
  output [1:0] twiddle_rsc_0_14_BRESP;
  output twiddle_rsc_0_14_BID;
  output twiddle_rsc_0_14_WREADY;
  input twiddle_rsc_0_14_WVALID;
  input twiddle_rsc_0_14_WUSER;
  input twiddle_rsc_0_14_WLAST;
  input [3:0] twiddle_rsc_0_14_WSTRB;
  input [31:0] twiddle_rsc_0_14_WDATA;
  output twiddle_rsc_0_14_AWREADY;
  input twiddle_rsc_0_14_AWVALID;
  input twiddle_rsc_0_14_AWUSER;
  input [3:0] twiddle_rsc_0_14_AWREGION;
  input [3:0] twiddle_rsc_0_14_AWQOS;
  input [2:0] twiddle_rsc_0_14_AWPROT;
  input [3:0] twiddle_rsc_0_14_AWCACHE;
  input twiddle_rsc_0_14_AWLOCK;
  input [1:0] twiddle_rsc_0_14_AWBURST;
  input [2:0] twiddle_rsc_0_14_AWSIZE;
  input [7:0] twiddle_rsc_0_14_AWLEN;
  input [11:0] twiddle_rsc_0_14_AWADDR;
  input twiddle_rsc_0_14_AWID;
  output twiddle_rsc_triosy_0_14_lz;
  input twiddle_rsc_0_15_s_tdone;
  input twiddle_rsc_0_15_tr_write_done;
  input twiddle_rsc_0_15_RREADY;
  output twiddle_rsc_0_15_RVALID;
  output twiddle_rsc_0_15_RUSER;
  output twiddle_rsc_0_15_RLAST;
  output [1:0] twiddle_rsc_0_15_RRESP;
  output [31:0] twiddle_rsc_0_15_RDATA;
  output twiddle_rsc_0_15_RID;
  output twiddle_rsc_0_15_ARREADY;
  input twiddle_rsc_0_15_ARVALID;
  input twiddle_rsc_0_15_ARUSER;
  input [3:0] twiddle_rsc_0_15_ARREGION;
  input [3:0] twiddle_rsc_0_15_ARQOS;
  input [2:0] twiddle_rsc_0_15_ARPROT;
  input [3:0] twiddle_rsc_0_15_ARCACHE;
  input twiddle_rsc_0_15_ARLOCK;
  input [1:0] twiddle_rsc_0_15_ARBURST;
  input [2:0] twiddle_rsc_0_15_ARSIZE;
  input [7:0] twiddle_rsc_0_15_ARLEN;
  input [11:0] twiddle_rsc_0_15_ARADDR;
  input twiddle_rsc_0_15_ARID;
  input twiddle_rsc_0_15_BREADY;
  output twiddle_rsc_0_15_BVALID;
  output twiddle_rsc_0_15_BUSER;
  output [1:0] twiddle_rsc_0_15_BRESP;
  output twiddle_rsc_0_15_BID;
  output twiddle_rsc_0_15_WREADY;
  input twiddle_rsc_0_15_WVALID;
  input twiddle_rsc_0_15_WUSER;
  input twiddle_rsc_0_15_WLAST;
  input [3:0] twiddle_rsc_0_15_WSTRB;
  input [31:0] twiddle_rsc_0_15_WDATA;
  output twiddle_rsc_0_15_AWREADY;
  input twiddle_rsc_0_15_AWVALID;
  input twiddle_rsc_0_15_AWUSER;
  input [3:0] twiddle_rsc_0_15_AWREGION;
  input [3:0] twiddle_rsc_0_15_AWQOS;
  input [2:0] twiddle_rsc_0_15_AWPROT;
  input [3:0] twiddle_rsc_0_15_AWCACHE;
  input twiddle_rsc_0_15_AWLOCK;
  input [1:0] twiddle_rsc_0_15_AWBURST;
  input [2:0] twiddle_rsc_0_15_AWSIZE;
  input [7:0] twiddle_rsc_0_15_AWLEN;
  input [11:0] twiddle_rsc_0_15_AWADDR;
  input twiddle_rsc_0_15_AWID;
  output twiddle_rsc_triosy_0_15_lz;
  input twiddle_h_rsc_0_0_s_tdone;
  input twiddle_h_rsc_0_0_tr_write_done;
  input twiddle_h_rsc_0_0_RREADY;
  output twiddle_h_rsc_0_0_RVALID;
  output twiddle_h_rsc_0_0_RUSER;
  output twiddle_h_rsc_0_0_RLAST;
  output [1:0] twiddle_h_rsc_0_0_RRESP;
  output [31:0] twiddle_h_rsc_0_0_RDATA;
  output twiddle_h_rsc_0_0_RID;
  output twiddle_h_rsc_0_0_ARREADY;
  input twiddle_h_rsc_0_0_ARVALID;
  input twiddle_h_rsc_0_0_ARUSER;
  input [3:0] twiddle_h_rsc_0_0_ARREGION;
  input [3:0] twiddle_h_rsc_0_0_ARQOS;
  input [2:0] twiddle_h_rsc_0_0_ARPROT;
  input [3:0] twiddle_h_rsc_0_0_ARCACHE;
  input twiddle_h_rsc_0_0_ARLOCK;
  input [1:0] twiddle_h_rsc_0_0_ARBURST;
  input [2:0] twiddle_h_rsc_0_0_ARSIZE;
  input [7:0] twiddle_h_rsc_0_0_ARLEN;
  input [11:0] twiddle_h_rsc_0_0_ARADDR;
  input twiddle_h_rsc_0_0_ARID;
  input twiddle_h_rsc_0_0_BREADY;
  output twiddle_h_rsc_0_0_BVALID;
  output twiddle_h_rsc_0_0_BUSER;
  output [1:0] twiddle_h_rsc_0_0_BRESP;
  output twiddle_h_rsc_0_0_BID;
  output twiddle_h_rsc_0_0_WREADY;
  input twiddle_h_rsc_0_0_WVALID;
  input twiddle_h_rsc_0_0_WUSER;
  input twiddle_h_rsc_0_0_WLAST;
  input [3:0] twiddle_h_rsc_0_0_WSTRB;
  input [31:0] twiddle_h_rsc_0_0_WDATA;
  output twiddle_h_rsc_0_0_AWREADY;
  input twiddle_h_rsc_0_0_AWVALID;
  input twiddle_h_rsc_0_0_AWUSER;
  input [3:0] twiddle_h_rsc_0_0_AWREGION;
  input [3:0] twiddle_h_rsc_0_0_AWQOS;
  input [2:0] twiddle_h_rsc_0_0_AWPROT;
  input [3:0] twiddle_h_rsc_0_0_AWCACHE;
  input twiddle_h_rsc_0_0_AWLOCK;
  input [1:0] twiddle_h_rsc_0_0_AWBURST;
  input [2:0] twiddle_h_rsc_0_0_AWSIZE;
  input [7:0] twiddle_h_rsc_0_0_AWLEN;
  input [11:0] twiddle_h_rsc_0_0_AWADDR;
  input twiddle_h_rsc_0_0_AWID;
  output twiddle_h_rsc_triosy_0_0_lz;
  input twiddle_h_rsc_0_1_s_tdone;
  input twiddle_h_rsc_0_1_tr_write_done;
  input twiddle_h_rsc_0_1_RREADY;
  output twiddle_h_rsc_0_1_RVALID;
  output twiddle_h_rsc_0_1_RUSER;
  output twiddle_h_rsc_0_1_RLAST;
  output [1:0] twiddle_h_rsc_0_1_RRESP;
  output [31:0] twiddle_h_rsc_0_1_RDATA;
  output twiddle_h_rsc_0_1_RID;
  output twiddle_h_rsc_0_1_ARREADY;
  input twiddle_h_rsc_0_1_ARVALID;
  input twiddle_h_rsc_0_1_ARUSER;
  input [3:0] twiddle_h_rsc_0_1_ARREGION;
  input [3:0] twiddle_h_rsc_0_1_ARQOS;
  input [2:0] twiddle_h_rsc_0_1_ARPROT;
  input [3:0] twiddle_h_rsc_0_1_ARCACHE;
  input twiddle_h_rsc_0_1_ARLOCK;
  input [1:0] twiddle_h_rsc_0_1_ARBURST;
  input [2:0] twiddle_h_rsc_0_1_ARSIZE;
  input [7:0] twiddle_h_rsc_0_1_ARLEN;
  input [11:0] twiddle_h_rsc_0_1_ARADDR;
  input twiddle_h_rsc_0_1_ARID;
  input twiddle_h_rsc_0_1_BREADY;
  output twiddle_h_rsc_0_1_BVALID;
  output twiddle_h_rsc_0_1_BUSER;
  output [1:0] twiddle_h_rsc_0_1_BRESP;
  output twiddle_h_rsc_0_1_BID;
  output twiddle_h_rsc_0_1_WREADY;
  input twiddle_h_rsc_0_1_WVALID;
  input twiddle_h_rsc_0_1_WUSER;
  input twiddle_h_rsc_0_1_WLAST;
  input [3:0] twiddle_h_rsc_0_1_WSTRB;
  input [31:0] twiddle_h_rsc_0_1_WDATA;
  output twiddle_h_rsc_0_1_AWREADY;
  input twiddle_h_rsc_0_1_AWVALID;
  input twiddle_h_rsc_0_1_AWUSER;
  input [3:0] twiddle_h_rsc_0_1_AWREGION;
  input [3:0] twiddle_h_rsc_0_1_AWQOS;
  input [2:0] twiddle_h_rsc_0_1_AWPROT;
  input [3:0] twiddle_h_rsc_0_1_AWCACHE;
  input twiddle_h_rsc_0_1_AWLOCK;
  input [1:0] twiddle_h_rsc_0_1_AWBURST;
  input [2:0] twiddle_h_rsc_0_1_AWSIZE;
  input [7:0] twiddle_h_rsc_0_1_AWLEN;
  input [11:0] twiddle_h_rsc_0_1_AWADDR;
  input twiddle_h_rsc_0_1_AWID;
  output twiddle_h_rsc_triosy_0_1_lz;
  input twiddle_h_rsc_0_2_s_tdone;
  input twiddle_h_rsc_0_2_tr_write_done;
  input twiddle_h_rsc_0_2_RREADY;
  output twiddle_h_rsc_0_2_RVALID;
  output twiddle_h_rsc_0_2_RUSER;
  output twiddle_h_rsc_0_2_RLAST;
  output [1:0] twiddle_h_rsc_0_2_RRESP;
  output [31:0] twiddle_h_rsc_0_2_RDATA;
  output twiddle_h_rsc_0_2_RID;
  output twiddle_h_rsc_0_2_ARREADY;
  input twiddle_h_rsc_0_2_ARVALID;
  input twiddle_h_rsc_0_2_ARUSER;
  input [3:0] twiddle_h_rsc_0_2_ARREGION;
  input [3:0] twiddle_h_rsc_0_2_ARQOS;
  input [2:0] twiddle_h_rsc_0_2_ARPROT;
  input [3:0] twiddle_h_rsc_0_2_ARCACHE;
  input twiddle_h_rsc_0_2_ARLOCK;
  input [1:0] twiddle_h_rsc_0_2_ARBURST;
  input [2:0] twiddle_h_rsc_0_2_ARSIZE;
  input [7:0] twiddle_h_rsc_0_2_ARLEN;
  input [11:0] twiddle_h_rsc_0_2_ARADDR;
  input twiddle_h_rsc_0_2_ARID;
  input twiddle_h_rsc_0_2_BREADY;
  output twiddle_h_rsc_0_2_BVALID;
  output twiddle_h_rsc_0_2_BUSER;
  output [1:0] twiddle_h_rsc_0_2_BRESP;
  output twiddle_h_rsc_0_2_BID;
  output twiddle_h_rsc_0_2_WREADY;
  input twiddle_h_rsc_0_2_WVALID;
  input twiddle_h_rsc_0_2_WUSER;
  input twiddle_h_rsc_0_2_WLAST;
  input [3:0] twiddle_h_rsc_0_2_WSTRB;
  input [31:0] twiddle_h_rsc_0_2_WDATA;
  output twiddle_h_rsc_0_2_AWREADY;
  input twiddle_h_rsc_0_2_AWVALID;
  input twiddle_h_rsc_0_2_AWUSER;
  input [3:0] twiddle_h_rsc_0_2_AWREGION;
  input [3:0] twiddle_h_rsc_0_2_AWQOS;
  input [2:0] twiddle_h_rsc_0_2_AWPROT;
  input [3:0] twiddle_h_rsc_0_2_AWCACHE;
  input twiddle_h_rsc_0_2_AWLOCK;
  input [1:0] twiddle_h_rsc_0_2_AWBURST;
  input [2:0] twiddle_h_rsc_0_2_AWSIZE;
  input [7:0] twiddle_h_rsc_0_2_AWLEN;
  input [11:0] twiddle_h_rsc_0_2_AWADDR;
  input twiddle_h_rsc_0_2_AWID;
  output twiddle_h_rsc_triosy_0_2_lz;
  input twiddle_h_rsc_0_3_s_tdone;
  input twiddle_h_rsc_0_3_tr_write_done;
  input twiddle_h_rsc_0_3_RREADY;
  output twiddle_h_rsc_0_3_RVALID;
  output twiddle_h_rsc_0_3_RUSER;
  output twiddle_h_rsc_0_3_RLAST;
  output [1:0] twiddle_h_rsc_0_3_RRESP;
  output [31:0] twiddle_h_rsc_0_3_RDATA;
  output twiddle_h_rsc_0_3_RID;
  output twiddle_h_rsc_0_3_ARREADY;
  input twiddle_h_rsc_0_3_ARVALID;
  input twiddle_h_rsc_0_3_ARUSER;
  input [3:0] twiddle_h_rsc_0_3_ARREGION;
  input [3:0] twiddle_h_rsc_0_3_ARQOS;
  input [2:0] twiddle_h_rsc_0_3_ARPROT;
  input [3:0] twiddle_h_rsc_0_3_ARCACHE;
  input twiddle_h_rsc_0_3_ARLOCK;
  input [1:0] twiddle_h_rsc_0_3_ARBURST;
  input [2:0] twiddle_h_rsc_0_3_ARSIZE;
  input [7:0] twiddle_h_rsc_0_3_ARLEN;
  input [11:0] twiddle_h_rsc_0_3_ARADDR;
  input twiddle_h_rsc_0_3_ARID;
  input twiddle_h_rsc_0_3_BREADY;
  output twiddle_h_rsc_0_3_BVALID;
  output twiddle_h_rsc_0_3_BUSER;
  output [1:0] twiddle_h_rsc_0_3_BRESP;
  output twiddle_h_rsc_0_3_BID;
  output twiddle_h_rsc_0_3_WREADY;
  input twiddle_h_rsc_0_3_WVALID;
  input twiddle_h_rsc_0_3_WUSER;
  input twiddle_h_rsc_0_3_WLAST;
  input [3:0] twiddle_h_rsc_0_3_WSTRB;
  input [31:0] twiddle_h_rsc_0_3_WDATA;
  output twiddle_h_rsc_0_3_AWREADY;
  input twiddle_h_rsc_0_3_AWVALID;
  input twiddle_h_rsc_0_3_AWUSER;
  input [3:0] twiddle_h_rsc_0_3_AWREGION;
  input [3:0] twiddle_h_rsc_0_3_AWQOS;
  input [2:0] twiddle_h_rsc_0_3_AWPROT;
  input [3:0] twiddle_h_rsc_0_3_AWCACHE;
  input twiddle_h_rsc_0_3_AWLOCK;
  input [1:0] twiddle_h_rsc_0_3_AWBURST;
  input [2:0] twiddle_h_rsc_0_3_AWSIZE;
  input [7:0] twiddle_h_rsc_0_3_AWLEN;
  input [11:0] twiddle_h_rsc_0_3_AWADDR;
  input twiddle_h_rsc_0_3_AWID;
  output twiddle_h_rsc_triosy_0_3_lz;
  input twiddle_h_rsc_0_4_s_tdone;
  input twiddle_h_rsc_0_4_tr_write_done;
  input twiddle_h_rsc_0_4_RREADY;
  output twiddle_h_rsc_0_4_RVALID;
  output twiddle_h_rsc_0_4_RUSER;
  output twiddle_h_rsc_0_4_RLAST;
  output [1:0] twiddle_h_rsc_0_4_RRESP;
  output [31:0] twiddle_h_rsc_0_4_RDATA;
  output twiddle_h_rsc_0_4_RID;
  output twiddle_h_rsc_0_4_ARREADY;
  input twiddle_h_rsc_0_4_ARVALID;
  input twiddle_h_rsc_0_4_ARUSER;
  input [3:0] twiddle_h_rsc_0_4_ARREGION;
  input [3:0] twiddle_h_rsc_0_4_ARQOS;
  input [2:0] twiddle_h_rsc_0_4_ARPROT;
  input [3:0] twiddle_h_rsc_0_4_ARCACHE;
  input twiddle_h_rsc_0_4_ARLOCK;
  input [1:0] twiddle_h_rsc_0_4_ARBURST;
  input [2:0] twiddle_h_rsc_0_4_ARSIZE;
  input [7:0] twiddle_h_rsc_0_4_ARLEN;
  input [11:0] twiddle_h_rsc_0_4_ARADDR;
  input twiddle_h_rsc_0_4_ARID;
  input twiddle_h_rsc_0_4_BREADY;
  output twiddle_h_rsc_0_4_BVALID;
  output twiddle_h_rsc_0_4_BUSER;
  output [1:0] twiddle_h_rsc_0_4_BRESP;
  output twiddle_h_rsc_0_4_BID;
  output twiddle_h_rsc_0_4_WREADY;
  input twiddle_h_rsc_0_4_WVALID;
  input twiddle_h_rsc_0_4_WUSER;
  input twiddle_h_rsc_0_4_WLAST;
  input [3:0] twiddle_h_rsc_0_4_WSTRB;
  input [31:0] twiddle_h_rsc_0_4_WDATA;
  output twiddle_h_rsc_0_4_AWREADY;
  input twiddle_h_rsc_0_4_AWVALID;
  input twiddle_h_rsc_0_4_AWUSER;
  input [3:0] twiddle_h_rsc_0_4_AWREGION;
  input [3:0] twiddle_h_rsc_0_4_AWQOS;
  input [2:0] twiddle_h_rsc_0_4_AWPROT;
  input [3:0] twiddle_h_rsc_0_4_AWCACHE;
  input twiddle_h_rsc_0_4_AWLOCK;
  input [1:0] twiddle_h_rsc_0_4_AWBURST;
  input [2:0] twiddle_h_rsc_0_4_AWSIZE;
  input [7:0] twiddle_h_rsc_0_4_AWLEN;
  input [11:0] twiddle_h_rsc_0_4_AWADDR;
  input twiddle_h_rsc_0_4_AWID;
  output twiddle_h_rsc_triosy_0_4_lz;
  input twiddle_h_rsc_0_5_s_tdone;
  input twiddle_h_rsc_0_5_tr_write_done;
  input twiddle_h_rsc_0_5_RREADY;
  output twiddle_h_rsc_0_5_RVALID;
  output twiddle_h_rsc_0_5_RUSER;
  output twiddle_h_rsc_0_5_RLAST;
  output [1:0] twiddle_h_rsc_0_5_RRESP;
  output [31:0] twiddle_h_rsc_0_5_RDATA;
  output twiddle_h_rsc_0_5_RID;
  output twiddle_h_rsc_0_5_ARREADY;
  input twiddle_h_rsc_0_5_ARVALID;
  input twiddle_h_rsc_0_5_ARUSER;
  input [3:0] twiddle_h_rsc_0_5_ARREGION;
  input [3:0] twiddle_h_rsc_0_5_ARQOS;
  input [2:0] twiddle_h_rsc_0_5_ARPROT;
  input [3:0] twiddle_h_rsc_0_5_ARCACHE;
  input twiddle_h_rsc_0_5_ARLOCK;
  input [1:0] twiddle_h_rsc_0_5_ARBURST;
  input [2:0] twiddle_h_rsc_0_5_ARSIZE;
  input [7:0] twiddle_h_rsc_0_5_ARLEN;
  input [11:0] twiddle_h_rsc_0_5_ARADDR;
  input twiddle_h_rsc_0_5_ARID;
  input twiddle_h_rsc_0_5_BREADY;
  output twiddle_h_rsc_0_5_BVALID;
  output twiddle_h_rsc_0_5_BUSER;
  output [1:0] twiddle_h_rsc_0_5_BRESP;
  output twiddle_h_rsc_0_5_BID;
  output twiddle_h_rsc_0_5_WREADY;
  input twiddle_h_rsc_0_5_WVALID;
  input twiddle_h_rsc_0_5_WUSER;
  input twiddle_h_rsc_0_5_WLAST;
  input [3:0] twiddle_h_rsc_0_5_WSTRB;
  input [31:0] twiddle_h_rsc_0_5_WDATA;
  output twiddle_h_rsc_0_5_AWREADY;
  input twiddle_h_rsc_0_5_AWVALID;
  input twiddle_h_rsc_0_5_AWUSER;
  input [3:0] twiddle_h_rsc_0_5_AWREGION;
  input [3:0] twiddle_h_rsc_0_5_AWQOS;
  input [2:0] twiddle_h_rsc_0_5_AWPROT;
  input [3:0] twiddle_h_rsc_0_5_AWCACHE;
  input twiddle_h_rsc_0_5_AWLOCK;
  input [1:0] twiddle_h_rsc_0_5_AWBURST;
  input [2:0] twiddle_h_rsc_0_5_AWSIZE;
  input [7:0] twiddle_h_rsc_0_5_AWLEN;
  input [11:0] twiddle_h_rsc_0_5_AWADDR;
  input twiddle_h_rsc_0_5_AWID;
  output twiddle_h_rsc_triosy_0_5_lz;
  input twiddle_h_rsc_0_6_s_tdone;
  input twiddle_h_rsc_0_6_tr_write_done;
  input twiddle_h_rsc_0_6_RREADY;
  output twiddle_h_rsc_0_6_RVALID;
  output twiddle_h_rsc_0_6_RUSER;
  output twiddle_h_rsc_0_6_RLAST;
  output [1:0] twiddle_h_rsc_0_6_RRESP;
  output [31:0] twiddle_h_rsc_0_6_RDATA;
  output twiddle_h_rsc_0_6_RID;
  output twiddle_h_rsc_0_6_ARREADY;
  input twiddle_h_rsc_0_6_ARVALID;
  input twiddle_h_rsc_0_6_ARUSER;
  input [3:0] twiddle_h_rsc_0_6_ARREGION;
  input [3:0] twiddle_h_rsc_0_6_ARQOS;
  input [2:0] twiddle_h_rsc_0_6_ARPROT;
  input [3:0] twiddle_h_rsc_0_6_ARCACHE;
  input twiddle_h_rsc_0_6_ARLOCK;
  input [1:0] twiddle_h_rsc_0_6_ARBURST;
  input [2:0] twiddle_h_rsc_0_6_ARSIZE;
  input [7:0] twiddle_h_rsc_0_6_ARLEN;
  input [11:0] twiddle_h_rsc_0_6_ARADDR;
  input twiddle_h_rsc_0_6_ARID;
  input twiddle_h_rsc_0_6_BREADY;
  output twiddle_h_rsc_0_6_BVALID;
  output twiddle_h_rsc_0_6_BUSER;
  output [1:0] twiddle_h_rsc_0_6_BRESP;
  output twiddle_h_rsc_0_6_BID;
  output twiddle_h_rsc_0_6_WREADY;
  input twiddle_h_rsc_0_6_WVALID;
  input twiddle_h_rsc_0_6_WUSER;
  input twiddle_h_rsc_0_6_WLAST;
  input [3:0] twiddle_h_rsc_0_6_WSTRB;
  input [31:0] twiddle_h_rsc_0_6_WDATA;
  output twiddle_h_rsc_0_6_AWREADY;
  input twiddle_h_rsc_0_6_AWVALID;
  input twiddle_h_rsc_0_6_AWUSER;
  input [3:0] twiddle_h_rsc_0_6_AWREGION;
  input [3:0] twiddle_h_rsc_0_6_AWQOS;
  input [2:0] twiddle_h_rsc_0_6_AWPROT;
  input [3:0] twiddle_h_rsc_0_6_AWCACHE;
  input twiddle_h_rsc_0_6_AWLOCK;
  input [1:0] twiddle_h_rsc_0_6_AWBURST;
  input [2:0] twiddle_h_rsc_0_6_AWSIZE;
  input [7:0] twiddle_h_rsc_0_6_AWLEN;
  input [11:0] twiddle_h_rsc_0_6_AWADDR;
  input twiddle_h_rsc_0_6_AWID;
  output twiddle_h_rsc_triosy_0_6_lz;
  input twiddle_h_rsc_0_7_s_tdone;
  input twiddle_h_rsc_0_7_tr_write_done;
  input twiddle_h_rsc_0_7_RREADY;
  output twiddle_h_rsc_0_7_RVALID;
  output twiddle_h_rsc_0_7_RUSER;
  output twiddle_h_rsc_0_7_RLAST;
  output [1:0] twiddle_h_rsc_0_7_RRESP;
  output [31:0] twiddle_h_rsc_0_7_RDATA;
  output twiddle_h_rsc_0_7_RID;
  output twiddle_h_rsc_0_7_ARREADY;
  input twiddle_h_rsc_0_7_ARVALID;
  input twiddle_h_rsc_0_7_ARUSER;
  input [3:0] twiddle_h_rsc_0_7_ARREGION;
  input [3:0] twiddle_h_rsc_0_7_ARQOS;
  input [2:0] twiddle_h_rsc_0_7_ARPROT;
  input [3:0] twiddle_h_rsc_0_7_ARCACHE;
  input twiddle_h_rsc_0_7_ARLOCK;
  input [1:0] twiddle_h_rsc_0_7_ARBURST;
  input [2:0] twiddle_h_rsc_0_7_ARSIZE;
  input [7:0] twiddle_h_rsc_0_7_ARLEN;
  input [11:0] twiddle_h_rsc_0_7_ARADDR;
  input twiddle_h_rsc_0_7_ARID;
  input twiddle_h_rsc_0_7_BREADY;
  output twiddle_h_rsc_0_7_BVALID;
  output twiddle_h_rsc_0_7_BUSER;
  output [1:0] twiddle_h_rsc_0_7_BRESP;
  output twiddle_h_rsc_0_7_BID;
  output twiddle_h_rsc_0_7_WREADY;
  input twiddle_h_rsc_0_7_WVALID;
  input twiddle_h_rsc_0_7_WUSER;
  input twiddle_h_rsc_0_7_WLAST;
  input [3:0] twiddle_h_rsc_0_7_WSTRB;
  input [31:0] twiddle_h_rsc_0_7_WDATA;
  output twiddle_h_rsc_0_7_AWREADY;
  input twiddle_h_rsc_0_7_AWVALID;
  input twiddle_h_rsc_0_7_AWUSER;
  input [3:0] twiddle_h_rsc_0_7_AWREGION;
  input [3:0] twiddle_h_rsc_0_7_AWQOS;
  input [2:0] twiddle_h_rsc_0_7_AWPROT;
  input [3:0] twiddle_h_rsc_0_7_AWCACHE;
  input twiddle_h_rsc_0_7_AWLOCK;
  input [1:0] twiddle_h_rsc_0_7_AWBURST;
  input [2:0] twiddle_h_rsc_0_7_AWSIZE;
  input [7:0] twiddle_h_rsc_0_7_AWLEN;
  input [11:0] twiddle_h_rsc_0_7_AWADDR;
  input twiddle_h_rsc_0_7_AWID;
  output twiddle_h_rsc_triosy_0_7_lz;
  input twiddle_h_rsc_0_8_s_tdone;
  input twiddle_h_rsc_0_8_tr_write_done;
  input twiddle_h_rsc_0_8_RREADY;
  output twiddle_h_rsc_0_8_RVALID;
  output twiddle_h_rsc_0_8_RUSER;
  output twiddle_h_rsc_0_8_RLAST;
  output [1:0] twiddle_h_rsc_0_8_RRESP;
  output [31:0] twiddle_h_rsc_0_8_RDATA;
  output twiddle_h_rsc_0_8_RID;
  output twiddle_h_rsc_0_8_ARREADY;
  input twiddle_h_rsc_0_8_ARVALID;
  input twiddle_h_rsc_0_8_ARUSER;
  input [3:0] twiddle_h_rsc_0_8_ARREGION;
  input [3:0] twiddle_h_rsc_0_8_ARQOS;
  input [2:0] twiddle_h_rsc_0_8_ARPROT;
  input [3:0] twiddle_h_rsc_0_8_ARCACHE;
  input twiddle_h_rsc_0_8_ARLOCK;
  input [1:0] twiddle_h_rsc_0_8_ARBURST;
  input [2:0] twiddle_h_rsc_0_8_ARSIZE;
  input [7:0] twiddle_h_rsc_0_8_ARLEN;
  input [11:0] twiddle_h_rsc_0_8_ARADDR;
  input twiddle_h_rsc_0_8_ARID;
  input twiddle_h_rsc_0_8_BREADY;
  output twiddle_h_rsc_0_8_BVALID;
  output twiddle_h_rsc_0_8_BUSER;
  output [1:0] twiddle_h_rsc_0_8_BRESP;
  output twiddle_h_rsc_0_8_BID;
  output twiddle_h_rsc_0_8_WREADY;
  input twiddle_h_rsc_0_8_WVALID;
  input twiddle_h_rsc_0_8_WUSER;
  input twiddle_h_rsc_0_8_WLAST;
  input [3:0] twiddle_h_rsc_0_8_WSTRB;
  input [31:0] twiddle_h_rsc_0_8_WDATA;
  output twiddle_h_rsc_0_8_AWREADY;
  input twiddle_h_rsc_0_8_AWVALID;
  input twiddle_h_rsc_0_8_AWUSER;
  input [3:0] twiddle_h_rsc_0_8_AWREGION;
  input [3:0] twiddle_h_rsc_0_8_AWQOS;
  input [2:0] twiddle_h_rsc_0_8_AWPROT;
  input [3:0] twiddle_h_rsc_0_8_AWCACHE;
  input twiddle_h_rsc_0_8_AWLOCK;
  input [1:0] twiddle_h_rsc_0_8_AWBURST;
  input [2:0] twiddle_h_rsc_0_8_AWSIZE;
  input [7:0] twiddle_h_rsc_0_8_AWLEN;
  input [11:0] twiddle_h_rsc_0_8_AWADDR;
  input twiddle_h_rsc_0_8_AWID;
  output twiddle_h_rsc_triosy_0_8_lz;
  input twiddle_h_rsc_0_9_s_tdone;
  input twiddle_h_rsc_0_9_tr_write_done;
  input twiddle_h_rsc_0_9_RREADY;
  output twiddle_h_rsc_0_9_RVALID;
  output twiddle_h_rsc_0_9_RUSER;
  output twiddle_h_rsc_0_9_RLAST;
  output [1:0] twiddle_h_rsc_0_9_RRESP;
  output [31:0] twiddle_h_rsc_0_9_RDATA;
  output twiddle_h_rsc_0_9_RID;
  output twiddle_h_rsc_0_9_ARREADY;
  input twiddle_h_rsc_0_9_ARVALID;
  input twiddle_h_rsc_0_9_ARUSER;
  input [3:0] twiddle_h_rsc_0_9_ARREGION;
  input [3:0] twiddle_h_rsc_0_9_ARQOS;
  input [2:0] twiddle_h_rsc_0_9_ARPROT;
  input [3:0] twiddle_h_rsc_0_9_ARCACHE;
  input twiddle_h_rsc_0_9_ARLOCK;
  input [1:0] twiddle_h_rsc_0_9_ARBURST;
  input [2:0] twiddle_h_rsc_0_9_ARSIZE;
  input [7:0] twiddle_h_rsc_0_9_ARLEN;
  input [11:0] twiddle_h_rsc_0_9_ARADDR;
  input twiddle_h_rsc_0_9_ARID;
  input twiddle_h_rsc_0_9_BREADY;
  output twiddle_h_rsc_0_9_BVALID;
  output twiddle_h_rsc_0_9_BUSER;
  output [1:0] twiddle_h_rsc_0_9_BRESP;
  output twiddle_h_rsc_0_9_BID;
  output twiddle_h_rsc_0_9_WREADY;
  input twiddle_h_rsc_0_9_WVALID;
  input twiddle_h_rsc_0_9_WUSER;
  input twiddle_h_rsc_0_9_WLAST;
  input [3:0] twiddle_h_rsc_0_9_WSTRB;
  input [31:0] twiddle_h_rsc_0_9_WDATA;
  output twiddle_h_rsc_0_9_AWREADY;
  input twiddle_h_rsc_0_9_AWVALID;
  input twiddle_h_rsc_0_9_AWUSER;
  input [3:0] twiddle_h_rsc_0_9_AWREGION;
  input [3:0] twiddle_h_rsc_0_9_AWQOS;
  input [2:0] twiddle_h_rsc_0_9_AWPROT;
  input [3:0] twiddle_h_rsc_0_9_AWCACHE;
  input twiddle_h_rsc_0_9_AWLOCK;
  input [1:0] twiddle_h_rsc_0_9_AWBURST;
  input [2:0] twiddle_h_rsc_0_9_AWSIZE;
  input [7:0] twiddle_h_rsc_0_9_AWLEN;
  input [11:0] twiddle_h_rsc_0_9_AWADDR;
  input twiddle_h_rsc_0_9_AWID;
  output twiddle_h_rsc_triosy_0_9_lz;
  input twiddle_h_rsc_0_10_s_tdone;
  input twiddle_h_rsc_0_10_tr_write_done;
  input twiddle_h_rsc_0_10_RREADY;
  output twiddle_h_rsc_0_10_RVALID;
  output twiddle_h_rsc_0_10_RUSER;
  output twiddle_h_rsc_0_10_RLAST;
  output [1:0] twiddle_h_rsc_0_10_RRESP;
  output [31:0] twiddle_h_rsc_0_10_RDATA;
  output twiddle_h_rsc_0_10_RID;
  output twiddle_h_rsc_0_10_ARREADY;
  input twiddle_h_rsc_0_10_ARVALID;
  input twiddle_h_rsc_0_10_ARUSER;
  input [3:0] twiddle_h_rsc_0_10_ARREGION;
  input [3:0] twiddle_h_rsc_0_10_ARQOS;
  input [2:0] twiddle_h_rsc_0_10_ARPROT;
  input [3:0] twiddle_h_rsc_0_10_ARCACHE;
  input twiddle_h_rsc_0_10_ARLOCK;
  input [1:0] twiddle_h_rsc_0_10_ARBURST;
  input [2:0] twiddle_h_rsc_0_10_ARSIZE;
  input [7:0] twiddle_h_rsc_0_10_ARLEN;
  input [11:0] twiddle_h_rsc_0_10_ARADDR;
  input twiddle_h_rsc_0_10_ARID;
  input twiddle_h_rsc_0_10_BREADY;
  output twiddle_h_rsc_0_10_BVALID;
  output twiddle_h_rsc_0_10_BUSER;
  output [1:0] twiddle_h_rsc_0_10_BRESP;
  output twiddle_h_rsc_0_10_BID;
  output twiddle_h_rsc_0_10_WREADY;
  input twiddle_h_rsc_0_10_WVALID;
  input twiddle_h_rsc_0_10_WUSER;
  input twiddle_h_rsc_0_10_WLAST;
  input [3:0] twiddle_h_rsc_0_10_WSTRB;
  input [31:0] twiddle_h_rsc_0_10_WDATA;
  output twiddle_h_rsc_0_10_AWREADY;
  input twiddle_h_rsc_0_10_AWVALID;
  input twiddle_h_rsc_0_10_AWUSER;
  input [3:0] twiddle_h_rsc_0_10_AWREGION;
  input [3:0] twiddle_h_rsc_0_10_AWQOS;
  input [2:0] twiddle_h_rsc_0_10_AWPROT;
  input [3:0] twiddle_h_rsc_0_10_AWCACHE;
  input twiddle_h_rsc_0_10_AWLOCK;
  input [1:0] twiddle_h_rsc_0_10_AWBURST;
  input [2:0] twiddle_h_rsc_0_10_AWSIZE;
  input [7:0] twiddle_h_rsc_0_10_AWLEN;
  input [11:0] twiddle_h_rsc_0_10_AWADDR;
  input twiddle_h_rsc_0_10_AWID;
  output twiddle_h_rsc_triosy_0_10_lz;
  input twiddle_h_rsc_0_11_s_tdone;
  input twiddle_h_rsc_0_11_tr_write_done;
  input twiddle_h_rsc_0_11_RREADY;
  output twiddle_h_rsc_0_11_RVALID;
  output twiddle_h_rsc_0_11_RUSER;
  output twiddle_h_rsc_0_11_RLAST;
  output [1:0] twiddle_h_rsc_0_11_RRESP;
  output [31:0] twiddle_h_rsc_0_11_RDATA;
  output twiddle_h_rsc_0_11_RID;
  output twiddle_h_rsc_0_11_ARREADY;
  input twiddle_h_rsc_0_11_ARVALID;
  input twiddle_h_rsc_0_11_ARUSER;
  input [3:0] twiddle_h_rsc_0_11_ARREGION;
  input [3:0] twiddle_h_rsc_0_11_ARQOS;
  input [2:0] twiddle_h_rsc_0_11_ARPROT;
  input [3:0] twiddle_h_rsc_0_11_ARCACHE;
  input twiddle_h_rsc_0_11_ARLOCK;
  input [1:0] twiddle_h_rsc_0_11_ARBURST;
  input [2:0] twiddle_h_rsc_0_11_ARSIZE;
  input [7:0] twiddle_h_rsc_0_11_ARLEN;
  input [11:0] twiddle_h_rsc_0_11_ARADDR;
  input twiddle_h_rsc_0_11_ARID;
  input twiddle_h_rsc_0_11_BREADY;
  output twiddle_h_rsc_0_11_BVALID;
  output twiddle_h_rsc_0_11_BUSER;
  output [1:0] twiddle_h_rsc_0_11_BRESP;
  output twiddle_h_rsc_0_11_BID;
  output twiddle_h_rsc_0_11_WREADY;
  input twiddle_h_rsc_0_11_WVALID;
  input twiddle_h_rsc_0_11_WUSER;
  input twiddle_h_rsc_0_11_WLAST;
  input [3:0] twiddle_h_rsc_0_11_WSTRB;
  input [31:0] twiddle_h_rsc_0_11_WDATA;
  output twiddle_h_rsc_0_11_AWREADY;
  input twiddle_h_rsc_0_11_AWVALID;
  input twiddle_h_rsc_0_11_AWUSER;
  input [3:0] twiddle_h_rsc_0_11_AWREGION;
  input [3:0] twiddle_h_rsc_0_11_AWQOS;
  input [2:0] twiddle_h_rsc_0_11_AWPROT;
  input [3:0] twiddle_h_rsc_0_11_AWCACHE;
  input twiddle_h_rsc_0_11_AWLOCK;
  input [1:0] twiddle_h_rsc_0_11_AWBURST;
  input [2:0] twiddle_h_rsc_0_11_AWSIZE;
  input [7:0] twiddle_h_rsc_0_11_AWLEN;
  input [11:0] twiddle_h_rsc_0_11_AWADDR;
  input twiddle_h_rsc_0_11_AWID;
  output twiddle_h_rsc_triosy_0_11_lz;
  input twiddle_h_rsc_0_12_s_tdone;
  input twiddle_h_rsc_0_12_tr_write_done;
  input twiddle_h_rsc_0_12_RREADY;
  output twiddle_h_rsc_0_12_RVALID;
  output twiddle_h_rsc_0_12_RUSER;
  output twiddle_h_rsc_0_12_RLAST;
  output [1:0] twiddle_h_rsc_0_12_RRESP;
  output [31:0] twiddle_h_rsc_0_12_RDATA;
  output twiddle_h_rsc_0_12_RID;
  output twiddle_h_rsc_0_12_ARREADY;
  input twiddle_h_rsc_0_12_ARVALID;
  input twiddle_h_rsc_0_12_ARUSER;
  input [3:0] twiddle_h_rsc_0_12_ARREGION;
  input [3:0] twiddle_h_rsc_0_12_ARQOS;
  input [2:0] twiddle_h_rsc_0_12_ARPROT;
  input [3:0] twiddle_h_rsc_0_12_ARCACHE;
  input twiddle_h_rsc_0_12_ARLOCK;
  input [1:0] twiddle_h_rsc_0_12_ARBURST;
  input [2:0] twiddle_h_rsc_0_12_ARSIZE;
  input [7:0] twiddle_h_rsc_0_12_ARLEN;
  input [11:0] twiddle_h_rsc_0_12_ARADDR;
  input twiddle_h_rsc_0_12_ARID;
  input twiddle_h_rsc_0_12_BREADY;
  output twiddle_h_rsc_0_12_BVALID;
  output twiddle_h_rsc_0_12_BUSER;
  output [1:0] twiddle_h_rsc_0_12_BRESP;
  output twiddle_h_rsc_0_12_BID;
  output twiddle_h_rsc_0_12_WREADY;
  input twiddle_h_rsc_0_12_WVALID;
  input twiddle_h_rsc_0_12_WUSER;
  input twiddle_h_rsc_0_12_WLAST;
  input [3:0] twiddle_h_rsc_0_12_WSTRB;
  input [31:0] twiddle_h_rsc_0_12_WDATA;
  output twiddle_h_rsc_0_12_AWREADY;
  input twiddle_h_rsc_0_12_AWVALID;
  input twiddle_h_rsc_0_12_AWUSER;
  input [3:0] twiddle_h_rsc_0_12_AWREGION;
  input [3:0] twiddle_h_rsc_0_12_AWQOS;
  input [2:0] twiddle_h_rsc_0_12_AWPROT;
  input [3:0] twiddle_h_rsc_0_12_AWCACHE;
  input twiddle_h_rsc_0_12_AWLOCK;
  input [1:0] twiddle_h_rsc_0_12_AWBURST;
  input [2:0] twiddle_h_rsc_0_12_AWSIZE;
  input [7:0] twiddle_h_rsc_0_12_AWLEN;
  input [11:0] twiddle_h_rsc_0_12_AWADDR;
  input twiddle_h_rsc_0_12_AWID;
  output twiddle_h_rsc_triosy_0_12_lz;
  input twiddle_h_rsc_0_13_s_tdone;
  input twiddle_h_rsc_0_13_tr_write_done;
  input twiddle_h_rsc_0_13_RREADY;
  output twiddle_h_rsc_0_13_RVALID;
  output twiddle_h_rsc_0_13_RUSER;
  output twiddle_h_rsc_0_13_RLAST;
  output [1:0] twiddle_h_rsc_0_13_RRESP;
  output [31:0] twiddle_h_rsc_0_13_RDATA;
  output twiddle_h_rsc_0_13_RID;
  output twiddle_h_rsc_0_13_ARREADY;
  input twiddle_h_rsc_0_13_ARVALID;
  input twiddle_h_rsc_0_13_ARUSER;
  input [3:0] twiddle_h_rsc_0_13_ARREGION;
  input [3:0] twiddle_h_rsc_0_13_ARQOS;
  input [2:0] twiddle_h_rsc_0_13_ARPROT;
  input [3:0] twiddle_h_rsc_0_13_ARCACHE;
  input twiddle_h_rsc_0_13_ARLOCK;
  input [1:0] twiddle_h_rsc_0_13_ARBURST;
  input [2:0] twiddle_h_rsc_0_13_ARSIZE;
  input [7:0] twiddle_h_rsc_0_13_ARLEN;
  input [11:0] twiddle_h_rsc_0_13_ARADDR;
  input twiddle_h_rsc_0_13_ARID;
  input twiddle_h_rsc_0_13_BREADY;
  output twiddle_h_rsc_0_13_BVALID;
  output twiddle_h_rsc_0_13_BUSER;
  output [1:0] twiddle_h_rsc_0_13_BRESP;
  output twiddle_h_rsc_0_13_BID;
  output twiddle_h_rsc_0_13_WREADY;
  input twiddle_h_rsc_0_13_WVALID;
  input twiddle_h_rsc_0_13_WUSER;
  input twiddle_h_rsc_0_13_WLAST;
  input [3:0] twiddle_h_rsc_0_13_WSTRB;
  input [31:0] twiddle_h_rsc_0_13_WDATA;
  output twiddle_h_rsc_0_13_AWREADY;
  input twiddle_h_rsc_0_13_AWVALID;
  input twiddle_h_rsc_0_13_AWUSER;
  input [3:0] twiddle_h_rsc_0_13_AWREGION;
  input [3:0] twiddle_h_rsc_0_13_AWQOS;
  input [2:0] twiddle_h_rsc_0_13_AWPROT;
  input [3:0] twiddle_h_rsc_0_13_AWCACHE;
  input twiddle_h_rsc_0_13_AWLOCK;
  input [1:0] twiddle_h_rsc_0_13_AWBURST;
  input [2:0] twiddle_h_rsc_0_13_AWSIZE;
  input [7:0] twiddle_h_rsc_0_13_AWLEN;
  input [11:0] twiddle_h_rsc_0_13_AWADDR;
  input twiddle_h_rsc_0_13_AWID;
  output twiddle_h_rsc_triosy_0_13_lz;
  input twiddle_h_rsc_0_14_s_tdone;
  input twiddle_h_rsc_0_14_tr_write_done;
  input twiddle_h_rsc_0_14_RREADY;
  output twiddle_h_rsc_0_14_RVALID;
  output twiddle_h_rsc_0_14_RUSER;
  output twiddle_h_rsc_0_14_RLAST;
  output [1:0] twiddle_h_rsc_0_14_RRESP;
  output [31:0] twiddle_h_rsc_0_14_RDATA;
  output twiddle_h_rsc_0_14_RID;
  output twiddle_h_rsc_0_14_ARREADY;
  input twiddle_h_rsc_0_14_ARVALID;
  input twiddle_h_rsc_0_14_ARUSER;
  input [3:0] twiddle_h_rsc_0_14_ARREGION;
  input [3:0] twiddle_h_rsc_0_14_ARQOS;
  input [2:0] twiddle_h_rsc_0_14_ARPROT;
  input [3:0] twiddle_h_rsc_0_14_ARCACHE;
  input twiddle_h_rsc_0_14_ARLOCK;
  input [1:0] twiddle_h_rsc_0_14_ARBURST;
  input [2:0] twiddle_h_rsc_0_14_ARSIZE;
  input [7:0] twiddle_h_rsc_0_14_ARLEN;
  input [11:0] twiddle_h_rsc_0_14_ARADDR;
  input twiddle_h_rsc_0_14_ARID;
  input twiddle_h_rsc_0_14_BREADY;
  output twiddle_h_rsc_0_14_BVALID;
  output twiddle_h_rsc_0_14_BUSER;
  output [1:0] twiddle_h_rsc_0_14_BRESP;
  output twiddle_h_rsc_0_14_BID;
  output twiddle_h_rsc_0_14_WREADY;
  input twiddle_h_rsc_0_14_WVALID;
  input twiddle_h_rsc_0_14_WUSER;
  input twiddle_h_rsc_0_14_WLAST;
  input [3:0] twiddle_h_rsc_0_14_WSTRB;
  input [31:0] twiddle_h_rsc_0_14_WDATA;
  output twiddle_h_rsc_0_14_AWREADY;
  input twiddle_h_rsc_0_14_AWVALID;
  input twiddle_h_rsc_0_14_AWUSER;
  input [3:0] twiddle_h_rsc_0_14_AWREGION;
  input [3:0] twiddle_h_rsc_0_14_AWQOS;
  input [2:0] twiddle_h_rsc_0_14_AWPROT;
  input [3:0] twiddle_h_rsc_0_14_AWCACHE;
  input twiddle_h_rsc_0_14_AWLOCK;
  input [1:0] twiddle_h_rsc_0_14_AWBURST;
  input [2:0] twiddle_h_rsc_0_14_AWSIZE;
  input [7:0] twiddle_h_rsc_0_14_AWLEN;
  input [11:0] twiddle_h_rsc_0_14_AWADDR;
  input twiddle_h_rsc_0_14_AWID;
  output twiddle_h_rsc_triosy_0_14_lz;
  input twiddle_h_rsc_0_15_s_tdone;
  input twiddle_h_rsc_0_15_tr_write_done;
  input twiddle_h_rsc_0_15_RREADY;
  output twiddle_h_rsc_0_15_RVALID;
  output twiddle_h_rsc_0_15_RUSER;
  output twiddle_h_rsc_0_15_RLAST;
  output [1:0] twiddle_h_rsc_0_15_RRESP;
  output [31:0] twiddle_h_rsc_0_15_RDATA;
  output twiddle_h_rsc_0_15_RID;
  output twiddle_h_rsc_0_15_ARREADY;
  input twiddle_h_rsc_0_15_ARVALID;
  input twiddle_h_rsc_0_15_ARUSER;
  input [3:0] twiddle_h_rsc_0_15_ARREGION;
  input [3:0] twiddle_h_rsc_0_15_ARQOS;
  input [2:0] twiddle_h_rsc_0_15_ARPROT;
  input [3:0] twiddle_h_rsc_0_15_ARCACHE;
  input twiddle_h_rsc_0_15_ARLOCK;
  input [1:0] twiddle_h_rsc_0_15_ARBURST;
  input [2:0] twiddle_h_rsc_0_15_ARSIZE;
  input [7:0] twiddle_h_rsc_0_15_ARLEN;
  input [11:0] twiddle_h_rsc_0_15_ARADDR;
  input twiddle_h_rsc_0_15_ARID;
  input twiddle_h_rsc_0_15_BREADY;
  output twiddle_h_rsc_0_15_BVALID;
  output twiddle_h_rsc_0_15_BUSER;
  output [1:0] twiddle_h_rsc_0_15_BRESP;
  output twiddle_h_rsc_0_15_BID;
  output twiddle_h_rsc_0_15_WREADY;
  input twiddle_h_rsc_0_15_WVALID;
  input twiddle_h_rsc_0_15_WUSER;
  input twiddle_h_rsc_0_15_WLAST;
  input [3:0] twiddle_h_rsc_0_15_WSTRB;
  input [31:0] twiddle_h_rsc_0_15_WDATA;
  output twiddle_h_rsc_0_15_AWREADY;
  input twiddle_h_rsc_0_15_AWVALID;
  input twiddle_h_rsc_0_15_AWUSER;
  input [3:0] twiddle_h_rsc_0_15_AWREGION;
  input [3:0] twiddle_h_rsc_0_15_AWQOS;
  input [2:0] twiddle_h_rsc_0_15_AWPROT;
  input [3:0] twiddle_h_rsc_0_15_AWCACHE;
  input twiddle_h_rsc_0_15_AWLOCK;
  input [1:0] twiddle_h_rsc_0_15_AWBURST;
  input [2:0] twiddle_h_rsc_0_15_AWSIZE;
  input [7:0] twiddle_h_rsc_0_15_AWLEN;
  input [11:0] twiddle_h_rsc_0_15_AWADDR;
  input twiddle_h_rsc_0_15_AWID;
  output twiddle_h_rsc_triosy_0_15_lz;


  // Interconnect Declarations
  wire yt_rsc_0_0_i_clken_d;
  wire [31:0] yt_rsc_0_0_i_q_d;
  wire [31:0] yt_rsc_0_1_i_q_d;
  wire [31:0] yt_rsc_0_2_i_q_d;
  wire [31:0] yt_rsc_0_3_i_q_d;
  wire [31:0] yt_rsc_0_4_i_q_d;
  wire [31:0] yt_rsc_0_5_i_q_d;
  wire [31:0] yt_rsc_0_6_i_q_d;
  wire [31:0] yt_rsc_0_7_i_q_d;
  wire [31:0] yt_rsc_0_8_i_q_d;
  wire [31:0] yt_rsc_0_9_i_q_d;
  wire [31:0] yt_rsc_0_10_i_q_d;
  wire [31:0] yt_rsc_0_11_i_q_d;
  wire [31:0] yt_rsc_0_12_i_q_d;
  wire [31:0] yt_rsc_0_13_i_q_d;
  wire [31:0] yt_rsc_0_14_i_q_d;
  wire [31:0] yt_rsc_0_15_i_q_d;
  wire yt_rsc_0_16_i_clken_d;
  wire [31:0] yt_rsc_0_16_i_q_d;
  wire [31:0] yt_rsc_0_17_i_q_d;
  wire [31:0] yt_rsc_0_18_i_q_d;
  wire [31:0] yt_rsc_0_19_i_q_d;
  wire [31:0] yt_rsc_0_20_i_q_d;
  wire [31:0] yt_rsc_0_21_i_q_d;
  wire [31:0] yt_rsc_0_22_i_q_d;
  wire [31:0] yt_rsc_0_23_i_q_d;
  wire [31:0] yt_rsc_0_24_i_q_d;
  wire [31:0] yt_rsc_0_25_i_q_d;
  wire [31:0] yt_rsc_0_26_i_q_d;
  wire [31:0] yt_rsc_0_27_i_q_d;
  wire [31:0] yt_rsc_0_28_i_q_d;
  wire [31:0] yt_rsc_0_29_i_q_d;
  wire [31:0] yt_rsc_0_30_i_q_d;
  wire [31:0] yt_rsc_0_31_i_q_d;
  wire yt_rsc_1_0_i_clken_d;
  wire [31:0] yt_rsc_1_0_i_d_d;
  wire [31:0] yt_rsc_1_0_i_q_d;
  wire [31:0] yt_rsc_1_1_i_d_d;
  wire [31:0] yt_rsc_1_1_i_q_d;
  wire [31:0] yt_rsc_1_2_i_d_d;
  wire [31:0] yt_rsc_1_2_i_q_d;
  wire [31:0] yt_rsc_1_3_i_d_d;
  wire [31:0] yt_rsc_1_3_i_q_d;
  wire [31:0] yt_rsc_1_4_i_d_d;
  wire [31:0] yt_rsc_1_4_i_q_d;
  wire [31:0] yt_rsc_1_5_i_d_d;
  wire [31:0] yt_rsc_1_5_i_q_d;
  wire [31:0] yt_rsc_1_6_i_d_d;
  wire [31:0] yt_rsc_1_6_i_q_d;
  wire [31:0] yt_rsc_1_7_i_d_d;
  wire [31:0] yt_rsc_1_7_i_q_d;
  wire [31:0] yt_rsc_1_8_i_d_d;
  wire [31:0] yt_rsc_1_8_i_q_d;
  wire [31:0] yt_rsc_1_9_i_d_d;
  wire [31:0] yt_rsc_1_9_i_q_d;
  wire [31:0] yt_rsc_1_10_i_d_d;
  wire [31:0] yt_rsc_1_10_i_q_d;
  wire [31:0] yt_rsc_1_11_i_d_d;
  wire [31:0] yt_rsc_1_11_i_q_d;
  wire [31:0] yt_rsc_1_12_i_d_d;
  wire [31:0] yt_rsc_1_12_i_q_d;
  wire [31:0] yt_rsc_1_13_i_d_d;
  wire [31:0] yt_rsc_1_13_i_q_d;
  wire [31:0] yt_rsc_1_14_i_d_d;
  wire [31:0] yt_rsc_1_14_i_q_d;
  wire [31:0] yt_rsc_1_15_i_d_d;
  wire [31:0] yt_rsc_1_15_i_q_d;
  wire yt_rsc_1_16_i_clken_d;
  wire [31:0] yt_rsc_1_16_i_d_d;
  wire [31:0] yt_rsc_1_16_i_q_d;
  wire [31:0] yt_rsc_1_17_i_d_d;
  wire [31:0] yt_rsc_1_17_i_q_d;
  wire [31:0] yt_rsc_1_18_i_d_d;
  wire [31:0] yt_rsc_1_18_i_q_d;
  wire [31:0] yt_rsc_1_19_i_d_d;
  wire [31:0] yt_rsc_1_19_i_q_d;
  wire [31:0] yt_rsc_1_20_i_d_d;
  wire [31:0] yt_rsc_1_20_i_q_d;
  wire [31:0] yt_rsc_1_21_i_d_d;
  wire [31:0] yt_rsc_1_21_i_q_d;
  wire [31:0] yt_rsc_1_22_i_d_d;
  wire [31:0] yt_rsc_1_22_i_q_d;
  wire [31:0] yt_rsc_1_23_i_d_d;
  wire [31:0] yt_rsc_1_23_i_q_d;
  wire [31:0] yt_rsc_1_24_i_d_d;
  wire [31:0] yt_rsc_1_24_i_q_d;
  wire [31:0] yt_rsc_1_25_i_d_d;
  wire [31:0] yt_rsc_1_25_i_q_d;
  wire [31:0] yt_rsc_1_26_i_d_d;
  wire [31:0] yt_rsc_1_26_i_q_d;
  wire [31:0] yt_rsc_1_27_i_d_d;
  wire [31:0] yt_rsc_1_27_i_q_d;
  wire [31:0] yt_rsc_1_28_i_d_d;
  wire [31:0] yt_rsc_1_28_i_q_d;
  wire [31:0] yt_rsc_1_29_i_d_d;
  wire [31:0] yt_rsc_1_29_i_q_d;
  wire [31:0] yt_rsc_1_30_i_d_d;
  wire [31:0] yt_rsc_1_30_i_q_d;
  wire [31:0] yt_rsc_1_31_i_d_d;
  wire [31:0] yt_rsc_1_31_i_q_d;
  wire yt_rsc_0_0_clken;
  wire [31:0] yt_rsc_0_0_q;
  wire [3:0] yt_rsc_0_0_radr;
  wire yt_rsc_0_0_we;
  wire [31:0] yt_rsc_0_0_d;
  wire [3:0] yt_rsc_0_0_wadr;
  wire yt_rsc_0_1_clken;
  wire [31:0] yt_rsc_0_1_q;
  wire [3:0] yt_rsc_0_1_radr;
  wire yt_rsc_0_1_we;
  wire [31:0] yt_rsc_0_1_d;
  wire [3:0] yt_rsc_0_1_wadr;
  wire yt_rsc_0_2_clken;
  wire [31:0] yt_rsc_0_2_q;
  wire [3:0] yt_rsc_0_2_radr;
  wire yt_rsc_0_2_we;
  wire [31:0] yt_rsc_0_2_d;
  wire [3:0] yt_rsc_0_2_wadr;
  wire yt_rsc_0_3_clken;
  wire [31:0] yt_rsc_0_3_q;
  wire [3:0] yt_rsc_0_3_radr;
  wire yt_rsc_0_3_we;
  wire [31:0] yt_rsc_0_3_d;
  wire [3:0] yt_rsc_0_3_wadr;
  wire yt_rsc_0_4_clken;
  wire [31:0] yt_rsc_0_4_q;
  wire [3:0] yt_rsc_0_4_radr;
  wire yt_rsc_0_4_we;
  wire [31:0] yt_rsc_0_4_d;
  wire [3:0] yt_rsc_0_4_wadr;
  wire yt_rsc_0_5_clken;
  wire [31:0] yt_rsc_0_5_q;
  wire [3:0] yt_rsc_0_5_radr;
  wire yt_rsc_0_5_we;
  wire [31:0] yt_rsc_0_5_d;
  wire [3:0] yt_rsc_0_5_wadr;
  wire yt_rsc_0_6_clken;
  wire [31:0] yt_rsc_0_6_q;
  wire [3:0] yt_rsc_0_6_radr;
  wire yt_rsc_0_6_we;
  wire [31:0] yt_rsc_0_6_d;
  wire [3:0] yt_rsc_0_6_wadr;
  wire yt_rsc_0_7_clken;
  wire [31:0] yt_rsc_0_7_q;
  wire [3:0] yt_rsc_0_7_radr;
  wire yt_rsc_0_7_we;
  wire [31:0] yt_rsc_0_7_d;
  wire [3:0] yt_rsc_0_7_wadr;
  wire yt_rsc_0_8_clken;
  wire [31:0] yt_rsc_0_8_q;
  wire [3:0] yt_rsc_0_8_radr;
  wire yt_rsc_0_8_we;
  wire [31:0] yt_rsc_0_8_d;
  wire [3:0] yt_rsc_0_8_wadr;
  wire yt_rsc_0_9_clken;
  wire [31:0] yt_rsc_0_9_q;
  wire [3:0] yt_rsc_0_9_radr;
  wire yt_rsc_0_9_we;
  wire [31:0] yt_rsc_0_9_d;
  wire [3:0] yt_rsc_0_9_wadr;
  wire yt_rsc_0_10_clken;
  wire [31:0] yt_rsc_0_10_q;
  wire [3:0] yt_rsc_0_10_radr;
  wire yt_rsc_0_10_we;
  wire [31:0] yt_rsc_0_10_d;
  wire [3:0] yt_rsc_0_10_wadr;
  wire yt_rsc_0_11_clken;
  wire [31:0] yt_rsc_0_11_q;
  wire [3:0] yt_rsc_0_11_radr;
  wire yt_rsc_0_11_we;
  wire [31:0] yt_rsc_0_11_d;
  wire [3:0] yt_rsc_0_11_wadr;
  wire yt_rsc_0_12_clken;
  wire [31:0] yt_rsc_0_12_q;
  wire [3:0] yt_rsc_0_12_radr;
  wire yt_rsc_0_12_we;
  wire [31:0] yt_rsc_0_12_d;
  wire [3:0] yt_rsc_0_12_wadr;
  wire yt_rsc_0_13_clken;
  wire [31:0] yt_rsc_0_13_q;
  wire [3:0] yt_rsc_0_13_radr;
  wire yt_rsc_0_13_we;
  wire [31:0] yt_rsc_0_13_d;
  wire [3:0] yt_rsc_0_13_wadr;
  wire yt_rsc_0_14_clken;
  wire [31:0] yt_rsc_0_14_q;
  wire [3:0] yt_rsc_0_14_radr;
  wire yt_rsc_0_14_we;
  wire [31:0] yt_rsc_0_14_d;
  wire [3:0] yt_rsc_0_14_wadr;
  wire yt_rsc_0_15_clken;
  wire [31:0] yt_rsc_0_15_q;
  wire [3:0] yt_rsc_0_15_radr;
  wire yt_rsc_0_15_we;
  wire [31:0] yt_rsc_0_15_d;
  wire [3:0] yt_rsc_0_15_wadr;
  wire yt_rsc_0_16_clken;
  wire [31:0] yt_rsc_0_16_q;
  wire [3:0] yt_rsc_0_16_radr;
  wire yt_rsc_0_16_we;
  wire [31:0] yt_rsc_0_16_d;
  wire [3:0] yt_rsc_0_16_wadr;
  wire yt_rsc_0_17_clken;
  wire [31:0] yt_rsc_0_17_q;
  wire [3:0] yt_rsc_0_17_radr;
  wire yt_rsc_0_17_we;
  wire [31:0] yt_rsc_0_17_d;
  wire [3:0] yt_rsc_0_17_wadr;
  wire yt_rsc_0_18_clken;
  wire [31:0] yt_rsc_0_18_q;
  wire [3:0] yt_rsc_0_18_radr;
  wire yt_rsc_0_18_we;
  wire [31:0] yt_rsc_0_18_d;
  wire [3:0] yt_rsc_0_18_wadr;
  wire yt_rsc_0_19_clken;
  wire [31:0] yt_rsc_0_19_q;
  wire [3:0] yt_rsc_0_19_radr;
  wire yt_rsc_0_19_we;
  wire [31:0] yt_rsc_0_19_d;
  wire [3:0] yt_rsc_0_19_wadr;
  wire yt_rsc_0_20_clken;
  wire [31:0] yt_rsc_0_20_q;
  wire [3:0] yt_rsc_0_20_radr;
  wire yt_rsc_0_20_we;
  wire [31:0] yt_rsc_0_20_d;
  wire [3:0] yt_rsc_0_20_wadr;
  wire yt_rsc_0_21_clken;
  wire [31:0] yt_rsc_0_21_q;
  wire [3:0] yt_rsc_0_21_radr;
  wire yt_rsc_0_21_we;
  wire [31:0] yt_rsc_0_21_d;
  wire [3:0] yt_rsc_0_21_wadr;
  wire yt_rsc_0_22_clken;
  wire [31:0] yt_rsc_0_22_q;
  wire [3:0] yt_rsc_0_22_radr;
  wire yt_rsc_0_22_we;
  wire [31:0] yt_rsc_0_22_d;
  wire [3:0] yt_rsc_0_22_wadr;
  wire yt_rsc_0_23_clken;
  wire [31:0] yt_rsc_0_23_q;
  wire [3:0] yt_rsc_0_23_radr;
  wire yt_rsc_0_23_we;
  wire [31:0] yt_rsc_0_23_d;
  wire [3:0] yt_rsc_0_23_wadr;
  wire yt_rsc_0_24_clken;
  wire [31:0] yt_rsc_0_24_q;
  wire [3:0] yt_rsc_0_24_radr;
  wire yt_rsc_0_24_we;
  wire [31:0] yt_rsc_0_24_d;
  wire [3:0] yt_rsc_0_24_wadr;
  wire yt_rsc_0_25_clken;
  wire [31:0] yt_rsc_0_25_q;
  wire [3:0] yt_rsc_0_25_radr;
  wire yt_rsc_0_25_we;
  wire [31:0] yt_rsc_0_25_d;
  wire [3:0] yt_rsc_0_25_wadr;
  wire yt_rsc_0_26_clken;
  wire [31:0] yt_rsc_0_26_q;
  wire [3:0] yt_rsc_0_26_radr;
  wire yt_rsc_0_26_we;
  wire [31:0] yt_rsc_0_26_d;
  wire [3:0] yt_rsc_0_26_wadr;
  wire yt_rsc_0_27_clken;
  wire [31:0] yt_rsc_0_27_q;
  wire [3:0] yt_rsc_0_27_radr;
  wire yt_rsc_0_27_we;
  wire [31:0] yt_rsc_0_27_d;
  wire [3:0] yt_rsc_0_27_wadr;
  wire yt_rsc_0_28_clken;
  wire [31:0] yt_rsc_0_28_q;
  wire [3:0] yt_rsc_0_28_radr;
  wire yt_rsc_0_28_we;
  wire [31:0] yt_rsc_0_28_d;
  wire [3:0] yt_rsc_0_28_wadr;
  wire yt_rsc_0_29_clken;
  wire [31:0] yt_rsc_0_29_q;
  wire [3:0] yt_rsc_0_29_radr;
  wire yt_rsc_0_29_we;
  wire [31:0] yt_rsc_0_29_d;
  wire [3:0] yt_rsc_0_29_wadr;
  wire yt_rsc_0_30_clken;
  wire [31:0] yt_rsc_0_30_q;
  wire [3:0] yt_rsc_0_30_radr;
  wire yt_rsc_0_30_we;
  wire [31:0] yt_rsc_0_30_d;
  wire [3:0] yt_rsc_0_30_wadr;
  wire yt_rsc_0_31_clken;
  wire [31:0] yt_rsc_0_31_q;
  wire [3:0] yt_rsc_0_31_radr;
  wire yt_rsc_0_31_we;
  wire [31:0] yt_rsc_0_31_d;
  wire [3:0] yt_rsc_0_31_wadr;
  wire yt_rsc_1_0_clken;
  wire [31:0] yt_rsc_1_0_q;
  wire [3:0] yt_rsc_1_0_radr;
  wire yt_rsc_1_0_we;
  wire [31:0] yt_rsc_1_0_d;
  wire [3:0] yt_rsc_1_0_wadr;
  wire yt_rsc_1_1_clken;
  wire [31:0] yt_rsc_1_1_q;
  wire [3:0] yt_rsc_1_1_radr;
  wire yt_rsc_1_1_we;
  wire [31:0] yt_rsc_1_1_d;
  wire [3:0] yt_rsc_1_1_wadr;
  wire yt_rsc_1_2_clken;
  wire [31:0] yt_rsc_1_2_q;
  wire [3:0] yt_rsc_1_2_radr;
  wire yt_rsc_1_2_we;
  wire [31:0] yt_rsc_1_2_d;
  wire [3:0] yt_rsc_1_2_wadr;
  wire yt_rsc_1_3_clken;
  wire [31:0] yt_rsc_1_3_q;
  wire [3:0] yt_rsc_1_3_radr;
  wire yt_rsc_1_3_we;
  wire [31:0] yt_rsc_1_3_d;
  wire [3:0] yt_rsc_1_3_wadr;
  wire yt_rsc_1_4_clken;
  wire [31:0] yt_rsc_1_4_q;
  wire [3:0] yt_rsc_1_4_radr;
  wire yt_rsc_1_4_we;
  wire [31:0] yt_rsc_1_4_d;
  wire [3:0] yt_rsc_1_4_wadr;
  wire yt_rsc_1_5_clken;
  wire [31:0] yt_rsc_1_5_q;
  wire [3:0] yt_rsc_1_5_radr;
  wire yt_rsc_1_5_we;
  wire [31:0] yt_rsc_1_5_d;
  wire [3:0] yt_rsc_1_5_wadr;
  wire yt_rsc_1_6_clken;
  wire [31:0] yt_rsc_1_6_q;
  wire [3:0] yt_rsc_1_6_radr;
  wire yt_rsc_1_6_we;
  wire [31:0] yt_rsc_1_6_d;
  wire [3:0] yt_rsc_1_6_wadr;
  wire yt_rsc_1_7_clken;
  wire [31:0] yt_rsc_1_7_q;
  wire [3:0] yt_rsc_1_7_radr;
  wire yt_rsc_1_7_we;
  wire [31:0] yt_rsc_1_7_d;
  wire [3:0] yt_rsc_1_7_wadr;
  wire yt_rsc_1_8_clken;
  wire [31:0] yt_rsc_1_8_q;
  wire [3:0] yt_rsc_1_8_radr;
  wire yt_rsc_1_8_we;
  wire [31:0] yt_rsc_1_8_d;
  wire [3:0] yt_rsc_1_8_wadr;
  wire yt_rsc_1_9_clken;
  wire [31:0] yt_rsc_1_9_q;
  wire [3:0] yt_rsc_1_9_radr;
  wire yt_rsc_1_9_we;
  wire [31:0] yt_rsc_1_9_d;
  wire [3:0] yt_rsc_1_9_wadr;
  wire yt_rsc_1_10_clken;
  wire [31:0] yt_rsc_1_10_q;
  wire [3:0] yt_rsc_1_10_radr;
  wire yt_rsc_1_10_we;
  wire [31:0] yt_rsc_1_10_d;
  wire [3:0] yt_rsc_1_10_wadr;
  wire yt_rsc_1_11_clken;
  wire [31:0] yt_rsc_1_11_q;
  wire [3:0] yt_rsc_1_11_radr;
  wire yt_rsc_1_11_we;
  wire [31:0] yt_rsc_1_11_d;
  wire [3:0] yt_rsc_1_11_wadr;
  wire yt_rsc_1_12_clken;
  wire [31:0] yt_rsc_1_12_q;
  wire [3:0] yt_rsc_1_12_radr;
  wire yt_rsc_1_12_we;
  wire [31:0] yt_rsc_1_12_d;
  wire [3:0] yt_rsc_1_12_wadr;
  wire yt_rsc_1_13_clken;
  wire [31:0] yt_rsc_1_13_q;
  wire [3:0] yt_rsc_1_13_radr;
  wire yt_rsc_1_13_we;
  wire [31:0] yt_rsc_1_13_d;
  wire [3:0] yt_rsc_1_13_wadr;
  wire yt_rsc_1_14_clken;
  wire [31:0] yt_rsc_1_14_q;
  wire [3:0] yt_rsc_1_14_radr;
  wire yt_rsc_1_14_we;
  wire [31:0] yt_rsc_1_14_d;
  wire [3:0] yt_rsc_1_14_wadr;
  wire yt_rsc_1_15_clken;
  wire [31:0] yt_rsc_1_15_q;
  wire [3:0] yt_rsc_1_15_radr;
  wire yt_rsc_1_15_we;
  wire [31:0] yt_rsc_1_15_d;
  wire [3:0] yt_rsc_1_15_wadr;
  wire yt_rsc_1_16_clken;
  wire [31:0] yt_rsc_1_16_q;
  wire [3:0] yt_rsc_1_16_radr;
  wire yt_rsc_1_16_we;
  wire [31:0] yt_rsc_1_16_d;
  wire [3:0] yt_rsc_1_16_wadr;
  wire yt_rsc_1_17_clken;
  wire [31:0] yt_rsc_1_17_q;
  wire [3:0] yt_rsc_1_17_radr;
  wire yt_rsc_1_17_we;
  wire [31:0] yt_rsc_1_17_d;
  wire [3:0] yt_rsc_1_17_wadr;
  wire yt_rsc_1_18_clken;
  wire [31:0] yt_rsc_1_18_q;
  wire [3:0] yt_rsc_1_18_radr;
  wire yt_rsc_1_18_we;
  wire [31:0] yt_rsc_1_18_d;
  wire [3:0] yt_rsc_1_18_wadr;
  wire yt_rsc_1_19_clken;
  wire [31:0] yt_rsc_1_19_q;
  wire [3:0] yt_rsc_1_19_radr;
  wire yt_rsc_1_19_we;
  wire [31:0] yt_rsc_1_19_d;
  wire [3:0] yt_rsc_1_19_wadr;
  wire yt_rsc_1_20_clken;
  wire [31:0] yt_rsc_1_20_q;
  wire [3:0] yt_rsc_1_20_radr;
  wire yt_rsc_1_20_we;
  wire [31:0] yt_rsc_1_20_d;
  wire [3:0] yt_rsc_1_20_wadr;
  wire yt_rsc_1_21_clken;
  wire [31:0] yt_rsc_1_21_q;
  wire [3:0] yt_rsc_1_21_radr;
  wire yt_rsc_1_21_we;
  wire [31:0] yt_rsc_1_21_d;
  wire [3:0] yt_rsc_1_21_wadr;
  wire yt_rsc_1_22_clken;
  wire [31:0] yt_rsc_1_22_q;
  wire [3:0] yt_rsc_1_22_radr;
  wire yt_rsc_1_22_we;
  wire [31:0] yt_rsc_1_22_d;
  wire [3:0] yt_rsc_1_22_wadr;
  wire yt_rsc_1_23_clken;
  wire [31:0] yt_rsc_1_23_q;
  wire [3:0] yt_rsc_1_23_radr;
  wire yt_rsc_1_23_we;
  wire [31:0] yt_rsc_1_23_d;
  wire [3:0] yt_rsc_1_23_wadr;
  wire yt_rsc_1_24_clken;
  wire [31:0] yt_rsc_1_24_q;
  wire [3:0] yt_rsc_1_24_radr;
  wire yt_rsc_1_24_we;
  wire [31:0] yt_rsc_1_24_d;
  wire [3:0] yt_rsc_1_24_wadr;
  wire yt_rsc_1_25_clken;
  wire [31:0] yt_rsc_1_25_q;
  wire [3:0] yt_rsc_1_25_radr;
  wire yt_rsc_1_25_we;
  wire [31:0] yt_rsc_1_25_d;
  wire [3:0] yt_rsc_1_25_wadr;
  wire yt_rsc_1_26_clken;
  wire [31:0] yt_rsc_1_26_q;
  wire [3:0] yt_rsc_1_26_radr;
  wire yt_rsc_1_26_we;
  wire [31:0] yt_rsc_1_26_d;
  wire [3:0] yt_rsc_1_26_wadr;
  wire yt_rsc_1_27_clken;
  wire [31:0] yt_rsc_1_27_q;
  wire [3:0] yt_rsc_1_27_radr;
  wire yt_rsc_1_27_we;
  wire [31:0] yt_rsc_1_27_d;
  wire [3:0] yt_rsc_1_27_wadr;
  wire yt_rsc_1_28_clken;
  wire [31:0] yt_rsc_1_28_q;
  wire [3:0] yt_rsc_1_28_radr;
  wire yt_rsc_1_28_we;
  wire [31:0] yt_rsc_1_28_d;
  wire [3:0] yt_rsc_1_28_wadr;
  wire yt_rsc_1_29_clken;
  wire [31:0] yt_rsc_1_29_q;
  wire [3:0] yt_rsc_1_29_radr;
  wire yt_rsc_1_29_we;
  wire [31:0] yt_rsc_1_29_d;
  wire [3:0] yt_rsc_1_29_wadr;
  wire yt_rsc_1_30_clken;
  wire [31:0] yt_rsc_1_30_q;
  wire [3:0] yt_rsc_1_30_radr;
  wire yt_rsc_1_30_we;
  wire [31:0] yt_rsc_1_30_d;
  wire [3:0] yt_rsc_1_30_wadr;
  wire yt_rsc_1_31_clken;
  wire [31:0] yt_rsc_1_31_q;
  wire [3:0] yt_rsc_1_31_radr;
  wire yt_rsc_1_31_we;
  wire [31:0] yt_rsc_1_31_d;
  wire [3:0] yt_rsc_1_31_wadr;
  wire [31:0] yt_rsc_0_0_i_d_d_iff;
  wire [3:0] yt_rsc_0_0_i_radr_d_iff;
  wire [3:0] yt_rsc_0_0_i_wadr_d_iff;
  wire yt_rsc_0_0_i_we_d_iff;
  wire yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff;
  wire [31:0] yt_rsc_0_1_i_d_d_iff;
  wire [31:0] yt_rsc_0_2_i_d_d_iff;
  wire [31:0] yt_rsc_0_3_i_d_d_iff;
  wire [31:0] yt_rsc_0_4_i_d_d_iff;
  wire [31:0] yt_rsc_0_5_i_d_d_iff;
  wire [31:0] yt_rsc_0_6_i_d_d_iff;
  wire [31:0] yt_rsc_0_7_i_d_d_iff;
  wire [31:0] yt_rsc_0_8_i_d_d_iff;
  wire [31:0] yt_rsc_0_9_i_d_d_iff;
  wire [31:0] yt_rsc_0_10_i_d_d_iff;
  wire [31:0] yt_rsc_0_11_i_d_d_iff;
  wire [31:0] yt_rsc_0_12_i_d_d_iff;
  wire [31:0] yt_rsc_0_13_i_d_d_iff;
  wire [31:0] yt_rsc_0_14_i_d_d_iff;
  wire [31:0] yt_rsc_0_15_i_d_d_iff;
  wire [3:0] yt_rsc_0_16_i_wadr_d_iff;
  wire yt_rsc_0_16_i_we_d_iff;
  wire [3:0] yt_rsc_1_0_i_wadr_d_iff;
  wire yt_rsc_1_0_i_we_d_iff;
  wire yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff;
  wire [3:0] yt_rsc_1_16_i_wadr_d_iff;
  wire yt_rsc_1_16_i_we_d_iff;


  // Interconnect Declarations for Component Instantiations 
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_0_comp (
      .clk(clk),
      .clken(yt_rsc_0_0_clken),
      .d(yt_rsc_0_0_d),
      .q(yt_rsc_0_0_q),
      .radr(yt_rsc_0_0_radr),
      .wadr(yt_rsc_0_0_wadr),
      .we(yt_rsc_0_0_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_1_comp (
      .clk(clk),
      .clken(yt_rsc_0_1_clken),
      .d(yt_rsc_0_1_d),
      .q(yt_rsc_0_1_q),
      .radr(yt_rsc_0_1_radr),
      .wadr(yt_rsc_0_1_wadr),
      .we(yt_rsc_0_1_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_2_comp (
      .clk(clk),
      .clken(yt_rsc_0_2_clken),
      .d(yt_rsc_0_2_d),
      .q(yt_rsc_0_2_q),
      .radr(yt_rsc_0_2_radr),
      .wadr(yt_rsc_0_2_wadr),
      .we(yt_rsc_0_2_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_3_comp (
      .clk(clk),
      .clken(yt_rsc_0_3_clken),
      .d(yt_rsc_0_3_d),
      .q(yt_rsc_0_3_q),
      .radr(yt_rsc_0_3_radr),
      .wadr(yt_rsc_0_3_wadr),
      .we(yt_rsc_0_3_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_4_comp (
      .clk(clk),
      .clken(yt_rsc_0_4_clken),
      .d(yt_rsc_0_4_d),
      .q(yt_rsc_0_4_q),
      .radr(yt_rsc_0_4_radr),
      .wadr(yt_rsc_0_4_wadr),
      .we(yt_rsc_0_4_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_5_comp (
      .clk(clk),
      .clken(yt_rsc_0_5_clken),
      .d(yt_rsc_0_5_d),
      .q(yt_rsc_0_5_q),
      .radr(yt_rsc_0_5_radr),
      .wadr(yt_rsc_0_5_wadr),
      .we(yt_rsc_0_5_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_6_comp (
      .clk(clk),
      .clken(yt_rsc_0_6_clken),
      .d(yt_rsc_0_6_d),
      .q(yt_rsc_0_6_q),
      .radr(yt_rsc_0_6_radr),
      .wadr(yt_rsc_0_6_wadr),
      .we(yt_rsc_0_6_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_7_comp (
      .clk(clk),
      .clken(yt_rsc_0_7_clken),
      .d(yt_rsc_0_7_d),
      .q(yt_rsc_0_7_q),
      .radr(yt_rsc_0_7_radr),
      .wadr(yt_rsc_0_7_wadr),
      .we(yt_rsc_0_7_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_8_comp (
      .clk(clk),
      .clken(yt_rsc_0_8_clken),
      .d(yt_rsc_0_8_d),
      .q(yt_rsc_0_8_q),
      .radr(yt_rsc_0_8_radr),
      .wadr(yt_rsc_0_8_wadr),
      .we(yt_rsc_0_8_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_9_comp (
      .clk(clk),
      .clken(yt_rsc_0_9_clken),
      .d(yt_rsc_0_9_d),
      .q(yt_rsc_0_9_q),
      .radr(yt_rsc_0_9_radr),
      .wadr(yt_rsc_0_9_wadr),
      .we(yt_rsc_0_9_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_10_comp (
      .clk(clk),
      .clken(yt_rsc_0_10_clken),
      .d(yt_rsc_0_10_d),
      .q(yt_rsc_0_10_q),
      .radr(yt_rsc_0_10_radr),
      .wadr(yt_rsc_0_10_wadr),
      .we(yt_rsc_0_10_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_11_comp (
      .clk(clk),
      .clken(yt_rsc_0_11_clken),
      .d(yt_rsc_0_11_d),
      .q(yt_rsc_0_11_q),
      .radr(yt_rsc_0_11_radr),
      .wadr(yt_rsc_0_11_wadr),
      .we(yt_rsc_0_11_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_12_comp (
      .clk(clk),
      .clken(yt_rsc_0_12_clken),
      .d(yt_rsc_0_12_d),
      .q(yt_rsc_0_12_q),
      .radr(yt_rsc_0_12_radr),
      .wadr(yt_rsc_0_12_wadr),
      .we(yt_rsc_0_12_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_13_comp (
      .clk(clk),
      .clken(yt_rsc_0_13_clken),
      .d(yt_rsc_0_13_d),
      .q(yt_rsc_0_13_q),
      .radr(yt_rsc_0_13_radr),
      .wadr(yt_rsc_0_13_wadr),
      .we(yt_rsc_0_13_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_14_comp (
      .clk(clk),
      .clken(yt_rsc_0_14_clken),
      .d(yt_rsc_0_14_d),
      .q(yt_rsc_0_14_q),
      .radr(yt_rsc_0_14_radr),
      .wadr(yt_rsc_0_14_wadr),
      .we(yt_rsc_0_14_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_15_comp (
      .clk(clk),
      .clken(yt_rsc_0_15_clken),
      .d(yt_rsc_0_15_d),
      .q(yt_rsc_0_15_q),
      .radr(yt_rsc_0_15_radr),
      .wadr(yt_rsc_0_15_wadr),
      .we(yt_rsc_0_15_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_16_comp (
      .clk(clk),
      .clken(yt_rsc_0_16_clken),
      .d(yt_rsc_0_16_d),
      .q(yt_rsc_0_16_q),
      .radr(yt_rsc_0_16_radr),
      .wadr(yt_rsc_0_16_wadr),
      .we(yt_rsc_0_16_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_17_comp (
      .clk(clk),
      .clken(yt_rsc_0_17_clken),
      .d(yt_rsc_0_17_d),
      .q(yt_rsc_0_17_q),
      .radr(yt_rsc_0_17_radr),
      .wadr(yt_rsc_0_17_wadr),
      .we(yt_rsc_0_17_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_18_comp (
      .clk(clk),
      .clken(yt_rsc_0_18_clken),
      .d(yt_rsc_0_18_d),
      .q(yt_rsc_0_18_q),
      .radr(yt_rsc_0_18_radr),
      .wadr(yt_rsc_0_18_wadr),
      .we(yt_rsc_0_18_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_19_comp (
      .clk(clk),
      .clken(yt_rsc_0_19_clken),
      .d(yt_rsc_0_19_d),
      .q(yt_rsc_0_19_q),
      .radr(yt_rsc_0_19_radr),
      .wadr(yt_rsc_0_19_wadr),
      .we(yt_rsc_0_19_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_20_comp (
      .clk(clk),
      .clken(yt_rsc_0_20_clken),
      .d(yt_rsc_0_20_d),
      .q(yt_rsc_0_20_q),
      .radr(yt_rsc_0_20_radr),
      .wadr(yt_rsc_0_20_wadr),
      .we(yt_rsc_0_20_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_21_comp (
      .clk(clk),
      .clken(yt_rsc_0_21_clken),
      .d(yt_rsc_0_21_d),
      .q(yt_rsc_0_21_q),
      .radr(yt_rsc_0_21_radr),
      .wadr(yt_rsc_0_21_wadr),
      .we(yt_rsc_0_21_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_22_comp (
      .clk(clk),
      .clken(yt_rsc_0_22_clken),
      .d(yt_rsc_0_22_d),
      .q(yt_rsc_0_22_q),
      .radr(yt_rsc_0_22_radr),
      .wadr(yt_rsc_0_22_wadr),
      .we(yt_rsc_0_22_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_23_comp (
      .clk(clk),
      .clken(yt_rsc_0_23_clken),
      .d(yt_rsc_0_23_d),
      .q(yt_rsc_0_23_q),
      .radr(yt_rsc_0_23_radr),
      .wadr(yt_rsc_0_23_wadr),
      .we(yt_rsc_0_23_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_24_comp (
      .clk(clk),
      .clken(yt_rsc_0_24_clken),
      .d(yt_rsc_0_24_d),
      .q(yt_rsc_0_24_q),
      .radr(yt_rsc_0_24_radr),
      .wadr(yt_rsc_0_24_wadr),
      .we(yt_rsc_0_24_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_25_comp (
      .clk(clk),
      .clken(yt_rsc_0_25_clken),
      .d(yt_rsc_0_25_d),
      .q(yt_rsc_0_25_q),
      .radr(yt_rsc_0_25_radr),
      .wadr(yt_rsc_0_25_wadr),
      .we(yt_rsc_0_25_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_26_comp (
      .clk(clk),
      .clken(yt_rsc_0_26_clken),
      .d(yt_rsc_0_26_d),
      .q(yt_rsc_0_26_q),
      .radr(yt_rsc_0_26_radr),
      .wadr(yt_rsc_0_26_wadr),
      .we(yt_rsc_0_26_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_27_comp (
      .clk(clk),
      .clken(yt_rsc_0_27_clken),
      .d(yt_rsc_0_27_d),
      .q(yt_rsc_0_27_q),
      .radr(yt_rsc_0_27_radr),
      .wadr(yt_rsc_0_27_wadr),
      .we(yt_rsc_0_27_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_28_comp (
      .clk(clk),
      .clken(yt_rsc_0_28_clken),
      .d(yt_rsc_0_28_d),
      .q(yt_rsc_0_28_q),
      .radr(yt_rsc_0_28_radr),
      .wadr(yt_rsc_0_28_wadr),
      .we(yt_rsc_0_28_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_29_comp (
      .clk(clk),
      .clken(yt_rsc_0_29_clken),
      .d(yt_rsc_0_29_d),
      .q(yt_rsc_0_29_q),
      .radr(yt_rsc_0_29_radr),
      .wadr(yt_rsc_0_29_wadr),
      .we(yt_rsc_0_29_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_30_comp (
      .clk(clk),
      .clken(yt_rsc_0_30_clken),
      .d(yt_rsc_0_30_d),
      .q(yt_rsc_0_30_q),
      .radr(yt_rsc_0_30_radr),
      .wadr(yt_rsc_0_30_wadr),
      .we(yt_rsc_0_30_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_0_31_comp (
      .clk(clk),
      .clken(yt_rsc_0_31_clken),
      .d(yt_rsc_0_31_d),
      .q(yt_rsc_0_31_q),
      .radr(yt_rsc_0_31_radr),
      .wadr(yt_rsc_0_31_wadr),
      .we(yt_rsc_0_31_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_0_comp (
      .clk(clk),
      .clken(yt_rsc_1_0_clken),
      .d(yt_rsc_1_0_d),
      .q(yt_rsc_1_0_q),
      .radr(yt_rsc_1_0_radr),
      .wadr(yt_rsc_1_0_wadr),
      .we(yt_rsc_1_0_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_1_comp (
      .clk(clk),
      .clken(yt_rsc_1_1_clken),
      .d(yt_rsc_1_1_d),
      .q(yt_rsc_1_1_q),
      .radr(yt_rsc_1_1_radr),
      .wadr(yt_rsc_1_1_wadr),
      .we(yt_rsc_1_1_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_2_comp (
      .clk(clk),
      .clken(yt_rsc_1_2_clken),
      .d(yt_rsc_1_2_d),
      .q(yt_rsc_1_2_q),
      .radr(yt_rsc_1_2_radr),
      .wadr(yt_rsc_1_2_wadr),
      .we(yt_rsc_1_2_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_3_comp (
      .clk(clk),
      .clken(yt_rsc_1_3_clken),
      .d(yt_rsc_1_3_d),
      .q(yt_rsc_1_3_q),
      .radr(yt_rsc_1_3_radr),
      .wadr(yt_rsc_1_3_wadr),
      .we(yt_rsc_1_3_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_4_comp (
      .clk(clk),
      .clken(yt_rsc_1_4_clken),
      .d(yt_rsc_1_4_d),
      .q(yt_rsc_1_4_q),
      .radr(yt_rsc_1_4_radr),
      .wadr(yt_rsc_1_4_wadr),
      .we(yt_rsc_1_4_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_5_comp (
      .clk(clk),
      .clken(yt_rsc_1_5_clken),
      .d(yt_rsc_1_5_d),
      .q(yt_rsc_1_5_q),
      .radr(yt_rsc_1_5_radr),
      .wadr(yt_rsc_1_5_wadr),
      .we(yt_rsc_1_5_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_6_comp (
      .clk(clk),
      .clken(yt_rsc_1_6_clken),
      .d(yt_rsc_1_6_d),
      .q(yt_rsc_1_6_q),
      .radr(yt_rsc_1_6_radr),
      .wadr(yt_rsc_1_6_wadr),
      .we(yt_rsc_1_6_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_7_comp (
      .clk(clk),
      .clken(yt_rsc_1_7_clken),
      .d(yt_rsc_1_7_d),
      .q(yt_rsc_1_7_q),
      .radr(yt_rsc_1_7_radr),
      .wadr(yt_rsc_1_7_wadr),
      .we(yt_rsc_1_7_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_8_comp (
      .clk(clk),
      .clken(yt_rsc_1_8_clken),
      .d(yt_rsc_1_8_d),
      .q(yt_rsc_1_8_q),
      .radr(yt_rsc_1_8_radr),
      .wadr(yt_rsc_1_8_wadr),
      .we(yt_rsc_1_8_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_9_comp (
      .clk(clk),
      .clken(yt_rsc_1_9_clken),
      .d(yt_rsc_1_9_d),
      .q(yt_rsc_1_9_q),
      .radr(yt_rsc_1_9_radr),
      .wadr(yt_rsc_1_9_wadr),
      .we(yt_rsc_1_9_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_10_comp (
      .clk(clk),
      .clken(yt_rsc_1_10_clken),
      .d(yt_rsc_1_10_d),
      .q(yt_rsc_1_10_q),
      .radr(yt_rsc_1_10_radr),
      .wadr(yt_rsc_1_10_wadr),
      .we(yt_rsc_1_10_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_11_comp (
      .clk(clk),
      .clken(yt_rsc_1_11_clken),
      .d(yt_rsc_1_11_d),
      .q(yt_rsc_1_11_q),
      .radr(yt_rsc_1_11_radr),
      .wadr(yt_rsc_1_11_wadr),
      .we(yt_rsc_1_11_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_12_comp (
      .clk(clk),
      .clken(yt_rsc_1_12_clken),
      .d(yt_rsc_1_12_d),
      .q(yt_rsc_1_12_q),
      .radr(yt_rsc_1_12_radr),
      .wadr(yt_rsc_1_12_wadr),
      .we(yt_rsc_1_12_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_13_comp (
      .clk(clk),
      .clken(yt_rsc_1_13_clken),
      .d(yt_rsc_1_13_d),
      .q(yt_rsc_1_13_q),
      .radr(yt_rsc_1_13_radr),
      .wadr(yt_rsc_1_13_wadr),
      .we(yt_rsc_1_13_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_14_comp (
      .clk(clk),
      .clken(yt_rsc_1_14_clken),
      .d(yt_rsc_1_14_d),
      .q(yt_rsc_1_14_q),
      .radr(yt_rsc_1_14_radr),
      .wadr(yt_rsc_1_14_wadr),
      .we(yt_rsc_1_14_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_15_comp (
      .clk(clk),
      .clken(yt_rsc_1_15_clken),
      .d(yt_rsc_1_15_d),
      .q(yt_rsc_1_15_q),
      .radr(yt_rsc_1_15_radr),
      .wadr(yt_rsc_1_15_wadr),
      .we(yt_rsc_1_15_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_16_comp (
      .clk(clk),
      .clken(yt_rsc_1_16_clken),
      .d(yt_rsc_1_16_d),
      .q(yt_rsc_1_16_q),
      .radr(yt_rsc_1_16_radr),
      .wadr(yt_rsc_1_16_wadr),
      .we(yt_rsc_1_16_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_17_comp (
      .clk(clk),
      .clken(yt_rsc_1_17_clken),
      .d(yt_rsc_1_17_d),
      .q(yt_rsc_1_17_q),
      .radr(yt_rsc_1_17_radr),
      .wadr(yt_rsc_1_17_wadr),
      .we(yt_rsc_1_17_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_18_comp (
      .clk(clk),
      .clken(yt_rsc_1_18_clken),
      .d(yt_rsc_1_18_d),
      .q(yt_rsc_1_18_q),
      .radr(yt_rsc_1_18_radr),
      .wadr(yt_rsc_1_18_wadr),
      .we(yt_rsc_1_18_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_19_comp (
      .clk(clk),
      .clken(yt_rsc_1_19_clken),
      .d(yt_rsc_1_19_d),
      .q(yt_rsc_1_19_q),
      .radr(yt_rsc_1_19_radr),
      .wadr(yt_rsc_1_19_wadr),
      .we(yt_rsc_1_19_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_20_comp (
      .clk(clk),
      .clken(yt_rsc_1_20_clken),
      .d(yt_rsc_1_20_d),
      .q(yt_rsc_1_20_q),
      .radr(yt_rsc_1_20_radr),
      .wadr(yt_rsc_1_20_wadr),
      .we(yt_rsc_1_20_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_21_comp (
      .clk(clk),
      .clken(yt_rsc_1_21_clken),
      .d(yt_rsc_1_21_d),
      .q(yt_rsc_1_21_q),
      .radr(yt_rsc_1_21_radr),
      .wadr(yt_rsc_1_21_wadr),
      .we(yt_rsc_1_21_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_22_comp (
      .clk(clk),
      .clken(yt_rsc_1_22_clken),
      .d(yt_rsc_1_22_d),
      .q(yt_rsc_1_22_q),
      .radr(yt_rsc_1_22_radr),
      .wadr(yt_rsc_1_22_wadr),
      .we(yt_rsc_1_22_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_23_comp (
      .clk(clk),
      .clken(yt_rsc_1_23_clken),
      .d(yt_rsc_1_23_d),
      .q(yt_rsc_1_23_q),
      .radr(yt_rsc_1_23_radr),
      .wadr(yt_rsc_1_23_wadr),
      .we(yt_rsc_1_23_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_24_comp (
      .clk(clk),
      .clken(yt_rsc_1_24_clken),
      .d(yt_rsc_1_24_d),
      .q(yt_rsc_1_24_q),
      .radr(yt_rsc_1_24_radr),
      .wadr(yt_rsc_1_24_wadr),
      .we(yt_rsc_1_24_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_25_comp (
      .clk(clk),
      .clken(yt_rsc_1_25_clken),
      .d(yt_rsc_1_25_d),
      .q(yt_rsc_1_25_q),
      .radr(yt_rsc_1_25_radr),
      .wadr(yt_rsc_1_25_wadr),
      .we(yt_rsc_1_25_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_26_comp (
      .clk(clk),
      .clken(yt_rsc_1_26_clken),
      .d(yt_rsc_1_26_d),
      .q(yt_rsc_1_26_q),
      .radr(yt_rsc_1_26_radr),
      .wadr(yt_rsc_1_26_wadr),
      .we(yt_rsc_1_26_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_27_comp (
      .clk(clk),
      .clken(yt_rsc_1_27_clken),
      .d(yt_rsc_1_27_d),
      .q(yt_rsc_1_27_q),
      .radr(yt_rsc_1_27_radr),
      .wadr(yt_rsc_1_27_wadr),
      .we(yt_rsc_1_27_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_28_comp (
      .clk(clk),
      .clken(yt_rsc_1_28_clken),
      .d(yt_rsc_1_28_d),
      .q(yt_rsc_1_28_q),
      .radr(yt_rsc_1_28_radr),
      .wadr(yt_rsc_1_28_wadr),
      .we(yt_rsc_1_28_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_29_comp (
      .clk(clk),
      .clken(yt_rsc_1_29_clken),
      .d(yt_rsc_1_29_d),
      .q(yt_rsc_1_29_q),
      .radr(yt_rsc_1_29_radr),
      .wadr(yt_rsc_1_29_wadr),
      .we(yt_rsc_1_29_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_30_comp (
      .clk(clk),
      .clken(yt_rsc_1_30_clken),
      .d(yt_rsc_1_30_d),
      .q(yt_rsc_1_30_q),
      .radr(yt_rsc_1_30_radr),
      .wadr(yt_rsc_1_30_wadr),
      .we(yt_rsc_1_30_we)
    );
  BLOCK_1R1W_RBW #(.addr_width(32'sd4),
  .data_width(32'sd32),
  .depth(32'sd16),
  .latency(32'sd1)) yt_rsc_1_31_comp (
      .clk(clk),
      .clken(yt_rsc_1_31_clken),
      .d(yt_rsc_1_31_d),
      .q(yt_rsc_1_31_q),
      .radr(yt_rsc_1_31_radr),
      .wadr(yt_rsc_1_31_wadr),
      .we(yt_rsc_1_31_we)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_7_4_32_16_16_32_1_gen yt_rsc_0_0_i
      (
      .clken(yt_rsc_0_0_clken),
      .q(yt_rsc_0_0_q),
      .radr(yt_rsc_0_0_radr),
      .we(yt_rsc_0_0_we),
      .d(yt_rsc_0_0_d),
      .wadr(yt_rsc_0_0_wadr),
      .clken_d(yt_rsc_0_0_i_clken_d),
      .d_d(yt_rsc_0_0_i_d_d_iff),
      .q_d(yt_rsc_0_0_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_0_i_wadr_d_iff),
      .we_d(yt_rsc_0_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_8_4_32_16_16_32_1_gen yt_rsc_0_1_i
      (
      .clken(yt_rsc_0_1_clken),
      .q(yt_rsc_0_1_q),
      .radr(yt_rsc_0_1_radr),
      .we(yt_rsc_0_1_we),
      .d(yt_rsc_0_1_d),
      .wadr(yt_rsc_0_1_wadr),
      .clken_d(yt_rsc_0_0_i_clken_d),
      .d_d(yt_rsc_0_1_i_d_d_iff),
      .q_d(yt_rsc_0_1_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_0_i_wadr_d_iff),
      .we_d(yt_rsc_0_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_9_4_32_16_16_32_1_gen yt_rsc_0_2_i
      (
      .clken(yt_rsc_0_2_clken),
      .q(yt_rsc_0_2_q),
      .radr(yt_rsc_0_2_radr),
      .we(yt_rsc_0_2_we),
      .d(yt_rsc_0_2_d),
      .wadr(yt_rsc_0_2_wadr),
      .clken_d(yt_rsc_0_0_i_clken_d),
      .d_d(yt_rsc_0_2_i_d_d_iff),
      .q_d(yt_rsc_0_2_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_0_i_wadr_d_iff),
      .we_d(yt_rsc_0_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_10_4_32_16_16_32_1_gen yt_rsc_0_3_i
      (
      .clken(yt_rsc_0_3_clken),
      .q(yt_rsc_0_3_q),
      .radr(yt_rsc_0_3_radr),
      .we(yt_rsc_0_3_we),
      .d(yt_rsc_0_3_d),
      .wadr(yt_rsc_0_3_wadr),
      .clken_d(yt_rsc_0_0_i_clken_d),
      .d_d(yt_rsc_0_3_i_d_d_iff),
      .q_d(yt_rsc_0_3_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_0_i_wadr_d_iff),
      .we_d(yt_rsc_0_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_11_4_32_16_16_32_1_gen yt_rsc_0_4_i
      (
      .clken(yt_rsc_0_4_clken),
      .q(yt_rsc_0_4_q),
      .radr(yt_rsc_0_4_radr),
      .we(yt_rsc_0_4_we),
      .d(yt_rsc_0_4_d),
      .wadr(yt_rsc_0_4_wadr),
      .clken_d(yt_rsc_0_0_i_clken_d),
      .d_d(yt_rsc_0_4_i_d_d_iff),
      .q_d(yt_rsc_0_4_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_0_i_wadr_d_iff),
      .we_d(yt_rsc_0_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_12_4_32_16_16_32_1_gen yt_rsc_0_5_i
      (
      .clken(yt_rsc_0_5_clken),
      .q(yt_rsc_0_5_q),
      .radr(yt_rsc_0_5_radr),
      .we(yt_rsc_0_5_we),
      .d(yt_rsc_0_5_d),
      .wadr(yt_rsc_0_5_wadr),
      .clken_d(yt_rsc_0_0_i_clken_d),
      .d_d(yt_rsc_0_5_i_d_d_iff),
      .q_d(yt_rsc_0_5_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_0_i_wadr_d_iff),
      .we_d(yt_rsc_0_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_13_4_32_16_16_32_1_gen yt_rsc_0_6_i
      (
      .clken(yt_rsc_0_6_clken),
      .q(yt_rsc_0_6_q),
      .radr(yt_rsc_0_6_radr),
      .we(yt_rsc_0_6_we),
      .d(yt_rsc_0_6_d),
      .wadr(yt_rsc_0_6_wadr),
      .clken_d(yt_rsc_0_0_i_clken_d),
      .d_d(yt_rsc_0_6_i_d_d_iff),
      .q_d(yt_rsc_0_6_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_0_i_wadr_d_iff),
      .we_d(yt_rsc_0_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_14_4_32_16_16_32_1_gen yt_rsc_0_7_i
      (
      .clken(yt_rsc_0_7_clken),
      .q(yt_rsc_0_7_q),
      .radr(yt_rsc_0_7_radr),
      .we(yt_rsc_0_7_we),
      .d(yt_rsc_0_7_d),
      .wadr(yt_rsc_0_7_wadr),
      .clken_d(yt_rsc_0_0_i_clken_d),
      .d_d(yt_rsc_0_7_i_d_d_iff),
      .q_d(yt_rsc_0_7_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_0_i_wadr_d_iff),
      .we_d(yt_rsc_0_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_15_4_32_16_16_32_1_gen yt_rsc_0_8_i
      (
      .clken(yt_rsc_0_8_clken),
      .q(yt_rsc_0_8_q),
      .radr(yt_rsc_0_8_radr),
      .we(yt_rsc_0_8_we),
      .d(yt_rsc_0_8_d),
      .wadr(yt_rsc_0_8_wadr),
      .clken_d(yt_rsc_0_0_i_clken_d),
      .d_d(yt_rsc_0_8_i_d_d_iff),
      .q_d(yt_rsc_0_8_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_0_i_wadr_d_iff),
      .we_d(yt_rsc_0_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_16_4_32_16_16_32_1_gen yt_rsc_0_9_i
      (
      .clken(yt_rsc_0_9_clken),
      .q(yt_rsc_0_9_q),
      .radr(yt_rsc_0_9_radr),
      .we(yt_rsc_0_9_we),
      .d(yt_rsc_0_9_d),
      .wadr(yt_rsc_0_9_wadr),
      .clken_d(yt_rsc_0_0_i_clken_d),
      .d_d(yt_rsc_0_9_i_d_d_iff),
      .q_d(yt_rsc_0_9_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_0_i_wadr_d_iff),
      .we_d(yt_rsc_0_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_17_4_32_16_16_32_1_gen yt_rsc_0_10_i
      (
      .clken(yt_rsc_0_10_clken),
      .q(yt_rsc_0_10_q),
      .radr(yt_rsc_0_10_radr),
      .we(yt_rsc_0_10_we),
      .d(yt_rsc_0_10_d),
      .wadr(yt_rsc_0_10_wadr),
      .clken_d(yt_rsc_0_0_i_clken_d),
      .d_d(yt_rsc_0_10_i_d_d_iff),
      .q_d(yt_rsc_0_10_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_0_i_wadr_d_iff),
      .we_d(yt_rsc_0_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_18_4_32_16_16_32_1_gen yt_rsc_0_11_i
      (
      .clken(yt_rsc_0_11_clken),
      .q(yt_rsc_0_11_q),
      .radr(yt_rsc_0_11_radr),
      .we(yt_rsc_0_11_we),
      .d(yt_rsc_0_11_d),
      .wadr(yt_rsc_0_11_wadr),
      .clken_d(yt_rsc_0_0_i_clken_d),
      .d_d(yt_rsc_0_11_i_d_d_iff),
      .q_d(yt_rsc_0_11_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_0_i_wadr_d_iff),
      .we_d(yt_rsc_0_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_19_4_32_16_16_32_1_gen yt_rsc_0_12_i
      (
      .clken(yt_rsc_0_12_clken),
      .q(yt_rsc_0_12_q),
      .radr(yt_rsc_0_12_radr),
      .we(yt_rsc_0_12_we),
      .d(yt_rsc_0_12_d),
      .wadr(yt_rsc_0_12_wadr),
      .clken_d(yt_rsc_0_0_i_clken_d),
      .d_d(yt_rsc_0_12_i_d_d_iff),
      .q_d(yt_rsc_0_12_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_0_i_wadr_d_iff),
      .we_d(yt_rsc_0_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_20_4_32_16_16_32_1_gen yt_rsc_0_13_i
      (
      .clken(yt_rsc_0_13_clken),
      .q(yt_rsc_0_13_q),
      .radr(yt_rsc_0_13_radr),
      .we(yt_rsc_0_13_we),
      .d(yt_rsc_0_13_d),
      .wadr(yt_rsc_0_13_wadr),
      .clken_d(yt_rsc_0_0_i_clken_d),
      .d_d(yt_rsc_0_13_i_d_d_iff),
      .q_d(yt_rsc_0_13_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_0_i_wadr_d_iff),
      .we_d(yt_rsc_0_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_21_4_32_16_16_32_1_gen yt_rsc_0_14_i
      (
      .clken(yt_rsc_0_14_clken),
      .q(yt_rsc_0_14_q),
      .radr(yt_rsc_0_14_radr),
      .we(yt_rsc_0_14_we),
      .d(yt_rsc_0_14_d),
      .wadr(yt_rsc_0_14_wadr),
      .clken_d(yt_rsc_0_0_i_clken_d),
      .d_d(yt_rsc_0_14_i_d_d_iff),
      .q_d(yt_rsc_0_14_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_0_i_wadr_d_iff),
      .we_d(yt_rsc_0_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_22_4_32_16_16_32_1_gen yt_rsc_0_15_i
      (
      .clken(yt_rsc_0_15_clken),
      .q(yt_rsc_0_15_q),
      .radr(yt_rsc_0_15_radr),
      .we(yt_rsc_0_15_we),
      .d(yt_rsc_0_15_d),
      .wadr(yt_rsc_0_15_wadr),
      .clken_d(yt_rsc_0_0_i_clken_d),
      .d_d(yt_rsc_0_15_i_d_d_iff),
      .q_d(yt_rsc_0_15_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_0_i_wadr_d_iff),
      .we_d(yt_rsc_0_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_23_4_32_16_16_32_1_gen yt_rsc_0_16_i
      (
      .clken(yt_rsc_0_16_clken),
      .q(yt_rsc_0_16_q),
      .radr(yt_rsc_0_16_radr),
      .we(yt_rsc_0_16_we),
      .d(yt_rsc_0_16_d),
      .wadr(yt_rsc_0_16_wadr),
      .clken_d(yt_rsc_0_16_i_clken_d),
      .d_d(yt_rsc_0_0_i_d_d_iff),
      .q_d(yt_rsc_0_16_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_16_i_wadr_d_iff),
      .we_d(yt_rsc_0_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_24_4_32_16_16_32_1_gen yt_rsc_0_17_i
      (
      .clken(yt_rsc_0_17_clken),
      .q(yt_rsc_0_17_q),
      .radr(yt_rsc_0_17_radr),
      .we(yt_rsc_0_17_we),
      .d(yt_rsc_0_17_d),
      .wadr(yt_rsc_0_17_wadr),
      .clken_d(yt_rsc_0_16_i_clken_d),
      .d_d(yt_rsc_0_1_i_d_d_iff),
      .q_d(yt_rsc_0_17_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_16_i_wadr_d_iff),
      .we_d(yt_rsc_0_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_25_4_32_16_16_32_1_gen yt_rsc_0_18_i
      (
      .clken(yt_rsc_0_18_clken),
      .q(yt_rsc_0_18_q),
      .radr(yt_rsc_0_18_radr),
      .we(yt_rsc_0_18_we),
      .d(yt_rsc_0_18_d),
      .wadr(yt_rsc_0_18_wadr),
      .clken_d(yt_rsc_0_16_i_clken_d),
      .d_d(yt_rsc_0_2_i_d_d_iff),
      .q_d(yt_rsc_0_18_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_16_i_wadr_d_iff),
      .we_d(yt_rsc_0_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_26_4_32_16_16_32_1_gen yt_rsc_0_19_i
      (
      .clken(yt_rsc_0_19_clken),
      .q(yt_rsc_0_19_q),
      .radr(yt_rsc_0_19_radr),
      .we(yt_rsc_0_19_we),
      .d(yt_rsc_0_19_d),
      .wadr(yt_rsc_0_19_wadr),
      .clken_d(yt_rsc_0_16_i_clken_d),
      .d_d(yt_rsc_0_3_i_d_d_iff),
      .q_d(yt_rsc_0_19_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_16_i_wadr_d_iff),
      .we_d(yt_rsc_0_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_27_4_32_16_16_32_1_gen yt_rsc_0_20_i
      (
      .clken(yt_rsc_0_20_clken),
      .q(yt_rsc_0_20_q),
      .radr(yt_rsc_0_20_radr),
      .we(yt_rsc_0_20_we),
      .d(yt_rsc_0_20_d),
      .wadr(yt_rsc_0_20_wadr),
      .clken_d(yt_rsc_0_16_i_clken_d),
      .d_d(yt_rsc_0_4_i_d_d_iff),
      .q_d(yt_rsc_0_20_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_16_i_wadr_d_iff),
      .we_d(yt_rsc_0_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_28_4_32_16_16_32_1_gen yt_rsc_0_21_i
      (
      .clken(yt_rsc_0_21_clken),
      .q(yt_rsc_0_21_q),
      .radr(yt_rsc_0_21_radr),
      .we(yt_rsc_0_21_we),
      .d(yt_rsc_0_21_d),
      .wadr(yt_rsc_0_21_wadr),
      .clken_d(yt_rsc_0_16_i_clken_d),
      .d_d(yt_rsc_0_5_i_d_d_iff),
      .q_d(yt_rsc_0_21_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_16_i_wadr_d_iff),
      .we_d(yt_rsc_0_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_29_4_32_16_16_32_1_gen yt_rsc_0_22_i
      (
      .clken(yt_rsc_0_22_clken),
      .q(yt_rsc_0_22_q),
      .radr(yt_rsc_0_22_radr),
      .we(yt_rsc_0_22_we),
      .d(yt_rsc_0_22_d),
      .wadr(yt_rsc_0_22_wadr),
      .clken_d(yt_rsc_0_16_i_clken_d),
      .d_d(yt_rsc_0_6_i_d_d_iff),
      .q_d(yt_rsc_0_22_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_16_i_wadr_d_iff),
      .we_d(yt_rsc_0_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_30_4_32_16_16_32_1_gen yt_rsc_0_23_i
      (
      .clken(yt_rsc_0_23_clken),
      .q(yt_rsc_0_23_q),
      .radr(yt_rsc_0_23_radr),
      .we(yt_rsc_0_23_we),
      .d(yt_rsc_0_23_d),
      .wadr(yt_rsc_0_23_wadr),
      .clken_d(yt_rsc_0_16_i_clken_d),
      .d_d(yt_rsc_0_7_i_d_d_iff),
      .q_d(yt_rsc_0_23_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_16_i_wadr_d_iff),
      .we_d(yt_rsc_0_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_31_4_32_16_16_32_1_gen yt_rsc_0_24_i
      (
      .clken(yt_rsc_0_24_clken),
      .q(yt_rsc_0_24_q),
      .radr(yt_rsc_0_24_radr),
      .we(yt_rsc_0_24_we),
      .d(yt_rsc_0_24_d),
      .wadr(yt_rsc_0_24_wadr),
      .clken_d(yt_rsc_0_16_i_clken_d),
      .d_d(yt_rsc_0_8_i_d_d_iff),
      .q_d(yt_rsc_0_24_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_16_i_wadr_d_iff),
      .we_d(yt_rsc_0_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_32_4_32_16_16_32_1_gen yt_rsc_0_25_i
      (
      .clken(yt_rsc_0_25_clken),
      .q(yt_rsc_0_25_q),
      .radr(yt_rsc_0_25_radr),
      .we(yt_rsc_0_25_we),
      .d(yt_rsc_0_25_d),
      .wadr(yt_rsc_0_25_wadr),
      .clken_d(yt_rsc_0_16_i_clken_d),
      .d_d(yt_rsc_0_9_i_d_d_iff),
      .q_d(yt_rsc_0_25_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_16_i_wadr_d_iff),
      .we_d(yt_rsc_0_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_33_4_32_16_16_32_1_gen yt_rsc_0_26_i
      (
      .clken(yt_rsc_0_26_clken),
      .q(yt_rsc_0_26_q),
      .radr(yt_rsc_0_26_radr),
      .we(yt_rsc_0_26_we),
      .d(yt_rsc_0_26_d),
      .wadr(yt_rsc_0_26_wadr),
      .clken_d(yt_rsc_0_16_i_clken_d),
      .d_d(yt_rsc_0_10_i_d_d_iff),
      .q_d(yt_rsc_0_26_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_16_i_wadr_d_iff),
      .we_d(yt_rsc_0_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_34_4_32_16_16_32_1_gen yt_rsc_0_27_i
      (
      .clken(yt_rsc_0_27_clken),
      .q(yt_rsc_0_27_q),
      .radr(yt_rsc_0_27_radr),
      .we(yt_rsc_0_27_we),
      .d(yt_rsc_0_27_d),
      .wadr(yt_rsc_0_27_wadr),
      .clken_d(yt_rsc_0_16_i_clken_d),
      .d_d(yt_rsc_0_11_i_d_d_iff),
      .q_d(yt_rsc_0_27_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_16_i_wadr_d_iff),
      .we_d(yt_rsc_0_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_35_4_32_16_16_32_1_gen yt_rsc_0_28_i
      (
      .clken(yt_rsc_0_28_clken),
      .q(yt_rsc_0_28_q),
      .radr(yt_rsc_0_28_radr),
      .we(yt_rsc_0_28_we),
      .d(yt_rsc_0_28_d),
      .wadr(yt_rsc_0_28_wadr),
      .clken_d(yt_rsc_0_16_i_clken_d),
      .d_d(yt_rsc_0_12_i_d_d_iff),
      .q_d(yt_rsc_0_28_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_16_i_wadr_d_iff),
      .we_d(yt_rsc_0_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_36_4_32_16_16_32_1_gen yt_rsc_0_29_i
      (
      .clken(yt_rsc_0_29_clken),
      .q(yt_rsc_0_29_q),
      .radr(yt_rsc_0_29_radr),
      .we(yt_rsc_0_29_we),
      .d(yt_rsc_0_29_d),
      .wadr(yt_rsc_0_29_wadr),
      .clken_d(yt_rsc_0_16_i_clken_d),
      .d_d(yt_rsc_0_13_i_d_d_iff),
      .q_d(yt_rsc_0_29_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_16_i_wadr_d_iff),
      .we_d(yt_rsc_0_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_37_4_32_16_16_32_1_gen yt_rsc_0_30_i
      (
      .clken(yt_rsc_0_30_clken),
      .q(yt_rsc_0_30_q),
      .radr(yt_rsc_0_30_radr),
      .we(yt_rsc_0_30_we),
      .d(yt_rsc_0_30_d),
      .wadr(yt_rsc_0_30_wadr),
      .clken_d(yt_rsc_0_16_i_clken_d),
      .d_d(yt_rsc_0_14_i_d_d_iff),
      .q_d(yt_rsc_0_30_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_16_i_wadr_d_iff),
      .we_d(yt_rsc_0_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_38_4_32_16_16_32_1_gen yt_rsc_0_31_i
      (
      .clken(yt_rsc_0_31_clken),
      .q(yt_rsc_0_31_q),
      .radr(yt_rsc_0_31_radr),
      .we(yt_rsc_0_31_we),
      .d(yt_rsc_0_31_d),
      .wadr(yt_rsc_0_31_wadr),
      .clken_d(yt_rsc_0_16_i_clken_d),
      .d_d(yt_rsc_0_15_i_d_d_iff),
      .q_d(yt_rsc_0_31_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_0_16_i_wadr_d_iff),
      .we_d(yt_rsc_0_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_0_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_39_4_32_16_16_32_1_gen yt_rsc_1_0_i
      (
      .clken(yt_rsc_1_0_clken),
      .q(yt_rsc_1_0_q),
      .radr(yt_rsc_1_0_radr),
      .we(yt_rsc_1_0_we),
      .d(yt_rsc_1_0_d),
      .wadr(yt_rsc_1_0_wadr),
      .clken_d(yt_rsc_1_0_i_clken_d),
      .d_d(yt_rsc_1_0_i_d_d),
      .q_d(yt_rsc_1_0_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_0_i_wadr_d_iff),
      .we_d(yt_rsc_1_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_40_4_32_16_16_32_1_gen yt_rsc_1_1_i
      (
      .clken(yt_rsc_1_1_clken),
      .q(yt_rsc_1_1_q),
      .radr(yt_rsc_1_1_radr),
      .we(yt_rsc_1_1_we),
      .d(yt_rsc_1_1_d),
      .wadr(yt_rsc_1_1_wadr),
      .clken_d(yt_rsc_1_0_i_clken_d),
      .d_d(yt_rsc_1_1_i_d_d),
      .q_d(yt_rsc_1_1_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_0_i_wadr_d_iff),
      .we_d(yt_rsc_1_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_41_4_32_16_16_32_1_gen yt_rsc_1_2_i
      (
      .clken(yt_rsc_1_2_clken),
      .q(yt_rsc_1_2_q),
      .radr(yt_rsc_1_2_radr),
      .we(yt_rsc_1_2_we),
      .d(yt_rsc_1_2_d),
      .wadr(yt_rsc_1_2_wadr),
      .clken_d(yt_rsc_1_0_i_clken_d),
      .d_d(yt_rsc_1_2_i_d_d),
      .q_d(yt_rsc_1_2_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_0_i_wadr_d_iff),
      .we_d(yt_rsc_1_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_42_4_32_16_16_32_1_gen yt_rsc_1_3_i
      (
      .clken(yt_rsc_1_3_clken),
      .q(yt_rsc_1_3_q),
      .radr(yt_rsc_1_3_radr),
      .we(yt_rsc_1_3_we),
      .d(yt_rsc_1_3_d),
      .wadr(yt_rsc_1_3_wadr),
      .clken_d(yt_rsc_1_0_i_clken_d),
      .d_d(yt_rsc_1_3_i_d_d),
      .q_d(yt_rsc_1_3_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_0_i_wadr_d_iff),
      .we_d(yt_rsc_1_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_43_4_32_16_16_32_1_gen yt_rsc_1_4_i
      (
      .clken(yt_rsc_1_4_clken),
      .q(yt_rsc_1_4_q),
      .radr(yt_rsc_1_4_radr),
      .we(yt_rsc_1_4_we),
      .d(yt_rsc_1_4_d),
      .wadr(yt_rsc_1_4_wadr),
      .clken_d(yt_rsc_1_0_i_clken_d),
      .d_d(yt_rsc_1_4_i_d_d),
      .q_d(yt_rsc_1_4_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_0_i_wadr_d_iff),
      .we_d(yt_rsc_1_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_44_4_32_16_16_32_1_gen yt_rsc_1_5_i
      (
      .clken(yt_rsc_1_5_clken),
      .q(yt_rsc_1_5_q),
      .radr(yt_rsc_1_5_radr),
      .we(yt_rsc_1_5_we),
      .d(yt_rsc_1_5_d),
      .wadr(yt_rsc_1_5_wadr),
      .clken_d(yt_rsc_1_0_i_clken_d),
      .d_d(yt_rsc_1_5_i_d_d),
      .q_d(yt_rsc_1_5_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_0_i_wadr_d_iff),
      .we_d(yt_rsc_1_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_45_4_32_16_16_32_1_gen yt_rsc_1_6_i
      (
      .clken(yt_rsc_1_6_clken),
      .q(yt_rsc_1_6_q),
      .radr(yt_rsc_1_6_radr),
      .we(yt_rsc_1_6_we),
      .d(yt_rsc_1_6_d),
      .wadr(yt_rsc_1_6_wadr),
      .clken_d(yt_rsc_1_0_i_clken_d),
      .d_d(yt_rsc_1_6_i_d_d),
      .q_d(yt_rsc_1_6_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_0_i_wadr_d_iff),
      .we_d(yt_rsc_1_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_46_4_32_16_16_32_1_gen yt_rsc_1_7_i
      (
      .clken(yt_rsc_1_7_clken),
      .q(yt_rsc_1_7_q),
      .radr(yt_rsc_1_7_radr),
      .we(yt_rsc_1_7_we),
      .d(yt_rsc_1_7_d),
      .wadr(yt_rsc_1_7_wadr),
      .clken_d(yt_rsc_1_0_i_clken_d),
      .d_d(yt_rsc_1_7_i_d_d),
      .q_d(yt_rsc_1_7_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_0_i_wadr_d_iff),
      .we_d(yt_rsc_1_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_47_4_32_16_16_32_1_gen yt_rsc_1_8_i
      (
      .clken(yt_rsc_1_8_clken),
      .q(yt_rsc_1_8_q),
      .radr(yt_rsc_1_8_radr),
      .we(yt_rsc_1_8_we),
      .d(yt_rsc_1_8_d),
      .wadr(yt_rsc_1_8_wadr),
      .clken_d(yt_rsc_1_0_i_clken_d),
      .d_d(yt_rsc_1_8_i_d_d),
      .q_d(yt_rsc_1_8_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_0_i_wadr_d_iff),
      .we_d(yt_rsc_1_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_48_4_32_16_16_32_1_gen yt_rsc_1_9_i
      (
      .clken(yt_rsc_1_9_clken),
      .q(yt_rsc_1_9_q),
      .radr(yt_rsc_1_9_radr),
      .we(yt_rsc_1_9_we),
      .d(yt_rsc_1_9_d),
      .wadr(yt_rsc_1_9_wadr),
      .clken_d(yt_rsc_1_0_i_clken_d),
      .d_d(yt_rsc_1_9_i_d_d),
      .q_d(yt_rsc_1_9_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_0_i_wadr_d_iff),
      .we_d(yt_rsc_1_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_49_4_32_16_16_32_1_gen yt_rsc_1_10_i
      (
      .clken(yt_rsc_1_10_clken),
      .q(yt_rsc_1_10_q),
      .radr(yt_rsc_1_10_radr),
      .we(yt_rsc_1_10_we),
      .d(yt_rsc_1_10_d),
      .wadr(yt_rsc_1_10_wadr),
      .clken_d(yt_rsc_1_0_i_clken_d),
      .d_d(yt_rsc_1_10_i_d_d),
      .q_d(yt_rsc_1_10_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_0_i_wadr_d_iff),
      .we_d(yt_rsc_1_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_50_4_32_16_16_32_1_gen yt_rsc_1_11_i
      (
      .clken(yt_rsc_1_11_clken),
      .q(yt_rsc_1_11_q),
      .radr(yt_rsc_1_11_radr),
      .we(yt_rsc_1_11_we),
      .d(yt_rsc_1_11_d),
      .wadr(yt_rsc_1_11_wadr),
      .clken_d(yt_rsc_1_0_i_clken_d),
      .d_d(yt_rsc_1_11_i_d_d),
      .q_d(yt_rsc_1_11_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_0_i_wadr_d_iff),
      .we_d(yt_rsc_1_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_51_4_32_16_16_32_1_gen yt_rsc_1_12_i
      (
      .clken(yt_rsc_1_12_clken),
      .q(yt_rsc_1_12_q),
      .radr(yt_rsc_1_12_radr),
      .we(yt_rsc_1_12_we),
      .d(yt_rsc_1_12_d),
      .wadr(yt_rsc_1_12_wadr),
      .clken_d(yt_rsc_1_0_i_clken_d),
      .d_d(yt_rsc_1_12_i_d_d),
      .q_d(yt_rsc_1_12_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_0_i_wadr_d_iff),
      .we_d(yt_rsc_1_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_52_4_32_16_16_32_1_gen yt_rsc_1_13_i
      (
      .clken(yt_rsc_1_13_clken),
      .q(yt_rsc_1_13_q),
      .radr(yt_rsc_1_13_radr),
      .we(yt_rsc_1_13_we),
      .d(yt_rsc_1_13_d),
      .wadr(yt_rsc_1_13_wadr),
      .clken_d(yt_rsc_1_0_i_clken_d),
      .d_d(yt_rsc_1_13_i_d_d),
      .q_d(yt_rsc_1_13_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_0_i_wadr_d_iff),
      .we_d(yt_rsc_1_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_53_4_32_16_16_32_1_gen yt_rsc_1_14_i
      (
      .clken(yt_rsc_1_14_clken),
      .q(yt_rsc_1_14_q),
      .radr(yt_rsc_1_14_radr),
      .we(yt_rsc_1_14_we),
      .d(yt_rsc_1_14_d),
      .wadr(yt_rsc_1_14_wadr),
      .clken_d(yt_rsc_1_0_i_clken_d),
      .d_d(yt_rsc_1_14_i_d_d),
      .q_d(yt_rsc_1_14_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_0_i_wadr_d_iff),
      .we_d(yt_rsc_1_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_54_4_32_16_16_32_1_gen yt_rsc_1_15_i
      (
      .clken(yt_rsc_1_15_clken),
      .q(yt_rsc_1_15_q),
      .radr(yt_rsc_1_15_radr),
      .we(yt_rsc_1_15_we),
      .d(yt_rsc_1_15_d),
      .wadr(yt_rsc_1_15_wadr),
      .clken_d(yt_rsc_1_0_i_clken_d),
      .d_d(yt_rsc_1_15_i_d_d),
      .q_d(yt_rsc_1_15_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_0_i_wadr_d_iff),
      .we_d(yt_rsc_1_0_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_0_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_55_4_32_16_16_32_1_gen yt_rsc_1_16_i
      (
      .clken(yt_rsc_1_16_clken),
      .q(yt_rsc_1_16_q),
      .radr(yt_rsc_1_16_radr),
      .we(yt_rsc_1_16_we),
      .d(yt_rsc_1_16_d),
      .wadr(yt_rsc_1_16_wadr),
      .clken_d(yt_rsc_1_16_i_clken_d),
      .d_d(yt_rsc_1_16_i_d_d),
      .q_d(yt_rsc_1_16_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_16_i_wadr_d_iff),
      .we_d(yt_rsc_1_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_56_4_32_16_16_32_1_gen yt_rsc_1_17_i
      (
      .clken(yt_rsc_1_17_clken),
      .q(yt_rsc_1_17_q),
      .radr(yt_rsc_1_17_radr),
      .we(yt_rsc_1_17_we),
      .d(yt_rsc_1_17_d),
      .wadr(yt_rsc_1_17_wadr),
      .clken_d(yt_rsc_1_16_i_clken_d),
      .d_d(yt_rsc_1_17_i_d_d),
      .q_d(yt_rsc_1_17_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_16_i_wadr_d_iff),
      .we_d(yt_rsc_1_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_57_4_32_16_16_32_1_gen yt_rsc_1_18_i
      (
      .clken(yt_rsc_1_18_clken),
      .q(yt_rsc_1_18_q),
      .radr(yt_rsc_1_18_radr),
      .we(yt_rsc_1_18_we),
      .d(yt_rsc_1_18_d),
      .wadr(yt_rsc_1_18_wadr),
      .clken_d(yt_rsc_1_16_i_clken_d),
      .d_d(yt_rsc_1_18_i_d_d),
      .q_d(yt_rsc_1_18_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_16_i_wadr_d_iff),
      .we_d(yt_rsc_1_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_58_4_32_16_16_32_1_gen yt_rsc_1_19_i
      (
      .clken(yt_rsc_1_19_clken),
      .q(yt_rsc_1_19_q),
      .radr(yt_rsc_1_19_radr),
      .we(yt_rsc_1_19_we),
      .d(yt_rsc_1_19_d),
      .wadr(yt_rsc_1_19_wadr),
      .clken_d(yt_rsc_1_16_i_clken_d),
      .d_d(yt_rsc_1_19_i_d_d),
      .q_d(yt_rsc_1_19_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_16_i_wadr_d_iff),
      .we_d(yt_rsc_1_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_59_4_32_16_16_32_1_gen yt_rsc_1_20_i
      (
      .clken(yt_rsc_1_20_clken),
      .q(yt_rsc_1_20_q),
      .radr(yt_rsc_1_20_radr),
      .we(yt_rsc_1_20_we),
      .d(yt_rsc_1_20_d),
      .wadr(yt_rsc_1_20_wadr),
      .clken_d(yt_rsc_1_16_i_clken_d),
      .d_d(yt_rsc_1_20_i_d_d),
      .q_d(yt_rsc_1_20_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_16_i_wadr_d_iff),
      .we_d(yt_rsc_1_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_60_4_32_16_16_32_1_gen yt_rsc_1_21_i
      (
      .clken(yt_rsc_1_21_clken),
      .q(yt_rsc_1_21_q),
      .radr(yt_rsc_1_21_radr),
      .we(yt_rsc_1_21_we),
      .d(yt_rsc_1_21_d),
      .wadr(yt_rsc_1_21_wadr),
      .clken_d(yt_rsc_1_16_i_clken_d),
      .d_d(yt_rsc_1_21_i_d_d),
      .q_d(yt_rsc_1_21_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_16_i_wadr_d_iff),
      .we_d(yt_rsc_1_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_61_4_32_16_16_32_1_gen yt_rsc_1_22_i
      (
      .clken(yt_rsc_1_22_clken),
      .q(yt_rsc_1_22_q),
      .radr(yt_rsc_1_22_radr),
      .we(yt_rsc_1_22_we),
      .d(yt_rsc_1_22_d),
      .wadr(yt_rsc_1_22_wadr),
      .clken_d(yt_rsc_1_16_i_clken_d),
      .d_d(yt_rsc_1_22_i_d_d),
      .q_d(yt_rsc_1_22_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_16_i_wadr_d_iff),
      .we_d(yt_rsc_1_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_62_4_32_16_16_32_1_gen yt_rsc_1_23_i
      (
      .clken(yt_rsc_1_23_clken),
      .q(yt_rsc_1_23_q),
      .radr(yt_rsc_1_23_radr),
      .we(yt_rsc_1_23_we),
      .d(yt_rsc_1_23_d),
      .wadr(yt_rsc_1_23_wadr),
      .clken_d(yt_rsc_1_16_i_clken_d),
      .d_d(yt_rsc_1_23_i_d_d),
      .q_d(yt_rsc_1_23_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_16_i_wadr_d_iff),
      .we_d(yt_rsc_1_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_63_4_32_16_16_32_1_gen yt_rsc_1_24_i
      (
      .clken(yt_rsc_1_24_clken),
      .q(yt_rsc_1_24_q),
      .radr(yt_rsc_1_24_radr),
      .we(yt_rsc_1_24_we),
      .d(yt_rsc_1_24_d),
      .wadr(yt_rsc_1_24_wadr),
      .clken_d(yt_rsc_1_16_i_clken_d),
      .d_d(yt_rsc_1_24_i_d_d),
      .q_d(yt_rsc_1_24_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_16_i_wadr_d_iff),
      .we_d(yt_rsc_1_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_64_4_32_16_16_32_1_gen yt_rsc_1_25_i
      (
      .clken(yt_rsc_1_25_clken),
      .q(yt_rsc_1_25_q),
      .radr(yt_rsc_1_25_radr),
      .we(yt_rsc_1_25_we),
      .d(yt_rsc_1_25_d),
      .wadr(yt_rsc_1_25_wadr),
      .clken_d(yt_rsc_1_16_i_clken_d),
      .d_d(yt_rsc_1_25_i_d_d),
      .q_d(yt_rsc_1_25_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_16_i_wadr_d_iff),
      .we_d(yt_rsc_1_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_65_4_32_16_16_32_1_gen yt_rsc_1_26_i
      (
      .clken(yt_rsc_1_26_clken),
      .q(yt_rsc_1_26_q),
      .radr(yt_rsc_1_26_radr),
      .we(yt_rsc_1_26_we),
      .d(yt_rsc_1_26_d),
      .wadr(yt_rsc_1_26_wadr),
      .clken_d(yt_rsc_1_16_i_clken_d),
      .d_d(yt_rsc_1_26_i_d_d),
      .q_d(yt_rsc_1_26_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_16_i_wadr_d_iff),
      .we_d(yt_rsc_1_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_66_4_32_16_16_32_1_gen yt_rsc_1_27_i
      (
      .clken(yt_rsc_1_27_clken),
      .q(yt_rsc_1_27_q),
      .radr(yt_rsc_1_27_radr),
      .we(yt_rsc_1_27_we),
      .d(yt_rsc_1_27_d),
      .wadr(yt_rsc_1_27_wadr),
      .clken_d(yt_rsc_1_16_i_clken_d),
      .d_d(yt_rsc_1_27_i_d_d),
      .q_d(yt_rsc_1_27_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_16_i_wadr_d_iff),
      .we_d(yt_rsc_1_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_67_4_32_16_16_32_1_gen yt_rsc_1_28_i
      (
      .clken(yt_rsc_1_28_clken),
      .q(yt_rsc_1_28_q),
      .radr(yt_rsc_1_28_radr),
      .we(yt_rsc_1_28_we),
      .d(yt_rsc_1_28_d),
      .wadr(yt_rsc_1_28_wadr),
      .clken_d(yt_rsc_1_16_i_clken_d),
      .d_d(yt_rsc_1_28_i_d_d),
      .q_d(yt_rsc_1_28_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_16_i_wadr_d_iff),
      .we_d(yt_rsc_1_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_68_4_32_16_16_32_1_gen yt_rsc_1_29_i
      (
      .clken(yt_rsc_1_29_clken),
      .q(yt_rsc_1_29_q),
      .radr(yt_rsc_1_29_radr),
      .we(yt_rsc_1_29_we),
      .d(yt_rsc_1_29_d),
      .wadr(yt_rsc_1_29_wadr),
      .clken_d(yt_rsc_1_16_i_clken_d),
      .d_d(yt_rsc_1_29_i_d_d),
      .q_d(yt_rsc_1_29_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_16_i_wadr_d_iff),
      .we_d(yt_rsc_1_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_69_4_32_16_16_32_1_gen yt_rsc_1_30_i
      (
      .clken(yt_rsc_1_30_clken),
      .q(yt_rsc_1_30_q),
      .radr(yt_rsc_1_30_radr),
      .we(yt_rsc_1_30_we),
      .d(yt_rsc_1_30_d),
      .wadr(yt_rsc_1_30_wadr),
      .clken_d(yt_rsc_1_16_i_clken_d),
      .d_d(yt_rsc_1_30_i_d_d),
      .q_d(yt_rsc_1_30_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_16_i_wadr_d_iff),
      .we_d(yt_rsc_1_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_70_4_32_16_16_32_1_gen yt_rsc_1_31_i
      (
      .clken(yt_rsc_1_31_clken),
      .q(yt_rsc_1_31_q),
      .radr(yt_rsc_1_31_radr),
      .we(yt_rsc_1_31_we),
      .d(yt_rsc_1_31_d),
      .wadr(yt_rsc_1_31_wadr),
      .clken_d(yt_rsc_1_16_i_clken_d),
      .d_d(yt_rsc_1_31_i_d_d),
      .q_d(yt_rsc_1_31_i_q_d),
      .radr_d(yt_rsc_0_0_i_radr_d_iff),
      .wadr_d(yt_rsc_1_16_i_wadr_d_iff),
      .we_d(yt_rsc_1_16_i_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(yt_rsc_1_16_i_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff)
    );
  peaseNTT_core peaseNTT_core_inst (
      .clk(clk),
      .rst(rst),
      .xt_rsc_0_0_s_tdone(xt_rsc_0_0_s_tdone),
      .xt_rsc_0_0_tr_write_done(xt_rsc_0_0_tr_write_done),
      .xt_rsc_0_0_RREADY(xt_rsc_0_0_RREADY),
      .xt_rsc_0_0_RVALID(xt_rsc_0_0_RVALID),
      .xt_rsc_0_0_RUSER(xt_rsc_0_0_RUSER),
      .xt_rsc_0_0_RLAST(xt_rsc_0_0_RLAST),
      .xt_rsc_0_0_RRESP(xt_rsc_0_0_RRESP),
      .xt_rsc_0_0_RDATA(xt_rsc_0_0_RDATA),
      .xt_rsc_0_0_RID(xt_rsc_0_0_RID),
      .xt_rsc_0_0_ARREADY(xt_rsc_0_0_ARREADY),
      .xt_rsc_0_0_ARVALID(xt_rsc_0_0_ARVALID),
      .xt_rsc_0_0_ARUSER(xt_rsc_0_0_ARUSER),
      .xt_rsc_0_0_ARREGION(xt_rsc_0_0_ARREGION),
      .xt_rsc_0_0_ARQOS(xt_rsc_0_0_ARQOS),
      .xt_rsc_0_0_ARPROT(xt_rsc_0_0_ARPROT),
      .xt_rsc_0_0_ARCACHE(xt_rsc_0_0_ARCACHE),
      .xt_rsc_0_0_ARLOCK(xt_rsc_0_0_ARLOCK),
      .xt_rsc_0_0_ARBURST(xt_rsc_0_0_ARBURST),
      .xt_rsc_0_0_ARSIZE(xt_rsc_0_0_ARSIZE),
      .xt_rsc_0_0_ARLEN(xt_rsc_0_0_ARLEN),
      .xt_rsc_0_0_ARADDR(xt_rsc_0_0_ARADDR),
      .xt_rsc_0_0_ARID(xt_rsc_0_0_ARID),
      .xt_rsc_0_0_BREADY(xt_rsc_0_0_BREADY),
      .xt_rsc_0_0_BVALID(xt_rsc_0_0_BVALID),
      .xt_rsc_0_0_BUSER(xt_rsc_0_0_BUSER),
      .xt_rsc_0_0_BRESP(xt_rsc_0_0_BRESP),
      .xt_rsc_0_0_BID(xt_rsc_0_0_BID),
      .xt_rsc_0_0_WREADY(xt_rsc_0_0_WREADY),
      .xt_rsc_0_0_WVALID(xt_rsc_0_0_WVALID),
      .xt_rsc_0_0_WUSER(xt_rsc_0_0_WUSER),
      .xt_rsc_0_0_WLAST(xt_rsc_0_0_WLAST),
      .xt_rsc_0_0_WSTRB(xt_rsc_0_0_WSTRB),
      .xt_rsc_0_0_WDATA(xt_rsc_0_0_WDATA),
      .xt_rsc_0_0_AWREADY(xt_rsc_0_0_AWREADY),
      .xt_rsc_0_0_AWVALID(xt_rsc_0_0_AWVALID),
      .xt_rsc_0_0_AWUSER(xt_rsc_0_0_AWUSER),
      .xt_rsc_0_0_AWREGION(xt_rsc_0_0_AWREGION),
      .xt_rsc_0_0_AWQOS(xt_rsc_0_0_AWQOS),
      .xt_rsc_0_0_AWPROT(xt_rsc_0_0_AWPROT),
      .xt_rsc_0_0_AWCACHE(xt_rsc_0_0_AWCACHE),
      .xt_rsc_0_0_AWLOCK(xt_rsc_0_0_AWLOCK),
      .xt_rsc_0_0_AWBURST(xt_rsc_0_0_AWBURST),
      .xt_rsc_0_0_AWSIZE(xt_rsc_0_0_AWSIZE),
      .xt_rsc_0_0_AWLEN(xt_rsc_0_0_AWLEN),
      .xt_rsc_0_0_AWADDR(xt_rsc_0_0_AWADDR),
      .xt_rsc_0_0_AWID(xt_rsc_0_0_AWID),
      .xt_rsc_triosy_0_0_lz(xt_rsc_triosy_0_0_lz),
      .xt_rsc_0_1_s_tdone(xt_rsc_0_1_s_tdone),
      .xt_rsc_0_1_tr_write_done(xt_rsc_0_1_tr_write_done),
      .xt_rsc_0_1_RREADY(xt_rsc_0_1_RREADY),
      .xt_rsc_0_1_RVALID(xt_rsc_0_1_RVALID),
      .xt_rsc_0_1_RUSER(xt_rsc_0_1_RUSER),
      .xt_rsc_0_1_RLAST(xt_rsc_0_1_RLAST),
      .xt_rsc_0_1_RRESP(xt_rsc_0_1_RRESP),
      .xt_rsc_0_1_RDATA(xt_rsc_0_1_RDATA),
      .xt_rsc_0_1_RID(xt_rsc_0_1_RID),
      .xt_rsc_0_1_ARREADY(xt_rsc_0_1_ARREADY),
      .xt_rsc_0_1_ARVALID(xt_rsc_0_1_ARVALID),
      .xt_rsc_0_1_ARUSER(xt_rsc_0_1_ARUSER),
      .xt_rsc_0_1_ARREGION(xt_rsc_0_1_ARREGION),
      .xt_rsc_0_1_ARQOS(xt_rsc_0_1_ARQOS),
      .xt_rsc_0_1_ARPROT(xt_rsc_0_1_ARPROT),
      .xt_rsc_0_1_ARCACHE(xt_rsc_0_1_ARCACHE),
      .xt_rsc_0_1_ARLOCK(xt_rsc_0_1_ARLOCK),
      .xt_rsc_0_1_ARBURST(xt_rsc_0_1_ARBURST),
      .xt_rsc_0_1_ARSIZE(xt_rsc_0_1_ARSIZE),
      .xt_rsc_0_1_ARLEN(xt_rsc_0_1_ARLEN),
      .xt_rsc_0_1_ARADDR(xt_rsc_0_1_ARADDR),
      .xt_rsc_0_1_ARID(xt_rsc_0_1_ARID),
      .xt_rsc_0_1_BREADY(xt_rsc_0_1_BREADY),
      .xt_rsc_0_1_BVALID(xt_rsc_0_1_BVALID),
      .xt_rsc_0_1_BUSER(xt_rsc_0_1_BUSER),
      .xt_rsc_0_1_BRESP(xt_rsc_0_1_BRESP),
      .xt_rsc_0_1_BID(xt_rsc_0_1_BID),
      .xt_rsc_0_1_WREADY(xt_rsc_0_1_WREADY),
      .xt_rsc_0_1_WVALID(xt_rsc_0_1_WVALID),
      .xt_rsc_0_1_WUSER(xt_rsc_0_1_WUSER),
      .xt_rsc_0_1_WLAST(xt_rsc_0_1_WLAST),
      .xt_rsc_0_1_WSTRB(xt_rsc_0_1_WSTRB),
      .xt_rsc_0_1_WDATA(xt_rsc_0_1_WDATA),
      .xt_rsc_0_1_AWREADY(xt_rsc_0_1_AWREADY),
      .xt_rsc_0_1_AWVALID(xt_rsc_0_1_AWVALID),
      .xt_rsc_0_1_AWUSER(xt_rsc_0_1_AWUSER),
      .xt_rsc_0_1_AWREGION(xt_rsc_0_1_AWREGION),
      .xt_rsc_0_1_AWQOS(xt_rsc_0_1_AWQOS),
      .xt_rsc_0_1_AWPROT(xt_rsc_0_1_AWPROT),
      .xt_rsc_0_1_AWCACHE(xt_rsc_0_1_AWCACHE),
      .xt_rsc_0_1_AWLOCK(xt_rsc_0_1_AWLOCK),
      .xt_rsc_0_1_AWBURST(xt_rsc_0_1_AWBURST),
      .xt_rsc_0_1_AWSIZE(xt_rsc_0_1_AWSIZE),
      .xt_rsc_0_1_AWLEN(xt_rsc_0_1_AWLEN),
      .xt_rsc_0_1_AWADDR(xt_rsc_0_1_AWADDR),
      .xt_rsc_0_1_AWID(xt_rsc_0_1_AWID),
      .xt_rsc_triosy_0_1_lz(xt_rsc_triosy_0_1_lz),
      .xt_rsc_0_2_s_tdone(xt_rsc_0_2_s_tdone),
      .xt_rsc_0_2_tr_write_done(xt_rsc_0_2_tr_write_done),
      .xt_rsc_0_2_RREADY(xt_rsc_0_2_RREADY),
      .xt_rsc_0_2_RVALID(xt_rsc_0_2_RVALID),
      .xt_rsc_0_2_RUSER(xt_rsc_0_2_RUSER),
      .xt_rsc_0_2_RLAST(xt_rsc_0_2_RLAST),
      .xt_rsc_0_2_RRESP(xt_rsc_0_2_RRESP),
      .xt_rsc_0_2_RDATA(xt_rsc_0_2_RDATA),
      .xt_rsc_0_2_RID(xt_rsc_0_2_RID),
      .xt_rsc_0_2_ARREADY(xt_rsc_0_2_ARREADY),
      .xt_rsc_0_2_ARVALID(xt_rsc_0_2_ARVALID),
      .xt_rsc_0_2_ARUSER(xt_rsc_0_2_ARUSER),
      .xt_rsc_0_2_ARREGION(xt_rsc_0_2_ARREGION),
      .xt_rsc_0_2_ARQOS(xt_rsc_0_2_ARQOS),
      .xt_rsc_0_2_ARPROT(xt_rsc_0_2_ARPROT),
      .xt_rsc_0_2_ARCACHE(xt_rsc_0_2_ARCACHE),
      .xt_rsc_0_2_ARLOCK(xt_rsc_0_2_ARLOCK),
      .xt_rsc_0_2_ARBURST(xt_rsc_0_2_ARBURST),
      .xt_rsc_0_2_ARSIZE(xt_rsc_0_2_ARSIZE),
      .xt_rsc_0_2_ARLEN(xt_rsc_0_2_ARLEN),
      .xt_rsc_0_2_ARADDR(xt_rsc_0_2_ARADDR),
      .xt_rsc_0_2_ARID(xt_rsc_0_2_ARID),
      .xt_rsc_0_2_BREADY(xt_rsc_0_2_BREADY),
      .xt_rsc_0_2_BVALID(xt_rsc_0_2_BVALID),
      .xt_rsc_0_2_BUSER(xt_rsc_0_2_BUSER),
      .xt_rsc_0_2_BRESP(xt_rsc_0_2_BRESP),
      .xt_rsc_0_2_BID(xt_rsc_0_2_BID),
      .xt_rsc_0_2_WREADY(xt_rsc_0_2_WREADY),
      .xt_rsc_0_2_WVALID(xt_rsc_0_2_WVALID),
      .xt_rsc_0_2_WUSER(xt_rsc_0_2_WUSER),
      .xt_rsc_0_2_WLAST(xt_rsc_0_2_WLAST),
      .xt_rsc_0_2_WSTRB(xt_rsc_0_2_WSTRB),
      .xt_rsc_0_2_WDATA(xt_rsc_0_2_WDATA),
      .xt_rsc_0_2_AWREADY(xt_rsc_0_2_AWREADY),
      .xt_rsc_0_2_AWVALID(xt_rsc_0_2_AWVALID),
      .xt_rsc_0_2_AWUSER(xt_rsc_0_2_AWUSER),
      .xt_rsc_0_2_AWREGION(xt_rsc_0_2_AWREGION),
      .xt_rsc_0_2_AWQOS(xt_rsc_0_2_AWQOS),
      .xt_rsc_0_2_AWPROT(xt_rsc_0_2_AWPROT),
      .xt_rsc_0_2_AWCACHE(xt_rsc_0_2_AWCACHE),
      .xt_rsc_0_2_AWLOCK(xt_rsc_0_2_AWLOCK),
      .xt_rsc_0_2_AWBURST(xt_rsc_0_2_AWBURST),
      .xt_rsc_0_2_AWSIZE(xt_rsc_0_2_AWSIZE),
      .xt_rsc_0_2_AWLEN(xt_rsc_0_2_AWLEN),
      .xt_rsc_0_2_AWADDR(xt_rsc_0_2_AWADDR),
      .xt_rsc_0_2_AWID(xt_rsc_0_2_AWID),
      .xt_rsc_triosy_0_2_lz(xt_rsc_triosy_0_2_lz),
      .xt_rsc_0_3_s_tdone(xt_rsc_0_3_s_tdone),
      .xt_rsc_0_3_tr_write_done(xt_rsc_0_3_tr_write_done),
      .xt_rsc_0_3_RREADY(xt_rsc_0_3_RREADY),
      .xt_rsc_0_3_RVALID(xt_rsc_0_3_RVALID),
      .xt_rsc_0_3_RUSER(xt_rsc_0_3_RUSER),
      .xt_rsc_0_3_RLAST(xt_rsc_0_3_RLAST),
      .xt_rsc_0_3_RRESP(xt_rsc_0_3_RRESP),
      .xt_rsc_0_3_RDATA(xt_rsc_0_3_RDATA),
      .xt_rsc_0_3_RID(xt_rsc_0_3_RID),
      .xt_rsc_0_3_ARREADY(xt_rsc_0_3_ARREADY),
      .xt_rsc_0_3_ARVALID(xt_rsc_0_3_ARVALID),
      .xt_rsc_0_3_ARUSER(xt_rsc_0_3_ARUSER),
      .xt_rsc_0_3_ARREGION(xt_rsc_0_3_ARREGION),
      .xt_rsc_0_3_ARQOS(xt_rsc_0_3_ARQOS),
      .xt_rsc_0_3_ARPROT(xt_rsc_0_3_ARPROT),
      .xt_rsc_0_3_ARCACHE(xt_rsc_0_3_ARCACHE),
      .xt_rsc_0_3_ARLOCK(xt_rsc_0_3_ARLOCK),
      .xt_rsc_0_3_ARBURST(xt_rsc_0_3_ARBURST),
      .xt_rsc_0_3_ARSIZE(xt_rsc_0_3_ARSIZE),
      .xt_rsc_0_3_ARLEN(xt_rsc_0_3_ARLEN),
      .xt_rsc_0_3_ARADDR(xt_rsc_0_3_ARADDR),
      .xt_rsc_0_3_ARID(xt_rsc_0_3_ARID),
      .xt_rsc_0_3_BREADY(xt_rsc_0_3_BREADY),
      .xt_rsc_0_3_BVALID(xt_rsc_0_3_BVALID),
      .xt_rsc_0_3_BUSER(xt_rsc_0_3_BUSER),
      .xt_rsc_0_3_BRESP(xt_rsc_0_3_BRESP),
      .xt_rsc_0_3_BID(xt_rsc_0_3_BID),
      .xt_rsc_0_3_WREADY(xt_rsc_0_3_WREADY),
      .xt_rsc_0_3_WVALID(xt_rsc_0_3_WVALID),
      .xt_rsc_0_3_WUSER(xt_rsc_0_3_WUSER),
      .xt_rsc_0_3_WLAST(xt_rsc_0_3_WLAST),
      .xt_rsc_0_3_WSTRB(xt_rsc_0_3_WSTRB),
      .xt_rsc_0_3_WDATA(xt_rsc_0_3_WDATA),
      .xt_rsc_0_3_AWREADY(xt_rsc_0_3_AWREADY),
      .xt_rsc_0_3_AWVALID(xt_rsc_0_3_AWVALID),
      .xt_rsc_0_3_AWUSER(xt_rsc_0_3_AWUSER),
      .xt_rsc_0_3_AWREGION(xt_rsc_0_3_AWREGION),
      .xt_rsc_0_3_AWQOS(xt_rsc_0_3_AWQOS),
      .xt_rsc_0_3_AWPROT(xt_rsc_0_3_AWPROT),
      .xt_rsc_0_3_AWCACHE(xt_rsc_0_3_AWCACHE),
      .xt_rsc_0_3_AWLOCK(xt_rsc_0_3_AWLOCK),
      .xt_rsc_0_3_AWBURST(xt_rsc_0_3_AWBURST),
      .xt_rsc_0_3_AWSIZE(xt_rsc_0_3_AWSIZE),
      .xt_rsc_0_3_AWLEN(xt_rsc_0_3_AWLEN),
      .xt_rsc_0_3_AWADDR(xt_rsc_0_3_AWADDR),
      .xt_rsc_0_3_AWID(xt_rsc_0_3_AWID),
      .xt_rsc_triosy_0_3_lz(xt_rsc_triosy_0_3_lz),
      .xt_rsc_0_4_s_tdone(xt_rsc_0_4_s_tdone),
      .xt_rsc_0_4_tr_write_done(xt_rsc_0_4_tr_write_done),
      .xt_rsc_0_4_RREADY(xt_rsc_0_4_RREADY),
      .xt_rsc_0_4_RVALID(xt_rsc_0_4_RVALID),
      .xt_rsc_0_4_RUSER(xt_rsc_0_4_RUSER),
      .xt_rsc_0_4_RLAST(xt_rsc_0_4_RLAST),
      .xt_rsc_0_4_RRESP(xt_rsc_0_4_RRESP),
      .xt_rsc_0_4_RDATA(xt_rsc_0_4_RDATA),
      .xt_rsc_0_4_RID(xt_rsc_0_4_RID),
      .xt_rsc_0_4_ARREADY(xt_rsc_0_4_ARREADY),
      .xt_rsc_0_4_ARVALID(xt_rsc_0_4_ARVALID),
      .xt_rsc_0_4_ARUSER(xt_rsc_0_4_ARUSER),
      .xt_rsc_0_4_ARREGION(xt_rsc_0_4_ARREGION),
      .xt_rsc_0_4_ARQOS(xt_rsc_0_4_ARQOS),
      .xt_rsc_0_4_ARPROT(xt_rsc_0_4_ARPROT),
      .xt_rsc_0_4_ARCACHE(xt_rsc_0_4_ARCACHE),
      .xt_rsc_0_4_ARLOCK(xt_rsc_0_4_ARLOCK),
      .xt_rsc_0_4_ARBURST(xt_rsc_0_4_ARBURST),
      .xt_rsc_0_4_ARSIZE(xt_rsc_0_4_ARSIZE),
      .xt_rsc_0_4_ARLEN(xt_rsc_0_4_ARLEN),
      .xt_rsc_0_4_ARADDR(xt_rsc_0_4_ARADDR),
      .xt_rsc_0_4_ARID(xt_rsc_0_4_ARID),
      .xt_rsc_0_4_BREADY(xt_rsc_0_4_BREADY),
      .xt_rsc_0_4_BVALID(xt_rsc_0_4_BVALID),
      .xt_rsc_0_4_BUSER(xt_rsc_0_4_BUSER),
      .xt_rsc_0_4_BRESP(xt_rsc_0_4_BRESP),
      .xt_rsc_0_4_BID(xt_rsc_0_4_BID),
      .xt_rsc_0_4_WREADY(xt_rsc_0_4_WREADY),
      .xt_rsc_0_4_WVALID(xt_rsc_0_4_WVALID),
      .xt_rsc_0_4_WUSER(xt_rsc_0_4_WUSER),
      .xt_rsc_0_4_WLAST(xt_rsc_0_4_WLAST),
      .xt_rsc_0_4_WSTRB(xt_rsc_0_4_WSTRB),
      .xt_rsc_0_4_WDATA(xt_rsc_0_4_WDATA),
      .xt_rsc_0_4_AWREADY(xt_rsc_0_4_AWREADY),
      .xt_rsc_0_4_AWVALID(xt_rsc_0_4_AWVALID),
      .xt_rsc_0_4_AWUSER(xt_rsc_0_4_AWUSER),
      .xt_rsc_0_4_AWREGION(xt_rsc_0_4_AWREGION),
      .xt_rsc_0_4_AWQOS(xt_rsc_0_4_AWQOS),
      .xt_rsc_0_4_AWPROT(xt_rsc_0_4_AWPROT),
      .xt_rsc_0_4_AWCACHE(xt_rsc_0_4_AWCACHE),
      .xt_rsc_0_4_AWLOCK(xt_rsc_0_4_AWLOCK),
      .xt_rsc_0_4_AWBURST(xt_rsc_0_4_AWBURST),
      .xt_rsc_0_4_AWSIZE(xt_rsc_0_4_AWSIZE),
      .xt_rsc_0_4_AWLEN(xt_rsc_0_4_AWLEN),
      .xt_rsc_0_4_AWADDR(xt_rsc_0_4_AWADDR),
      .xt_rsc_0_4_AWID(xt_rsc_0_4_AWID),
      .xt_rsc_triosy_0_4_lz(xt_rsc_triosy_0_4_lz),
      .xt_rsc_0_5_s_tdone(xt_rsc_0_5_s_tdone),
      .xt_rsc_0_5_tr_write_done(xt_rsc_0_5_tr_write_done),
      .xt_rsc_0_5_RREADY(xt_rsc_0_5_RREADY),
      .xt_rsc_0_5_RVALID(xt_rsc_0_5_RVALID),
      .xt_rsc_0_5_RUSER(xt_rsc_0_5_RUSER),
      .xt_rsc_0_5_RLAST(xt_rsc_0_5_RLAST),
      .xt_rsc_0_5_RRESP(xt_rsc_0_5_RRESP),
      .xt_rsc_0_5_RDATA(xt_rsc_0_5_RDATA),
      .xt_rsc_0_5_RID(xt_rsc_0_5_RID),
      .xt_rsc_0_5_ARREADY(xt_rsc_0_5_ARREADY),
      .xt_rsc_0_5_ARVALID(xt_rsc_0_5_ARVALID),
      .xt_rsc_0_5_ARUSER(xt_rsc_0_5_ARUSER),
      .xt_rsc_0_5_ARREGION(xt_rsc_0_5_ARREGION),
      .xt_rsc_0_5_ARQOS(xt_rsc_0_5_ARQOS),
      .xt_rsc_0_5_ARPROT(xt_rsc_0_5_ARPROT),
      .xt_rsc_0_5_ARCACHE(xt_rsc_0_5_ARCACHE),
      .xt_rsc_0_5_ARLOCK(xt_rsc_0_5_ARLOCK),
      .xt_rsc_0_5_ARBURST(xt_rsc_0_5_ARBURST),
      .xt_rsc_0_5_ARSIZE(xt_rsc_0_5_ARSIZE),
      .xt_rsc_0_5_ARLEN(xt_rsc_0_5_ARLEN),
      .xt_rsc_0_5_ARADDR(xt_rsc_0_5_ARADDR),
      .xt_rsc_0_5_ARID(xt_rsc_0_5_ARID),
      .xt_rsc_0_5_BREADY(xt_rsc_0_5_BREADY),
      .xt_rsc_0_5_BVALID(xt_rsc_0_5_BVALID),
      .xt_rsc_0_5_BUSER(xt_rsc_0_5_BUSER),
      .xt_rsc_0_5_BRESP(xt_rsc_0_5_BRESP),
      .xt_rsc_0_5_BID(xt_rsc_0_5_BID),
      .xt_rsc_0_5_WREADY(xt_rsc_0_5_WREADY),
      .xt_rsc_0_5_WVALID(xt_rsc_0_5_WVALID),
      .xt_rsc_0_5_WUSER(xt_rsc_0_5_WUSER),
      .xt_rsc_0_5_WLAST(xt_rsc_0_5_WLAST),
      .xt_rsc_0_5_WSTRB(xt_rsc_0_5_WSTRB),
      .xt_rsc_0_5_WDATA(xt_rsc_0_5_WDATA),
      .xt_rsc_0_5_AWREADY(xt_rsc_0_5_AWREADY),
      .xt_rsc_0_5_AWVALID(xt_rsc_0_5_AWVALID),
      .xt_rsc_0_5_AWUSER(xt_rsc_0_5_AWUSER),
      .xt_rsc_0_5_AWREGION(xt_rsc_0_5_AWREGION),
      .xt_rsc_0_5_AWQOS(xt_rsc_0_5_AWQOS),
      .xt_rsc_0_5_AWPROT(xt_rsc_0_5_AWPROT),
      .xt_rsc_0_5_AWCACHE(xt_rsc_0_5_AWCACHE),
      .xt_rsc_0_5_AWLOCK(xt_rsc_0_5_AWLOCK),
      .xt_rsc_0_5_AWBURST(xt_rsc_0_5_AWBURST),
      .xt_rsc_0_5_AWSIZE(xt_rsc_0_5_AWSIZE),
      .xt_rsc_0_5_AWLEN(xt_rsc_0_5_AWLEN),
      .xt_rsc_0_5_AWADDR(xt_rsc_0_5_AWADDR),
      .xt_rsc_0_5_AWID(xt_rsc_0_5_AWID),
      .xt_rsc_triosy_0_5_lz(xt_rsc_triosy_0_5_lz),
      .xt_rsc_0_6_s_tdone(xt_rsc_0_6_s_tdone),
      .xt_rsc_0_6_tr_write_done(xt_rsc_0_6_tr_write_done),
      .xt_rsc_0_6_RREADY(xt_rsc_0_6_RREADY),
      .xt_rsc_0_6_RVALID(xt_rsc_0_6_RVALID),
      .xt_rsc_0_6_RUSER(xt_rsc_0_6_RUSER),
      .xt_rsc_0_6_RLAST(xt_rsc_0_6_RLAST),
      .xt_rsc_0_6_RRESP(xt_rsc_0_6_RRESP),
      .xt_rsc_0_6_RDATA(xt_rsc_0_6_RDATA),
      .xt_rsc_0_6_RID(xt_rsc_0_6_RID),
      .xt_rsc_0_6_ARREADY(xt_rsc_0_6_ARREADY),
      .xt_rsc_0_6_ARVALID(xt_rsc_0_6_ARVALID),
      .xt_rsc_0_6_ARUSER(xt_rsc_0_6_ARUSER),
      .xt_rsc_0_6_ARREGION(xt_rsc_0_6_ARREGION),
      .xt_rsc_0_6_ARQOS(xt_rsc_0_6_ARQOS),
      .xt_rsc_0_6_ARPROT(xt_rsc_0_6_ARPROT),
      .xt_rsc_0_6_ARCACHE(xt_rsc_0_6_ARCACHE),
      .xt_rsc_0_6_ARLOCK(xt_rsc_0_6_ARLOCK),
      .xt_rsc_0_6_ARBURST(xt_rsc_0_6_ARBURST),
      .xt_rsc_0_6_ARSIZE(xt_rsc_0_6_ARSIZE),
      .xt_rsc_0_6_ARLEN(xt_rsc_0_6_ARLEN),
      .xt_rsc_0_6_ARADDR(xt_rsc_0_6_ARADDR),
      .xt_rsc_0_6_ARID(xt_rsc_0_6_ARID),
      .xt_rsc_0_6_BREADY(xt_rsc_0_6_BREADY),
      .xt_rsc_0_6_BVALID(xt_rsc_0_6_BVALID),
      .xt_rsc_0_6_BUSER(xt_rsc_0_6_BUSER),
      .xt_rsc_0_6_BRESP(xt_rsc_0_6_BRESP),
      .xt_rsc_0_6_BID(xt_rsc_0_6_BID),
      .xt_rsc_0_6_WREADY(xt_rsc_0_6_WREADY),
      .xt_rsc_0_6_WVALID(xt_rsc_0_6_WVALID),
      .xt_rsc_0_6_WUSER(xt_rsc_0_6_WUSER),
      .xt_rsc_0_6_WLAST(xt_rsc_0_6_WLAST),
      .xt_rsc_0_6_WSTRB(xt_rsc_0_6_WSTRB),
      .xt_rsc_0_6_WDATA(xt_rsc_0_6_WDATA),
      .xt_rsc_0_6_AWREADY(xt_rsc_0_6_AWREADY),
      .xt_rsc_0_6_AWVALID(xt_rsc_0_6_AWVALID),
      .xt_rsc_0_6_AWUSER(xt_rsc_0_6_AWUSER),
      .xt_rsc_0_6_AWREGION(xt_rsc_0_6_AWREGION),
      .xt_rsc_0_6_AWQOS(xt_rsc_0_6_AWQOS),
      .xt_rsc_0_6_AWPROT(xt_rsc_0_6_AWPROT),
      .xt_rsc_0_6_AWCACHE(xt_rsc_0_6_AWCACHE),
      .xt_rsc_0_6_AWLOCK(xt_rsc_0_6_AWLOCK),
      .xt_rsc_0_6_AWBURST(xt_rsc_0_6_AWBURST),
      .xt_rsc_0_6_AWSIZE(xt_rsc_0_6_AWSIZE),
      .xt_rsc_0_6_AWLEN(xt_rsc_0_6_AWLEN),
      .xt_rsc_0_6_AWADDR(xt_rsc_0_6_AWADDR),
      .xt_rsc_0_6_AWID(xt_rsc_0_6_AWID),
      .xt_rsc_triosy_0_6_lz(xt_rsc_triosy_0_6_lz),
      .xt_rsc_0_7_s_tdone(xt_rsc_0_7_s_tdone),
      .xt_rsc_0_7_tr_write_done(xt_rsc_0_7_tr_write_done),
      .xt_rsc_0_7_RREADY(xt_rsc_0_7_RREADY),
      .xt_rsc_0_7_RVALID(xt_rsc_0_7_RVALID),
      .xt_rsc_0_7_RUSER(xt_rsc_0_7_RUSER),
      .xt_rsc_0_7_RLAST(xt_rsc_0_7_RLAST),
      .xt_rsc_0_7_RRESP(xt_rsc_0_7_RRESP),
      .xt_rsc_0_7_RDATA(xt_rsc_0_7_RDATA),
      .xt_rsc_0_7_RID(xt_rsc_0_7_RID),
      .xt_rsc_0_7_ARREADY(xt_rsc_0_7_ARREADY),
      .xt_rsc_0_7_ARVALID(xt_rsc_0_7_ARVALID),
      .xt_rsc_0_7_ARUSER(xt_rsc_0_7_ARUSER),
      .xt_rsc_0_7_ARREGION(xt_rsc_0_7_ARREGION),
      .xt_rsc_0_7_ARQOS(xt_rsc_0_7_ARQOS),
      .xt_rsc_0_7_ARPROT(xt_rsc_0_7_ARPROT),
      .xt_rsc_0_7_ARCACHE(xt_rsc_0_7_ARCACHE),
      .xt_rsc_0_7_ARLOCK(xt_rsc_0_7_ARLOCK),
      .xt_rsc_0_7_ARBURST(xt_rsc_0_7_ARBURST),
      .xt_rsc_0_7_ARSIZE(xt_rsc_0_7_ARSIZE),
      .xt_rsc_0_7_ARLEN(xt_rsc_0_7_ARLEN),
      .xt_rsc_0_7_ARADDR(xt_rsc_0_7_ARADDR),
      .xt_rsc_0_7_ARID(xt_rsc_0_7_ARID),
      .xt_rsc_0_7_BREADY(xt_rsc_0_7_BREADY),
      .xt_rsc_0_7_BVALID(xt_rsc_0_7_BVALID),
      .xt_rsc_0_7_BUSER(xt_rsc_0_7_BUSER),
      .xt_rsc_0_7_BRESP(xt_rsc_0_7_BRESP),
      .xt_rsc_0_7_BID(xt_rsc_0_7_BID),
      .xt_rsc_0_7_WREADY(xt_rsc_0_7_WREADY),
      .xt_rsc_0_7_WVALID(xt_rsc_0_7_WVALID),
      .xt_rsc_0_7_WUSER(xt_rsc_0_7_WUSER),
      .xt_rsc_0_7_WLAST(xt_rsc_0_7_WLAST),
      .xt_rsc_0_7_WSTRB(xt_rsc_0_7_WSTRB),
      .xt_rsc_0_7_WDATA(xt_rsc_0_7_WDATA),
      .xt_rsc_0_7_AWREADY(xt_rsc_0_7_AWREADY),
      .xt_rsc_0_7_AWVALID(xt_rsc_0_7_AWVALID),
      .xt_rsc_0_7_AWUSER(xt_rsc_0_7_AWUSER),
      .xt_rsc_0_7_AWREGION(xt_rsc_0_7_AWREGION),
      .xt_rsc_0_7_AWQOS(xt_rsc_0_7_AWQOS),
      .xt_rsc_0_7_AWPROT(xt_rsc_0_7_AWPROT),
      .xt_rsc_0_7_AWCACHE(xt_rsc_0_7_AWCACHE),
      .xt_rsc_0_7_AWLOCK(xt_rsc_0_7_AWLOCK),
      .xt_rsc_0_7_AWBURST(xt_rsc_0_7_AWBURST),
      .xt_rsc_0_7_AWSIZE(xt_rsc_0_7_AWSIZE),
      .xt_rsc_0_7_AWLEN(xt_rsc_0_7_AWLEN),
      .xt_rsc_0_7_AWADDR(xt_rsc_0_7_AWADDR),
      .xt_rsc_0_7_AWID(xt_rsc_0_7_AWID),
      .xt_rsc_triosy_0_7_lz(xt_rsc_triosy_0_7_lz),
      .xt_rsc_0_8_s_tdone(xt_rsc_0_8_s_tdone),
      .xt_rsc_0_8_tr_write_done(xt_rsc_0_8_tr_write_done),
      .xt_rsc_0_8_RREADY(xt_rsc_0_8_RREADY),
      .xt_rsc_0_8_RVALID(xt_rsc_0_8_RVALID),
      .xt_rsc_0_8_RUSER(xt_rsc_0_8_RUSER),
      .xt_rsc_0_8_RLAST(xt_rsc_0_8_RLAST),
      .xt_rsc_0_8_RRESP(xt_rsc_0_8_RRESP),
      .xt_rsc_0_8_RDATA(xt_rsc_0_8_RDATA),
      .xt_rsc_0_8_RID(xt_rsc_0_8_RID),
      .xt_rsc_0_8_ARREADY(xt_rsc_0_8_ARREADY),
      .xt_rsc_0_8_ARVALID(xt_rsc_0_8_ARVALID),
      .xt_rsc_0_8_ARUSER(xt_rsc_0_8_ARUSER),
      .xt_rsc_0_8_ARREGION(xt_rsc_0_8_ARREGION),
      .xt_rsc_0_8_ARQOS(xt_rsc_0_8_ARQOS),
      .xt_rsc_0_8_ARPROT(xt_rsc_0_8_ARPROT),
      .xt_rsc_0_8_ARCACHE(xt_rsc_0_8_ARCACHE),
      .xt_rsc_0_8_ARLOCK(xt_rsc_0_8_ARLOCK),
      .xt_rsc_0_8_ARBURST(xt_rsc_0_8_ARBURST),
      .xt_rsc_0_8_ARSIZE(xt_rsc_0_8_ARSIZE),
      .xt_rsc_0_8_ARLEN(xt_rsc_0_8_ARLEN),
      .xt_rsc_0_8_ARADDR(xt_rsc_0_8_ARADDR),
      .xt_rsc_0_8_ARID(xt_rsc_0_8_ARID),
      .xt_rsc_0_8_BREADY(xt_rsc_0_8_BREADY),
      .xt_rsc_0_8_BVALID(xt_rsc_0_8_BVALID),
      .xt_rsc_0_8_BUSER(xt_rsc_0_8_BUSER),
      .xt_rsc_0_8_BRESP(xt_rsc_0_8_BRESP),
      .xt_rsc_0_8_BID(xt_rsc_0_8_BID),
      .xt_rsc_0_8_WREADY(xt_rsc_0_8_WREADY),
      .xt_rsc_0_8_WVALID(xt_rsc_0_8_WVALID),
      .xt_rsc_0_8_WUSER(xt_rsc_0_8_WUSER),
      .xt_rsc_0_8_WLAST(xt_rsc_0_8_WLAST),
      .xt_rsc_0_8_WSTRB(xt_rsc_0_8_WSTRB),
      .xt_rsc_0_8_WDATA(xt_rsc_0_8_WDATA),
      .xt_rsc_0_8_AWREADY(xt_rsc_0_8_AWREADY),
      .xt_rsc_0_8_AWVALID(xt_rsc_0_8_AWVALID),
      .xt_rsc_0_8_AWUSER(xt_rsc_0_8_AWUSER),
      .xt_rsc_0_8_AWREGION(xt_rsc_0_8_AWREGION),
      .xt_rsc_0_8_AWQOS(xt_rsc_0_8_AWQOS),
      .xt_rsc_0_8_AWPROT(xt_rsc_0_8_AWPROT),
      .xt_rsc_0_8_AWCACHE(xt_rsc_0_8_AWCACHE),
      .xt_rsc_0_8_AWLOCK(xt_rsc_0_8_AWLOCK),
      .xt_rsc_0_8_AWBURST(xt_rsc_0_8_AWBURST),
      .xt_rsc_0_8_AWSIZE(xt_rsc_0_8_AWSIZE),
      .xt_rsc_0_8_AWLEN(xt_rsc_0_8_AWLEN),
      .xt_rsc_0_8_AWADDR(xt_rsc_0_8_AWADDR),
      .xt_rsc_0_8_AWID(xt_rsc_0_8_AWID),
      .xt_rsc_triosy_0_8_lz(xt_rsc_triosy_0_8_lz),
      .xt_rsc_0_9_s_tdone(xt_rsc_0_9_s_tdone),
      .xt_rsc_0_9_tr_write_done(xt_rsc_0_9_tr_write_done),
      .xt_rsc_0_9_RREADY(xt_rsc_0_9_RREADY),
      .xt_rsc_0_9_RVALID(xt_rsc_0_9_RVALID),
      .xt_rsc_0_9_RUSER(xt_rsc_0_9_RUSER),
      .xt_rsc_0_9_RLAST(xt_rsc_0_9_RLAST),
      .xt_rsc_0_9_RRESP(xt_rsc_0_9_RRESP),
      .xt_rsc_0_9_RDATA(xt_rsc_0_9_RDATA),
      .xt_rsc_0_9_RID(xt_rsc_0_9_RID),
      .xt_rsc_0_9_ARREADY(xt_rsc_0_9_ARREADY),
      .xt_rsc_0_9_ARVALID(xt_rsc_0_9_ARVALID),
      .xt_rsc_0_9_ARUSER(xt_rsc_0_9_ARUSER),
      .xt_rsc_0_9_ARREGION(xt_rsc_0_9_ARREGION),
      .xt_rsc_0_9_ARQOS(xt_rsc_0_9_ARQOS),
      .xt_rsc_0_9_ARPROT(xt_rsc_0_9_ARPROT),
      .xt_rsc_0_9_ARCACHE(xt_rsc_0_9_ARCACHE),
      .xt_rsc_0_9_ARLOCK(xt_rsc_0_9_ARLOCK),
      .xt_rsc_0_9_ARBURST(xt_rsc_0_9_ARBURST),
      .xt_rsc_0_9_ARSIZE(xt_rsc_0_9_ARSIZE),
      .xt_rsc_0_9_ARLEN(xt_rsc_0_9_ARLEN),
      .xt_rsc_0_9_ARADDR(xt_rsc_0_9_ARADDR),
      .xt_rsc_0_9_ARID(xt_rsc_0_9_ARID),
      .xt_rsc_0_9_BREADY(xt_rsc_0_9_BREADY),
      .xt_rsc_0_9_BVALID(xt_rsc_0_9_BVALID),
      .xt_rsc_0_9_BUSER(xt_rsc_0_9_BUSER),
      .xt_rsc_0_9_BRESP(xt_rsc_0_9_BRESP),
      .xt_rsc_0_9_BID(xt_rsc_0_9_BID),
      .xt_rsc_0_9_WREADY(xt_rsc_0_9_WREADY),
      .xt_rsc_0_9_WVALID(xt_rsc_0_9_WVALID),
      .xt_rsc_0_9_WUSER(xt_rsc_0_9_WUSER),
      .xt_rsc_0_9_WLAST(xt_rsc_0_9_WLAST),
      .xt_rsc_0_9_WSTRB(xt_rsc_0_9_WSTRB),
      .xt_rsc_0_9_WDATA(xt_rsc_0_9_WDATA),
      .xt_rsc_0_9_AWREADY(xt_rsc_0_9_AWREADY),
      .xt_rsc_0_9_AWVALID(xt_rsc_0_9_AWVALID),
      .xt_rsc_0_9_AWUSER(xt_rsc_0_9_AWUSER),
      .xt_rsc_0_9_AWREGION(xt_rsc_0_9_AWREGION),
      .xt_rsc_0_9_AWQOS(xt_rsc_0_9_AWQOS),
      .xt_rsc_0_9_AWPROT(xt_rsc_0_9_AWPROT),
      .xt_rsc_0_9_AWCACHE(xt_rsc_0_9_AWCACHE),
      .xt_rsc_0_9_AWLOCK(xt_rsc_0_9_AWLOCK),
      .xt_rsc_0_9_AWBURST(xt_rsc_0_9_AWBURST),
      .xt_rsc_0_9_AWSIZE(xt_rsc_0_9_AWSIZE),
      .xt_rsc_0_9_AWLEN(xt_rsc_0_9_AWLEN),
      .xt_rsc_0_9_AWADDR(xt_rsc_0_9_AWADDR),
      .xt_rsc_0_9_AWID(xt_rsc_0_9_AWID),
      .xt_rsc_triosy_0_9_lz(xt_rsc_triosy_0_9_lz),
      .xt_rsc_0_10_s_tdone(xt_rsc_0_10_s_tdone),
      .xt_rsc_0_10_tr_write_done(xt_rsc_0_10_tr_write_done),
      .xt_rsc_0_10_RREADY(xt_rsc_0_10_RREADY),
      .xt_rsc_0_10_RVALID(xt_rsc_0_10_RVALID),
      .xt_rsc_0_10_RUSER(xt_rsc_0_10_RUSER),
      .xt_rsc_0_10_RLAST(xt_rsc_0_10_RLAST),
      .xt_rsc_0_10_RRESP(xt_rsc_0_10_RRESP),
      .xt_rsc_0_10_RDATA(xt_rsc_0_10_RDATA),
      .xt_rsc_0_10_RID(xt_rsc_0_10_RID),
      .xt_rsc_0_10_ARREADY(xt_rsc_0_10_ARREADY),
      .xt_rsc_0_10_ARVALID(xt_rsc_0_10_ARVALID),
      .xt_rsc_0_10_ARUSER(xt_rsc_0_10_ARUSER),
      .xt_rsc_0_10_ARREGION(xt_rsc_0_10_ARREGION),
      .xt_rsc_0_10_ARQOS(xt_rsc_0_10_ARQOS),
      .xt_rsc_0_10_ARPROT(xt_rsc_0_10_ARPROT),
      .xt_rsc_0_10_ARCACHE(xt_rsc_0_10_ARCACHE),
      .xt_rsc_0_10_ARLOCK(xt_rsc_0_10_ARLOCK),
      .xt_rsc_0_10_ARBURST(xt_rsc_0_10_ARBURST),
      .xt_rsc_0_10_ARSIZE(xt_rsc_0_10_ARSIZE),
      .xt_rsc_0_10_ARLEN(xt_rsc_0_10_ARLEN),
      .xt_rsc_0_10_ARADDR(xt_rsc_0_10_ARADDR),
      .xt_rsc_0_10_ARID(xt_rsc_0_10_ARID),
      .xt_rsc_0_10_BREADY(xt_rsc_0_10_BREADY),
      .xt_rsc_0_10_BVALID(xt_rsc_0_10_BVALID),
      .xt_rsc_0_10_BUSER(xt_rsc_0_10_BUSER),
      .xt_rsc_0_10_BRESP(xt_rsc_0_10_BRESP),
      .xt_rsc_0_10_BID(xt_rsc_0_10_BID),
      .xt_rsc_0_10_WREADY(xt_rsc_0_10_WREADY),
      .xt_rsc_0_10_WVALID(xt_rsc_0_10_WVALID),
      .xt_rsc_0_10_WUSER(xt_rsc_0_10_WUSER),
      .xt_rsc_0_10_WLAST(xt_rsc_0_10_WLAST),
      .xt_rsc_0_10_WSTRB(xt_rsc_0_10_WSTRB),
      .xt_rsc_0_10_WDATA(xt_rsc_0_10_WDATA),
      .xt_rsc_0_10_AWREADY(xt_rsc_0_10_AWREADY),
      .xt_rsc_0_10_AWVALID(xt_rsc_0_10_AWVALID),
      .xt_rsc_0_10_AWUSER(xt_rsc_0_10_AWUSER),
      .xt_rsc_0_10_AWREGION(xt_rsc_0_10_AWREGION),
      .xt_rsc_0_10_AWQOS(xt_rsc_0_10_AWQOS),
      .xt_rsc_0_10_AWPROT(xt_rsc_0_10_AWPROT),
      .xt_rsc_0_10_AWCACHE(xt_rsc_0_10_AWCACHE),
      .xt_rsc_0_10_AWLOCK(xt_rsc_0_10_AWLOCK),
      .xt_rsc_0_10_AWBURST(xt_rsc_0_10_AWBURST),
      .xt_rsc_0_10_AWSIZE(xt_rsc_0_10_AWSIZE),
      .xt_rsc_0_10_AWLEN(xt_rsc_0_10_AWLEN),
      .xt_rsc_0_10_AWADDR(xt_rsc_0_10_AWADDR),
      .xt_rsc_0_10_AWID(xt_rsc_0_10_AWID),
      .xt_rsc_triosy_0_10_lz(xt_rsc_triosy_0_10_lz),
      .xt_rsc_0_11_s_tdone(xt_rsc_0_11_s_tdone),
      .xt_rsc_0_11_tr_write_done(xt_rsc_0_11_tr_write_done),
      .xt_rsc_0_11_RREADY(xt_rsc_0_11_RREADY),
      .xt_rsc_0_11_RVALID(xt_rsc_0_11_RVALID),
      .xt_rsc_0_11_RUSER(xt_rsc_0_11_RUSER),
      .xt_rsc_0_11_RLAST(xt_rsc_0_11_RLAST),
      .xt_rsc_0_11_RRESP(xt_rsc_0_11_RRESP),
      .xt_rsc_0_11_RDATA(xt_rsc_0_11_RDATA),
      .xt_rsc_0_11_RID(xt_rsc_0_11_RID),
      .xt_rsc_0_11_ARREADY(xt_rsc_0_11_ARREADY),
      .xt_rsc_0_11_ARVALID(xt_rsc_0_11_ARVALID),
      .xt_rsc_0_11_ARUSER(xt_rsc_0_11_ARUSER),
      .xt_rsc_0_11_ARREGION(xt_rsc_0_11_ARREGION),
      .xt_rsc_0_11_ARQOS(xt_rsc_0_11_ARQOS),
      .xt_rsc_0_11_ARPROT(xt_rsc_0_11_ARPROT),
      .xt_rsc_0_11_ARCACHE(xt_rsc_0_11_ARCACHE),
      .xt_rsc_0_11_ARLOCK(xt_rsc_0_11_ARLOCK),
      .xt_rsc_0_11_ARBURST(xt_rsc_0_11_ARBURST),
      .xt_rsc_0_11_ARSIZE(xt_rsc_0_11_ARSIZE),
      .xt_rsc_0_11_ARLEN(xt_rsc_0_11_ARLEN),
      .xt_rsc_0_11_ARADDR(xt_rsc_0_11_ARADDR),
      .xt_rsc_0_11_ARID(xt_rsc_0_11_ARID),
      .xt_rsc_0_11_BREADY(xt_rsc_0_11_BREADY),
      .xt_rsc_0_11_BVALID(xt_rsc_0_11_BVALID),
      .xt_rsc_0_11_BUSER(xt_rsc_0_11_BUSER),
      .xt_rsc_0_11_BRESP(xt_rsc_0_11_BRESP),
      .xt_rsc_0_11_BID(xt_rsc_0_11_BID),
      .xt_rsc_0_11_WREADY(xt_rsc_0_11_WREADY),
      .xt_rsc_0_11_WVALID(xt_rsc_0_11_WVALID),
      .xt_rsc_0_11_WUSER(xt_rsc_0_11_WUSER),
      .xt_rsc_0_11_WLAST(xt_rsc_0_11_WLAST),
      .xt_rsc_0_11_WSTRB(xt_rsc_0_11_WSTRB),
      .xt_rsc_0_11_WDATA(xt_rsc_0_11_WDATA),
      .xt_rsc_0_11_AWREADY(xt_rsc_0_11_AWREADY),
      .xt_rsc_0_11_AWVALID(xt_rsc_0_11_AWVALID),
      .xt_rsc_0_11_AWUSER(xt_rsc_0_11_AWUSER),
      .xt_rsc_0_11_AWREGION(xt_rsc_0_11_AWREGION),
      .xt_rsc_0_11_AWQOS(xt_rsc_0_11_AWQOS),
      .xt_rsc_0_11_AWPROT(xt_rsc_0_11_AWPROT),
      .xt_rsc_0_11_AWCACHE(xt_rsc_0_11_AWCACHE),
      .xt_rsc_0_11_AWLOCK(xt_rsc_0_11_AWLOCK),
      .xt_rsc_0_11_AWBURST(xt_rsc_0_11_AWBURST),
      .xt_rsc_0_11_AWSIZE(xt_rsc_0_11_AWSIZE),
      .xt_rsc_0_11_AWLEN(xt_rsc_0_11_AWLEN),
      .xt_rsc_0_11_AWADDR(xt_rsc_0_11_AWADDR),
      .xt_rsc_0_11_AWID(xt_rsc_0_11_AWID),
      .xt_rsc_triosy_0_11_lz(xt_rsc_triosy_0_11_lz),
      .xt_rsc_0_12_s_tdone(xt_rsc_0_12_s_tdone),
      .xt_rsc_0_12_tr_write_done(xt_rsc_0_12_tr_write_done),
      .xt_rsc_0_12_RREADY(xt_rsc_0_12_RREADY),
      .xt_rsc_0_12_RVALID(xt_rsc_0_12_RVALID),
      .xt_rsc_0_12_RUSER(xt_rsc_0_12_RUSER),
      .xt_rsc_0_12_RLAST(xt_rsc_0_12_RLAST),
      .xt_rsc_0_12_RRESP(xt_rsc_0_12_RRESP),
      .xt_rsc_0_12_RDATA(xt_rsc_0_12_RDATA),
      .xt_rsc_0_12_RID(xt_rsc_0_12_RID),
      .xt_rsc_0_12_ARREADY(xt_rsc_0_12_ARREADY),
      .xt_rsc_0_12_ARVALID(xt_rsc_0_12_ARVALID),
      .xt_rsc_0_12_ARUSER(xt_rsc_0_12_ARUSER),
      .xt_rsc_0_12_ARREGION(xt_rsc_0_12_ARREGION),
      .xt_rsc_0_12_ARQOS(xt_rsc_0_12_ARQOS),
      .xt_rsc_0_12_ARPROT(xt_rsc_0_12_ARPROT),
      .xt_rsc_0_12_ARCACHE(xt_rsc_0_12_ARCACHE),
      .xt_rsc_0_12_ARLOCK(xt_rsc_0_12_ARLOCK),
      .xt_rsc_0_12_ARBURST(xt_rsc_0_12_ARBURST),
      .xt_rsc_0_12_ARSIZE(xt_rsc_0_12_ARSIZE),
      .xt_rsc_0_12_ARLEN(xt_rsc_0_12_ARLEN),
      .xt_rsc_0_12_ARADDR(xt_rsc_0_12_ARADDR),
      .xt_rsc_0_12_ARID(xt_rsc_0_12_ARID),
      .xt_rsc_0_12_BREADY(xt_rsc_0_12_BREADY),
      .xt_rsc_0_12_BVALID(xt_rsc_0_12_BVALID),
      .xt_rsc_0_12_BUSER(xt_rsc_0_12_BUSER),
      .xt_rsc_0_12_BRESP(xt_rsc_0_12_BRESP),
      .xt_rsc_0_12_BID(xt_rsc_0_12_BID),
      .xt_rsc_0_12_WREADY(xt_rsc_0_12_WREADY),
      .xt_rsc_0_12_WVALID(xt_rsc_0_12_WVALID),
      .xt_rsc_0_12_WUSER(xt_rsc_0_12_WUSER),
      .xt_rsc_0_12_WLAST(xt_rsc_0_12_WLAST),
      .xt_rsc_0_12_WSTRB(xt_rsc_0_12_WSTRB),
      .xt_rsc_0_12_WDATA(xt_rsc_0_12_WDATA),
      .xt_rsc_0_12_AWREADY(xt_rsc_0_12_AWREADY),
      .xt_rsc_0_12_AWVALID(xt_rsc_0_12_AWVALID),
      .xt_rsc_0_12_AWUSER(xt_rsc_0_12_AWUSER),
      .xt_rsc_0_12_AWREGION(xt_rsc_0_12_AWREGION),
      .xt_rsc_0_12_AWQOS(xt_rsc_0_12_AWQOS),
      .xt_rsc_0_12_AWPROT(xt_rsc_0_12_AWPROT),
      .xt_rsc_0_12_AWCACHE(xt_rsc_0_12_AWCACHE),
      .xt_rsc_0_12_AWLOCK(xt_rsc_0_12_AWLOCK),
      .xt_rsc_0_12_AWBURST(xt_rsc_0_12_AWBURST),
      .xt_rsc_0_12_AWSIZE(xt_rsc_0_12_AWSIZE),
      .xt_rsc_0_12_AWLEN(xt_rsc_0_12_AWLEN),
      .xt_rsc_0_12_AWADDR(xt_rsc_0_12_AWADDR),
      .xt_rsc_0_12_AWID(xt_rsc_0_12_AWID),
      .xt_rsc_triosy_0_12_lz(xt_rsc_triosy_0_12_lz),
      .xt_rsc_0_13_s_tdone(xt_rsc_0_13_s_tdone),
      .xt_rsc_0_13_tr_write_done(xt_rsc_0_13_tr_write_done),
      .xt_rsc_0_13_RREADY(xt_rsc_0_13_RREADY),
      .xt_rsc_0_13_RVALID(xt_rsc_0_13_RVALID),
      .xt_rsc_0_13_RUSER(xt_rsc_0_13_RUSER),
      .xt_rsc_0_13_RLAST(xt_rsc_0_13_RLAST),
      .xt_rsc_0_13_RRESP(xt_rsc_0_13_RRESP),
      .xt_rsc_0_13_RDATA(xt_rsc_0_13_RDATA),
      .xt_rsc_0_13_RID(xt_rsc_0_13_RID),
      .xt_rsc_0_13_ARREADY(xt_rsc_0_13_ARREADY),
      .xt_rsc_0_13_ARVALID(xt_rsc_0_13_ARVALID),
      .xt_rsc_0_13_ARUSER(xt_rsc_0_13_ARUSER),
      .xt_rsc_0_13_ARREGION(xt_rsc_0_13_ARREGION),
      .xt_rsc_0_13_ARQOS(xt_rsc_0_13_ARQOS),
      .xt_rsc_0_13_ARPROT(xt_rsc_0_13_ARPROT),
      .xt_rsc_0_13_ARCACHE(xt_rsc_0_13_ARCACHE),
      .xt_rsc_0_13_ARLOCK(xt_rsc_0_13_ARLOCK),
      .xt_rsc_0_13_ARBURST(xt_rsc_0_13_ARBURST),
      .xt_rsc_0_13_ARSIZE(xt_rsc_0_13_ARSIZE),
      .xt_rsc_0_13_ARLEN(xt_rsc_0_13_ARLEN),
      .xt_rsc_0_13_ARADDR(xt_rsc_0_13_ARADDR),
      .xt_rsc_0_13_ARID(xt_rsc_0_13_ARID),
      .xt_rsc_0_13_BREADY(xt_rsc_0_13_BREADY),
      .xt_rsc_0_13_BVALID(xt_rsc_0_13_BVALID),
      .xt_rsc_0_13_BUSER(xt_rsc_0_13_BUSER),
      .xt_rsc_0_13_BRESP(xt_rsc_0_13_BRESP),
      .xt_rsc_0_13_BID(xt_rsc_0_13_BID),
      .xt_rsc_0_13_WREADY(xt_rsc_0_13_WREADY),
      .xt_rsc_0_13_WVALID(xt_rsc_0_13_WVALID),
      .xt_rsc_0_13_WUSER(xt_rsc_0_13_WUSER),
      .xt_rsc_0_13_WLAST(xt_rsc_0_13_WLAST),
      .xt_rsc_0_13_WSTRB(xt_rsc_0_13_WSTRB),
      .xt_rsc_0_13_WDATA(xt_rsc_0_13_WDATA),
      .xt_rsc_0_13_AWREADY(xt_rsc_0_13_AWREADY),
      .xt_rsc_0_13_AWVALID(xt_rsc_0_13_AWVALID),
      .xt_rsc_0_13_AWUSER(xt_rsc_0_13_AWUSER),
      .xt_rsc_0_13_AWREGION(xt_rsc_0_13_AWREGION),
      .xt_rsc_0_13_AWQOS(xt_rsc_0_13_AWQOS),
      .xt_rsc_0_13_AWPROT(xt_rsc_0_13_AWPROT),
      .xt_rsc_0_13_AWCACHE(xt_rsc_0_13_AWCACHE),
      .xt_rsc_0_13_AWLOCK(xt_rsc_0_13_AWLOCK),
      .xt_rsc_0_13_AWBURST(xt_rsc_0_13_AWBURST),
      .xt_rsc_0_13_AWSIZE(xt_rsc_0_13_AWSIZE),
      .xt_rsc_0_13_AWLEN(xt_rsc_0_13_AWLEN),
      .xt_rsc_0_13_AWADDR(xt_rsc_0_13_AWADDR),
      .xt_rsc_0_13_AWID(xt_rsc_0_13_AWID),
      .xt_rsc_triosy_0_13_lz(xt_rsc_triosy_0_13_lz),
      .xt_rsc_0_14_s_tdone(xt_rsc_0_14_s_tdone),
      .xt_rsc_0_14_tr_write_done(xt_rsc_0_14_tr_write_done),
      .xt_rsc_0_14_RREADY(xt_rsc_0_14_RREADY),
      .xt_rsc_0_14_RVALID(xt_rsc_0_14_RVALID),
      .xt_rsc_0_14_RUSER(xt_rsc_0_14_RUSER),
      .xt_rsc_0_14_RLAST(xt_rsc_0_14_RLAST),
      .xt_rsc_0_14_RRESP(xt_rsc_0_14_RRESP),
      .xt_rsc_0_14_RDATA(xt_rsc_0_14_RDATA),
      .xt_rsc_0_14_RID(xt_rsc_0_14_RID),
      .xt_rsc_0_14_ARREADY(xt_rsc_0_14_ARREADY),
      .xt_rsc_0_14_ARVALID(xt_rsc_0_14_ARVALID),
      .xt_rsc_0_14_ARUSER(xt_rsc_0_14_ARUSER),
      .xt_rsc_0_14_ARREGION(xt_rsc_0_14_ARREGION),
      .xt_rsc_0_14_ARQOS(xt_rsc_0_14_ARQOS),
      .xt_rsc_0_14_ARPROT(xt_rsc_0_14_ARPROT),
      .xt_rsc_0_14_ARCACHE(xt_rsc_0_14_ARCACHE),
      .xt_rsc_0_14_ARLOCK(xt_rsc_0_14_ARLOCK),
      .xt_rsc_0_14_ARBURST(xt_rsc_0_14_ARBURST),
      .xt_rsc_0_14_ARSIZE(xt_rsc_0_14_ARSIZE),
      .xt_rsc_0_14_ARLEN(xt_rsc_0_14_ARLEN),
      .xt_rsc_0_14_ARADDR(xt_rsc_0_14_ARADDR),
      .xt_rsc_0_14_ARID(xt_rsc_0_14_ARID),
      .xt_rsc_0_14_BREADY(xt_rsc_0_14_BREADY),
      .xt_rsc_0_14_BVALID(xt_rsc_0_14_BVALID),
      .xt_rsc_0_14_BUSER(xt_rsc_0_14_BUSER),
      .xt_rsc_0_14_BRESP(xt_rsc_0_14_BRESP),
      .xt_rsc_0_14_BID(xt_rsc_0_14_BID),
      .xt_rsc_0_14_WREADY(xt_rsc_0_14_WREADY),
      .xt_rsc_0_14_WVALID(xt_rsc_0_14_WVALID),
      .xt_rsc_0_14_WUSER(xt_rsc_0_14_WUSER),
      .xt_rsc_0_14_WLAST(xt_rsc_0_14_WLAST),
      .xt_rsc_0_14_WSTRB(xt_rsc_0_14_WSTRB),
      .xt_rsc_0_14_WDATA(xt_rsc_0_14_WDATA),
      .xt_rsc_0_14_AWREADY(xt_rsc_0_14_AWREADY),
      .xt_rsc_0_14_AWVALID(xt_rsc_0_14_AWVALID),
      .xt_rsc_0_14_AWUSER(xt_rsc_0_14_AWUSER),
      .xt_rsc_0_14_AWREGION(xt_rsc_0_14_AWREGION),
      .xt_rsc_0_14_AWQOS(xt_rsc_0_14_AWQOS),
      .xt_rsc_0_14_AWPROT(xt_rsc_0_14_AWPROT),
      .xt_rsc_0_14_AWCACHE(xt_rsc_0_14_AWCACHE),
      .xt_rsc_0_14_AWLOCK(xt_rsc_0_14_AWLOCK),
      .xt_rsc_0_14_AWBURST(xt_rsc_0_14_AWBURST),
      .xt_rsc_0_14_AWSIZE(xt_rsc_0_14_AWSIZE),
      .xt_rsc_0_14_AWLEN(xt_rsc_0_14_AWLEN),
      .xt_rsc_0_14_AWADDR(xt_rsc_0_14_AWADDR),
      .xt_rsc_0_14_AWID(xt_rsc_0_14_AWID),
      .xt_rsc_triosy_0_14_lz(xt_rsc_triosy_0_14_lz),
      .xt_rsc_0_15_s_tdone(xt_rsc_0_15_s_tdone),
      .xt_rsc_0_15_tr_write_done(xt_rsc_0_15_tr_write_done),
      .xt_rsc_0_15_RREADY(xt_rsc_0_15_RREADY),
      .xt_rsc_0_15_RVALID(xt_rsc_0_15_RVALID),
      .xt_rsc_0_15_RUSER(xt_rsc_0_15_RUSER),
      .xt_rsc_0_15_RLAST(xt_rsc_0_15_RLAST),
      .xt_rsc_0_15_RRESP(xt_rsc_0_15_RRESP),
      .xt_rsc_0_15_RDATA(xt_rsc_0_15_RDATA),
      .xt_rsc_0_15_RID(xt_rsc_0_15_RID),
      .xt_rsc_0_15_ARREADY(xt_rsc_0_15_ARREADY),
      .xt_rsc_0_15_ARVALID(xt_rsc_0_15_ARVALID),
      .xt_rsc_0_15_ARUSER(xt_rsc_0_15_ARUSER),
      .xt_rsc_0_15_ARREGION(xt_rsc_0_15_ARREGION),
      .xt_rsc_0_15_ARQOS(xt_rsc_0_15_ARQOS),
      .xt_rsc_0_15_ARPROT(xt_rsc_0_15_ARPROT),
      .xt_rsc_0_15_ARCACHE(xt_rsc_0_15_ARCACHE),
      .xt_rsc_0_15_ARLOCK(xt_rsc_0_15_ARLOCK),
      .xt_rsc_0_15_ARBURST(xt_rsc_0_15_ARBURST),
      .xt_rsc_0_15_ARSIZE(xt_rsc_0_15_ARSIZE),
      .xt_rsc_0_15_ARLEN(xt_rsc_0_15_ARLEN),
      .xt_rsc_0_15_ARADDR(xt_rsc_0_15_ARADDR),
      .xt_rsc_0_15_ARID(xt_rsc_0_15_ARID),
      .xt_rsc_0_15_BREADY(xt_rsc_0_15_BREADY),
      .xt_rsc_0_15_BVALID(xt_rsc_0_15_BVALID),
      .xt_rsc_0_15_BUSER(xt_rsc_0_15_BUSER),
      .xt_rsc_0_15_BRESP(xt_rsc_0_15_BRESP),
      .xt_rsc_0_15_BID(xt_rsc_0_15_BID),
      .xt_rsc_0_15_WREADY(xt_rsc_0_15_WREADY),
      .xt_rsc_0_15_WVALID(xt_rsc_0_15_WVALID),
      .xt_rsc_0_15_WUSER(xt_rsc_0_15_WUSER),
      .xt_rsc_0_15_WLAST(xt_rsc_0_15_WLAST),
      .xt_rsc_0_15_WSTRB(xt_rsc_0_15_WSTRB),
      .xt_rsc_0_15_WDATA(xt_rsc_0_15_WDATA),
      .xt_rsc_0_15_AWREADY(xt_rsc_0_15_AWREADY),
      .xt_rsc_0_15_AWVALID(xt_rsc_0_15_AWVALID),
      .xt_rsc_0_15_AWUSER(xt_rsc_0_15_AWUSER),
      .xt_rsc_0_15_AWREGION(xt_rsc_0_15_AWREGION),
      .xt_rsc_0_15_AWQOS(xt_rsc_0_15_AWQOS),
      .xt_rsc_0_15_AWPROT(xt_rsc_0_15_AWPROT),
      .xt_rsc_0_15_AWCACHE(xt_rsc_0_15_AWCACHE),
      .xt_rsc_0_15_AWLOCK(xt_rsc_0_15_AWLOCK),
      .xt_rsc_0_15_AWBURST(xt_rsc_0_15_AWBURST),
      .xt_rsc_0_15_AWSIZE(xt_rsc_0_15_AWSIZE),
      .xt_rsc_0_15_AWLEN(xt_rsc_0_15_AWLEN),
      .xt_rsc_0_15_AWADDR(xt_rsc_0_15_AWADDR),
      .xt_rsc_0_15_AWID(xt_rsc_0_15_AWID),
      .xt_rsc_triosy_0_15_lz(xt_rsc_triosy_0_15_lz),
      .xt_rsc_0_16_s_tdone(xt_rsc_0_16_s_tdone),
      .xt_rsc_0_16_tr_write_done(xt_rsc_0_16_tr_write_done),
      .xt_rsc_0_16_RREADY(xt_rsc_0_16_RREADY),
      .xt_rsc_0_16_RVALID(xt_rsc_0_16_RVALID),
      .xt_rsc_0_16_RUSER(xt_rsc_0_16_RUSER),
      .xt_rsc_0_16_RLAST(xt_rsc_0_16_RLAST),
      .xt_rsc_0_16_RRESP(xt_rsc_0_16_RRESP),
      .xt_rsc_0_16_RDATA(xt_rsc_0_16_RDATA),
      .xt_rsc_0_16_RID(xt_rsc_0_16_RID),
      .xt_rsc_0_16_ARREADY(xt_rsc_0_16_ARREADY),
      .xt_rsc_0_16_ARVALID(xt_rsc_0_16_ARVALID),
      .xt_rsc_0_16_ARUSER(xt_rsc_0_16_ARUSER),
      .xt_rsc_0_16_ARREGION(xt_rsc_0_16_ARREGION),
      .xt_rsc_0_16_ARQOS(xt_rsc_0_16_ARQOS),
      .xt_rsc_0_16_ARPROT(xt_rsc_0_16_ARPROT),
      .xt_rsc_0_16_ARCACHE(xt_rsc_0_16_ARCACHE),
      .xt_rsc_0_16_ARLOCK(xt_rsc_0_16_ARLOCK),
      .xt_rsc_0_16_ARBURST(xt_rsc_0_16_ARBURST),
      .xt_rsc_0_16_ARSIZE(xt_rsc_0_16_ARSIZE),
      .xt_rsc_0_16_ARLEN(xt_rsc_0_16_ARLEN),
      .xt_rsc_0_16_ARADDR(xt_rsc_0_16_ARADDR),
      .xt_rsc_0_16_ARID(xt_rsc_0_16_ARID),
      .xt_rsc_0_16_BREADY(xt_rsc_0_16_BREADY),
      .xt_rsc_0_16_BVALID(xt_rsc_0_16_BVALID),
      .xt_rsc_0_16_BUSER(xt_rsc_0_16_BUSER),
      .xt_rsc_0_16_BRESP(xt_rsc_0_16_BRESP),
      .xt_rsc_0_16_BID(xt_rsc_0_16_BID),
      .xt_rsc_0_16_WREADY(xt_rsc_0_16_WREADY),
      .xt_rsc_0_16_WVALID(xt_rsc_0_16_WVALID),
      .xt_rsc_0_16_WUSER(xt_rsc_0_16_WUSER),
      .xt_rsc_0_16_WLAST(xt_rsc_0_16_WLAST),
      .xt_rsc_0_16_WSTRB(xt_rsc_0_16_WSTRB),
      .xt_rsc_0_16_WDATA(xt_rsc_0_16_WDATA),
      .xt_rsc_0_16_AWREADY(xt_rsc_0_16_AWREADY),
      .xt_rsc_0_16_AWVALID(xt_rsc_0_16_AWVALID),
      .xt_rsc_0_16_AWUSER(xt_rsc_0_16_AWUSER),
      .xt_rsc_0_16_AWREGION(xt_rsc_0_16_AWREGION),
      .xt_rsc_0_16_AWQOS(xt_rsc_0_16_AWQOS),
      .xt_rsc_0_16_AWPROT(xt_rsc_0_16_AWPROT),
      .xt_rsc_0_16_AWCACHE(xt_rsc_0_16_AWCACHE),
      .xt_rsc_0_16_AWLOCK(xt_rsc_0_16_AWLOCK),
      .xt_rsc_0_16_AWBURST(xt_rsc_0_16_AWBURST),
      .xt_rsc_0_16_AWSIZE(xt_rsc_0_16_AWSIZE),
      .xt_rsc_0_16_AWLEN(xt_rsc_0_16_AWLEN),
      .xt_rsc_0_16_AWADDR(xt_rsc_0_16_AWADDR),
      .xt_rsc_0_16_AWID(xt_rsc_0_16_AWID),
      .xt_rsc_triosy_0_16_lz(xt_rsc_triosy_0_16_lz),
      .xt_rsc_0_17_s_tdone(xt_rsc_0_17_s_tdone),
      .xt_rsc_0_17_tr_write_done(xt_rsc_0_17_tr_write_done),
      .xt_rsc_0_17_RREADY(xt_rsc_0_17_RREADY),
      .xt_rsc_0_17_RVALID(xt_rsc_0_17_RVALID),
      .xt_rsc_0_17_RUSER(xt_rsc_0_17_RUSER),
      .xt_rsc_0_17_RLAST(xt_rsc_0_17_RLAST),
      .xt_rsc_0_17_RRESP(xt_rsc_0_17_RRESP),
      .xt_rsc_0_17_RDATA(xt_rsc_0_17_RDATA),
      .xt_rsc_0_17_RID(xt_rsc_0_17_RID),
      .xt_rsc_0_17_ARREADY(xt_rsc_0_17_ARREADY),
      .xt_rsc_0_17_ARVALID(xt_rsc_0_17_ARVALID),
      .xt_rsc_0_17_ARUSER(xt_rsc_0_17_ARUSER),
      .xt_rsc_0_17_ARREGION(xt_rsc_0_17_ARREGION),
      .xt_rsc_0_17_ARQOS(xt_rsc_0_17_ARQOS),
      .xt_rsc_0_17_ARPROT(xt_rsc_0_17_ARPROT),
      .xt_rsc_0_17_ARCACHE(xt_rsc_0_17_ARCACHE),
      .xt_rsc_0_17_ARLOCK(xt_rsc_0_17_ARLOCK),
      .xt_rsc_0_17_ARBURST(xt_rsc_0_17_ARBURST),
      .xt_rsc_0_17_ARSIZE(xt_rsc_0_17_ARSIZE),
      .xt_rsc_0_17_ARLEN(xt_rsc_0_17_ARLEN),
      .xt_rsc_0_17_ARADDR(xt_rsc_0_17_ARADDR),
      .xt_rsc_0_17_ARID(xt_rsc_0_17_ARID),
      .xt_rsc_0_17_BREADY(xt_rsc_0_17_BREADY),
      .xt_rsc_0_17_BVALID(xt_rsc_0_17_BVALID),
      .xt_rsc_0_17_BUSER(xt_rsc_0_17_BUSER),
      .xt_rsc_0_17_BRESP(xt_rsc_0_17_BRESP),
      .xt_rsc_0_17_BID(xt_rsc_0_17_BID),
      .xt_rsc_0_17_WREADY(xt_rsc_0_17_WREADY),
      .xt_rsc_0_17_WVALID(xt_rsc_0_17_WVALID),
      .xt_rsc_0_17_WUSER(xt_rsc_0_17_WUSER),
      .xt_rsc_0_17_WLAST(xt_rsc_0_17_WLAST),
      .xt_rsc_0_17_WSTRB(xt_rsc_0_17_WSTRB),
      .xt_rsc_0_17_WDATA(xt_rsc_0_17_WDATA),
      .xt_rsc_0_17_AWREADY(xt_rsc_0_17_AWREADY),
      .xt_rsc_0_17_AWVALID(xt_rsc_0_17_AWVALID),
      .xt_rsc_0_17_AWUSER(xt_rsc_0_17_AWUSER),
      .xt_rsc_0_17_AWREGION(xt_rsc_0_17_AWREGION),
      .xt_rsc_0_17_AWQOS(xt_rsc_0_17_AWQOS),
      .xt_rsc_0_17_AWPROT(xt_rsc_0_17_AWPROT),
      .xt_rsc_0_17_AWCACHE(xt_rsc_0_17_AWCACHE),
      .xt_rsc_0_17_AWLOCK(xt_rsc_0_17_AWLOCK),
      .xt_rsc_0_17_AWBURST(xt_rsc_0_17_AWBURST),
      .xt_rsc_0_17_AWSIZE(xt_rsc_0_17_AWSIZE),
      .xt_rsc_0_17_AWLEN(xt_rsc_0_17_AWLEN),
      .xt_rsc_0_17_AWADDR(xt_rsc_0_17_AWADDR),
      .xt_rsc_0_17_AWID(xt_rsc_0_17_AWID),
      .xt_rsc_triosy_0_17_lz(xt_rsc_triosy_0_17_lz),
      .xt_rsc_0_18_s_tdone(xt_rsc_0_18_s_tdone),
      .xt_rsc_0_18_tr_write_done(xt_rsc_0_18_tr_write_done),
      .xt_rsc_0_18_RREADY(xt_rsc_0_18_RREADY),
      .xt_rsc_0_18_RVALID(xt_rsc_0_18_RVALID),
      .xt_rsc_0_18_RUSER(xt_rsc_0_18_RUSER),
      .xt_rsc_0_18_RLAST(xt_rsc_0_18_RLAST),
      .xt_rsc_0_18_RRESP(xt_rsc_0_18_RRESP),
      .xt_rsc_0_18_RDATA(xt_rsc_0_18_RDATA),
      .xt_rsc_0_18_RID(xt_rsc_0_18_RID),
      .xt_rsc_0_18_ARREADY(xt_rsc_0_18_ARREADY),
      .xt_rsc_0_18_ARVALID(xt_rsc_0_18_ARVALID),
      .xt_rsc_0_18_ARUSER(xt_rsc_0_18_ARUSER),
      .xt_rsc_0_18_ARREGION(xt_rsc_0_18_ARREGION),
      .xt_rsc_0_18_ARQOS(xt_rsc_0_18_ARQOS),
      .xt_rsc_0_18_ARPROT(xt_rsc_0_18_ARPROT),
      .xt_rsc_0_18_ARCACHE(xt_rsc_0_18_ARCACHE),
      .xt_rsc_0_18_ARLOCK(xt_rsc_0_18_ARLOCK),
      .xt_rsc_0_18_ARBURST(xt_rsc_0_18_ARBURST),
      .xt_rsc_0_18_ARSIZE(xt_rsc_0_18_ARSIZE),
      .xt_rsc_0_18_ARLEN(xt_rsc_0_18_ARLEN),
      .xt_rsc_0_18_ARADDR(xt_rsc_0_18_ARADDR),
      .xt_rsc_0_18_ARID(xt_rsc_0_18_ARID),
      .xt_rsc_0_18_BREADY(xt_rsc_0_18_BREADY),
      .xt_rsc_0_18_BVALID(xt_rsc_0_18_BVALID),
      .xt_rsc_0_18_BUSER(xt_rsc_0_18_BUSER),
      .xt_rsc_0_18_BRESP(xt_rsc_0_18_BRESP),
      .xt_rsc_0_18_BID(xt_rsc_0_18_BID),
      .xt_rsc_0_18_WREADY(xt_rsc_0_18_WREADY),
      .xt_rsc_0_18_WVALID(xt_rsc_0_18_WVALID),
      .xt_rsc_0_18_WUSER(xt_rsc_0_18_WUSER),
      .xt_rsc_0_18_WLAST(xt_rsc_0_18_WLAST),
      .xt_rsc_0_18_WSTRB(xt_rsc_0_18_WSTRB),
      .xt_rsc_0_18_WDATA(xt_rsc_0_18_WDATA),
      .xt_rsc_0_18_AWREADY(xt_rsc_0_18_AWREADY),
      .xt_rsc_0_18_AWVALID(xt_rsc_0_18_AWVALID),
      .xt_rsc_0_18_AWUSER(xt_rsc_0_18_AWUSER),
      .xt_rsc_0_18_AWREGION(xt_rsc_0_18_AWREGION),
      .xt_rsc_0_18_AWQOS(xt_rsc_0_18_AWQOS),
      .xt_rsc_0_18_AWPROT(xt_rsc_0_18_AWPROT),
      .xt_rsc_0_18_AWCACHE(xt_rsc_0_18_AWCACHE),
      .xt_rsc_0_18_AWLOCK(xt_rsc_0_18_AWLOCK),
      .xt_rsc_0_18_AWBURST(xt_rsc_0_18_AWBURST),
      .xt_rsc_0_18_AWSIZE(xt_rsc_0_18_AWSIZE),
      .xt_rsc_0_18_AWLEN(xt_rsc_0_18_AWLEN),
      .xt_rsc_0_18_AWADDR(xt_rsc_0_18_AWADDR),
      .xt_rsc_0_18_AWID(xt_rsc_0_18_AWID),
      .xt_rsc_triosy_0_18_lz(xt_rsc_triosy_0_18_lz),
      .xt_rsc_0_19_s_tdone(xt_rsc_0_19_s_tdone),
      .xt_rsc_0_19_tr_write_done(xt_rsc_0_19_tr_write_done),
      .xt_rsc_0_19_RREADY(xt_rsc_0_19_RREADY),
      .xt_rsc_0_19_RVALID(xt_rsc_0_19_RVALID),
      .xt_rsc_0_19_RUSER(xt_rsc_0_19_RUSER),
      .xt_rsc_0_19_RLAST(xt_rsc_0_19_RLAST),
      .xt_rsc_0_19_RRESP(xt_rsc_0_19_RRESP),
      .xt_rsc_0_19_RDATA(xt_rsc_0_19_RDATA),
      .xt_rsc_0_19_RID(xt_rsc_0_19_RID),
      .xt_rsc_0_19_ARREADY(xt_rsc_0_19_ARREADY),
      .xt_rsc_0_19_ARVALID(xt_rsc_0_19_ARVALID),
      .xt_rsc_0_19_ARUSER(xt_rsc_0_19_ARUSER),
      .xt_rsc_0_19_ARREGION(xt_rsc_0_19_ARREGION),
      .xt_rsc_0_19_ARQOS(xt_rsc_0_19_ARQOS),
      .xt_rsc_0_19_ARPROT(xt_rsc_0_19_ARPROT),
      .xt_rsc_0_19_ARCACHE(xt_rsc_0_19_ARCACHE),
      .xt_rsc_0_19_ARLOCK(xt_rsc_0_19_ARLOCK),
      .xt_rsc_0_19_ARBURST(xt_rsc_0_19_ARBURST),
      .xt_rsc_0_19_ARSIZE(xt_rsc_0_19_ARSIZE),
      .xt_rsc_0_19_ARLEN(xt_rsc_0_19_ARLEN),
      .xt_rsc_0_19_ARADDR(xt_rsc_0_19_ARADDR),
      .xt_rsc_0_19_ARID(xt_rsc_0_19_ARID),
      .xt_rsc_0_19_BREADY(xt_rsc_0_19_BREADY),
      .xt_rsc_0_19_BVALID(xt_rsc_0_19_BVALID),
      .xt_rsc_0_19_BUSER(xt_rsc_0_19_BUSER),
      .xt_rsc_0_19_BRESP(xt_rsc_0_19_BRESP),
      .xt_rsc_0_19_BID(xt_rsc_0_19_BID),
      .xt_rsc_0_19_WREADY(xt_rsc_0_19_WREADY),
      .xt_rsc_0_19_WVALID(xt_rsc_0_19_WVALID),
      .xt_rsc_0_19_WUSER(xt_rsc_0_19_WUSER),
      .xt_rsc_0_19_WLAST(xt_rsc_0_19_WLAST),
      .xt_rsc_0_19_WSTRB(xt_rsc_0_19_WSTRB),
      .xt_rsc_0_19_WDATA(xt_rsc_0_19_WDATA),
      .xt_rsc_0_19_AWREADY(xt_rsc_0_19_AWREADY),
      .xt_rsc_0_19_AWVALID(xt_rsc_0_19_AWVALID),
      .xt_rsc_0_19_AWUSER(xt_rsc_0_19_AWUSER),
      .xt_rsc_0_19_AWREGION(xt_rsc_0_19_AWREGION),
      .xt_rsc_0_19_AWQOS(xt_rsc_0_19_AWQOS),
      .xt_rsc_0_19_AWPROT(xt_rsc_0_19_AWPROT),
      .xt_rsc_0_19_AWCACHE(xt_rsc_0_19_AWCACHE),
      .xt_rsc_0_19_AWLOCK(xt_rsc_0_19_AWLOCK),
      .xt_rsc_0_19_AWBURST(xt_rsc_0_19_AWBURST),
      .xt_rsc_0_19_AWSIZE(xt_rsc_0_19_AWSIZE),
      .xt_rsc_0_19_AWLEN(xt_rsc_0_19_AWLEN),
      .xt_rsc_0_19_AWADDR(xt_rsc_0_19_AWADDR),
      .xt_rsc_0_19_AWID(xt_rsc_0_19_AWID),
      .xt_rsc_triosy_0_19_lz(xt_rsc_triosy_0_19_lz),
      .xt_rsc_0_20_s_tdone(xt_rsc_0_20_s_tdone),
      .xt_rsc_0_20_tr_write_done(xt_rsc_0_20_tr_write_done),
      .xt_rsc_0_20_RREADY(xt_rsc_0_20_RREADY),
      .xt_rsc_0_20_RVALID(xt_rsc_0_20_RVALID),
      .xt_rsc_0_20_RUSER(xt_rsc_0_20_RUSER),
      .xt_rsc_0_20_RLAST(xt_rsc_0_20_RLAST),
      .xt_rsc_0_20_RRESP(xt_rsc_0_20_RRESP),
      .xt_rsc_0_20_RDATA(xt_rsc_0_20_RDATA),
      .xt_rsc_0_20_RID(xt_rsc_0_20_RID),
      .xt_rsc_0_20_ARREADY(xt_rsc_0_20_ARREADY),
      .xt_rsc_0_20_ARVALID(xt_rsc_0_20_ARVALID),
      .xt_rsc_0_20_ARUSER(xt_rsc_0_20_ARUSER),
      .xt_rsc_0_20_ARREGION(xt_rsc_0_20_ARREGION),
      .xt_rsc_0_20_ARQOS(xt_rsc_0_20_ARQOS),
      .xt_rsc_0_20_ARPROT(xt_rsc_0_20_ARPROT),
      .xt_rsc_0_20_ARCACHE(xt_rsc_0_20_ARCACHE),
      .xt_rsc_0_20_ARLOCK(xt_rsc_0_20_ARLOCK),
      .xt_rsc_0_20_ARBURST(xt_rsc_0_20_ARBURST),
      .xt_rsc_0_20_ARSIZE(xt_rsc_0_20_ARSIZE),
      .xt_rsc_0_20_ARLEN(xt_rsc_0_20_ARLEN),
      .xt_rsc_0_20_ARADDR(xt_rsc_0_20_ARADDR),
      .xt_rsc_0_20_ARID(xt_rsc_0_20_ARID),
      .xt_rsc_0_20_BREADY(xt_rsc_0_20_BREADY),
      .xt_rsc_0_20_BVALID(xt_rsc_0_20_BVALID),
      .xt_rsc_0_20_BUSER(xt_rsc_0_20_BUSER),
      .xt_rsc_0_20_BRESP(xt_rsc_0_20_BRESP),
      .xt_rsc_0_20_BID(xt_rsc_0_20_BID),
      .xt_rsc_0_20_WREADY(xt_rsc_0_20_WREADY),
      .xt_rsc_0_20_WVALID(xt_rsc_0_20_WVALID),
      .xt_rsc_0_20_WUSER(xt_rsc_0_20_WUSER),
      .xt_rsc_0_20_WLAST(xt_rsc_0_20_WLAST),
      .xt_rsc_0_20_WSTRB(xt_rsc_0_20_WSTRB),
      .xt_rsc_0_20_WDATA(xt_rsc_0_20_WDATA),
      .xt_rsc_0_20_AWREADY(xt_rsc_0_20_AWREADY),
      .xt_rsc_0_20_AWVALID(xt_rsc_0_20_AWVALID),
      .xt_rsc_0_20_AWUSER(xt_rsc_0_20_AWUSER),
      .xt_rsc_0_20_AWREGION(xt_rsc_0_20_AWREGION),
      .xt_rsc_0_20_AWQOS(xt_rsc_0_20_AWQOS),
      .xt_rsc_0_20_AWPROT(xt_rsc_0_20_AWPROT),
      .xt_rsc_0_20_AWCACHE(xt_rsc_0_20_AWCACHE),
      .xt_rsc_0_20_AWLOCK(xt_rsc_0_20_AWLOCK),
      .xt_rsc_0_20_AWBURST(xt_rsc_0_20_AWBURST),
      .xt_rsc_0_20_AWSIZE(xt_rsc_0_20_AWSIZE),
      .xt_rsc_0_20_AWLEN(xt_rsc_0_20_AWLEN),
      .xt_rsc_0_20_AWADDR(xt_rsc_0_20_AWADDR),
      .xt_rsc_0_20_AWID(xt_rsc_0_20_AWID),
      .xt_rsc_triosy_0_20_lz(xt_rsc_triosy_0_20_lz),
      .xt_rsc_0_21_s_tdone(xt_rsc_0_21_s_tdone),
      .xt_rsc_0_21_tr_write_done(xt_rsc_0_21_tr_write_done),
      .xt_rsc_0_21_RREADY(xt_rsc_0_21_RREADY),
      .xt_rsc_0_21_RVALID(xt_rsc_0_21_RVALID),
      .xt_rsc_0_21_RUSER(xt_rsc_0_21_RUSER),
      .xt_rsc_0_21_RLAST(xt_rsc_0_21_RLAST),
      .xt_rsc_0_21_RRESP(xt_rsc_0_21_RRESP),
      .xt_rsc_0_21_RDATA(xt_rsc_0_21_RDATA),
      .xt_rsc_0_21_RID(xt_rsc_0_21_RID),
      .xt_rsc_0_21_ARREADY(xt_rsc_0_21_ARREADY),
      .xt_rsc_0_21_ARVALID(xt_rsc_0_21_ARVALID),
      .xt_rsc_0_21_ARUSER(xt_rsc_0_21_ARUSER),
      .xt_rsc_0_21_ARREGION(xt_rsc_0_21_ARREGION),
      .xt_rsc_0_21_ARQOS(xt_rsc_0_21_ARQOS),
      .xt_rsc_0_21_ARPROT(xt_rsc_0_21_ARPROT),
      .xt_rsc_0_21_ARCACHE(xt_rsc_0_21_ARCACHE),
      .xt_rsc_0_21_ARLOCK(xt_rsc_0_21_ARLOCK),
      .xt_rsc_0_21_ARBURST(xt_rsc_0_21_ARBURST),
      .xt_rsc_0_21_ARSIZE(xt_rsc_0_21_ARSIZE),
      .xt_rsc_0_21_ARLEN(xt_rsc_0_21_ARLEN),
      .xt_rsc_0_21_ARADDR(xt_rsc_0_21_ARADDR),
      .xt_rsc_0_21_ARID(xt_rsc_0_21_ARID),
      .xt_rsc_0_21_BREADY(xt_rsc_0_21_BREADY),
      .xt_rsc_0_21_BVALID(xt_rsc_0_21_BVALID),
      .xt_rsc_0_21_BUSER(xt_rsc_0_21_BUSER),
      .xt_rsc_0_21_BRESP(xt_rsc_0_21_BRESP),
      .xt_rsc_0_21_BID(xt_rsc_0_21_BID),
      .xt_rsc_0_21_WREADY(xt_rsc_0_21_WREADY),
      .xt_rsc_0_21_WVALID(xt_rsc_0_21_WVALID),
      .xt_rsc_0_21_WUSER(xt_rsc_0_21_WUSER),
      .xt_rsc_0_21_WLAST(xt_rsc_0_21_WLAST),
      .xt_rsc_0_21_WSTRB(xt_rsc_0_21_WSTRB),
      .xt_rsc_0_21_WDATA(xt_rsc_0_21_WDATA),
      .xt_rsc_0_21_AWREADY(xt_rsc_0_21_AWREADY),
      .xt_rsc_0_21_AWVALID(xt_rsc_0_21_AWVALID),
      .xt_rsc_0_21_AWUSER(xt_rsc_0_21_AWUSER),
      .xt_rsc_0_21_AWREGION(xt_rsc_0_21_AWREGION),
      .xt_rsc_0_21_AWQOS(xt_rsc_0_21_AWQOS),
      .xt_rsc_0_21_AWPROT(xt_rsc_0_21_AWPROT),
      .xt_rsc_0_21_AWCACHE(xt_rsc_0_21_AWCACHE),
      .xt_rsc_0_21_AWLOCK(xt_rsc_0_21_AWLOCK),
      .xt_rsc_0_21_AWBURST(xt_rsc_0_21_AWBURST),
      .xt_rsc_0_21_AWSIZE(xt_rsc_0_21_AWSIZE),
      .xt_rsc_0_21_AWLEN(xt_rsc_0_21_AWLEN),
      .xt_rsc_0_21_AWADDR(xt_rsc_0_21_AWADDR),
      .xt_rsc_0_21_AWID(xt_rsc_0_21_AWID),
      .xt_rsc_triosy_0_21_lz(xt_rsc_triosy_0_21_lz),
      .xt_rsc_0_22_s_tdone(xt_rsc_0_22_s_tdone),
      .xt_rsc_0_22_tr_write_done(xt_rsc_0_22_tr_write_done),
      .xt_rsc_0_22_RREADY(xt_rsc_0_22_RREADY),
      .xt_rsc_0_22_RVALID(xt_rsc_0_22_RVALID),
      .xt_rsc_0_22_RUSER(xt_rsc_0_22_RUSER),
      .xt_rsc_0_22_RLAST(xt_rsc_0_22_RLAST),
      .xt_rsc_0_22_RRESP(xt_rsc_0_22_RRESP),
      .xt_rsc_0_22_RDATA(xt_rsc_0_22_RDATA),
      .xt_rsc_0_22_RID(xt_rsc_0_22_RID),
      .xt_rsc_0_22_ARREADY(xt_rsc_0_22_ARREADY),
      .xt_rsc_0_22_ARVALID(xt_rsc_0_22_ARVALID),
      .xt_rsc_0_22_ARUSER(xt_rsc_0_22_ARUSER),
      .xt_rsc_0_22_ARREGION(xt_rsc_0_22_ARREGION),
      .xt_rsc_0_22_ARQOS(xt_rsc_0_22_ARQOS),
      .xt_rsc_0_22_ARPROT(xt_rsc_0_22_ARPROT),
      .xt_rsc_0_22_ARCACHE(xt_rsc_0_22_ARCACHE),
      .xt_rsc_0_22_ARLOCK(xt_rsc_0_22_ARLOCK),
      .xt_rsc_0_22_ARBURST(xt_rsc_0_22_ARBURST),
      .xt_rsc_0_22_ARSIZE(xt_rsc_0_22_ARSIZE),
      .xt_rsc_0_22_ARLEN(xt_rsc_0_22_ARLEN),
      .xt_rsc_0_22_ARADDR(xt_rsc_0_22_ARADDR),
      .xt_rsc_0_22_ARID(xt_rsc_0_22_ARID),
      .xt_rsc_0_22_BREADY(xt_rsc_0_22_BREADY),
      .xt_rsc_0_22_BVALID(xt_rsc_0_22_BVALID),
      .xt_rsc_0_22_BUSER(xt_rsc_0_22_BUSER),
      .xt_rsc_0_22_BRESP(xt_rsc_0_22_BRESP),
      .xt_rsc_0_22_BID(xt_rsc_0_22_BID),
      .xt_rsc_0_22_WREADY(xt_rsc_0_22_WREADY),
      .xt_rsc_0_22_WVALID(xt_rsc_0_22_WVALID),
      .xt_rsc_0_22_WUSER(xt_rsc_0_22_WUSER),
      .xt_rsc_0_22_WLAST(xt_rsc_0_22_WLAST),
      .xt_rsc_0_22_WSTRB(xt_rsc_0_22_WSTRB),
      .xt_rsc_0_22_WDATA(xt_rsc_0_22_WDATA),
      .xt_rsc_0_22_AWREADY(xt_rsc_0_22_AWREADY),
      .xt_rsc_0_22_AWVALID(xt_rsc_0_22_AWVALID),
      .xt_rsc_0_22_AWUSER(xt_rsc_0_22_AWUSER),
      .xt_rsc_0_22_AWREGION(xt_rsc_0_22_AWREGION),
      .xt_rsc_0_22_AWQOS(xt_rsc_0_22_AWQOS),
      .xt_rsc_0_22_AWPROT(xt_rsc_0_22_AWPROT),
      .xt_rsc_0_22_AWCACHE(xt_rsc_0_22_AWCACHE),
      .xt_rsc_0_22_AWLOCK(xt_rsc_0_22_AWLOCK),
      .xt_rsc_0_22_AWBURST(xt_rsc_0_22_AWBURST),
      .xt_rsc_0_22_AWSIZE(xt_rsc_0_22_AWSIZE),
      .xt_rsc_0_22_AWLEN(xt_rsc_0_22_AWLEN),
      .xt_rsc_0_22_AWADDR(xt_rsc_0_22_AWADDR),
      .xt_rsc_0_22_AWID(xt_rsc_0_22_AWID),
      .xt_rsc_triosy_0_22_lz(xt_rsc_triosy_0_22_lz),
      .xt_rsc_0_23_s_tdone(xt_rsc_0_23_s_tdone),
      .xt_rsc_0_23_tr_write_done(xt_rsc_0_23_tr_write_done),
      .xt_rsc_0_23_RREADY(xt_rsc_0_23_RREADY),
      .xt_rsc_0_23_RVALID(xt_rsc_0_23_RVALID),
      .xt_rsc_0_23_RUSER(xt_rsc_0_23_RUSER),
      .xt_rsc_0_23_RLAST(xt_rsc_0_23_RLAST),
      .xt_rsc_0_23_RRESP(xt_rsc_0_23_RRESP),
      .xt_rsc_0_23_RDATA(xt_rsc_0_23_RDATA),
      .xt_rsc_0_23_RID(xt_rsc_0_23_RID),
      .xt_rsc_0_23_ARREADY(xt_rsc_0_23_ARREADY),
      .xt_rsc_0_23_ARVALID(xt_rsc_0_23_ARVALID),
      .xt_rsc_0_23_ARUSER(xt_rsc_0_23_ARUSER),
      .xt_rsc_0_23_ARREGION(xt_rsc_0_23_ARREGION),
      .xt_rsc_0_23_ARQOS(xt_rsc_0_23_ARQOS),
      .xt_rsc_0_23_ARPROT(xt_rsc_0_23_ARPROT),
      .xt_rsc_0_23_ARCACHE(xt_rsc_0_23_ARCACHE),
      .xt_rsc_0_23_ARLOCK(xt_rsc_0_23_ARLOCK),
      .xt_rsc_0_23_ARBURST(xt_rsc_0_23_ARBURST),
      .xt_rsc_0_23_ARSIZE(xt_rsc_0_23_ARSIZE),
      .xt_rsc_0_23_ARLEN(xt_rsc_0_23_ARLEN),
      .xt_rsc_0_23_ARADDR(xt_rsc_0_23_ARADDR),
      .xt_rsc_0_23_ARID(xt_rsc_0_23_ARID),
      .xt_rsc_0_23_BREADY(xt_rsc_0_23_BREADY),
      .xt_rsc_0_23_BVALID(xt_rsc_0_23_BVALID),
      .xt_rsc_0_23_BUSER(xt_rsc_0_23_BUSER),
      .xt_rsc_0_23_BRESP(xt_rsc_0_23_BRESP),
      .xt_rsc_0_23_BID(xt_rsc_0_23_BID),
      .xt_rsc_0_23_WREADY(xt_rsc_0_23_WREADY),
      .xt_rsc_0_23_WVALID(xt_rsc_0_23_WVALID),
      .xt_rsc_0_23_WUSER(xt_rsc_0_23_WUSER),
      .xt_rsc_0_23_WLAST(xt_rsc_0_23_WLAST),
      .xt_rsc_0_23_WSTRB(xt_rsc_0_23_WSTRB),
      .xt_rsc_0_23_WDATA(xt_rsc_0_23_WDATA),
      .xt_rsc_0_23_AWREADY(xt_rsc_0_23_AWREADY),
      .xt_rsc_0_23_AWVALID(xt_rsc_0_23_AWVALID),
      .xt_rsc_0_23_AWUSER(xt_rsc_0_23_AWUSER),
      .xt_rsc_0_23_AWREGION(xt_rsc_0_23_AWREGION),
      .xt_rsc_0_23_AWQOS(xt_rsc_0_23_AWQOS),
      .xt_rsc_0_23_AWPROT(xt_rsc_0_23_AWPROT),
      .xt_rsc_0_23_AWCACHE(xt_rsc_0_23_AWCACHE),
      .xt_rsc_0_23_AWLOCK(xt_rsc_0_23_AWLOCK),
      .xt_rsc_0_23_AWBURST(xt_rsc_0_23_AWBURST),
      .xt_rsc_0_23_AWSIZE(xt_rsc_0_23_AWSIZE),
      .xt_rsc_0_23_AWLEN(xt_rsc_0_23_AWLEN),
      .xt_rsc_0_23_AWADDR(xt_rsc_0_23_AWADDR),
      .xt_rsc_0_23_AWID(xt_rsc_0_23_AWID),
      .xt_rsc_triosy_0_23_lz(xt_rsc_triosy_0_23_lz),
      .xt_rsc_0_24_s_tdone(xt_rsc_0_24_s_tdone),
      .xt_rsc_0_24_tr_write_done(xt_rsc_0_24_tr_write_done),
      .xt_rsc_0_24_RREADY(xt_rsc_0_24_RREADY),
      .xt_rsc_0_24_RVALID(xt_rsc_0_24_RVALID),
      .xt_rsc_0_24_RUSER(xt_rsc_0_24_RUSER),
      .xt_rsc_0_24_RLAST(xt_rsc_0_24_RLAST),
      .xt_rsc_0_24_RRESP(xt_rsc_0_24_RRESP),
      .xt_rsc_0_24_RDATA(xt_rsc_0_24_RDATA),
      .xt_rsc_0_24_RID(xt_rsc_0_24_RID),
      .xt_rsc_0_24_ARREADY(xt_rsc_0_24_ARREADY),
      .xt_rsc_0_24_ARVALID(xt_rsc_0_24_ARVALID),
      .xt_rsc_0_24_ARUSER(xt_rsc_0_24_ARUSER),
      .xt_rsc_0_24_ARREGION(xt_rsc_0_24_ARREGION),
      .xt_rsc_0_24_ARQOS(xt_rsc_0_24_ARQOS),
      .xt_rsc_0_24_ARPROT(xt_rsc_0_24_ARPROT),
      .xt_rsc_0_24_ARCACHE(xt_rsc_0_24_ARCACHE),
      .xt_rsc_0_24_ARLOCK(xt_rsc_0_24_ARLOCK),
      .xt_rsc_0_24_ARBURST(xt_rsc_0_24_ARBURST),
      .xt_rsc_0_24_ARSIZE(xt_rsc_0_24_ARSIZE),
      .xt_rsc_0_24_ARLEN(xt_rsc_0_24_ARLEN),
      .xt_rsc_0_24_ARADDR(xt_rsc_0_24_ARADDR),
      .xt_rsc_0_24_ARID(xt_rsc_0_24_ARID),
      .xt_rsc_0_24_BREADY(xt_rsc_0_24_BREADY),
      .xt_rsc_0_24_BVALID(xt_rsc_0_24_BVALID),
      .xt_rsc_0_24_BUSER(xt_rsc_0_24_BUSER),
      .xt_rsc_0_24_BRESP(xt_rsc_0_24_BRESP),
      .xt_rsc_0_24_BID(xt_rsc_0_24_BID),
      .xt_rsc_0_24_WREADY(xt_rsc_0_24_WREADY),
      .xt_rsc_0_24_WVALID(xt_rsc_0_24_WVALID),
      .xt_rsc_0_24_WUSER(xt_rsc_0_24_WUSER),
      .xt_rsc_0_24_WLAST(xt_rsc_0_24_WLAST),
      .xt_rsc_0_24_WSTRB(xt_rsc_0_24_WSTRB),
      .xt_rsc_0_24_WDATA(xt_rsc_0_24_WDATA),
      .xt_rsc_0_24_AWREADY(xt_rsc_0_24_AWREADY),
      .xt_rsc_0_24_AWVALID(xt_rsc_0_24_AWVALID),
      .xt_rsc_0_24_AWUSER(xt_rsc_0_24_AWUSER),
      .xt_rsc_0_24_AWREGION(xt_rsc_0_24_AWREGION),
      .xt_rsc_0_24_AWQOS(xt_rsc_0_24_AWQOS),
      .xt_rsc_0_24_AWPROT(xt_rsc_0_24_AWPROT),
      .xt_rsc_0_24_AWCACHE(xt_rsc_0_24_AWCACHE),
      .xt_rsc_0_24_AWLOCK(xt_rsc_0_24_AWLOCK),
      .xt_rsc_0_24_AWBURST(xt_rsc_0_24_AWBURST),
      .xt_rsc_0_24_AWSIZE(xt_rsc_0_24_AWSIZE),
      .xt_rsc_0_24_AWLEN(xt_rsc_0_24_AWLEN),
      .xt_rsc_0_24_AWADDR(xt_rsc_0_24_AWADDR),
      .xt_rsc_0_24_AWID(xt_rsc_0_24_AWID),
      .xt_rsc_triosy_0_24_lz(xt_rsc_triosy_0_24_lz),
      .xt_rsc_0_25_s_tdone(xt_rsc_0_25_s_tdone),
      .xt_rsc_0_25_tr_write_done(xt_rsc_0_25_tr_write_done),
      .xt_rsc_0_25_RREADY(xt_rsc_0_25_RREADY),
      .xt_rsc_0_25_RVALID(xt_rsc_0_25_RVALID),
      .xt_rsc_0_25_RUSER(xt_rsc_0_25_RUSER),
      .xt_rsc_0_25_RLAST(xt_rsc_0_25_RLAST),
      .xt_rsc_0_25_RRESP(xt_rsc_0_25_RRESP),
      .xt_rsc_0_25_RDATA(xt_rsc_0_25_RDATA),
      .xt_rsc_0_25_RID(xt_rsc_0_25_RID),
      .xt_rsc_0_25_ARREADY(xt_rsc_0_25_ARREADY),
      .xt_rsc_0_25_ARVALID(xt_rsc_0_25_ARVALID),
      .xt_rsc_0_25_ARUSER(xt_rsc_0_25_ARUSER),
      .xt_rsc_0_25_ARREGION(xt_rsc_0_25_ARREGION),
      .xt_rsc_0_25_ARQOS(xt_rsc_0_25_ARQOS),
      .xt_rsc_0_25_ARPROT(xt_rsc_0_25_ARPROT),
      .xt_rsc_0_25_ARCACHE(xt_rsc_0_25_ARCACHE),
      .xt_rsc_0_25_ARLOCK(xt_rsc_0_25_ARLOCK),
      .xt_rsc_0_25_ARBURST(xt_rsc_0_25_ARBURST),
      .xt_rsc_0_25_ARSIZE(xt_rsc_0_25_ARSIZE),
      .xt_rsc_0_25_ARLEN(xt_rsc_0_25_ARLEN),
      .xt_rsc_0_25_ARADDR(xt_rsc_0_25_ARADDR),
      .xt_rsc_0_25_ARID(xt_rsc_0_25_ARID),
      .xt_rsc_0_25_BREADY(xt_rsc_0_25_BREADY),
      .xt_rsc_0_25_BVALID(xt_rsc_0_25_BVALID),
      .xt_rsc_0_25_BUSER(xt_rsc_0_25_BUSER),
      .xt_rsc_0_25_BRESP(xt_rsc_0_25_BRESP),
      .xt_rsc_0_25_BID(xt_rsc_0_25_BID),
      .xt_rsc_0_25_WREADY(xt_rsc_0_25_WREADY),
      .xt_rsc_0_25_WVALID(xt_rsc_0_25_WVALID),
      .xt_rsc_0_25_WUSER(xt_rsc_0_25_WUSER),
      .xt_rsc_0_25_WLAST(xt_rsc_0_25_WLAST),
      .xt_rsc_0_25_WSTRB(xt_rsc_0_25_WSTRB),
      .xt_rsc_0_25_WDATA(xt_rsc_0_25_WDATA),
      .xt_rsc_0_25_AWREADY(xt_rsc_0_25_AWREADY),
      .xt_rsc_0_25_AWVALID(xt_rsc_0_25_AWVALID),
      .xt_rsc_0_25_AWUSER(xt_rsc_0_25_AWUSER),
      .xt_rsc_0_25_AWREGION(xt_rsc_0_25_AWREGION),
      .xt_rsc_0_25_AWQOS(xt_rsc_0_25_AWQOS),
      .xt_rsc_0_25_AWPROT(xt_rsc_0_25_AWPROT),
      .xt_rsc_0_25_AWCACHE(xt_rsc_0_25_AWCACHE),
      .xt_rsc_0_25_AWLOCK(xt_rsc_0_25_AWLOCK),
      .xt_rsc_0_25_AWBURST(xt_rsc_0_25_AWBURST),
      .xt_rsc_0_25_AWSIZE(xt_rsc_0_25_AWSIZE),
      .xt_rsc_0_25_AWLEN(xt_rsc_0_25_AWLEN),
      .xt_rsc_0_25_AWADDR(xt_rsc_0_25_AWADDR),
      .xt_rsc_0_25_AWID(xt_rsc_0_25_AWID),
      .xt_rsc_triosy_0_25_lz(xt_rsc_triosy_0_25_lz),
      .xt_rsc_0_26_s_tdone(xt_rsc_0_26_s_tdone),
      .xt_rsc_0_26_tr_write_done(xt_rsc_0_26_tr_write_done),
      .xt_rsc_0_26_RREADY(xt_rsc_0_26_RREADY),
      .xt_rsc_0_26_RVALID(xt_rsc_0_26_RVALID),
      .xt_rsc_0_26_RUSER(xt_rsc_0_26_RUSER),
      .xt_rsc_0_26_RLAST(xt_rsc_0_26_RLAST),
      .xt_rsc_0_26_RRESP(xt_rsc_0_26_RRESP),
      .xt_rsc_0_26_RDATA(xt_rsc_0_26_RDATA),
      .xt_rsc_0_26_RID(xt_rsc_0_26_RID),
      .xt_rsc_0_26_ARREADY(xt_rsc_0_26_ARREADY),
      .xt_rsc_0_26_ARVALID(xt_rsc_0_26_ARVALID),
      .xt_rsc_0_26_ARUSER(xt_rsc_0_26_ARUSER),
      .xt_rsc_0_26_ARREGION(xt_rsc_0_26_ARREGION),
      .xt_rsc_0_26_ARQOS(xt_rsc_0_26_ARQOS),
      .xt_rsc_0_26_ARPROT(xt_rsc_0_26_ARPROT),
      .xt_rsc_0_26_ARCACHE(xt_rsc_0_26_ARCACHE),
      .xt_rsc_0_26_ARLOCK(xt_rsc_0_26_ARLOCK),
      .xt_rsc_0_26_ARBURST(xt_rsc_0_26_ARBURST),
      .xt_rsc_0_26_ARSIZE(xt_rsc_0_26_ARSIZE),
      .xt_rsc_0_26_ARLEN(xt_rsc_0_26_ARLEN),
      .xt_rsc_0_26_ARADDR(xt_rsc_0_26_ARADDR),
      .xt_rsc_0_26_ARID(xt_rsc_0_26_ARID),
      .xt_rsc_0_26_BREADY(xt_rsc_0_26_BREADY),
      .xt_rsc_0_26_BVALID(xt_rsc_0_26_BVALID),
      .xt_rsc_0_26_BUSER(xt_rsc_0_26_BUSER),
      .xt_rsc_0_26_BRESP(xt_rsc_0_26_BRESP),
      .xt_rsc_0_26_BID(xt_rsc_0_26_BID),
      .xt_rsc_0_26_WREADY(xt_rsc_0_26_WREADY),
      .xt_rsc_0_26_WVALID(xt_rsc_0_26_WVALID),
      .xt_rsc_0_26_WUSER(xt_rsc_0_26_WUSER),
      .xt_rsc_0_26_WLAST(xt_rsc_0_26_WLAST),
      .xt_rsc_0_26_WSTRB(xt_rsc_0_26_WSTRB),
      .xt_rsc_0_26_WDATA(xt_rsc_0_26_WDATA),
      .xt_rsc_0_26_AWREADY(xt_rsc_0_26_AWREADY),
      .xt_rsc_0_26_AWVALID(xt_rsc_0_26_AWVALID),
      .xt_rsc_0_26_AWUSER(xt_rsc_0_26_AWUSER),
      .xt_rsc_0_26_AWREGION(xt_rsc_0_26_AWREGION),
      .xt_rsc_0_26_AWQOS(xt_rsc_0_26_AWQOS),
      .xt_rsc_0_26_AWPROT(xt_rsc_0_26_AWPROT),
      .xt_rsc_0_26_AWCACHE(xt_rsc_0_26_AWCACHE),
      .xt_rsc_0_26_AWLOCK(xt_rsc_0_26_AWLOCK),
      .xt_rsc_0_26_AWBURST(xt_rsc_0_26_AWBURST),
      .xt_rsc_0_26_AWSIZE(xt_rsc_0_26_AWSIZE),
      .xt_rsc_0_26_AWLEN(xt_rsc_0_26_AWLEN),
      .xt_rsc_0_26_AWADDR(xt_rsc_0_26_AWADDR),
      .xt_rsc_0_26_AWID(xt_rsc_0_26_AWID),
      .xt_rsc_triosy_0_26_lz(xt_rsc_triosy_0_26_lz),
      .xt_rsc_0_27_s_tdone(xt_rsc_0_27_s_tdone),
      .xt_rsc_0_27_tr_write_done(xt_rsc_0_27_tr_write_done),
      .xt_rsc_0_27_RREADY(xt_rsc_0_27_RREADY),
      .xt_rsc_0_27_RVALID(xt_rsc_0_27_RVALID),
      .xt_rsc_0_27_RUSER(xt_rsc_0_27_RUSER),
      .xt_rsc_0_27_RLAST(xt_rsc_0_27_RLAST),
      .xt_rsc_0_27_RRESP(xt_rsc_0_27_RRESP),
      .xt_rsc_0_27_RDATA(xt_rsc_0_27_RDATA),
      .xt_rsc_0_27_RID(xt_rsc_0_27_RID),
      .xt_rsc_0_27_ARREADY(xt_rsc_0_27_ARREADY),
      .xt_rsc_0_27_ARVALID(xt_rsc_0_27_ARVALID),
      .xt_rsc_0_27_ARUSER(xt_rsc_0_27_ARUSER),
      .xt_rsc_0_27_ARREGION(xt_rsc_0_27_ARREGION),
      .xt_rsc_0_27_ARQOS(xt_rsc_0_27_ARQOS),
      .xt_rsc_0_27_ARPROT(xt_rsc_0_27_ARPROT),
      .xt_rsc_0_27_ARCACHE(xt_rsc_0_27_ARCACHE),
      .xt_rsc_0_27_ARLOCK(xt_rsc_0_27_ARLOCK),
      .xt_rsc_0_27_ARBURST(xt_rsc_0_27_ARBURST),
      .xt_rsc_0_27_ARSIZE(xt_rsc_0_27_ARSIZE),
      .xt_rsc_0_27_ARLEN(xt_rsc_0_27_ARLEN),
      .xt_rsc_0_27_ARADDR(xt_rsc_0_27_ARADDR),
      .xt_rsc_0_27_ARID(xt_rsc_0_27_ARID),
      .xt_rsc_0_27_BREADY(xt_rsc_0_27_BREADY),
      .xt_rsc_0_27_BVALID(xt_rsc_0_27_BVALID),
      .xt_rsc_0_27_BUSER(xt_rsc_0_27_BUSER),
      .xt_rsc_0_27_BRESP(xt_rsc_0_27_BRESP),
      .xt_rsc_0_27_BID(xt_rsc_0_27_BID),
      .xt_rsc_0_27_WREADY(xt_rsc_0_27_WREADY),
      .xt_rsc_0_27_WVALID(xt_rsc_0_27_WVALID),
      .xt_rsc_0_27_WUSER(xt_rsc_0_27_WUSER),
      .xt_rsc_0_27_WLAST(xt_rsc_0_27_WLAST),
      .xt_rsc_0_27_WSTRB(xt_rsc_0_27_WSTRB),
      .xt_rsc_0_27_WDATA(xt_rsc_0_27_WDATA),
      .xt_rsc_0_27_AWREADY(xt_rsc_0_27_AWREADY),
      .xt_rsc_0_27_AWVALID(xt_rsc_0_27_AWVALID),
      .xt_rsc_0_27_AWUSER(xt_rsc_0_27_AWUSER),
      .xt_rsc_0_27_AWREGION(xt_rsc_0_27_AWREGION),
      .xt_rsc_0_27_AWQOS(xt_rsc_0_27_AWQOS),
      .xt_rsc_0_27_AWPROT(xt_rsc_0_27_AWPROT),
      .xt_rsc_0_27_AWCACHE(xt_rsc_0_27_AWCACHE),
      .xt_rsc_0_27_AWLOCK(xt_rsc_0_27_AWLOCK),
      .xt_rsc_0_27_AWBURST(xt_rsc_0_27_AWBURST),
      .xt_rsc_0_27_AWSIZE(xt_rsc_0_27_AWSIZE),
      .xt_rsc_0_27_AWLEN(xt_rsc_0_27_AWLEN),
      .xt_rsc_0_27_AWADDR(xt_rsc_0_27_AWADDR),
      .xt_rsc_0_27_AWID(xt_rsc_0_27_AWID),
      .xt_rsc_triosy_0_27_lz(xt_rsc_triosy_0_27_lz),
      .xt_rsc_0_28_s_tdone(xt_rsc_0_28_s_tdone),
      .xt_rsc_0_28_tr_write_done(xt_rsc_0_28_tr_write_done),
      .xt_rsc_0_28_RREADY(xt_rsc_0_28_RREADY),
      .xt_rsc_0_28_RVALID(xt_rsc_0_28_RVALID),
      .xt_rsc_0_28_RUSER(xt_rsc_0_28_RUSER),
      .xt_rsc_0_28_RLAST(xt_rsc_0_28_RLAST),
      .xt_rsc_0_28_RRESP(xt_rsc_0_28_RRESP),
      .xt_rsc_0_28_RDATA(xt_rsc_0_28_RDATA),
      .xt_rsc_0_28_RID(xt_rsc_0_28_RID),
      .xt_rsc_0_28_ARREADY(xt_rsc_0_28_ARREADY),
      .xt_rsc_0_28_ARVALID(xt_rsc_0_28_ARVALID),
      .xt_rsc_0_28_ARUSER(xt_rsc_0_28_ARUSER),
      .xt_rsc_0_28_ARREGION(xt_rsc_0_28_ARREGION),
      .xt_rsc_0_28_ARQOS(xt_rsc_0_28_ARQOS),
      .xt_rsc_0_28_ARPROT(xt_rsc_0_28_ARPROT),
      .xt_rsc_0_28_ARCACHE(xt_rsc_0_28_ARCACHE),
      .xt_rsc_0_28_ARLOCK(xt_rsc_0_28_ARLOCK),
      .xt_rsc_0_28_ARBURST(xt_rsc_0_28_ARBURST),
      .xt_rsc_0_28_ARSIZE(xt_rsc_0_28_ARSIZE),
      .xt_rsc_0_28_ARLEN(xt_rsc_0_28_ARLEN),
      .xt_rsc_0_28_ARADDR(xt_rsc_0_28_ARADDR),
      .xt_rsc_0_28_ARID(xt_rsc_0_28_ARID),
      .xt_rsc_0_28_BREADY(xt_rsc_0_28_BREADY),
      .xt_rsc_0_28_BVALID(xt_rsc_0_28_BVALID),
      .xt_rsc_0_28_BUSER(xt_rsc_0_28_BUSER),
      .xt_rsc_0_28_BRESP(xt_rsc_0_28_BRESP),
      .xt_rsc_0_28_BID(xt_rsc_0_28_BID),
      .xt_rsc_0_28_WREADY(xt_rsc_0_28_WREADY),
      .xt_rsc_0_28_WVALID(xt_rsc_0_28_WVALID),
      .xt_rsc_0_28_WUSER(xt_rsc_0_28_WUSER),
      .xt_rsc_0_28_WLAST(xt_rsc_0_28_WLAST),
      .xt_rsc_0_28_WSTRB(xt_rsc_0_28_WSTRB),
      .xt_rsc_0_28_WDATA(xt_rsc_0_28_WDATA),
      .xt_rsc_0_28_AWREADY(xt_rsc_0_28_AWREADY),
      .xt_rsc_0_28_AWVALID(xt_rsc_0_28_AWVALID),
      .xt_rsc_0_28_AWUSER(xt_rsc_0_28_AWUSER),
      .xt_rsc_0_28_AWREGION(xt_rsc_0_28_AWREGION),
      .xt_rsc_0_28_AWQOS(xt_rsc_0_28_AWQOS),
      .xt_rsc_0_28_AWPROT(xt_rsc_0_28_AWPROT),
      .xt_rsc_0_28_AWCACHE(xt_rsc_0_28_AWCACHE),
      .xt_rsc_0_28_AWLOCK(xt_rsc_0_28_AWLOCK),
      .xt_rsc_0_28_AWBURST(xt_rsc_0_28_AWBURST),
      .xt_rsc_0_28_AWSIZE(xt_rsc_0_28_AWSIZE),
      .xt_rsc_0_28_AWLEN(xt_rsc_0_28_AWLEN),
      .xt_rsc_0_28_AWADDR(xt_rsc_0_28_AWADDR),
      .xt_rsc_0_28_AWID(xt_rsc_0_28_AWID),
      .xt_rsc_triosy_0_28_lz(xt_rsc_triosy_0_28_lz),
      .xt_rsc_0_29_s_tdone(xt_rsc_0_29_s_tdone),
      .xt_rsc_0_29_tr_write_done(xt_rsc_0_29_tr_write_done),
      .xt_rsc_0_29_RREADY(xt_rsc_0_29_RREADY),
      .xt_rsc_0_29_RVALID(xt_rsc_0_29_RVALID),
      .xt_rsc_0_29_RUSER(xt_rsc_0_29_RUSER),
      .xt_rsc_0_29_RLAST(xt_rsc_0_29_RLAST),
      .xt_rsc_0_29_RRESP(xt_rsc_0_29_RRESP),
      .xt_rsc_0_29_RDATA(xt_rsc_0_29_RDATA),
      .xt_rsc_0_29_RID(xt_rsc_0_29_RID),
      .xt_rsc_0_29_ARREADY(xt_rsc_0_29_ARREADY),
      .xt_rsc_0_29_ARVALID(xt_rsc_0_29_ARVALID),
      .xt_rsc_0_29_ARUSER(xt_rsc_0_29_ARUSER),
      .xt_rsc_0_29_ARREGION(xt_rsc_0_29_ARREGION),
      .xt_rsc_0_29_ARQOS(xt_rsc_0_29_ARQOS),
      .xt_rsc_0_29_ARPROT(xt_rsc_0_29_ARPROT),
      .xt_rsc_0_29_ARCACHE(xt_rsc_0_29_ARCACHE),
      .xt_rsc_0_29_ARLOCK(xt_rsc_0_29_ARLOCK),
      .xt_rsc_0_29_ARBURST(xt_rsc_0_29_ARBURST),
      .xt_rsc_0_29_ARSIZE(xt_rsc_0_29_ARSIZE),
      .xt_rsc_0_29_ARLEN(xt_rsc_0_29_ARLEN),
      .xt_rsc_0_29_ARADDR(xt_rsc_0_29_ARADDR),
      .xt_rsc_0_29_ARID(xt_rsc_0_29_ARID),
      .xt_rsc_0_29_BREADY(xt_rsc_0_29_BREADY),
      .xt_rsc_0_29_BVALID(xt_rsc_0_29_BVALID),
      .xt_rsc_0_29_BUSER(xt_rsc_0_29_BUSER),
      .xt_rsc_0_29_BRESP(xt_rsc_0_29_BRESP),
      .xt_rsc_0_29_BID(xt_rsc_0_29_BID),
      .xt_rsc_0_29_WREADY(xt_rsc_0_29_WREADY),
      .xt_rsc_0_29_WVALID(xt_rsc_0_29_WVALID),
      .xt_rsc_0_29_WUSER(xt_rsc_0_29_WUSER),
      .xt_rsc_0_29_WLAST(xt_rsc_0_29_WLAST),
      .xt_rsc_0_29_WSTRB(xt_rsc_0_29_WSTRB),
      .xt_rsc_0_29_WDATA(xt_rsc_0_29_WDATA),
      .xt_rsc_0_29_AWREADY(xt_rsc_0_29_AWREADY),
      .xt_rsc_0_29_AWVALID(xt_rsc_0_29_AWVALID),
      .xt_rsc_0_29_AWUSER(xt_rsc_0_29_AWUSER),
      .xt_rsc_0_29_AWREGION(xt_rsc_0_29_AWREGION),
      .xt_rsc_0_29_AWQOS(xt_rsc_0_29_AWQOS),
      .xt_rsc_0_29_AWPROT(xt_rsc_0_29_AWPROT),
      .xt_rsc_0_29_AWCACHE(xt_rsc_0_29_AWCACHE),
      .xt_rsc_0_29_AWLOCK(xt_rsc_0_29_AWLOCK),
      .xt_rsc_0_29_AWBURST(xt_rsc_0_29_AWBURST),
      .xt_rsc_0_29_AWSIZE(xt_rsc_0_29_AWSIZE),
      .xt_rsc_0_29_AWLEN(xt_rsc_0_29_AWLEN),
      .xt_rsc_0_29_AWADDR(xt_rsc_0_29_AWADDR),
      .xt_rsc_0_29_AWID(xt_rsc_0_29_AWID),
      .xt_rsc_triosy_0_29_lz(xt_rsc_triosy_0_29_lz),
      .xt_rsc_0_30_s_tdone(xt_rsc_0_30_s_tdone),
      .xt_rsc_0_30_tr_write_done(xt_rsc_0_30_tr_write_done),
      .xt_rsc_0_30_RREADY(xt_rsc_0_30_RREADY),
      .xt_rsc_0_30_RVALID(xt_rsc_0_30_RVALID),
      .xt_rsc_0_30_RUSER(xt_rsc_0_30_RUSER),
      .xt_rsc_0_30_RLAST(xt_rsc_0_30_RLAST),
      .xt_rsc_0_30_RRESP(xt_rsc_0_30_RRESP),
      .xt_rsc_0_30_RDATA(xt_rsc_0_30_RDATA),
      .xt_rsc_0_30_RID(xt_rsc_0_30_RID),
      .xt_rsc_0_30_ARREADY(xt_rsc_0_30_ARREADY),
      .xt_rsc_0_30_ARVALID(xt_rsc_0_30_ARVALID),
      .xt_rsc_0_30_ARUSER(xt_rsc_0_30_ARUSER),
      .xt_rsc_0_30_ARREGION(xt_rsc_0_30_ARREGION),
      .xt_rsc_0_30_ARQOS(xt_rsc_0_30_ARQOS),
      .xt_rsc_0_30_ARPROT(xt_rsc_0_30_ARPROT),
      .xt_rsc_0_30_ARCACHE(xt_rsc_0_30_ARCACHE),
      .xt_rsc_0_30_ARLOCK(xt_rsc_0_30_ARLOCK),
      .xt_rsc_0_30_ARBURST(xt_rsc_0_30_ARBURST),
      .xt_rsc_0_30_ARSIZE(xt_rsc_0_30_ARSIZE),
      .xt_rsc_0_30_ARLEN(xt_rsc_0_30_ARLEN),
      .xt_rsc_0_30_ARADDR(xt_rsc_0_30_ARADDR),
      .xt_rsc_0_30_ARID(xt_rsc_0_30_ARID),
      .xt_rsc_0_30_BREADY(xt_rsc_0_30_BREADY),
      .xt_rsc_0_30_BVALID(xt_rsc_0_30_BVALID),
      .xt_rsc_0_30_BUSER(xt_rsc_0_30_BUSER),
      .xt_rsc_0_30_BRESP(xt_rsc_0_30_BRESP),
      .xt_rsc_0_30_BID(xt_rsc_0_30_BID),
      .xt_rsc_0_30_WREADY(xt_rsc_0_30_WREADY),
      .xt_rsc_0_30_WVALID(xt_rsc_0_30_WVALID),
      .xt_rsc_0_30_WUSER(xt_rsc_0_30_WUSER),
      .xt_rsc_0_30_WLAST(xt_rsc_0_30_WLAST),
      .xt_rsc_0_30_WSTRB(xt_rsc_0_30_WSTRB),
      .xt_rsc_0_30_WDATA(xt_rsc_0_30_WDATA),
      .xt_rsc_0_30_AWREADY(xt_rsc_0_30_AWREADY),
      .xt_rsc_0_30_AWVALID(xt_rsc_0_30_AWVALID),
      .xt_rsc_0_30_AWUSER(xt_rsc_0_30_AWUSER),
      .xt_rsc_0_30_AWREGION(xt_rsc_0_30_AWREGION),
      .xt_rsc_0_30_AWQOS(xt_rsc_0_30_AWQOS),
      .xt_rsc_0_30_AWPROT(xt_rsc_0_30_AWPROT),
      .xt_rsc_0_30_AWCACHE(xt_rsc_0_30_AWCACHE),
      .xt_rsc_0_30_AWLOCK(xt_rsc_0_30_AWLOCK),
      .xt_rsc_0_30_AWBURST(xt_rsc_0_30_AWBURST),
      .xt_rsc_0_30_AWSIZE(xt_rsc_0_30_AWSIZE),
      .xt_rsc_0_30_AWLEN(xt_rsc_0_30_AWLEN),
      .xt_rsc_0_30_AWADDR(xt_rsc_0_30_AWADDR),
      .xt_rsc_0_30_AWID(xt_rsc_0_30_AWID),
      .xt_rsc_triosy_0_30_lz(xt_rsc_triosy_0_30_lz),
      .xt_rsc_0_31_s_tdone(xt_rsc_0_31_s_tdone),
      .xt_rsc_0_31_tr_write_done(xt_rsc_0_31_tr_write_done),
      .xt_rsc_0_31_RREADY(xt_rsc_0_31_RREADY),
      .xt_rsc_0_31_RVALID(xt_rsc_0_31_RVALID),
      .xt_rsc_0_31_RUSER(xt_rsc_0_31_RUSER),
      .xt_rsc_0_31_RLAST(xt_rsc_0_31_RLAST),
      .xt_rsc_0_31_RRESP(xt_rsc_0_31_RRESP),
      .xt_rsc_0_31_RDATA(xt_rsc_0_31_RDATA),
      .xt_rsc_0_31_RID(xt_rsc_0_31_RID),
      .xt_rsc_0_31_ARREADY(xt_rsc_0_31_ARREADY),
      .xt_rsc_0_31_ARVALID(xt_rsc_0_31_ARVALID),
      .xt_rsc_0_31_ARUSER(xt_rsc_0_31_ARUSER),
      .xt_rsc_0_31_ARREGION(xt_rsc_0_31_ARREGION),
      .xt_rsc_0_31_ARQOS(xt_rsc_0_31_ARQOS),
      .xt_rsc_0_31_ARPROT(xt_rsc_0_31_ARPROT),
      .xt_rsc_0_31_ARCACHE(xt_rsc_0_31_ARCACHE),
      .xt_rsc_0_31_ARLOCK(xt_rsc_0_31_ARLOCK),
      .xt_rsc_0_31_ARBURST(xt_rsc_0_31_ARBURST),
      .xt_rsc_0_31_ARSIZE(xt_rsc_0_31_ARSIZE),
      .xt_rsc_0_31_ARLEN(xt_rsc_0_31_ARLEN),
      .xt_rsc_0_31_ARADDR(xt_rsc_0_31_ARADDR),
      .xt_rsc_0_31_ARID(xt_rsc_0_31_ARID),
      .xt_rsc_0_31_BREADY(xt_rsc_0_31_BREADY),
      .xt_rsc_0_31_BVALID(xt_rsc_0_31_BVALID),
      .xt_rsc_0_31_BUSER(xt_rsc_0_31_BUSER),
      .xt_rsc_0_31_BRESP(xt_rsc_0_31_BRESP),
      .xt_rsc_0_31_BID(xt_rsc_0_31_BID),
      .xt_rsc_0_31_WREADY(xt_rsc_0_31_WREADY),
      .xt_rsc_0_31_WVALID(xt_rsc_0_31_WVALID),
      .xt_rsc_0_31_WUSER(xt_rsc_0_31_WUSER),
      .xt_rsc_0_31_WLAST(xt_rsc_0_31_WLAST),
      .xt_rsc_0_31_WSTRB(xt_rsc_0_31_WSTRB),
      .xt_rsc_0_31_WDATA(xt_rsc_0_31_WDATA),
      .xt_rsc_0_31_AWREADY(xt_rsc_0_31_AWREADY),
      .xt_rsc_0_31_AWVALID(xt_rsc_0_31_AWVALID),
      .xt_rsc_0_31_AWUSER(xt_rsc_0_31_AWUSER),
      .xt_rsc_0_31_AWREGION(xt_rsc_0_31_AWREGION),
      .xt_rsc_0_31_AWQOS(xt_rsc_0_31_AWQOS),
      .xt_rsc_0_31_AWPROT(xt_rsc_0_31_AWPROT),
      .xt_rsc_0_31_AWCACHE(xt_rsc_0_31_AWCACHE),
      .xt_rsc_0_31_AWLOCK(xt_rsc_0_31_AWLOCK),
      .xt_rsc_0_31_AWBURST(xt_rsc_0_31_AWBURST),
      .xt_rsc_0_31_AWSIZE(xt_rsc_0_31_AWSIZE),
      .xt_rsc_0_31_AWLEN(xt_rsc_0_31_AWLEN),
      .xt_rsc_0_31_AWADDR(xt_rsc_0_31_AWADDR),
      .xt_rsc_0_31_AWID(xt_rsc_0_31_AWID),
      .xt_rsc_triosy_0_31_lz(xt_rsc_triosy_0_31_lz),
      .xt_rsc_1_0_s_tdone(xt_rsc_1_0_s_tdone),
      .xt_rsc_1_0_tr_write_done(xt_rsc_1_0_tr_write_done),
      .xt_rsc_1_0_RREADY(xt_rsc_1_0_RREADY),
      .xt_rsc_1_0_RVALID(xt_rsc_1_0_RVALID),
      .xt_rsc_1_0_RUSER(xt_rsc_1_0_RUSER),
      .xt_rsc_1_0_RLAST(xt_rsc_1_0_RLAST),
      .xt_rsc_1_0_RRESP(xt_rsc_1_0_RRESP),
      .xt_rsc_1_0_RDATA(xt_rsc_1_0_RDATA),
      .xt_rsc_1_0_RID(xt_rsc_1_0_RID),
      .xt_rsc_1_0_ARREADY(xt_rsc_1_0_ARREADY),
      .xt_rsc_1_0_ARVALID(xt_rsc_1_0_ARVALID),
      .xt_rsc_1_0_ARUSER(xt_rsc_1_0_ARUSER),
      .xt_rsc_1_0_ARREGION(xt_rsc_1_0_ARREGION),
      .xt_rsc_1_0_ARQOS(xt_rsc_1_0_ARQOS),
      .xt_rsc_1_0_ARPROT(xt_rsc_1_0_ARPROT),
      .xt_rsc_1_0_ARCACHE(xt_rsc_1_0_ARCACHE),
      .xt_rsc_1_0_ARLOCK(xt_rsc_1_0_ARLOCK),
      .xt_rsc_1_0_ARBURST(xt_rsc_1_0_ARBURST),
      .xt_rsc_1_0_ARSIZE(xt_rsc_1_0_ARSIZE),
      .xt_rsc_1_0_ARLEN(xt_rsc_1_0_ARLEN),
      .xt_rsc_1_0_ARADDR(xt_rsc_1_0_ARADDR),
      .xt_rsc_1_0_ARID(xt_rsc_1_0_ARID),
      .xt_rsc_1_0_BREADY(xt_rsc_1_0_BREADY),
      .xt_rsc_1_0_BVALID(xt_rsc_1_0_BVALID),
      .xt_rsc_1_0_BUSER(xt_rsc_1_0_BUSER),
      .xt_rsc_1_0_BRESP(xt_rsc_1_0_BRESP),
      .xt_rsc_1_0_BID(xt_rsc_1_0_BID),
      .xt_rsc_1_0_WREADY(xt_rsc_1_0_WREADY),
      .xt_rsc_1_0_WVALID(xt_rsc_1_0_WVALID),
      .xt_rsc_1_0_WUSER(xt_rsc_1_0_WUSER),
      .xt_rsc_1_0_WLAST(xt_rsc_1_0_WLAST),
      .xt_rsc_1_0_WSTRB(xt_rsc_1_0_WSTRB),
      .xt_rsc_1_0_WDATA(xt_rsc_1_0_WDATA),
      .xt_rsc_1_0_AWREADY(xt_rsc_1_0_AWREADY),
      .xt_rsc_1_0_AWVALID(xt_rsc_1_0_AWVALID),
      .xt_rsc_1_0_AWUSER(xt_rsc_1_0_AWUSER),
      .xt_rsc_1_0_AWREGION(xt_rsc_1_0_AWREGION),
      .xt_rsc_1_0_AWQOS(xt_rsc_1_0_AWQOS),
      .xt_rsc_1_0_AWPROT(xt_rsc_1_0_AWPROT),
      .xt_rsc_1_0_AWCACHE(xt_rsc_1_0_AWCACHE),
      .xt_rsc_1_0_AWLOCK(xt_rsc_1_0_AWLOCK),
      .xt_rsc_1_0_AWBURST(xt_rsc_1_0_AWBURST),
      .xt_rsc_1_0_AWSIZE(xt_rsc_1_0_AWSIZE),
      .xt_rsc_1_0_AWLEN(xt_rsc_1_0_AWLEN),
      .xt_rsc_1_0_AWADDR(xt_rsc_1_0_AWADDR),
      .xt_rsc_1_0_AWID(xt_rsc_1_0_AWID),
      .xt_rsc_triosy_1_0_lz(xt_rsc_triosy_1_0_lz),
      .xt_rsc_1_1_s_tdone(xt_rsc_1_1_s_tdone),
      .xt_rsc_1_1_tr_write_done(xt_rsc_1_1_tr_write_done),
      .xt_rsc_1_1_RREADY(xt_rsc_1_1_RREADY),
      .xt_rsc_1_1_RVALID(xt_rsc_1_1_RVALID),
      .xt_rsc_1_1_RUSER(xt_rsc_1_1_RUSER),
      .xt_rsc_1_1_RLAST(xt_rsc_1_1_RLAST),
      .xt_rsc_1_1_RRESP(xt_rsc_1_1_RRESP),
      .xt_rsc_1_1_RDATA(xt_rsc_1_1_RDATA),
      .xt_rsc_1_1_RID(xt_rsc_1_1_RID),
      .xt_rsc_1_1_ARREADY(xt_rsc_1_1_ARREADY),
      .xt_rsc_1_1_ARVALID(xt_rsc_1_1_ARVALID),
      .xt_rsc_1_1_ARUSER(xt_rsc_1_1_ARUSER),
      .xt_rsc_1_1_ARREGION(xt_rsc_1_1_ARREGION),
      .xt_rsc_1_1_ARQOS(xt_rsc_1_1_ARQOS),
      .xt_rsc_1_1_ARPROT(xt_rsc_1_1_ARPROT),
      .xt_rsc_1_1_ARCACHE(xt_rsc_1_1_ARCACHE),
      .xt_rsc_1_1_ARLOCK(xt_rsc_1_1_ARLOCK),
      .xt_rsc_1_1_ARBURST(xt_rsc_1_1_ARBURST),
      .xt_rsc_1_1_ARSIZE(xt_rsc_1_1_ARSIZE),
      .xt_rsc_1_1_ARLEN(xt_rsc_1_1_ARLEN),
      .xt_rsc_1_1_ARADDR(xt_rsc_1_1_ARADDR),
      .xt_rsc_1_1_ARID(xt_rsc_1_1_ARID),
      .xt_rsc_1_1_BREADY(xt_rsc_1_1_BREADY),
      .xt_rsc_1_1_BVALID(xt_rsc_1_1_BVALID),
      .xt_rsc_1_1_BUSER(xt_rsc_1_1_BUSER),
      .xt_rsc_1_1_BRESP(xt_rsc_1_1_BRESP),
      .xt_rsc_1_1_BID(xt_rsc_1_1_BID),
      .xt_rsc_1_1_WREADY(xt_rsc_1_1_WREADY),
      .xt_rsc_1_1_WVALID(xt_rsc_1_1_WVALID),
      .xt_rsc_1_1_WUSER(xt_rsc_1_1_WUSER),
      .xt_rsc_1_1_WLAST(xt_rsc_1_1_WLAST),
      .xt_rsc_1_1_WSTRB(xt_rsc_1_1_WSTRB),
      .xt_rsc_1_1_WDATA(xt_rsc_1_1_WDATA),
      .xt_rsc_1_1_AWREADY(xt_rsc_1_1_AWREADY),
      .xt_rsc_1_1_AWVALID(xt_rsc_1_1_AWVALID),
      .xt_rsc_1_1_AWUSER(xt_rsc_1_1_AWUSER),
      .xt_rsc_1_1_AWREGION(xt_rsc_1_1_AWREGION),
      .xt_rsc_1_1_AWQOS(xt_rsc_1_1_AWQOS),
      .xt_rsc_1_1_AWPROT(xt_rsc_1_1_AWPROT),
      .xt_rsc_1_1_AWCACHE(xt_rsc_1_1_AWCACHE),
      .xt_rsc_1_1_AWLOCK(xt_rsc_1_1_AWLOCK),
      .xt_rsc_1_1_AWBURST(xt_rsc_1_1_AWBURST),
      .xt_rsc_1_1_AWSIZE(xt_rsc_1_1_AWSIZE),
      .xt_rsc_1_1_AWLEN(xt_rsc_1_1_AWLEN),
      .xt_rsc_1_1_AWADDR(xt_rsc_1_1_AWADDR),
      .xt_rsc_1_1_AWID(xt_rsc_1_1_AWID),
      .xt_rsc_triosy_1_1_lz(xt_rsc_triosy_1_1_lz),
      .xt_rsc_1_2_s_tdone(xt_rsc_1_2_s_tdone),
      .xt_rsc_1_2_tr_write_done(xt_rsc_1_2_tr_write_done),
      .xt_rsc_1_2_RREADY(xt_rsc_1_2_RREADY),
      .xt_rsc_1_2_RVALID(xt_rsc_1_2_RVALID),
      .xt_rsc_1_2_RUSER(xt_rsc_1_2_RUSER),
      .xt_rsc_1_2_RLAST(xt_rsc_1_2_RLAST),
      .xt_rsc_1_2_RRESP(xt_rsc_1_2_RRESP),
      .xt_rsc_1_2_RDATA(xt_rsc_1_2_RDATA),
      .xt_rsc_1_2_RID(xt_rsc_1_2_RID),
      .xt_rsc_1_2_ARREADY(xt_rsc_1_2_ARREADY),
      .xt_rsc_1_2_ARVALID(xt_rsc_1_2_ARVALID),
      .xt_rsc_1_2_ARUSER(xt_rsc_1_2_ARUSER),
      .xt_rsc_1_2_ARREGION(xt_rsc_1_2_ARREGION),
      .xt_rsc_1_2_ARQOS(xt_rsc_1_2_ARQOS),
      .xt_rsc_1_2_ARPROT(xt_rsc_1_2_ARPROT),
      .xt_rsc_1_2_ARCACHE(xt_rsc_1_2_ARCACHE),
      .xt_rsc_1_2_ARLOCK(xt_rsc_1_2_ARLOCK),
      .xt_rsc_1_2_ARBURST(xt_rsc_1_2_ARBURST),
      .xt_rsc_1_2_ARSIZE(xt_rsc_1_2_ARSIZE),
      .xt_rsc_1_2_ARLEN(xt_rsc_1_2_ARLEN),
      .xt_rsc_1_2_ARADDR(xt_rsc_1_2_ARADDR),
      .xt_rsc_1_2_ARID(xt_rsc_1_2_ARID),
      .xt_rsc_1_2_BREADY(xt_rsc_1_2_BREADY),
      .xt_rsc_1_2_BVALID(xt_rsc_1_2_BVALID),
      .xt_rsc_1_2_BUSER(xt_rsc_1_2_BUSER),
      .xt_rsc_1_2_BRESP(xt_rsc_1_2_BRESP),
      .xt_rsc_1_2_BID(xt_rsc_1_2_BID),
      .xt_rsc_1_2_WREADY(xt_rsc_1_2_WREADY),
      .xt_rsc_1_2_WVALID(xt_rsc_1_2_WVALID),
      .xt_rsc_1_2_WUSER(xt_rsc_1_2_WUSER),
      .xt_rsc_1_2_WLAST(xt_rsc_1_2_WLAST),
      .xt_rsc_1_2_WSTRB(xt_rsc_1_2_WSTRB),
      .xt_rsc_1_2_WDATA(xt_rsc_1_2_WDATA),
      .xt_rsc_1_2_AWREADY(xt_rsc_1_2_AWREADY),
      .xt_rsc_1_2_AWVALID(xt_rsc_1_2_AWVALID),
      .xt_rsc_1_2_AWUSER(xt_rsc_1_2_AWUSER),
      .xt_rsc_1_2_AWREGION(xt_rsc_1_2_AWREGION),
      .xt_rsc_1_2_AWQOS(xt_rsc_1_2_AWQOS),
      .xt_rsc_1_2_AWPROT(xt_rsc_1_2_AWPROT),
      .xt_rsc_1_2_AWCACHE(xt_rsc_1_2_AWCACHE),
      .xt_rsc_1_2_AWLOCK(xt_rsc_1_2_AWLOCK),
      .xt_rsc_1_2_AWBURST(xt_rsc_1_2_AWBURST),
      .xt_rsc_1_2_AWSIZE(xt_rsc_1_2_AWSIZE),
      .xt_rsc_1_2_AWLEN(xt_rsc_1_2_AWLEN),
      .xt_rsc_1_2_AWADDR(xt_rsc_1_2_AWADDR),
      .xt_rsc_1_2_AWID(xt_rsc_1_2_AWID),
      .xt_rsc_triosy_1_2_lz(xt_rsc_triosy_1_2_lz),
      .xt_rsc_1_3_s_tdone(xt_rsc_1_3_s_tdone),
      .xt_rsc_1_3_tr_write_done(xt_rsc_1_3_tr_write_done),
      .xt_rsc_1_3_RREADY(xt_rsc_1_3_RREADY),
      .xt_rsc_1_3_RVALID(xt_rsc_1_3_RVALID),
      .xt_rsc_1_3_RUSER(xt_rsc_1_3_RUSER),
      .xt_rsc_1_3_RLAST(xt_rsc_1_3_RLAST),
      .xt_rsc_1_3_RRESP(xt_rsc_1_3_RRESP),
      .xt_rsc_1_3_RDATA(xt_rsc_1_3_RDATA),
      .xt_rsc_1_3_RID(xt_rsc_1_3_RID),
      .xt_rsc_1_3_ARREADY(xt_rsc_1_3_ARREADY),
      .xt_rsc_1_3_ARVALID(xt_rsc_1_3_ARVALID),
      .xt_rsc_1_3_ARUSER(xt_rsc_1_3_ARUSER),
      .xt_rsc_1_3_ARREGION(xt_rsc_1_3_ARREGION),
      .xt_rsc_1_3_ARQOS(xt_rsc_1_3_ARQOS),
      .xt_rsc_1_3_ARPROT(xt_rsc_1_3_ARPROT),
      .xt_rsc_1_3_ARCACHE(xt_rsc_1_3_ARCACHE),
      .xt_rsc_1_3_ARLOCK(xt_rsc_1_3_ARLOCK),
      .xt_rsc_1_3_ARBURST(xt_rsc_1_3_ARBURST),
      .xt_rsc_1_3_ARSIZE(xt_rsc_1_3_ARSIZE),
      .xt_rsc_1_3_ARLEN(xt_rsc_1_3_ARLEN),
      .xt_rsc_1_3_ARADDR(xt_rsc_1_3_ARADDR),
      .xt_rsc_1_3_ARID(xt_rsc_1_3_ARID),
      .xt_rsc_1_3_BREADY(xt_rsc_1_3_BREADY),
      .xt_rsc_1_3_BVALID(xt_rsc_1_3_BVALID),
      .xt_rsc_1_3_BUSER(xt_rsc_1_3_BUSER),
      .xt_rsc_1_3_BRESP(xt_rsc_1_3_BRESP),
      .xt_rsc_1_3_BID(xt_rsc_1_3_BID),
      .xt_rsc_1_3_WREADY(xt_rsc_1_3_WREADY),
      .xt_rsc_1_3_WVALID(xt_rsc_1_3_WVALID),
      .xt_rsc_1_3_WUSER(xt_rsc_1_3_WUSER),
      .xt_rsc_1_3_WLAST(xt_rsc_1_3_WLAST),
      .xt_rsc_1_3_WSTRB(xt_rsc_1_3_WSTRB),
      .xt_rsc_1_3_WDATA(xt_rsc_1_3_WDATA),
      .xt_rsc_1_3_AWREADY(xt_rsc_1_3_AWREADY),
      .xt_rsc_1_3_AWVALID(xt_rsc_1_3_AWVALID),
      .xt_rsc_1_3_AWUSER(xt_rsc_1_3_AWUSER),
      .xt_rsc_1_3_AWREGION(xt_rsc_1_3_AWREGION),
      .xt_rsc_1_3_AWQOS(xt_rsc_1_3_AWQOS),
      .xt_rsc_1_3_AWPROT(xt_rsc_1_3_AWPROT),
      .xt_rsc_1_3_AWCACHE(xt_rsc_1_3_AWCACHE),
      .xt_rsc_1_3_AWLOCK(xt_rsc_1_3_AWLOCK),
      .xt_rsc_1_3_AWBURST(xt_rsc_1_3_AWBURST),
      .xt_rsc_1_3_AWSIZE(xt_rsc_1_3_AWSIZE),
      .xt_rsc_1_3_AWLEN(xt_rsc_1_3_AWLEN),
      .xt_rsc_1_3_AWADDR(xt_rsc_1_3_AWADDR),
      .xt_rsc_1_3_AWID(xt_rsc_1_3_AWID),
      .xt_rsc_triosy_1_3_lz(xt_rsc_triosy_1_3_lz),
      .xt_rsc_1_4_s_tdone(xt_rsc_1_4_s_tdone),
      .xt_rsc_1_4_tr_write_done(xt_rsc_1_4_tr_write_done),
      .xt_rsc_1_4_RREADY(xt_rsc_1_4_RREADY),
      .xt_rsc_1_4_RVALID(xt_rsc_1_4_RVALID),
      .xt_rsc_1_4_RUSER(xt_rsc_1_4_RUSER),
      .xt_rsc_1_4_RLAST(xt_rsc_1_4_RLAST),
      .xt_rsc_1_4_RRESP(xt_rsc_1_4_RRESP),
      .xt_rsc_1_4_RDATA(xt_rsc_1_4_RDATA),
      .xt_rsc_1_4_RID(xt_rsc_1_4_RID),
      .xt_rsc_1_4_ARREADY(xt_rsc_1_4_ARREADY),
      .xt_rsc_1_4_ARVALID(xt_rsc_1_4_ARVALID),
      .xt_rsc_1_4_ARUSER(xt_rsc_1_4_ARUSER),
      .xt_rsc_1_4_ARREGION(xt_rsc_1_4_ARREGION),
      .xt_rsc_1_4_ARQOS(xt_rsc_1_4_ARQOS),
      .xt_rsc_1_4_ARPROT(xt_rsc_1_4_ARPROT),
      .xt_rsc_1_4_ARCACHE(xt_rsc_1_4_ARCACHE),
      .xt_rsc_1_4_ARLOCK(xt_rsc_1_4_ARLOCK),
      .xt_rsc_1_4_ARBURST(xt_rsc_1_4_ARBURST),
      .xt_rsc_1_4_ARSIZE(xt_rsc_1_4_ARSIZE),
      .xt_rsc_1_4_ARLEN(xt_rsc_1_4_ARLEN),
      .xt_rsc_1_4_ARADDR(xt_rsc_1_4_ARADDR),
      .xt_rsc_1_4_ARID(xt_rsc_1_4_ARID),
      .xt_rsc_1_4_BREADY(xt_rsc_1_4_BREADY),
      .xt_rsc_1_4_BVALID(xt_rsc_1_4_BVALID),
      .xt_rsc_1_4_BUSER(xt_rsc_1_4_BUSER),
      .xt_rsc_1_4_BRESP(xt_rsc_1_4_BRESP),
      .xt_rsc_1_4_BID(xt_rsc_1_4_BID),
      .xt_rsc_1_4_WREADY(xt_rsc_1_4_WREADY),
      .xt_rsc_1_4_WVALID(xt_rsc_1_4_WVALID),
      .xt_rsc_1_4_WUSER(xt_rsc_1_4_WUSER),
      .xt_rsc_1_4_WLAST(xt_rsc_1_4_WLAST),
      .xt_rsc_1_4_WSTRB(xt_rsc_1_4_WSTRB),
      .xt_rsc_1_4_WDATA(xt_rsc_1_4_WDATA),
      .xt_rsc_1_4_AWREADY(xt_rsc_1_4_AWREADY),
      .xt_rsc_1_4_AWVALID(xt_rsc_1_4_AWVALID),
      .xt_rsc_1_4_AWUSER(xt_rsc_1_4_AWUSER),
      .xt_rsc_1_4_AWREGION(xt_rsc_1_4_AWREGION),
      .xt_rsc_1_4_AWQOS(xt_rsc_1_4_AWQOS),
      .xt_rsc_1_4_AWPROT(xt_rsc_1_4_AWPROT),
      .xt_rsc_1_4_AWCACHE(xt_rsc_1_4_AWCACHE),
      .xt_rsc_1_4_AWLOCK(xt_rsc_1_4_AWLOCK),
      .xt_rsc_1_4_AWBURST(xt_rsc_1_4_AWBURST),
      .xt_rsc_1_4_AWSIZE(xt_rsc_1_4_AWSIZE),
      .xt_rsc_1_4_AWLEN(xt_rsc_1_4_AWLEN),
      .xt_rsc_1_4_AWADDR(xt_rsc_1_4_AWADDR),
      .xt_rsc_1_4_AWID(xt_rsc_1_4_AWID),
      .xt_rsc_triosy_1_4_lz(xt_rsc_triosy_1_4_lz),
      .xt_rsc_1_5_s_tdone(xt_rsc_1_5_s_tdone),
      .xt_rsc_1_5_tr_write_done(xt_rsc_1_5_tr_write_done),
      .xt_rsc_1_5_RREADY(xt_rsc_1_5_RREADY),
      .xt_rsc_1_5_RVALID(xt_rsc_1_5_RVALID),
      .xt_rsc_1_5_RUSER(xt_rsc_1_5_RUSER),
      .xt_rsc_1_5_RLAST(xt_rsc_1_5_RLAST),
      .xt_rsc_1_5_RRESP(xt_rsc_1_5_RRESP),
      .xt_rsc_1_5_RDATA(xt_rsc_1_5_RDATA),
      .xt_rsc_1_5_RID(xt_rsc_1_5_RID),
      .xt_rsc_1_5_ARREADY(xt_rsc_1_5_ARREADY),
      .xt_rsc_1_5_ARVALID(xt_rsc_1_5_ARVALID),
      .xt_rsc_1_5_ARUSER(xt_rsc_1_5_ARUSER),
      .xt_rsc_1_5_ARREGION(xt_rsc_1_5_ARREGION),
      .xt_rsc_1_5_ARQOS(xt_rsc_1_5_ARQOS),
      .xt_rsc_1_5_ARPROT(xt_rsc_1_5_ARPROT),
      .xt_rsc_1_5_ARCACHE(xt_rsc_1_5_ARCACHE),
      .xt_rsc_1_5_ARLOCK(xt_rsc_1_5_ARLOCK),
      .xt_rsc_1_5_ARBURST(xt_rsc_1_5_ARBURST),
      .xt_rsc_1_5_ARSIZE(xt_rsc_1_5_ARSIZE),
      .xt_rsc_1_5_ARLEN(xt_rsc_1_5_ARLEN),
      .xt_rsc_1_5_ARADDR(xt_rsc_1_5_ARADDR),
      .xt_rsc_1_5_ARID(xt_rsc_1_5_ARID),
      .xt_rsc_1_5_BREADY(xt_rsc_1_5_BREADY),
      .xt_rsc_1_5_BVALID(xt_rsc_1_5_BVALID),
      .xt_rsc_1_5_BUSER(xt_rsc_1_5_BUSER),
      .xt_rsc_1_5_BRESP(xt_rsc_1_5_BRESP),
      .xt_rsc_1_5_BID(xt_rsc_1_5_BID),
      .xt_rsc_1_5_WREADY(xt_rsc_1_5_WREADY),
      .xt_rsc_1_5_WVALID(xt_rsc_1_5_WVALID),
      .xt_rsc_1_5_WUSER(xt_rsc_1_5_WUSER),
      .xt_rsc_1_5_WLAST(xt_rsc_1_5_WLAST),
      .xt_rsc_1_5_WSTRB(xt_rsc_1_5_WSTRB),
      .xt_rsc_1_5_WDATA(xt_rsc_1_5_WDATA),
      .xt_rsc_1_5_AWREADY(xt_rsc_1_5_AWREADY),
      .xt_rsc_1_5_AWVALID(xt_rsc_1_5_AWVALID),
      .xt_rsc_1_5_AWUSER(xt_rsc_1_5_AWUSER),
      .xt_rsc_1_5_AWREGION(xt_rsc_1_5_AWREGION),
      .xt_rsc_1_5_AWQOS(xt_rsc_1_5_AWQOS),
      .xt_rsc_1_5_AWPROT(xt_rsc_1_5_AWPROT),
      .xt_rsc_1_5_AWCACHE(xt_rsc_1_5_AWCACHE),
      .xt_rsc_1_5_AWLOCK(xt_rsc_1_5_AWLOCK),
      .xt_rsc_1_5_AWBURST(xt_rsc_1_5_AWBURST),
      .xt_rsc_1_5_AWSIZE(xt_rsc_1_5_AWSIZE),
      .xt_rsc_1_5_AWLEN(xt_rsc_1_5_AWLEN),
      .xt_rsc_1_5_AWADDR(xt_rsc_1_5_AWADDR),
      .xt_rsc_1_5_AWID(xt_rsc_1_5_AWID),
      .xt_rsc_triosy_1_5_lz(xt_rsc_triosy_1_5_lz),
      .xt_rsc_1_6_s_tdone(xt_rsc_1_6_s_tdone),
      .xt_rsc_1_6_tr_write_done(xt_rsc_1_6_tr_write_done),
      .xt_rsc_1_6_RREADY(xt_rsc_1_6_RREADY),
      .xt_rsc_1_6_RVALID(xt_rsc_1_6_RVALID),
      .xt_rsc_1_6_RUSER(xt_rsc_1_6_RUSER),
      .xt_rsc_1_6_RLAST(xt_rsc_1_6_RLAST),
      .xt_rsc_1_6_RRESP(xt_rsc_1_6_RRESP),
      .xt_rsc_1_6_RDATA(xt_rsc_1_6_RDATA),
      .xt_rsc_1_6_RID(xt_rsc_1_6_RID),
      .xt_rsc_1_6_ARREADY(xt_rsc_1_6_ARREADY),
      .xt_rsc_1_6_ARVALID(xt_rsc_1_6_ARVALID),
      .xt_rsc_1_6_ARUSER(xt_rsc_1_6_ARUSER),
      .xt_rsc_1_6_ARREGION(xt_rsc_1_6_ARREGION),
      .xt_rsc_1_6_ARQOS(xt_rsc_1_6_ARQOS),
      .xt_rsc_1_6_ARPROT(xt_rsc_1_6_ARPROT),
      .xt_rsc_1_6_ARCACHE(xt_rsc_1_6_ARCACHE),
      .xt_rsc_1_6_ARLOCK(xt_rsc_1_6_ARLOCK),
      .xt_rsc_1_6_ARBURST(xt_rsc_1_6_ARBURST),
      .xt_rsc_1_6_ARSIZE(xt_rsc_1_6_ARSIZE),
      .xt_rsc_1_6_ARLEN(xt_rsc_1_6_ARLEN),
      .xt_rsc_1_6_ARADDR(xt_rsc_1_6_ARADDR),
      .xt_rsc_1_6_ARID(xt_rsc_1_6_ARID),
      .xt_rsc_1_6_BREADY(xt_rsc_1_6_BREADY),
      .xt_rsc_1_6_BVALID(xt_rsc_1_6_BVALID),
      .xt_rsc_1_6_BUSER(xt_rsc_1_6_BUSER),
      .xt_rsc_1_6_BRESP(xt_rsc_1_6_BRESP),
      .xt_rsc_1_6_BID(xt_rsc_1_6_BID),
      .xt_rsc_1_6_WREADY(xt_rsc_1_6_WREADY),
      .xt_rsc_1_6_WVALID(xt_rsc_1_6_WVALID),
      .xt_rsc_1_6_WUSER(xt_rsc_1_6_WUSER),
      .xt_rsc_1_6_WLAST(xt_rsc_1_6_WLAST),
      .xt_rsc_1_6_WSTRB(xt_rsc_1_6_WSTRB),
      .xt_rsc_1_6_WDATA(xt_rsc_1_6_WDATA),
      .xt_rsc_1_6_AWREADY(xt_rsc_1_6_AWREADY),
      .xt_rsc_1_6_AWVALID(xt_rsc_1_6_AWVALID),
      .xt_rsc_1_6_AWUSER(xt_rsc_1_6_AWUSER),
      .xt_rsc_1_6_AWREGION(xt_rsc_1_6_AWREGION),
      .xt_rsc_1_6_AWQOS(xt_rsc_1_6_AWQOS),
      .xt_rsc_1_6_AWPROT(xt_rsc_1_6_AWPROT),
      .xt_rsc_1_6_AWCACHE(xt_rsc_1_6_AWCACHE),
      .xt_rsc_1_6_AWLOCK(xt_rsc_1_6_AWLOCK),
      .xt_rsc_1_6_AWBURST(xt_rsc_1_6_AWBURST),
      .xt_rsc_1_6_AWSIZE(xt_rsc_1_6_AWSIZE),
      .xt_rsc_1_6_AWLEN(xt_rsc_1_6_AWLEN),
      .xt_rsc_1_6_AWADDR(xt_rsc_1_6_AWADDR),
      .xt_rsc_1_6_AWID(xt_rsc_1_6_AWID),
      .xt_rsc_triosy_1_6_lz(xt_rsc_triosy_1_6_lz),
      .xt_rsc_1_7_s_tdone(xt_rsc_1_7_s_tdone),
      .xt_rsc_1_7_tr_write_done(xt_rsc_1_7_tr_write_done),
      .xt_rsc_1_7_RREADY(xt_rsc_1_7_RREADY),
      .xt_rsc_1_7_RVALID(xt_rsc_1_7_RVALID),
      .xt_rsc_1_7_RUSER(xt_rsc_1_7_RUSER),
      .xt_rsc_1_7_RLAST(xt_rsc_1_7_RLAST),
      .xt_rsc_1_7_RRESP(xt_rsc_1_7_RRESP),
      .xt_rsc_1_7_RDATA(xt_rsc_1_7_RDATA),
      .xt_rsc_1_7_RID(xt_rsc_1_7_RID),
      .xt_rsc_1_7_ARREADY(xt_rsc_1_7_ARREADY),
      .xt_rsc_1_7_ARVALID(xt_rsc_1_7_ARVALID),
      .xt_rsc_1_7_ARUSER(xt_rsc_1_7_ARUSER),
      .xt_rsc_1_7_ARREGION(xt_rsc_1_7_ARREGION),
      .xt_rsc_1_7_ARQOS(xt_rsc_1_7_ARQOS),
      .xt_rsc_1_7_ARPROT(xt_rsc_1_7_ARPROT),
      .xt_rsc_1_7_ARCACHE(xt_rsc_1_7_ARCACHE),
      .xt_rsc_1_7_ARLOCK(xt_rsc_1_7_ARLOCK),
      .xt_rsc_1_7_ARBURST(xt_rsc_1_7_ARBURST),
      .xt_rsc_1_7_ARSIZE(xt_rsc_1_7_ARSIZE),
      .xt_rsc_1_7_ARLEN(xt_rsc_1_7_ARLEN),
      .xt_rsc_1_7_ARADDR(xt_rsc_1_7_ARADDR),
      .xt_rsc_1_7_ARID(xt_rsc_1_7_ARID),
      .xt_rsc_1_7_BREADY(xt_rsc_1_7_BREADY),
      .xt_rsc_1_7_BVALID(xt_rsc_1_7_BVALID),
      .xt_rsc_1_7_BUSER(xt_rsc_1_7_BUSER),
      .xt_rsc_1_7_BRESP(xt_rsc_1_7_BRESP),
      .xt_rsc_1_7_BID(xt_rsc_1_7_BID),
      .xt_rsc_1_7_WREADY(xt_rsc_1_7_WREADY),
      .xt_rsc_1_7_WVALID(xt_rsc_1_7_WVALID),
      .xt_rsc_1_7_WUSER(xt_rsc_1_7_WUSER),
      .xt_rsc_1_7_WLAST(xt_rsc_1_7_WLAST),
      .xt_rsc_1_7_WSTRB(xt_rsc_1_7_WSTRB),
      .xt_rsc_1_7_WDATA(xt_rsc_1_7_WDATA),
      .xt_rsc_1_7_AWREADY(xt_rsc_1_7_AWREADY),
      .xt_rsc_1_7_AWVALID(xt_rsc_1_7_AWVALID),
      .xt_rsc_1_7_AWUSER(xt_rsc_1_7_AWUSER),
      .xt_rsc_1_7_AWREGION(xt_rsc_1_7_AWREGION),
      .xt_rsc_1_7_AWQOS(xt_rsc_1_7_AWQOS),
      .xt_rsc_1_7_AWPROT(xt_rsc_1_7_AWPROT),
      .xt_rsc_1_7_AWCACHE(xt_rsc_1_7_AWCACHE),
      .xt_rsc_1_7_AWLOCK(xt_rsc_1_7_AWLOCK),
      .xt_rsc_1_7_AWBURST(xt_rsc_1_7_AWBURST),
      .xt_rsc_1_7_AWSIZE(xt_rsc_1_7_AWSIZE),
      .xt_rsc_1_7_AWLEN(xt_rsc_1_7_AWLEN),
      .xt_rsc_1_7_AWADDR(xt_rsc_1_7_AWADDR),
      .xt_rsc_1_7_AWID(xt_rsc_1_7_AWID),
      .xt_rsc_triosy_1_7_lz(xt_rsc_triosy_1_7_lz),
      .xt_rsc_1_8_s_tdone(xt_rsc_1_8_s_tdone),
      .xt_rsc_1_8_tr_write_done(xt_rsc_1_8_tr_write_done),
      .xt_rsc_1_8_RREADY(xt_rsc_1_8_RREADY),
      .xt_rsc_1_8_RVALID(xt_rsc_1_8_RVALID),
      .xt_rsc_1_8_RUSER(xt_rsc_1_8_RUSER),
      .xt_rsc_1_8_RLAST(xt_rsc_1_8_RLAST),
      .xt_rsc_1_8_RRESP(xt_rsc_1_8_RRESP),
      .xt_rsc_1_8_RDATA(xt_rsc_1_8_RDATA),
      .xt_rsc_1_8_RID(xt_rsc_1_8_RID),
      .xt_rsc_1_8_ARREADY(xt_rsc_1_8_ARREADY),
      .xt_rsc_1_8_ARVALID(xt_rsc_1_8_ARVALID),
      .xt_rsc_1_8_ARUSER(xt_rsc_1_8_ARUSER),
      .xt_rsc_1_8_ARREGION(xt_rsc_1_8_ARREGION),
      .xt_rsc_1_8_ARQOS(xt_rsc_1_8_ARQOS),
      .xt_rsc_1_8_ARPROT(xt_rsc_1_8_ARPROT),
      .xt_rsc_1_8_ARCACHE(xt_rsc_1_8_ARCACHE),
      .xt_rsc_1_8_ARLOCK(xt_rsc_1_8_ARLOCK),
      .xt_rsc_1_8_ARBURST(xt_rsc_1_8_ARBURST),
      .xt_rsc_1_8_ARSIZE(xt_rsc_1_8_ARSIZE),
      .xt_rsc_1_8_ARLEN(xt_rsc_1_8_ARLEN),
      .xt_rsc_1_8_ARADDR(xt_rsc_1_8_ARADDR),
      .xt_rsc_1_8_ARID(xt_rsc_1_8_ARID),
      .xt_rsc_1_8_BREADY(xt_rsc_1_8_BREADY),
      .xt_rsc_1_8_BVALID(xt_rsc_1_8_BVALID),
      .xt_rsc_1_8_BUSER(xt_rsc_1_8_BUSER),
      .xt_rsc_1_8_BRESP(xt_rsc_1_8_BRESP),
      .xt_rsc_1_8_BID(xt_rsc_1_8_BID),
      .xt_rsc_1_8_WREADY(xt_rsc_1_8_WREADY),
      .xt_rsc_1_8_WVALID(xt_rsc_1_8_WVALID),
      .xt_rsc_1_8_WUSER(xt_rsc_1_8_WUSER),
      .xt_rsc_1_8_WLAST(xt_rsc_1_8_WLAST),
      .xt_rsc_1_8_WSTRB(xt_rsc_1_8_WSTRB),
      .xt_rsc_1_8_WDATA(xt_rsc_1_8_WDATA),
      .xt_rsc_1_8_AWREADY(xt_rsc_1_8_AWREADY),
      .xt_rsc_1_8_AWVALID(xt_rsc_1_8_AWVALID),
      .xt_rsc_1_8_AWUSER(xt_rsc_1_8_AWUSER),
      .xt_rsc_1_8_AWREGION(xt_rsc_1_8_AWREGION),
      .xt_rsc_1_8_AWQOS(xt_rsc_1_8_AWQOS),
      .xt_rsc_1_8_AWPROT(xt_rsc_1_8_AWPROT),
      .xt_rsc_1_8_AWCACHE(xt_rsc_1_8_AWCACHE),
      .xt_rsc_1_8_AWLOCK(xt_rsc_1_8_AWLOCK),
      .xt_rsc_1_8_AWBURST(xt_rsc_1_8_AWBURST),
      .xt_rsc_1_8_AWSIZE(xt_rsc_1_8_AWSIZE),
      .xt_rsc_1_8_AWLEN(xt_rsc_1_8_AWLEN),
      .xt_rsc_1_8_AWADDR(xt_rsc_1_8_AWADDR),
      .xt_rsc_1_8_AWID(xt_rsc_1_8_AWID),
      .xt_rsc_triosy_1_8_lz(xt_rsc_triosy_1_8_lz),
      .xt_rsc_1_9_s_tdone(xt_rsc_1_9_s_tdone),
      .xt_rsc_1_9_tr_write_done(xt_rsc_1_9_tr_write_done),
      .xt_rsc_1_9_RREADY(xt_rsc_1_9_RREADY),
      .xt_rsc_1_9_RVALID(xt_rsc_1_9_RVALID),
      .xt_rsc_1_9_RUSER(xt_rsc_1_9_RUSER),
      .xt_rsc_1_9_RLAST(xt_rsc_1_9_RLAST),
      .xt_rsc_1_9_RRESP(xt_rsc_1_9_RRESP),
      .xt_rsc_1_9_RDATA(xt_rsc_1_9_RDATA),
      .xt_rsc_1_9_RID(xt_rsc_1_9_RID),
      .xt_rsc_1_9_ARREADY(xt_rsc_1_9_ARREADY),
      .xt_rsc_1_9_ARVALID(xt_rsc_1_9_ARVALID),
      .xt_rsc_1_9_ARUSER(xt_rsc_1_9_ARUSER),
      .xt_rsc_1_9_ARREGION(xt_rsc_1_9_ARREGION),
      .xt_rsc_1_9_ARQOS(xt_rsc_1_9_ARQOS),
      .xt_rsc_1_9_ARPROT(xt_rsc_1_9_ARPROT),
      .xt_rsc_1_9_ARCACHE(xt_rsc_1_9_ARCACHE),
      .xt_rsc_1_9_ARLOCK(xt_rsc_1_9_ARLOCK),
      .xt_rsc_1_9_ARBURST(xt_rsc_1_9_ARBURST),
      .xt_rsc_1_9_ARSIZE(xt_rsc_1_9_ARSIZE),
      .xt_rsc_1_9_ARLEN(xt_rsc_1_9_ARLEN),
      .xt_rsc_1_9_ARADDR(xt_rsc_1_9_ARADDR),
      .xt_rsc_1_9_ARID(xt_rsc_1_9_ARID),
      .xt_rsc_1_9_BREADY(xt_rsc_1_9_BREADY),
      .xt_rsc_1_9_BVALID(xt_rsc_1_9_BVALID),
      .xt_rsc_1_9_BUSER(xt_rsc_1_9_BUSER),
      .xt_rsc_1_9_BRESP(xt_rsc_1_9_BRESP),
      .xt_rsc_1_9_BID(xt_rsc_1_9_BID),
      .xt_rsc_1_9_WREADY(xt_rsc_1_9_WREADY),
      .xt_rsc_1_9_WVALID(xt_rsc_1_9_WVALID),
      .xt_rsc_1_9_WUSER(xt_rsc_1_9_WUSER),
      .xt_rsc_1_9_WLAST(xt_rsc_1_9_WLAST),
      .xt_rsc_1_9_WSTRB(xt_rsc_1_9_WSTRB),
      .xt_rsc_1_9_WDATA(xt_rsc_1_9_WDATA),
      .xt_rsc_1_9_AWREADY(xt_rsc_1_9_AWREADY),
      .xt_rsc_1_9_AWVALID(xt_rsc_1_9_AWVALID),
      .xt_rsc_1_9_AWUSER(xt_rsc_1_9_AWUSER),
      .xt_rsc_1_9_AWREGION(xt_rsc_1_9_AWREGION),
      .xt_rsc_1_9_AWQOS(xt_rsc_1_9_AWQOS),
      .xt_rsc_1_9_AWPROT(xt_rsc_1_9_AWPROT),
      .xt_rsc_1_9_AWCACHE(xt_rsc_1_9_AWCACHE),
      .xt_rsc_1_9_AWLOCK(xt_rsc_1_9_AWLOCK),
      .xt_rsc_1_9_AWBURST(xt_rsc_1_9_AWBURST),
      .xt_rsc_1_9_AWSIZE(xt_rsc_1_9_AWSIZE),
      .xt_rsc_1_9_AWLEN(xt_rsc_1_9_AWLEN),
      .xt_rsc_1_9_AWADDR(xt_rsc_1_9_AWADDR),
      .xt_rsc_1_9_AWID(xt_rsc_1_9_AWID),
      .xt_rsc_triosy_1_9_lz(xt_rsc_triosy_1_9_lz),
      .xt_rsc_1_10_s_tdone(xt_rsc_1_10_s_tdone),
      .xt_rsc_1_10_tr_write_done(xt_rsc_1_10_tr_write_done),
      .xt_rsc_1_10_RREADY(xt_rsc_1_10_RREADY),
      .xt_rsc_1_10_RVALID(xt_rsc_1_10_RVALID),
      .xt_rsc_1_10_RUSER(xt_rsc_1_10_RUSER),
      .xt_rsc_1_10_RLAST(xt_rsc_1_10_RLAST),
      .xt_rsc_1_10_RRESP(xt_rsc_1_10_RRESP),
      .xt_rsc_1_10_RDATA(xt_rsc_1_10_RDATA),
      .xt_rsc_1_10_RID(xt_rsc_1_10_RID),
      .xt_rsc_1_10_ARREADY(xt_rsc_1_10_ARREADY),
      .xt_rsc_1_10_ARVALID(xt_rsc_1_10_ARVALID),
      .xt_rsc_1_10_ARUSER(xt_rsc_1_10_ARUSER),
      .xt_rsc_1_10_ARREGION(xt_rsc_1_10_ARREGION),
      .xt_rsc_1_10_ARQOS(xt_rsc_1_10_ARQOS),
      .xt_rsc_1_10_ARPROT(xt_rsc_1_10_ARPROT),
      .xt_rsc_1_10_ARCACHE(xt_rsc_1_10_ARCACHE),
      .xt_rsc_1_10_ARLOCK(xt_rsc_1_10_ARLOCK),
      .xt_rsc_1_10_ARBURST(xt_rsc_1_10_ARBURST),
      .xt_rsc_1_10_ARSIZE(xt_rsc_1_10_ARSIZE),
      .xt_rsc_1_10_ARLEN(xt_rsc_1_10_ARLEN),
      .xt_rsc_1_10_ARADDR(xt_rsc_1_10_ARADDR),
      .xt_rsc_1_10_ARID(xt_rsc_1_10_ARID),
      .xt_rsc_1_10_BREADY(xt_rsc_1_10_BREADY),
      .xt_rsc_1_10_BVALID(xt_rsc_1_10_BVALID),
      .xt_rsc_1_10_BUSER(xt_rsc_1_10_BUSER),
      .xt_rsc_1_10_BRESP(xt_rsc_1_10_BRESP),
      .xt_rsc_1_10_BID(xt_rsc_1_10_BID),
      .xt_rsc_1_10_WREADY(xt_rsc_1_10_WREADY),
      .xt_rsc_1_10_WVALID(xt_rsc_1_10_WVALID),
      .xt_rsc_1_10_WUSER(xt_rsc_1_10_WUSER),
      .xt_rsc_1_10_WLAST(xt_rsc_1_10_WLAST),
      .xt_rsc_1_10_WSTRB(xt_rsc_1_10_WSTRB),
      .xt_rsc_1_10_WDATA(xt_rsc_1_10_WDATA),
      .xt_rsc_1_10_AWREADY(xt_rsc_1_10_AWREADY),
      .xt_rsc_1_10_AWVALID(xt_rsc_1_10_AWVALID),
      .xt_rsc_1_10_AWUSER(xt_rsc_1_10_AWUSER),
      .xt_rsc_1_10_AWREGION(xt_rsc_1_10_AWREGION),
      .xt_rsc_1_10_AWQOS(xt_rsc_1_10_AWQOS),
      .xt_rsc_1_10_AWPROT(xt_rsc_1_10_AWPROT),
      .xt_rsc_1_10_AWCACHE(xt_rsc_1_10_AWCACHE),
      .xt_rsc_1_10_AWLOCK(xt_rsc_1_10_AWLOCK),
      .xt_rsc_1_10_AWBURST(xt_rsc_1_10_AWBURST),
      .xt_rsc_1_10_AWSIZE(xt_rsc_1_10_AWSIZE),
      .xt_rsc_1_10_AWLEN(xt_rsc_1_10_AWLEN),
      .xt_rsc_1_10_AWADDR(xt_rsc_1_10_AWADDR),
      .xt_rsc_1_10_AWID(xt_rsc_1_10_AWID),
      .xt_rsc_triosy_1_10_lz(xt_rsc_triosy_1_10_lz),
      .xt_rsc_1_11_s_tdone(xt_rsc_1_11_s_tdone),
      .xt_rsc_1_11_tr_write_done(xt_rsc_1_11_tr_write_done),
      .xt_rsc_1_11_RREADY(xt_rsc_1_11_RREADY),
      .xt_rsc_1_11_RVALID(xt_rsc_1_11_RVALID),
      .xt_rsc_1_11_RUSER(xt_rsc_1_11_RUSER),
      .xt_rsc_1_11_RLAST(xt_rsc_1_11_RLAST),
      .xt_rsc_1_11_RRESP(xt_rsc_1_11_RRESP),
      .xt_rsc_1_11_RDATA(xt_rsc_1_11_RDATA),
      .xt_rsc_1_11_RID(xt_rsc_1_11_RID),
      .xt_rsc_1_11_ARREADY(xt_rsc_1_11_ARREADY),
      .xt_rsc_1_11_ARVALID(xt_rsc_1_11_ARVALID),
      .xt_rsc_1_11_ARUSER(xt_rsc_1_11_ARUSER),
      .xt_rsc_1_11_ARREGION(xt_rsc_1_11_ARREGION),
      .xt_rsc_1_11_ARQOS(xt_rsc_1_11_ARQOS),
      .xt_rsc_1_11_ARPROT(xt_rsc_1_11_ARPROT),
      .xt_rsc_1_11_ARCACHE(xt_rsc_1_11_ARCACHE),
      .xt_rsc_1_11_ARLOCK(xt_rsc_1_11_ARLOCK),
      .xt_rsc_1_11_ARBURST(xt_rsc_1_11_ARBURST),
      .xt_rsc_1_11_ARSIZE(xt_rsc_1_11_ARSIZE),
      .xt_rsc_1_11_ARLEN(xt_rsc_1_11_ARLEN),
      .xt_rsc_1_11_ARADDR(xt_rsc_1_11_ARADDR),
      .xt_rsc_1_11_ARID(xt_rsc_1_11_ARID),
      .xt_rsc_1_11_BREADY(xt_rsc_1_11_BREADY),
      .xt_rsc_1_11_BVALID(xt_rsc_1_11_BVALID),
      .xt_rsc_1_11_BUSER(xt_rsc_1_11_BUSER),
      .xt_rsc_1_11_BRESP(xt_rsc_1_11_BRESP),
      .xt_rsc_1_11_BID(xt_rsc_1_11_BID),
      .xt_rsc_1_11_WREADY(xt_rsc_1_11_WREADY),
      .xt_rsc_1_11_WVALID(xt_rsc_1_11_WVALID),
      .xt_rsc_1_11_WUSER(xt_rsc_1_11_WUSER),
      .xt_rsc_1_11_WLAST(xt_rsc_1_11_WLAST),
      .xt_rsc_1_11_WSTRB(xt_rsc_1_11_WSTRB),
      .xt_rsc_1_11_WDATA(xt_rsc_1_11_WDATA),
      .xt_rsc_1_11_AWREADY(xt_rsc_1_11_AWREADY),
      .xt_rsc_1_11_AWVALID(xt_rsc_1_11_AWVALID),
      .xt_rsc_1_11_AWUSER(xt_rsc_1_11_AWUSER),
      .xt_rsc_1_11_AWREGION(xt_rsc_1_11_AWREGION),
      .xt_rsc_1_11_AWQOS(xt_rsc_1_11_AWQOS),
      .xt_rsc_1_11_AWPROT(xt_rsc_1_11_AWPROT),
      .xt_rsc_1_11_AWCACHE(xt_rsc_1_11_AWCACHE),
      .xt_rsc_1_11_AWLOCK(xt_rsc_1_11_AWLOCK),
      .xt_rsc_1_11_AWBURST(xt_rsc_1_11_AWBURST),
      .xt_rsc_1_11_AWSIZE(xt_rsc_1_11_AWSIZE),
      .xt_rsc_1_11_AWLEN(xt_rsc_1_11_AWLEN),
      .xt_rsc_1_11_AWADDR(xt_rsc_1_11_AWADDR),
      .xt_rsc_1_11_AWID(xt_rsc_1_11_AWID),
      .xt_rsc_triosy_1_11_lz(xt_rsc_triosy_1_11_lz),
      .xt_rsc_1_12_s_tdone(xt_rsc_1_12_s_tdone),
      .xt_rsc_1_12_tr_write_done(xt_rsc_1_12_tr_write_done),
      .xt_rsc_1_12_RREADY(xt_rsc_1_12_RREADY),
      .xt_rsc_1_12_RVALID(xt_rsc_1_12_RVALID),
      .xt_rsc_1_12_RUSER(xt_rsc_1_12_RUSER),
      .xt_rsc_1_12_RLAST(xt_rsc_1_12_RLAST),
      .xt_rsc_1_12_RRESP(xt_rsc_1_12_RRESP),
      .xt_rsc_1_12_RDATA(xt_rsc_1_12_RDATA),
      .xt_rsc_1_12_RID(xt_rsc_1_12_RID),
      .xt_rsc_1_12_ARREADY(xt_rsc_1_12_ARREADY),
      .xt_rsc_1_12_ARVALID(xt_rsc_1_12_ARVALID),
      .xt_rsc_1_12_ARUSER(xt_rsc_1_12_ARUSER),
      .xt_rsc_1_12_ARREGION(xt_rsc_1_12_ARREGION),
      .xt_rsc_1_12_ARQOS(xt_rsc_1_12_ARQOS),
      .xt_rsc_1_12_ARPROT(xt_rsc_1_12_ARPROT),
      .xt_rsc_1_12_ARCACHE(xt_rsc_1_12_ARCACHE),
      .xt_rsc_1_12_ARLOCK(xt_rsc_1_12_ARLOCK),
      .xt_rsc_1_12_ARBURST(xt_rsc_1_12_ARBURST),
      .xt_rsc_1_12_ARSIZE(xt_rsc_1_12_ARSIZE),
      .xt_rsc_1_12_ARLEN(xt_rsc_1_12_ARLEN),
      .xt_rsc_1_12_ARADDR(xt_rsc_1_12_ARADDR),
      .xt_rsc_1_12_ARID(xt_rsc_1_12_ARID),
      .xt_rsc_1_12_BREADY(xt_rsc_1_12_BREADY),
      .xt_rsc_1_12_BVALID(xt_rsc_1_12_BVALID),
      .xt_rsc_1_12_BUSER(xt_rsc_1_12_BUSER),
      .xt_rsc_1_12_BRESP(xt_rsc_1_12_BRESP),
      .xt_rsc_1_12_BID(xt_rsc_1_12_BID),
      .xt_rsc_1_12_WREADY(xt_rsc_1_12_WREADY),
      .xt_rsc_1_12_WVALID(xt_rsc_1_12_WVALID),
      .xt_rsc_1_12_WUSER(xt_rsc_1_12_WUSER),
      .xt_rsc_1_12_WLAST(xt_rsc_1_12_WLAST),
      .xt_rsc_1_12_WSTRB(xt_rsc_1_12_WSTRB),
      .xt_rsc_1_12_WDATA(xt_rsc_1_12_WDATA),
      .xt_rsc_1_12_AWREADY(xt_rsc_1_12_AWREADY),
      .xt_rsc_1_12_AWVALID(xt_rsc_1_12_AWVALID),
      .xt_rsc_1_12_AWUSER(xt_rsc_1_12_AWUSER),
      .xt_rsc_1_12_AWREGION(xt_rsc_1_12_AWREGION),
      .xt_rsc_1_12_AWQOS(xt_rsc_1_12_AWQOS),
      .xt_rsc_1_12_AWPROT(xt_rsc_1_12_AWPROT),
      .xt_rsc_1_12_AWCACHE(xt_rsc_1_12_AWCACHE),
      .xt_rsc_1_12_AWLOCK(xt_rsc_1_12_AWLOCK),
      .xt_rsc_1_12_AWBURST(xt_rsc_1_12_AWBURST),
      .xt_rsc_1_12_AWSIZE(xt_rsc_1_12_AWSIZE),
      .xt_rsc_1_12_AWLEN(xt_rsc_1_12_AWLEN),
      .xt_rsc_1_12_AWADDR(xt_rsc_1_12_AWADDR),
      .xt_rsc_1_12_AWID(xt_rsc_1_12_AWID),
      .xt_rsc_triosy_1_12_lz(xt_rsc_triosy_1_12_lz),
      .xt_rsc_1_13_s_tdone(xt_rsc_1_13_s_tdone),
      .xt_rsc_1_13_tr_write_done(xt_rsc_1_13_tr_write_done),
      .xt_rsc_1_13_RREADY(xt_rsc_1_13_RREADY),
      .xt_rsc_1_13_RVALID(xt_rsc_1_13_RVALID),
      .xt_rsc_1_13_RUSER(xt_rsc_1_13_RUSER),
      .xt_rsc_1_13_RLAST(xt_rsc_1_13_RLAST),
      .xt_rsc_1_13_RRESP(xt_rsc_1_13_RRESP),
      .xt_rsc_1_13_RDATA(xt_rsc_1_13_RDATA),
      .xt_rsc_1_13_RID(xt_rsc_1_13_RID),
      .xt_rsc_1_13_ARREADY(xt_rsc_1_13_ARREADY),
      .xt_rsc_1_13_ARVALID(xt_rsc_1_13_ARVALID),
      .xt_rsc_1_13_ARUSER(xt_rsc_1_13_ARUSER),
      .xt_rsc_1_13_ARREGION(xt_rsc_1_13_ARREGION),
      .xt_rsc_1_13_ARQOS(xt_rsc_1_13_ARQOS),
      .xt_rsc_1_13_ARPROT(xt_rsc_1_13_ARPROT),
      .xt_rsc_1_13_ARCACHE(xt_rsc_1_13_ARCACHE),
      .xt_rsc_1_13_ARLOCK(xt_rsc_1_13_ARLOCK),
      .xt_rsc_1_13_ARBURST(xt_rsc_1_13_ARBURST),
      .xt_rsc_1_13_ARSIZE(xt_rsc_1_13_ARSIZE),
      .xt_rsc_1_13_ARLEN(xt_rsc_1_13_ARLEN),
      .xt_rsc_1_13_ARADDR(xt_rsc_1_13_ARADDR),
      .xt_rsc_1_13_ARID(xt_rsc_1_13_ARID),
      .xt_rsc_1_13_BREADY(xt_rsc_1_13_BREADY),
      .xt_rsc_1_13_BVALID(xt_rsc_1_13_BVALID),
      .xt_rsc_1_13_BUSER(xt_rsc_1_13_BUSER),
      .xt_rsc_1_13_BRESP(xt_rsc_1_13_BRESP),
      .xt_rsc_1_13_BID(xt_rsc_1_13_BID),
      .xt_rsc_1_13_WREADY(xt_rsc_1_13_WREADY),
      .xt_rsc_1_13_WVALID(xt_rsc_1_13_WVALID),
      .xt_rsc_1_13_WUSER(xt_rsc_1_13_WUSER),
      .xt_rsc_1_13_WLAST(xt_rsc_1_13_WLAST),
      .xt_rsc_1_13_WSTRB(xt_rsc_1_13_WSTRB),
      .xt_rsc_1_13_WDATA(xt_rsc_1_13_WDATA),
      .xt_rsc_1_13_AWREADY(xt_rsc_1_13_AWREADY),
      .xt_rsc_1_13_AWVALID(xt_rsc_1_13_AWVALID),
      .xt_rsc_1_13_AWUSER(xt_rsc_1_13_AWUSER),
      .xt_rsc_1_13_AWREGION(xt_rsc_1_13_AWREGION),
      .xt_rsc_1_13_AWQOS(xt_rsc_1_13_AWQOS),
      .xt_rsc_1_13_AWPROT(xt_rsc_1_13_AWPROT),
      .xt_rsc_1_13_AWCACHE(xt_rsc_1_13_AWCACHE),
      .xt_rsc_1_13_AWLOCK(xt_rsc_1_13_AWLOCK),
      .xt_rsc_1_13_AWBURST(xt_rsc_1_13_AWBURST),
      .xt_rsc_1_13_AWSIZE(xt_rsc_1_13_AWSIZE),
      .xt_rsc_1_13_AWLEN(xt_rsc_1_13_AWLEN),
      .xt_rsc_1_13_AWADDR(xt_rsc_1_13_AWADDR),
      .xt_rsc_1_13_AWID(xt_rsc_1_13_AWID),
      .xt_rsc_triosy_1_13_lz(xt_rsc_triosy_1_13_lz),
      .xt_rsc_1_14_s_tdone(xt_rsc_1_14_s_tdone),
      .xt_rsc_1_14_tr_write_done(xt_rsc_1_14_tr_write_done),
      .xt_rsc_1_14_RREADY(xt_rsc_1_14_RREADY),
      .xt_rsc_1_14_RVALID(xt_rsc_1_14_RVALID),
      .xt_rsc_1_14_RUSER(xt_rsc_1_14_RUSER),
      .xt_rsc_1_14_RLAST(xt_rsc_1_14_RLAST),
      .xt_rsc_1_14_RRESP(xt_rsc_1_14_RRESP),
      .xt_rsc_1_14_RDATA(xt_rsc_1_14_RDATA),
      .xt_rsc_1_14_RID(xt_rsc_1_14_RID),
      .xt_rsc_1_14_ARREADY(xt_rsc_1_14_ARREADY),
      .xt_rsc_1_14_ARVALID(xt_rsc_1_14_ARVALID),
      .xt_rsc_1_14_ARUSER(xt_rsc_1_14_ARUSER),
      .xt_rsc_1_14_ARREGION(xt_rsc_1_14_ARREGION),
      .xt_rsc_1_14_ARQOS(xt_rsc_1_14_ARQOS),
      .xt_rsc_1_14_ARPROT(xt_rsc_1_14_ARPROT),
      .xt_rsc_1_14_ARCACHE(xt_rsc_1_14_ARCACHE),
      .xt_rsc_1_14_ARLOCK(xt_rsc_1_14_ARLOCK),
      .xt_rsc_1_14_ARBURST(xt_rsc_1_14_ARBURST),
      .xt_rsc_1_14_ARSIZE(xt_rsc_1_14_ARSIZE),
      .xt_rsc_1_14_ARLEN(xt_rsc_1_14_ARLEN),
      .xt_rsc_1_14_ARADDR(xt_rsc_1_14_ARADDR),
      .xt_rsc_1_14_ARID(xt_rsc_1_14_ARID),
      .xt_rsc_1_14_BREADY(xt_rsc_1_14_BREADY),
      .xt_rsc_1_14_BVALID(xt_rsc_1_14_BVALID),
      .xt_rsc_1_14_BUSER(xt_rsc_1_14_BUSER),
      .xt_rsc_1_14_BRESP(xt_rsc_1_14_BRESP),
      .xt_rsc_1_14_BID(xt_rsc_1_14_BID),
      .xt_rsc_1_14_WREADY(xt_rsc_1_14_WREADY),
      .xt_rsc_1_14_WVALID(xt_rsc_1_14_WVALID),
      .xt_rsc_1_14_WUSER(xt_rsc_1_14_WUSER),
      .xt_rsc_1_14_WLAST(xt_rsc_1_14_WLAST),
      .xt_rsc_1_14_WSTRB(xt_rsc_1_14_WSTRB),
      .xt_rsc_1_14_WDATA(xt_rsc_1_14_WDATA),
      .xt_rsc_1_14_AWREADY(xt_rsc_1_14_AWREADY),
      .xt_rsc_1_14_AWVALID(xt_rsc_1_14_AWVALID),
      .xt_rsc_1_14_AWUSER(xt_rsc_1_14_AWUSER),
      .xt_rsc_1_14_AWREGION(xt_rsc_1_14_AWREGION),
      .xt_rsc_1_14_AWQOS(xt_rsc_1_14_AWQOS),
      .xt_rsc_1_14_AWPROT(xt_rsc_1_14_AWPROT),
      .xt_rsc_1_14_AWCACHE(xt_rsc_1_14_AWCACHE),
      .xt_rsc_1_14_AWLOCK(xt_rsc_1_14_AWLOCK),
      .xt_rsc_1_14_AWBURST(xt_rsc_1_14_AWBURST),
      .xt_rsc_1_14_AWSIZE(xt_rsc_1_14_AWSIZE),
      .xt_rsc_1_14_AWLEN(xt_rsc_1_14_AWLEN),
      .xt_rsc_1_14_AWADDR(xt_rsc_1_14_AWADDR),
      .xt_rsc_1_14_AWID(xt_rsc_1_14_AWID),
      .xt_rsc_triosy_1_14_lz(xt_rsc_triosy_1_14_lz),
      .xt_rsc_1_15_s_tdone(xt_rsc_1_15_s_tdone),
      .xt_rsc_1_15_tr_write_done(xt_rsc_1_15_tr_write_done),
      .xt_rsc_1_15_RREADY(xt_rsc_1_15_RREADY),
      .xt_rsc_1_15_RVALID(xt_rsc_1_15_RVALID),
      .xt_rsc_1_15_RUSER(xt_rsc_1_15_RUSER),
      .xt_rsc_1_15_RLAST(xt_rsc_1_15_RLAST),
      .xt_rsc_1_15_RRESP(xt_rsc_1_15_RRESP),
      .xt_rsc_1_15_RDATA(xt_rsc_1_15_RDATA),
      .xt_rsc_1_15_RID(xt_rsc_1_15_RID),
      .xt_rsc_1_15_ARREADY(xt_rsc_1_15_ARREADY),
      .xt_rsc_1_15_ARVALID(xt_rsc_1_15_ARVALID),
      .xt_rsc_1_15_ARUSER(xt_rsc_1_15_ARUSER),
      .xt_rsc_1_15_ARREGION(xt_rsc_1_15_ARREGION),
      .xt_rsc_1_15_ARQOS(xt_rsc_1_15_ARQOS),
      .xt_rsc_1_15_ARPROT(xt_rsc_1_15_ARPROT),
      .xt_rsc_1_15_ARCACHE(xt_rsc_1_15_ARCACHE),
      .xt_rsc_1_15_ARLOCK(xt_rsc_1_15_ARLOCK),
      .xt_rsc_1_15_ARBURST(xt_rsc_1_15_ARBURST),
      .xt_rsc_1_15_ARSIZE(xt_rsc_1_15_ARSIZE),
      .xt_rsc_1_15_ARLEN(xt_rsc_1_15_ARLEN),
      .xt_rsc_1_15_ARADDR(xt_rsc_1_15_ARADDR),
      .xt_rsc_1_15_ARID(xt_rsc_1_15_ARID),
      .xt_rsc_1_15_BREADY(xt_rsc_1_15_BREADY),
      .xt_rsc_1_15_BVALID(xt_rsc_1_15_BVALID),
      .xt_rsc_1_15_BUSER(xt_rsc_1_15_BUSER),
      .xt_rsc_1_15_BRESP(xt_rsc_1_15_BRESP),
      .xt_rsc_1_15_BID(xt_rsc_1_15_BID),
      .xt_rsc_1_15_WREADY(xt_rsc_1_15_WREADY),
      .xt_rsc_1_15_WVALID(xt_rsc_1_15_WVALID),
      .xt_rsc_1_15_WUSER(xt_rsc_1_15_WUSER),
      .xt_rsc_1_15_WLAST(xt_rsc_1_15_WLAST),
      .xt_rsc_1_15_WSTRB(xt_rsc_1_15_WSTRB),
      .xt_rsc_1_15_WDATA(xt_rsc_1_15_WDATA),
      .xt_rsc_1_15_AWREADY(xt_rsc_1_15_AWREADY),
      .xt_rsc_1_15_AWVALID(xt_rsc_1_15_AWVALID),
      .xt_rsc_1_15_AWUSER(xt_rsc_1_15_AWUSER),
      .xt_rsc_1_15_AWREGION(xt_rsc_1_15_AWREGION),
      .xt_rsc_1_15_AWQOS(xt_rsc_1_15_AWQOS),
      .xt_rsc_1_15_AWPROT(xt_rsc_1_15_AWPROT),
      .xt_rsc_1_15_AWCACHE(xt_rsc_1_15_AWCACHE),
      .xt_rsc_1_15_AWLOCK(xt_rsc_1_15_AWLOCK),
      .xt_rsc_1_15_AWBURST(xt_rsc_1_15_AWBURST),
      .xt_rsc_1_15_AWSIZE(xt_rsc_1_15_AWSIZE),
      .xt_rsc_1_15_AWLEN(xt_rsc_1_15_AWLEN),
      .xt_rsc_1_15_AWADDR(xt_rsc_1_15_AWADDR),
      .xt_rsc_1_15_AWID(xt_rsc_1_15_AWID),
      .xt_rsc_triosy_1_15_lz(xt_rsc_triosy_1_15_lz),
      .xt_rsc_1_16_s_tdone(xt_rsc_1_16_s_tdone),
      .xt_rsc_1_16_tr_write_done(xt_rsc_1_16_tr_write_done),
      .xt_rsc_1_16_RREADY(xt_rsc_1_16_RREADY),
      .xt_rsc_1_16_RVALID(xt_rsc_1_16_RVALID),
      .xt_rsc_1_16_RUSER(xt_rsc_1_16_RUSER),
      .xt_rsc_1_16_RLAST(xt_rsc_1_16_RLAST),
      .xt_rsc_1_16_RRESP(xt_rsc_1_16_RRESP),
      .xt_rsc_1_16_RDATA(xt_rsc_1_16_RDATA),
      .xt_rsc_1_16_RID(xt_rsc_1_16_RID),
      .xt_rsc_1_16_ARREADY(xt_rsc_1_16_ARREADY),
      .xt_rsc_1_16_ARVALID(xt_rsc_1_16_ARVALID),
      .xt_rsc_1_16_ARUSER(xt_rsc_1_16_ARUSER),
      .xt_rsc_1_16_ARREGION(xt_rsc_1_16_ARREGION),
      .xt_rsc_1_16_ARQOS(xt_rsc_1_16_ARQOS),
      .xt_rsc_1_16_ARPROT(xt_rsc_1_16_ARPROT),
      .xt_rsc_1_16_ARCACHE(xt_rsc_1_16_ARCACHE),
      .xt_rsc_1_16_ARLOCK(xt_rsc_1_16_ARLOCK),
      .xt_rsc_1_16_ARBURST(xt_rsc_1_16_ARBURST),
      .xt_rsc_1_16_ARSIZE(xt_rsc_1_16_ARSIZE),
      .xt_rsc_1_16_ARLEN(xt_rsc_1_16_ARLEN),
      .xt_rsc_1_16_ARADDR(xt_rsc_1_16_ARADDR),
      .xt_rsc_1_16_ARID(xt_rsc_1_16_ARID),
      .xt_rsc_1_16_BREADY(xt_rsc_1_16_BREADY),
      .xt_rsc_1_16_BVALID(xt_rsc_1_16_BVALID),
      .xt_rsc_1_16_BUSER(xt_rsc_1_16_BUSER),
      .xt_rsc_1_16_BRESP(xt_rsc_1_16_BRESP),
      .xt_rsc_1_16_BID(xt_rsc_1_16_BID),
      .xt_rsc_1_16_WREADY(xt_rsc_1_16_WREADY),
      .xt_rsc_1_16_WVALID(xt_rsc_1_16_WVALID),
      .xt_rsc_1_16_WUSER(xt_rsc_1_16_WUSER),
      .xt_rsc_1_16_WLAST(xt_rsc_1_16_WLAST),
      .xt_rsc_1_16_WSTRB(xt_rsc_1_16_WSTRB),
      .xt_rsc_1_16_WDATA(xt_rsc_1_16_WDATA),
      .xt_rsc_1_16_AWREADY(xt_rsc_1_16_AWREADY),
      .xt_rsc_1_16_AWVALID(xt_rsc_1_16_AWVALID),
      .xt_rsc_1_16_AWUSER(xt_rsc_1_16_AWUSER),
      .xt_rsc_1_16_AWREGION(xt_rsc_1_16_AWREGION),
      .xt_rsc_1_16_AWQOS(xt_rsc_1_16_AWQOS),
      .xt_rsc_1_16_AWPROT(xt_rsc_1_16_AWPROT),
      .xt_rsc_1_16_AWCACHE(xt_rsc_1_16_AWCACHE),
      .xt_rsc_1_16_AWLOCK(xt_rsc_1_16_AWLOCK),
      .xt_rsc_1_16_AWBURST(xt_rsc_1_16_AWBURST),
      .xt_rsc_1_16_AWSIZE(xt_rsc_1_16_AWSIZE),
      .xt_rsc_1_16_AWLEN(xt_rsc_1_16_AWLEN),
      .xt_rsc_1_16_AWADDR(xt_rsc_1_16_AWADDR),
      .xt_rsc_1_16_AWID(xt_rsc_1_16_AWID),
      .xt_rsc_triosy_1_16_lz(xt_rsc_triosy_1_16_lz),
      .xt_rsc_1_17_s_tdone(xt_rsc_1_17_s_tdone),
      .xt_rsc_1_17_tr_write_done(xt_rsc_1_17_tr_write_done),
      .xt_rsc_1_17_RREADY(xt_rsc_1_17_RREADY),
      .xt_rsc_1_17_RVALID(xt_rsc_1_17_RVALID),
      .xt_rsc_1_17_RUSER(xt_rsc_1_17_RUSER),
      .xt_rsc_1_17_RLAST(xt_rsc_1_17_RLAST),
      .xt_rsc_1_17_RRESP(xt_rsc_1_17_RRESP),
      .xt_rsc_1_17_RDATA(xt_rsc_1_17_RDATA),
      .xt_rsc_1_17_RID(xt_rsc_1_17_RID),
      .xt_rsc_1_17_ARREADY(xt_rsc_1_17_ARREADY),
      .xt_rsc_1_17_ARVALID(xt_rsc_1_17_ARVALID),
      .xt_rsc_1_17_ARUSER(xt_rsc_1_17_ARUSER),
      .xt_rsc_1_17_ARREGION(xt_rsc_1_17_ARREGION),
      .xt_rsc_1_17_ARQOS(xt_rsc_1_17_ARQOS),
      .xt_rsc_1_17_ARPROT(xt_rsc_1_17_ARPROT),
      .xt_rsc_1_17_ARCACHE(xt_rsc_1_17_ARCACHE),
      .xt_rsc_1_17_ARLOCK(xt_rsc_1_17_ARLOCK),
      .xt_rsc_1_17_ARBURST(xt_rsc_1_17_ARBURST),
      .xt_rsc_1_17_ARSIZE(xt_rsc_1_17_ARSIZE),
      .xt_rsc_1_17_ARLEN(xt_rsc_1_17_ARLEN),
      .xt_rsc_1_17_ARADDR(xt_rsc_1_17_ARADDR),
      .xt_rsc_1_17_ARID(xt_rsc_1_17_ARID),
      .xt_rsc_1_17_BREADY(xt_rsc_1_17_BREADY),
      .xt_rsc_1_17_BVALID(xt_rsc_1_17_BVALID),
      .xt_rsc_1_17_BUSER(xt_rsc_1_17_BUSER),
      .xt_rsc_1_17_BRESP(xt_rsc_1_17_BRESP),
      .xt_rsc_1_17_BID(xt_rsc_1_17_BID),
      .xt_rsc_1_17_WREADY(xt_rsc_1_17_WREADY),
      .xt_rsc_1_17_WVALID(xt_rsc_1_17_WVALID),
      .xt_rsc_1_17_WUSER(xt_rsc_1_17_WUSER),
      .xt_rsc_1_17_WLAST(xt_rsc_1_17_WLAST),
      .xt_rsc_1_17_WSTRB(xt_rsc_1_17_WSTRB),
      .xt_rsc_1_17_WDATA(xt_rsc_1_17_WDATA),
      .xt_rsc_1_17_AWREADY(xt_rsc_1_17_AWREADY),
      .xt_rsc_1_17_AWVALID(xt_rsc_1_17_AWVALID),
      .xt_rsc_1_17_AWUSER(xt_rsc_1_17_AWUSER),
      .xt_rsc_1_17_AWREGION(xt_rsc_1_17_AWREGION),
      .xt_rsc_1_17_AWQOS(xt_rsc_1_17_AWQOS),
      .xt_rsc_1_17_AWPROT(xt_rsc_1_17_AWPROT),
      .xt_rsc_1_17_AWCACHE(xt_rsc_1_17_AWCACHE),
      .xt_rsc_1_17_AWLOCK(xt_rsc_1_17_AWLOCK),
      .xt_rsc_1_17_AWBURST(xt_rsc_1_17_AWBURST),
      .xt_rsc_1_17_AWSIZE(xt_rsc_1_17_AWSIZE),
      .xt_rsc_1_17_AWLEN(xt_rsc_1_17_AWLEN),
      .xt_rsc_1_17_AWADDR(xt_rsc_1_17_AWADDR),
      .xt_rsc_1_17_AWID(xt_rsc_1_17_AWID),
      .xt_rsc_triosy_1_17_lz(xt_rsc_triosy_1_17_lz),
      .xt_rsc_1_18_s_tdone(xt_rsc_1_18_s_tdone),
      .xt_rsc_1_18_tr_write_done(xt_rsc_1_18_tr_write_done),
      .xt_rsc_1_18_RREADY(xt_rsc_1_18_RREADY),
      .xt_rsc_1_18_RVALID(xt_rsc_1_18_RVALID),
      .xt_rsc_1_18_RUSER(xt_rsc_1_18_RUSER),
      .xt_rsc_1_18_RLAST(xt_rsc_1_18_RLAST),
      .xt_rsc_1_18_RRESP(xt_rsc_1_18_RRESP),
      .xt_rsc_1_18_RDATA(xt_rsc_1_18_RDATA),
      .xt_rsc_1_18_RID(xt_rsc_1_18_RID),
      .xt_rsc_1_18_ARREADY(xt_rsc_1_18_ARREADY),
      .xt_rsc_1_18_ARVALID(xt_rsc_1_18_ARVALID),
      .xt_rsc_1_18_ARUSER(xt_rsc_1_18_ARUSER),
      .xt_rsc_1_18_ARREGION(xt_rsc_1_18_ARREGION),
      .xt_rsc_1_18_ARQOS(xt_rsc_1_18_ARQOS),
      .xt_rsc_1_18_ARPROT(xt_rsc_1_18_ARPROT),
      .xt_rsc_1_18_ARCACHE(xt_rsc_1_18_ARCACHE),
      .xt_rsc_1_18_ARLOCK(xt_rsc_1_18_ARLOCK),
      .xt_rsc_1_18_ARBURST(xt_rsc_1_18_ARBURST),
      .xt_rsc_1_18_ARSIZE(xt_rsc_1_18_ARSIZE),
      .xt_rsc_1_18_ARLEN(xt_rsc_1_18_ARLEN),
      .xt_rsc_1_18_ARADDR(xt_rsc_1_18_ARADDR),
      .xt_rsc_1_18_ARID(xt_rsc_1_18_ARID),
      .xt_rsc_1_18_BREADY(xt_rsc_1_18_BREADY),
      .xt_rsc_1_18_BVALID(xt_rsc_1_18_BVALID),
      .xt_rsc_1_18_BUSER(xt_rsc_1_18_BUSER),
      .xt_rsc_1_18_BRESP(xt_rsc_1_18_BRESP),
      .xt_rsc_1_18_BID(xt_rsc_1_18_BID),
      .xt_rsc_1_18_WREADY(xt_rsc_1_18_WREADY),
      .xt_rsc_1_18_WVALID(xt_rsc_1_18_WVALID),
      .xt_rsc_1_18_WUSER(xt_rsc_1_18_WUSER),
      .xt_rsc_1_18_WLAST(xt_rsc_1_18_WLAST),
      .xt_rsc_1_18_WSTRB(xt_rsc_1_18_WSTRB),
      .xt_rsc_1_18_WDATA(xt_rsc_1_18_WDATA),
      .xt_rsc_1_18_AWREADY(xt_rsc_1_18_AWREADY),
      .xt_rsc_1_18_AWVALID(xt_rsc_1_18_AWVALID),
      .xt_rsc_1_18_AWUSER(xt_rsc_1_18_AWUSER),
      .xt_rsc_1_18_AWREGION(xt_rsc_1_18_AWREGION),
      .xt_rsc_1_18_AWQOS(xt_rsc_1_18_AWQOS),
      .xt_rsc_1_18_AWPROT(xt_rsc_1_18_AWPROT),
      .xt_rsc_1_18_AWCACHE(xt_rsc_1_18_AWCACHE),
      .xt_rsc_1_18_AWLOCK(xt_rsc_1_18_AWLOCK),
      .xt_rsc_1_18_AWBURST(xt_rsc_1_18_AWBURST),
      .xt_rsc_1_18_AWSIZE(xt_rsc_1_18_AWSIZE),
      .xt_rsc_1_18_AWLEN(xt_rsc_1_18_AWLEN),
      .xt_rsc_1_18_AWADDR(xt_rsc_1_18_AWADDR),
      .xt_rsc_1_18_AWID(xt_rsc_1_18_AWID),
      .xt_rsc_triosy_1_18_lz(xt_rsc_triosy_1_18_lz),
      .xt_rsc_1_19_s_tdone(xt_rsc_1_19_s_tdone),
      .xt_rsc_1_19_tr_write_done(xt_rsc_1_19_tr_write_done),
      .xt_rsc_1_19_RREADY(xt_rsc_1_19_RREADY),
      .xt_rsc_1_19_RVALID(xt_rsc_1_19_RVALID),
      .xt_rsc_1_19_RUSER(xt_rsc_1_19_RUSER),
      .xt_rsc_1_19_RLAST(xt_rsc_1_19_RLAST),
      .xt_rsc_1_19_RRESP(xt_rsc_1_19_RRESP),
      .xt_rsc_1_19_RDATA(xt_rsc_1_19_RDATA),
      .xt_rsc_1_19_RID(xt_rsc_1_19_RID),
      .xt_rsc_1_19_ARREADY(xt_rsc_1_19_ARREADY),
      .xt_rsc_1_19_ARVALID(xt_rsc_1_19_ARVALID),
      .xt_rsc_1_19_ARUSER(xt_rsc_1_19_ARUSER),
      .xt_rsc_1_19_ARREGION(xt_rsc_1_19_ARREGION),
      .xt_rsc_1_19_ARQOS(xt_rsc_1_19_ARQOS),
      .xt_rsc_1_19_ARPROT(xt_rsc_1_19_ARPROT),
      .xt_rsc_1_19_ARCACHE(xt_rsc_1_19_ARCACHE),
      .xt_rsc_1_19_ARLOCK(xt_rsc_1_19_ARLOCK),
      .xt_rsc_1_19_ARBURST(xt_rsc_1_19_ARBURST),
      .xt_rsc_1_19_ARSIZE(xt_rsc_1_19_ARSIZE),
      .xt_rsc_1_19_ARLEN(xt_rsc_1_19_ARLEN),
      .xt_rsc_1_19_ARADDR(xt_rsc_1_19_ARADDR),
      .xt_rsc_1_19_ARID(xt_rsc_1_19_ARID),
      .xt_rsc_1_19_BREADY(xt_rsc_1_19_BREADY),
      .xt_rsc_1_19_BVALID(xt_rsc_1_19_BVALID),
      .xt_rsc_1_19_BUSER(xt_rsc_1_19_BUSER),
      .xt_rsc_1_19_BRESP(xt_rsc_1_19_BRESP),
      .xt_rsc_1_19_BID(xt_rsc_1_19_BID),
      .xt_rsc_1_19_WREADY(xt_rsc_1_19_WREADY),
      .xt_rsc_1_19_WVALID(xt_rsc_1_19_WVALID),
      .xt_rsc_1_19_WUSER(xt_rsc_1_19_WUSER),
      .xt_rsc_1_19_WLAST(xt_rsc_1_19_WLAST),
      .xt_rsc_1_19_WSTRB(xt_rsc_1_19_WSTRB),
      .xt_rsc_1_19_WDATA(xt_rsc_1_19_WDATA),
      .xt_rsc_1_19_AWREADY(xt_rsc_1_19_AWREADY),
      .xt_rsc_1_19_AWVALID(xt_rsc_1_19_AWVALID),
      .xt_rsc_1_19_AWUSER(xt_rsc_1_19_AWUSER),
      .xt_rsc_1_19_AWREGION(xt_rsc_1_19_AWREGION),
      .xt_rsc_1_19_AWQOS(xt_rsc_1_19_AWQOS),
      .xt_rsc_1_19_AWPROT(xt_rsc_1_19_AWPROT),
      .xt_rsc_1_19_AWCACHE(xt_rsc_1_19_AWCACHE),
      .xt_rsc_1_19_AWLOCK(xt_rsc_1_19_AWLOCK),
      .xt_rsc_1_19_AWBURST(xt_rsc_1_19_AWBURST),
      .xt_rsc_1_19_AWSIZE(xt_rsc_1_19_AWSIZE),
      .xt_rsc_1_19_AWLEN(xt_rsc_1_19_AWLEN),
      .xt_rsc_1_19_AWADDR(xt_rsc_1_19_AWADDR),
      .xt_rsc_1_19_AWID(xt_rsc_1_19_AWID),
      .xt_rsc_triosy_1_19_lz(xt_rsc_triosy_1_19_lz),
      .xt_rsc_1_20_s_tdone(xt_rsc_1_20_s_tdone),
      .xt_rsc_1_20_tr_write_done(xt_rsc_1_20_tr_write_done),
      .xt_rsc_1_20_RREADY(xt_rsc_1_20_RREADY),
      .xt_rsc_1_20_RVALID(xt_rsc_1_20_RVALID),
      .xt_rsc_1_20_RUSER(xt_rsc_1_20_RUSER),
      .xt_rsc_1_20_RLAST(xt_rsc_1_20_RLAST),
      .xt_rsc_1_20_RRESP(xt_rsc_1_20_RRESP),
      .xt_rsc_1_20_RDATA(xt_rsc_1_20_RDATA),
      .xt_rsc_1_20_RID(xt_rsc_1_20_RID),
      .xt_rsc_1_20_ARREADY(xt_rsc_1_20_ARREADY),
      .xt_rsc_1_20_ARVALID(xt_rsc_1_20_ARVALID),
      .xt_rsc_1_20_ARUSER(xt_rsc_1_20_ARUSER),
      .xt_rsc_1_20_ARREGION(xt_rsc_1_20_ARREGION),
      .xt_rsc_1_20_ARQOS(xt_rsc_1_20_ARQOS),
      .xt_rsc_1_20_ARPROT(xt_rsc_1_20_ARPROT),
      .xt_rsc_1_20_ARCACHE(xt_rsc_1_20_ARCACHE),
      .xt_rsc_1_20_ARLOCK(xt_rsc_1_20_ARLOCK),
      .xt_rsc_1_20_ARBURST(xt_rsc_1_20_ARBURST),
      .xt_rsc_1_20_ARSIZE(xt_rsc_1_20_ARSIZE),
      .xt_rsc_1_20_ARLEN(xt_rsc_1_20_ARLEN),
      .xt_rsc_1_20_ARADDR(xt_rsc_1_20_ARADDR),
      .xt_rsc_1_20_ARID(xt_rsc_1_20_ARID),
      .xt_rsc_1_20_BREADY(xt_rsc_1_20_BREADY),
      .xt_rsc_1_20_BVALID(xt_rsc_1_20_BVALID),
      .xt_rsc_1_20_BUSER(xt_rsc_1_20_BUSER),
      .xt_rsc_1_20_BRESP(xt_rsc_1_20_BRESP),
      .xt_rsc_1_20_BID(xt_rsc_1_20_BID),
      .xt_rsc_1_20_WREADY(xt_rsc_1_20_WREADY),
      .xt_rsc_1_20_WVALID(xt_rsc_1_20_WVALID),
      .xt_rsc_1_20_WUSER(xt_rsc_1_20_WUSER),
      .xt_rsc_1_20_WLAST(xt_rsc_1_20_WLAST),
      .xt_rsc_1_20_WSTRB(xt_rsc_1_20_WSTRB),
      .xt_rsc_1_20_WDATA(xt_rsc_1_20_WDATA),
      .xt_rsc_1_20_AWREADY(xt_rsc_1_20_AWREADY),
      .xt_rsc_1_20_AWVALID(xt_rsc_1_20_AWVALID),
      .xt_rsc_1_20_AWUSER(xt_rsc_1_20_AWUSER),
      .xt_rsc_1_20_AWREGION(xt_rsc_1_20_AWREGION),
      .xt_rsc_1_20_AWQOS(xt_rsc_1_20_AWQOS),
      .xt_rsc_1_20_AWPROT(xt_rsc_1_20_AWPROT),
      .xt_rsc_1_20_AWCACHE(xt_rsc_1_20_AWCACHE),
      .xt_rsc_1_20_AWLOCK(xt_rsc_1_20_AWLOCK),
      .xt_rsc_1_20_AWBURST(xt_rsc_1_20_AWBURST),
      .xt_rsc_1_20_AWSIZE(xt_rsc_1_20_AWSIZE),
      .xt_rsc_1_20_AWLEN(xt_rsc_1_20_AWLEN),
      .xt_rsc_1_20_AWADDR(xt_rsc_1_20_AWADDR),
      .xt_rsc_1_20_AWID(xt_rsc_1_20_AWID),
      .xt_rsc_triosy_1_20_lz(xt_rsc_triosy_1_20_lz),
      .xt_rsc_1_21_s_tdone(xt_rsc_1_21_s_tdone),
      .xt_rsc_1_21_tr_write_done(xt_rsc_1_21_tr_write_done),
      .xt_rsc_1_21_RREADY(xt_rsc_1_21_RREADY),
      .xt_rsc_1_21_RVALID(xt_rsc_1_21_RVALID),
      .xt_rsc_1_21_RUSER(xt_rsc_1_21_RUSER),
      .xt_rsc_1_21_RLAST(xt_rsc_1_21_RLAST),
      .xt_rsc_1_21_RRESP(xt_rsc_1_21_RRESP),
      .xt_rsc_1_21_RDATA(xt_rsc_1_21_RDATA),
      .xt_rsc_1_21_RID(xt_rsc_1_21_RID),
      .xt_rsc_1_21_ARREADY(xt_rsc_1_21_ARREADY),
      .xt_rsc_1_21_ARVALID(xt_rsc_1_21_ARVALID),
      .xt_rsc_1_21_ARUSER(xt_rsc_1_21_ARUSER),
      .xt_rsc_1_21_ARREGION(xt_rsc_1_21_ARREGION),
      .xt_rsc_1_21_ARQOS(xt_rsc_1_21_ARQOS),
      .xt_rsc_1_21_ARPROT(xt_rsc_1_21_ARPROT),
      .xt_rsc_1_21_ARCACHE(xt_rsc_1_21_ARCACHE),
      .xt_rsc_1_21_ARLOCK(xt_rsc_1_21_ARLOCK),
      .xt_rsc_1_21_ARBURST(xt_rsc_1_21_ARBURST),
      .xt_rsc_1_21_ARSIZE(xt_rsc_1_21_ARSIZE),
      .xt_rsc_1_21_ARLEN(xt_rsc_1_21_ARLEN),
      .xt_rsc_1_21_ARADDR(xt_rsc_1_21_ARADDR),
      .xt_rsc_1_21_ARID(xt_rsc_1_21_ARID),
      .xt_rsc_1_21_BREADY(xt_rsc_1_21_BREADY),
      .xt_rsc_1_21_BVALID(xt_rsc_1_21_BVALID),
      .xt_rsc_1_21_BUSER(xt_rsc_1_21_BUSER),
      .xt_rsc_1_21_BRESP(xt_rsc_1_21_BRESP),
      .xt_rsc_1_21_BID(xt_rsc_1_21_BID),
      .xt_rsc_1_21_WREADY(xt_rsc_1_21_WREADY),
      .xt_rsc_1_21_WVALID(xt_rsc_1_21_WVALID),
      .xt_rsc_1_21_WUSER(xt_rsc_1_21_WUSER),
      .xt_rsc_1_21_WLAST(xt_rsc_1_21_WLAST),
      .xt_rsc_1_21_WSTRB(xt_rsc_1_21_WSTRB),
      .xt_rsc_1_21_WDATA(xt_rsc_1_21_WDATA),
      .xt_rsc_1_21_AWREADY(xt_rsc_1_21_AWREADY),
      .xt_rsc_1_21_AWVALID(xt_rsc_1_21_AWVALID),
      .xt_rsc_1_21_AWUSER(xt_rsc_1_21_AWUSER),
      .xt_rsc_1_21_AWREGION(xt_rsc_1_21_AWREGION),
      .xt_rsc_1_21_AWQOS(xt_rsc_1_21_AWQOS),
      .xt_rsc_1_21_AWPROT(xt_rsc_1_21_AWPROT),
      .xt_rsc_1_21_AWCACHE(xt_rsc_1_21_AWCACHE),
      .xt_rsc_1_21_AWLOCK(xt_rsc_1_21_AWLOCK),
      .xt_rsc_1_21_AWBURST(xt_rsc_1_21_AWBURST),
      .xt_rsc_1_21_AWSIZE(xt_rsc_1_21_AWSIZE),
      .xt_rsc_1_21_AWLEN(xt_rsc_1_21_AWLEN),
      .xt_rsc_1_21_AWADDR(xt_rsc_1_21_AWADDR),
      .xt_rsc_1_21_AWID(xt_rsc_1_21_AWID),
      .xt_rsc_triosy_1_21_lz(xt_rsc_triosy_1_21_lz),
      .xt_rsc_1_22_s_tdone(xt_rsc_1_22_s_tdone),
      .xt_rsc_1_22_tr_write_done(xt_rsc_1_22_tr_write_done),
      .xt_rsc_1_22_RREADY(xt_rsc_1_22_RREADY),
      .xt_rsc_1_22_RVALID(xt_rsc_1_22_RVALID),
      .xt_rsc_1_22_RUSER(xt_rsc_1_22_RUSER),
      .xt_rsc_1_22_RLAST(xt_rsc_1_22_RLAST),
      .xt_rsc_1_22_RRESP(xt_rsc_1_22_RRESP),
      .xt_rsc_1_22_RDATA(xt_rsc_1_22_RDATA),
      .xt_rsc_1_22_RID(xt_rsc_1_22_RID),
      .xt_rsc_1_22_ARREADY(xt_rsc_1_22_ARREADY),
      .xt_rsc_1_22_ARVALID(xt_rsc_1_22_ARVALID),
      .xt_rsc_1_22_ARUSER(xt_rsc_1_22_ARUSER),
      .xt_rsc_1_22_ARREGION(xt_rsc_1_22_ARREGION),
      .xt_rsc_1_22_ARQOS(xt_rsc_1_22_ARQOS),
      .xt_rsc_1_22_ARPROT(xt_rsc_1_22_ARPROT),
      .xt_rsc_1_22_ARCACHE(xt_rsc_1_22_ARCACHE),
      .xt_rsc_1_22_ARLOCK(xt_rsc_1_22_ARLOCK),
      .xt_rsc_1_22_ARBURST(xt_rsc_1_22_ARBURST),
      .xt_rsc_1_22_ARSIZE(xt_rsc_1_22_ARSIZE),
      .xt_rsc_1_22_ARLEN(xt_rsc_1_22_ARLEN),
      .xt_rsc_1_22_ARADDR(xt_rsc_1_22_ARADDR),
      .xt_rsc_1_22_ARID(xt_rsc_1_22_ARID),
      .xt_rsc_1_22_BREADY(xt_rsc_1_22_BREADY),
      .xt_rsc_1_22_BVALID(xt_rsc_1_22_BVALID),
      .xt_rsc_1_22_BUSER(xt_rsc_1_22_BUSER),
      .xt_rsc_1_22_BRESP(xt_rsc_1_22_BRESP),
      .xt_rsc_1_22_BID(xt_rsc_1_22_BID),
      .xt_rsc_1_22_WREADY(xt_rsc_1_22_WREADY),
      .xt_rsc_1_22_WVALID(xt_rsc_1_22_WVALID),
      .xt_rsc_1_22_WUSER(xt_rsc_1_22_WUSER),
      .xt_rsc_1_22_WLAST(xt_rsc_1_22_WLAST),
      .xt_rsc_1_22_WSTRB(xt_rsc_1_22_WSTRB),
      .xt_rsc_1_22_WDATA(xt_rsc_1_22_WDATA),
      .xt_rsc_1_22_AWREADY(xt_rsc_1_22_AWREADY),
      .xt_rsc_1_22_AWVALID(xt_rsc_1_22_AWVALID),
      .xt_rsc_1_22_AWUSER(xt_rsc_1_22_AWUSER),
      .xt_rsc_1_22_AWREGION(xt_rsc_1_22_AWREGION),
      .xt_rsc_1_22_AWQOS(xt_rsc_1_22_AWQOS),
      .xt_rsc_1_22_AWPROT(xt_rsc_1_22_AWPROT),
      .xt_rsc_1_22_AWCACHE(xt_rsc_1_22_AWCACHE),
      .xt_rsc_1_22_AWLOCK(xt_rsc_1_22_AWLOCK),
      .xt_rsc_1_22_AWBURST(xt_rsc_1_22_AWBURST),
      .xt_rsc_1_22_AWSIZE(xt_rsc_1_22_AWSIZE),
      .xt_rsc_1_22_AWLEN(xt_rsc_1_22_AWLEN),
      .xt_rsc_1_22_AWADDR(xt_rsc_1_22_AWADDR),
      .xt_rsc_1_22_AWID(xt_rsc_1_22_AWID),
      .xt_rsc_triosy_1_22_lz(xt_rsc_triosy_1_22_lz),
      .xt_rsc_1_23_s_tdone(xt_rsc_1_23_s_tdone),
      .xt_rsc_1_23_tr_write_done(xt_rsc_1_23_tr_write_done),
      .xt_rsc_1_23_RREADY(xt_rsc_1_23_RREADY),
      .xt_rsc_1_23_RVALID(xt_rsc_1_23_RVALID),
      .xt_rsc_1_23_RUSER(xt_rsc_1_23_RUSER),
      .xt_rsc_1_23_RLAST(xt_rsc_1_23_RLAST),
      .xt_rsc_1_23_RRESP(xt_rsc_1_23_RRESP),
      .xt_rsc_1_23_RDATA(xt_rsc_1_23_RDATA),
      .xt_rsc_1_23_RID(xt_rsc_1_23_RID),
      .xt_rsc_1_23_ARREADY(xt_rsc_1_23_ARREADY),
      .xt_rsc_1_23_ARVALID(xt_rsc_1_23_ARVALID),
      .xt_rsc_1_23_ARUSER(xt_rsc_1_23_ARUSER),
      .xt_rsc_1_23_ARREGION(xt_rsc_1_23_ARREGION),
      .xt_rsc_1_23_ARQOS(xt_rsc_1_23_ARQOS),
      .xt_rsc_1_23_ARPROT(xt_rsc_1_23_ARPROT),
      .xt_rsc_1_23_ARCACHE(xt_rsc_1_23_ARCACHE),
      .xt_rsc_1_23_ARLOCK(xt_rsc_1_23_ARLOCK),
      .xt_rsc_1_23_ARBURST(xt_rsc_1_23_ARBURST),
      .xt_rsc_1_23_ARSIZE(xt_rsc_1_23_ARSIZE),
      .xt_rsc_1_23_ARLEN(xt_rsc_1_23_ARLEN),
      .xt_rsc_1_23_ARADDR(xt_rsc_1_23_ARADDR),
      .xt_rsc_1_23_ARID(xt_rsc_1_23_ARID),
      .xt_rsc_1_23_BREADY(xt_rsc_1_23_BREADY),
      .xt_rsc_1_23_BVALID(xt_rsc_1_23_BVALID),
      .xt_rsc_1_23_BUSER(xt_rsc_1_23_BUSER),
      .xt_rsc_1_23_BRESP(xt_rsc_1_23_BRESP),
      .xt_rsc_1_23_BID(xt_rsc_1_23_BID),
      .xt_rsc_1_23_WREADY(xt_rsc_1_23_WREADY),
      .xt_rsc_1_23_WVALID(xt_rsc_1_23_WVALID),
      .xt_rsc_1_23_WUSER(xt_rsc_1_23_WUSER),
      .xt_rsc_1_23_WLAST(xt_rsc_1_23_WLAST),
      .xt_rsc_1_23_WSTRB(xt_rsc_1_23_WSTRB),
      .xt_rsc_1_23_WDATA(xt_rsc_1_23_WDATA),
      .xt_rsc_1_23_AWREADY(xt_rsc_1_23_AWREADY),
      .xt_rsc_1_23_AWVALID(xt_rsc_1_23_AWVALID),
      .xt_rsc_1_23_AWUSER(xt_rsc_1_23_AWUSER),
      .xt_rsc_1_23_AWREGION(xt_rsc_1_23_AWREGION),
      .xt_rsc_1_23_AWQOS(xt_rsc_1_23_AWQOS),
      .xt_rsc_1_23_AWPROT(xt_rsc_1_23_AWPROT),
      .xt_rsc_1_23_AWCACHE(xt_rsc_1_23_AWCACHE),
      .xt_rsc_1_23_AWLOCK(xt_rsc_1_23_AWLOCK),
      .xt_rsc_1_23_AWBURST(xt_rsc_1_23_AWBURST),
      .xt_rsc_1_23_AWSIZE(xt_rsc_1_23_AWSIZE),
      .xt_rsc_1_23_AWLEN(xt_rsc_1_23_AWLEN),
      .xt_rsc_1_23_AWADDR(xt_rsc_1_23_AWADDR),
      .xt_rsc_1_23_AWID(xt_rsc_1_23_AWID),
      .xt_rsc_triosy_1_23_lz(xt_rsc_triosy_1_23_lz),
      .xt_rsc_1_24_s_tdone(xt_rsc_1_24_s_tdone),
      .xt_rsc_1_24_tr_write_done(xt_rsc_1_24_tr_write_done),
      .xt_rsc_1_24_RREADY(xt_rsc_1_24_RREADY),
      .xt_rsc_1_24_RVALID(xt_rsc_1_24_RVALID),
      .xt_rsc_1_24_RUSER(xt_rsc_1_24_RUSER),
      .xt_rsc_1_24_RLAST(xt_rsc_1_24_RLAST),
      .xt_rsc_1_24_RRESP(xt_rsc_1_24_RRESP),
      .xt_rsc_1_24_RDATA(xt_rsc_1_24_RDATA),
      .xt_rsc_1_24_RID(xt_rsc_1_24_RID),
      .xt_rsc_1_24_ARREADY(xt_rsc_1_24_ARREADY),
      .xt_rsc_1_24_ARVALID(xt_rsc_1_24_ARVALID),
      .xt_rsc_1_24_ARUSER(xt_rsc_1_24_ARUSER),
      .xt_rsc_1_24_ARREGION(xt_rsc_1_24_ARREGION),
      .xt_rsc_1_24_ARQOS(xt_rsc_1_24_ARQOS),
      .xt_rsc_1_24_ARPROT(xt_rsc_1_24_ARPROT),
      .xt_rsc_1_24_ARCACHE(xt_rsc_1_24_ARCACHE),
      .xt_rsc_1_24_ARLOCK(xt_rsc_1_24_ARLOCK),
      .xt_rsc_1_24_ARBURST(xt_rsc_1_24_ARBURST),
      .xt_rsc_1_24_ARSIZE(xt_rsc_1_24_ARSIZE),
      .xt_rsc_1_24_ARLEN(xt_rsc_1_24_ARLEN),
      .xt_rsc_1_24_ARADDR(xt_rsc_1_24_ARADDR),
      .xt_rsc_1_24_ARID(xt_rsc_1_24_ARID),
      .xt_rsc_1_24_BREADY(xt_rsc_1_24_BREADY),
      .xt_rsc_1_24_BVALID(xt_rsc_1_24_BVALID),
      .xt_rsc_1_24_BUSER(xt_rsc_1_24_BUSER),
      .xt_rsc_1_24_BRESP(xt_rsc_1_24_BRESP),
      .xt_rsc_1_24_BID(xt_rsc_1_24_BID),
      .xt_rsc_1_24_WREADY(xt_rsc_1_24_WREADY),
      .xt_rsc_1_24_WVALID(xt_rsc_1_24_WVALID),
      .xt_rsc_1_24_WUSER(xt_rsc_1_24_WUSER),
      .xt_rsc_1_24_WLAST(xt_rsc_1_24_WLAST),
      .xt_rsc_1_24_WSTRB(xt_rsc_1_24_WSTRB),
      .xt_rsc_1_24_WDATA(xt_rsc_1_24_WDATA),
      .xt_rsc_1_24_AWREADY(xt_rsc_1_24_AWREADY),
      .xt_rsc_1_24_AWVALID(xt_rsc_1_24_AWVALID),
      .xt_rsc_1_24_AWUSER(xt_rsc_1_24_AWUSER),
      .xt_rsc_1_24_AWREGION(xt_rsc_1_24_AWREGION),
      .xt_rsc_1_24_AWQOS(xt_rsc_1_24_AWQOS),
      .xt_rsc_1_24_AWPROT(xt_rsc_1_24_AWPROT),
      .xt_rsc_1_24_AWCACHE(xt_rsc_1_24_AWCACHE),
      .xt_rsc_1_24_AWLOCK(xt_rsc_1_24_AWLOCK),
      .xt_rsc_1_24_AWBURST(xt_rsc_1_24_AWBURST),
      .xt_rsc_1_24_AWSIZE(xt_rsc_1_24_AWSIZE),
      .xt_rsc_1_24_AWLEN(xt_rsc_1_24_AWLEN),
      .xt_rsc_1_24_AWADDR(xt_rsc_1_24_AWADDR),
      .xt_rsc_1_24_AWID(xt_rsc_1_24_AWID),
      .xt_rsc_triosy_1_24_lz(xt_rsc_triosy_1_24_lz),
      .xt_rsc_1_25_s_tdone(xt_rsc_1_25_s_tdone),
      .xt_rsc_1_25_tr_write_done(xt_rsc_1_25_tr_write_done),
      .xt_rsc_1_25_RREADY(xt_rsc_1_25_RREADY),
      .xt_rsc_1_25_RVALID(xt_rsc_1_25_RVALID),
      .xt_rsc_1_25_RUSER(xt_rsc_1_25_RUSER),
      .xt_rsc_1_25_RLAST(xt_rsc_1_25_RLAST),
      .xt_rsc_1_25_RRESP(xt_rsc_1_25_RRESP),
      .xt_rsc_1_25_RDATA(xt_rsc_1_25_RDATA),
      .xt_rsc_1_25_RID(xt_rsc_1_25_RID),
      .xt_rsc_1_25_ARREADY(xt_rsc_1_25_ARREADY),
      .xt_rsc_1_25_ARVALID(xt_rsc_1_25_ARVALID),
      .xt_rsc_1_25_ARUSER(xt_rsc_1_25_ARUSER),
      .xt_rsc_1_25_ARREGION(xt_rsc_1_25_ARREGION),
      .xt_rsc_1_25_ARQOS(xt_rsc_1_25_ARQOS),
      .xt_rsc_1_25_ARPROT(xt_rsc_1_25_ARPROT),
      .xt_rsc_1_25_ARCACHE(xt_rsc_1_25_ARCACHE),
      .xt_rsc_1_25_ARLOCK(xt_rsc_1_25_ARLOCK),
      .xt_rsc_1_25_ARBURST(xt_rsc_1_25_ARBURST),
      .xt_rsc_1_25_ARSIZE(xt_rsc_1_25_ARSIZE),
      .xt_rsc_1_25_ARLEN(xt_rsc_1_25_ARLEN),
      .xt_rsc_1_25_ARADDR(xt_rsc_1_25_ARADDR),
      .xt_rsc_1_25_ARID(xt_rsc_1_25_ARID),
      .xt_rsc_1_25_BREADY(xt_rsc_1_25_BREADY),
      .xt_rsc_1_25_BVALID(xt_rsc_1_25_BVALID),
      .xt_rsc_1_25_BUSER(xt_rsc_1_25_BUSER),
      .xt_rsc_1_25_BRESP(xt_rsc_1_25_BRESP),
      .xt_rsc_1_25_BID(xt_rsc_1_25_BID),
      .xt_rsc_1_25_WREADY(xt_rsc_1_25_WREADY),
      .xt_rsc_1_25_WVALID(xt_rsc_1_25_WVALID),
      .xt_rsc_1_25_WUSER(xt_rsc_1_25_WUSER),
      .xt_rsc_1_25_WLAST(xt_rsc_1_25_WLAST),
      .xt_rsc_1_25_WSTRB(xt_rsc_1_25_WSTRB),
      .xt_rsc_1_25_WDATA(xt_rsc_1_25_WDATA),
      .xt_rsc_1_25_AWREADY(xt_rsc_1_25_AWREADY),
      .xt_rsc_1_25_AWVALID(xt_rsc_1_25_AWVALID),
      .xt_rsc_1_25_AWUSER(xt_rsc_1_25_AWUSER),
      .xt_rsc_1_25_AWREGION(xt_rsc_1_25_AWREGION),
      .xt_rsc_1_25_AWQOS(xt_rsc_1_25_AWQOS),
      .xt_rsc_1_25_AWPROT(xt_rsc_1_25_AWPROT),
      .xt_rsc_1_25_AWCACHE(xt_rsc_1_25_AWCACHE),
      .xt_rsc_1_25_AWLOCK(xt_rsc_1_25_AWLOCK),
      .xt_rsc_1_25_AWBURST(xt_rsc_1_25_AWBURST),
      .xt_rsc_1_25_AWSIZE(xt_rsc_1_25_AWSIZE),
      .xt_rsc_1_25_AWLEN(xt_rsc_1_25_AWLEN),
      .xt_rsc_1_25_AWADDR(xt_rsc_1_25_AWADDR),
      .xt_rsc_1_25_AWID(xt_rsc_1_25_AWID),
      .xt_rsc_triosy_1_25_lz(xt_rsc_triosy_1_25_lz),
      .xt_rsc_1_26_s_tdone(xt_rsc_1_26_s_tdone),
      .xt_rsc_1_26_tr_write_done(xt_rsc_1_26_tr_write_done),
      .xt_rsc_1_26_RREADY(xt_rsc_1_26_RREADY),
      .xt_rsc_1_26_RVALID(xt_rsc_1_26_RVALID),
      .xt_rsc_1_26_RUSER(xt_rsc_1_26_RUSER),
      .xt_rsc_1_26_RLAST(xt_rsc_1_26_RLAST),
      .xt_rsc_1_26_RRESP(xt_rsc_1_26_RRESP),
      .xt_rsc_1_26_RDATA(xt_rsc_1_26_RDATA),
      .xt_rsc_1_26_RID(xt_rsc_1_26_RID),
      .xt_rsc_1_26_ARREADY(xt_rsc_1_26_ARREADY),
      .xt_rsc_1_26_ARVALID(xt_rsc_1_26_ARVALID),
      .xt_rsc_1_26_ARUSER(xt_rsc_1_26_ARUSER),
      .xt_rsc_1_26_ARREGION(xt_rsc_1_26_ARREGION),
      .xt_rsc_1_26_ARQOS(xt_rsc_1_26_ARQOS),
      .xt_rsc_1_26_ARPROT(xt_rsc_1_26_ARPROT),
      .xt_rsc_1_26_ARCACHE(xt_rsc_1_26_ARCACHE),
      .xt_rsc_1_26_ARLOCK(xt_rsc_1_26_ARLOCK),
      .xt_rsc_1_26_ARBURST(xt_rsc_1_26_ARBURST),
      .xt_rsc_1_26_ARSIZE(xt_rsc_1_26_ARSIZE),
      .xt_rsc_1_26_ARLEN(xt_rsc_1_26_ARLEN),
      .xt_rsc_1_26_ARADDR(xt_rsc_1_26_ARADDR),
      .xt_rsc_1_26_ARID(xt_rsc_1_26_ARID),
      .xt_rsc_1_26_BREADY(xt_rsc_1_26_BREADY),
      .xt_rsc_1_26_BVALID(xt_rsc_1_26_BVALID),
      .xt_rsc_1_26_BUSER(xt_rsc_1_26_BUSER),
      .xt_rsc_1_26_BRESP(xt_rsc_1_26_BRESP),
      .xt_rsc_1_26_BID(xt_rsc_1_26_BID),
      .xt_rsc_1_26_WREADY(xt_rsc_1_26_WREADY),
      .xt_rsc_1_26_WVALID(xt_rsc_1_26_WVALID),
      .xt_rsc_1_26_WUSER(xt_rsc_1_26_WUSER),
      .xt_rsc_1_26_WLAST(xt_rsc_1_26_WLAST),
      .xt_rsc_1_26_WSTRB(xt_rsc_1_26_WSTRB),
      .xt_rsc_1_26_WDATA(xt_rsc_1_26_WDATA),
      .xt_rsc_1_26_AWREADY(xt_rsc_1_26_AWREADY),
      .xt_rsc_1_26_AWVALID(xt_rsc_1_26_AWVALID),
      .xt_rsc_1_26_AWUSER(xt_rsc_1_26_AWUSER),
      .xt_rsc_1_26_AWREGION(xt_rsc_1_26_AWREGION),
      .xt_rsc_1_26_AWQOS(xt_rsc_1_26_AWQOS),
      .xt_rsc_1_26_AWPROT(xt_rsc_1_26_AWPROT),
      .xt_rsc_1_26_AWCACHE(xt_rsc_1_26_AWCACHE),
      .xt_rsc_1_26_AWLOCK(xt_rsc_1_26_AWLOCK),
      .xt_rsc_1_26_AWBURST(xt_rsc_1_26_AWBURST),
      .xt_rsc_1_26_AWSIZE(xt_rsc_1_26_AWSIZE),
      .xt_rsc_1_26_AWLEN(xt_rsc_1_26_AWLEN),
      .xt_rsc_1_26_AWADDR(xt_rsc_1_26_AWADDR),
      .xt_rsc_1_26_AWID(xt_rsc_1_26_AWID),
      .xt_rsc_triosy_1_26_lz(xt_rsc_triosy_1_26_lz),
      .xt_rsc_1_27_s_tdone(xt_rsc_1_27_s_tdone),
      .xt_rsc_1_27_tr_write_done(xt_rsc_1_27_tr_write_done),
      .xt_rsc_1_27_RREADY(xt_rsc_1_27_RREADY),
      .xt_rsc_1_27_RVALID(xt_rsc_1_27_RVALID),
      .xt_rsc_1_27_RUSER(xt_rsc_1_27_RUSER),
      .xt_rsc_1_27_RLAST(xt_rsc_1_27_RLAST),
      .xt_rsc_1_27_RRESP(xt_rsc_1_27_RRESP),
      .xt_rsc_1_27_RDATA(xt_rsc_1_27_RDATA),
      .xt_rsc_1_27_RID(xt_rsc_1_27_RID),
      .xt_rsc_1_27_ARREADY(xt_rsc_1_27_ARREADY),
      .xt_rsc_1_27_ARVALID(xt_rsc_1_27_ARVALID),
      .xt_rsc_1_27_ARUSER(xt_rsc_1_27_ARUSER),
      .xt_rsc_1_27_ARREGION(xt_rsc_1_27_ARREGION),
      .xt_rsc_1_27_ARQOS(xt_rsc_1_27_ARQOS),
      .xt_rsc_1_27_ARPROT(xt_rsc_1_27_ARPROT),
      .xt_rsc_1_27_ARCACHE(xt_rsc_1_27_ARCACHE),
      .xt_rsc_1_27_ARLOCK(xt_rsc_1_27_ARLOCK),
      .xt_rsc_1_27_ARBURST(xt_rsc_1_27_ARBURST),
      .xt_rsc_1_27_ARSIZE(xt_rsc_1_27_ARSIZE),
      .xt_rsc_1_27_ARLEN(xt_rsc_1_27_ARLEN),
      .xt_rsc_1_27_ARADDR(xt_rsc_1_27_ARADDR),
      .xt_rsc_1_27_ARID(xt_rsc_1_27_ARID),
      .xt_rsc_1_27_BREADY(xt_rsc_1_27_BREADY),
      .xt_rsc_1_27_BVALID(xt_rsc_1_27_BVALID),
      .xt_rsc_1_27_BUSER(xt_rsc_1_27_BUSER),
      .xt_rsc_1_27_BRESP(xt_rsc_1_27_BRESP),
      .xt_rsc_1_27_BID(xt_rsc_1_27_BID),
      .xt_rsc_1_27_WREADY(xt_rsc_1_27_WREADY),
      .xt_rsc_1_27_WVALID(xt_rsc_1_27_WVALID),
      .xt_rsc_1_27_WUSER(xt_rsc_1_27_WUSER),
      .xt_rsc_1_27_WLAST(xt_rsc_1_27_WLAST),
      .xt_rsc_1_27_WSTRB(xt_rsc_1_27_WSTRB),
      .xt_rsc_1_27_WDATA(xt_rsc_1_27_WDATA),
      .xt_rsc_1_27_AWREADY(xt_rsc_1_27_AWREADY),
      .xt_rsc_1_27_AWVALID(xt_rsc_1_27_AWVALID),
      .xt_rsc_1_27_AWUSER(xt_rsc_1_27_AWUSER),
      .xt_rsc_1_27_AWREGION(xt_rsc_1_27_AWREGION),
      .xt_rsc_1_27_AWQOS(xt_rsc_1_27_AWQOS),
      .xt_rsc_1_27_AWPROT(xt_rsc_1_27_AWPROT),
      .xt_rsc_1_27_AWCACHE(xt_rsc_1_27_AWCACHE),
      .xt_rsc_1_27_AWLOCK(xt_rsc_1_27_AWLOCK),
      .xt_rsc_1_27_AWBURST(xt_rsc_1_27_AWBURST),
      .xt_rsc_1_27_AWSIZE(xt_rsc_1_27_AWSIZE),
      .xt_rsc_1_27_AWLEN(xt_rsc_1_27_AWLEN),
      .xt_rsc_1_27_AWADDR(xt_rsc_1_27_AWADDR),
      .xt_rsc_1_27_AWID(xt_rsc_1_27_AWID),
      .xt_rsc_triosy_1_27_lz(xt_rsc_triosy_1_27_lz),
      .xt_rsc_1_28_s_tdone(xt_rsc_1_28_s_tdone),
      .xt_rsc_1_28_tr_write_done(xt_rsc_1_28_tr_write_done),
      .xt_rsc_1_28_RREADY(xt_rsc_1_28_RREADY),
      .xt_rsc_1_28_RVALID(xt_rsc_1_28_RVALID),
      .xt_rsc_1_28_RUSER(xt_rsc_1_28_RUSER),
      .xt_rsc_1_28_RLAST(xt_rsc_1_28_RLAST),
      .xt_rsc_1_28_RRESP(xt_rsc_1_28_RRESP),
      .xt_rsc_1_28_RDATA(xt_rsc_1_28_RDATA),
      .xt_rsc_1_28_RID(xt_rsc_1_28_RID),
      .xt_rsc_1_28_ARREADY(xt_rsc_1_28_ARREADY),
      .xt_rsc_1_28_ARVALID(xt_rsc_1_28_ARVALID),
      .xt_rsc_1_28_ARUSER(xt_rsc_1_28_ARUSER),
      .xt_rsc_1_28_ARREGION(xt_rsc_1_28_ARREGION),
      .xt_rsc_1_28_ARQOS(xt_rsc_1_28_ARQOS),
      .xt_rsc_1_28_ARPROT(xt_rsc_1_28_ARPROT),
      .xt_rsc_1_28_ARCACHE(xt_rsc_1_28_ARCACHE),
      .xt_rsc_1_28_ARLOCK(xt_rsc_1_28_ARLOCK),
      .xt_rsc_1_28_ARBURST(xt_rsc_1_28_ARBURST),
      .xt_rsc_1_28_ARSIZE(xt_rsc_1_28_ARSIZE),
      .xt_rsc_1_28_ARLEN(xt_rsc_1_28_ARLEN),
      .xt_rsc_1_28_ARADDR(xt_rsc_1_28_ARADDR),
      .xt_rsc_1_28_ARID(xt_rsc_1_28_ARID),
      .xt_rsc_1_28_BREADY(xt_rsc_1_28_BREADY),
      .xt_rsc_1_28_BVALID(xt_rsc_1_28_BVALID),
      .xt_rsc_1_28_BUSER(xt_rsc_1_28_BUSER),
      .xt_rsc_1_28_BRESP(xt_rsc_1_28_BRESP),
      .xt_rsc_1_28_BID(xt_rsc_1_28_BID),
      .xt_rsc_1_28_WREADY(xt_rsc_1_28_WREADY),
      .xt_rsc_1_28_WVALID(xt_rsc_1_28_WVALID),
      .xt_rsc_1_28_WUSER(xt_rsc_1_28_WUSER),
      .xt_rsc_1_28_WLAST(xt_rsc_1_28_WLAST),
      .xt_rsc_1_28_WSTRB(xt_rsc_1_28_WSTRB),
      .xt_rsc_1_28_WDATA(xt_rsc_1_28_WDATA),
      .xt_rsc_1_28_AWREADY(xt_rsc_1_28_AWREADY),
      .xt_rsc_1_28_AWVALID(xt_rsc_1_28_AWVALID),
      .xt_rsc_1_28_AWUSER(xt_rsc_1_28_AWUSER),
      .xt_rsc_1_28_AWREGION(xt_rsc_1_28_AWREGION),
      .xt_rsc_1_28_AWQOS(xt_rsc_1_28_AWQOS),
      .xt_rsc_1_28_AWPROT(xt_rsc_1_28_AWPROT),
      .xt_rsc_1_28_AWCACHE(xt_rsc_1_28_AWCACHE),
      .xt_rsc_1_28_AWLOCK(xt_rsc_1_28_AWLOCK),
      .xt_rsc_1_28_AWBURST(xt_rsc_1_28_AWBURST),
      .xt_rsc_1_28_AWSIZE(xt_rsc_1_28_AWSIZE),
      .xt_rsc_1_28_AWLEN(xt_rsc_1_28_AWLEN),
      .xt_rsc_1_28_AWADDR(xt_rsc_1_28_AWADDR),
      .xt_rsc_1_28_AWID(xt_rsc_1_28_AWID),
      .xt_rsc_triosy_1_28_lz(xt_rsc_triosy_1_28_lz),
      .xt_rsc_1_29_s_tdone(xt_rsc_1_29_s_tdone),
      .xt_rsc_1_29_tr_write_done(xt_rsc_1_29_tr_write_done),
      .xt_rsc_1_29_RREADY(xt_rsc_1_29_RREADY),
      .xt_rsc_1_29_RVALID(xt_rsc_1_29_RVALID),
      .xt_rsc_1_29_RUSER(xt_rsc_1_29_RUSER),
      .xt_rsc_1_29_RLAST(xt_rsc_1_29_RLAST),
      .xt_rsc_1_29_RRESP(xt_rsc_1_29_RRESP),
      .xt_rsc_1_29_RDATA(xt_rsc_1_29_RDATA),
      .xt_rsc_1_29_RID(xt_rsc_1_29_RID),
      .xt_rsc_1_29_ARREADY(xt_rsc_1_29_ARREADY),
      .xt_rsc_1_29_ARVALID(xt_rsc_1_29_ARVALID),
      .xt_rsc_1_29_ARUSER(xt_rsc_1_29_ARUSER),
      .xt_rsc_1_29_ARREGION(xt_rsc_1_29_ARREGION),
      .xt_rsc_1_29_ARQOS(xt_rsc_1_29_ARQOS),
      .xt_rsc_1_29_ARPROT(xt_rsc_1_29_ARPROT),
      .xt_rsc_1_29_ARCACHE(xt_rsc_1_29_ARCACHE),
      .xt_rsc_1_29_ARLOCK(xt_rsc_1_29_ARLOCK),
      .xt_rsc_1_29_ARBURST(xt_rsc_1_29_ARBURST),
      .xt_rsc_1_29_ARSIZE(xt_rsc_1_29_ARSIZE),
      .xt_rsc_1_29_ARLEN(xt_rsc_1_29_ARLEN),
      .xt_rsc_1_29_ARADDR(xt_rsc_1_29_ARADDR),
      .xt_rsc_1_29_ARID(xt_rsc_1_29_ARID),
      .xt_rsc_1_29_BREADY(xt_rsc_1_29_BREADY),
      .xt_rsc_1_29_BVALID(xt_rsc_1_29_BVALID),
      .xt_rsc_1_29_BUSER(xt_rsc_1_29_BUSER),
      .xt_rsc_1_29_BRESP(xt_rsc_1_29_BRESP),
      .xt_rsc_1_29_BID(xt_rsc_1_29_BID),
      .xt_rsc_1_29_WREADY(xt_rsc_1_29_WREADY),
      .xt_rsc_1_29_WVALID(xt_rsc_1_29_WVALID),
      .xt_rsc_1_29_WUSER(xt_rsc_1_29_WUSER),
      .xt_rsc_1_29_WLAST(xt_rsc_1_29_WLAST),
      .xt_rsc_1_29_WSTRB(xt_rsc_1_29_WSTRB),
      .xt_rsc_1_29_WDATA(xt_rsc_1_29_WDATA),
      .xt_rsc_1_29_AWREADY(xt_rsc_1_29_AWREADY),
      .xt_rsc_1_29_AWVALID(xt_rsc_1_29_AWVALID),
      .xt_rsc_1_29_AWUSER(xt_rsc_1_29_AWUSER),
      .xt_rsc_1_29_AWREGION(xt_rsc_1_29_AWREGION),
      .xt_rsc_1_29_AWQOS(xt_rsc_1_29_AWQOS),
      .xt_rsc_1_29_AWPROT(xt_rsc_1_29_AWPROT),
      .xt_rsc_1_29_AWCACHE(xt_rsc_1_29_AWCACHE),
      .xt_rsc_1_29_AWLOCK(xt_rsc_1_29_AWLOCK),
      .xt_rsc_1_29_AWBURST(xt_rsc_1_29_AWBURST),
      .xt_rsc_1_29_AWSIZE(xt_rsc_1_29_AWSIZE),
      .xt_rsc_1_29_AWLEN(xt_rsc_1_29_AWLEN),
      .xt_rsc_1_29_AWADDR(xt_rsc_1_29_AWADDR),
      .xt_rsc_1_29_AWID(xt_rsc_1_29_AWID),
      .xt_rsc_triosy_1_29_lz(xt_rsc_triosy_1_29_lz),
      .xt_rsc_1_30_s_tdone(xt_rsc_1_30_s_tdone),
      .xt_rsc_1_30_tr_write_done(xt_rsc_1_30_tr_write_done),
      .xt_rsc_1_30_RREADY(xt_rsc_1_30_RREADY),
      .xt_rsc_1_30_RVALID(xt_rsc_1_30_RVALID),
      .xt_rsc_1_30_RUSER(xt_rsc_1_30_RUSER),
      .xt_rsc_1_30_RLAST(xt_rsc_1_30_RLAST),
      .xt_rsc_1_30_RRESP(xt_rsc_1_30_RRESP),
      .xt_rsc_1_30_RDATA(xt_rsc_1_30_RDATA),
      .xt_rsc_1_30_RID(xt_rsc_1_30_RID),
      .xt_rsc_1_30_ARREADY(xt_rsc_1_30_ARREADY),
      .xt_rsc_1_30_ARVALID(xt_rsc_1_30_ARVALID),
      .xt_rsc_1_30_ARUSER(xt_rsc_1_30_ARUSER),
      .xt_rsc_1_30_ARREGION(xt_rsc_1_30_ARREGION),
      .xt_rsc_1_30_ARQOS(xt_rsc_1_30_ARQOS),
      .xt_rsc_1_30_ARPROT(xt_rsc_1_30_ARPROT),
      .xt_rsc_1_30_ARCACHE(xt_rsc_1_30_ARCACHE),
      .xt_rsc_1_30_ARLOCK(xt_rsc_1_30_ARLOCK),
      .xt_rsc_1_30_ARBURST(xt_rsc_1_30_ARBURST),
      .xt_rsc_1_30_ARSIZE(xt_rsc_1_30_ARSIZE),
      .xt_rsc_1_30_ARLEN(xt_rsc_1_30_ARLEN),
      .xt_rsc_1_30_ARADDR(xt_rsc_1_30_ARADDR),
      .xt_rsc_1_30_ARID(xt_rsc_1_30_ARID),
      .xt_rsc_1_30_BREADY(xt_rsc_1_30_BREADY),
      .xt_rsc_1_30_BVALID(xt_rsc_1_30_BVALID),
      .xt_rsc_1_30_BUSER(xt_rsc_1_30_BUSER),
      .xt_rsc_1_30_BRESP(xt_rsc_1_30_BRESP),
      .xt_rsc_1_30_BID(xt_rsc_1_30_BID),
      .xt_rsc_1_30_WREADY(xt_rsc_1_30_WREADY),
      .xt_rsc_1_30_WVALID(xt_rsc_1_30_WVALID),
      .xt_rsc_1_30_WUSER(xt_rsc_1_30_WUSER),
      .xt_rsc_1_30_WLAST(xt_rsc_1_30_WLAST),
      .xt_rsc_1_30_WSTRB(xt_rsc_1_30_WSTRB),
      .xt_rsc_1_30_WDATA(xt_rsc_1_30_WDATA),
      .xt_rsc_1_30_AWREADY(xt_rsc_1_30_AWREADY),
      .xt_rsc_1_30_AWVALID(xt_rsc_1_30_AWVALID),
      .xt_rsc_1_30_AWUSER(xt_rsc_1_30_AWUSER),
      .xt_rsc_1_30_AWREGION(xt_rsc_1_30_AWREGION),
      .xt_rsc_1_30_AWQOS(xt_rsc_1_30_AWQOS),
      .xt_rsc_1_30_AWPROT(xt_rsc_1_30_AWPROT),
      .xt_rsc_1_30_AWCACHE(xt_rsc_1_30_AWCACHE),
      .xt_rsc_1_30_AWLOCK(xt_rsc_1_30_AWLOCK),
      .xt_rsc_1_30_AWBURST(xt_rsc_1_30_AWBURST),
      .xt_rsc_1_30_AWSIZE(xt_rsc_1_30_AWSIZE),
      .xt_rsc_1_30_AWLEN(xt_rsc_1_30_AWLEN),
      .xt_rsc_1_30_AWADDR(xt_rsc_1_30_AWADDR),
      .xt_rsc_1_30_AWID(xt_rsc_1_30_AWID),
      .xt_rsc_triosy_1_30_lz(xt_rsc_triosy_1_30_lz),
      .xt_rsc_1_31_s_tdone(xt_rsc_1_31_s_tdone),
      .xt_rsc_1_31_tr_write_done(xt_rsc_1_31_tr_write_done),
      .xt_rsc_1_31_RREADY(xt_rsc_1_31_RREADY),
      .xt_rsc_1_31_RVALID(xt_rsc_1_31_RVALID),
      .xt_rsc_1_31_RUSER(xt_rsc_1_31_RUSER),
      .xt_rsc_1_31_RLAST(xt_rsc_1_31_RLAST),
      .xt_rsc_1_31_RRESP(xt_rsc_1_31_RRESP),
      .xt_rsc_1_31_RDATA(xt_rsc_1_31_RDATA),
      .xt_rsc_1_31_RID(xt_rsc_1_31_RID),
      .xt_rsc_1_31_ARREADY(xt_rsc_1_31_ARREADY),
      .xt_rsc_1_31_ARVALID(xt_rsc_1_31_ARVALID),
      .xt_rsc_1_31_ARUSER(xt_rsc_1_31_ARUSER),
      .xt_rsc_1_31_ARREGION(xt_rsc_1_31_ARREGION),
      .xt_rsc_1_31_ARQOS(xt_rsc_1_31_ARQOS),
      .xt_rsc_1_31_ARPROT(xt_rsc_1_31_ARPROT),
      .xt_rsc_1_31_ARCACHE(xt_rsc_1_31_ARCACHE),
      .xt_rsc_1_31_ARLOCK(xt_rsc_1_31_ARLOCK),
      .xt_rsc_1_31_ARBURST(xt_rsc_1_31_ARBURST),
      .xt_rsc_1_31_ARSIZE(xt_rsc_1_31_ARSIZE),
      .xt_rsc_1_31_ARLEN(xt_rsc_1_31_ARLEN),
      .xt_rsc_1_31_ARADDR(xt_rsc_1_31_ARADDR),
      .xt_rsc_1_31_ARID(xt_rsc_1_31_ARID),
      .xt_rsc_1_31_BREADY(xt_rsc_1_31_BREADY),
      .xt_rsc_1_31_BVALID(xt_rsc_1_31_BVALID),
      .xt_rsc_1_31_BUSER(xt_rsc_1_31_BUSER),
      .xt_rsc_1_31_BRESP(xt_rsc_1_31_BRESP),
      .xt_rsc_1_31_BID(xt_rsc_1_31_BID),
      .xt_rsc_1_31_WREADY(xt_rsc_1_31_WREADY),
      .xt_rsc_1_31_WVALID(xt_rsc_1_31_WVALID),
      .xt_rsc_1_31_WUSER(xt_rsc_1_31_WUSER),
      .xt_rsc_1_31_WLAST(xt_rsc_1_31_WLAST),
      .xt_rsc_1_31_WSTRB(xt_rsc_1_31_WSTRB),
      .xt_rsc_1_31_WDATA(xt_rsc_1_31_WDATA),
      .xt_rsc_1_31_AWREADY(xt_rsc_1_31_AWREADY),
      .xt_rsc_1_31_AWVALID(xt_rsc_1_31_AWVALID),
      .xt_rsc_1_31_AWUSER(xt_rsc_1_31_AWUSER),
      .xt_rsc_1_31_AWREGION(xt_rsc_1_31_AWREGION),
      .xt_rsc_1_31_AWQOS(xt_rsc_1_31_AWQOS),
      .xt_rsc_1_31_AWPROT(xt_rsc_1_31_AWPROT),
      .xt_rsc_1_31_AWCACHE(xt_rsc_1_31_AWCACHE),
      .xt_rsc_1_31_AWLOCK(xt_rsc_1_31_AWLOCK),
      .xt_rsc_1_31_AWBURST(xt_rsc_1_31_AWBURST),
      .xt_rsc_1_31_AWSIZE(xt_rsc_1_31_AWSIZE),
      .xt_rsc_1_31_AWLEN(xt_rsc_1_31_AWLEN),
      .xt_rsc_1_31_AWADDR(xt_rsc_1_31_AWADDR),
      .xt_rsc_1_31_AWID(xt_rsc_1_31_AWID),
      .xt_rsc_triosy_1_31_lz(xt_rsc_triosy_1_31_lz),
      .p_rsc_dat(p_rsc_dat),
      .p_rsc_triosy_lz(p_rsc_triosy_lz),
      .r_rsc_triosy_lz(r_rsc_triosy_lz),
      .twiddle_rsc_0_0_s_tdone(twiddle_rsc_0_0_s_tdone),
      .twiddle_rsc_0_0_tr_write_done(twiddle_rsc_0_0_tr_write_done),
      .twiddle_rsc_0_0_RREADY(twiddle_rsc_0_0_RREADY),
      .twiddle_rsc_0_0_RVALID(twiddle_rsc_0_0_RVALID),
      .twiddle_rsc_0_0_RUSER(twiddle_rsc_0_0_RUSER),
      .twiddle_rsc_0_0_RLAST(twiddle_rsc_0_0_RLAST),
      .twiddle_rsc_0_0_RRESP(twiddle_rsc_0_0_RRESP),
      .twiddle_rsc_0_0_RDATA(twiddle_rsc_0_0_RDATA),
      .twiddle_rsc_0_0_RID(twiddle_rsc_0_0_RID),
      .twiddle_rsc_0_0_ARREADY(twiddle_rsc_0_0_ARREADY),
      .twiddle_rsc_0_0_ARVALID(twiddle_rsc_0_0_ARVALID),
      .twiddle_rsc_0_0_ARUSER(twiddle_rsc_0_0_ARUSER),
      .twiddle_rsc_0_0_ARREGION(twiddle_rsc_0_0_ARREGION),
      .twiddle_rsc_0_0_ARQOS(twiddle_rsc_0_0_ARQOS),
      .twiddle_rsc_0_0_ARPROT(twiddle_rsc_0_0_ARPROT),
      .twiddle_rsc_0_0_ARCACHE(twiddle_rsc_0_0_ARCACHE),
      .twiddle_rsc_0_0_ARLOCK(twiddle_rsc_0_0_ARLOCK),
      .twiddle_rsc_0_0_ARBURST(twiddle_rsc_0_0_ARBURST),
      .twiddle_rsc_0_0_ARSIZE(twiddle_rsc_0_0_ARSIZE),
      .twiddle_rsc_0_0_ARLEN(twiddle_rsc_0_0_ARLEN),
      .twiddle_rsc_0_0_ARADDR(twiddle_rsc_0_0_ARADDR),
      .twiddle_rsc_0_0_ARID(twiddle_rsc_0_0_ARID),
      .twiddle_rsc_0_0_BREADY(twiddle_rsc_0_0_BREADY),
      .twiddle_rsc_0_0_BVALID(twiddle_rsc_0_0_BVALID),
      .twiddle_rsc_0_0_BUSER(twiddle_rsc_0_0_BUSER),
      .twiddle_rsc_0_0_BRESP(twiddle_rsc_0_0_BRESP),
      .twiddle_rsc_0_0_BID(twiddle_rsc_0_0_BID),
      .twiddle_rsc_0_0_WREADY(twiddle_rsc_0_0_WREADY),
      .twiddle_rsc_0_0_WVALID(twiddle_rsc_0_0_WVALID),
      .twiddle_rsc_0_0_WUSER(twiddle_rsc_0_0_WUSER),
      .twiddle_rsc_0_0_WLAST(twiddle_rsc_0_0_WLAST),
      .twiddle_rsc_0_0_WSTRB(twiddle_rsc_0_0_WSTRB),
      .twiddle_rsc_0_0_WDATA(twiddle_rsc_0_0_WDATA),
      .twiddle_rsc_0_0_AWREADY(twiddle_rsc_0_0_AWREADY),
      .twiddle_rsc_0_0_AWVALID(twiddle_rsc_0_0_AWVALID),
      .twiddle_rsc_0_0_AWUSER(twiddle_rsc_0_0_AWUSER),
      .twiddle_rsc_0_0_AWREGION(twiddle_rsc_0_0_AWREGION),
      .twiddle_rsc_0_0_AWQOS(twiddle_rsc_0_0_AWQOS),
      .twiddle_rsc_0_0_AWPROT(twiddle_rsc_0_0_AWPROT),
      .twiddle_rsc_0_0_AWCACHE(twiddle_rsc_0_0_AWCACHE),
      .twiddle_rsc_0_0_AWLOCK(twiddle_rsc_0_0_AWLOCK),
      .twiddle_rsc_0_0_AWBURST(twiddle_rsc_0_0_AWBURST),
      .twiddle_rsc_0_0_AWSIZE(twiddle_rsc_0_0_AWSIZE),
      .twiddle_rsc_0_0_AWLEN(twiddle_rsc_0_0_AWLEN),
      .twiddle_rsc_0_0_AWADDR(twiddle_rsc_0_0_AWADDR),
      .twiddle_rsc_0_0_AWID(twiddle_rsc_0_0_AWID),
      .twiddle_rsc_triosy_0_0_lz(twiddle_rsc_triosy_0_0_lz),
      .twiddle_rsc_0_1_s_tdone(twiddle_rsc_0_1_s_tdone),
      .twiddle_rsc_0_1_tr_write_done(twiddle_rsc_0_1_tr_write_done),
      .twiddle_rsc_0_1_RREADY(twiddle_rsc_0_1_RREADY),
      .twiddle_rsc_0_1_RVALID(twiddle_rsc_0_1_RVALID),
      .twiddle_rsc_0_1_RUSER(twiddle_rsc_0_1_RUSER),
      .twiddle_rsc_0_1_RLAST(twiddle_rsc_0_1_RLAST),
      .twiddle_rsc_0_1_RRESP(twiddle_rsc_0_1_RRESP),
      .twiddle_rsc_0_1_RDATA(twiddle_rsc_0_1_RDATA),
      .twiddle_rsc_0_1_RID(twiddle_rsc_0_1_RID),
      .twiddle_rsc_0_1_ARREADY(twiddle_rsc_0_1_ARREADY),
      .twiddle_rsc_0_1_ARVALID(twiddle_rsc_0_1_ARVALID),
      .twiddle_rsc_0_1_ARUSER(twiddle_rsc_0_1_ARUSER),
      .twiddle_rsc_0_1_ARREGION(twiddle_rsc_0_1_ARREGION),
      .twiddle_rsc_0_1_ARQOS(twiddle_rsc_0_1_ARQOS),
      .twiddle_rsc_0_1_ARPROT(twiddle_rsc_0_1_ARPROT),
      .twiddle_rsc_0_1_ARCACHE(twiddle_rsc_0_1_ARCACHE),
      .twiddle_rsc_0_1_ARLOCK(twiddle_rsc_0_1_ARLOCK),
      .twiddle_rsc_0_1_ARBURST(twiddle_rsc_0_1_ARBURST),
      .twiddle_rsc_0_1_ARSIZE(twiddle_rsc_0_1_ARSIZE),
      .twiddle_rsc_0_1_ARLEN(twiddle_rsc_0_1_ARLEN),
      .twiddle_rsc_0_1_ARADDR(twiddle_rsc_0_1_ARADDR),
      .twiddle_rsc_0_1_ARID(twiddle_rsc_0_1_ARID),
      .twiddle_rsc_0_1_BREADY(twiddle_rsc_0_1_BREADY),
      .twiddle_rsc_0_1_BVALID(twiddle_rsc_0_1_BVALID),
      .twiddle_rsc_0_1_BUSER(twiddle_rsc_0_1_BUSER),
      .twiddle_rsc_0_1_BRESP(twiddle_rsc_0_1_BRESP),
      .twiddle_rsc_0_1_BID(twiddle_rsc_0_1_BID),
      .twiddle_rsc_0_1_WREADY(twiddle_rsc_0_1_WREADY),
      .twiddle_rsc_0_1_WVALID(twiddle_rsc_0_1_WVALID),
      .twiddle_rsc_0_1_WUSER(twiddle_rsc_0_1_WUSER),
      .twiddle_rsc_0_1_WLAST(twiddle_rsc_0_1_WLAST),
      .twiddle_rsc_0_1_WSTRB(twiddle_rsc_0_1_WSTRB),
      .twiddle_rsc_0_1_WDATA(twiddle_rsc_0_1_WDATA),
      .twiddle_rsc_0_1_AWREADY(twiddle_rsc_0_1_AWREADY),
      .twiddle_rsc_0_1_AWVALID(twiddle_rsc_0_1_AWVALID),
      .twiddle_rsc_0_1_AWUSER(twiddle_rsc_0_1_AWUSER),
      .twiddle_rsc_0_1_AWREGION(twiddle_rsc_0_1_AWREGION),
      .twiddle_rsc_0_1_AWQOS(twiddle_rsc_0_1_AWQOS),
      .twiddle_rsc_0_1_AWPROT(twiddle_rsc_0_1_AWPROT),
      .twiddle_rsc_0_1_AWCACHE(twiddle_rsc_0_1_AWCACHE),
      .twiddle_rsc_0_1_AWLOCK(twiddle_rsc_0_1_AWLOCK),
      .twiddle_rsc_0_1_AWBURST(twiddle_rsc_0_1_AWBURST),
      .twiddle_rsc_0_1_AWSIZE(twiddle_rsc_0_1_AWSIZE),
      .twiddle_rsc_0_1_AWLEN(twiddle_rsc_0_1_AWLEN),
      .twiddle_rsc_0_1_AWADDR(twiddle_rsc_0_1_AWADDR),
      .twiddle_rsc_0_1_AWID(twiddle_rsc_0_1_AWID),
      .twiddle_rsc_triosy_0_1_lz(twiddle_rsc_triosy_0_1_lz),
      .twiddle_rsc_0_2_s_tdone(twiddle_rsc_0_2_s_tdone),
      .twiddle_rsc_0_2_tr_write_done(twiddle_rsc_0_2_tr_write_done),
      .twiddle_rsc_0_2_RREADY(twiddle_rsc_0_2_RREADY),
      .twiddle_rsc_0_2_RVALID(twiddle_rsc_0_2_RVALID),
      .twiddle_rsc_0_2_RUSER(twiddle_rsc_0_2_RUSER),
      .twiddle_rsc_0_2_RLAST(twiddle_rsc_0_2_RLAST),
      .twiddle_rsc_0_2_RRESP(twiddle_rsc_0_2_RRESP),
      .twiddle_rsc_0_2_RDATA(twiddle_rsc_0_2_RDATA),
      .twiddle_rsc_0_2_RID(twiddle_rsc_0_2_RID),
      .twiddle_rsc_0_2_ARREADY(twiddle_rsc_0_2_ARREADY),
      .twiddle_rsc_0_2_ARVALID(twiddle_rsc_0_2_ARVALID),
      .twiddle_rsc_0_2_ARUSER(twiddle_rsc_0_2_ARUSER),
      .twiddle_rsc_0_2_ARREGION(twiddle_rsc_0_2_ARREGION),
      .twiddle_rsc_0_2_ARQOS(twiddle_rsc_0_2_ARQOS),
      .twiddle_rsc_0_2_ARPROT(twiddle_rsc_0_2_ARPROT),
      .twiddle_rsc_0_2_ARCACHE(twiddle_rsc_0_2_ARCACHE),
      .twiddle_rsc_0_2_ARLOCK(twiddle_rsc_0_2_ARLOCK),
      .twiddle_rsc_0_2_ARBURST(twiddle_rsc_0_2_ARBURST),
      .twiddle_rsc_0_2_ARSIZE(twiddle_rsc_0_2_ARSIZE),
      .twiddle_rsc_0_2_ARLEN(twiddle_rsc_0_2_ARLEN),
      .twiddle_rsc_0_2_ARADDR(twiddle_rsc_0_2_ARADDR),
      .twiddle_rsc_0_2_ARID(twiddle_rsc_0_2_ARID),
      .twiddle_rsc_0_2_BREADY(twiddle_rsc_0_2_BREADY),
      .twiddle_rsc_0_2_BVALID(twiddle_rsc_0_2_BVALID),
      .twiddle_rsc_0_2_BUSER(twiddle_rsc_0_2_BUSER),
      .twiddle_rsc_0_2_BRESP(twiddle_rsc_0_2_BRESP),
      .twiddle_rsc_0_2_BID(twiddle_rsc_0_2_BID),
      .twiddle_rsc_0_2_WREADY(twiddle_rsc_0_2_WREADY),
      .twiddle_rsc_0_2_WVALID(twiddle_rsc_0_2_WVALID),
      .twiddle_rsc_0_2_WUSER(twiddle_rsc_0_2_WUSER),
      .twiddle_rsc_0_2_WLAST(twiddle_rsc_0_2_WLAST),
      .twiddle_rsc_0_2_WSTRB(twiddle_rsc_0_2_WSTRB),
      .twiddle_rsc_0_2_WDATA(twiddle_rsc_0_2_WDATA),
      .twiddle_rsc_0_2_AWREADY(twiddle_rsc_0_2_AWREADY),
      .twiddle_rsc_0_2_AWVALID(twiddle_rsc_0_2_AWVALID),
      .twiddle_rsc_0_2_AWUSER(twiddle_rsc_0_2_AWUSER),
      .twiddle_rsc_0_2_AWREGION(twiddle_rsc_0_2_AWREGION),
      .twiddle_rsc_0_2_AWQOS(twiddle_rsc_0_2_AWQOS),
      .twiddle_rsc_0_2_AWPROT(twiddle_rsc_0_2_AWPROT),
      .twiddle_rsc_0_2_AWCACHE(twiddle_rsc_0_2_AWCACHE),
      .twiddle_rsc_0_2_AWLOCK(twiddle_rsc_0_2_AWLOCK),
      .twiddle_rsc_0_2_AWBURST(twiddle_rsc_0_2_AWBURST),
      .twiddle_rsc_0_2_AWSIZE(twiddle_rsc_0_2_AWSIZE),
      .twiddle_rsc_0_2_AWLEN(twiddle_rsc_0_2_AWLEN),
      .twiddle_rsc_0_2_AWADDR(twiddle_rsc_0_2_AWADDR),
      .twiddle_rsc_0_2_AWID(twiddle_rsc_0_2_AWID),
      .twiddle_rsc_triosy_0_2_lz(twiddle_rsc_triosy_0_2_lz),
      .twiddle_rsc_0_3_s_tdone(twiddle_rsc_0_3_s_tdone),
      .twiddle_rsc_0_3_tr_write_done(twiddle_rsc_0_3_tr_write_done),
      .twiddle_rsc_0_3_RREADY(twiddle_rsc_0_3_RREADY),
      .twiddle_rsc_0_3_RVALID(twiddle_rsc_0_3_RVALID),
      .twiddle_rsc_0_3_RUSER(twiddle_rsc_0_3_RUSER),
      .twiddle_rsc_0_3_RLAST(twiddle_rsc_0_3_RLAST),
      .twiddle_rsc_0_3_RRESP(twiddle_rsc_0_3_RRESP),
      .twiddle_rsc_0_3_RDATA(twiddle_rsc_0_3_RDATA),
      .twiddle_rsc_0_3_RID(twiddle_rsc_0_3_RID),
      .twiddle_rsc_0_3_ARREADY(twiddle_rsc_0_3_ARREADY),
      .twiddle_rsc_0_3_ARVALID(twiddle_rsc_0_3_ARVALID),
      .twiddle_rsc_0_3_ARUSER(twiddle_rsc_0_3_ARUSER),
      .twiddle_rsc_0_3_ARREGION(twiddle_rsc_0_3_ARREGION),
      .twiddle_rsc_0_3_ARQOS(twiddle_rsc_0_3_ARQOS),
      .twiddle_rsc_0_3_ARPROT(twiddle_rsc_0_3_ARPROT),
      .twiddle_rsc_0_3_ARCACHE(twiddle_rsc_0_3_ARCACHE),
      .twiddle_rsc_0_3_ARLOCK(twiddle_rsc_0_3_ARLOCK),
      .twiddle_rsc_0_3_ARBURST(twiddle_rsc_0_3_ARBURST),
      .twiddle_rsc_0_3_ARSIZE(twiddle_rsc_0_3_ARSIZE),
      .twiddle_rsc_0_3_ARLEN(twiddle_rsc_0_3_ARLEN),
      .twiddle_rsc_0_3_ARADDR(twiddle_rsc_0_3_ARADDR),
      .twiddle_rsc_0_3_ARID(twiddle_rsc_0_3_ARID),
      .twiddle_rsc_0_3_BREADY(twiddle_rsc_0_3_BREADY),
      .twiddle_rsc_0_3_BVALID(twiddle_rsc_0_3_BVALID),
      .twiddle_rsc_0_3_BUSER(twiddle_rsc_0_3_BUSER),
      .twiddle_rsc_0_3_BRESP(twiddle_rsc_0_3_BRESP),
      .twiddle_rsc_0_3_BID(twiddle_rsc_0_3_BID),
      .twiddle_rsc_0_3_WREADY(twiddle_rsc_0_3_WREADY),
      .twiddle_rsc_0_3_WVALID(twiddle_rsc_0_3_WVALID),
      .twiddle_rsc_0_3_WUSER(twiddle_rsc_0_3_WUSER),
      .twiddle_rsc_0_3_WLAST(twiddle_rsc_0_3_WLAST),
      .twiddle_rsc_0_3_WSTRB(twiddle_rsc_0_3_WSTRB),
      .twiddle_rsc_0_3_WDATA(twiddle_rsc_0_3_WDATA),
      .twiddle_rsc_0_3_AWREADY(twiddle_rsc_0_3_AWREADY),
      .twiddle_rsc_0_3_AWVALID(twiddle_rsc_0_3_AWVALID),
      .twiddle_rsc_0_3_AWUSER(twiddle_rsc_0_3_AWUSER),
      .twiddle_rsc_0_3_AWREGION(twiddle_rsc_0_3_AWREGION),
      .twiddle_rsc_0_3_AWQOS(twiddle_rsc_0_3_AWQOS),
      .twiddle_rsc_0_3_AWPROT(twiddle_rsc_0_3_AWPROT),
      .twiddle_rsc_0_3_AWCACHE(twiddle_rsc_0_3_AWCACHE),
      .twiddle_rsc_0_3_AWLOCK(twiddle_rsc_0_3_AWLOCK),
      .twiddle_rsc_0_3_AWBURST(twiddle_rsc_0_3_AWBURST),
      .twiddle_rsc_0_3_AWSIZE(twiddle_rsc_0_3_AWSIZE),
      .twiddle_rsc_0_3_AWLEN(twiddle_rsc_0_3_AWLEN),
      .twiddle_rsc_0_3_AWADDR(twiddle_rsc_0_3_AWADDR),
      .twiddle_rsc_0_3_AWID(twiddle_rsc_0_3_AWID),
      .twiddle_rsc_triosy_0_3_lz(twiddle_rsc_triosy_0_3_lz),
      .twiddle_rsc_0_4_s_tdone(twiddle_rsc_0_4_s_tdone),
      .twiddle_rsc_0_4_tr_write_done(twiddle_rsc_0_4_tr_write_done),
      .twiddle_rsc_0_4_RREADY(twiddle_rsc_0_4_RREADY),
      .twiddle_rsc_0_4_RVALID(twiddle_rsc_0_4_RVALID),
      .twiddle_rsc_0_4_RUSER(twiddle_rsc_0_4_RUSER),
      .twiddle_rsc_0_4_RLAST(twiddle_rsc_0_4_RLAST),
      .twiddle_rsc_0_4_RRESP(twiddle_rsc_0_4_RRESP),
      .twiddle_rsc_0_4_RDATA(twiddle_rsc_0_4_RDATA),
      .twiddle_rsc_0_4_RID(twiddle_rsc_0_4_RID),
      .twiddle_rsc_0_4_ARREADY(twiddle_rsc_0_4_ARREADY),
      .twiddle_rsc_0_4_ARVALID(twiddle_rsc_0_4_ARVALID),
      .twiddle_rsc_0_4_ARUSER(twiddle_rsc_0_4_ARUSER),
      .twiddle_rsc_0_4_ARREGION(twiddle_rsc_0_4_ARREGION),
      .twiddle_rsc_0_4_ARQOS(twiddle_rsc_0_4_ARQOS),
      .twiddle_rsc_0_4_ARPROT(twiddle_rsc_0_4_ARPROT),
      .twiddle_rsc_0_4_ARCACHE(twiddle_rsc_0_4_ARCACHE),
      .twiddle_rsc_0_4_ARLOCK(twiddle_rsc_0_4_ARLOCK),
      .twiddle_rsc_0_4_ARBURST(twiddle_rsc_0_4_ARBURST),
      .twiddle_rsc_0_4_ARSIZE(twiddle_rsc_0_4_ARSIZE),
      .twiddle_rsc_0_4_ARLEN(twiddle_rsc_0_4_ARLEN),
      .twiddle_rsc_0_4_ARADDR(twiddle_rsc_0_4_ARADDR),
      .twiddle_rsc_0_4_ARID(twiddle_rsc_0_4_ARID),
      .twiddle_rsc_0_4_BREADY(twiddle_rsc_0_4_BREADY),
      .twiddle_rsc_0_4_BVALID(twiddle_rsc_0_4_BVALID),
      .twiddle_rsc_0_4_BUSER(twiddle_rsc_0_4_BUSER),
      .twiddle_rsc_0_4_BRESP(twiddle_rsc_0_4_BRESP),
      .twiddle_rsc_0_4_BID(twiddle_rsc_0_4_BID),
      .twiddle_rsc_0_4_WREADY(twiddle_rsc_0_4_WREADY),
      .twiddle_rsc_0_4_WVALID(twiddle_rsc_0_4_WVALID),
      .twiddle_rsc_0_4_WUSER(twiddle_rsc_0_4_WUSER),
      .twiddle_rsc_0_4_WLAST(twiddle_rsc_0_4_WLAST),
      .twiddle_rsc_0_4_WSTRB(twiddle_rsc_0_4_WSTRB),
      .twiddle_rsc_0_4_WDATA(twiddle_rsc_0_4_WDATA),
      .twiddle_rsc_0_4_AWREADY(twiddle_rsc_0_4_AWREADY),
      .twiddle_rsc_0_4_AWVALID(twiddle_rsc_0_4_AWVALID),
      .twiddle_rsc_0_4_AWUSER(twiddle_rsc_0_4_AWUSER),
      .twiddle_rsc_0_4_AWREGION(twiddle_rsc_0_4_AWREGION),
      .twiddle_rsc_0_4_AWQOS(twiddle_rsc_0_4_AWQOS),
      .twiddle_rsc_0_4_AWPROT(twiddle_rsc_0_4_AWPROT),
      .twiddle_rsc_0_4_AWCACHE(twiddle_rsc_0_4_AWCACHE),
      .twiddle_rsc_0_4_AWLOCK(twiddle_rsc_0_4_AWLOCK),
      .twiddle_rsc_0_4_AWBURST(twiddle_rsc_0_4_AWBURST),
      .twiddle_rsc_0_4_AWSIZE(twiddle_rsc_0_4_AWSIZE),
      .twiddle_rsc_0_4_AWLEN(twiddle_rsc_0_4_AWLEN),
      .twiddle_rsc_0_4_AWADDR(twiddle_rsc_0_4_AWADDR),
      .twiddle_rsc_0_4_AWID(twiddle_rsc_0_4_AWID),
      .twiddle_rsc_triosy_0_4_lz(twiddle_rsc_triosy_0_4_lz),
      .twiddle_rsc_0_5_s_tdone(twiddle_rsc_0_5_s_tdone),
      .twiddle_rsc_0_5_tr_write_done(twiddle_rsc_0_5_tr_write_done),
      .twiddle_rsc_0_5_RREADY(twiddle_rsc_0_5_RREADY),
      .twiddle_rsc_0_5_RVALID(twiddle_rsc_0_5_RVALID),
      .twiddle_rsc_0_5_RUSER(twiddle_rsc_0_5_RUSER),
      .twiddle_rsc_0_5_RLAST(twiddle_rsc_0_5_RLAST),
      .twiddle_rsc_0_5_RRESP(twiddle_rsc_0_5_RRESP),
      .twiddle_rsc_0_5_RDATA(twiddle_rsc_0_5_RDATA),
      .twiddle_rsc_0_5_RID(twiddle_rsc_0_5_RID),
      .twiddle_rsc_0_5_ARREADY(twiddle_rsc_0_5_ARREADY),
      .twiddle_rsc_0_5_ARVALID(twiddle_rsc_0_5_ARVALID),
      .twiddle_rsc_0_5_ARUSER(twiddle_rsc_0_5_ARUSER),
      .twiddle_rsc_0_5_ARREGION(twiddle_rsc_0_5_ARREGION),
      .twiddle_rsc_0_5_ARQOS(twiddle_rsc_0_5_ARQOS),
      .twiddle_rsc_0_5_ARPROT(twiddle_rsc_0_5_ARPROT),
      .twiddle_rsc_0_5_ARCACHE(twiddle_rsc_0_5_ARCACHE),
      .twiddle_rsc_0_5_ARLOCK(twiddle_rsc_0_5_ARLOCK),
      .twiddle_rsc_0_5_ARBURST(twiddle_rsc_0_5_ARBURST),
      .twiddle_rsc_0_5_ARSIZE(twiddle_rsc_0_5_ARSIZE),
      .twiddle_rsc_0_5_ARLEN(twiddle_rsc_0_5_ARLEN),
      .twiddle_rsc_0_5_ARADDR(twiddle_rsc_0_5_ARADDR),
      .twiddle_rsc_0_5_ARID(twiddle_rsc_0_5_ARID),
      .twiddle_rsc_0_5_BREADY(twiddle_rsc_0_5_BREADY),
      .twiddle_rsc_0_5_BVALID(twiddle_rsc_0_5_BVALID),
      .twiddle_rsc_0_5_BUSER(twiddle_rsc_0_5_BUSER),
      .twiddle_rsc_0_5_BRESP(twiddle_rsc_0_5_BRESP),
      .twiddle_rsc_0_5_BID(twiddle_rsc_0_5_BID),
      .twiddle_rsc_0_5_WREADY(twiddle_rsc_0_5_WREADY),
      .twiddle_rsc_0_5_WVALID(twiddle_rsc_0_5_WVALID),
      .twiddle_rsc_0_5_WUSER(twiddle_rsc_0_5_WUSER),
      .twiddle_rsc_0_5_WLAST(twiddle_rsc_0_5_WLAST),
      .twiddle_rsc_0_5_WSTRB(twiddle_rsc_0_5_WSTRB),
      .twiddle_rsc_0_5_WDATA(twiddle_rsc_0_5_WDATA),
      .twiddle_rsc_0_5_AWREADY(twiddle_rsc_0_5_AWREADY),
      .twiddle_rsc_0_5_AWVALID(twiddle_rsc_0_5_AWVALID),
      .twiddle_rsc_0_5_AWUSER(twiddle_rsc_0_5_AWUSER),
      .twiddle_rsc_0_5_AWREGION(twiddle_rsc_0_5_AWREGION),
      .twiddle_rsc_0_5_AWQOS(twiddle_rsc_0_5_AWQOS),
      .twiddle_rsc_0_5_AWPROT(twiddle_rsc_0_5_AWPROT),
      .twiddle_rsc_0_5_AWCACHE(twiddle_rsc_0_5_AWCACHE),
      .twiddle_rsc_0_5_AWLOCK(twiddle_rsc_0_5_AWLOCK),
      .twiddle_rsc_0_5_AWBURST(twiddle_rsc_0_5_AWBURST),
      .twiddle_rsc_0_5_AWSIZE(twiddle_rsc_0_5_AWSIZE),
      .twiddle_rsc_0_5_AWLEN(twiddle_rsc_0_5_AWLEN),
      .twiddle_rsc_0_5_AWADDR(twiddle_rsc_0_5_AWADDR),
      .twiddle_rsc_0_5_AWID(twiddle_rsc_0_5_AWID),
      .twiddle_rsc_triosy_0_5_lz(twiddle_rsc_triosy_0_5_lz),
      .twiddle_rsc_0_6_s_tdone(twiddle_rsc_0_6_s_tdone),
      .twiddle_rsc_0_6_tr_write_done(twiddle_rsc_0_6_tr_write_done),
      .twiddle_rsc_0_6_RREADY(twiddle_rsc_0_6_RREADY),
      .twiddle_rsc_0_6_RVALID(twiddle_rsc_0_6_RVALID),
      .twiddle_rsc_0_6_RUSER(twiddle_rsc_0_6_RUSER),
      .twiddle_rsc_0_6_RLAST(twiddle_rsc_0_6_RLAST),
      .twiddle_rsc_0_6_RRESP(twiddle_rsc_0_6_RRESP),
      .twiddle_rsc_0_6_RDATA(twiddle_rsc_0_6_RDATA),
      .twiddle_rsc_0_6_RID(twiddle_rsc_0_6_RID),
      .twiddle_rsc_0_6_ARREADY(twiddle_rsc_0_6_ARREADY),
      .twiddle_rsc_0_6_ARVALID(twiddle_rsc_0_6_ARVALID),
      .twiddle_rsc_0_6_ARUSER(twiddle_rsc_0_6_ARUSER),
      .twiddle_rsc_0_6_ARREGION(twiddle_rsc_0_6_ARREGION),
      .twiddle_rsc_0_6_ARQOS(twiddle_rsc_0_6_ARQOS),
      .twiddle_rsc_0_6_ARPROT(twiddle_rsc_0_6_ARPROT),
      .twiddle_rsc_0_6_ARCACHE(twiddle_rsc_0_6_ARCACHE),
      .twiddle_rsc_0_6_ARLOCK(twiddle_rsc_0_6_ARLOCK),
      .twiddle_rsc_0_6_ARBURST(twiddle_rsc_0_6_ARBURST),
      .twiddle_rsc_0_6_ARSIZE(twiddle_rsc_0_6_ARSIZE),
      .twiddle_rsc_0_6_ARLEN(twiddle_rsc_0_6_ARLEN),
      .twiddle_rsc_0_6_ARADDR(twiddle_rsc_0_6_ARADDR),
      .twiddle_rsc_0_6_ARID(twiddle_rsc_0_6_ARID),
      .twiddle_rsc_0_6_BREADY(twiddle_rsc_0_6_BREADY),
      .twiddle_rsc_0_6_BVALID(twiddle_rsc_0_6_BVALID),
      .twiddle_rsc_0_6_BUSER(twiddle_rsc_0_6_BUSER),
      .twiddle_rsc_0_6_BRESP(twiddle_rsc_0_6_BRESP),
      .twiddle_rsc_0_6_BID(twiddle_rsc_0_6_BID),
      .twiddle_rsc_0_6_WREADY(twiddle_rsc_0_6_WREADY),
      .twiddle_rsc_0_6_WVALID(twiddle_rsc_0_6_WVALID),
      .twiddle_rsc_0_6_WUSER(twiddle_rsc_0_6_WUSER),
      .twiddle_rsc_0_6_WLAST(twiddle_rsc_0_6_WLAST),
      .twiddle_rsc_0_6_WSTRB(twiddle_rsc_0_6_WSTRB),
      .twiddle_rsc_0_6_WDATA(twiddle_rsc_0_6_WDATA),
      .twiddle_rsc_0_6_AWREADY(twiddle_rsc_0_6_AWREADY),
      .twiddle_rsc_0_6_AWVALID(twiddle_rsc_0_6_AWVALID),
      .twiddle_rsc_0_6_AWUSER(twiddle_rsc_0_6_AWUSER),
      .twiddle_rsc_0_6_AWREGION(twiddle_rsc_0_6_AWREGION),
      .twiddle_rsc_0_6_AWQOS(twiddle_rsc_0_6_AWQOS),
      .twiddle_rsc_0_6_AWPROT(twiddle_rsc_0_6_AWPROT),
      .twiddle_rsc_0_6_AWCACHE(twiddle_rsc_0_6_AWCACHE),
      .twiddle_rsc_0_6_AWLOCK(twiddle_rsc_0_6_AWLOCK),
      .twiddle_rsc_0_6_AWBURST(twiddle_rsc_0_6_AWBURST),
      .twiddle_rsc_0_6_AWSIZE(twiddle_rsc_0_6_AWSIZE),
      .twiddle_rsc_0_6_AWLEN(twiddle_rsc_0_6_AWLEN),
      .twiddle_rsc_0_6_AWADDR(twiddle_rsc_0_6_AWADDR),
      .twiddle_rsc_0_6_AWID(twiddle_rsc_0_6_AWID),
      .twiddle_rsc_triosy_0_6_lz(twiddle_rsc_triosy_0_6_lz),
      .twiddle_rsc_0_7_s_tdone(twiddle_rsc_0_7_s_tdone),
      .twiddle_rsc_0_7_tr_write_done(twiddle_rsc_0_7_tr_write_done),
      .twiddle_rsc_0_7_RREADY(twiddle_rsc_0_7_RREADY),
      .twiddle_rsc_0_7_RVALID(twiddle_rsc_0_7_RVALID),
      .twiddle_rsc_0_7_RUSER(twiddle_rsc_0_7_RUSER),
      .twiddle_rsc_0_7_RLAST(twiddle_rsc_0_7_RLAST),
      .twiddle_rsc_0_7_RRESP(twiddle_rsc_0_7_RRESP),
      .twiddle_rsc_0_7_RDATA(twiddle_rsc_0_7_RDATA),
      .twiddle_rsc_0_7_RID(twiddle_rsc_0_7_RID),
      .twiddle_rsc_0_7_ARREADY(twiddle_rsc_0_7_ARREADY),
      .twiddle_rsc_0_7_ARVALID(twiddle_rsc_0_7_ARVALID),
      .twiddle_rsc_0_7_ARUSER(twiddle_rsc_0_7_ARUSER),
      .twiddle_rsc_0_7_ARREGION(twiddle_rsc_0_7_ARREGION),
      .twiddle_rsc_0_7_ARQOS(twiddle_rsc_0_7_ARQOS),
      .twiddle_rsc_0_7_ARPROT(twiddle_rsc_0_7_ARPROT),
      .twiddle_rsc_0_7_ARCACHE(twiddle_rsc_0_7_ARCACHE),
      .twiddle_rsc_0_7_ARLOCK(twiddle_rsc_0_7_ARLOCK),
      .twiddle_rsc_0_7_ARBURST(twiddle_rsc_0_7_ARBURST),
      .twiddle_rsc_0_7_ARSIZE(twiddle_rsc_0_7_ARSIZE),
      .twiddle_rsc_0_7_ARLEN(twiddle_rsc_0_7_ARLEN),
      .twiddle_rsc_0_7_ARADDR(twiddle_rsc_0_7_ARADDR),
      .twiddle_rsc_0_7_ARID(twiddle_rsc_0_7_ARID),
      .twiddle_rsc_0_7_BREADY(twiddle_rsc_0_7_BREADY),
      .twiddle_rsc_0_7_BVALID(twiddle_rsc_0_7_BVALID),
      .twiddle_rsc_0_7_BUSER(twiddle_rsc_0_7_BUSER),
      .twiddle_rsc_0_7_BRESP(twiddle_rsc_0_7_BRESP),
      .twiddle_rsc_0_7_BID(twiddle_rsc_0_7_BID),
      .twiddle_rsc_0_7_WREADY(twiddle_rsc_0_7_WREADY),
      .twiddle_rsc_0_7_WVALID(twiddle_rsc_0_7_WVALID),
      .twiddle_rsc_0_7_WUSER(twiddle_rsc_0_7_WUSER),
      .twiddle_rsc_0_7_WLAST(twiddle_rsc_0_7_WLAST),
      .twiddle_rsc_0_7_WSTRB(twiddle_rsc_0_7_WSTRB),
      .twiddle_rsc_0_7_WDATA(twiddle_rsc_0_7_WDATA),
      .twiddle_rsc_0_7_AWREADY(twiddle_rsc_0_7_AWREADY),
      .twiddle_rsc_0_7_AWVALID(twiddle_rsc_0_7_AWVALID),
      .twiddle_rsc_0_7_AWUSER(twiddle_rsc_0_7_AWUSER),
      .twiddle_rsc_0_7_AWREGION(twiddle_rsc_0_7_AWREGION),
      .twiddle_rsc_0_7_AWQOS(twiddle_rsc_0_7_AWQOS),
      .twiddle_rsc_0_7_AWPROT(twiddle_rsc_0_7_AWPROT),
      .twiddle_rsc_0_7_AWCACHE(twiddle_rsc_0_7_AWCACHE),
      .twiddle_rsc_0_7_AWLOCK(twiddle_rsc_0_7_AWLOCK),
      .twiddle_rsc_0_7_AWBURST(twiddle_rsc_0_7_AWBURST),
      .twiddle_rsc_0_7_AWSIZE(twiddle_rsc_0_7_AWSIZE),
      .twiddle_rsc_0_7_AWLEN(twiddle_rsc_0_7_AWLEN),
      .twiddle_rsc_0_7_AWADDR(twiddle_rsc_0_7_AWADDR),
      .twiddle_rsc_0_7_AWID(twiddle_rsc_0_7_AWID),
      .twiddle_rsc_triosy_0_7_lz(twiddle_rsc_triosy_0_7_lz),
      .twiddle_rsc_0_8_s_tdone(twiddle_rsc_0_8_s_tdone),
      .twiddle_rsc_0_8_tr_write_done(twiddle_rsc_0_8_tr_write_done),
      .twiddle_rsc_0_8_RREADY(twiddle_rsc_0_8_RREADY),
      .twiddle_rsc_0_8_RVALID(twiddle_rsc_0_8_RVALID),
      .twiddle_rsc_0_8_RUSER(twiddle_rsc_0_8_RUSER),
      .twiddle_rsc_0_8_RLAST(twiddle_rsc_0_8_RLAST),
      .twiddle_rsc_0_8_RRESP(twiddle_rsc_0_8_RRESP),
      .twiddle_rsc_0_8_RDATA(twiddle_rsc_0_8_RDATA),
      .twiddle_rsc_0_8_RID(twiddle_rsc_0_8_RID),
      .twiddle_rsc_0_8_ARREADY(twiddle_rsc_0_8_ARREADY),
      .twiddle_rsc_0_8_ARVALID(twiddle_rsc_0_8_ARVALID),
      .twiddle_rsc_0_8_ARUSER(twiddle_rsc_0_8_ARUSER),
      .twiddle_rsc_0_8_ARREGION(twiddle_rsc_0_8_ARREGION),
      .twiddle_rsc_0_8_ARQOS(twiddle_rsc_0_8_ARQOS),
      .twiddle_rsc_0_8_ARPROT(twiddle_rsc_0_8_ARPROT),
      .twiddle_rsc_0_8_ARCACHE(twiddle_rsc_0_8_ARCACHE),
      .twiddle_rsc_0_8_ARLOCK(twiddle_rsc_0_8_ARLOCK),
      .twiddle_rsc_0_8_ARBURST(twiddle_rsc_0_8_ARBURST),
      .twiddle_rsc_0_8_ARSIZE(twiddle_rsc_0_8_ARSIZE),
      .twiddle_rsc_0_8_ARLEN(twiddle_rsc_0_8_ARLEN),
      .twiddle_rsc_0_8_ARADDR(twiddle_rsc_0_8_ARADDR),
      .twiddle_rsc_0_8_ARID(twiddle_rsc_0_8_ARID),
      .twiddle_rsc_0_8_BREADY(twiddle_rsc_0_8_BREADY),
      .twiddle_rsc_0_8_BVALID(twiddle_rsc_0_8_BVALID),
      .twiddle_rsc_0_8_BUSER(twiddle_rsc_0_8_BUSER),
      .twiddle_rsc_0_8_BRESP(twiddle_rsc_0_8_BRESP),
      .twiddle_rsc_0_8_BID(twiddle_rsc_0_8_BID),
      .twiddle_rsc_0_8_WREADY(twiddle_rsc_0_8_WREADY),
      .twiddle_rsc_0_8_WVALID(twiddle_rsc_0_8_WVALID),
      .twiddle_rsc_0_8_WUSER(twiddle_rsc_0_8_WUSER),
      .twiddle_rsc_0_8_WLAST(twiddle_rsc_0_8_WLAST),
      .twiddle_rsc_0_8_WSTRB(twiddle_rsc_0_8_WSTRB),
      .twiddle_rsc_0_8_WDATA(twiddle_rsc_0_8_WDATA),
      .twiddle_rsc_0_8_AWREADY(twiddle_rsc_0_8_AWREADY),
      .twiddle_rsc_0_8_AWVALID(twiddle_rsc_0_8_AWVALID),
      .twiddle_rsc_0_8_AWUSER(twiddle_rsc_0_8_AWUSER),
      .twiddle_rsc_0_8_AWREGION(twiddle_rsc_0_8_AWREGION),
      .twiddle_rsc_0_8_AWQOS(twiddle_rsc_0_8_AWQOS),
      .twiddle_rsc_0_8_AWPROT(twiddle_rsc_0_8_AWPROT),
      .twiddle_rsc_0_8_AWCACHE(twiddle_rsc_0_8_AWCACHE),
      .twiddle_rsc_0_8_AWLOCK(twiddle_rsc_0_8_AWLOCK),
      .twiddle_rsc_0_8_AWBURST(twiddle_rsc_0_8_AWBURST),
      .twiddle_rsc_0_8_AWSIZE(twiddle_rsc_0_8_AWSIZE),
      .twiddle_rsc_0_8_AWLEN(twiddle_rsc_0_8_AWLEN),
      .twiddle_rsc_0_8_AWADDR(twiddle_rsc_0_8_AWADDR),
      .twiddle_rsc_0_8_AWID(twiddle_rsc_0_8_AWID),
      .twiddle_rsc_triosy_0_8_lz(twiddle_rsc_triosy_0_8_lz),
      .twiddle_rsc_0_9_s_tdone(twiddle_rsc_0_9_s_tdone),
      .twiddle_rsc_0_9_tr_write_done(twiddle_rsc_0_9_tr_write_done),
      .twiddle_rsc_0_9_RREADY(twiddle_rsc_0_9_RREADY),
      .twiddle_rsc_0_9_RVALID(twiddle_rsc_0_9_RVALID),
      .twiddle_rsc_0_9_RUSER(twiddle_rsc_0_9_RUSER),
      .twiddle_rsc_0_9_RLAST(twiddle_rsc_0_9_RLAST),
      .twiddle_rsc_0_9_RRESP(twiddle_rsc_0_9_RRESP),
      .twiddle_rsc_0_9_RDATA(twiddle_rsc_0_9_RDATA),
      .twiddle_rsc_0_9_RID(twiddle_rsc_0_9_RID),
      .twiddle_rsc_0_9_ARREADY(twiddle_rsc_0_9_ARREADY),
      .twiddle_rsc_0_9_ARVALID(twiddle_rsc_0_9_ARVALID),
      .twiddle_rsc_0_9_ARUSER(twiddle_rsc_0_9_ARUSER),
      .twiddle_rsc_0_9_ARREGION(twiddle_rsc_0_9_ARREGION),
      .twiddle_rsc_0_9_ARQOS(twiddle_rsc_0_9_ARQOS),
      .twiddle_rsc_0_9_ARPROT(twiddle_rsc_0_9_ARPROT),
      .twiddle_rsc_0_9_ARCACHE(twiddle_rsc_0_9_ARCACHE),
      .twiddle_rsc_0_9_ARLOCK(twiddle_rsc_0_9_ARLOCK),
      .twiddle_rsc_0_9_ARBURST(twiddle_rsc_0_9_ARBURST),
      .twiddle_rsc_0_9_ARSIZE(twiddle_rsc_0_9_ARSIZE),
      .twiddle_rsc_0_9_ARLEN(twiddle_rsc_0_9_ARLEN),
      .twiddle_rsc_0_9_ARADDR(twiddle_rsc_0_9_ARADDR),
      .twiddle_rsc_0_9_ARID(twiddle_rsc_0_9_ARID),
      .twiddle_rsc_0_9_BREADY(twiddle_rsc_0_9_BREADY),
      .twiddle_rsc_0_9_BVALID(twiddle_rsc_0_9_BVALID),
      .twiddle_rsc_0_9_BUSER(twiddle_rsc_0_9_BUSER),
      .twiddle_rsc_0_9_BRESP(twiddle_rsc_0_9_BRESP),
      .twiddle_rsc_0_9_BID(twiddle_rsc_0_9_BID),
      .twiddle_rsc_0_9_WREADY(twiddle_rsc_0_9_WREADY),
      .twiddle_rsc_0_9_WVALID(twiddle_rsc_0_9_WVALID),
      .twiddle_rsc_0_9_WUSER(twiddle_rsc_0_9_WUSER),
      .twiddle_rsc_0_9_WLAST(twiddle_rsc_0_9_WLAST),
      .twiddle_rsc_0_9_WSTRB(twiddle_rsc_0_9_WSTRB),
      .twiddle_rsc_0_9_WDATA(twiddle_rsc_0_9_WDATA),
      .twiddle_rsc_0_9_AWREADY(twiddle_rsc_0_9_AWREADY),
      .twiddle_rsc_0_9_AWVALID(twiddle_rsc_0_9_AWVALID),
      .twiddle_rsc_0_9_AWUSER(twiddle_rsc_0_9_AWUSER),
      .twiddle_rsc_0_9_AWREGION(twiddle_rsc_0_9_AWREGION),
      .twiddle_rsc_0_9_AWQOS(twiddle_rsc_0_9_AWQOS),
      .twiddle_rsc_0_9_AWPROT(twiddle_rsc_0_9_AWPROT),
      .twiddle_rsc_0_9_AWCACHE(twiddle_rsc_0_9_AWCACHE),
      .twiddle_rsc_0_9_AWLOCK(twiddle_rsc_0_9_AWLOCK),
      .twiddle_rsc_0_9_AWBURST(twiddle_rsc_0_9_AWBURST),
      .twiddle_rsc_0_9_AWSIZE(twiddle_rsc_0_9_AWSIZE),
      .twiddle_rsc_0_9_AWLEN(twiddle_rsc_0_9_AWLEN),
      .twiddle_rsc_0_9_AWADDR(twiddle_rsc_0_9_AWADDR),
      .twiddle_rsc_0_9_AWID(twiddle_rsc_0_9_AWID),
      .twiddle_rsc_triosy_0_9_lz(twiddle_rsc_triosy_0_9_lz),
      .twiddle_rsc_0_10_s_tdone(twiddle_rsc_0_10_s_tdone),
      .twiddle_rsc_0_10_tr_write_done(twiddle_rsc_0_10_tr_write_done),
      .twiddle_rsc_0_10_RREADY(twiddle_rsc_0_10_RREADY),
      .twiddle_rsc_0_10_RVALID(twiddle_rsc_0_10_RVALID),
      .twiddle_rsc_0_10_RUSER(twiddle_rsc_0_10_RUSER),
      .twiddle_rsc_0_10_RLAST(twiddle_rsc_0_10_RLAST),
      .twiddle_rsc_0_10_RRESP(twiddle_rsc_0_10_RRESP),
      .twiddle_rsc_0_10_RDATA(twiddle_rsc_0_10_RDATA),
      .twiddle_rsc_0_10_RID(twiddle_rsc_0_10_RID),
      .twiddle_rsc_0_10_ARREADY(twiddle_rsc_0_10_ARREADY),
      .twiddle_rsc_0_10_ARVALID(twiddle_rsc_0_10_ARVALID),
      .twiddle_rsc_0_10_ARUSER(twiddle_rsc_0_10_ARUSER),
      .twiddle_rsc_0_10_ARREGION(twiddle_rsc_0_10_ARREGION),
      .twiddle_rsc_0_10_ARQOS(twiddle_rsc_0_10_ARQOS),
      .twiddle_rsc_0_10_ARPROT(twiddle_rsc_0_10_ARPROT),
      .twiddle_rsc_0_10_ARCACHE(twiddle_rsc_0_10_ARCACHE),
      .twiddle_rsc_0_10_ARLOCK(twiddle_rsc_0_10_ARLOCK),
      .twiddle_rsc_0_10_ARBURST(twiddle_rsc_0_10_ARBURST),
      .twiddle_rsc_0_10_ARSIZE(twiddle_rsc_0_10_ARSIZE),
      .twiddle_rsc_0_10_ARLEN(twiddle_rsc_0_10_ARLEN),
      .twiddle_rsc_0_10_ARADDR(twiddle_rsc_0_10_ARADDR),
      .twiddle_rsc_0_10_ARID(twiddle_rsc_0_10_ARID),
      .twiddle_rsc_0_10_BREADY(twiddle_rsc_0_10_BREADY),
      .twiddle_rsc_0_10_BVALID(twiddle_rsc_0_10_BVALID),
      .twiddle_rsc_0_10_BUSER(twiddle_rsc_0_10_BUSER),
      .twiddle_rsc_0_10_BRESP(twiddle_rsc_0_10_BRESP),
      .twiddle_rsc_0_10_BID(twiddle_rsc_0_10_BID),
      .twiddle_rsc_0_10_WREADY(twiddle_rsc_0_10_WREADY),
      .twiddle_rsc_0_10_WVALID(twiddle_rsc_0_10_WVALID),
      .twiddle_rsc_0_10_WUSER(twiddle_rsc_0_10_WUSER),
      .twiddle_rsc_0_10_WLAST(twiddle_rsc_0_10_WLAST),
      .twiddle_rsc_0_10_WSTRB(twiddle_rsc_0_10_WSTRB),
      .twiddle_rsc_0_10_WDATA(twiddle_rsc_0_10_WDATA),
      .twiddle_rsc_0_10_AWREADY(twiddle_rsc_0_10_AWREADY),
      .twiddle_rsc_0_10_AWVALID(twiddle_rsc_0_10_AWVALID),
      .twiddle_rsc_0_10_AWUSER(twiddle_rsc_0_10_AWUSER),
      .twiddle_rsc_0_10_AWREGION(twiddle_rsc_0_10_AWREGION),
      .twiddle_rsc_0_10_AWQOS(twiddle_rsc_0_10_AWQOS),
      .twiddle_rsc_0_10_AWPROT(twiddle_rsc_0_10_AWPROT),
      .twiddle_rsc_0_10_AWCACHE(twiddle_rsc_0_10_AWCACHE),
      .twiddle_rsc_0_10_AWLOCK(twiddle_rsc_0_10_AWLOCK),
      .twiddle_rsc_0_10_AWBURST(twiddle_rsc_0_10_AWBURST),
      .twiddle_rsc_0_10_AWSIZE(twiddle_rsc_0_10_AWSIZE),
      .twiddle_rsc_0_10_AWLEN(twiddle_rsc_0_10_AWLEN),
      .twiddle_rsc_0_10_AWADDR(twiddle_rsc_0_10_AWADDR),
      .twiddle_rsc_0_10_AWID(twiddle_rsc_0_10_AWID),
      .twiddle_rsc_triosy_0_10_lz(twiddle_rsc_triosy_0_10_lz),
      .twiddle_rsc_0_11_s_tdone(twiddle_rsc_0_11_s_tdone),
      .twiddle_rsc_0_11_tr_write_done(twiddle_rsc_0_11_tr_write_done),
      .twiddle_rsc_0_11_RREADY(twiddle_rsc_0_11_RREADY),
      .twiddle_rsc_0_11_RVALID(twiddle_rsc_0_11_RVALID),
      .twiddle_rsc_0_11_RUSER(twiddle_rsc_0_11_RUSER),
      .twiddle_rsc_0_11_RLAST(twiddle_rsc_0_11_RLAST),
      .twiddle_rsc_0_11_RRESP(twiddle_rsc_0_11_RRESP),
      .twiddle_rsc_0_11_RDATA(twiddle_rsc_0_11_RDATA),
      .twiddle_rsc_0_11_RID(twiddle_rsc_0_11_RID),
      .twiddle_rsc_0_11_ARREADY(twiddle_rsc_0_11_ARREADY),
      .twiddle_rsc_0_11_ARVALID(twiddle_rsc_0_11_ARVALID),
      .twiddle_rsc_0_11_ARUSER(twiddle_rsc_0_11_ARUSER),
      .twiddle_rsc_0_11_ARREGION(twiddle_rsc_0_11_ARREGION),
      .twiddle_rsc_0_11_ARQOS(twiddle_rsc_0_11_ARQOS),
      .twiddle_rsc_0_11_ARPROT(twiddle_rsc_0_11_ARPROT),
      .twiddle_rsc_0_11_ARCACHE(twiddle_rsc_0_11_ARCACHE),
      .twiddle_rsc_0_11_ARLOCK(twiddle_rsc_0_11_ARLOCK),
      .twiddle_rsc_0_11_ARBURST(twiddle_rsc_0_11_ARBURST),
      .twiddle_rsc_0_11_ARSIZE(twiddle_rsc_0_11_ARSIZE),
      .twiddle_rsc_0_11_ARLEN(twiddle_rsc_0_11_ARLEN),
      .twiddle_rsc_0_11_ARADDR(twiddle_rsc_0_11_ARADDR),
      .twiddle_rsc_0_11_ARID(twiddle_rsc_0_11_ARID),
      .twiddle_rsc_0_11_BREADY(twiddle_rsc_0_11_BREADY),
      .twiddle_rsc_0_11_BVALID(twiddle_rsc_0_11_BVALID),
      .twiddle_rsc_0_11_BUSER(twiddle_rsc_0_11_BUSER),
      .twiddle_rsc_0_11_BRESP(twiddle_rsc_0_11_BRESP),
      .twiddle_rsc_0_11_BID(twiddle_rsc_0_11_BID),
      .twiddle_rsc_0_11_WREADY(twiddle_rsc_0_11_WREADY),
      .twiddle_rsc_0_11_WVALID(twiddle_rsc_0_11_WVALID),
      .twiddle_rsc_0_11_WUSER(twiddle_rsc_0_11_WUSER),
      .twiddle_rsc_0_11_WLAST(twiddle_rsc_0_11_WLAST),
      .twiddle_rsc_0_11_WSTRB(twiddle_rsc_0_11_WSTRB),
      .twiddle_rsc_0_11_WDATA(twiddle_rsc_0_11_WDATA),
      .twiddle_rsc_0_11_AWREADY(twiddle_rsc_0_11_AWREADY),
      .twiddle_rsc_0_11_AWVALID(twiddle_rsc_0_11_AWVALID),
      .twiddle_rsc_0_11_AWUSER(twiddle_rsc_0_11_AWUSER),
      .twiddle_rsc_0_11_AWREGION(twiddle_rsc_0_11_AWREGION),
      .twiddle_rsc_0_11_AWQOS(twiddle_rsc_0_11_AWQOS),
      .twiddle_rsc_0_11_AWPROT(twiddle_rsc_0_11_AWPROT),
      .twiddle_rsc_0_11_AWCACHE(twiddle_rsc_0_11_AWCACHE),
      .twiddle_rsc_0_11_AWLOCK(twiddle_rsc_0_11_AWLOCK),
      .twiddle_rsc_0_11_AWBURST(twiddle_rsc_0_11_AWBURST),
      .twiddle_rsc_0_11_AWSIZE(twiddle_rsc_0_11_AWSIZE),
      .twiddle_rsc_0_11_AWLEN(twiddle_rsc_0_11_AWLEN),
      .twiddle_rsc_0_11_AWADDR(twiddle_rsc_0_11_AWADDR),
      .twiddle_rsc_0_11_AWID(twiddle_rsc_0_11_AWID),
      .twiddle_rsc_triosy_0_11_lz(twiddle_rsc_triosy_0_11_lz),
      .twiddle_rsc_0_12_s_tdone(twiddle_rsc_0_12_s_tdone),
      .twiddle_rsc_0_12_tr_write_done(twiddle_rsc_0_12_tr_write_done),
      .twiddle_rsc_0_12_RREADY(twiddle_rsc_0_12_RREADY),
      .twiddle_rsc_0_12_RVALID(twiddle_rsc_0_12_RVALID),
      .twiddle_rsc_0_12_RUSER(twiddle_rsc_0_12_RUSER),
      .twiddle_rsc_0_12_RLAST(twiddle_rsc_0_12_RLAST),
      .twiddle_rsc_0_12_RRESP(twiddle_rsc_0_12_RRESP),
      .twiddle_rsc_0_12_RDATA(twiddle_rsc_0_12_RDATA),
      .twiddle_rsc_0_12_RID(twiddle_rsc_0_12_RID),
      .twiddle_rsc_0_12_ARREADY(twiddle_rsc_0_12_ARREADY),
      .twiddle_rsc_0_12_ARVALID(twiddle_rsc_0_12_ARVALID),
      .twiddle_rsc_0_12_ARUSER(twiddle_rsc_0_12_ARUSER),
      .twiddle_rsc_0_12_ARREGION(twiddle_rsc_0_12_ARREGION),
      .twiddle_rsc_0_12_ARQOS(twiddle_rsc_0_12_ARQOS),
      .twiddle_rsc_0_12_ARPROT(twiddle_rsc_0_12_ARPROT),
      .twiddle_rsc_0_12_ARCACHE(twiddle_rsc_0_12_ARCACHE),
      .twiddle_rsc_0_12_ARLOCK(twiddle_rsc_0_12_ARLOCK),
      .twiddle_rsc_0_12_ARBURST(twiddle_rsc_0_12_ARBURST),
      .twiddle_rsc_0_12_ARSIZE(twiddle_rsc_0_12_ARSIZE),
      .twiddle_rsc_0_12_ARLEN(twiddle_rsc_0_12_ARLEN),
      .twiddle_rsc_0_12_ARADDR(twiddle_rsc_0_12_ARADDR),
      .twiddle_rsc_0_12_ARID(twiddle_rsc_0_12_ARID),
      .twiddle_rsc_0_12_BREADY(twiddle_rsc_0_12_BREADY),
      .twiddle_rsc_0_12_BVALID(twiddle_rsc_0_12_BVALID),
      .twiddle_rsc_0_12_BUSER(twiddle_rsc_0_12_BUSER),
      .twiddle_rsc_0_12_BRESP(twiddle_rsc_0_12_BRESP),
      .twiddle_rsc_0_12_BID(twiddle_rsc_0_12_BID),
      .twiddle_rsc_0_12_WREADY(twiddle_rsc_0_12_WREADY),
      .twiddle_rsc_0_12_WVALID(twiddle_rsc_0_12_WVALID),
      .twiddle_rsc_0_12_WUSER(twiddle_rsc_0_12_WUSER),
      .twiddle_rsc_0_12_WLAST(twiddle_rsc_0_12_WLAST),
      .twiddle_rsc_0_12_WSTRB(twiddle_rsc_0_12_WSTRB),
      .twiddle_rsc_0_12_WDATA(twiddle_rsc_0_12_WDATA),
      .twiddle_rsc_0_12_AWREADY(twiddle_rsc_0_12_AWREADY),
      .twiddle_rsc_0_12_AWVALID(twiddle_rsc_0_12_AWVALID),
      .twiddle_rsc_0_12_AWUSER(twiddle_rsc_0_12_AWUSER),
      .twiddle_rsc_0_12_AWREGION(twiddle_rsc_0_12_AWREGION),
      .twiddle_rsc_0_12_AWQOS(twiddle_rsc_0_12_AWQOS),
      .twiddle_rsc_0_12_AWPROT(twiddle_rsc_0_12_AWPROT),
      .twiddle_rsc_0_12_AWCACHE(twiddle_rsc_0_12_AWCACHE),
      .twiddle_rsc_0_12_AWLOCK(twiddle_rsc_0_12_AWLOCK),
      .twiddle_rsc_0_12_AWBURST(twiddle_rsc_0_12_AWBURST),
      .twiddle_rsc_0_12_AWSIZE(twiddle_rsc_0_12_AWSIZE),
      .twiddle_rsc_0_12_AWLEN(twiddle_rsc_0_12_AWLEN),
      .twiddle_rsc_0_12_AWADDR(twiddle_rsc_0_12_AWADDR),
      .twiddle_rsc_0_12_AWID(twiddle_rsc_0_12_AWID),
      .twiddle_rsc_triosy_0_12_lz(twiddle_rsc_triosy_0_12_lz),
      .twiddle_rsc_0_13_s_tdone(twiddle_rsc_0_13_s_tdone),
      .twiddle_rsc_0_13_tr_write_done(twiddle_rsc_0_13_tr_write_done),
      .twiddle_rsc_0_13_RREADY(twiddle_rsc_0_13_RREADY),
      .twiddle_rsc_0_13_RVALID(twiddle_rsc_0_13_RVALID),
      .twiddle_rsc_0_13_RUSER(twiddle_rsc_0_13_RUSER),
      .twiddle_rsc_0_13_RLAST(twiddle_rsc_0_13_RLAST),
      .twiddle_rsc_0_13_RRESP(twiddle_rsc_0_13_RRESP),
      .twiddle_rsc_0_13_RDATA(twiddle_rsc_0_13_RDATA),
      .twiddle_rsc_0_13_RID(twiddle_rsc_0_13_RID),
      .twiddle_rsc_0_13_ARREADY(twiddle_rsc_0_13_ARREADY),
      .twiddle_rsc_0_13_ARVALID(twiddle_rsc_0_13_ARVALID),
      .twiddle_rsc_0_13_ARUSER(twiddle_rsc_0_13_ARUSER),
      .twiddle_rsc_0_13_ARREGION(twiddle_rsc_0_13_ARREGION),
      .twiddle_rsc_0_13_ARQOS(twiddle_rsc_0_13_ARQOS),
      .twiddle_rsc_0_13_ARPROT(twiddle_rsc_0_13_ARPROT),
      .twiddle_rsc_0_13_ARCACHE(twiddle_rsc_0_13_ARCACHE),
      .twiddle_rsc_0_13_ARLOCK(twiddle_rsc_0_13_ARLOCK),
      .twiddle_rsc_0_13_ARBURST(twiddle_rsc_0_13_ARBURST),
      .twiddle_rsc_0_13_ARSIZE(twiddle_rsc_0_13_ARSIZE),
      .twiddle_rsc_0_13_ARLEN(twiddle_rsc_0_13_ARLEN),
      .twiddle_rsc_0_13_ARADDR(twiddle_rsc_0_13_ARADDR),
      .twiddle_rsc_0_13_ARID(twiddle_rsc_0_13_ARID),
      .twiddle_rsc_0_13_BREADY(twiddle_rsc_0_13_BREADY),
      .twiddle_rsc_0_13_BVALID(twiddle_rsc_0_13_BVALID),
      .twiddle_rsc_0_13_BUSER(twiddle_rsc_0_13_BUSER),
      .twiddle_rsc_0_13_BRESP(twiddle_rsc_0_13_BRESP),
      .twiddle_rsc_0_13_BID(twiddle_rsc_0_13_BID),
      .twiddle_rsc_0_13_WREADY(twiddle_rsc_0_13_WREADY),
      .twiddle_rsc_0_13_WVALID(twiddle_rsc_0_13_WVALID),
      .twiddle_rsc_0_13_WUSER(twiddle_rsc_0_13_WUSER),
      .twiddle_rsc_0_13_WLAST(twiddle_rsc_0_13_WLAST),
      .twiddle_rsc_0_13_WSTRB(twiddle_rsc_0_13_WSTRB),
      .twiddle_rsc_0_13_WDATA(twiddle_rsc_0_13_WDATA),
      .twiddle_rsc_0_13_AWREADY(twiddle_rsc_0_13_AWREADY),
      .twiddle_rsc_0_13_AWVALID(twiddle_rsc_0_13_AWVALID),
      .twiddle_rsc_0_13_AWUSER(twiddle_rsc_0_13_AWUSER),
      .twiddle_rsc_0_13_AWREGION(twiddle_rsc_0_13_AWREGION),
      .twiddle_rsc_0_13_AWQOS(twiddle_rsc_0_13_AWQOS),
      .twiddle_rsc_0_13_AWPROT(twiddle_rsc_0_13_AWPROT),
      .twiddle_rsc_0_13_AWCACHE(twiddle_rsc_0_13_AWCACHE),
      .twiddle_rsc_0_13_AWLOCK(twiddle_rsc_0_13_AWLOCK),
      .twiddle_rsc_0_13_AWBURST(twiddle_rsc_0_13_AWBURST),
      .twiddle_rsc_0_13_AWSIZE(twiddle_rsc_0_13_AWSIZE),
      .twiddle_rsc_0_13_AWLEN(twiddle_rsc_0_13_AWLEN),
      .twiddle_rsc_0_13_AWADDR(twiddle_rsc_0_13_AWADDR),
      .twiddle_rsc_0_13_AWID(twiddle_rsc_0_13_AWID),
      .twiddle_rsc_triosy_0_13_lz(twiddle_rsc_triosy_0_13_lz),
      .twiddle_rsc_0_14_s_tdone(twiddle_rsc_0_14_s_tdone),
      .twiddle_rsc_0_14_tr_write_done(twiddle_rsc_0_14_tr_write_done),
      .twiddle_rsc_0_14_RREADY(twiddle_rsc_0_14_RREADY),
      .twiddle_rsc_0_14_RVALID(twiddle_rsc_0_14_RVALID),
      .twiddle_rsc_0_14_RUSER(twiddle_rsc_0_14_RUSER),
      .twiddle_rsc_0_14_RLAST(twiddle_rsc_0_14_RLAST),
      .twiddle_rsc_0_14_RRESP(twiddle_rsc_0_14_RRESP),
      .twiddle_rsc_0_14_RDATA(twiddle_rsc_0_14_RDATA),
      .twiddle_rsc_0_14_RID(twiddle_rsc_0_14_RID),
      .twiddle_rsc_0_14_ARREADY(twiddle_rsc_0_14_ARREADY),
      .twiddle_rsc_0_14_ARVALID(twiddle_rsc_0_14_ARVALID),
      .twiddle_rsc_0_14_ARUSER(twiddle_rsc_0_14_ARUSER),
      .twiddle_rsc_0_14_ARREGION(twiddle_rsc_0_14_ARREGION),
      .twiddle_rsc_0_14_ARQOS(twiddle_rsc_0_14_ARQOS),
      .twiddle_rsc_0_14_ARPROT(twiddle_rsc_0_14_ARPROT),
      .twiddle_rsc_0_14_ARCACHE(twiddle_rsc_0_14_ARCACHE),
      .twiddle_rsc_0_14_ARLOCK(twiddle_rsc_0_14_ARLOCK),
      .twiddle_rsc_0_14_ARBURST(twiddle_rsc_0_14_ARBURST),
      .twiddle_rsc_0_14_ARSIZE(twiddle_rsc_0_14_ARSIZE),
      .twiddle_rsc_0_14_ARLEN(twiddle_rsc_0_14_ARLEN),
      .twiddle_rsc_0_14_ARADDR(twiddle_rsc_0_14_ARADDR),
      .twiddle_rsc_0_14_ARID(twiddle_rsc_0_14_ARID),
      .twiddle_rsc_0_14_BREADY(twiddle_rsc_0_14_BREADY),
      .twiddle_rsc_0_14_BVALID(twiddle_rsc_0_14_BVALID),
      .twiddle_rsc_0_14_BUSER(twiddle_rsc_0_14_BUSER),
      .twiddle_rsc_0_14_BRESP(twiddle_rsc_0_14_BRESP),
      .twiddle_rsc_0_14_BID(twiddle_rsc_0_14_BID),
      .twiddle_rsc_0_14_WREADY(twiddle_rsc_0_14_WREADY),
      .twiddle_rsc_0_14_WVALID(twiddle_rsc_0_14_WVALID),
      .twiddle_rsc_0_14_WUSER(twiddle_rsc_0_14_WUSER),
      .twiddle_rsc_0_14_WLAST(twiddle_rsc_0_14_WLAST),
      .twiddle_rsc_0_14_WSTRB(twiddle_rsc_0_14_WSTRB),
      .twiddle_rsc_0_14_WDATA(twiddle_rsc_0_14_WDATA),
      .twiddle_rsc_0_14_AWREADY(twiddle_rsc_0_14_AWREADY),
      .twiddle_rsc_0_14_AWVALID(twiddle_rsc_0_14_AWVALID),
      .twiddle_rsc_0_14_AWUSER(twiddle_rsc_0_14_AWUSER),
      .twiddle_rsc_0_14_AWREGION(twiddle_rsc_0_14_AWREGION),
      .twiddle_rsc_0_14_AWQOS(twiddle_rsc_0_14_AWQOS),
      .twiddle_rsc_0_14_AWPROT(twiddle_rsc_0_14_AWPROT),
      .twiddle_rsc_0_14_AWCACHE(twiddle_rsc_0_14_AWCACHE),
      .twiddle_rsc_0_14_AWLOCK(twiddle_rsc_0_14_AWLOCK),
      .twiddle_rsc_0_14_AWBURST(twiddle_rsc_0_14_AWBURST),
      .twiddle_rsc_0_14_AWSIZE(twiddle_rsc_0_14_AWSIZE),
      .twiddle_rsc_0_14_AWLEN(twiddle_rsc_0_14_AWLEN),
      .twiddle_rsc_0_14_AWADDR(twiddle_rsc_0_14_AWADDR),
      .twiddle_rsc_0_14_AWID(twiddle_rsc_0_14_AWID),
      .twiddle_rsc_triosy_0_14_lz(twiddle_rsc_triosy_0_14_lz),
      .twiddle_rsc_0_15_s_tdone(twiddle_rsc_0_15_s_tdone),
      .twiddle_rsc_0_15_tr_write_done(twiddle_rsc_0_15_tr_write_done),
      .twiddle_rsc_0_15_RREADY(twiddle_rsc_0_15_RREADY),
      .twiddle_rsc_0_15_RVALID(twiddle_rsc_0_15_RVALID),
      .twiddle_rsc_0_15_RUSER(twiddle_rsc_0_15_RUSER),
      .twiddle_rsc_0_15_RLAST(twiddle_rsc_0_15_RLAST),
      .twiddle_rsc_0_15_RRESP(twiddle_rsc_0_15_RRESP),
      .twiddle_rsc_0_15_RDATA(twiddle_rsc_0_15_RDATA),
      .twiddle_rsc_0_15_RID(twiddle_rsc_0_15_RID),
      .twiddle_rsc_0_15_ARREADY(twiddle_rsc_0_15_ARREADY),
      .twiddle_rsc_0_15_ARVALID(twiddle_rsc_0_15_ARVALID),
      .twiddle_rsc_0_15_ARUSER(twiddle_rsc_0_15_ARUSER),
      .twiddle_rsc_0_15_ARREGION(twiddle_rsc_0_15_ARREGION),
      .twiddle_rsc_0_15_ARQOS(twiddle_rsc_0_15_ARQOS),
      .twiddle_rsc_0_15_ARPROT(twiddle_rsc_0_15_ARPROT),
      .twiddle_rsc_0_15_ARCACHE(twiddle_rsc_0_15_ARCACHE),
      .twiddle_rsc_0_15_ARLOCK(twiddle_rsc_0_15_ARLOCK),
      .twiddle_rsc_0_15_ARBURST(twiddle_rsc_0_15_ARBURST),
      .twiddle_rsc_0_15_ARSIZE(twiddle_rsc_0_15_ARSIZE),
      .twiddle_rsc_0_15_ARLEN(twiddle_rsc_0_15_ARLEN),
      .twiddle_rsc_0_15_ARADDR(twiddle_rsc_0_15_ARADDR),
      .twiddle_rsc_0_15_ARID(twiddle_rsc_0_15_ARID),
      .twiddle_rsc_0_15_BREADY(twiddle_rsc_0_15_BREADY),
      .twiddle_rsc_0_15_BVALID(twiddle_rsc_0_15_BVALID),
      .twiddle_rsc_0_15_BUSER(twiddle_rsc_0_15_BUSER),
      .twiddle_rsc_0_15_BRESP(twiddle_rsc_0_15_BRESP),
      .twiddle_rsc_0_15_BID(twiddle_rsc_0_15_BID),
      .twiddle_rsc_0_15_WREADY(twiddle_rsc_0_15_WREADY),
      .twiddle_rsc_0_15_WVALID(twiddle_rsc_0_15_WVALID),
      .twiddle_rsc_0_15_WUSER(twiddle_rsc_0_15_WUSER),
      .twiddle_rsc_0_15_WLAST(twiddle_rsc_0_15_WLAST),
      .twiddle_rsc_0_15_WSTRB(twiddle_rsc_0_15_WSTRB),
      .twiddle_rsc_0_15_WDATA(twiddle_rsc_0_15_WDATA),
      .twiddle_rsc_0_15_AWREADY(twiddle_rsc_0_15_AWREADY),
      .twiddle_rsc_0_15_AWVALID(twiddle_rsc_0_15_AWVALID),
      .twiddle_rsc_0_15_AWUSER(twiddle_rsc_0_15_AWUSER),
      .twiddle_rsc_0_15_AWREGION(twiddle_rsc_0_15_AWREGION),
      .twiddle_rsc_0_15_AWQOS(twiddle_rsc_0_15_AWQOS),
      .twiddle_rsc_0_15_AWPROT(twiddle_rsc_0_15_AWPROT),
      .twiddle_rsc_0_15_AWCACHE(twiddle_rsc_0_15_AWCACHE),
      .twiddle_rsc_0_15_AWLOCK(twiddle_rsc_0_15_AWLOCK),
      .twiddle_rsc_0_15_AWBURST(twiddle_rsc_0_15_AWBURST),
      .twiddle_rsc_0_15_AWSIZE(twiddle_rsc_0_15_AWSIZE),
      .twiddle_rsc_0_15_AWLEN(twiddle_rsc_0_15_AWLEN),
      .twiddle_rsc_0_15_AWADDR(twiddle_rsc_0_15_AWADDR),
      .twiddle_rsc_0_15_AWID(twiddle_rsc_0_15_AWID),
      .twiddle_rsc_triosy_0_15_lz(twiddle_rsc_triosy_0_15_lz),
      .twiddle_h_rsc_0_0_s_tdone(twiddle_h_rsc_0_0_s_tdone),
      .twiddle_h_rsc_0_0_tr_write_done(twiddle_h_rsc_0_0_tr_write_done),
      .twiddle_h_rsc_0_0_RREADY(twiddle_h_rsc_0_0_RREADY),
      .twiddle_h_rsc_0_0_RVALID(twiddle_h_rsc_0_0_RVALID),
      .twiddle_h_rsc_0_0_RUSER(twiddle_h_rsc_0_0_RUSER),
      .twiddle_h_rsc_0_0_RLAST(twiddle_h_rsc_0_0_RLAST),
      .twiddle_h_rsc_0_0_RRESP(twiddle_h_rsc_0_0_RRESP),
      .twiddle_h_rsc_0_0_RDATA(twiddle_h_rsc_0_0_RDATA),
      .twiddle_h_rsc_0_0_RID(twiddle_h_rsc_0_0_RID),
      .twiddle_h_rsc_0_0_ARREADY(twiddle_h_rsc_0_0_ARREADY),
      .twiddle_h_rsc_0_0_ARVALID(twiddle_h_rsc_0_0_ARVALID),
      .twiddle_h_rsc_0_0_ARUSER(twiddle_h_rsc_0_0_ARUSER),
      .twiddle_h_rsc_0_0_ARREGION(twiddle_h_rsc_0_0_ARREGION),
      .twiddle_h_rsc_0_0_ARQOS(twiddle_h_rsc_0_0_ARQOS),
      .twiddle_h_rsc_0_0_ARPROT(twiddle_h_rsc_0_0_ARPROT),
      .twiddle_h_rsc_0_0_ARCACHE(twiddle_h_rsc_0_0_ARCACHE),
      .twiddle_h_rsc_0_0_ARLOCK(twiddle_h_rsc_0_0_ARLOCK),
      .twiddle_h_rsc_0_0_ARBURST(twiddle_h_rsc_0_0_ARBURST),
      .twiddle_h_rsc_0_0_ARSIZE(twiddle_h_rsc_0_0_ARSIZE),
      .twiddle_h_rsc_0_0_ARLEN(twiddle_h_rsc_0_0_ARLEN),
      .twiddle_h_rsc_0_0_ARADDR(twiddle_h_rsc_0_0_ARADDR),
      .twiddle_h_rsc_0_0_ARID(twiddle_h_rsc_0_0_ARID),
      .twiddle_h_rsc_0_0_BREADY(twiddle_h_rsc_0_0_BREADY),
      .twiddle_h_rsc_0_0_BVALID(twiddle_h_rsc_0_0_BVALID),
      .twiddle_h_rsc_0_0_BUSER(twiddle_h_rsc_0_0_BUSER),
      .twiddle_h_rsc_0_0_BRESP(twiddle_h_rsc_0_0_BRESP),
      .twiddle_h_rsc_0_0_BID(twiddle_h_rsc_0_0_BID),
      .twiddle_h_rsc_0_0_WREADY(twiddle_h_rsc_0_0_WREADY),
      .twiddle_h_rsc_0_0_WVALID(twiddle_h_rsc_0_0_WVALID),
      .twiddle_h_rsc_0_0_WUSER(twiddle_h_rsc_0_0_WUSER),
      .twiddle_h_rsc_0_0_WLAST(twiddle_h_rsc_0_0_WLAST),
      .twiddle_h_rsc_0_0_WSTRB(twiddle_h_rsc_0_0_WSTRB),
      .twiddle_h_rsc_0_0_WDATA(twiddle_h_rsc_0_0_WDATA),
      .twiddle_h_rsc_0_0_AWREADY(twiddle_h_rsc_0_0_AWREADY),
      .twiddle_h_rsc_0_0_AWVALID(twiddle_h_rsc_0_0_AWVALID),
      .twiddle_h_rsc_0_0_AWUSER(twiddle_h_rsc_0_0_AWUSER),
      .twiddle_h_rsc_0_0_AWREGION(twiddle_h_rsc_0_0_AWREGION),
      .twiddle_h_rsc_0_0_AWQOS(twiddle_h_rsc_0_0_AWQOS),
      .twiddle_h_rsc_0_0_AWPROT(twiddle_h_rsc_0_0_AWPROT),
      .twiddle_h_rsc_0_0_AWCACHE(twiddle_h_rsc_0_0_AWCACHE),
      .twiddle_h_rsc_0_0_AWLOCK(twiddle_h_rsc_0_0_AWLOCK),
      .twiddle_h_rsc_0_0_AWBURST(twiddle_h_rsc_0_0_AWBURST),
      .twiddle_h_rsc_0_0_AWSIZE(twiddle_h_rsc_0_0_AWSIZE),
      .twiddle_h_rsc_0_0_AWLEN(twiddle_h_rsc_0_0_AWLEN),
      .twiddle_h_rsc_0_0_AWADDR(twiddle_h_rsc_0_0_AWADDR),
      .twiddle_h_rsc_0_0_AWID(twiddle_h_rsc_0_0_AWID),
      .twiddle_h_rsc_triosy_0_0_lz(twiddle_h_rsc_triosy_0_0_lz),
      .twiddle_h_rsc_0_1_s_tdone(twiddle_h_rsc_0_1_s_tdone),
      .twiddle_h_rsc_0_1_tr_write_done(twiddle_h_rsc_0_1_tr_write_done),
      .twiddle_h_rsc_0_1_RREADY(twiddle_h_rsc_0_1_RREADY),
      .twiddle_h_rsc_0_1_RVALID(twiddle_h_rsc_0_1_RVALID),
      .twiddle_h_rsc_0_1_RUSER(twiddle_h_rsc_0_1_RUSER),
      .twiddle_h_rsc_0_1_RLAST(twiddle_h_rsc_0_1_RLAST),
      .twiddle_h_rsc_0_1_RRESP(twiddle_h_rsc_0_1_RRESP),
      .twiddle_h_rsc_0_1_RDATA(twiddle_h_rsc_0_1_RDATA),
      .twiddle_h_rsc_0_1_RID(twiddle_h_rsc_0_1_RID),
      .twiddle_h_rsc_0_1_ARREADY(twiddle_h_rsc_0_1_ARREADY),
      .twiddle_h_rsc_0_1_ARVALID(twiddle_h_rsc_0_1_ARVALID),
      .twiddle_h_rsc_0_1_ARUSER(twiddle_h_rsc_0_1_ARUSER),
      .twiddle_h_rsc_0_1_ARREGION(twiddle_h_rsc_0_1_ARREGION),
      .twiddle_h_rsc_0_1_ARQOS(twiddle_h_rsc_0_1_ARQOS),
      .twiddle_h_rsc_0_1_ARPROT(twiddle_h_rsc_0_1_ARPROT),
      .twiddle_h_rsc_0_1_ARCACHE(twiddle_h_rsc_0_1_ARCACHE),
      .twiddle_h_rsc_0_1_ARLOCK(twiddle_h_rsc_0_1_ARLOCK),
      .twiddle_h_rsc_0_1_ARBURST(twiddle_h_rsc_0_1_ARBURST),
      .twiddle_h_rsc_0_1_ARSIZE(twiddle_h_rsc_0_1_ARSIZE),
      .twiddle_h_rsc_0_1_ARLEN(twiddle_h_rsc_0_1_ARLEN),
      .twiddle_h_rsc_0_1_ARADDR(twiddle_h_rsc_0_1_ARADDR),
      .twiddle_h_rsc_0_1_ARID(twiddle_h_rsc_0_1_ARID),
      .twiddle_h_rsc_0_1_BREADY(twiddle_h_rsc_0_1_BREADY),
      .twiddle_h_rsc_0_1_BVALID(twiddle_h_rsc_0_1_BVALID),
      .twiddle_h_rsc_0_1_BUSER(twiddle_h_rsc_0_1_BUSER),
      .twiddle_h_rsc_0_1_BRESP(twiddle_h_rsc_0_1_BRESP),
      .twiddle_h_rsc_0_1_BID(twiddle_h_rsc_0_1_BID),
      .twiddle_h_rsc_0_1_WREADY(twiddle_h_rsc_0_1_WREADY),
      .twiddle_h_rsc_0_1_WVALID(twiddle_h_rsc_0_1_WVALID),
      .twiddle_h_rsc_0_1_WUSER(twiddle_h_rsc_0_1_WUSER),
      .twiddle_h_rsc_0_1_WLAST(twiddle_h_rsc_0_1_WLAST),
      .twiddle_h_rsc_0_1_WSTRB(twiddle_h_rsc_0_1_WSTRB),
      .twiddle_h_rsc_0_1_WDATA(twiddle_h_rsc_0_1_WDATA),
      .twiddle_h_rsc_0_1_AWREADY(twiddle_h_rsc_0_1_AWREADY),
      .twiddle_h_rsc_0_1_AWVALID(twiddle_h_rsc_0_1_AWVALID),
      .twiddle_h_rsc_0_1_AWUSER(twiddle_h_rsc_0_1_AWUSER),
      .twiddle_h_rsc_0_1_AWREGION(twiddle_h_rsc_0_1_AWREGION),
      .twiddle_h_rsc_0_1_AWQOS(twiddle_h_rsc_0_1_AWQOS),
      .twiddle_h_rsc_0_1_AWPROT(twiddle_h_rsc_0_1_AWPROT),
      .twiddle_h_rsc_0_1_AWCACHE(twiddle_h_rsc_0_1_AWCACHE),
      .twiddle_h_rsc_0_1_AWLOCK(twiddle_h_rsc_0_1_AWLOCK),
      .twiddle_h_rsc_0_1_AWBURST(twiddle_h_rsc_0_1_AWBURST),
      .twiddle_h_rsc_0_1_AWSIZE(twiddle_h_rsc_0_1_AWSIZE),
      .twiddle_h_rsc_0_1_AWLEN(twiddle_h_rsc_0_1_AWLEN),
      .twiddle_h_rsc_0_1_AWADDR(twiddle_h_rsc_0_1_AWADDR),
      .twiddle_h_rsc_0_1_AWID(twiddle_h_rsc_0_1_AWID),
      .twiddle_h_rsc_triosy_0_1_lz(twiddle_h_rsc_triosy_0_1_lz),
      .twiddle_h_rsc_0_2_s_tdone(twiddle_h_rsc_0_2_s_tdone),
      .twiddle_h_rsc_0_2_tr_write_done(twiddle_h_rsc_0_2_tr_write_done),
      .twiddle_h_rsc_0_2_RREADY(twiddle_h_rsc_0_2_RREADY),
      .twiddle_h_rsc_0_2_RVALID(twiddle_h_rsc_0_2_RVALID),
      .twiddle_h_rsc_0_2_RUSER(twiddle_h_rsc_0_2_RUSER),
      .twiddle_h_rsc_0_2_RLAST(twiddle_h_rsc_0_2_RLAST),
      .twiddle_h_rsc_0_2_RRESP(twiddle_h_rsc_0_2_RRESP),
      .twiddle_h_rsc_0_2_RDATA(twiddle_h_rsc_0_2_RDATA),
      .twiddle_h_rsc_0_2_RID(twiddle_h_rsc_0_2_RID),
      .twiddle_h_rsc_0_2_ARREADY(twiddle_h_rsc_0_2_ARREADY),
      .twiddle_h_rsc_0_2_ARVALID(twiddle_h_rsc_0_2_ARVALID),
      .twiddle_h_rsc_0_2_ARUSER(twiddle_h_rsc_0_2_ARUSER),
      .twiddle_h_rsc_0_2_ARREGION(twiddle_h_rsc_0_2_ARREGION),
      .twiddle_h_rsc_0_2_ARQOS(twiddle_h_rsc_0_2_ARQOS),
      .twiddle_h_rsc_0_2_ARPROT(twiddle_h_rsc_0_2_ARPROT),
      .twiddle_h_rsc_0_2_ARCACHE(twiddle_h_rsc_0_2_ARCACHE),
      .twiddle_h_rsc_0_2_ARLOCK(twiddle_h_rsc_0_2_ARLOCK),
      .twiddle_h_rsc_0_2_ARBURST(twiddle_h_rsc_0_2_ARBURST),
      .twiddle_h_rsc_0_2_ARSIZE(twiddle_h_rsc_0_2_ARSIZE),
      .twiddle_h_rsc_0_2_ARLEN(twiddle_h_rsc_0_2_ARLEN),
      .twiddle_h_rsc_0_2_ARADDR(twiddle_h_rsc_0_2_ARADDR),
      .twiddle_h_rsc_0_2_ARID(twiddle_h_rsc_0_2_ARID),
      .twiddle_h_rsc_0_2_BREADY(twiddle_h_rsc_0_2_BREADY),
      .twiddle_h_rsc_0_2_BVALID(twiddle_h_rsc_0_2_BVALID),
      .twiddle_h_rsc_0_2_BUSER(twiddle_h_rsc_0_2_BUSER),
      .twiddle_h_rsc_0_2_BRESP(twiddle_h_rsc_0_2_BRESP),
      .twiddle_h_rsc_0_2_BID(twiddle_h_rsc_0_2_BID),
      .twiddle_h_rsc_0_2_WREADY(twiddle_h_rsc_0_2_WREADY),
      .twiddle_h_rsc_0_2_WVALID(twiddle_h_rsc_0_2_WVALID),
      .twiddle_h_rsc_0_2_WUSER(twiddle_h_rsc_0_2_WUSER),
      .twiddle_h_rsc_0_2_WLAST(twiddle_h_rsc_0_2_WLAST),
      .twiddle_h_rsc_0_2_WSTRB(twiddle_h_rsc_0_2_WSTRB),
      .twiddle_h_rsc_0_2_WDATA(twiddle_h_rsc_0_2_WDATA),
      .twiddle_h_rsc_0_2_AWREADY(twiddle_h_rsc_0_2_AWREADY),
      .twiddle_h_rsc_0_2_AWVALID(twiddle_h_rsc_0_2_AWVALID),
      .twiddle_h_rsc_0_2_AWUSER(twiddle_h_rsc_0_2_AWUSER),
      .twiddle_h_rsc_0_2_AWREGION(twiddle_h_rsc_0_2_AWREGION),
      .twiddle_h_rsc_0_2_AWQOS(twiddle_h_rsc_0_2_AWQOS),
      .twiddle_h_rsc_0_2_AWPROT(twiddle_h_rsc_0_2_AWPROT),
      .twiddle_h_rsc_0_2_AWCACHE(twiddle_h_rsc_0_2_AWCACHE),
      .twiddle_h_rsc_0_2_AWLOCK(twiddle_h_rsc_0_2_AWLOCK),
      .twiddle_h_rsc_0_2_AWBURST(twiddle_h_rsc_0_2_AWBURST),
      .twiddle_h_rsc_0_2_AWSIZE(twiddle_h_rsc_0_2_AWSIZE),
      .twiddle_h_rsc_0_2_AWLEN(twiddle_h_rsc_0_2_AWLEN),
      .twiddle_h_rsc_0_2_AWADDR(twiddle_h_rsc_0_2_AWADDR),
      .twiddle_h_rsc_0_2_AWID(twiddle_h_rsc_0_2_AWID),
      .twiddle_h_rsc_triosy_0_2_lz(twiddle_h_rsc_triosy_0_2_lz),
      .twiddle_h_rsc_0_3_s_tdone(twiddle_h_rsc_0_3_s_tdone),
      .twiddle_h_rsc_0_3_tr_write_done(twiddle_h_rsc_0_3_tr_write_done),
      .twiddle_h_rsc_0_3_RREADY(twiddle_h_rsc_0_3_RREADY),
      .twiddle_h_rsc_0_3_RVALID(twiddle_h_rsc_0_3_RVALID),
      .twiddle_h_rsc_0_3_RUSER(twiddle_h_rsc_0_3_RUSER),
      .twiddle_h_rsc_0_3_RLAST(twiddle_h_rsc_0_3_RLAST),
      .twiddle_h_rsc_0_3_RRESP(twiddle_h_rsc_0_3_RRESP),
      .twiddle_h_rsc_0_3_RDATA(twiddle_h_rsc_0_3_RDATA),
      .twiddle_h_rsc_0_3_RID(twiddle_h_rsc_0_3_RID),
      .twiddle_h_rsc_0_3_ARREADY(twiddle_h_rsc_0_3_ARREADY),
      .twiddle_h_rsc_0_3_ARVALID(twiddle_h_rsc_0_3_ARVALID),
      .twiddle_h_rsc_0_3_ARUSER(twiddle_h_rsc_0_3_ARUSER),
      .twiddle_h_rsc_0_3_ARREGION(twiddle_h_rsc_0_3_ARREGION),
      .twiddle_h_rsc_0_3_ARQOS(twiddle_h_rsc_0_3_ARQOS),
      .twiddle_h_rsc_0_3_ARPROT(twiddle_h_rsc_0_3_ARPROT),
      .twiddle_h_rsc_0_3_ARCACHE(twiddle_h_rsc_0_3_ARCACHE),
      .twiddle_h_rsc_0_3_ARLOCK(twiddle_h_rsc_0_3_ARLOCK),
      .twiddle_h_rsc_0_3_ARBURST(twiddle_h_rsc_0_3_ARBURST),
      .twiddle_h_rsc_0_3_ARSIZE(twiddle_h_rsc_0_3_ARSIZE),
      .twiddle_h_rsc_0_3_ARLEN(twiddle_h_rsc_0_3_ARLEN),
      .twiddle_h_rsc_0_3_ARADDR(twiddle_h_rsc_0_3_ARADDR),
      .twiddle_h_rsc_0_3_ARID(twiddle_h_rsc_0_3_ARID),
      .twiddle_h_rsc_0_3_BREADY(twiddle_h_rsc_0_3_BREADY),
      .twiddle_h_rsc_0_3_BVALID(twiddle_h_rsc_0_3_BVALID),
      .twiddle_h_rsc_0_3_BUSER(twiddle_h_rsc_0_3_BUSER),
      .twiddle_h_rsc_0_3_BRESP(twiddle_h_rsc_0_3_BRESP),
      .twiddle_h_rsc_0_3_BID(twiddle_h_rsc_0_3_BID),
      .twiddle_h_rsc_0_3_WREADY(twiddle_h_rsc_0_3_WREADY),
      .twiddle_h_rsc_0_3_WVALID(twiddle_h_rsc_0_3_WVALID),
      .twiddle_h_rsc_0_3_WUSER(twiddle_h_rsc_0_3_WUSER),
      .twiddle_h_rsc_0_3_WLAST(twiddle_h_rsc_0_3_WLAST),
      .twiddle_h_rsc_0_3_WSTRB(twiddle_h_rsc_0_3_WSTRB),
      .twiddle_h_rsc_0_3_WDATA(twiddle_h_rsc_0_3_WDATA),
      .twiddle_h_rsc_0_3_AWREADY(twiddle_h_rsc_0_3_AWREADY),
      .twiddle_h_rsc_0_3_AWVALID(twiddle_h_rsc_0_3_AWVALID),
      .twiddle_h_rsc_0_3_AWUSER(twiddle_h_rsc_0_3_AWUSER),
      .twiddle_h_rsc_0_3_AWREGION(twiddle_h_rsc_0_3_AWREGION),
      .twiddle_h_rsc_0_3_AWQOS(twiddle_h_rsc_0_3_AWQOS),
      .twiddle_h_rsc_0_3_AWPROT(twiddle_h_rsc_0_3_AWPROT),
      .twiddle_h_rsc_0_3_AWCACHE(twiddle_h_rsc_0_3_AWCACHE),
      .twiddle_h_rsc_0_3_AWLOCK(twiddle_h_rsc_0_3_AWLOCK),
      .twiddle_h_rsc_0_3_AWBURST(twiddle_h_rsc_0_3_AWBURST),
      .twiddle_h_rsc_0_3_AWSIZE(twiddle_h_rsc_0_3_AWSIZE),
      .twiddle_h_rsc_0_3_AWLEN(twiddle_h_rsc_0_3_AWLEN),
      .twiddle_h_rsc_0_3_AWADDR(twiddle_h_rsc_0_3_AWADDR),
      .twiddle_h_rsc_0_3_AWID(twiddle_h_rsc_0_3_AWID),
      .twiddle_h_rsc_triosy_0_3_lz(twiddle_h_rsc_triosy_0_3_lz),
      .twiddle_h_rsc_0_4_s_tdone(twiddle_h_rsc_0_4_s_tdone),
      .twiddle_h_rsc_0_4_tr_write_done(twiddle_h_rsc_0_4_tr_write_done),
      .twiddle_h_rsc_0_4_RREADY(twiddle_h_rsc_0_4_RREADY),
      .twiddle_h_rsc_0_4_RVALID(twiddle_h_rsc_0_4_RVALID),
      .twiddle_h_rsc_0_4_RUSER(twiddle_h_rsc_0_4_RUSER),
      .twiddle_h_rsc_0_4_RLAST(twiddle_h_rsc_0_4_RLAST),
      .twiddle_h_rsc_0_4_RRESP(twiddle_h_rsc_0_4_RRESP),
      .twiddle_h_rsc_0_4_RDATA(twiddle_h_rsc_0_4_RDATA),
      .twiddle_h_rsc_0_4_RID(twiddle_h_rsc_0_4_RID),
      .twiddle_h_rsc_0_4_ARREADY(twiddle_h_rsc_0_4_ARREADY),
      .twiddle_h_rsc_0_4_ARVALID(twiddle_h_rsc_0_4_ARVALID),
      .twiddle_h_rsc_0_4_ARUSER(twiddle_h_rsc_0_4_ARUSER),
      .twiddle_h_rsc_0_4_ARREGION(twiddle_h_rsc_0_4_ARREGION),
      .twiddle_h_rsc_0_4_ARQOS(twiddle_h_rsc_0_4_ARQOS),
      .twiddle_h_rsc_0_4_ARPROT(twiddle_h_rsc_0_4_ARPROT),
      .twiddle_h_rsc_0_4_ARCACHE(twiddle_h_rsc_0_4_ARCACHE),
      .twiddle_h_rsc_0_4_ARLOCK(twiddle_h_rsc_0_4_ARLOCK),
      .twiddle_h_rsc_0_4_ARBURST(twiddle_h_rsc_0_4_ARBURST),
      .twiddle_h_rsc_0_4_ARSIZE(twiddle_h_rsc_0_4_ARSIZE),
      .twiddle_h_rsc_0_4_ARLEN(twiddle_h_rsc_0_4_ARLEN),
      .twiddle_h_rsc_0_4_ARADDR(twiddle_h_rsc_0_4_ARADDR),
      .twiddle_h_rsc_0_4_ARID(twiddle_h_rsc_0_4_ARID),
      .twiddle_h_rsc_0_4_BREADY(twiddle_h_rsc_0_4_BREADY),
      .twiddle_h_rsc_0_4_BVALID(twiddle_h_rsc_0_4_BVALID),
      .twiddle_h_rsc_0_4_BUSER(twiddle_h_rsc_0_4_BUSER),
      .twiddle_h_rsc_0_4_BRESP(twiddle_h_rsc_0_4_BRESP),
      .twiddle_h_rsc_0_4_BID(twiddle_h_rsc_0_4_BID),
      .twiddle_h_rsc_0_4_WREADY(twiddle_h_rsc_0_4_WREADY),
      .twiddle_h_rsc_0_4_WVALID(twiddle_h_rsc_0_4_WVALID),
      .twiddle_h_rsc_0_4_WUSER(twiddle_h_rsc_0_4_WUSER),
      .twiddle_h_rsc_0_4_WLAST(twiddle_h_rsc_0_4_WLAST),
      .twiddle_h_rsc_0_4_WSTRB(twiddle_h_rsc_0_4_WSTRB),
      .twiddle_h_rsc_0_4_WDATA(twiddle_h_rsc_0_4_WDATA),
      .twiddle_h_rsc_0_4_AWREADY(twiddle_h_rsc_0_4_AWREADY),
      .twiddle_h_rsc_0_4_AWVALID(twiddle_h_rsc_0_4_AWVALID),
      .twiddle_h_rsc_0_4_AWUSER(twiddle_h_rsc_0_4_AWUSER),
      .twiddle_h_rsc_0_4_AWREGION(twiddle_h_rsc_0_4_AWREGION),
      .twiddle_h_rsc_0_4_AWQOS(twiddle_h_rsc_0_4_AWQOS),
      .twiddle_h_rsc_0_4_AWPROT(twiddle_h_rsc_0_4_AWPROT),
      .twiddle_h_rsc_0_4_AWCACHE(twiddle_h_rsc_0_4_AWCACHE),
      .twiddle_h_rsc_0_4_AWLOCK(twiddle_h_rsc_0_4_AWLOCK),
      .twiddle_h_rsc_0_4_AWBURST(twiddle_h_rsc_0_4_AWBURST),
      .twiddle_h_rsc_0_4_AWSIZE(twiddle_h_rsc_0_4_AWSIZE),
      .twiddle_h_rsc_0_4_AWLEN(twiddle_h_rsc_0_4_AWLEN),
      .twiddle_h_rsc_0_4_AWADDR(twiddle_h_rsc_0_4_AWADDR),
      .twiddle_h_rsc_0_4_AWID(twiddle_h_rsc_0_4_AWID),
      .twiddle_h_rsc_triosy_0_4_lz(twiddle_h_rsc_triosy_0_4_lz),
      .twiddle_h_rsc_0_5_s_tdone(twiddle_h_rsc_0_5_s_tdone),
      .twiddle_h_rsc_0_5_tr_write_done(twiddle_h_rsc_0_5_tr_write_done),
      .twiddle_h_rsc_0_5_RREADY(twiddle_h_rsc_0_5_RREADY),
      .twiddle_h_rsc_0_5_RVALID(twiddle_h_rsc_0_5_RVALID),
      .twiddle_h_rsc_0_5_RUSER(twiddle_h_rsc_0_5_RUSER),
      .twiddle_h_rsc_0_5_RLAST(twiddle_h_rsc_0_5_RLAST),
      .twiddle_h_rsc_0_5_RRESP(twiddle_h_rsc_0_5_RRESP),
      .twiddle_h_rsc_0_5_RDATA(twiddle_h_rsc_0_5_RDATA),
      .twiddle_h_rsc_0_5_RID(twiddle_h_rsc_0_5_RID),
      .twiddle_h_rsc_0_5_ARREADY(twiddle_h_rsc_0_5_ARREADY),
      .twiddle_h_rsc_0_5_ARVALID(twiddle_h_rsc_0_5_ARVALID),
      .twiddle_h_rsc_0_5_ARUSER(twiddle_h_rsc_0_5_ARUSER),
      .twiddle_h_rsc_0_5_ARREGION(twiddle_h_rsc_0_5_ARREGION),
      .twiddle_h_rsc_0_5_ARQOS(twiddle_h_rsc_0_5_ARQOS),
      .twiddle_h_rsc_0_5_ARPROT(twiddle_h_rsc_0_5_ARPROT),
      .twiddle_h_rsc_0_5_ARCACHE(twiddle_h_rsc_0_5_ARCACHE),
      .twiddle_h_rsc_0_5_ARLOCK(twiddle_h_rsc_0_5_ARLOCK),
      .twiddle_h_rsc_0_5_ARBURST(twiddle_h_rsc_0_5_ARBURST),
      .twiddle_h_rsc_0_5_ARSIZE(twiddle_h_rsc_0_5_ARSIZE),
      .twiddle_h_rsc_0_5_ARLEN(twiddle_h_rsc_0_5_ARLEN),
      .twiddle_h_rsc_0_5_ARADDR(twiddle_h_rsc_0_5_ARADDR),
      .twiddle_h_rsc_0_5_ARID(twiddle_h_rsc_0_5_ARID),
      .twiddle_h_rsc_0_5_BREADY(twiddle_h_rsc_0_5_BREADY),
      .twiddle_h_rsc_0_5_BVALID(twiddle_h_rsc_0_5_BVALID),
      .twiddle_h_rsc_0_5_BUSER(twiddle_h_rsc_0_5_BUSER),
      .twiddle_h_rsc_0_5_BRESP(twiddle_h_rsc_0_5_BRESP),
      .twiddle_h_rsc_0_5_BID(twiddle_h_rsc_0_5_BID),
      .twiddle_h_rsc_0_5_WREADY(twiddle_h_rsc_0_5_WREADY),
      .twiddle_h_rsc_0_5_WVALID(twiddle_h_rsc_0_5_WVALID),
      .twiddle_h_rsc_0_5_WUSER(twiddle_h_rsc_0_5_WUSER),
      .twiddle_h_rsc_0_5_WLAST(twiddle_h_rsc_0_5_WLAST),
      .twiddle_h_rsc_0_5_WSTRB(twiddle_h_rsc_0_5_WSTRB),
      .twiddle_h_rsc_0_5_WDATA(twiddle_h_rsc_0_5_WDATA),
      .twiddle_h_rsc_0_5_AWREADY(twiddle_h_rsc_0_5_AWREADY),
      .twiddle_h_rsc_0_5_AWVALID(twiddle_h_rsc_0_5_AWVALID),
      .twiddle_h_rsc_0_5_AWUSER(twiddle_h_rsc_0_5_AWUSER),
      .twiddle_h_rsc_0_5_AWREGION(twiddle_h_rsc_0_5_AWREGION),
      .twiddle_h_rsc_0_5_AWQOS(twiddle_h_rsc_0_5_AWQOS),
      .twiddle_h_rsc_0_5_AWPROT(twiddle_h_rsc_0_5_AWPROT),
      .twiddle_h_rsc_0_5_AWCACHE(twiddle_h_rsc_0_5_AWCACHE),
      .twiddle_h_rsc_0_5_AWLOCK(twiddle_h_rsc_0_5_AWLOCK),
      .twiddle_h_rsc_0_5_AWBURST(twiddle_h_rsc_0_5_AWBURST),
      .twiddle_h_rsc_0_5_AWSIZE(twiddle_h_rsc_0_5_AWSIZE),
      .twiddle_h_rsc_0_5_AWLEN(twiddle_h_rsc_0_5_AWLEN),
      .twiddle_h_rsc_0_5_AWADDR(twiddle_h_rsc_0_5_AWADDR),
      .twiddle_h_rsc_0_5_AWID(twiddle_h_rsc_0_5_AWID),
      .twiddle_h_rsc_triosy_0_5_lz(twiddle_h_rsc_triosy_0_5_lz),
      .twiddle_h_rsc_0_6_s_tdone(twiddle_h_rsc_0_6_s_tdone),
      .twiddle_h_rsc_0_6_tr_write_done(twiddle_h_rsc_0_6_tr_write_done),
      .twiddle_h_rsc_0_6_RREADY(twiddle_h_rsc_0_6_RREADY),
      .twiddle_h_rsc_0_6_RVALID(twiddle_h_rsc_0_6_RVALID),
      .twiddle_h_rsc_0_6_RUSER(twiddle_h_rsc_0_6_RUSER),
      .twiddle_h_rsc_0_6_RLAST(twiddle_h_rsc_0_6_RLAST),
      .twiddle_h_rsc_0_6_RRESP(twiddle_h_rsc_0_6_RRESP),
      .twiddle_h_rsc_0_6_RDATA(twiddle_h_rsc_0_6_RDATA),
      .twiddle_h_rsc_0_6_RID(twiddle_h_rsc_0_6_RID),
      .twiddle_h_rsc_0_6_ARREADY(twiddle_h_rsc_0_6_ARREADY),
      .twiddle_h_rsc_0_6_ARVALID(twiddle_h_rsc_0_6_ARVALID),
      .twiddle_h_rsc_0_6_ARUSER(twiddle_h_rsc_0_6_ARUSER),
      .twiddle_h_rsc_0_6_ARREGION(twiddle_h_rsc_0_6_ARREGION),
      .twiddle_h_rsc_0_6_ARQOS(twiddle_h_rsc_0_6_ARQOS),
      .twiddle_h_rsc_0_6_ARPROT(twiddle_h_rsc_0_6_ARPROT),
      .twiddle_h_rsc_0_6_ARCACHE(twiddle_h_rsc_0_6_ARCACHE),
      .twiddle_h_rsc_0_6_ARLOCK(twiddle_h_rsc_0_6_ARLOCK),
      .twiddle_h_rsc_0_6_ARBURST(twiddle_h_rsc_0_6_ARBURST),
      .twiddle_h_rsc_0_6_ARSIZE(twiddle_h_rsc_0_6_ARSIZE),
      .twiddle_h_rsc_0_6_ARLEN(twiddle_h_rsc_0_6_ARLEN),
      .twiddle_h_rsc_0_6_ARADDR(twiddle_h_rsc_0_6_ARADDR),
      .twiddle_h_rsc_0_6_ARID(twiddle_h_rsc_0_6_ARID),
      .twiddle_h_rsc_0_6_BREADY(twiddle_h_rsc_0_6_BREADY),
      .twiddle_h_rsc_0_6_BVALID(twiddle_h_rsc_0_6_BVALID),
      .twiddle_h_rsc_0_6_BUSER(twiddle_h_rsc_0_6_BUSER),
      .twiddle_h_rsc_0_6_BRESP(twiddle_h_rsc_0_6_BRESP),
      .twiddle_h_rsc_0_6_BID(twiddle_h_rsc_0_6_BID),
      .twiddle_h_rsc_0_6_WREADY(twiddle_h_rsc_0_6_WREADY),
      .twiddle_h_rsc_0_6_WVALID(twiddle_h_rsc_0_6_WVALID),
      .twiddle_h_rsc_0_6_WUSER(twiddle_h_rsc_0_6_WUSER),
      .twiddle_h_rsc_0_6_WLAST(twiddle_h_rsc_0_6_WLAST),
      .twiddle_h_rsc_0_6_WSTRB(twiddle_h_rsc_0_6_WSTRB),
      .twiddle_h_rsc_0_6_WDATA(twiddle_h_rsc_0_6_WDATA),
      .twiddle_h_rsc_0_6_AWREADY(twiddle_h_rsc_0_6_AWREADY),
      .twiddle_h_rsc_0_6_AWVALID(twiddle_h_rsc_0_6_AWVALID),
      .twiddle_h_rsc_0_6_AWUSER(twiddle_h_rsc_0_6_AWUSER),
      .twiddle_h_rsc_0_6_AWREGION(twiddle_h_rsc_0_6_AWREGION),
      .twiddle_h_rsc_0_6_AWQOS(twiddle_h_rsc_0_6_AWQOS),
      .twiddle_h_rsc_0_6_AWPROT(twiddle_h_rsc_0_6_AWPROT),
      .twiddle_h_rsc_0_6_AWCACHE(twiddle_h_rsc_0_6_AWCACHE),
      .twiddle_h_rsc_0_6_AWLOCK(twiddle_h_rsc_0_6_AWLOCK),
      .twiddle_h_rsc_0_6_AWBURST(twiddle_h_rsc_0_6_AWBURST),
      .twiddle_h_rsc_0_6_AWSIZE(twiddle_h_rsc_0_6_AWSIZE),
      .twiddle_h_rsc_0_6_AWLEN(twiddle_h_rsc_0_6_AWLEN),
      .twiddle_h_rsc_0_6_AWADDR(twiddle_h_rsc_0_6_AWADDR),
      .twiddle_h_rsc_0_6_AWID(twiddle_h_rsc_0_6_AWID),
      .twiddle_h_rsc_triosy_0_6_lz(twiddle_h_rsc_triosy_0_6_lz),
      .twiddle_h_rsc_0_7_s_tdone(twiddle_h_rsc_0_7_s_tdone),
      .twiddle_h_rsc_0_7_tr_write_done(twiddle_h_rsc_0_7_tr_write_done),
      .twiddle_h_rsc_0_7_RREADY(twiddle_h_rsc_0_7_RREADY),
      .twiddle_h_rsc_0_7_RVALID(twiddle_h_rsc_0_7_RVALID),
      .twiddle_h_rsc_0_7_RUSER(twiddle_h_rsc_0_7_RUSER),
      .twiddle_h_rsc_0_7_RLAST(twiddle_h_rsc_0_7_RLAST),
      .twiddle_h_rsc_0_7_RRESP(twiddle_h_rsc_0_7_RRESP),
      .twiddle_h_rsc_0_7_RDATA(twiddle_h_rsc_0_7_RDATA),
      .twiddle_h_rsc_0_7_RID(twiddle_h_rsc_0_7_RID),
      .twiddle_h_rsc_0_7_ARREADY(twiddle_h_rsc_0_7_ARREADY),
      .twiddle_h_rsc_0_7_ARVALID(twiddle_h_rsc_0_7_ARVALID),
      .twiddle_h_rsc_0_7_ARUSER(twiddle_h_rsc_0_7_ARUSER),
      .twiddle_h_rsc_0_7_ARREGION(twiddle_h_rsc_0_7_ARREGION),
      .twiddle_h_rsc_0_7_ARQOS(twiddle_h_rsc_0_7_ARQOS),
      .twiddle_h_rsc_0_7_ARPROT(twiddle_h_rsc_0_7_ARPROT),
      .twiddle_h_rsc_0_7_ARCACHE(twiddle_h_rsc_0_7_ARCACHE),
      .twiddle_h_rsc_0_7_ARLOCK(twiddle_h_rsc_0_7_ARLOCK),
      .twiddle_h_rsc_0_7_ARBURST(twiddle_h_rsc_0_7_ARBURST),
      .twiddle_h_rsc_0_7_ARSIZE(twiddle_h_rsc_0_7_ARSIZE),
      .twiddle_h_rsc_0_7_ARLEN(twiddle_h_rsc_0_7_ARLEN),
      .twiddle_h_rsc_0_7_ARADDR(twiddle_h_rsc_0_7_ARADDR),
      .twiddle_h_rsc_0_7_ARID(twiddle_h_rsc_0_7_ARID),
      .twiddle_h_rsc_0_7_BREADY(twiddle_h_rsc_0_7_BREADY),
      .twiddle_h_rsc_0_7_BVALID(twiddle_h_rsc_0_7_BVALID),
      .twiddle_h_rsc_0_7_BUSER(twiddle_h_rsc_0_7_BUSER),
      .twiddle_h_rsc_0_7_BRESP(twiddle_h_rsc_0_7_BRESP),
      .twiddle_h_rsc_0_7_BID(twiddle_h_rsc_0_7_BID),
      .twiddle_h_rsc_0_7_WREADY(twiddle_h_rsc_0_7_WREADY),
      .twiddle_h_rsc_0_7_WVALID(twiddle_h_rsc_0_7_WVALID),
      .twiddle_h_rsc_0_7_WUSER(twiddle_h_rsc_0_7_WUSER),
      .twiddle_h_rsc_0_7_WLAST(twiddle_h_rsc_0_7_WLAST),
      .twiddle_h_rsc_0_7_WSTRB(twiddle_h_rsc_0_7_WSTRB),
      .twiddle_h_rsc_0_7_WDATA(twiddle_h_rsc_0_7_WDATA),
      .twiddle_h_rsc_0_7_AWREADY(twiddle_h_rsc_0_7_AWREADY),
      .twiddle_h_rsc_0_7_AWVALID(twiddle_h_rsc_0_7_AWVALID),
      .twiddle_h_rsc_0_7_AWUSER(twiddle_h_rsc_0_7_AWUSER),
      .twiddle_h_rsc_0_7_AWREGION(twiddle_h_rsc_0_7_AWREGION),
      .twiddle_h_rsc_0_7_AWQOS(twiddle_h_rsc_0_7_AWQOS),
      .twiddle_h_rsc_0_7_AWPROT(twiddle_h_rsc_0_7_AWPROT),
      .twiddle_h_rsc_0_7_AWCACHE(twiddle_h_rsc_0_7_AWCACHE),
      .twiddle_h_rsc_0_7_AWLOCK(twiddle_h_rsc_0_7_AWLOCK),
      .twiddle_h_rsc_0_7_AWBURST(twiddle_h_rsc_0_7_AWBURST),
      .twiddle_h_rsc_0_7_AWSIZE(twiddle_h_rsc_0_7_AWSIZE),
      .twiddle_h_rsc_0_7_AWLEN(twiddle_h_rsc_0_7_AWLEN),
      .twiddle_h_rsc_0_7_AWADDR(twiddle_h_rsc_0_7_AWADDR),
      .twiddle_h_rsc_0_7_AWID(twiddle_h_rsc_0_7_AWID),
      .twiddle_h_rsc_triosy_0_7_lz(twiddle_h_rsc_triosy_0_7_lz),
      .twiddle_h_rsc_0_8_s_tdone(twiddle_h_rsc_0_8_s_tdone),
      .twiddle_h_rsc_0_8_tr_write_done(twiddle_h_rsc_0_8_tr_write_done),
      .twiddle_h_rsc_0_8_RREADY(twiddle_h_rsc_0_8_RREADY),
      .twiddle_h_rsc_0_8_RVALID(twiddle_h_rsc_0_8_RVALID),
      .twiddle_h_rsc_0_8_RUSER(twiddle_h_rsc_0_8_RUSER),
      .twiddle_h_rsc_0_8_RLAST(twiddle_h_rsc_0_8_RLAST),
      .twiddle_h_rsc_0_8_RRESP(twiddle_h_rsc_0_8_RRESP),
      .twiddle_h_rsc_0_8_RDATA(twiddle_h_rsc_0_8_RDATA),
      .twiddle_h_rsc_0_8_RID(twiddle_h_rsc_0_8_RID),
      .twiddle_h_rsc_0_8_ARREADY(twiddle_h_rsc_0_8_ARREADY),
      .twiddle_h_rsc_0_8_ARVALID(twiddle_h_rsc_0_8_ARVALID),
      .twiddle_h_rsc_0_8_ARUSER(twiddle_h_rsc_0_8_ARUSER),
      .twiddle_h_rsc_0_8_ARREGION(twiddle_h_rsc_0_8_ARREGION),
      .twiddle_h_rsc_0_8_ARQOS(twiddle_h_rsc_0_8_ARQOS),
      .twiddle_h_rsc_0_8_ARPROT(twiddle_h_rsc_0_8_ARPROT),
      .twiddle_h_rsc_0_8_ARCACHE(twiddle_h_rsc_0_8_ARCACHE),
      .twiddle_h_rsc_0_8_ARLOCK(twiddle_h_rsc_0_8_ARLOCK),
      .twiddle_h_rsc_0_8_ARBURST(twiddle_h_rsc_0_8_ARBURST),
      .twiddle_h_rsc_0_8_ARSIZE(twiddle_h_rsc_0_8_ARSIZE),
      .twiddle_h_rsc_0_8_ARLEN(twiddle_h_rsc_0_8_ARLEN),
      .twiddle_h_rsc_0_8_ARADDR(twiddle_h_rsc_0_8_ARADDR),
      .twiddle_h_rsc_0_8_ARID(twiddle_h_rsc_0_8_ARID),
      .twiddle_h_rsc_0_8_BREADY(twiddle_h_rsc_0_8_BREADY),
      .twiddle_h_rsc_0_8_BVALID(twiddle_h_rsc_0_8_BVALID),
      .twiddle_h_rsc_0_8_BUSER(twiddle_h_rsc_0_8_BUSER),
      .twiddle_h_rsc_0_8_BRESP(twiddle_h_rsc_0_8_BRESP),
      .twiddle_h_rsc_0_8_BID(twiddle_h_rsc_0_8_BID),
      .twiddle_h_rsc_0_8_WREADY(twiddle_h_rsc_0_8_WREADY),
      .twiddle_h_rsc_0_8_WVALID(twiddle_h_rsc_0_8_WVALID),
      .twiddle_h_rsc_0_8_WUSER(twiddle_h_rsc_0_8_WUSER),
      .twiddle_h_rsc_0_8_WLAST(twiddle_h_rsc_0_8_WLAST),
      .twiddle_h_rsc_0_8_WSTRB(twiddle_h_rsc_0_8_WSTRB),
      .twiddle_h_rsc_0_8_WDATA(twiddle_h_rsc_0_8_WDATA),
      .twiddle_h_rsc_0_8_AWREADY(twiddle_h_rsc_0_8_AWREADY),
      .twiddle_h_rsc_0_8_AWVALID(twiddle_h_rsc_0_8_AWVALID),
      .twiddle_h_rsc_0_8_AWUSER(twiddle_h_rsc_0_8_AWUSER),
      .twiddle_h_rsc_0_8_AWREGION(twiddle_h_rsc_0_8_AWREGION),
      .twiddle_h_rsc_0_8_AWQOS(twiddle_h_rsc_0_8_AWQOS),
      .twiddle_h_rsc_0_8_AWPROT(twiddle_h_rsc_0_8_AWPROT),
      .twiddle_h_rsc_0_8_AWCACHE(twiddle_h_rsc_0_8_AWCACHE),
      .twiddle_h_rsc_0_8_AWLOCK(twiddle_h_rsc_0_8_AWLOCK),
      .twiddle_h_rsc_0_8_AWBURST(twiddle_h_rsc_0_8_AWBURST),
      .twiddle_h_rsc_0_8_AWSIZE(twiddle_h_rsc_0_8_AWSIZE),
      .twiddle_h_rsc_0_8_AWLEN(twiddle_h_rsc_0_8_AWLEN),
      .twiddle_h_rsc_0_8_AWADDR(twiddle_h_rsc_0_8_AWADDR),
      .twiddle_h_rsc_0_8_AWID(twiddle_h_rsc_0_8_AWID),
      .twiddle_h_rsc_triosy_0_8_lz(twiddle_h_rsc_triosy_0_8_lz),
      .twiddle_h_rsc_0_9_s_tdone(twiddle_h_rsc_0_9_s_tdone),
      .twiddle_h_rsc_0_9_tr_write_done(twiddle_h_rsc_0_9_tr_write_done),
      .twiddle_h_rsc_0_9_RREADY(twiddle_h_rsc_0_9_RREADY),
      .twiddle_h_rsc_0_9_RVALID(twiddle_h_rsc_0_9_RVALID),
      .twiddle_h_rsc_0_9_RUSER(twiddle_h_rsc_0_9_RUSER),
      .twiddle_h_rsc_0_9_RLAST(twiddle_h_rsc_0_9_RLAST),
      .twiddle_h_rsc_0_9_RRESP(twiddle_h_rsc_0_9_RRESP),
      .twiddle_h_rsc_0_9_RDATA(twiddle_h_rsc_0_9_RDATA),
      .twiddle_h_rsc_0_9_RID(twiddle_h_rsc_0_9_RID),
      .twiddle_h_rsc_0_9_ARREADY(twiddle_h_rsc_0_9_ARREADY),
      .twiddle_h_rsc_0_9_ARVALID(twiddle_h_rsc_0_9_ARVALID),
      .twiddle_h_rsc_0_9_ARUSER(twiddle_h_rsc_0_9_ARUSER),
      .twiddle_h_rsc_0_9_ARREGION(twiddle_h_rsc_0_9_ARREGION),
      .twiddle_h_rsc_0_9_ARQOS(twiddle_h_rsc_0_9_ARQOS),
      .twiddle_h_rsc_0_9_ARPROT(twiddle_h_rsc_0_9_ARPROT),
      .twiddle_h_rsc_0_9_ARCACHE(twiddle_h_rsc_0_9_ARCACHE),
      .twiddle_h_rsc_0_9_ARLOCK(twiddle_h_rsc_0_9_ARLOCK),
      .twiddle_h_rsc_0_9_ARBURST(twiddle_h_rsc_0_9_ARBURST),
      .twiddle_h_rsc_0_9_ARSIZE(twiddle_h_rsc_0_9_ARSIZE),
      .twiddle_h_rsc_0_9_ARLEN(twiddle_h_rsc_0_9_ARLEN),
      .twiddle_h_rsc_0_9_ARADDR(twiddle_h_rsc_0_9_ARADDR),
      .twiddle_h_rsc_0_9_ARID(twiddle_h_rsc_0_9_ARID),
      .twiddle_h_rsc_0_9_BREADY(twiddle_h_rsc_0_9_BREADY),
      .twiddle_h_rsc_0_9_BVALID(twiddle_h_rsc_0_9_BVALID),
      .twiddle_h_rsc_0_9_BUSER(twiddle_h_rsc_0_9_BUSER),
      .twiddle_h_rsc_0_9_BRESP(twiddle_h_rsc_0_9_BRESP),
      .twiddle_h_rsc_0_9_BID(twiddle_h_rsc_0_9_BID),
      .twiddle_h_rsc_0_9_WREADY(twiddle_h_rsc_0_9_WREADY),
      .twiddle_h_rsc_0_9_WVALID(twiddle_h_rsc_0_9_WVALID),
      .twiddle_h_rsc_0_9_WUSER(twiddle_h_rsc_0_9_WUSER),
      .twiddle_h_rsc_0_9_WLAST(twiddle_h_rsc_0_9_WLAST),
      .twiddle_h_rsc_0_9_WSTRB(twiddle_h_rsc_0_9_WSTRB),
      .twiddle_h_rsc_0_9_WDATA(twiddle_h_rsc_0_9_WDATA),
      .twiddle_h_rsc_0_9_AWREADY(twiddle_h_rsc_0_9_AWREADY),
      .twiddle_h_rsc_0_9_AWVALID(twiddle_h_rsc_0_9_AWVALID),
      .twiddle_h_rsc_0_9_AWUSER(twiddle_h_rsc_0_9_AWUSER),
      .twiddle_h_rsc_0_9_AWREGION(twiddle_h_rsc_0_9_AWREGION),
      .twiddle_h_rsc_0_9_AWQOS(twiddle_h_rsc_0_9_AWQOS),
      .twiddle_h_rsc_0_9_AWPROT(twiddle_h_rsc_0_9_AWPROT),
      .twiddle_h_rsc_0_9_AWCACHE(twiddle_h_rsc_0_9_AWCACHE),
      .twiddle_h_rsc_0_9_AWLOCK(twiddle_h_rsc_0_9_AWLOCK),
      .twiddle_h_rsc_0_9_AWBURST(twiddle_h_rsc_0_9_AWBURST),
      .twiddle_h_rsc_0_9_AWSIZE(twiddle_h_rsc_0_9_AWSIZE),
      .twiddle_h_rsc_0_9_AWLEN(twiddle_h_rsc_0_9_AWLEN),
      .twiddle_h_rsc_0_9_AWADDR(twiddle_h_rsc_0_9_AWADDR),
      .twiddle_h_rsc_0_9_AWID(twiddle_h_rsc_0_9_AWID),
      .twiddle_h_rsc_triosy_0_9_lz(twiddle_h_rsc_triosy_0_9_lz),
      .twiddle_h_rsc_0_10_s_tdone(twiddle_h_rsc_0_10_s_tdone),
      .twiddle_h_rsc_0_10_tr_write_done(twiddle_h_rsc_0_10_tr_write_done),
      .twiddle_h_rsc_0_10_RREADY(twiddle_h_rsc_0_10_RREADY),
      .twiddle_h_rsc_0_10_RVALID(twiddle_h_rsc_0_10_RVALID),
      .twiddle_h_rsc_0_10_RUSER(twiddle_h_rsc_0_10_RUSER),
      .twiddle_h_rsc_0_10_RLAST(twiddle_h_rsc_0_10_RLAST),
      .twiddle_h_rsc_0_10_RRESP(twiddle_h_rsc_0_10_RRESP),
      .twiddle_h_rsc_0_10_RDATA(twiddle_h_rsc_0_10_RDATA),
      .twiddle_h_rsc_0_10_RID(twiddle_h_rsc_0_10_RID),
      .twiddle_h_rsc_0_10_ARREADY(twiddle_h_rsc_0_10_ARREADY),
      .twiddle_h_rsc_0_10_ARVALID(twiddle_h_rsc_0_10_ARVALID),
      .twiddle_h_rsc_0_10_ARUSER(twiddle_h_rsc_0_10_ARUSER),
      .twiddle_h_rsc_0_10_ARREGION(twiddle_h_rsc_0_10_ARREGION),
      .twiddle_h_rsc_0_10_ARQOS(twiddle_h_rsc_0_10_ARQOS),
      .twiddle_h_rsc_0_10_ARPROT(twiddle_h_rsc_0_10_ARPROT),
      .twiddle_h_rsc_0_10_ARCACHE(twiddle_h_rsc_0_10_ARCACHE),
      .twiddle_h_rsc_0_10_ARLOCK(twiddle_h_rsc_0_10_ARLOCK),
      .twiddle_h_rsc_0_10_ARBURST(twiddle_h_rsc_0_10_ARBURST),
      .twiddle_h_rsc_0_10_ARSIZE(twiddle_h_rsc_0_10_ARSIZE),
      .twiddle_h_rsc_0_10_ARLEN(twiddle_h_rsc_0_10_ARLEN),
      .twiddle_h_rsc_0_10_ARADDR(twiddle_h_rsc_0_10_ARADDR),
      .twiddle_h_rsc_0_10_ARID(twiddle_h_rsc_0_10_ARID),
      .twiddle_h_rsc_0_10_BREADY(twiddle_h_rsc_0_10_BREADY),
      .twiddle_h_rsc_0_10_BVALID(twiddle_h_rsc_0_10_BVALID),
      .twiddle_h_rsc_0_10_BUSER(twiddle_h_rsc_0_10_BUSER),
      .twiddle_h_rsc_0_10_BRESP(twiddle_h_rsc_0_10_BRESP),
      .twiddle_h_rsc_0_10_BID(twiddle_h_rsc_0_10_BID),
      .twiddle_h_rsc_0_10_WREADY(twiddle_h_rsc_0_10_WREADY),
      .twiddle_h_rsc_0_10_WVALID(twiddle_h_rsc_0_10_WVALID),
      .twiddle_h_rsc_0_10_WUSER(twiddle_h_rsc_0_10_WUSER),
      .twiddle_h_rsc_0_10_WLAST(twiddle_h_rsc_0_10_WLAST),
      .twiddle_h_rsc_0_10_WSTRB(twiddle_h_rsc_0_10_WSTRB),
      .twiddle_h_rsc_0_10_WDATA(twiddle_h_rsc_0_10_WDATA),
      .twiddle_h_rsc_0_10_AWREADY(twiddle_h_rsc_0_10_AWREADY),
      .twiddle_h_rsc_0_10_AWVALID(twiddle_h_rsc_0_10_AWVALID),
      .twiddle_h_rsc_0_10_AWUSER(twiddle_h_rsc_0_10_AWUSER),
      .twiddle_h_rsc_0_10_AWREGION(twiddle_h_rsc_0_10_AWREGION),
      .twiddle_h_rsc_0_10_AWQOS(twiddle_h_rsc_0_10_AWQOS),
      .twiddle_h_rsc_0_10_AWPROT(twiddle_h_rsc_0_10_AWPROT),
      .twiddle_h_rsc_0_10_AWCACHE(twiddle_h_rsc_0_10_AWCACHE),
      .twiddle_h_rsc_0_10_AWLOCK(twiddle_h_rsc_0_10_AWLOCK),
      .twiddle_h_rsc_0_10_AWBURST(twiddle_h_rsc_0_10_AWBURST),
      .twiddle_h_rsc_0_10_AWSIZE(twiddle_h_rsc_0_10_AWSIZE),
      .twiddle_h_rsc_0_10_AWLEN(twiddle_h_rsc_0_10_AWLEN),
      .twiddle_h_rsc_0_10_AWADDR(twiddle_h_rsc_0_10_AWADDR),
      .twiddle_h_rsc_0_10_AWID(twiddle_h_rsc_0_10_AWID),
      .twiddle_h_rsc_triosy_0_10_lz(twiddle_h_rsc_triosy_0_10_lz),
      .twiddle_h_rsc_0_11_s_tdone(twiddle_h_rsc_0_11_s_tdone),
      .twiddle_h_rsc_0_11_tr_write_done(twiddle_h_rsc_0_11_tr_write_done),
      .twiddle_h_rsc_0_11_RREADY(twiddle_h_rsc_0_11_RREADY),
      .twiddle_h_rsc_0_11_RVALID(twiddle_h_rsc_0_11_RVALID),
      .twiddle_h_rsc_0_11_RUSER(twiddle_h_rsc_0_11_RUSER),
      .twiddle_h_rsc_0_11_RLAST(twiddle_h_rsc_0_11_RLAST),
      .twiddle_h_rsc_0_11_RRESP(twiddle_h_rsc_0_11_RRESP),
      .twiddle_h_rsc_0_11_RDATA(twiddle_h_rsc_0_11_RDATA),
      .twiddle_h_rsc_0_11_RID(twiddle_h_rsc_0_11_RID),
      .twiddle_h_rsc_0_11_ARREADY(twiddle_h_rsc_0_11_ARREADY),
      .twiddle_h_rsc_0_11_ARVALID(twiddle_h_rsc_0_11_ARVALID),
      .twiddle_h_rsc_0_11_ARUSER(twiddle_h_rsc_0_11_ARUSER),
      .twiddle_h_rsc_0_11_ARREGION(twiddle_h_rsc_0_11_ARREGION),
      .twiddle_h_rsc_0_11_ARQOS(twiddle_h_rsc_0_11_ARQOS),
      .twiddle_h_rsc_0_11_ARPROT(twiddle_h_rsc_0_11_ARPROT),
      .twiddle_h_rsc_0_11_ARCACHE(twiddle_h_rsc_0_11_ARCACHE),
      .twiddle_h_rsc_0_11_ARLOCK(twiddle_h_rsc_0_11_ARLOCK),
      .twiddle_h_rsc_0_11_ARBURST(twiddle_h_rsc_0_11_ARBURST),
      .twiddle_h_rsc_0_11_ARSIZE(twiddle_h_rsc_0_11_ARSIZE),
      .twiddle_h_rsc_0_11_ARLEN(twiddle_h_rsc_0_11_ARLEN),
      .twiddle_h_rsc_0_11_ARADDR(twiddle_h_rsc_0_11_ARADDR),
      .twiddle_h_rsc_0_11_ARID(twiddle_h_rsc_0_11_ARID),
      .twiddle_h_rsc_0_11_BREADY(twiddle_h_rsc_0_11_BREADY),
      .twiddle_h_rsc_0_11_BVALID(twiddle_h_rsc_0_11_BVALID),
      .twiddle_h_rsc_0_11_BUSER(twiddle_h_rsc_0_11_BUSER),
      .twiddle_h_rsc_0_11_BRESP(twiddle_h_rsc_0_11_BRESP),
      .twiddle_h_rsc_0_11_BID(twiddle_h_rsc_0_11_BID),
      .twiddle_h_rsc_0_11_WREADY(twiddle_h_rsc_0_11_WREADY),
      .twiddle_h_rsc_0_11_WVALID(twiddle_h_rsc_0_11_WVALID),
      .twiddle_h_rsc_0_11_WUSER(twiddle_h_rsc_0_11_WUSER),
      .twiddle_h_rsc_0_11_WLAST(twiddle_h_rsc_0_11_WLAST),
      .twiddle_h_rsc_0_11_WSTRB(twiddle_h_rsc_0_11_WSTRB),
      .twiddle_h_rsc_0_11_WDATA(twiddle_h_rsc_0_11_WDATA),
      .twiddle_h_rsc_0_11_AWREADY(twiddle_h_rsc_0_11_AWREADY),
      .twiddle_h_rsc_0_11_AWVALID(twiddle_h_rsc_0_11_AWVALID),
      .twiddle_h_rsc_0_11_AWUSER(twiddle_h_rsc_0_11_AWUSER),
      .twiddle_h_rsc_0_11_AWREGION(twiddle_h_rsc_0_11_AWREGION),
      .twiddle_h_rsc_0_11_AWQOS(twiddle_h_rsc_0_11_AWQOS),
      .twiddle_h_rsc_0_11_AWPROT(twiddle_h_rsc_0_11_AWPROT),
      .twiddle_h_rsc_0_11_AWCACHE(twiddle_h_rsc_0_11_AWCACHE),
      .twiddle_h_rsc_0_11_AWLOCK(twiddle_h_rsc_0_11_AWLOCK),
      .twiddle_h_rsc_0_11_AWBURST(twiddle_h_rsc_0_11_AWBURST),
      .twiddle_h_rsc_0_11_AWSIZE(twiddle_h_rsc_0_11_AWSIZE),
      .twiddle_h_rsc_0_11_AWLEN(twiddle_h_rsc_0_11_AWLEN),
      .twiddle_h_rsc_0_11_AWADDR(twiddle_h_rsc_0_11_AWADDR),
      .twiddle_h_rsc_0_11_AWID(twiddle_h_rsc_0_11_AWID),
      .twiddle_h_rsc_triosy_0_11_lz(twiddle_h_rsc_triosy_0_11_lz),
      .twiddle_h_rsc_0_12_s_tdone(twiddle_h_rsc_0_12_s_tdone),
      .twiddle_h_rsc_0_12_tr_write_done(twiddle_h_rsc_0_12_tr_write_done),
      .twiddle_h_rsc_0_12_RREADY(twiddle_h_rsc_0_12_RREADY),
      .twiddle_h_rsc_0_12_RVALID(twiddle_h_rsc_0_12_RVALID),
      .twiddle_h_rsc_0_12_RUSER(twiddle_h_rsc_0_12_RUSER),
      .twiddle_h_rsc_0_12_RLAST(twiddle_h_rsc_0_12_RLAST),
      .twiddle_h_rsc_0_12_RRESP(twiddle_h_rsc_0_12_RRESP),
      .twiddle_h_rsc_0_12_RDATA(twiddle_h_rsc_0_12_RDATA),
      .twiddle_h_rsc_0_12_RID(twiddle_h_rsc_0_12_RID),
      .twiddle_h_rsc_0_12_ARREADY(twiddle_h_rsc_0_12_ARREADY),
      .twiddle_h_rsc_0_12_ARVALID(twiddle_h_rsc_0_12_ARVALID),
      .twiddle_h_rsc_0_12_ARUSER(twiddle_h_rsc_0_12_ARUSER),
      .twiddle_h_rsc_0_12_ARREGION(twiddle_h_rsc_0_12_ARREGION),
      .twiddle_h_rsc_0_12_ARQOS(twiddle_h_rsc_0_12_ARQOS),
      .twiddle_h_rsc_0_12_ARPROT(twiddle_h_rsc_0_12_ARPROT),
      .twiddle_h_rsc_0_12_ARCACHE(twiddle_h_rsc_0_12_ARCACHE),
      .twiddle_h_rsc_0_12_ARLOCK(twiddle_h_rsc_0_12_ARLOCK),
      .twiddle_h_rsc_0_12_ARBURST(twiddle_h_rsc_0_12_ARBURST),
      .twiddle_h_rsc_0_12_ARSIZE(twiddle_h_rsc_0_12_ARSIZE),
      .twiddle_h_rsc_0_12_ARLEN(twiddle_h_rsc_0_12_ARLEN),
      .twiddle_h_rsc_0_12_ARADDR(twiddle_h_rsc_0_12_ARADDR),
      .twiddle_h_rsc_0_12_ARID(twiddle_h_rsc_0_12_ARID),
      .twiddle_h_rsc_0_12_BREADY(twiddle_h_rsc_0_12_BREADY),
      .twiddle_h_rsc_0_12_BVALID(twiddle_h_rsc_0_12_BVALID),
      .twiddle_h_rsc_0_12_BUSER(twiddle_h_rsc_0_12_BUSER),
      .twiddle_h_rsc_0_12_BRESP(twiddle_h_rsc_0_12_BRESP),
      .twiddle_h_rsc_0_12_BID(twiddle_h_rsc_0_12_BID),
      .twiddle_h_rsc_0_12_WREADY(twiddle_h_rsc_0_12_WREADY),
      .twiddle_h_rsc_0_12_WVALID(twiddle_h_rsc_0_12_WVALID),
      .twiddle_h_rsc_0_12_WUSER(twiddle_h_rsc_0_12_WUSER),
      .twiddle_h_rsc_0_12_WLAST(twiddle_h_rsc_0_12_WLAST),
      .twiddle_h_rsc_0_12_WSTRB(twiddle_h_rsc_0_12_WSTRB),
      .twiddle_h_rsc_0_12_WDATA(twiddle_h_rsc_0_12_WDATA),
      .twiddle_h_rsc_0_12_AWREADY(twiddle_h_rsc_0_12_AWREADY),
      .twiddle_h_rsc_0_12_AWVALID(twiddle_h_rsc_0_12_AWVALID),
      .twiddle_h_rsc_0_12_AWUSER(twiddle_h_rsc_0_12_AWUSER),
      .twiddle_h_rsc_0_12_AWREGION(twiddle_h_rsc_0_12_AWREGION),
      .twiddle_h_rsc_0_12_AWQOS(twiddle_h_rsc_0_12_AWQOS),
      .twiddle_h_rsc_0_12_AWPROT(twiddle_h_rsc_0_12_AWPROT),
      .twiddle_h_rsc_0_12_AWCACHE(twiddle_h_rsc_0_12_AWCACHE),
      .twiddle_h_rsc_0_12_AWLOCK(twiddle_h_rsc_0_12_AWLOCK),
      .twiddle_h_rsc_0_12_AWBURST(twiddle_h_rsc_0_12_AWBURST),
      .twiddle_h_rsc_0_12_AWSIZE(twiddle_h_rsc_0_12_AWSIZE),
      .twiddle_h_rsc_0_12_AWLEN(twiddle_h_rsc_0_12_AWLEN),
      .twiddle_h_rsc_0_12_AWADDR(twiddle_h_rsc_0_12_AWADDR),
      .twiddle_h_rsc_0_12_AWID(twiddle_h_rsc_0_12_AWID),
      .twiddle_h_rsc_triosy_0_12_lz(twiddle_h_rsc_triosy_0_12_lz),
      .twiddle_h_rsc_0_13_s_tdone(twiddle_h_rsc_0_13_s_tdone),
      .twiddle_h_rsc_0_13_tr_write_done(twiddle_h_rsc_0_13_tr_write_done),
      .twiddle_h_rsc_0_13_RREADY(twiddle_h_rsc_0_13_RREADY),
      .twiddle_h_rsc_0_13_RVALID(twiddle_h_rsc_0_13_RVALID),
      .twiddle_h_rsc_0_13_RUSER(twiddle_h_rsc_0_13_RUSER),
      .twiddle_h_rsc_0_13_RLAST(twiddle_h_rsc_0_13_RLAST),
      .twiddle_h_rsc_0_13_RRESP(twiddle_h_rsc_0_13_RRESP),
      .twiddle_h_rsc_0_13_RDATA(twiddle_h_rsc_0_13_RDATA),
      .twiddle_h_rsc_0_13_RID(twiddle_h_rsc_0_13_RID),
      .twiddle_h_rsc_0_13_ARREADY(twiddle_h_rsc_0_13_ARREADY),
      .twiddle_h_rsc_0_13_ARVALID(twiddle_h_rsc_0_13_ARVALID),
      .twiddle_h_rsc_0_13_ARUSER(twiddle_h_rsc_0_13_ARUSER),
      .twiddle_h_rsc_0_13_ARREGION(twiddle_h_rsc_0_13_ARREGION),
      .twiddle_h_rsc_0_13_ARQOS(twiddle_h_rsc_0_13_ARQOS),
      .twiddle_h_rsc_0_13_ARPROT(twiddle_h_rsc_0_13_ARPROT),
      .twiddle_h_rsc_0_13_ARCACHE(twiddle_h_rsc_0_13_ARCACHE),
      .twiddle_h_rsc_0_13_ARLOCK(twiddle_h_rsc_0_13_ARLOCK),
      .twiddle_h_rsc_0_13_ARBURST(twiddle_h_rsc_0_13_ARBURST),
      .twiddle_h_rsc_0_13_ARSIZE(twiddle_h_rsc_0_13_ARSIZE),
      .twiddle_h_rsc_0_13_ARLEN(twiddle_h_rsc_0_13_ARLEN),
      .twiddle_h_rsc_0_13_ARADDR(twiddle_h_rsc_0_13_ARADDR),
      .twiddle_h_rsc_0_13_ARID(twiddle_h_rsc_0_13_ARID),
      .twiddle_h_rsc_0_13_BREADY(twiddle_h_rsc_0_13_BREADY),
      .twiddle_h_rsc_0_13_BVALID(twiddle_h_rsc_0_13_BVALID),
      .twiddle_h_rsc_0_13_BUSER(twiddle_h_rsc_0_13_BUSER),
      .twiddle_h_rsc_0_13_BRESP(twiddle_h_rsc_0_13_BRESP),
      .twiddle_h_rsc_0_13_BID(twiddle_h_rsc_0_13_BID),
      .twiddle_h_rsc_0_13_WREADY(twiddle_h_rsc_0_13_WREADY),
      .twiddle_h_rsc_0_13_WVALID(twiddle_h_rsc_0_13_WVALID),
      .twiddle_h_rsc_0_13_WUSER(twiddle_h_rsc_0_13_WUSER),
      .twiddle_h_rsc_0_13_WLAST(twiddle_h_rsc_0_13_WLAST),
      .twiddle_h_rsc_0_13_WSTRB(twiddle_h_rsc_0_13_WSTRB),
      .twiddle_h_rsc_0_13_WDATA(twiddle_h_rsc_0_13_WDATA),
      .twiddle_h_rsc_0_13_AWREADY(twiddle_h_rsc_0_13_AWREADY),
      .twiddle_h_rsc_0_13_AWVALID(twiddle_h_rsc_0_13_AWVALID),
      .twiddle_h_rsc_0_13_AWUSER(twiddle_h_rsc_0_13_AWUSER),
      .twiddle_h_rsc_0_13_AWREGION(twiddle_h_rsc_0_13_AWREGION),
      .twiddle_h_rsc_0_13_AWQOS(twiddle_h_rsc_0_13_AWQOS),
      .twiddle_h_rsc_0_13_AWPROT(twiddle_h_rsc_0_13_AWPROT),
      .twiddle_h_rsc_0_13_AWCACHE(twiddle_h_rsc_0_13_AWCACHE),
      .twiddle_h_rsc_0_13_AWLOCK(twiddle_h_rsc_0_13_AWLOCK),
      .twiddle_h_rsc_0_13_AWBURST(twiddle_h_rsc_0_13_AWBURST),
      .twiddle_h_rsc_0_13_AWSIZE(twiddle_h_rsc_0_13_AWSIZE),
      .twiddle_h_rsc_0_13_AWLEN(twiddle_h_rsc_0_13_AWLEN),
      .twiddle_h_rsc_0_13_AWADDR(twiddle_h_rsc_0_13_AWADDR),
      .twiddle_h_rsc_0_13_AWID(twiddle_h_rsc_0_13_AWID),
      .twiddle_h_rsc_triosy_0_13_lz(twiddle_h_rsc_triosy_0_13_lz),
      .twiddle_h_rsc_0_14_s_tdone(twiddle_h_rsc_0_14_s_tdone),
      .twiddle_h_rsc_0_14_tr_write_done(twiddle_h_rsc_0_14_tr_write_done),
      .twiddle_h_rsc_0_14_RREADY(twiddle_h_rsc_0_14_RREADY),
      .twiddle_h_rsc_0_14_RVALID(twiddle_h_rsc_0_14_RVALID),
      .twiddle_h_rsc_0_14_RUSER(twiddle_h_rsc_0_14_RUSER),
      .twiddle_h_rsc_0_14_RLAST(twiddle_h_rsc_0_14_RLAST),
      .twiddle_h_rsc_0_14_RRESP(twiddle_h_rsc_0_14_RRESP),
      .twiddle_h_rsc_0_14_RDATA(twiddle_h_rsc_0_14_RDATA),
      .twiddle_h_rsc_0_14_RID(twiddle_h_rsc_0_14_RID),
      .twiddle_h_rsc_0_14_ARREADY(twiddle_h_rsc_0_14_ARREADY),
      .twiddle_h_rsc_0_14_ARVALID(twiddle_h_rsc_0_14_ARVALID),
      .twiddle_h_rsc_0_14_ARUSER(twiddle_h_rsc_0_14_ARUSER),
      .twiddle_h_rsc_0_14_ARREGION(twiddle_h_rsc_0_14_ARREGION),
      .twiddle_h_rsc_0_14_ARQOS(twiddle_h_rsc_0_14_ARQOS),
      .twiddle_h_rsc_0_14_ARPROT(twiddle_h_rsc_0_14_ARPROT),
      .twiddle_h_rsc_0_14_ARCACHE(twiddle_h_rsc_0_14_ARCACHE),
      .twiddle_h_rsc_0_14_ARLOCK(twiddle_h_rsc_0_14_ARLOCK),
      .twiddle_h_rsc_0_14_ARBURST(twiddle_h_rsc_0_14_ARBURST),
      .twiddle_h_rsc_0_14_ARSIZE(twiddle_h_rsc_0_14_ARSIZE),
      .twiddle_h_rsc_0_14_ARLEN(twiddle_h_rsc_0_14_ARLEN),
      .twiddle_h_rsc_0_14_ARADDR(twiddle_h_rsc_0_14_ARADDR),
      .twiddle_h_rsc_0_14_ARID(twiddle_h_rsc_0_14_ARID),
      .twiddle_h_rsc_0_14_BREADY(twiddle_h_rsc_0_14_BREADY),
      .twiddle_h_rsc_0_14_BVALID(twiddle_h_rsc_0_14_BVALID),
      .twiddle_h_rsc_0_14_BUSER(twiddle_h_rsc_0_14_BUSER),
      .twiddle_h_rsc_0_14_BRESP(twiddle_h_rsc_0_14_BRESP),
      .twiddle_h_rsc_0_14_BID(twiddle_h_rsc_0_14_BID),
      .twiddle_h_rsc_0_14_WREADY(twiddle_h_rsc_0_14_WREADY),
      .twiddle_h_rsc_0_14_WVALID(twiddle_h_rsc_0_14_WVALID),
      .twiddle_h_rsc_0_14_WUSER(twiddle_h_rsc_0_14_WUSER),
      .twiddle_h_rsc_0_14_WLAST(twiddle_h_rsc_0_14_WLAST),
      .twiddle_h_rsc_0_14_WSTRB(twiddle_h_rsc_0_14_WSTRB),
      .twiddle_h_rsc_0_14_WDATA(twiddle_h_rsc_0_14_WDATA),
      .twiddle_h_rsc_0_14_AWREADY(twiddle_h_rsc_0_14_AWREADY),
      .twiddle_h_rsc_0_14_AWVALID(twiddle_h_rsc_0_14_AWVALID),
      .twiddle_h_rsc_0_14_AWUSER(twiddle_h_rsc_0_14_AWUSER),
      .twiddle_h_rsc_0_14_AWREGION(twiddle_h_rsc_0_14_AWREGION),
      .twiddle_h_rsc_0_14_AWQOS(twiddle_h_rsc_0_14_AWQOS),
      .twiddle_h_rsc_0_14_AWPROT(twiddle_h_rsc_0_14_AWPROT),
      .twiddle_h_rsc_0_14_AWCACHE(twiddle_h_rsc_0_14_AWCACHE),
      .twiddle_h_rsc_0_14_AWLOCK(twiddle_h_rsc_0_14_AWLOCK),
      .twiddle_h_rsc_0_14_AWBURST(twiddle_h_rsc_0_14_AWBURST),
      .twiddle_h_rsc_0_14_AWSIZE(twiddle_h_rsc_0_14_AWSIZE),
      .twiddle_h_rsc_0_14_AWLEN(twiddle_h_rsc_0_14_AWLEN),
      .twiddle_h_rsc_0_14_AWADDR(twiddle_h_rsc_0_14_AWADDR),
      .twiddle_h_rsc_0_14_AWID(twiddle_h_rsc_0_14_AWID),
      .twiddle_h_rsc_triosy_0_14_lz(twiddle_h_rsc_triosy_0_14_lz),
      .twiddle_h_rsc_0_15_s_tdone(twiddle_h_rsc_0_15_s_tdone),
      .twiddle_h_rsc_0_15_tr_write_done(twiddle_h_rsc_0_15_tr_write_done),
      .twiddle_h_rsc_0_15_RREADY(twiddle_h_rsc_0_15_RREADY),
      .twiddle_h_rsc_0_15_RVALID(twiddle_h_rsc_0_15_RVALID),
      .twiddle_h_rsc_0_15_RUSER(twiddle_h_rsc_0_15_RUSER),
      .twiddle_h_rsc_0_15_RLAST(twiddle_h_rsc_0_15_RLAST),
      .twiddle_h_rsc_0_15_RRESP(twiddle_h_rsc_0_15_RRESP),
      .twiddle_h_rsc_0_15_RDATA(twiddle_h_rsc_0_15_RDATA),
      .twiddle_h_rsc_0_15_RID(twiddle_h_rsc_0_15_RID),
      .twiddle_h_rsc_0_15_ARREADY(twiddle_h_rsc_0_15_ARREADY),
      .twiddle_h_rsc_0_15_ARVALID(twiddle_h_rsc_0_15_ARVALID),
      .twiddle_h_rsc_0_15_ARUSER(twiddle_h_rsc_0_15_ARUSER),
      .twiddle_h_rsc_0_15_ARREGION(twiddle_h_rsc_0_15_ARREGION),
      .twiddle_h_rsc_0_15_ARQOS(twiddle_h_rsc_0_15_ARQOS),
      .twiddle_h_rsc_0_15_ARPROT(twiddle_h_rsc_0_15_ARPROT),
      .twiddle_h_rsc_0_15_ARCACHE(twiddle_h_rsc_0_15_ARCACHE),
      .twiddle_h_rsc_0_15_ARLOCK(twiddle_h_rsc_0_15_ARLOCK),
      .twiddle_h_rsc_0_15_ARBURST(twiddle_h_rsc_0_15_ARBURST),
      .twiddle_h_rsc_0_15_ARSIZE(twiddle_h_rsc_0_15_ARSIZE),
      .twiddle_h_rsc_0_15_ARLEN(twiddle_h_rsc_0_15_ARLEN),
      .twiddle_h_rsc_0_15_ARADDR(twiddle_h_rsc_0_15_ARADDR),
      .twiddle_h_rsc_0_15_ARID(twiddle_h_rsc_0_15_ARID),
      .twiddle_h_rsc_0_15_BREADY(twiddle_h_rsc_0_15_BREADY),
      .twiddle_h_rsc_0_15_BVALID(twiddle_h_rsc_0_15_BVALID),
      .twiddle_h_rsc_0_15_BUSER(twiddle_h_rsc_0_15_BUSER),
      .twiddle_h_rsc_0_15_BRESP(twiddle_h_rsc_0_15_BRESP),
      .twiddle_h_rsc_0_15_BID(twiddle_h_rsc_0_15_BID),
      .twiddle_h_rsc_0_15_WREADY(twiddle_h_rsc_0_15_WREADY),
      .twiddle_h_rsc_0_15_WVALID(twiddle_h_rsc_0_15_WVALID),
      .twiddle_h_rsc_0_15_WUSER(twiddle_h_rsc_0_15_WUSER),
      .twiddle_h_rsc_0_15_WLAST(twiddle_h_rsc_0_15_WLAST),
      .twiddle_h_rsc_0_15_WSTRB(twiddle_h_rsc_0_15_WSTRB),
      .twiddle_h_rsc_0_15_WDATA(twiddle_h_rsc_0_15_WDATA),
      .twiddle_h_rsc_0_15_AWREADY(twiddle_h_rsc_0_15_AWREADY),
      .twiddle_h_rsc_0_15_AWVALID(twiddle_h_rsc_0_15_AWVALID),
      .twiddle_h_rsc_0_15_AWUSER(twiddle_h_rsc_0_15_AWUSER),
      .twiddle_h_rsc_0_15_AWREGION(twiddle_h_rsc_0_15_AWREGION),
      .twiddle_h_rsc_0_15_AWQOS(twiddle_h_rsc_0_15_AWQOS),
      .twiddle_h_rsc_0_15_AWPROT(twiddle_h_rsc_0_15_AWPROT),
      .twiddle_h_rsc_0_15_AWCACHE(twiddle_h_rsc_0_15_AWCACHE),
      .twiddle_h_rsc_0_15_AWLOCK(twiddle_h_rsc_0_15_AWLOCK),
      .twiddle_h_rsc_0_15_AWBURST(twiddle_h_rsc_0_15_AWBURST),
      .twiddle_h_rsc_0_15_AWSIZE(twiddle_h_rsc_0_15_AWSIZE),
      .twiddle_h_rsc_0_15_AWLEN(twiddle_h_rsc_0_15_AWLEN),
      .twiddle_h_rsc_0_15_AWADDR(twiddle_h_rsc_0_15_AWADDR),
      .twiddle_h_rsc_0_15_AWID(twiddle_h_rsc_0_15_AWID),
      .twiddle_h_rsc_triosy_0_15_lz(twiddle_h_rsc_triosy_0_15_lz),
      .yt_rsc_0_0_i_clken_d(yt_rsc_0_0_i_clken_d),
      .yt_rsc_0_0_i_q_d(yt_rsc_0_0_i_q_d),
      .yt_rsc_0_1_i_q_d(yt_rsc_0_1_i_q_d),
      .yt_rsc_0_2_i_q_d(yt_rsc_0_2_i_q_d),
      .yt_rsc_0_3_i_q_d(yt_rsc_0_3_i_q_d),
      .yt_rsc_0_4_i_q_d(yt_rsc_0_4_i_q_d),
      .yt_rsc_0_5_i_q_d(yt_rsc_0_5_i_q_d),
      .yt_rsc_0_6_i_q_d(yt_rsc_0_6_i_q_d),
      .yt_rsc_0_7_i_q_d(yt_rsc_0_7_i_q_d),
      .yt_rsc_0_8_i_q_d(yt_rsc_0_8_i_q_d),
      .yt_rsc_0_9_i_q_d(yt_rsc_0_9_i_q_d),
      .yt_rsc_0_10_i_q_d(yt_rsc_0_10_i_q_d),
      .yt_rsc_0_11_i_q_d(yt_rsc_0_11_i_q_d),
      .yt_rsc_0_12_i_q_d(yt_rsc_0_12_i_q_d),
      .yt_rsc_0_13_i_q_d(yt_rsc_0_13_i_q_d),
      .yt_rsc_0_14_i_q_d(yt_rsc_0_14_i_q_d),
      .yt_rsc_0_15_i_q_d(yt_rsc_0_15_i_q_d),
      .yt_rsc_0_16_i_clken_d(yt_rsc_0_16_i_clken_d),
      .yt_rsc_0_16_i_q_d(yt_rsc_0_16_i_q_d),
      .yt_rsc_0_17_i_q_d(yt_rsc_0_17_i_q_d),
      .yt_rsc_0_18_i_q_d(yt_rsc_0_18_i_q_d),
      .yt_rsc_0_19_i_q_d(yt_rsc_0_19_i_q_d),
      .yt_rsc_0_20_i_q_d(yt_rsc_0_20_i_q_d),
      .yt_rsc_0_21_i_q_d(yt_rsc_0_21_i_q_d),
      .yt_rsc_0_22_i_q_d(yt_rsc_0_22_i_q_d),
      .yt_rsc_0_23_i_q_d(yt_rsc_0_23_i_q_d),
      .yt_rsc_0_24_i_q_d(yt_rsc_0_24_i_q_d),
      .yt_rsc_0_25_i_q_d(yt_rsc_0_25_i_q_d),
      .yt_rsc_0_26_i_q_d(yt_rsc_0_26_i_q_d),
      .yt_rsc_0_27_i_q_d(yt_rsc_0_27_i_q_d),
      .yt_rsc_0_28_i_q_d(yt_rsc_0_28_i_q_d),
      .yt_rsc_0_29_i_q_d(yt_rsc_0_29_i_q_d),
      .yt_rsc_0_30_i_q_d(yt_rsc_0_30_i_q_d),
      .yt_rsc_0_31_i_q_d(yt_rsc_0_31_i_q_d),
      .yt_rsc_1_0_i_clken_d(yt_rsc_1_0_i_clken_d),
      .yt_rsc_1_0_i_d_d(yt_rsc_1_0_i_d_d),
      .yt_rsc_1_0_i_q_d(yt_rsc_1_0_i_q_d),
      .yt_rsc_1_1_i_d_d(yt_rsc_1_1_i_d_d),
      .yt_rsc_1_1_i_q_d(yt_rsc_1_1_i_q_d),
      .yt_rsc_1_2_i_d_d(yt_rsc_1_2_i_d_d),
      .yt_rsc_1_2_i_q_d(yt_rsc_1_2_i_q_d),
      .yt_rsc_1_3_i_d_d(yt_rsc_1_3_i_d_d),
      .yt_rsc_1_3_i_q_d(yt_rsc_1_3_i_q_d),
      .yt_rsc_1_4_i_d_d(yt_rsc_1_4_i_d_d),
      .yt_rsc_1_4_i_q_d(yt_rsc_1_4_i_q_d),
      .yt_rsc_1_5_i_d_d(yt_rsc_1_5_i_d_d),
      .yt_rsc_1_5_i_q_d(yt_rsc_1_5_i_q_d),
      .yt_rsc_1_6_i_d_d(yt_rsc_1_6_i_d_d),
      .yt_rsc_1_6_i_q_d(yt_rsc_1_6_i_q_d),
      .yt_rsc_1_7_i_d_d(yt_rsc_1_7_i_d_d),
      .yt_rsc_1_7_i_q_d(yt_rsc_1_7_i_q_d),
      .yt_rsc_1_8_i_d_d(yt_rsc_1_8_i_d_d),
      .yt_rsc_1_8_i_q_d(yt_rsc_1_8_i_q_d),
      .yt_rsc_1_9_i_d_d(yt_rsc_1_9_i_d_d),
      .yt_rsc_1_9_i_q_d(yt_rsc_1_9_i_q_d),
      .yt_rsc_1_10_i_d_d(yt_rsc_1_10_i_d_d),
      .yt_rsc_1_10_i_q_d(yt_rsc_1_10_i_q_d),
      .yt_rsc_1_11_i_d_d(yt_rsc_1_11_i_d_d),
      .yt_rsc_1_11_i_q_d(yt_rsc_1_11_i_q_d),
      .yt_rsc_1_12_i_d_d(yt_rsc_1_12_i_d_d),
      .yt_rsc_1_12_i_q_d(yt_rsc_1_12_i_q_d),
      .yt_rsc_1_13_i_d_d(yt_rsc_1_13_i_d_d),
      .yt_rsc_1_13_i_q_d(yt_rsc_1_13_i_q_d),
      .yt_rsc_1_14_i_d_d(yt_rsc_1_14_i_d_d),
      .yt_rsc_1_14_i_q_d(yt_rsc_1_14_i_q_d),
      .yt_rsc_1_15_i_d_d(yt_rsc_1_15_i_d_d),
      .yt_rsc_1_15_i_q_d(yt_rsc_1_15_i_q_d),
      .yt_rsc_1_16_i_clken_d(yt_rsc_1_16_i_clken_d),
      .yt_rsc_1_16_i_d_d(yt_rsc_1_16_i_d_d),
      .yt_rsc_1_16_i_q_d(yt_rsc_1_16_i_q_d),
      .yt_rsc_1_17_i_d_d(yt_rsc_1_17_i_d_d),
      .yt_rsc_1_17_i_q_d(yt_rsc_1_17_i_q_d),
      .yt_rsc_1_18_i_d_d(yt_rsc_1_18_i_d_d),
      .yt_rsc_1_18_i_q_d(yt_rsc_1_18_i_q_d),
      .yt_rsc_1_19_i_d_d(yt_rsc_1_19_i_d_d),
      .yt_rsc_1_19_i_q_d(yt_rsc_1_19_i_q_d),
      .yt_rsc_1_20_i_d_d(yt_rsc_1_20_i_d_d),
      .yt_rsc_1_20_i_q_d(yt_rsc_1_20_i_q_d),
      .yt_rsc_1_21_i_d_d(yt_rsc_1_21_i_d_d),
      .yt_rsc_1_21_i_q_d(yt_rsc_1_21_i_q_d),
      .yt_rsc_1_22_i_d_d(yt_rsc_1_22_i_d_d),
      .yt_rsc_1_22_i_q_d(yt_rsc_1_22_i_q_d),
      .yt_rsc_1_23_i_d_d(yt_rsc_1_23_i_d_d),
      .yt_rsc_1_23_i_q_d(yt_rsc_1_23_i_q_d),
      .yt_rsc_1_24_i_d_d(yt_rsc_1_24_i_d_d),
      .yt_rsc_1_24_i_q_d(yt_rsc_1_24_i_q_d),
      .yt_rsc_1_25_i_d_d(yt_rsc_1_25_i_d_d),
      .yt_rsc_1_25_i_q_d(yt_rsc_1_25_i_q_d),
      .yt_rsc_1_26_i_d_d(yt_rsc_1_26_i_d_d),
      .yt_rsc_1_26_i_q_d(yt_rsc_1_26_i_q_d),
      .yt_rsc_1_27_i_d_d(yt_rsc_1_27_i_d_d),
      .yt_rsc_1_27_i_q_d(yt_rsc_1_27_i_q_d),
      .yt_rsc_1_28_i_d_d(yt_rsc_1_28_i_d_d),
      .yt_rsc_1_28_i_q_d(yt_rsc_1_28_i_q_d),
      .yt_rsc_1_29_i_d_d(yt_rsc_1_29_i_d_d),
      .yt_rsc_1_29_i_q_d(yt_rsc_1_29_i_q_d),
      .yt_rsc_1_30_i_d_d(yt_rsc_1_30_i_d_d),
      .yt_rsc_1_30_i_q_d(yt_rsc_1_30_i_q_d),
      .yt_rsc_1_31_i_d_d(yt_rsc_1_31_i_d_d),
      .yt_rsc_1_31_i_q_d(yt_rsc_1_31_i_q_d),
      .yt_rsc_0_0_i_d_d_pff(yt_rsc_0_0_i_d_d_iff),
      .yt_rsc_0_0_i_radr_d_pff(yt_rsc_0_0_i_radr_d_iff),
      .yt_rsc_0_0_i_wadr_d_pff(yt_rsc_0_0_i_wadr_d_iff),
      .yt_rsc_0_0_i_we_d_pff(yt_rsc_0_0_i_we_d_iff),
      .yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_pff(yt_rsc_0_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff),
      .yt_rsc_0_1_i_d_d_pff(yt_rsc_0_1_i_d_d_iff),
      .yt_rsc_0_2_i_d_d_pff(yt_rsc_0_2_i_d_d_iff),
      .yt_rsc_0_3_i_d_d_pff(yt_rsc_0_3_i_d_d_iff),
      .yt_rsc_0_4_i_d_d_pff(yt_rsc_0_4_i_d_d_iff),
      .yt_rsc_0_5_i_d_d_pff(yt_rsc_0_5_i_d_d_iff),
      .yt_rsc_0_6_i_d_d_pff(yt_rsc_0_6_i_d_d_iff),
      .yt_rsc_0_7_i_d_d_pff(yt_rsc_0_7_i_d_d_iff),
      .yt_rsc_0_8_i_d_d_pff(yt_rsc_0_8_i_d_d_iff),
      .yt_rsc_0_9_i_d_d_pff(yt_rsc_0_9_i_d_d_iff),
      .yt_rsc_0_10_i_d_d_pff(yt_rsc_0_10_i_d_d_iff),
      .yt_rsc_0_11_i_d_d_pff(yt_rsc_0_11_i_d_d_iff),
      .yt_rsc_0_12_i_d_d_pff(yt_rsc_0_12_i_d_d_iff),
      .yt_rsc_0_13_i_d_d_pff(yt_rsc_0_13_i_d_d_iff),
      .yt_rsc_0_14_i_d_d_pff(yt_rsc_0_14_i_d_d_iff),
      .yt_rsc_0_15_i_d_d_pff(yt_rsc_0_15_i_d_d_iff),
      .yt_rsc_0_16_i_wadr_d_pff(yt_rsc_0_16_i_wadr_d_iff),
      .yt_rsc_0_16_i_we_d_pff(yt_rsc_0_16_i_we_d_iff),
      .yt_rsc_1_0_i_wadr_d_pff(yt_rsc_1_0_i_wadr_d_iff),
      .yt_rsc_1_0_i_we_d_pff(yt_rsc_1_0_i_we_d_iff),
      .yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_pff(yt_rsc_1_0_i_readA_r_ram_ir_internal_RMASK_B_d_iff),
      .yt_rsc_1_16_i_wadr_d_pff(yt_rsc_1_16_i_wadr_d_iff),
      .yt_rsc_1_16_i_we_d_pff(yt_rsc_1_16_i_we_d_iff)
    );
endmodule



