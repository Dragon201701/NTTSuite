#!/bin/tclsh
# ----------------------------------------------------------------------------
# SLEC Flow using RTL Verilog netlist
#
#    HLS version: 8.2
#   SLEC version: SLEC design-checking-10.5c
#
#   Generated by: jd4691
# Generated date: Sun Sep 12 00:00:03 EDT 2021
#
# ----------------------------------------------------------------------------

# ############################################################################
# General Settings
# ############################################################################

global env
set MGC_HOME $env(MGC_HOME)
set SLEC_HOME [get_global __common_path]

set_global solver_cache_location workdir
set_global catapult_mem_map_threshold 32

set _Design_Already_Read [get_variable _Design_Already_Read -default 0]
if { ! $_Design_Already_Read } {

    # Options set from Catapult
    source -verbose -if_exists [get_variable slec_options -default ${testdir}/design_checker_options.tcl]
}

# ############################################################################
# Modes
# ############################################################################

set Run_Lint_Only [get_variable Run_Lint_Only -default 0]
set Run_Formal_Part_One [get_variable Run_Formal_Part_One -default 0]
set Run_Formal_Part_Two [get_variable Run_Formal_Part_Two -default 0]

if { $Run_Lint_Only + $Run_Formal_Part_One + $Run_Formal_Part_Two > 1 } {
    error "Multiple run-modes are not allowed. Specify only one of Run_Lint_Only, Run_Formal_Part_One, Run_Formal_Part_Two."
}

# ############################################################################
# Execution Variables
# ############################################################################

set Enable_DB_Flow          [get_variable Enable_DB_Flow -default 0]
set Induction_Depth         [get_variable Induction_Depth -default 1]

# Default Values
set Read_DB 0
set Read_Design 1
set Write_Design 1
set Verify 1

if { ! $Run_Lint_Only && $Enable_DB_Flow && [file exists ${testdir}/design.db] } {
     set Read_DB 1
}
if { $Run_Formal_Part_Two } {
     set Read_Design 0
}
if { $Run_Lint_Only || $Run_Formal_Part_One } {
     set Write_Design 0
}
if { $Run_Lint_Only || $Run_Formal_Part_One } {
     set Verify 0
}

# ############################################################################
# Read Design
# ############################################################################

if { $Read_DB } {

    puts "************************************************************"
    puts "Reading the spec design from a previously saved SLEC database (.db) file"
    puts "************************************************************"
    read_db ${testdir}/design.db

} else {

    if { $Read_Design } {

        if { $Run_Lint_Only } {
            set_global exit_after_lint_checks true
        }

        source -verbose -if_exists [get_variable pre_build_file -default ${testdir}/../../../design_checker_pre_build.tcl]

        set_global symbolic_memory_threshold_size 256

        append_global hls_exclude_paths "$MGC_HOME/shared/include, [get_global __install_path]/platform/common/, $MGC_HOME/pkgs/dcs_gcc/"
        append_global hls_exclude_files "${testdir}/spec_wrapper.cpp"
        append_global hls_exclude_files "${testdir}/spec_wrapper.h"
        set_global _lint_scope "peaseNTT"

        read_design -spec \
            -D__x86_64__ \
            -I${testdir}/../../../include \
            -I$MGC_HOME/shared/include \
            -I${testdir}/../../../src \
            ${testdir}/../../../src/utils.cpp \
            ${testdir}/../../../src/ntt.cpp \
            ${testdir}/../../../src/main.cpp \
            ${testdir}/spec_wrapper.cpp 

        link_design -spec -top spec_wrapper
    }

    if { $Write_Design } {
        build_db -spec
        write_db design.db
    }
}
set _Design_Already_Read 1

# The following setup is required only for the formal flow.
if { $Verify } {

# ############################################################################
# Setup reset constraints
# ############################################################################

set_reset_length -spec -length 1

set constraint_wf_name [create_waveform -name SPEC_RST -bitwidth 1 {{1 0+}}]
create_constraint -reset -waveform $constraint_wf_name {spec.rst}
set constraint_wf_name [create_waveform -name SPEC_RST_OFF -bitwidth 1 {{0+}}]
create_constraint -waveform $constraint_wf_name {spec.rst}

# ############################################################################
# Source user-supplied constraints file
# ############################################################################

source -verbose -if_exists [get_variable constraints_file -default ${testdir}/../../../design_checker_constraints.tcl]

# ############################################################################
# SLEC Intermediate Maps
# ############################################################################

# ############################################################################
# Verification Settings
# ############################################################################

verify -mode full_proof

if { [file exist [get_variable constraints_file -default ${testdir}/../../../design_checker_waivers.tcl] ] } {
     source -verbose [get_variable constraints_file -default ${testdir}/../../../design_checker_waivers.tcl]
     print_checks -format xml -outfile design_checks
     print_checks -format txt -outfile design_checks
}

}
