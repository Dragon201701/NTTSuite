-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    10.5c/896140 Production Release
--  HLS Date:       Sun Sep  6 22:45:38 PDT 2020
-- 
--  Generated by:   jd4691@newnano.poly.edu
--  Generated date: Tue Jun 22 23:22:37 2021
-- ----------------------------------------------------------------------

-- 
-- ------------------------------------------------------------------
--  Design Unit:    fir_filter_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_4_7_3_127_127_3_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.ccs_out_pkg_v1.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY fir_filter_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_4_7_3_127_127_3_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    radr : OUT STD_LOGIC_VECTOR (6 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (2 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (6 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (2 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (6 DOWNTO 0);
    wadr_d : IN STD_LOGIC_VECTOR (6 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END fir_filter_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_4_7_3_127_127_3_1_gen;

ARCHITECTURE v2 OF fir_filter_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_4_7_3_127_127_3_1_gen
    IS
  -- Default Constants

BEGIN
  clken <= (clken_d);
  q_d <= q;
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v2;

-- ------------------------------------------------------------------
--  Design Unit:    fir_filter_core_core_fsm
--  FSM Module
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.ccs_out_pkg_v1.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY fir_filter_core_core_fsm IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    b_rsci_wen_comp : IN STD_LOGIC;
    fsm_output : OUT STD_LOGIC_VECTOR (12 DOWNTO 0);
    x_vinit_C_1_tr0 : IN STD_LOGIC;
    SHIFT_LOOP_C_2_tr0 : IN STD_LOGIC;
    MAC_LOOP_C_1_tr0 : IN STD_LOGIC
  );
END fir_filter_core_core_fsm;

ARCHITECTURE v2 OF fir_filter_core_core_fsm IS
  -- Default Constants

  -- FSM State Type Declaration for fir_filter_core_core_fsm_1
  TYPE fir_filter_core_core_fsm_1_ST IS (core_rlp_C_0, x_vinit_C_0, x_vinit_C_1,
      main_C_0, SHIFT_LOOP_C_0, SHIFT_LOOP_C_1, SHIFT_LOOP_C_2, main_C_1, main_C_2,
      MAC_LOOP_C_0, MAC_LOOP_C_1, main_C_3, main_C_4);

  SIGNAL state_var : fir_filter_core_core_fsm_1_ST;
  SIGNAL state_var_NS : fir_filter_core_core_fsm_1_ST;

BEGIN
  fir_filter_core_core_fsm_1 : PROCESS (x_vinit_C_1_tr0, SHIFT_LOOP_C_2_tr0, MAC_LOOP_C_1_tr0,
      state_var)
  BEGIN
    CASE state_var IS
      WHEN x_vinit_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0000000000010");
        state_var_NS <= x_vinit_C_1;
      WHEN x_vinit_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0000000000100");
        IF ( x_vinit_C_1_tr0 = '1' ) THEN
          state_var_NS <= x_vinit_C_0;
        ELSE
          state_var_NS <= main_C_0;
        END IF;
      WHEN main_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0000000001000");
        state_var_NS <= SHIFT_LOOP_C_0;
      WHEN SHIFT_LOOP_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0000000010000");
        state_var_NS <= SHIFT_LOOP_C_1;
      WHEN SHIFT_LOOP_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0000000100000");
        state_var_NS <= SHIFT_LOOP_C_2;
      WHEN SHIFT_LOOP_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0000001000000");
        IF ( SHIFT_LOOP_C_2_tr0 = '1' ) THEN
          state_var_NS <= main_C_1;
        ELSE
          state_var_NS <= SHIFT_LOOP_C_0;
        END IF;
      WHEN main_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0000010000000");
        state_var_NS <= main_C_2;
      WHEN main_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0000100000000");
        state_var_NS <= MAC_LOOP_C_0;
      WHEN MAC_LOOP_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0001000000000");
        state_var_NS <= MAC_LOOP_C_1;
      WHEN MAC_LOOP_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0010000000000");
        IF ( MAC_LOOP_C_1_tr0 = '1' ) THEN
          state_var_NS <= main_C_3;
        ELSE
          state_var_NS <= MAC_LOOP_C_0;
        END IF;
      WHEN main_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0100000000000");
        state_var_NS <= main_C_4;
      WHEN main_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "1000000000000");
        state_var_NS <= main_C_0;
      -- core_rlp_C_0
      WHEN OTHERS =>
        fsm_output <= STD_LOGIC_VECTOR'( "0000000000001");
        state_var_NS <= x_vinit_C_0;
    END CASE;
  END PROCESS fir_filter_core_core_fsm_1;

  fir_filter_core_core_fsm_1_REG : PROCESS (clk)
  BEGIN
    IF clk'event AND ( clk = '1' ) THEN
      IF ( rst = '1' ) THEN
        state_var <= core_rlp_C_0;
      ELSE
        IF ( b_rsci_wen_comp = '1' ) THEN
          state_var <= state_var_NS;
        END IF;
      END IF;
    END IF;
  END PROCESS fir_filter_core_core_fsm_1_REG;

END v2;

-- ------------------------------------------------------------------
--  Design Unit:    fir_filter_core_staller
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.ccs_out_pkg_v1.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY fir_filter_core_staller IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    core_wten : OUT STD_LOGIC;
    b_rsci_wen_comp : IN STD_LOGIC
  );
END fir_filter_core_staller;

ARCHITECTURE v2 OF fir_filter_core_staller IS
  -- Default Constants

BEGIN
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        core_wten <= '0';
      ELSE
        core_wten <= NOT b_rsci_wen_comp;
      END IF;
    END IF;
  END PROCESS;
END v2;

-- ------------------------------------------------------------------
--  Design Unit:    fir_filter_core_y_rsc_triosy_obj_y_rsc_triosy_wait_ctrl
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.ccs_out_pkg_v1.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY fir_filter_core_y_rsc_triosy_obj_y_rsc_triosy_wait_ctrl IS
  PORT(
    core_wten : IN STD_LOGIC;
    y_rsc_triosy_obj_iswt0 : IN STD_LOGIC;
    y_rsc_triosy_obj_ld_core_sct : OUT STD_LOGIC
  );
END fir_filter_core_y_rsc_triosy_obj_y_rsc_triosy_wait_ctrl;

ARCHITECTURE v2 OF fir_filter_core_y_rsc_triosy_obj_y_rsc_triosy_wait_ctrl IS
  -- Default Constants

BEGIN
  y_rsc_triosy_obj_ld_core_sct <= y_rsc_triosy_obj_iswt0 AND (NOT core_wten);
END v2;

-- ------------------------------------------------------------------
--  Design Unit:    fir_filter_core_b_rsc_triosy_obj_b_rsc_triosy_wait_ctrl
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.ccs_out_pkg_v1.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY fir_filter_core_b_rsc_triosy_obj_b_rsc_triosy_wait_ctrl IS
  PORT(
    core_wten : IN STD_LOGIC;
    b_rsc_triosy_obj_iswt0 : IN STD_LOGIC;
    b_rsc_triosy_obj_ld_core_sct : OUT STD_LOGIC
  );
END fir_filter_core_b_rsc_triosy_obj_b_rsc_triosy_wait_ctrl;

ARCHITECTURE v2 OF fir_filter_core_b_rsc_triosy_obj_b_rsc_triosy_wait_ctrl IS
  -- Default Constants

BEGIN
  b_rsc_triosy_obj_ld_core_sct <= b_rsc_triosy_obj_iswt0 AND (NOT core_wten);
END v2;

-- ------------------------------------------------------------------
--  Design Unit:    fir_filter_core_i_sample_rsc_triosy_obj_i_sample_rsc_triosy_wait_ctrl
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.ccs_out_pkg_v1.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY fir_filter_core_i_sample_rsc_triosy_obj_i_sample_rsc_triosy_wait_ctrl IS
  PORT(
    core_wten : IN STD_LOGIC;
    i_sample_rsc_triosy_obj_iswt0 : IN STD_LOGIC;
    i_sample_rsc_triosy_obj_ld_core_sct : OUT STD_LOGIC
  );
END fir_filter_core_i_sample_rsc_triosy_obj_i_sample_rsc_triosy_wait_ctrl;

ARCHITECTURE v2 OF fir_filter_core_i_sample_rsc_triosy_obj_i_sample_rsc_triosy_wait_ctrl
    IS
  -- Default Constants

BEGIN
  i_sample_rsc_triosy_obj_ld_core_sct <= i_sample_rsc_triosy_obj_iswt0 AND (NOT core_wten);
END v2;

-- ------------------------------------------------------------------
--  Design Unit:    fir_filter_core_b_rsci_b_rsc_wait_dp
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.ccs_out_pkg_v1.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY fir_filter_core_b_rsci_b_rsc_wait_dp IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    b_rsci_oswt : IN STD_LOGIC;
    b_rsci_wen_comp : OUT STD_LOGIC;
    b_rsci_s_raddr_core : IN STD_LOGIC_VECTOR (6 DOWNTO 0);
    b_rsci_biwt : IN STD_LOGIC;
    b_rsci_bdwt : IN STD_LOGIC;
    b_rsci_bcwt : OUT STD_LOGIC;
    b_rsci_s_raddr : OUT STD_LOGIC_VECTOR (6 DOWNTO 0);
    b_rsci_s_raddr_core_sct : IN STD_LOGIC
  );
END fir_filter_core_b_rsci_b_rsc_wait_dp;

ARCHITECTURE v2 OF fir_filter_core_b_rsci_b_rsc_wait_dp IS
  -- Default Constants

  -- Output Reader Declarations
  SIGNAL b_rsci_bcwt_drv : STD_LOGIC;

  FUNCTION MUX_v_7_2_2(input_0 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(6 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

BEGIN
  -- Output Reader Assignments
  b_rsci_bcwt <= b_rsci_bcwt_drv;

  b_rsci_wen_comp <= (NOT b_rsci_oswt) OR b_rsci_biwt OR b_rsci_bcwt_drv;
  b_rsci_s_raddr <= MUX_v_7_2_2(STD_LOGIC_VECTOR'("0000000"), b_rsci_s_raddr_core,
      b_rsci_s_raddr_core_sct);
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        b_rsci_bcwt_drv <= '0';
      ELSE
        b_rsci_bcwt_drv <= NOT((NOT(b_rsci_bcwt_drv OR b_rsci_biwt)) OR b_rsci_bdwt);
      END IF;
    END IF;
  END PROCESS;
END v2;

-- ------------------------------------------------------------------
--  Design Unit:    fir_filter_core_b_rsci_b_rsc_wait_ctrl
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.ccs_out_pkg_v1.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY fir_filter_core_b_rsci_b_rsc_wait_ctrl IS
  PORT(
    core_wen : IN STD_LOGIC;
    b_rsci_oswt : IN STD_LOGIC;
    b_rsci_biwt : OUT STD_LOGIC;
    b_rsci_bdwt : OUT STD_LOGIC;
    b_rsci_bcwt : IN STD_LOGIC;
    b_rsci_s_re_core_sct : OUT STD_LOGIC;
    b_rsci_s_rrdy : IN STD_LOGIC
  );
END fir_filter_core_b_rsci_b_rsc_wait_ctrl;

ARCHITECTURE v2 OF fir_filter_core_b_rsci_b_rsc_wait_ctrl IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL b_rsci_ogwt : STD_LOGIC;

BEGIN
  b_rsci_bdwt <= b_rsci_oswt AND core_wen;
  b_rsci_biwt <= b_rsci_ogwt AND b_rsci_s_rrdy;
  b_rsci_ogwt <= b_rsci_oswt AND (NOT b_rsci_bcwt);
  b_rsci_s_re_core_sct <= b_rsci_ogwt;
END v2;

-- ------------------------------------------------------------------
--  Design Unit:    fir_filter_core_wait_dp
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.ccs_out_pkg_v1.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY fir_filter_core_wait_dp IS
  PORT(
    x_rsc_cgo_iro : IN STD_LOGIC;
    x_rsci_clken_d : OUT STD_LOGIC;
    core_wen : IN STD_LOGIC;
    x_rsc_cgo : IN STD_LOGIC
  );
END fir_filter_core_wait_dp;

ARCHITECTURE v2 OF fir_filter_core_wait_dp IS
  -- Default Constants

BEGIN
  x_rsci_clken_d <= core_wen AND (x_rsc_cgo OR x_rsc_cgo_iro);
END v2;

-- ------------------------------------------------------------------
--  Design Unit:    fir_filter_core_y_rsc_triosy_obj
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.ccs_out_pkg_v1.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY fir_filter_core_y_rsc_triosy_obj IS
  PORT(
    y_rsc_triosy_lz : OUT STD_LOGIC;
    core_wten : IN STD_LOGIC;
    y_rsc_triosy_obj_iswt0 : IN STD_LOGIC
  );
END fir_filter_core_y_rsc_triosy_obj;

ARCHITECTURE v2 OF fir_filter_core_y_rsc_triosy_obj IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL y_rsc_triosy_obj_ld_core_sct : STD_LOGIC;

  COMPONENT fir_filter_core_y_rsc_triosy_obj_y_rsc_triosy_wait_ctrl
    PORT(
      core_wten : IN STD_LOGIC;
      y_rsc_triosy_obj_iswt0 : IN STD_LOGIC;
      y_rsc_triosy_obj_ld_core_sct : OUT STD_LOGIC
    );
  END COMPONENT;
BEGIN
  y_rsc_triosy_obj : mgc_hls.mgc_io_sync_pkg_v2.mgc_io_sync_v2
    GENERIC MAP(
      valid => 0
      )
    PORT MAP(
      ld => y_rsc_triosy_obj_ld_core_sct,
      lz => y_rsc_triosy_lz
    );
  fir_filter_core_y_rsc_triosy_obj_y_rsc_triosy_wait_ctrl_inst : fir_filter_core_y_rsc_triosy_obj_y_rsc_triosy_wait_ctrl
    PORT MAP(
      core_wten => core_wten,
      y_rsc_triosy_obj_iswt0 => y_rsc_triosy_obj_iswt0,
      y_rsc_triosy_obj_ld_core_sct => y_rsc_triosy_obj_ld_core_sct
    );
END v2;

-- ------------------------------------------------------------------
--  Design Unit:    fir_filter_core_b_rsc_triosy_obj
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.ccs_out_pkg_v1.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY fir_filter_core_b_rsc_triosy_obj IS
  PORT(
    b_rsc_triosy_lz : OUT STD_LOGIC;
    core_wten : IN STD_LOGIC;
    b_rsc_triosy_obj_iswt0 : IN STD_LOGIC
  );
END fir_filter_core_b_rsc_triosy_obj;

ARCHITECTURE v2 OF fir_filter_core_b_rsc_triosy_obj IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL b_rsc_triosy_obj_ld_core_sct : STD_LOGIC;

  COMPONENT fir_filter_core_b_rsc_triosy_obj_b_rsc_triosy_wait_ctrl
    PORT(
      core_wten : IN STD_LOGIC;
      b_rsc_triosy_obj_iswt0 : IN STD_LOGIC;
      b_rsc_triosy_obj_ld_core_sct : OUT STD_LOGIC
    );
  END COMPONENT;
BEGIN
  b_rsc_triosy_obj : mgc_hls.mgc_io_sync_pkg_v2.mgc_io_sync_v2
    GENERIC MAP(
      valid => 0
      )
    PORT MAP(
      ld => b_rsc_triosy_obj_ld_core_sct,
      lz => b_rsc_triosy_lz
    );
  fir_filter_core_b_rsc_triosy_obj_b_rsc_triosy_wait_ctrl_inst : fir_filter_core_b_rsc_triosy_obj_b_rsc_triosy_wait_ctrl
    PORT MAP(
      core_wten => core_wten,
      b_rsc_triosy_obj_iswt0 => b_rsc_triosy_obj_iswt0,
      b_rsc_triosy_obj_ld_core_sct => b_rsc_triosy_obj_ld_core_sct
    );
END v2;

-- ------------------------------------------------------------------
--  Design Unit:    fir_filter_core_i_sample_rsc_triosy_obj
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.ccs_out_pkg_v1.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY fir_filter_core_i_sample_rsc_triosy_obj IS
  PORT(
    i_sample_rsc_triosy_lz : OUT STD_LOGIC;
    core_wten : IN STD_LOGIC;
    i_sample_rsc_triosy_obj_iswt0 : IN STD_LOGIC
  );
END fir_filter_core_i_sample_rsc_triosy_obj;

ARCHITECTURE v2 OF fir_filter_core_i_sample_rsc_triosy_obj IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL i_sample_rsc_triosy_obj_ld_core_sct : STD_LOGIC;

  COMPONENT fir_filter_core_i_sample_rsc_triosy_obj_i_sample_rsc_triosy_wait_ctrl
    PORT(
      core_wten : IN STD_LOGIC;
      i_sample_rsc_triosy_obj_iswt0 : IN STD_LOGIC;
      i_sample_rsc_triosy_obj_ld_core_sct : OUT STD_LOGIC
    );
  END COMPONENT;
BEGIN
  i_sample_rsc_triosy_obj : mgc_hls.mgc_io_sync_pkg_v2.mgc_io_sync_v2
    GENERIC MAP(
      valid => 0
      )
    PORT MAP(
      ld => i_sample_rsc_triosy_obj_ld_core_sct,
      lz => i_sample_rsc_triosy_lz
    );
  fir_filter_core_i_sample_rsc_triosy_obj_i_sample_rsc_triosy_wait_ctrl_inst : fir_filter_core_i_sample_rsc_triosy_obj_i_sample_rsc_triosy_wait_ctrl
    PORT MAP(
      core_wten => core_wten,
      i_sample_rsc_triosy_obj_iswt0 => i_sample_rsc_triosy_obj_iswt0,
      i_sample_rsc_triosy_obj_ld_core_sct => i_sample_rsc_triosy_obj_ld_core_sct
    );
END v2;

-- ------------------------------------------------------------------
--  Design Unit:    fir_filter_core_b_rsci
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.ccs_out_pkg_v1.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY fir_filter_core_b_rsci IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    b_rsc_s_tdone : IN STD_LOGIC;
    b_rsc_tr_write_done : IN STD_LOGIC;
    b_rsc_RREADY : IN STD_LOGIC;
    b_rsc_RVALID : OUT STD_LOGIC;
    b_rsc_RUSER : OUT STD_LOGIC;
    b_rsc_RLAST : OUT STD_LOGIC;
    b_rsc_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    b_rsc_RDATA : OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
    b_rsc_RID : OUT STD_LOGIC;
    b_rsc_ARREADY : OUT STD_LOGIC;
    b_rsc_ARVALID : IN STD_LOGIC;
    b_rsc_ARUSER : IN STD_LOGIC;
    b_rsc_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    b_rsc_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    b_rsc_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    b_rsc_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    b_rsc_ARLOCK : IN STD_LOGIC;
    b_rsc_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    b_rsc_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    b_rsc_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    b_rsc_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    b_rsc_ARID : IN STD_LOGIC;
    b_rsc_BREADY : IN STD_LOGIC;
    b_rsc_BVALID : OUT STD_LOGIC;
    b_rsc_BUSER : OUT STD_LOGIC;
    b_rsc_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    b_rsc_BID : OUT STD_LOGIC;
    b_rsc_WREADY : OUT STD_LOGIC;
    b_rsc_WVALID : IN STD_LOGIC;
    b_rsc_WUSER : IN STD_LOGIC;
    b_rsc_WLAST : IN STD_LOGIC;
    b_rsc_WSTRB : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    b_rsc_WDATA : IN STD_LOGIC_VECTOR (15 DOWNTO 0);
    b_rsc_AWREADY : OUT STD_LOGIC;
    b_rsc_AWVALID : IN STD_LOGIC;
    b_rsc_AWUSER : IN STD_LOGIC;
    b_rsc_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    b_rsc_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    b_rsc_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    b_rsc_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    b_rsc_AWLOCK : IN STD_LOGIC;
    b_rsc_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    b_rsc_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    b_rsc_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    b_rsc_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    b_rsc_AWID : IN STD_LOGIC;
    core_wen : IN STD_LOGIC;
    b_rsci_oswt : IN STD_LOGIC;
    b_rsci_wen_comp : OUT STD_LOGIC;
    b_rsci_s_raddr_core : IN STD_LOGIC_VECTOR (6 DOWNTO 0);
    b_rsci_s_din : OUT STD_LOGIC_VECTOR (9 DOWNTO 0)
  );
END fir_filter_core_b_rsci;

ARCHITECTURE v2 OF fir_filter_core_b_rsci IS
  -- Default Constants
  CONSTANT PWR : STD_LOGIC := '1';
  CONSTANT GND : STD_LOGIC := '0';

  -- Interconnect Declarations
  SIGNAL b_rsci_biwt : STD_LOGIC;
  SIGNAL b_rsci_bdwt : STD_LOGIC;
  SIGNAL b_rsci_bcwt : STD_LOGIC;
  SIGNAL b_rsci_s_re_core_sct : STD_LOGIC;
  SIGNAL b_rsci_s_raddr : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL b_rsci_s_rrdy : STD_LOGIC;
  SIGNAL b_rsci_s_wrdy : STD_LOGIC;
  SIGNAL b_rsc_is_idle : STD_LOGIC;
  SIGNAL b_rsci_s_din_pconst : STD_LOGIC_VECTOR (15 DOWNTO 0);

  SIGNAL b_rsci_AWID : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL b_rsci_AWADDR : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL b_rsci_AWLEN : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL b_rsci_AWSIZE : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL b_rsci_AWBURST : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL b_rsci_AWCACHE : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL b_rsci_AWPROT : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL b_rsci_AWQOS : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL b_rsci_AWREGION : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL b_rsci_AWUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL b_rsci_WDATA : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL b_rsci_WSTRB : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL b_rsci_WUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL b_rsci_BID : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL b_rsci_BRESP : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL b_rsci_BUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL b_rsci_ARID : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL b_rsci_ARADDR : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL b_rsci_ARLEN : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL b_rsci_ARSIZE : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL b_rsci_ARBURST : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL b_rsci_ARCACHE : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL b_rsci_ARPROT : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL b_rsci_ARQOS : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL b_rsci_ARREGION : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL b_rsci_ARUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL b_rsci_RID : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL b_rsci_RDATA : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL b_rsci_RRESP : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL b_rsci_RUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL b_rsci_s_raddr_1 : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL b_rsci_s_waddr : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL b_rsci_s_din_1 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL b_rsci_s_dout : STD_LOGIC_VECTOR (15 DOWNTO 0);

  COMPONENT fir_filter_core_b_rsci_b_rsc_wait_ctrl
    PORT(
      core_wen : IN STD_LOGIC;
      b_rsci_oswt : IN STD_LOGIC;
      b_rsci_biwt : OUT STD_LOGIC;
      b_rsci_bdwt : OUT STD_LOGIC;
      b_rsci_bcwt : IN STD_LOGIC;
      b_rsci_s_re_core_sct : OUT STD_LOGIC;
      b_rsci_s_rrdy : IN STD_LOGIC
    );
  END COMPONENT;
  COMPONENT fir_filter_core_b_rsci_b_rsc_wait_dp
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      b_rsci_oswt : IN STD_LOGIC;
      b_rsci_wen_comp : OUT STD_LOGIC;
      b_rsci_s_raddr_core : IN STD_LOGIC_VECTOR (6 DOWNTO 0);
      b_rsci_biwt : IN STD_LOGIC;
      b_rsci_bdwt : IN STD_LOGIC;
      b_rsci_bcwt : OUT STD_LOGIC;
      b_rsci_s_raddr : OUT STD_LOGIC_VECTOR (6 DOWNTO 0);
      b_rsci_s_raddr_core_sct : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL fir_filter_core_b_rsci_b_rsc_wait_dp_inst_b_rsci_s_raddr_core : STD_LOGIC_VECTOR
      (6 DOWNTO 0);
  SIGNAL fir_filter_core_b_rsci_b_rsc_wait_dp_inst_b_rsci_s_raddr : STD_LOGIC_VECTOR
      (6 DOWNTO 0);

BEGIN
  b_rsci : amba_lib.amba_comps.ccs_axi4_slave_mem
    GENERIC MAP(
      rscid => 0,
      depth => 127,
      op_width => 10,
      cwidth => 16,
      addr_w => 7,
      nopreload => 0,
      rst_ph => 0,
      ADDR_WIDTH => 12,
      DATA_WIDTH => 16,
      ID_WIDTH => 1,
      USER_WIDTH => 1,
      REGION_MAP_SIZE => 1,
      wBASE_ADDRESS => 0,
      rBASE_ADDRESS => 0
      )
    PORT MAP(
      ACLK => clk,
      ARESETn => '1',
      AWID => b_rsci_AWID,
      AWADDR => b_rsci_AWADDR,
      AWLEN => b_rsci_AWLEN,
      AWSIZE => b_rsci_AWSIZE,
      AWBURST => b_rsci_AWBURST,
      AWLOCK => b_rsc_AWLOCK,
      AWCACHE => b_rsci_AWCACHE,
      AWPROT => b_rsci_AWPROT,
      AWQOS => b_rsci_AWQOS,
      AWREGION => b_rsci_AWREGION,
      AWUSER => b_rsci_AWUSER,
      AWVALID => b_rsc_AWVALID,
      AWREADY => b_rsc_AWREADY,
      WDATA => b_rsci_WDATA,
      WSTRB => b_rsci_WSTRB,
      WLAST => b_rsc_WLAST,
      WUSER => b_rsci_WUSER,
      WVALID => b_rsc_WVALID,
      WREADY => b_rsc_WREADY,
      BID => b_rsci_BID,
      BRESP => b_rsci_BRESP,
      BUSER => b_rsci_BUSER,
      BVALID => b_rsc_BVALID,
      BREADY => b_rsc_BREADY,
      ARID => b_rsci_ARID,
      ARADDR => b_rsci_ARADDR,
      ARLEN => b_rsci_ARLEN,
      ARSIZE => b_rsci_ARSIZE,
      ARBURST => b_rsci_ARBURST,
      ARLOCK => b_rsc_ARLOCK,
      ARCACHE => b_rsci_ARCACHE,
      ARPROT => b_rsci_ARPROT,
      ARQOS => b_rsci_ARQOS,
      ARREGION => b_rsci_ARREGION,
      ARUSER => b_rsci_ARUSER,
      ARVALID => b_rsc_ARVALID,
      ARREADY => b_rsc_ARREADY,
      RID => b_rsci_RID,
      RDATA => b_rsci_RDATA,
      RRESP => b_rsci_RRESP,
      RLAST => b_rsc_RLAST,
      RUSER => b_rsci_RUSER,
      RVALID => b_rsc_RVALID,
      RREADY => b_rsc_RREADY,
      s_re => b_rsci_s_re_core_sct,
      s_we => '0',
      s_raddr => b_rsci_s_raddr_1,
      s_waddr => b_rsci_s_waddr,
      s_din => b_rsci_s_din_1,
      s_dout => b_rsci_s_dout,
      s_rrdy => b_rsci_s_rrdy,
      s_wrdy => b_rsci_s_wrdy,
      is_idle => b_rsc_is_idle,
      tr_write_done => b_rsc_tr_write_done,
      s_tdone => b_rsc_s_tdone
    );
  b_rsci_AWID(0) <= b_rsc_AWID;
  b_rsci_AWADDR <= b_rsc_AWADDR;
  b_rsci_AWLEN <= b_rsc_AWLEN;
  b_rsci_AWSIZE <= b_rsc_AWSIZE;
  b_rsci_AWBURST <= b_rsc_AWBURST;
  b_rsci_AWCACHE <= b_rsc_AWCACHE;
  b_rsci_AWPROT <= b_rsc_AWPROT;
  b_rsci_AWQOS <= b_rsc_AWQOS;
  b_rsci_AWREGION <= b_rsc_AWREGION;
  b_rsci_AWUSER(0) <= b_rsc_AWUSER;
  b_rsci_WDATA <= b_rsc_WDATA;
  b_rsci_WSTRB <= b_rsc_WSTRB;
  b_rsci_WUSER(0) <= b_rsc_WUSER;
  b_rsc_BID <= b_rsci_BID(0);
  b_rsc_BRESP <= b_rsci_BRESP;
  b_rsc_BUSER <= b_rsci_BUSER(0);
  b_rsci_ARID(0) <= b_rsc_ARID;
  b_rsci_ARADDR <= b_rsc_ARADDR;
  b_rsci_ARLEN <= b_rsc_ARLEN;
  b_rsci_ARSIZE <= b_rsc_ARSIZE;
  b_rsci_ARBURST <= b_rsc_ARBURST;
  b_rsci_ARCACHE <= b_rsc_ARCACHE;
  b_rsci_ARPROT <= b_rsc_ARPROT;
  b_rsci_ARQOS <= b_rsc_ARQOS;
  b_rsci_ARREGION <= b_rsc_ARREGION;
  b_rsci_ARUSER(0) <= b_rsc_ARUSER;
  b_rsc_RID <= b_rsci_RID(0);
  b_rsc_RDATA <= b_rsci_RDATA;
  b_rsc_RRESP <= b_rsci_RRESP;
  b_rsc_RUSER <= b_rsci_RUSER(0);
  b_rsci_s_raddr_1 <= b_rsci_s_raddr;
  b_rsci_s_waddr <= STD_LOGIC_VECTOR'( "0000000");
  b_rsci_s_din_pconst <= b_rsci_s_din_1;
  b_rsci_s_dout <= STD_LOGIC_VECTOR'( "0000000000000000");

  fir_filter_core_b_rsci_b_rsc_wait_ctrl_inst : fir_filter_core_b_rsci_b_rsc_wait_ctrl
    PORT MAP(
      core_wen => core_wen,
      b_rsci_oswt => b_rsci_oswt,
      b_rsci_biwt => b_rsci_biwt,
      b_rsci_bdwt => b_rsci_bdwt,
      b_rsci_bcwt => b_rsci_bcwt,
      b_rsci_s_re_core_sct => b_rsci_s_re_core_sct,
      b_rsci_s_rrdy => b_rsci_s_rrdy
    );
  fir_filter_core_b_rsci_b_rsc_wait_dp_inst : fir_filter_core_b_rsci_b_rsc_wait_dp
    PORT MAP(
      clk => clk,
      rst => rst,
      b_rsci_oswt => b_rsci_oswt,
      b_rsci_wen_comp => b_rsci_wen_comp,
      b_rsci_s_raddr_core => fir_filter_core_b_rsci_b_rsc_wait_dp_inst_b_rsci_s_raddr_core,
      b_rsci_biwt => b_rsci_biwt,
      b_rsci_bdwt => b_rsci_bdwt,
      b_rsci_bcwt => b_rsci_bcwt,
      b_rsci_s_raddr => fir_filter_core_b_rsci_b_rsc_wait_dp_inst_b_rsci_s_raddr,
      b_rsci_s_raddr_core_sct => b_rsci_s_re_core_sct
    );
  fir_filter_core_b_rsci_b_rsc_wait_dp_inst_b_rsci_s_raddr_core <= b_rsci_s_raddr_core;
  b_rsci_s_raddr <= fir_filter_core_b_rsci_b_rsc_wait_dp_inst_b_rsci_s_raddr;

  b_rsci_s_din <= b_rsci_s_din_pconst(9 DOWNTO 0);
END v2;

-- ------------------------------------------------------------------
--  Design Unit:    fir_filter_core
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.ccs_out_pkg_v1.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY fir_filter_core IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    i_sample_rsc_dat : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    i_sample_rsc_triosy_lz : OUT STD_LOGIC;
    b_rsc_s_tdone : IN STD_LOGIC;
    b_rsc_tr_write_done : IN STD_LOGIC;
    b_rsc_RREADY : IN STD_LOGIC;
    b_rsc_RVALID : OUT STD_LOGIC;
    b_rsc_RUSER : OUT STD_LOGIC;
    b_rsc_RLAST : OUT STD_LOGIC;
    b_rsc_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    b_rsc_RDATA : OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
    b_rsc_RID : OUT STD_LOGIC;
    b_rsc_ARREADY : OUT STD_LOGIC;
    b_rsc_ARVALID : IN STD_LOGIC;
    b_rsc_ARUSER : IN STD_LOGIC;
    b_rsc_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    b_rsc_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    b_rsc_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    b_rsc_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    b_rsc_ARLOCK : IN STD_LOGIC;
    b_rsc_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    b_rsc_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    b_rsc_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    b_rsc_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    b_rsc_ARID : IN STD_LOGIC;
    b_rsc_BREADY : IN STD_LOGIC;
    b_rsc_BVALID : OUT STD_LOGIC;
    b_rsc_BUSER : OUT STD_LOGIC;
    b_rsc_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    b_rsc_BID : OUT STD_LOGIC;
    b_rsc_WREADY : OUT STD_LOGIC;
    b_rsc_WVALID : IN STD_LOGIC;
    b_rsc_WUSER : IN STD_LOGIC;
    b_rsc_WLAST : IN STD_LOGIC;
    b_rsc_WSTRB : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    b_rsc_WDATA : IN STD_LOGIC_VECTOR (15 DOWNTO 0);
    b_rsc_AWREADY : OUT STD_LOGIC;
    b_rsc_AWVALID : IN STD_LOGIC;
    b_rsc_AWUSER : IN STD_LOGIC;
    b_rsc_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    b_rsc_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    b_rsc_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    b_rsc_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    b_rsc_AWLOCK : IN STD_LOGIC;
    b_rsc_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    b_rsc_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    b_rsc_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    b_rsc_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    b_rsc_AWID : IN STD_LOGIC;
    b_rsc_triosy_lz : OUT STD_LOGIC;
    y_rsc_dat : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    y_rsc_triosy_lz : OUT STD_LOGIC;
    x_rsci_clken_d : OUT STD_LOGIC;
    x_rsci_d_d : OUT STD_LOGIC_VECTOR (2 DOWNTO 0);
    x_rsci_q_d : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    x_rsci_radr_d : OUT STD_LOGIC_VECTOR (6 DOWNTO 0);
    x_rsci_wadr_d : OUT STD_LOGIC_VECTOR (6 DOWNTO 0);
    x_rsci_readA_r_ram_ir_internal_RMASK_B_d : OUT STD_LOGIC;
    x_rsci_we_d_pff : OUT STD_LOGIC
  );
END fir_filter_core;

ARCHITECTURE v2 OF fir_filter_core IS
  -- Default Constants
  CONSTANT PWR : STD_LOGIC := '1';
  CONSTANT GND : STD_LOGIC := '0';

  -- Interconnect Declarations
  SIGNAL i_sample_rsci_idat : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL core_wten : STD_LOGIC;
  SIGNAL b_rsci_wen_comp : STD_LOGIC;
  SIGNAL b_rsci_s_raddr_core : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL b_rsci_s_din : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL y_rsci_idat_8 : STD_LOGIC;
  SIGNAL y_rsci_idat_7_1 : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL y_rsci_idat_0 : STD_LOGIC;
  SIGNAL fsm_output : STD_LOGIC_VECTOR (12 DOWNTO 0);
  SIGNAL sum_sva : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL MAC_LOOP_slc_MAC_LOOP_acc_7_itm : STD_LOGIC;
  SIGNAL x_static_init_else_x_static_init_else_nor_itm : STD_LOGIC;
  SIGNAL slc_20_6_sats_sva_1 : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL reg_b_rsci_oswt_cse : STD_LOGIC;
  SIGNAL reg_x_rsc_cgo_cse : STD_LOGIC;
  SIGNAL reg_i_sample_rsc_triosy_obj_iswt0_cse : STD_LOGIC;
  SIGNAL reg_y_rsc_triosy_obj_iswt0_cse : STD_LOGIC;
  SIGNAL and_77_cse : STD_LOGIC;
  SIGNAL MAC_LOOP_n_and_cse : STD_LOGIC;
  SIGNAL or_24_cse : STD_LOGIC;
  SIGNAL nor_10_rmff : STD_LOGIC;
  SIGNAL i_sample_sva : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL z_out : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL MAC_LOOP_n_6_0_sva_1 : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL nor_ovfl_sva_1 : STD_LOGIC;
  SIGNAL and_unfl_sva_1 : STD_LOGIC;
  SIGNAL MAC_LOOP_mux_rgt : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL MAC_LOOP_slc_b_rsci_s_din_9_0_itm_9_7 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL MAC_LOOP_slc_b_rsci_s_din_9_0_itm_6_0 : STD_LOGIC_VECTOR (6 DOWNTO 0);

  SIGNAL nor_5_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL x_static_init_else_mux1h_1_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL nor_8_nl : STD_LOGIC;
  SIGNAL SHIFT_LOOP_acc_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL SHIFT_LOOP_mux_5_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL MAC_LOOP_acc_1_nl : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL MAC_LOOP_mul_nl : STD_LOGIC_VECTOR (12 DOWNTO 0);
  SIGNAL sum_not_1_nl : STD_LOGIC;
  SIGNAL x_static_init_else_mux_1_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL x_static_init_else_or_nl : STD_LOGIC;
  SIGNAL x_static_init_else_or_1_nl : STD_LOGIC;
  SIGNAL x_static_init_else_x_static_init_else_mux_1_nl : STD_LOGIC_VECTOR (6 DOWNTO
      0);
  SIGNAL x_static_init_else_x_static_init_else_or_1_nl : STD_LOGIC;
  SIGNAL i_sample_rsci_dat : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL i_sample_rsci_idat_1 : STD_LOGIC_VECTOR (2 DOWNTO 0);

  SIGNAL y_rsci_idat : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL y_rsci_dat : STD_LOGIC_VECTOR (8 DOWNTO 0);

  COMPONENT fir_filter_core_wait_dp
    PORT(
      x_rsc_cgo_iro : IN STD_LOGIC;
      x_rsci_clken_d : OUT STD_LOGIC;
      core_wen : IN STD_LOGIC;
      x_rsc_cgo : IN STD_LOGIC
    );
  END COMPONENT;
  COMPONENT fir_filter_core_b_rsci
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      b_rsc_s_tdone : IN STD_LOGIC;
      b_rsc_tr_write_done : IN STD_LOGIC;
      b_rsc_RREADY : IN STD_LOGIC;
      b_rsc_RVALID : OUT STD_LOGIC;
      b_rsc_RUSER : OUT STD_LOGIC;
      b_rsc_RLAST : OUT STD_LOGIC;
      b_rsc_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      b_rsc_RDATA : OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
      b_rsc_RID : OUT STD_LOGIC;
      b_rsc_ARREADY : OUT STD_LOGIC;
      b_rsc_ARVALID : IN STD_LOGIC;
      b_rsc_ARUSER : IN STD_LOGIC;
      b_rsc_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      b_rsc_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      b_rsc_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      b_rsc_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      b_rsc_ARLOCK : IN STD_LOGIC;
      b_rsc_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      b_rsc_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      b_rsc_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      b_rsc_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      b_rsc_ARID : IN STD_LOGIC;
      b_rsc_BREADY : IN STD_LOGIC;
      b_rsc_BVALID : OUT STD_LOGIC;
      b_rsc_BUSER : OUT STD_LOGIC;
      b_rsc_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      b_rsc_BID : OUT STD_LOGIC;
      b_rsc_WREADY : OUT STD_LOGIC;
      b_rsc_WVALID : IN STD_LOGIC;
      b_rsc_WUSER : IN STD_LOGIC;
      b_rsc_WLAST : IN STD_LOGIC;
      b_rsc_WSTRB : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      b_rsc_WDATA : IN STD_LOGIC_VECTOR (15 DOWNTO 0);
      b_rsc_AWREADY : OUT STD_LOGIC;
      b_rsc_AWVALID : IN STD_LOGIC;
      b_rsc_AWUSER : IN STD_LOGIC;
      b_rsc_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      b_rsc_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      b_rsc_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      b_rsc_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      b_rsc_AWLOCK : IN STD_LOGIC;
      b_rsc_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      b_rsc_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      b_rsc_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      b_rsc_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      b_rsc_AWID : IN STD_LOGIC;
      core_wen : IN STD_LOGIC;
      b_rsci_oswt : IN STD_LOGIC;
      b_rsci_wen_comp : OUT STD_LOGIC;
      b_rsci_s_raddr_core : IN STD_LOGIC_VECTOR (6 DOWNTO 0);
      b_rsci_s_din : OUT STD_LOGIC_VECTOR (9 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL fir_filter_core_b_rsci_inst_b_rsc_RRESP : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsc_RDATA : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsc_ARREGION : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsc_ARQOS : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsc_ARPROT : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsc_ARCACHE : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsc_ARBURST : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsc_ARSIZE : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsc_ARLEN : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsc_ARADDR : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsc_BRESP : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsc_WSTRB : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsc_WDATA : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsc_AWREGION : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsc_AWQOS : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsc_AWPROT : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsc_AWCACHE : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsc_AWBURST : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsc_AWSIZE : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsc_AWLEN : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsc_AWADDR : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsci_s_raddr_core : STD_LOGIC_VECTOR (6 DOWNTO
      0);
  SIGNAL fir_filter_core_b_rsci_inst_b_rsci_s_din : STD_LOGIC_VECTOR (9 DOWNTO 0);

  COMPONENT fir_filter_core_i_sample_rsc_triosy_obj
    PORT(
      i_sample_rsc_triosy_lz : OUT STD_LOGIC;
      core_wten : IN STD_LOGIC;
      i_sample_rsc_triosy_obj_iswt0 : IN STD_LOGIC
    );
  END COMPONENT;
  COMPONENT fir_filter_core_b_rsc_triosy_obj
    PORT(
      b_rsc_triosy_lz : OUT STD_LOGIC;
      core_wten : IN STD_LOGIC;
      b_rsc_triosy_obj_iswt0 : IN STD_LOGIC
    );
  END COMPONENT;
  COMPONENT fir_filter_core_y_rsc_triosy_obj
    PORT(
      y_rsc_triosy_lz : OUT STD_LOGIC;
      core_wten : IN STD_LOGIC;
      y_rsc_triosy_obj_iswt0 : IN STD_LOGIC
    );
  END COMPONENT;
  COMPONENT fir_filter_core_staller
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      core_wten : OUT STD_LOGIC;
      b_rsci_wen_comp : IN STD_LOGIC
    );
  END COMPONENT;
  COMPONENT fir_filter_core_core_fsm
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      b_rsci_wen_comp : IN STD_LOGIC;
      fsm_output : OUT STD_LOGIC_VECTOR (12 DOWNTO 0);
      x_vinit_C_1_tr0 : IN STD_LOGIC;
      SHIFT_LOOP_C_2_tr0 : IN STD_LOGIC;
      MAC_LOOP_C_1_tr0 : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL fir_filter_core_core_fsm_inst_fsm_output : STD_LOGIC_VECTOR (12 DOWNTO 0);
  SIGNAL fir_filter_core_core_fsm_inst_x_vinit_C_1_tr0 : STD_LOGIC;
  SIGNAL fir_filter_core_core_fsm_inst_SHIFT_LOOP_C_2_tr0 : STD_LOGIC;
  SIGNAL fir_filter_core_core_fsm_inst_MAC_LOOP_C_1_tr0 : STD_LOGIC;

  FUNCTION CONV_SL_1_1(input_val:BOOLEAN)
  RETURN STD_LOGIC IS
  BEGIN
    IF input_val THEN RETURN '1';ELSE RETURN '0';END IF;
  END;

  FUNCTION MUX1HOT_v_7_3_2(input_2 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(6 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(6 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX_v_10_2_2(input_0 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(9 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_20_2_2(input_0 : STD_LOGIC_VECTOR(19 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(19 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(19 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_3_2_2(input_0 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(2 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_7_2_2(input_0 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(6 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

BEGIN
  i_sample_rsci : mgc_hls.ccs_in_pkg_v1.ccs_in_v1
    GENERIC MAP(
      rscid => 1,
      width => 3
      )
    PORT MAP(
      dat => i_sample_rsci_dat,
      idat => i_sample_rsci_idat_1
    );
  i_sample_rsci_dat <= i_sample_rsc_dat;
  i_sample_rsci_idat <= i_sample_rsci_idat_1;

  y_rsci : mgc_hls.ccs_out_pkg_v1.ccs_out_v1
    GENERIC MAP(
      rscid => 3,
      width => 9
      )
    PORT MAP(
      idat => y_rsci_idat,
      dat => y_rsci_dat
    );
  y_rsci_idat <= y_rsci_idat_8 & y_rsci_idat_7_1 & y_rsci_idat_0;
  y_rsc_dat <= y_rsci_dat;

  fir_filter_core_wait_dp_inst : fir_filter_core_wait_dp
    PORT MAP(
      x_rsc_cgo_iro => nor_10_rmff,
      x_rsci_clken_d => x_rsci_clken_d,
      core_wen => b_rsci_wen_comp,
      x_rsc_cgo => reg_x_rsc_cgo_cse
    );
  fir_filter_core_b_rsci_inst : fir_filter_core_b_rsci
    PORT MAP(
      clk => clk,
      rst => rst,
      b_rsc_s_tdone => b_rsc_s_tdone,
      b_rsc_tr_write_done => b_rsc_tr_write_done,
      b_rsc_RREADY => b_rsc_RREADY,
      b_rsc_RVALID => b_rsc_RVALID,
      b_rsc_RUSER => b_rsc_RUSER,
      b_rsc_RLAST => b_rsc_RLAST,
      b_rsc_RRESP => fir_filter_core_b_rsci_inst_b_rsc_RRESP,
      b_rsc_RDATA => fir_filter_core_b_rsci_inst_b_rsc_RDATA,
      b_rsc_RID => b_rsc_RID,
      b_rsc_ARREADY => b_rsc_ARREADY,
      b_rsc_ARVALID => b_rsc_ARVALID,
      b_rsc_ARUSER => b_rsc_ARUSER,
      b_rsc_ARREGION => fir_filter_core_b_rsci_inst_b_rsc_ARREGION,
      b_rsc_ARQOS => fir_filter_core_b_rsci_inst_b_rsc_ARQOS,
      b_rsc_ARPROT => fir_filter_core_b_rsci_inst_b_rsc_ARPROT,
      b_rsc_ARCACHE => fir_filter_core_b_rsci_inst_b_rsc_ARCACHE,
      b_rsc_ARLOCK => b_rsc_ARLOCK,
      b_rsc_ARBURST => fir_filter_core_b_rsci_inst_b_rsc_ARBURST,
      b_rsc_ARSIZE => fir_filter_core_b_rsci_inst_b_rsc_ARSIZE,
      b_rsc_ARLEN => fir_filter_core_b_rsci_inst_b_rsc_ARLEN,
      b_rsc_ARADDR => fir_filter_core_b_rsci_inst_b_rsc_ARADDR,
      b_rsc_ARID => b_rsc_ARID,
      b_rsc_BREADY => b_rsc_BREADY,
      b_rsc_BVALID => b_rsc_BVALID,
      b_rsc_BUSER => b_rsc_BUSER,
      b_rsc_BRESP => fir_filter_core_b_rsci_inst_b_rsc_BRESP,
      b_rsc_BID => b_rsc_BID,
      b_rsc_WREADY => b_rsc_WREADY,
      b_rsc_WVALID => b_rsc_WVALID,
      b_rsc_WUSER => b_rsc_WUSER,
      b_rsc_WLAST => b_rsc_WLAST,
      b_rsc_WSTRB => fir_filter_core_b_rsci_inst_b_rsc_WSTRB,
      b_rsc_WDATA => fir_filter_core_b_rsci_inst_b_rsc_WDATA,
      b_rsc_AWREADY => b_rsc_AWREADY,
      b_rsc_AWVALID => b_rsc_AWVALID,
      b_rsc_AWUSER => b_rsc_AWUSER,
      b_rsc_AWREGION => fir_filter_core_b_rsci_inst_b_rsc_AWREGION,
      b_rsc_AWQOS => fir_filter_core_b_rsci_inst_b_rsc_AWQOS,
      b_rsc_AWPROT => fir_filter_core_b_rsci_inst_b_rsc_AWPROT,
      b_rsc_AWCACHE => fir_filter_core_b_rsci_inst_b_rsc_AWCACHE,
      b_rsc_AWLOCK => b_rsc_AWLOCK,
      b_rsc_AWBURST => fir_filter_core_b_rsci_inst_b_rsc_AWBURST,
      b_rsc_AWSIZE => fir_filter_core_b_rsci_inst_b_rsc_AWSIZE,
      b_rsc_AWLEN => fir_filter_core_b_rsci_inst_b_rsc_AWLEN,
      b_rsc_AWADDR => fir_filter_core_b_rsci_inst_b_rsc_AWADDR,
      b_rsc_AWID => b_rsc_AWID,
      core_wen => b_rsci_wen_comp,
      b_rsci_oswt => reg_b_rsci_oswt_cse,
      b_rsci_wen_comp => b_rsci_wen_comp,
      b_rsci_s_raddr_core => fir_filter_core_b_rsci_inst_b_rsci_s_raddr_core,
      b_rsci_s_din => fir_filter_core_b_rsci_inst_b_rsci_s_din
    );
  b_rsc_RRESP <= fir_filter_core_b_rsci_inst_b_rsc_RRESP;
  b_rsc_RDATA <= fir_filter_core_b_rsci_inst_b_rsc_RDATA;
  fir_filter_core_b_rsci_inst_b_rsc_ARREGION <= b_rsc_ARREGION;
  fir_filter_core_b_rsci_inst_b_rsc_ARQOS <= b_rsc_ARQOS;
  fir_filter_core_b_rsci_inst_b_rsc_ARPROT <= b_rsc_ARPROT;
  fir_filter_core_b_rsci_inst_b_rsc_ARCACHE <= b_rsc_ARCACHE;
  fir_filter_core_b_rsci_inst_b_rsc_ARBURST <= b_rsc_ARBURST;
  fir_filter_core_b_rsci_inst_b_rsc_ARSIZE <= b_rsc_ARSIZE;
  fir_filter_core_b_rsci_inst_b_rsc_ARLEN <= b_rsc_ARLEN;
  fir_filter_core_b_rsci_inst_b_rsc_ARADDR <= b_rsc_ARADDR;
  b_rsc_BRESP <= fir_filter_core_b_rsci_inst_b_rsc_BRESP;
  fir_filter_core_b_rsci_inst_b_rsc_WSTRB <= b_rsc_WSTRB;
  fir_filter_core_b_rsci_inst_b_rsc_WDATA <= b_rsc_WDATA;
  fir_filter_core_b_rsci_inst_b_rsc_AWREGION <= b_rsc_AWREGION;
  fir_filter_core_b_rsci_inst_b_rsc_AWQOS <= b_rsc_AWQOS;
  fir_filter_core_b_rsci_inst_b_rsc_AWPROT <= b_rsc_AWPROT;
  fir_filter_core_b_rsci_inst_b_rsc_AWCACHE <= b_rsc_AWCACHE;
  fir_filter_core_b_rsci_inst_b_rsc_AWBURST <= b_rsc_AWBURST;
  fir_filter_core_b_rsci_inst_b_rsc_AWSIZE <= b_rsc_AWSIZE;
  fir_filter_core_b_rsci_inst_b_rsc_AWLEN <= b_rsc_AWLEN;
  fir_filter_core_b_rsci_inst_b_rsc_AWADDR <= b_rsc_AWADDR;
  fir_filter_core_b_rsci_inst_b_rsci_s_raddr_core <= b_rsci_s_raddr_core;
  b_rsci_s_din <= fir_filter_core_b_rsci_inst_b_rsci_s_din;

  fir_filter_core_i_sample_rsc_triosy_obj_inst : fir_filter_core_i_sample_rsc_triosy_obj
    PORT MAP(
      i_sample_rsc_triosy_lz => i_sample_rsc_triosy_lz,
      core_wten => core_wten,
      i_sample_rsc_triosy_obj_iswt0 => reg_i_sample_rsc_triosy_obj_iswt0_cse
    );
  fir_filter_core_b_rsc_triosy_obj_inst : fir_filter_core_b_rsc_triosy_obj
    PORT MAP(
      b_rsc_triosy_lz => b_rsc_triosy_lz,
      core_wten => core_wten,
      b_rsc_triosy_obj_iswt0 => reg_i_sample_rsc_triosy_obj_iswt0_cse
    );
  fir_filter_core_y_rsc_triosy_obj_inst : fir_filter_core_y_rsc_triosy_obj
    PORT MAP(
      y_rsc_triosy_lz => y_rsc_triosy_lz,
      core_wten => core_wten,
      y_rsc_triosy_obj_iswt0 => reg_y_rsc_triosy_obj_iswt0_cse
    );
  fir_filter_core_staller_inst : fir_filter_core_staller
    PORT MAP(
      clk => clk,
      rst => rst,
      core_wten => core_wten,
      b_rsci_wen_comp => b_rsci_wen_comp
    );
  fir_filter_core_core_fsm_inst : fir_filter_core_core_fsm
    PORT MAP(
      clk => clk,
      rst => rst,
      b_rsci_wen_comp => b_rsci_wen_comp,
      fsm_output => fir_filter_core_core_fsm_inst_fsm_output,
      x_vinit_C_1_tr0 => fir_filter_core_core_fsm_inst_x_vinit_C_1_tr0,
      SHIFT_LOOP_C_2_tr0 => fir_filter_core_core_fsm_inst_SHIFT_LOOP_C_2_tr0,
      MAC_LOOP_C_1_tr0 => fir_filter_core_core_fsm_inst_MAC_LOOP_C_1_tr0
    );
  fsm_output <= fir_filter_core_core_fsm_inst_fsm_output;
  fir_filter_core_core_fsm_inst_x_vinit_C_1_tr0 <= NOT x_static_init_else_x_static_init_else_nor_itm;
  fir_filter_core_core_fsm_inst_SHIFT_LOOP_C_2_tr0 <= NOT MAC_LOOP_slc_MAC_LOOP_acc_7_itm;
  fir_filter_core_core_fsm_inst_MAC_LOOP_C_1_tr0 <= NOT MAC_LOOP_slc_MAC_LOOP_acc_7_itm;

  nor_10_rmff <= NOT((fsm_output(3)) OR (fsm_output(0)) OR (fsm_output(12)) OR (fsm_output(11)));
  or_24_cse <= (fsm_output(4)) OR (fsm_output(9));
  and_77_cse <= b_rsci_wen_comp AND (fsm_output(11));
  nor_8_nl <= NOT((fsm_output(4)) OR (fsm_output(2)) OR (fsm_output(6)) OR (fsm_output(1)));
  x_static_init_else_mux1h_1_nl <= MUX1HOT_v_7_3_2(STD_LOGIC_VECTOR'( "1111110"),
      z_out, MAC_LOOP_n_6_0_sva_1, STD_LOGIC_VECTOR'( nor_8_nl & (fsm_output(1))
      & (fsm_output(6))));
  MAC_LOOP_mux_rgt <= MUX_v_10_2_2((STD_LOGIC_VECTOR'( "000") & x_static_init_else_mux1h_1_nl),
      b_rsci_s_din, fsm_output(9));
  MAC_LOOP_n_and_cse <= b_rsci_wen_comp AND or_24_cse;
  slc_20_6_sats_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(sum_sva(19
      DOWNTO 6)), 14), 15) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(sum_sva(5),
      1), 1), 15), 15));
  nor_ovfl_sva_1 <= NOT((slc_20_6_sats_sva_1(14)) OR (NOT(CONV_SL_1_1(slc_20_6_sats_sva_1(13
      DOWNTO 8)/=STD_LOGIC_VECTOR'("000000")))));
  and_unfl_sva_1 <= (slc_20_6_sats_sva_1(14)) AND (NOT(CONV_SL_1_1(slc_20_6_sats_sva_1(13
      DOWNTO 8)=STD_LOGIC_VECTOR'("111111")) AND (CONV_SL_1_1(slc_20_6_sats_sva_1(7
      DOWNTO 0)/=STD_LOGIC_VECTOR'("00000000")))));
  x_static_init_else_mux_1_nl <= MUX_v_3_2_2(x_rsci_q_d, i_sample_sva, fsm_output(7));
  x_static_init_else_or_nl <= (fsm_output(5)) OR (fsm_output(7));
  x_rsci_d_d <= MUX_v_3_2_2(STD_LOGIC_VECTOR'("000"), x_static_init_else_mux_1_nl,
      x_static_init_else_or_nl);
  x_rsci_radr_d <= MUX_v_7_2_2(z_out, b_rsci_s_raddr_core, fsm_output(9));
  x_static_init_else_or_1_nl <= (fsm_output(5)) OR (fsm_output(1));
  x_rsci_wadr_d <= MUX_v_7_2_2(STD_LOGIC_VECTOR'("0000000"), MAC_LOOP_slc_b_rsci_s_din_9_0_itm_6_0,
      x_static_init_else_or_1_nl);
  x_rsci_we_d_pff <= (fsm_output(5)) OR (fsm_output(1)) OR (fsm_output(7));
  x_rsci_readA_r_ram_ir_internal_RMASK_B_d <= or_24_cse;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( b_rsci_wen_comp = '1' ) THEN
        b_rsci_s_raddr_core <= MUX_v_7_2_2(STD_LOGIC_VECTOR'("0000000"), MAC_LOOP_n_6_0_sva_1,
            (fsm_output(10)));
        MAC_LOOP_slc_b_rsci_s_din_9_0_itm_9_7 <= MAC_LOOP_mux_rgt(9 DOWNTO 7);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_b_rsci_oswt_cse <= '0';
        reg_x_rsc_cgo_cse <= '0';
        reg_i_sample_rsc_triosy_obj_iswt0_cse <= '0';
        reg_y_rsc_triosy_obj_iswt0_cse <= '0';
        x_static_init_else_x_static_init_else_nor_itm <= '0';
      ELSIF ( b_rsci_wen_comp = '1' ) THEN
        reg_b_rsci_oswt_cse <= (MAC_LOOP_slc_MAC_LOOP_acc_7_itm AND (fsm_output(10)))
            OR (fsm_output(8));
        reg_x_rsc_cgo_cse <= nor_10_rmff;
        reg_i_sample_rsc_triosy_obj_iswt0_cse <= (NOT MAC_LOOP_slc_MAC_LOOP_acc_7_itm)
            AND (fsm_output(10));
        reg_y_rsc_triosy_obj_iswt0_cse <= fsm_output(11);
        x_static_init_else_x_static_init_else_nor_itm <= NOT(CONV_SL_1_1(MAC_LOOP_slc_b_rsci_s_din_9_0_itm_6_0/=STD_LOGIC_VECTOR'("0000000")));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( and_77_cse = '1' ) THEN
        y_rsci_idat_7_1 <= NOT(MUX_v_7_2_2(nor_5_nl, STD_LOGIC_VECTOR'("1111111"),
            and_unfl_sva_1));
        y_rsci_idat_0 <= (slc_20_6_sats_sva_1(0)) OR nor_ovfl_sva_1 OR and_unfl_sva_1;
        y_rsci_idat_8 <= slc_20_6_sats_sva_1(14);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( ((NOT((fsm_output(2)) OR (fsm_output(4)))) AND b_rsci_wen_comp) = '1'
          ) THEN
        MAC_LOOP_slc_b_rsci_s_din_9_0_itm_6_0 <= MAC_LOOP_mux_rgt(6 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( (b_rsci_wen_comp AND (fsm_output(3))) = '1' ) THEN
        i_sample_sva <= i_sample_rsci_idat;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( MAC_LOOP_n_and_cse = '1' ) THEN
        MAC_LOOP_n_6_0_sva_1 <= z_out;
        MAC_LOOP_slc_MAC_LOOP_acc_7_itm <= SHIFT_LOOP_acc_nl(7);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( (b_rsci_wen_comp AND ((fsm_output(10)) OR (fsm_output(8)))) = '1' ) THEN
        sum_sva <= MUX_v_20_2_2(STD_LOGIC_VECTOR'("00000000000000000000"), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(MAC_LOOP_acc_1_nl),
            20)), sum_not_1_nl);
      END IF;
    END IF;
  END PROCESS;
  nor_5_nl <= NOT(MUX_v_7_2_2((slc_20_6_sats_sva_1(7 DOWNTO 1)), STD_LOGIC_VECTOR'("1111111"),
      nor_ovfl_sva_1));
  SHIFT_LOOP_mux_5_nl <= MUX_v_7_2_2((NOT z_out), z_out, fsm_output(9));
  SHIFT_LOOP_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1' & SHIFT_LOOP_mux_5_nl)
      + UNSIGNED'( "00000001"), 8));
  MAC_LOOP_mul_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'( SIGNED(x_rsci_q_d) * SIGNED(MAC_LOOP_slc_b_rsci_s_din_9_0_itm_9_7
      & MAC_LOOP_slc_b_rsci_s_din_9_0_itm_6_0)), 13));
  MAC_LOOP_acc_1_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(sum_sva) + CONV_SIGNED(SIGNED(MAC_LOOP_mul_nl),
      20), 20));
  sum_not_1_nl <= NOT (fsm_output(8));
  x_static_init_else_x_static_init_else_mux_1_nl <= MUX_v_7_2_2(MAC_LOOP_slc_b_rsci_s_din_9_0_itm_6_0,
      b_rsci_s_raddr_core, fsm_output(9));
  x_static_init_else_x_static_init_else_or_1_nl <= (fsm_output(1)) OR (fsm_output(4));
  z_out <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(x_static_init_else_x_static_init_else_mux_1_nl)
      + CONV_UNSIGNED(CONV_SIGNED(SIGNED'( x_static_init_else_x_static_init_else_or_1_nl
      & '1'), 2), 7), 7));
END v2;

-- ------------------------------------------------------------------
--  Design Unit:    fir_filter
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.ccs_out_pkg_v1.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY fir_filter IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    i_sample_rsc_dat : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    i_sample_rsc_triosy_lz : OUT STD_LOGIC;
    b_rsc_s_tdone : IN STD_LOGIC;
    b_rsc_tr_write_done : IN STD_LOGIC;
    b_rsc_RREADY : IN STD_LOGIC;
    b_rsc_RVALID : OUT STD_LOGIC;
    b_rsc_RUSER : OUT STD_LOGIC;
    b_rsc_RLAST : OUT STD_LOGIC;
    b_rsc_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    b_rsc_RDATA : OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
    b_rsc_RID : OUT STD_LOGIC;
    b_rsc_ARREADY : OUT STD_LOGIC;
    b_rsc_ARVALID : IN STD_LOGIC;
    b_rsc_ARUSER : IN STD_LOGIC;
    b_rsc_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    b_rsc_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    b_rsc_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    b_rsc_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    b_rsc_ARLOCK : IN STD_LOGIC;
    b_rsc_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    b_rsc_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    b_rsc_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    b_rsc_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    b_rsc_ARID : IN STD_LOGIC;
    b_rsc_BREADY : IN STD_LOGIC;
    b_rsc_BVALID : OUT STD_LOGIC;
    b_rsc_BUSER : OUT STD_LOGIC;
    b_rsc_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    b_rsc_BID : OUT STD_LOGIC;
    b_rsc_WREADY : OUT STD_LOGIC;
    b_rsc_WVALID : IN STD_LOGIC;
    b_rsc_WUSER : IN STD_LOGIC;
    b_rsc_WLAST : IN STD_LOGIC;
    b_rsc_WSTRB : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    b_rsc_WDATA : IN STD_LOGIC_VECTOR (15 DOWNTO 0);
    b_rsc_AWREADY : OUT STD_LOGIC;
    b_rsc_AWVALID : IN STD_LOGIC;
    b_rsc_AWUSER : IN STD_LOGIC;
    b_rsc_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    b_rsc_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    b_rsc_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    b_rsc_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    b_rsc_AWLOCK : IN STD_LOGIC;
    b_rsc_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    b_rsc_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    b_rsc_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    b_rsc_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    b_rsc_AWID : IN STD_LOGIC;
    b_rsc_triosy_lz : OUT STD_LOGIC;
    y_rsc_dat : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    y_rsc_triosy_lz : OUT STD_LOGIC
  );
END fir_filter;

ARCHITECTURE v2 OF fir_filter IS
  -- Default Constants
  CONSTANT PWR : STD_LOGIC := '1';
  CONSTANT GND : STD_LOGIC := '0';

  -- Interconnect Declarations
  SIGNAL x_rsci_clken_d : STD_LOGIC;
  SIGNAL x_rsci_d_d : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL x_rsci_q_d : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL x_rsci_radr_d : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL x_rsci_wadr_d : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL x_rsci_readA_r_ram_ir_internal_RMASK_B_d : STD_LOGIC;
  SIGNAL x_rsc_clken : STD_LOGIC;
  SIGNAL x_rsc_q : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL x_rsc_radr : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL x_rsc_we : STD_LOGIC;
  SIGNAL x_rsc_d : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL x_rsc_wadr : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL x_rsci_we_d_iff : STD_LOGIC;

  SIGNAL x_rsc_comp_d : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL x_rsc_comp_q : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL x_rsc_comp_radr : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL x_rsc_comp_wadr : STD_LOGIC_VECTOR (6 DOWNTO 0);

  COMPONENT fir_filter_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_4_7_3_127_127_3_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      radr : OUT STD_LOGIC_VECTOR (6 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (2 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (6 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (2 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (6 DOWNTO 0);
      wadr_d : IN STD_LOGIC_VECTOR (6 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL x_rsci_q : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL x_rsci_radr : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL x_rsci_d : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL x_rsci_wadr : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL x_rsci_d_d_1 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL x_rsci_q_d_1 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL x_rsci_radr_d_1 : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL x_rsci_wadr_d_1 : STD_LOGIC_VECTOR (6 DOWNTO 0);

  COMPONENT fir_filter_core
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      i_sample_rsc_dat : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      i_sample_rsc_triosy_lz : OUT STD_LOGIC;
      b_rsc_s_tdone : IN STD_LOGIC;
      b_rsc_tr_write_done : IN STD_LOGIC;
      b_rsc_RREADY : IN STD_LOGIC;
      b_rsc_RVALID : OUT STD_LOGIC;
      b_rsc_RUSER : OUT STD_LOGIC;
      b_rsc_RLAST : OUT STD_LOGIC;
      b_rsc_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      b_rsc_RDATA : OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
      b_rsc_RID : OUT STD_LOGIC;
      b_rsc_ARREADY : OUT STD_LOGIC;
      b_rsc_ARVALID : IN STD_LOGIC;
      b_rsc_ARUSER : IN STD_LOGIC;
      b_rsc_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      b_rsc_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      b_rsc_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      b_rsc_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      b_rsc_ARLOCK : IN STD_LOGIC;
      b_rsc_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      b_rsc_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      b_rsc_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      b_rsc_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      b_rsc_ARID : IN STD_LOGIC;
      b_rsc_BREADY : IN STD_LOGIC;
      b_rsc_BVALID : OUT STD_LOGIC;
      b_rsc_BUSER : OUT STD_LOGIC;
      b_rsc_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      b_rsc_BID : OUT STD_LOGIC;
      b_rsc_WREADY : OUT STD_LOGIC;
      b_rsc_WVALID : IN STD_LOGIC;
      b_rsc_WUSER : IN STD_LOGIC;
      b_rsc_WLAST : IN STD_LOGIC;
      b_rsc_WSTRB : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      b_rsc_WDATA : IN STD_LOGIC_VECTOR (15 DOWNTO 0);
      b_rsc_AWREADY : OUT STD_LOGIC;
      b_rsc_AWVALID : IN STD_LOGIC;
      b_rsc_AWUSER : IN STD_LOGIC;
      b_rsc_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      b_rsc_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      b_rsc_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      b_rsc_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      b_rsc_AWLOCK : IN STD_LOGIC;
      b_rsc_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      b_rsc_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      b_rsc_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      b_rsc_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      b_rsc_AWID : IN STD_LOGIC;
      b_rsc_triosy_lz : OUT STD_LOGIC;
      y_rsc_dat : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      y_rsc_triosy_lz : OUT STD_LOGIC;
      x_rsci_clken_d : OUT STD_LOGIC;
      x_rsci_d_d : OUT STD_LOGIC_VECTOR (2 DOWNTO 0);
      x_rsci_q_d : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      x_rsci_radr_d : OUT STD_LOGIC_VECTOR (6 DOWNTO 0);
      x_rsci_wadr_d : OUT STD_LOGIC_VECTOR (6 DOWNTO 0);
      x_rsci_readA_r_ram_ir_internal_RMASK_B_d : OUT STD_LOGIC;
      x_rsci_we_d_pff : OUT STD_LOGIC
    );
  END COMPONENT;
  SIGNAL fir_filter_core_inst_i_sample_rsc_dat : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL fir_filter_core_inst_b_rsc_RRESP : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL fir_filter_core_inst_b_rsc_RDATA : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL fir_filter_core_inst_b_rsc_ARREGION : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL fir_filter_core_inst_b_rsc_ARQOS : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL fir_filter_core_inst_b_rsc_ARPROT : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL fir_filter_core_inst_b_rsc_ARCACHE : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL fir_filter_core_inst_b_rsc_ARBURST : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL fir_filter_core_inst_b_rsc_ARSIZE : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL fir_filter_core_inst_b_rsc_ARLEN : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL fir_filter_core_inst_b_rsc_ARADDR : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL fir_filter_core_inst_b_rsc_BRESP : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL fir_filter_core_inst_b_rsc_WSTRB : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL fir_filter_core_inst_b_rsc_WDATA : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL fir_filter_core_inst_b_rsc_AWREGION : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL fir_filter_core_inst_b_rsc_AWQOS : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL fir_filter_core_inst_b_rsc_AWPROT : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL fir_filter_core_inst_b_rsc_AWCACHE : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL fir_filter_core_inst_b_rsc_AWBURST : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL fir_filter_core_inst_b_rsc_AWSIZE : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL fir_filter_core_inst_b_rsc_AWLEN : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL fir_filter_core_inst_b_rsc_AWADDR : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL fir_filter_core_inst_y_rsc_dat : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL fir_filter_core_inst_x_rsci_d_d : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL fir_filter_core_inst_x_rsci_q_d : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL fir_filter_core_inst_x_rsci_radr_d : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL fir_filter_core_inst_x_rsci_wadr_d : STD_LOGIC_VECTOR (6 DOWNTO 0);

BEGIN
  x_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 7,
      data_width => 3,
      depth => 127,
      latency => 1
      )
    PORT MAP(
      clk => clk,
      clken => x_rsc_clken,
      d => x_rsc_comp_d,
      q => x_rsc_comp_q,
      radr => x_rsc_comp_radr,
      wadr => x_rsc_comp_wadr,
      we => x_rsc_we
    );
  x_rsc_comp_d <= x_rsc_d;
  x_rsc_q <= x_rsc_comp_q;
  x_rsc_comp_radr <= x_rsc_radr;
  x_rsc_comp_wadr <= x_rsc_wadr;

  x_rsci : fir_filter_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_4_7_3_127_127_3_1_gen
    PORT MAP(
      clken => x_rsc_clken,
      q => x_rsci_q,
      radr => x_rsci_radr,
      we => x_rsc_we,
      d => x_rsci_d,
      wadr => x_rsci_wadr,
      clken_d => x_rsci_clken_d,
      d_d => x_rsci_d_d_1,
      q_d => x_rsci_q_d_1,
      radr_d => x_rsci_radr_d_1,
      wadr_d => x_rsci_wadr_d_1,
      we_d => x_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => x_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => x_rsci_readA_r_ram_ir_internal_RMASK_B_d
    );
  x_rsci_q <= x_rsc_q;
  x_rsc_radr <= x_rsci_radr;
  x_rsc_d <= x_rsci_d;
  x_rsc_wadr <= x_rsci_wadr;
  x_rsci_d_d_1 <= x_rsci_d_d;
  x_rsci_q_d <= x_rsci_q_d_1;
  x_rsci_radr_d_1 <= x_rsci_radr_d;
  x_rsci_wadr_d_1 <= x_rsci_wadr_d;

  fir_filter_core_inst : fir_filter_core
    PORT MAP(
      clk => clk,
      rst => rst,
      i_sample_rsc_dat => fir_filter_core_inst_i_sample_rsc_dat,
      i_sample_rsc_triosy_lz => i_sample_rsc_triosy_lz,
      b_rsc_s_tdone => b_rsc_s_tdone,
      b_rsc_tr_write_done => b_rsc_tr_write_done,
      b_rsc_RREADY => b_rsc_RREADY,
      b_rsc_RVALID => b_rsc_RVALID,
      b_rsc_RUSER => b_rsc_RUSER,
      b_rsc_RLAST => b_rsc_RLAST,
      b_rsc_RRESP => fir_filter_core_inst_b_rsc_RRESP,
      b_rsc_RDATA => fir_filter_core_inst_b_rsc_RDATA,
      b_rsc_RID => b_rsc_RID,
      b_rsc_ARREADY => b_rsc_ARREADY,
      b_rsc_ARVALID => b_rsc_ARVALID,
      b_rsc_ARUSER => b_rsc_ARUSER,
      b_rsc_ARREGION => fir_filter_core_inst_b_rsc_ARREGION,
      b_rsc_ARQOS => fir_filter_core_inst_b_rsc_ARQOS,
      b_rsc_ARPROT => fir_filter_core_inst_b_rsc_ARPROT,
      b_rsc_ARCACHE => fir_filter_core_inst_b_rsc_ARCACHE,
      b_rsc_ARLOCK => b_rsc_ARLOCK,
      b_rsc_ARBURST => fir_filter_core_inst_b_rsc_ARBURST,
      b_rsc_ARSIZE => fir_filter_core_inst_b_rsc_ARSIZE,
      b_rsc_ARLEN => fir_filter_core_inst_b_rsc_ARLEN,
      b_rsc_ARADDR => fir_filter_core_inst_b_rsc_ARADDR,
      b_rsc_ARID => b_rsc_ARID,
      b_rsc_BREADY => b_rsc_BREADY,
      b_rsc_BVALID => b_rsc_BVALID,
      b_rsc_BUSER => b_rsc_BUSER,
      b_rsc_BRESP => fir_filter_core_inst_b_rsc_BRESP,
      b_rsc_BID => b_rsc_BID,
      b_rsc_WREADY => b_rsc_WREADY,
      b_rsc_WVALID => b_rsc_WVALID,
      b_rsc_WUSER => b_rsc_WUSER,
      b_rsc_WLAST => b_rsc_WLAST,
      b_rsc_WSTRB => fir_filter_core_inst_b_rsc_WSTRB,
      b_rsc_WDATA => fir_filter_core_inst_b_rsc_WDATA,
      b_rsc_AWREADY => b_rsc_AWREADY,
      b_rsc_AWVALID => b_rsc_AWVALID,
      b_rsc_AWUSER => b_rsc_AWUSER,
      b_rsc_AWREGION => fir_filter_core_inst_b_rsc_AWREGION,
      b_rsc_AWQOS => fir_filter_core_inst_b_rsc_AWQOS,
      b_rsc_AWPROT => fir_filter_core_inst_b_rsc_AWPROT,
      b_rsc_AWCACHE => fir_filter_core_inst_b_rsc_AWCACHE,
      b_rsc_AWLOCK => b_rsc_AWLOCK,
      b_rsc_AWBURST => fir_filter_core_inst_b_rsc_AWBURST,
      b_rsc_AWSIZE => fir_filter_core_inst_b_rsc_AWSIZE,
      b_rsc_AWLEN => fir_filter_core_inst_b_rsc_AWLEN,
      b_rsc_AWADDR => fir_filter_core_inst_b_rsc_AWADDR,
      b_rsc_AWID => b_rsc_AWID,
      b_rsc_triosy_lz => b_rsc_triosy_lz,
      y_rsc_dat => fir_filter_core_inst_y_rsc_dat,
      y_rsc_triosy_lz => y_rsc_triosy_lz,
      x_rsci_clken_d => x_rsci_clken_d,
      x_rsci_d_d => fir_filter_core_inst_x_rsci_d_d,
      x_rsci_q_d => fir_filter_core_inst_x_rsci_q_d,
      x_rsci_radr_d => fir_filter_core_inst_x_rsci_radr_d,
      x_rsci_wadr_d => fir_filter_core_inst_x_rsci_wadr_d,
      x_rsci_readA_r_ram_ir_internal_RMASK_B_d => x_rsci_readA_r_ram_ir_internal_RMASK_B_d,
      x_rsci_we_d_pff => x_rsci_we_d_iff
    );
  fir_filter_core_inst_i_sample_rsc_dat <= i_sample_rsc_dat;
  b_rsc_RRESP <= fir_filter_core_inst_b_rsc_RRESP;
  b_rsc_RDATA <= fir_filter_core_inst_b_rsc_RDATA;
  fir_filter_core_inst_b_rsc_ARREGION <= b_rsc_ARREGION;
  fir_filter_core_inst_b_rsc_ARQOS <= b_rsc_ARQOS;
  fir_filter_core_inst_b_rsc_ARPROT <= b_rsc_ARPROT;
  fir_filter_core_inst_b_rsc_ARCACHE <= b_rsc_ARCACHE;
  fir_filter_core_inst_b_rsc_ARBURST <= b_rsc_ARBURST;
  fir_filter_core_inst_b_rsc_ARSIZE <= b_rsc_ARSIZE;
  fir_filter_core_inst_b_rsc_ARLEN <= b_rsc_ARLEN;
  fir_filter_core_inst_b_rsc_ARADDR <= b_rsc_ARADDR;
  b_rsc_BRESP <= fir_filter_core_inst_b_rsc_BRESP;
  fir_filter_core_inst_b_rsc_WSTRB <= b_rsc_WSTRB;
  fir_filter_core_inst_b_rsc_WDATA <= b_rsc_WDATA;
  fir_filter_core_inst_b_rsc_AWREGION <= b_rsc_AWREGION;
  fir_filter_core_inst_b_rsc_AWQOS <= b_rsc_AWQOS;
  fir_filter_core_inst_b_rsc_AWPROT <= b_rsc_AWPROT;
  fir_filter_core_inst_b_rsc_AWCACHE <= b_rsc_AWCACHE;
  fir_filter_core_inst_b_rsc_AWBURST <= b_rsc_AWBURST;
  fir_filter_core_inst_b_rsc_AWSIZE <= b_rsc_AWSIZE;
  fir_filter_core_inst_b_rsc_AWLEN <= b_rsc_AWLEN;
  fir_filter_core_inst_b_rsc_AWADDR <= b_rsc_AWADDR;
  y_rsc_dat <= fir_filter_core_inst_y_rsc_dat;
  x_rsci_d_d <= fir_filter_core_inst_x_rsci_d_d;
  fir_filter_core_inst_x_rsci_q_d <= x_rsci_q_d;
  x_rsci_radr_d <= fir_filter_core_inst_x_rsci_radr_d;
  x_rsci_wadr_d <= fir_filter_core_inst_x_rsci_wadr_d;

END v2;



