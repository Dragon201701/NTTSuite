// Generated by ZYANG
#ifndef INCLUDED_CCS_DUT_WRAPPER_H
#define INCLUDED_CCS_DUT_WRAPPER_H

#ifndef SC_USE_STD_STRING
#define SC_USE_STD_STRING
#endif

#include <systemc.h>
#include <mc_simulator_extensions.h>

#ifdef CCS_SYSC
namespace HDL {
#endif
#if defined(CCS_DUT_SYSC)
// alias ccs_DUT_wrapper to namespace enclosure of either cycle or RTL SystemC netlist
namespace
    ccs_design {
#if defined(CCS_DUT_CYCLE)
#include "cycle.cxx"
#else
#if defined(CCS_DUT_RTL)
#include "rtl.cxx"
#endif
#endif
}
typedef
    ccs_design::HDL::axi_add ccs_DUT_wrapper;

#else

// Create a foreign module wrapper around the HDL
#ifdef VCS_SYSTEMC
// VCS support - ccs_DUT_wrapper is derived from VCS-generated SystemC wrapper around HDL code
class ccs_DUT_wrapper : public TOP_HDL_ENTITY
{
public:
  ccs_DUT_wrapper(const sc_module_name& nm, const char *hdl_name)
  : TOP_HDL_ENTITY(nm)
  {
  // elaborate_foreign_module(hdl_name);
  }

  ~ccs_DUT_wrapper() {}
};

#else
// non VCS simulators - ccs_DUT_wrapper is derived from mc_foreign_module (adding 2nd ctor arg)
class ccs_DUT_wrapper: public mc_foreign_module
{
public:
  // Interface Ports
  sc_in<bool> clk;
  sc_in<sc_logic> rst;
  sc_out<sc_lv<3> > a_rsc_m_wstate;
  sc_out<sc_logic> a_rsc_m_wCaughtUp;
  sc_out<sc_logic> a_rsc_RREADY;
  sc_in<sc_logic> a_rsc_RVALID;
  sc_in<sc_logic> a_rsc_RUSER;
  sc_in<sc_logic> a_rsc_RLAST;
  sc_in<sc_lv<2> > a_rsc_RRESP;
  sc_in<sc_lv<32> > a_rsc_RDATA;
  sc_in<sc_logic> a_rsc_RID;
  sc_in<sc_logic> a_rsc_ARREADY;
  sc_out<sc_logic> a_rsc_ARVALID;
  sc_out<sc_logic> a_rsc_ARUSER;
  sc_out<sc_lv<4> > a_rsc_ARREGION;
  sc_out<sc_lv<4> > a_rsc_ARQOS;
  sc_out<sc_lv<3> > a_rsc_ARPROT;
  sc_out<sc_lv<4> > a_rsc_ARCACHE;
  sc_out<sc_logic> a_rsc_ARLOCK;
  sc_out<sc_lv<2> > a_rsc_ARBURST;
  sc_out<sc_lv<3> > a_rsc_ARSIZE;
  sc_out<sc_lv<8> > a_rsc_ARLEN;
  sc_out<sc_lv<32> > a_rsc_ARADDR;
  sc_out<sc_logic> a_rsc_ARID;
  sc_out<sc_logic> a_rsc_BREADY;
  sc_in<sc_logic> a_rsc_BVALID;
  sc_in<sc_logic> a_rsc_BUSER;
  sc_in<sc_lv<2> > a_rsc_BRESP;
  sc_in<sc_logic> a_rsc_BID;
  sc_in<sc_logic> a_rsc_WREADY;
  sc_out<sc_logic> a_rsc_WVALID;
  sc_out<sc_logic> a_rsc_WUSER;
  sc_out<sc_logic> a_rsc_WLAST;
  sc_out<sc_lv<4> > a_rsc_WSTRB;
  sc_out<sc_lv<32> > a_rsc_WDATA;
  sc_in<sc_logic> a_rsc_AWREADY;
  sc_out<sc_logic> a_rsc_AWVALID;
  sc_out<sc_logic> a_rsc_AWUSER;
  sc_out<sc_lv<4> > a_rsc_AWREGION;
  sc_out<sc_lv<4> > a_rsc_AWQOS;
  sc_out<sc_lv<3> > a_rsc_AWPROT;
  sc_out<sc_lv<4> > a_rsc_AWCACHE;
  sc_out<sc_logic> a_rsc_AWLOCK;
  sc_out<sc_lv<2> > a_rsc_AWBURST;
  sc_out<sc_lv<3> > a_rsc_AWSIZE;
  sc_out<sc_lv<8> > a_rsc_AWLEN;
  sc_out<sc_lv<32> > a_rsc_AWADDR;
  sc_out<sc_logic> a_rsc_AWID;
  sc_out<sc_logic> a_rsc_triosy_lz;
  sc_out<sc_lv<3> > b_rsc_m_wstate;
  sc_out<sc_logic> b_rsc_m_wCaughtUp;
  sc_out<sc_logic> b_rsc_RREADY;
  sc_in<sc_logic> b_rsc_RVALID;
  sc_in<sc_logic> b_rsc_RUSER;
  sc_in<sc_logic> b_rsc_RLAST;
  sc_in<sc_lv<2> > b_rsc_RRESP;
  sc_in<sc_lv<32> > b_rsc_RDATA;
  sc_in<sc_logic> b_rsc_RID;
  sc_in<sc_logic> b_rsc_ARREADY;
  sc_out<sc_logic> b_rsc_ARVALID;
  sc_out<sc_logic> b_rsc_ARUSER;
  sc_out<sc_lv<4> > b_rsc_ARREGION;
  sc_out<sc_lv<4> > b_rsc_ARQOS;
  sc_out<sc_lv<3> > b_rsc_ARPROT;
  sc_out<sc_lv<4> > b_rsc_ARCACHE;
  sc_out<sc_logic> b_rsc_ARLOCK;
  sc_out<sc_lv<2> > b_rsc_ARBURST;
  sc_out<sc_lv<3> > b_rsc_ARSIZE;
  sc_out<sc_lv<8> > b_rsc_ARLEN;
  sc_out<sc_lv<32> > b_rsc_ARADDR;
  sc_out<sc_logic> b_rsc_ARID;
  sc_out<sc_logic> b_rsc_BREADY;
  sc_in<sc_logic> b_rsc_BVALID;
  sc_in<sc_logic> b_rsc_BUSER;
  sc_in<sc_lv<2> > b_rsc_BRESP;
  sc_in<sc_logic> b_rsc_BID;
  sc_in<sc_logic> b_rsc_WREADY;
  sc_out<sc_logic> b_rsc_WVALID;
  sc_out<sc_logic> b_rsc_WUSER;
  sc_out<sc_logic> b_rsc_WLAST;
  sc_out<sc_lv<4> > b_rsc_WSTRB;
  sc_out<sc_lv<32> > b_rsc_WDATA;
  sc_in<sc_logic> b_rsc_AWREADY;
  sc_out<sc_logic> b_rsc_AWVALID;
  sc_out<sc_logic> b_rsc_AWUSER;
  sc_out<sc_lv<4> > b_rsc_AWREGION;
  sc_out<sc_lv<4> > b_rsc_AWQOS;
  sc_out<sc_lv<3> > b_rsc_AWPROT;
  sc_out<sc_lv<4> > b_rsc_AWCACHE;
  sc_out<sc_logic> b_rsc_AWLOCK;
  sc_out<sc_lv<2> > b_rsc_AWBURST;
  sc_out<sc_lv<3> > b_rsc_AWSIZE;
  sc_out<sc_lv<8> > b_rsc_AWLEN;
  sc_out<sc_lv<32> > b_rsc_AWADDR;
  sc_out<sc_logic> b_rsc_AWID;
  sc_out<sc_logic> b_rsc_triosy_lz;
public:
  ccs_DUT_wrapper(const sc_module_name& nm, const char *hdl_name)
  :
    mc_foreign_module(nm, hdl_name), 
    clk("clk"), 
    rst("rst"), 
    a_rsc_m_wstate("a_rsc_m_wstate"), 
    a_rsc_m_wCaughtUp("a_rsc_m_wCaughtUp"), 
    a_rsc_RREADY("a_rsc_RREADY"), 
    a_rsc_RVALID("a_rsc_RVALID"), 
    a_rsc_RUSER("a_rsc_RUSER"), 
    a_rsc_RLAST("a_rsc_RLAST"), 
    a_rsc_RRESP("a_rsc_RRESP"), 
    a_rsc_RDATA("a_rsc_RDATA"), 
    a_rsc_RID("a_rsc_RID"), 
    a_rsc_ARREADY("a_rsc_ARREADY"), 
    a_rsc_ARVALID("a_rsc_ARVALID"), 
    a_rsc_ARUSER("a_rsc_ARUSER"), 
    a_rsc_ARREGION("a_rsc_ARREGION"), 
    a_rsc_ARQOS("a_rsc_ARQOS"), 
    a_rsc_ARPROT("a_rsc_ARPROT"), 
    a_rsc_ARCACHE("a_rsc_ARCACHE"), 
    a_rsc_ARLOCK("a_rsc_ARLOCK"), 
    a_rsc_ARBURST("a_rsc_ARBURST"), 
    a_rsc_ARSIZE("a_rsc_ARSIZE"), 
    a_rsc_ARLEN("a_rsc_ARLEN"), 
    a_rsc_ARADDR("a_rsc_ARADDR"), 
    a_rsc_ARID("a_rsc_ARID"), 
    a_rsc_BREADY("a_rsc_BREADY"), 
    a_rsc_BVALID("a_rsc_BVALID"), 
    a_rsc_BUSER("a_rsc_BUSER"), 
    a_rsc_BRESP("a_rsc_BRESP"), 
    a_rsc_BID("a_rsc_BID"), 
    a_rsc_WREADY("a_rsc_WREADY"), 
    a_rsc_WVALID("a_rsc_WVALID"), 
    a_rsc_WUSER("a_rsc_WUSER"), 
    a_rsc_WLAST("a_rsc_WLAST"), 
    a_rsc_WSTRB("a_rsc_WSTRB"), 
    a_rsc_WDATA("a_rsc_WDATA"), 
    a_rsc_AWREADY("a_rsc_AWREADY"), 
    a_rsc_AWVALID("a_rsc_AWVALID"), 
    a_rsc_AWUSER("a_rsc_AWUSER"), 
    a_rsc_AWREGION("a_rsc_AWREGION"), 
    a_rsc_AWQOS("a_rsc_AWQOS"), 
    a_rsc_AWPROT("a_rsc_AWPROT"), 
    a_rsc_AWCACHE("a_rsc_AWCACHE"), 
    a_rsc_AWLOCK("a_rsc_AWLOCK"), 
    a_rsc_AWBURST("a_rsc_AWBURST"), 
    a_rsc_AWSIZE("a_rsc_AWSIZE"), 
    a_rsc_AWLEN("a_rsc_AWLEN"), 
    a_rsc_AWADDR("a_rsc_AWADDR"), 
    a_rsc_AWID("a_rsc_AWID"), 
    a_rsc_triosy_lz("a_rsc_triosy_lz"), 
    b_rsc_m_wstate("b_rsc_m_wstate"), 
    b_rsc_m_wCaughtUp("b_rsc_m_wCaughtUp"), 
    b_rsc_RREADY("b_rsc_RREADY"), 
    b_rsc_RVALID("b_rsc_RVALID"), 
    b_rsc_RUSER("b_rsc_RUSER"), 
    b_rsc_RLAST("b_rsc_RLAST"), 
    b_rsc_RRESP("b_rsc_RRESP"), 
    b_rsc_RDATA("b_rsc_RDATA"), 
    b_rsc_RID("b_rsc_RID"), 
    b_rsc_ARREADY("b_rsc_ARREADY"), 
    b_rsc_ARVALID("b_rsc_ARVALID"), 
    b_rsc_ARUSER("b_rsc_ARUSER"), 
    b_rsc_ARREGION("b_rsc_ARREGION"), 
    b_rsc_ARQOS("b_rsc_ARQOS"), 
    b_rsc_ARPROT("b_rsc_ARPROT"), 
    b_rsc_ARCACHE("b_rsc_ARCACHE"), 
    b_rsc_ARLOCK("b_rsc_ARLOCK"), 
    b_rsc_ARBURST("b_rsc_ARBURST"), 
    b_rsc_ARSIZE("b_rsc_ARSIZE"), 
    b_rsc_ARLEN("b_rsc_ARLEN"), 
    b_rsc_ARADDR("b_rsc_ARADDR"), 
    b_rsc_ARID("b_rsc_ARID"), 
    b_rsc_BREADY("b_rsc_BREADY"), 
    b_rsc_BVALID("b_rsc_BVALID"), 
    b_rsc_BUSER("b_rsc_BUSER"), 
    b_rsc_BRESP("b_rsc_BRESP"), 
    b_rsc_BID("b_rsc_BID"), 
    b_rsc_WREADY("b_rsc_WREADY"), 
    b_rsc_WVALID("b_rsc_WVALID"), 
    b_rsc_WUSER("b_rsc_WUSER"), 
    b_rsc_WLAST("b_rsc_WLAST"), 
    b_rsc_WSTRB("b_rsc_WSTRB"), 
    b_rsc_WDATA("b_rsc_WDATA"), 
    b_rsc_AWREADY("b_rsc_AWREADY"), 
    b_rsc_AWVALID("b_rsc_AWVALID"), 
    b_rsc_AWUSER("b_rsc_AWUSER"), 
    b_rsc_AWREGION("b_rsc_AWREGION"), 
    b_rsc_AWQOS("b_rsc_AWQOS"), 
    b_rsc_AWPROT("b_rsc_AWPROT"), 
    b_rsc_AWCACHE("b_rsc_AWCACHE"), 
    b_rsc_AWLOCK("b_rsc_AWLOCK"), 
    b_rsc_AWBURST("b_rsc_AWBURST"), 
    b_rsc_AWSIZE("b_rsc_AWSIZE"), 
    b_rsc_AWLEN("b_rsc_AWLEN"), 
    b_rsc_AWADDR("b_rsc_AWADDR"), 
    b_rsc_AWID("b_rsc_AWID"), 
    b_rsc_triosy_lz("b_rsc_triosy_lz")
  {
    elaborate_foreign_module(hdl_name);
  }

  ~ccs_DUT_wrapper() {}
};
#endif

#endif

#ifdef CCS_SYSC
} // end namespace HDL
#endif
#endif


