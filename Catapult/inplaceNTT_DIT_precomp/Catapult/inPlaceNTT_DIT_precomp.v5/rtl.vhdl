-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    10.5c/896140 Production Release
--  HLS Date:       Sun Sep  6 22:45:38 PDT 2020
-- 
--  Generated by:   yl7897@newnano.poly.edu
--  Generated date: Thu Aug 19 16:48:15 2021
-- ----------------------------------------------------------------------

-- 
-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_core_fsm
--  FSM Module
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_core_fsm IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    core_wen : IN STD_LOGIC;
    fsm_output : OUT STD_LOGIC_VECTOR (6 DOWNTO 0);
    COMP_LOOP_C_38_tr0 : IN STD_LOGIC;
    COMP_LOOP_C_77_tr0 : IN STD_LOGIC;
    VEC_LOOP_C_0_tr0 : IN STD_LOGIC;
    STAGE_LOOP_C_1_tr0 : IN STD_LOGIC
  );
END inPlaceNTT_DIT_precomp_core_core_fsm;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_core_fsm IS
  -- Default Constants

  -- FSM State Type Declaration for inPlaceNTT_DIT_precomp_core_core_fsm_1
  TYPE inPlaceNTT_DIT_precomp_core_core_fsm_1_ST IS (main_C_0, STAGE_LOOP_C_0, COMP_LOOP_C_0,
      COMP_LOOP_C_1, COMP_LOOP_C_2, COMP_LOOP_C_3, COMP_LOOP_C_4, COMP_LOOP_C_5,
      COMP_LOOP_C_6, COMP_LOOP_C_7, COMP_LOOP_C_8, COMP_LOOP_C_9, COMP_LOOP_C_10,
      COMP_LOOP_C_11, COMP_LOOP_C_12, COMP_LOOP_C_13, COMP_LOOP_C_14, COMP_LOOP_C_15,
      COMP_LOOP_C_16, COMP_LOOP_C_17, COMP_LOOP_C_18, COMP_LOOP_C_19, COMP_LOOP_C_20,
      COMP_LOOP_C_21, COMP_LOOP_C_22, COMP_LOOP_C_23, COMP_LOOP_C_24, COMP_LOOP_C_25,
      COMP_LOOP_C_26, COMP_LOOP_C_27, COMP_LOOP_C_28, COMP_LOOP_C_29, COMP_LOOP_C_30,
      COMP_LOOP_C_31, COMP_LOOP_C_32, COMP_LOOP_C_33, COMP_LOOP_C_34, COMP_LOOP_C_35,
      COMP_LOOP_C_36, COMP_LOOP_C_37, COMP_LOOP_C_38, COMP_LOOP_C_39, COMP_LOOP_C_40,
      COMP_LOOP_C_41, COMP_LOOP_C_42, COMP_LOOP_C_43, COMP_LOOP_C_44, COMP_LOOP_C_45,
      COMP_LOOP_C_46, COMP_LOOP_C_47, COMP_LOOP_C_48, COMP_LOOP_C_49, COMP_LOOP_C_50,
      COMP_LOOP_C_51, COMP_LOOP_C_52, COMP_LOOP_C_53, COMP_LOOP_C_54, COMP_LOOP_C_55,
      COMP_LOOP_C_56, COMP_LOOP_C_57, COMP_LOOP_C_58, COMP_LOOP_C_59, COMP_LOOP_C_60,
      COMP_LOOP_C_61, COMP_LOOP_C_62, COMP_LOOP_C_63, COMP_LOOP_C_64, COMP_LOOP_C_65,
      COMP_LOOP_C_66, COMP_LOOP_C_67, COMP_LOOP_C_68, COMP_LOOP_C_69, COMP_LOOP_C_70,
      COMP_LOOP_C_71, COMP_LOOP_C_72, COMP_LOOP_C_73, COMP_LOOP_C_74, COMP_LOOP_C_75,
      COMP_LOOP_C_76, COMP_LOOP_C_77, VEC_LOOP_C_0, STAGE_LOOP_C_1, main_C_1);

  SIGNAL state_var : inPlaceNTT_DIT_precomp_core_core_fsm_1_ST;
  SIGNAL state_var_NS : inPlaceNTT_DIT_precomp_core_core_fsm_1_ST;

BEGIN
  inPlaceNTT_DIT_precomp_core_core_fsm_1 : PROCESS (COMP_LOOP_C_38_tr0, COMP_LOOP_C_77_tr0,
      VEC_LOOP_C_0_tr0, STAGE_LOOP_C_1_tr0, state_var)
  BEGIN
    CASE state_var IS
      WHEN STAGE_LOOP_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0000001");
        state_var_NS <= COMP_LOOP_C_0;
      WHEN COMP_LOOP_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0000010");
        state_var_NS <= COMP_LOOP_C_1;
      WHEN COMP_LOOP_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0000011");
        state_var_NS <= COMP_LOOP_C_2;
      WHEN COMP_LOOP_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0000100");
        state_var_NS <= COMP_LOOP_C_3;
      WHEN COMP_LOOP_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0000101");
        state_var_NS <= COMP_LOOP_C_4;
      WHEN COMP_LOOP_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0000110");
        state_var_NS <= COMP_LOOP_C_5;
      WHEN COMP_LOOP_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0000111");
        state_var_NS <= COMP_LOOP_C_6;
      WHEN COMP_LOOP_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0001000");
        state_var_NS <= COMP_LOOP_C_7;
      WHEN COMP_LOOP_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0001001");
        state_var_NS <= COMP_LOOP_C_8;
      WHEN COMP_LOOP_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0001010");
        state_var_NS <= COMP_LOOP_C_9;
      WHEN COMP_LOOP_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0001011");
        state_var_NS <= COMP_LOOP_C_10;
      WHEN COMP_LOOP_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0001100");
        state_var_NS <= COMP_LOOP_C_11;
      WHEN COMP_LOOP_C_11 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0001101");
        state_var_NS <= COMP_LOOP_C_12;
      WHEN COMP_LOOP_C_12 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0001110");
        state_var_NS <= COMP_LOOP_C_13;
      WHEN COMP_LOOP_C_13 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0001111");
        state_var_NS <= COMP_LOOP_C_14;
      WHEN COMP_LOOP_C_14 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0010000");
        state_var_NS <= COMP_LOOP_C_15;
      WHEN COMP_LOOP_C_15 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0010001");
        state_var_NS <= COMP_LOOP_C_16;
      WHEN COMP_LOOP_C_16 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0010010");
        state_var_NS <= COMP_LOOP_C_17;
      WHEN COMP_LOOP_C_17 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0010011");
        state_var_NS <= COMP_LOOP_C_18;
      WHEN COMP_LOOP_C_18 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0010100");
        state_var_NS <= COMP_LOOP_C_19;
      WHEN COMP_LOOP_C_19 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0010101");
        state_var_NS <= COMP_LOOP_C_20;
      WHEN COMP_LOOP_C_20 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0010110");
        state_var_NS <= COMP_LOOP_C_21;
      WHEN COMP_LOOP_C_21 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0010111");
        state_var_NS <= COMP_LOOP_C_22;
      WHEN COMP_LOOP_C_22 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0011000");
        state_var_NS <= COMP_LOOP_C_23;
      WHEN COMP_LOOP_C_23 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0011001");
        state_var_NS <= COMP_LOOP_C_24;
      WHEN COMP_LOOP_C_24 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0011010");
        state_var_NS <= COMP_LOOP_C_25;
      WHEN COMP_LOOP_C_25 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0011011");
        state_var_NS <= COMP_LOOP_C_26;
      WHEN COMP_LOOP_C_26 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0011100");
        state_var_NS <= COMP_LOOP_C_27;
      WHEN COMP_LOOP_C_27 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0011101");
        state_var_NS <= COMP_LOOP_C_28;
      WHEN COMP_LOOP_C_28 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0011110");
        state_var_NS <= COMP_LOOP_C_29;
      WHEN COMP_LOOP_C_29 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0011111");
        state_var_NS <= COMP_LOOP_C_30;
      WHEN COMP_LOOP_C_30 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0100000");
        state_var_NS <= COMP_LOOP_C_31;
      WHEN COMP_LOOP_C_31 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0100001");
        state_var_NS <= COMP_LOOP_C_32;
      WHEN COMP_LOOP_C_32 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0100010");
        state_var_NS <= COMP_LOOP_C_33;
      WHEN COMP_LOOP_C_33 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0100011");
        state_var_NS <= COMP_LOOP_C_34;
      WHEN COMP_LOOP_C_34 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0100100");
        state_var_NS <= COMP_LOOP_C_35;
      WHEN COMP_LOOP_C_35 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0100101");
        state_var_NS <= COMP_LOOP_C_36;
      WHEN COMP_LOOP_C_36 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0100110");
        state_var_NS <= COMP_LOOP_C_37;
      WHEN COMP_LOOP_C_37 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0100111");
        state_var_NS <= COMP_LOOP_C_38;
      WHEN COMP_LOOP_C_38 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0101000");
        IF ( COMP_LOOP_C_38_tr0 = '1' ) THEN
          state_var_NS <= VEC_LOOP_C_0;
        ELSE
          state_var_NS <= COMP_LOOP_C_39;
        END IF;
      WHEN COMP_LOOP_C_39 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0101001");
        state_var_NS <= COMP_LOOP_C_40;
      WHEN COMP_LOOP_C_40 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0101010");
        state_var_NS <= COMP_LOOP_C_41;
      WHEN COMP_LOOP_C_41 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0101011");
        state_var_NS <= COMP_LOOP_C_42;
      WHEN COMP_LOOP_C_42 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0101100");
        state_var_NS <= COMP_LOOP_C_43;
      WHEN COMP_LOOP_C_43 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0101101");
        state_var_NS <= COMP_LOOP_C_44;
      WHEN COMP_LOOP_C_44 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0101110");
        state_var_NS <= COMP_LOOP_C_45;
      WHEN COMP_LOOP_C_45 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0101111");
        state_var_NS <= COMP_LOOP_C_46;
      WHEN COMP_LOOP_C_46 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0110000");
        state_var_NS <= COMP_LOOP_C_47;
      WHEN COMP_LOOP_C_47 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0110001");
        state_var_NS <= COMP_LOOP_C_48;
      WHEN COMP_LOOP_C_48 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0110010");
        state_var_NS <= COMP_LOOP_C_49;
      WHEN COMP_LOOP_C_49 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0110011");
        state_var_NS <= COMP_LOOP_C_50;
      WHEN COMP_LOOP_C_50 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0110100");
        state_var_NS <= COMP_LOOP_C_51;
      WHEN COMP_LOOP_C_51 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0110101");
        state_var_NS <= COMP_LOOP_C_52;
      WHEN COMP_LOOP_C_52 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0110110");
        state_var_NS <= COMP_LOOP_C_53;
      WHEN COMP_LOOP_C_53 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0110111");
        state_var_NS <= COMP_LOOP_C_54;
      WHEN COMP_LOOP_C_54 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0111000");
        state_var_NS <= COMP_LOOP_C_55;
      WHEN COMP_LOOP_C_55 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0111001");
        state_var_NS <= COMP_LOOP_C_56;
      WHEN COMP_LOOP_C_56 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0111010");
        state_var_NS <= COMP_LOOP_C_57;
      WHEN COMP_LOOP_C_57 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0111011");
        state_var_NS <= COMP_LOOP_C_58;
      WHEN COMP_LOOP_C_58 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0111100");
        state_var_NS <= COMP_LOOP_C_59;
      WHEN COMP_LOOP_C_59 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0111101");
        state_var_NS <= COMP_LOOP_C_60;
      WHEN COMP_LOOP_C_60 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0111110");
        state_var_NS <= COMP_LOOP_C_61;
      WHEN COMP_LOOP_C_61 =>
        fsm_output <= STD_LOGIC_VECTOR'( "0111111");
        state_var_NS <= COMP_LOOP_C_62;
      WHEN COMP_LOOP_C_62 =>
        fsm_output <= STD_LOGIC_VECTOR'( "1000000");
        state_var_NS <= COMP_LOOP_C_63;
      WHEN COMP_LOOP_C_63 =>
        fsm_output <= STD_LOGIC_VECTOR'( "1000001");
        state_var_NS <= COMP_LOOP_C_64;
      WHEN COMP_LOOP_C_64 =>
        fsm_output <= STD_LOGIC_VECTOR'( "1000010");
        state_var_NS <= COMP_LOOP_C_65;
      WHEN COMP_LOOP_C_65 =>
        fsm_output <= STD_LOGIC_VECTOR'( "1000011");
        state_var_NS <= COMP_LOOP_C_66;
      WHEN COMP_LOOP_C_66 =>
        fsm_output <= STD_LOGIC_VECTOR'( "1000100");
        state_var_NS <= COMP_LOOP_C_67;
      WHEN COMP_LOOP_C_67 =>
        fsm_output <= STD_LOGIC_VECTOR'( "1000101");
        state_var_NS <= COMP_LOOP_C_68;
      WHEN COMP_LOOP_C_68 =>
        fsm_output <= STD_LOGIC_VECTOR'( "1000110");
        state_var_NS <= COMP_LOOP_C_69;
      WHEN COMP_LOOP_C_69 =>
        fsm_output <= STD_LOGIC_VECTOR'( "1000111");
        state_var_NS <= COMP_LOOP_C_70;
      WHEN COMP_LOOP_C_70 =>
        fsm_output <= STD_LOGIC_VECTOR'( "1001000");
        state_var_NS <= COMP_LOOP_C_71;
      WHEN COMP_LOOP_C_71 =>
        fsm_output <= STD_LOGIC_VECTOR'( "1001001");
        state_var_NS <= COMP_LOOP_C_72;
      WHEN COMP_LOOP_C_72 =>
        fsm_output <= STD_LOGIC_VECTOR'( "1001010");
        state_var_NS <= COMP_LOOP_C_73;
      WHEN COMP_LOOP_C_73 =>
        fsm_output <= STD_LOGIC_VECTOR'( "1001011");
        state_var_NS <= COMP_LOOP_C_74;
      WHEN COMP_LOOP_C_74 =>
        fsm_output <= STD_LOGIC_VECTOR'( "1001100");
        state_var_NS <= COMP_LOOP_C_75;
      WHEN COMP_LOOP_C_75 =>
        fsm_output <= STD_LOGIC_VECTOR'( "1001101");
        state_var_NS <= COMP_LOOP_C_76;
      WHEN COMP_LOOP_C_76 =>
        fsm_output <= STD_LOGIC_VECTOR'( "1001110");
        state_var_NS <= COMP_LOOP_C_77;
      WHEN COMP_LOOP_C_77 =>
        fsm_output <= STD_LOGIC_VECTOR'( "1001111");
        IF ( COMP_LOOP_C_77_tr0 = '1' ) THEN
          state_var_NS <= VEC_LOOP_C_0;
        ELSE
          state_var_NS <= COMP_LOOP_C_0;
        END IF;
      WHEN VEC_LOOP_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "1010000");
        IF ( VEC_LOOP_C_0_tr0 = '1' ) THEN
          state_var_NS <= STAGE_LOOP_C_1;
        ELSE
          state_var_NS <= COMP_LOOP_C_0;
        END IF;
      WHEN STAGE_LOOP_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "1010001");
        IF ( STAGE_LOOP_C_1_tr0 = '1' ) THEN
          state_var_NS <= main_C_1;
        ELSE
          state_var_NS <= STAGE_LOOP_C_0;
        END IF;
      WHEN main_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "1010010");
        state_var_NS <= main_C_0;
      -- main_C_0
      WHEN OTHERS =>
        fsm_output <= STD_LOGIC_VECTOR'( "0000000");
        state_var_NS <= STAGE_LOOP_C_0;
    END CASE;
  END PROCESS inPlaceNTT_DIT_precomp_core_core_fsm_1;

  inPlaceNTT_DIT_precomp_core_core_fsm_1_REG : PROCESS (clk)
  BEGIN
    IF clk'event AND ( clk = '1' ) THEN
      IF ( rst = '1' ) THEN
        state_var <= main_C_0;
      ELSE
        IF ( core_wen = '1' ) THEN
          state_var <= state_var_NS;
        END IF;
      END IF;
    END IF;
  END PROCESS inPlaceNTT_DIT_precomp_core_core_fsm_1_REG;

END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_staller
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_staller IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    core_wen : OUT STD_LOGIC;
    core_wten : OUT STD_LOGIC;
    vec_rsc_0_0_i_wen_comp : IN STD_LOGIC;
    vec_rsc_0_0_i_wen_comp_1 : IN STD_LOGIC;
    vec_rsc_0_1_i_wen_comp : IN STD_LOGIC;
    vec_rsc_0_1_i_wen_comp_1 : IN STD_LOGIC;
    twiddle_rsc_0_0_i_wen_comp : IN STD_LOGIC;
    twiddle_rsc_0_1_i_wen_comp : IN STD_LOGIC
  );
END inPlaceNTT_DIT_precomp_core_staller;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_staller IS
  -- Default Constants

  -- Output Reader Declarations
  SIGNAL core_wen_drv : STD_LOGIC;

BEGIN
  -- Output Reader Assignments
  core_wen <= core_wen_drv;

  core_wen_drv <= vec_rsc_0_0_i_wen_comp AND vec_rsc_0_0_i_wen_comp_1 AND vec_rsc_0_1_i_wen_comp
      AND vec_rsc_0_1_i_wen_comp_1 AND twiddle_rsc_0_0_i_wen_comp AND twiddle_rsc_0_1_i_wen_comp;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        core_wten <= '0';
      ELSE
        core_wten <= NOT core_wen_drv;
      END IF;
    END IF;
  END PROCESS;
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_0_obj_twiddle_rsc_triosy_0_0_wait_ctrl
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_0_obj_twiddle_rsc_triosy_0_0_wait_ctrl
    IS
  PORT(
    core_wten : IN STD_LOGIC;
    twiddle_rsc_triosy_0_0_obj_iswt0 : IN STD_LOGIC;
    twiddle_rsc_triosy_0_0_obj_ld_core_sct : OUT STD_LOGIC
  );
END inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_0_obj_twiddle_rsc_triosy_0_0_wait_ctrl;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_0_obj_twiddle_rsc_triosy_0_0_wait_ctrl
    IS
  -- Default Constants

BEGIN
  twiddle_rsc_triosy_0_0_obj_ld_core_sct <= twiddle_rsc_triosy_0_0_obj_iswt0 AND
      (NOT core_wten);
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_1_obj_twiddle_rsc_triosy_0_1_wait_ctrl
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_1_obj_twiddle_rsc_triosy_0_1_wait_ctrl
    IS
  PORT(
    core_wten : IN STD_LOGIC;
    twiddle_rsc_triosy_0_1_obj_iswt0 : IN STD_LOGIC;
    twiddle_rsc_triosy_0_1_obj_ld_core_sct : OUT STD_LOGIC
  );
END inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_1_obj_twiddle_rsc_triosy_0_1_wait_ctrl;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_1_obj_twiddle_rsc_triosy_0_1_wait_ctrl
    IS
  -- Default Constants

BEGIN
  twiddle_rsc_triosy_0_1_obj_ld_core_sct <= twiddle_rsc_triosy_0_1_obj_iswt0 AND
      (NOT core_wten);
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_r_rsc_triosy_obj_r_rsc_triosy_wait_ctrl
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_r_rsc_triosy_obj_r_rsc_triosy_wait_ctrl IS
  PORT(
    core_wten : IN STD_LOGIC;
    r_rsc_triosy_obj_iswt0 : IN STD_LOGIC;
    r_rsc_triosy_obj_ld_core_sct : OUT STD_LOGIC
  );
END inPlaceNTT_DIT_precomp_core_r_rsc_triosy_obj_r_rsc_triosy_wait_ctrl;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_r_rsc_triosy_obj_r_rsc_triosy_wait_ctrl
    IS
  -- Default Constants

BEGIN
  r_rsc_triosy_obj_ld_core_sct <= r_rsc_triosy_obj_iswt0 AND (NOT core_wten);
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_p_rsc_triosy_obj_p_rsc_triosy_wait_ctrl
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_p_rsc_triosy_obj_p_rsc_triosy_wait_ctrl IS
  PORT(
    core_wten : IN STD_LOGIC;
    p_rsc_triosy_obj_iswt0 : IN STD_LOGIC;
    p_rsc_triosy_obj_ld_core_sct : OUT STD_LOGIC
  );
END inPlaceNTT_DIT_precomp_core_p_rsc_triosy_obj_p_rsc_triosy_wait_ctrl;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_p_rsc_triosy_obj_p_rsc_triosy_wait_ctrl
    IS
  -- Default Constants

BEGIN
  p_rsc_triosy_obj_ld_core_sct <= p_rsc_triosy_obj_iswt0 AND (NOT core_wten);
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_0_obj_vec_rsc_triosy_0_0_wait_ctrl
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_0_obj_vec_rsc_triosy_0_0_wait_ctrl
    IS
  PORT(
    core_wten : IN STD_LOGIC;
    vec_rsc_triosy_0_0_obj_iswt0 : IN STD_LOGIC;
    vec_rsc_triosy_0_0_obj_ld_core_sct : OUT STD_LOGIC
  );
END inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_0_obj_vec_rsc_triosy_0_0_wait_ctrl;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_0_obj_vec_rsc_triosy_0_0_wait_ctrl
    IS
  -- Default Constants

BEGIN
  vec_rsc_triosy_0_0_obj_ld_core_sct <= vec_rsc_triosy_0_0_obj_iswt0 AND (NOT core_wten);
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_1_obj_vec_rsc_triosy_0_1_wait_ctrl
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_1_obj_vec_rsc_triosy_0_1_wait_ctrl
    IS
  PORT(
    core_wten : IN STD_LOGIC;
    vec_rsc_triosy_0_1_obj_iswt0 : IN STD_LOGIC;
    vec_rsc_triosy_0_1_obj_ld_core_sct : OUT STD_LOGIC
  );
END inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_1_obj_vec_rsc_triosy_0_1_wait_ctrl;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_1_obj_vec_rsc_triosy_0_1_wait_ctrl
    IS
  -- Default Constants

BEGIN
  vec_rsc_triosy_0_1_obj_ld_core_sct <= vec_rsc_triosy_0_1_obj_iswt0 AND (NOT core_wten);
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    twiddle_rsc_0_1_i_oswt : IN STD_LOGIC;
    twiddle_rsc_0_1_i_wen_comp : OUT STD_LOGIC;
    twiddle_rsc_0_1_i_s_raddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    twiddle_rsc_0_1_i_s_din_mxwt : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
    twiddle_rsc_0_1_i_biwt : IN STD_LOGIC;
    twiddle_rsc_0_1_i_bdwt : IN STD_LOGIC;
    twiddle_rsc_0_1_i_bcwt : OUT STD_LOGIC;
    twiddle_rsc_0_1_i_s_raddr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    twiddle_rsc_0_1_i_s_raddr_core_sct : IN STD_LOGIC;
    twiddle_rsc_0_1_i_s_din : IN STD_LOGIC_VECTOR (63 DOWNTO 0)
  );
END inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp
    IS
  -- Default Constants

  -- Output Reader Declarations
  SIGNAL twiddle_rsc_0_1_i_bcwt_drv : STD_LOGIC;

  -- Interconnect Declarations
  SIGNAL twiddle_rsc_0_1_i_s_din_bfwt : STD_LOGIC_VECTOR (63 DOWNTO 0);

  FUNCTION MUX_v_64_2_2(input_0 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(63 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_9_2_2(input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

BEGIN
  -- Output Reader Assignments
  twiddle_rsc_0_1_i_bcwt <= twiddle_rsc_0_1_i_bcwt_drv;

  twiddle_rsc_0_1_i_wen_comp <= (NOT twiddle_rsc_0_1_i_oswt) OR twiddle_rsc_0_1_i_biwt
      OR twiddle_rsc_0_1_i_bcwt_drv;
  twiddle_rsc_0_1_i_s_raddr <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"), twiddle_rsc_0_1_i_s_raddr_core,
      twiddle_rsc_0_1_i_s_raddr_core_sct);
  twiddle_rsc_0_1_i_s_din_mxwt <= MUX_v_64_2_2(twiddle_rsc_0_1_i_s_din, twiddle_rsc_0_1_i_s_din_bfwt,
      twiddle_rsc_0_1_i_bcwt_drv);
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        twiddle_rsc_0_1_i_bcwt_drv <= '0';
      ELSE
        twiddle_rsc_0_1_i_bcwt_drv <= NOT((NOT(twiddle_rsc_0_1_i_bcwt_drv OR twiddle_rsc_0_1_i_biwt))
            OR twiddle_rsc_0_1_i_bdwt);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( twiddle_rsc_0_1_i_biwt = '1' ) THEN
        twiddle_rsc_0_1_i_s_din_bfwt <= twiddle_rsc_0_1_i_s_din;
      END IF;
    END IF;
  END PROCESS;
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_ctrl
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_ctrl IS
  PORT(
    core_wen : IN STD_LOGIC;
    twiddle_rsc_0_1_i_oswt : IN STD_LOGIC;
    twiddle_rsc_0_1_i_biwt : OUT STD_LOGIC;
    twiddle_rsc_0_1_i_bdwt : OUT STD_LOGIC;
    twiddle_rsc_0_1_i_bcwt : IN STD_LOGIC;
    twiddle_rsc_0_1_i_s_re_core_sct : OUT STD_LOGIC;
    twiddle_rsc_0_1_i_s_rrdy : IN STD_LOGIC
  );
END inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_ctrl;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_ctrl
    IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL twiddle_rsc_0_1_i_ogwt : STD_LOGIC;

BEGIN
  twiddle_rsc_0_1_i_bdwt <= twiddle_rsc_0_1_i_oswt AND core_wen;
  twiddle_rsc_0_1_i_biwt <= twiddle_rsc_0_1_i_ogwt AND twiddle_rsc_0_1_i_s_rrdy;
  twiddle_rsc_0_1_i_ogwt <= twiddle_rsc_0_1_i_oswt AND (NOT twiddle_rsc_0_1_i_bcwt);
  twiddle_rsc_0_1_i_s_re_core_sct <= twiddle_rsc_0_1_i_ogwt;
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    twiddle_rsc_0_0_i_oswt : IN STD_LOGIC;
    twiddle_rsc_0_0_i_wen_comp : OUT STD_LOGIC;
    twiddle_rsc_0_0_i_s_raddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    twiddle_rsc_0_0_i_s_din_mxwt : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
    twiddle_rsc_0_0_i_biwt : IN STD_LOGIC;
    twiddle_rsc_0_0_i_bdwt : IN STD_LOGIC;
    twiddle_rsc_0_0_i_bcwt : OUT STD_LOGIC;
    twiddle_rsc_0_0_i_s_raddr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    twiddle_rsc_0_0_i_s_raddr_core_sct : IN STD_LOGIC;
    twiddle_rsc_0_0_i_s_din : IN STD_LOGIC_VECTOR (63 DOWNTO 0)
  );
END inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp
    IS
  -- Default Constants

  -- Output Reader Declarations
  SIGNAL twiddle_rsc_0_0_i_bcwt_drv : STD_LOGIC;

  -- Interconnect Declarations
  SIGNAL twiddle_rsc_0_0_i_s_din_bfwt : STD_LOGIC_VECTOR (63 DOWNTO 0);

  FUNCTION MUX_v_64_2_2(input_0 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(63 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_9_2_2(input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

BEGIN
  -- Output Reader Assignments
  twiddle_rsc_0_0_i_bcwt <= twiddle_rsc_0_0_i_bcwt_drv;

  twiddle_rsc_0_0_i_wen_comp <= (NOT twiddle_rsc_0_0_i_oswt) OR twiddle_rsc_0_0_i_biwt
      OR twiddle_rsc_0_0_i_bcwt_drv;
  twiddle_rsc_0_0_i_s_raddr <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"), twiddle_rsc_0_0_i_s_raddr_core,
      twiddle_rsc_0_0_i_s_raddr_core_sct);
  twiddle_rsc_0_0_i_s_din_mxwt <= MUX_v_64_2_2(twiddle_rsc_0_0_i_s_din, twiddle_rsc_0_0_i_s_din_bfwt,
      twiddle_rsc_0_0_i_bcwt_drv);
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        twiddle_rsc_0_0_i_bcwt_drv <= '0';
      ELSE
        twiddle_rsc_0_0_i_bcwt_drv <= NOT((NOT(twiddle_rsc_0_0_i_bcwt_drv OR twiddle_rsc_0_0_i_biwt))
            OR twiddle_rsc_0_0_i_bdwt);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( twiddle_rsc_0_0_i_biwt = '1' ) THEN
        twiddle_rsc_0_0_i_s_din_bfwt <= twiddle_rsc_0_0_i_s_din;
      END IF;
    END IF;
  END PROCESS;
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_ctrl
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_ctrl IS
  PORT(
    core_wen : IN STD_LOGIC;
    twiddle_rsc_0_0_i_oswt : IN STD_LOGIC;
    twiddle_rsc_0_0_i_biwt : OUT STD_LOGIC;
    twiddle_rsc_0_0_i_bdwt : OUT STD_LOGIC;
    twiddle_rsc_0_0_i_bcwt : IN STD_LOGIC;
    twiddle_rsc_0_0_i_s_re_core_sct : OUT STD_LOGIC;
    twiddle_rsc_0_0_i_s_rrdy : IN STD_LOGIC
  );
END inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_ctrl;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_ctrl
    IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL twiddle_rsc_0_0_i_ogwt : STD_LOGIC;

BEGIN
  twiddle_rsc_0_0_i_bdwt <= twiddle_rsc_0_0_i_oswt AND core_wen;
  twiddle_rsc_0_0_i_biwt <= twiddle_rsc_0_0_i_ogwt AND twiddle_rsc_0_0_i_s_rrdy;
  twiddle_rsc_0_0_i_ogwt <= twiddle_rsc_0_0_i_oswt AND (NOT twiddle_rsc_0_0_i_bcwt);
  twiddle_rsc_0_0_i_s_re_core_sct <= twiddle_rsc_0_0_i_ogwt;
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    vec_rsc_0_1_i_oswt : IN STD_LOGIC;
    vec_rsc_0_1_i_wen_comp : OUT STD_LOGIC;
    vec_rsc_0_1_i_oswt_1 : IN STD_LOGIC;
    vec_rsc_0_1_i_wen_comp_1 : OUT STD_LOGIC;
    vec_rsc_0_1_i_s_raddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    vec_rsc_0_1_i_s_waddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    vec_rsc_0_1_i_s_din_mxwt : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
    vec_rsc_0_1_i_s_dout_core : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
    vec_rsc_0_1_i_biwt : IN STD_LOGIC;
    vec_rsc_0_1_i_bdwt : IN STD_LOGIC;
    vec_rsc_0_1_i_bcwt : OUT STD_LOGIC;
    vec_rsc_0_1_i_biwt_1 : IN STD_LOGIC;
    vec_rsc_0_1_i_bdwt_2 : IN STD_LOGIC;
    vec_rsc_0_1_i_bcwt_1 : OUT STD_LOGIC;
    vec_rsc_0_1_i_s_raddr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    vec_rsc_0_1_i_s_raddr_core_sct : IN STD_LOGIC;
    vec_rsc_0_1_i_s_waddr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    vec_rsc_0_1_i_s_waddr_core_sct : IN STD_LOGIC;
    vec_rsc_0_1_i_s_din : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
    vec_rsc_0_1_i_s_dout : OUT STD_LOGIC_VECTOR (63 DOWNTO 0)
  );
END inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp
    IS
  -- Default Constants

  -- Output Reader Declarations
  SIGNAL vec_rsc_0_1_i_bcwt_drv : STD_LOGIC;
  SIGNAL vec_rsc_0_1_i_bcwt_1_drv : STD_LOGIC;

  -- Interconnect Declarations
  SIGNAL vec_rsc_0_1_i_s_din_bfwt : STD_LOGIC_VECTOR (63 DOWNTO 0);

  FUNCTION MUX_v_64_2_2(input_0 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(63 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_9_2_2(input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

BEGIN
  -- Output Reader Assignments
  vec_rsc_0_1_i_bcwt <= vec_rsc_0_1_i_bcwt_drv;
  vec_rsc_0_1_i_bcwt_1 <= vec_rsc_0_1_i_bcwt_1_drv;

  vec_rsc_0_1_i_wen_comp <= (NOT vec_rsc_0_1_i_oswt) OR vec_rsc_0_1_i_biwt OR vec_rsc_0_1_i_bcwt_drv;
  vec_rsc_0_1_i_wen_comp_1 <= (NOT vec_rsc_0_1_i_oswt_1) OR vec_rsc_0_1_i_biwt_1
      OR vec_rsc_0_1_i_bcwt_1_drv;
  vec_rsc_0_1_i_s_raddr <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"), vec_rsc_0_1_i_s_raddr_core,
      vec_rsc_0_1_i_s_raddr_core_sct);
  vec_rsc_0_1_i_s_waddr <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"), vec_rsc_0_1_i_s_waddr_core,
      vec_rsc_0_1_i_s_waddr_core_sct);
  vec_rsc_0_1_i_s_din_mxwt <= MUX_v_64_2_2(vec_rsc_0_1_i_s_din, vec_rsc_0_1_i_s_din_bfwt,
      vec_rsc_0_1_i_bcwt_drv);
  vec_rsc_0_1_i_s_dout <= MUX_v_64_2_2(STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000000000000000000000000000"),
      vec_rsc_0_1_i_s_dout_core, vec_rsc_0_1_i_s_waddr_core_sct);
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        vec_rsc_0_1_i_bcwt_drv <= '0';
        vec_rsc_0_1_i_bcwt_1_drv <= '0';
      ELSE
        vec_rsc_0_1_i_bcwt_drv <= NOT((NOT(vec_rsc_0_1_i_bcwt_drv OR vec_rsc_0_1_i_biwt))
            OR vec_rsc_0_1_i_bdwt);
        vec_rsc_0_1_i_bcwt_1_drv <= NOT((NOT(vec_rsc_0_1_i_bcwt_1_drv OR vec_rsc_0_1_i_biwt_1))
            OR vec_rsc_0_1_i_bdwt_2);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( vec_rsc_0_1_i_biwt = '1' ) THEN
        vec_rsc_0_1_i_s_din_bfwt <= vec_rsc_0_1_i_s_din;
      END IF;
    END IF;
  END PROCESS;
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_ctrl
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_ctrl IS
  PORT(
    core_wen : IN STD_LOGIC;
    vec_rsc_0_1_i_oswt : IN STD_LOGIC;
    vec_rsc_0_1_i_oswt_1 : IN STD_LOGIC;
    vec_rsc_0_1_i_biwt : OUT STD_LOGIC;
    vec_rsc_0_1_i_bdwt : OUT STD_LOGIC;
    vec_rsc_0_1_i_bcwt : IN STD_LOGIC;
    vec_rsc_0_1_i_s_re_core_sct : OUT STD_LOGIC;
    vec_rsc_0_1_i_biwt_1 : OUT STD_LOGIC;
    vec_rsc_0_1_i_bdwt_2 : OUT STD_LOGIC;
    vec_rsc_0_1_i_bcwt_1 : IN STD_LOGIC;
    vec_rsc_0_1_i_s_we_core_sct : OUT STD_LOGIC;
    vec_rsc_0_1_i_s_rrdy : IN STD_LOGIC;
    vec_rsc_0_1_i_s_wrdy : IN STD_LOGIC
  );
END inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_ctrl;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_ctrl
    IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL vec_rsc_0_1_i_ogwt : STD_LOGIC;
  SIGNAL vec_rsc_0_1_i_ogwt_1 : STD_LOGIC;

BEGIN
  vec_rsc_0_1_i_bdwt <= vec_rsc_0_1_i_oswt AND core_wen;
  vec_rsc_0_1_i_biwt <= vec_rsc_0_1_i_ogwt AND vec_rsc_0_1_i_s_rrdy;
  vec_rsc_0_1_i_ogwt <= vec_rsc_0_1_i_oswt AND (NOT vec_rsc_0_1_i_bcwt);
  vec_rsc_0_1_i_s_re_core_sct <= vec_rsc_0_1_i_ogwt;
  vec_rsc_0_1_i_bdwt_2 <= vec_rsc_0_1_i_oswt_1 AND core_wen;
  vec_rsc_0_1_i_biwt_1 <= vec_rsc_0_1_i_ogwt_1 AND vec_rsc_0_1_i_s_wrdy;
  vec_rsc_0_1_i_ogwt_1 <= vec_rsc_0_1_i_oswt_1 AND (NOT vec_rsc_0_1_i_bcwt_1);
  vec_rsc_0_1_i_s_we_core_sct <= vec_rsc_0_1_i_ogwt_1;
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    vec_rsc_0_0_i_oswt : IN STD_LOGIC;
    vec_rsc_0_0_i_wen_comp : OUT STD_LOGIC;
    vec_rsc_0_0_i_oswt_1 : IN STD_LOGIC;
    vec_rsc_0_0_i_wen_comp_1 : OUT STD_LOGIC;
    vec_rsc_0_0_i_s_raddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    vec_rsc_0_0_i_s_waddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    vec_rsc_0_0_i_s_din_mxwt : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
    vec_rsc_0_0_i_s_dout_core : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
    vec_rsc_0_0_i_biwt : IN STD_LOGIC;
    vec_rsc_0_0_i_bdwt : IN STD_LOGIC;
    vec_rsc_0_0_i_bcwt : OUT STD_LOGIC;
    vec_rsc_0_0_i_biwt_1 : IN STD_LOGIC;
    vec_rsc_0_0_i_bdwt_2 : IN STD_LOGIC;
    vec_rsc_0_0_i_bcwt_1 : OUT STD_LOGIC;
    vec_rsc_0_0_i_s_raddr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    vec_rsc_0_0_i_s_raddr_core_sct : IN STD_LOGIC;
    vec_rsc_0_0_i_s_waddr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    vec_rsc_0_0_i_s_waddr_core_sct : IN STD_LOGIC;
    vec_rsc_0_0_i_s_din : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
    vec_rsc_0_0_i_s_dout : OUT STD_LOGIC_VECTOR (63 DOWNTO 0)
  );
END inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp
    IS
  -- Default Constants

  -- Output Reader Declarations
  SIGNAL vec_rsc_0_0_i_bcwt_drv : STD_LOGIC;
  SIGNAL vec_rsc_0_0_i_bcwt_1_drv : STD_LOGIC;

  -- Interconnect Declarations
  SIGNAL vec_rsc_0_0_i_s_din_bfwt : STD_LOGIC_VECTOR (63 DOWNTO 0);

  FUNCTION MUX_v_64_2_2(input_0 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(63 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_9_2_2(input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

BEGIN
  -- Output Reader Assignments
  vec_rsc_0_0_i_bcwt <= vec_rsc_0_0_i_bcwt_drv;
  vec_rsc_0_0_i_bcwt_1 <= vec_rsc_0_0_i_bcwt_1_drv;

  vec_rsc_0_0_i_wen_comp <= (NOT vec_rsc_0_0_i_oswt) OR vec_rsc_0_0_i_biwt OR vec_rsc_0_0_i_bcwt_drv;
  vec_rsc_0_0_i_wen_comp_1 <= (NOT vec_rsc_0_0_i_oswt_1) OR vec_rsc_0_0_i_biwt_1
      OR vec_rsc_0_0_i_bcwt_1_drv;
  vec_rsc_0_0_i_s_raddr <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"), vec_rsc_0_0_i_s_raddr_core,
      vec_rsc_0_0_i_s_raddr_core_sct);
  vec_rsc_0_0_i_s_waddr <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"), vec_rsc_0_0_i_s_waddr_core,
      vec_rsc_0_0_i_s_waddr_core_sct);
  vec_rsc_0_0_i_s_din_mxwt <= MUX_v_64_2_2(vec_rsc_0_0_i_s_din, vec_rsc_0_0_i_s_din_bfwt,
      vec_rsc_0_0_i_bcwt_drv);
  vec_rsc_0_0_i_s_dout <= MUX_v_64_2_2(STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000000000000000000000000000"),
      vec_rsc_0_0_i_s_dout_core, vec_rsc_0_0_i_s_waddr_core_sct);
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        vec_rsc_0_0_i_bcwt_drv <= '0';
        vec_rsc_0_0_i_bcwt_1_drv <= '0';
      ELSE
        vec_rsc_0_0_i_bcwt_drv <= NOT((NOT(vec_rsc_0_0_i_bcwt_drv OR vec_rsc_0_0_i_biwt))
            OR vec_rsc_0_0_i_bdwt);
        vec_rsc_0_0_i_bcwt_1_drv <= NOT((NOT(vec_rsc_0_0_i_bcwt_1_drv OR vec_rsc_0_0_i_biwt_1))
            OR vec_rsc_0_0_i_bdwt_2);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( vec_rsc_0_0_i_biwt = '1' ) THEN
        vec_rsc_0_0_i_s_din_bfwt <= vec_rsc_0_0_i_s_din;
      END IF;
    END IF;
  END PROCESS;
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_ctrl
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_ctrl IS
  PORT(
    core_wen : IN STD_LOGIC;
    vec_rsc_0_0_i_oswt : IN STD_LOGIC;
    vec_rsc_0_0_i_oswt_1 : IN STD_LOGIC;
    vec_rsc_0_0_i_biwt : OUT STD_LOGIC;
    vec_rsc_0_0_i_bdwt : OUT STD_LOGIC;
    vec_rsc_0_0_i_bcwt : IN STD_LOGIC;
    vec_rsc_0_0_i_s_re_core_sct : OUT STD_LOGIC;
    vec_rsc_0_0_i_biwt_1 : OUT STD_LOGIC;
    vec_rsc_0_0_i_bdwt_2 : OUT STD_LOGIC;
    vec_rsc_0_0_i_bcwt_1 : IN STD_LOGIC;
    vec_rsc_0_0_i_s_we_core_sct : OUT STD_LOGIC;
    vec_rsc_0_0_i_s_rrdy : IN STD_LOGIC;
    vec_rsc_0_0_i_s_wrdy : IN STD_LOGIC
  );
END inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_ctrl;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_ctrl
    IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL vec_rsc_0_0_i_ogwt : STD_LOGIC;
  SIGNAL vec_rsc_0_0_i_ogwt_1 : STD_LOGIC;

BEGIN
  vec_rsc_0_0_i_bdwt <= vec_rsc_0_0_i_oswt AND core_wen;
  vec_rsc_0_0_i_biwt <= vec_rsc_0_0_i_ogwt AND vec_rsc_0_0_i_s_rrdy;
  vec_rsc_0_0_i_ogwt <= vec_rsc_0_0_i_oswt AND (NOT vec_rsc_0_0_i_bcwt);
  vec_rsc_0_0_i_s_re_core_sct <= vec_rsc_0_0_i_ogwt;
  vec_rsc_0_0_i_bdwt_2 <= vec_rsc_0_0_i_oswt_1 AND core_wen;
  vec_rsc_0_0_i_biwt_1 <= vec_rsc_0_0_i_ogwt_1 AND vec_rsc_0_0_i_s_wrdy;
  vec_rsc_0_0_i_ogwt_1 <= vec_rsc_0_0_i_oswt_1 AND (NOT vec_rsc_0_0_i_bcwt_1);
  vec_rsc_0_0_i_s_we_core_sct <= vec_rsc_0_0_i_ogwt_1;
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_0_obj
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_0_obj IS
  PORT(
    twiddle_rsc_triosy_0_0_lz : OUT STD_LOGIC;
    core_wten : IN STD_LOGIC;
    twiddle_rsc_triosy_0_0_obj_iswt0 : IN STD_LOGIC
  );
END inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_0_obj;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_0_obj IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL twiddle_rsc_triosy_0_0_obj_ld_core_sct : STD_LOGIC;

  COMPONENT inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_0_obj_twiddle_rsc_triosy_0_0_wait_ctrl
    PORT(
      core_wten : IN STD_LOGIC;
      twiddle_rsc_triosy_0_0_obj_iswt0 : IN STD_LOGIC;
      twiddle_rsc_triosy_0_0_obj_ld_core_sct : OUT STD_LOGIC
    );
  END COMPONENT;
BEGIN
  twiddle_rsc_triosy_0_0_obj : mgc_hls.mgc_io_sync_pkg_v2.mgc_io_sync_v2
    GENERIC MAP(
      valid => 0
      )
    PORT MAP(
      ld => twiddle_rsc_triosy_0_0_obj_ld_core_sct,
      lz => twiddle_rsc_triosy_0_0_lz
    );
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_0_obj_twiddle_rsc_triosy_0_0_wait_ctrl_inst
      : inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_0_obj_twiddle_rsc_triosy_0_0_wait_ctrl
    PORT MAP(
      core_wten => core_wten,
      twiddle_rsc_triosy_0_0_obj_iswt0 => twiddle_rsc_triosy_0_0_obj_iswt0,
      twiddle_rsc_triosy_0_0_obj_ld_core_sct => twiddle_rsc_triosy_0_0_obj_ld_core_sct
    );
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_1_obj
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_1_obj IS
  PORT(
    twiddle_rsc_triosy_0_1_lz : OUT STD_LOGIC;
    core_wten : IN STD_LOGIC;
    twiddle_rsc_triosy_0_1_obj_iswt0 : IN STD_LOGIC
  );
END inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_1_obj;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_1_obj IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL twiddle_rsc_triosy_0_1_obj_ld_core_sct : STD_LOGIC;

  COMPONENT inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_1_obj_twiddle_rsc_triosy_0_1_wait_ctrl
    PORT(
      core_wten : IN STD_LOGIC;
      twiddle_rsc_triosy_0_1_obj_iswt0 : IN STD_LOGIC;
      twiddle_rsc_triosy_0_1_obj_ld_core_sct : OUT STD_LOGIC
    );
  END COMPONENT;
BEGIN
  twiddle_rsc_triosy_0_1_obj : mgc_hls.mgc_io_sync_pkg_v2.mgc_io_sync_v2
    GENERIC MAP(
      valid => 0
      )
    PORT MAP(
      ld => twiddle_rsc_triosy_0_1_obj_ld_core_sct,
      lz => twiddle_rsc_triosy_0_1_lz
    );
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_1_obj_twiddle_rsc_triosy_0_1_wait_ctrl_inst
      : inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_1_obj_twiddle_rsc_triosy_0_1_wait_ctrl
    PORT MAP(
      core_wten => core_wten,
      twiddle_rsc_triosy_0_1_obj_iswt0 => twiddle_rsc_triosy_0_1_obj_iswt0,
      twiddle_rsc_triosy_0_1_obj_ld_core_sct => twiddle_rsc_triosy_0_1_obj_ld_core_sct
    );
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_r_rsc_triosy_obj
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_r_rsc_triosy_obj IS
  PORT(
    r_rsc_triosy_lz : OUT STD_LOGIC;
    core_wten : IN STD_LOGIC;
    r_rsc_triosy_obj_iswt0 : IN STD_LOGIC
  );
END inPlaceNTT_DIT_precomp_core_r_rsc_triosy_obj;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_r_rsc_triosy_obj IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL r_rsc_triosy_obj_ld_core_sct : STD_LOGIC;

  COMPONENT inPlaceNTT_DIT_precomp_core_r_rsc_triosy_obj_r_rsc_triosy_wait_ctrl
    PORT(
      core_wten : IN STD_LOGIC;
      r_rsc_triosy_obj_iswt0 : IN STD_LOGIC;
      r_rsc_triosy_obj_ld_core_sct : OUT STD_LOGIC
    );
  END COMPONENT;
BEGIN
  r_rsc_triosy_obj : mgc_hls.mgc_io_sync_pkg_v2.mgc_io_sync_v2
    GENERIC MAP(
      valid => 0
      )
    PORT MAP(
      ld => r_rsc_triosy_obj_ld_core_sct,
      lz => r_rsc_triosy_lz
    );
  inPlaceNTT_DIT_precomp_core_r_rsc_triosy_obj_r_rsc_triosy_wait_ctrl_inst : inPlaceNTT_DIT_precomp_core_r_rsc_triosy_obj_r_rsc_triosy_wait_ctrl
    PORT MAP(
      core_wten => core_wten,
      r_rsc_triosy_obj_iswt0 => r_rsc_triosy_obj_iswt0,
      r_rsc_triosy_obj_ld_core_sct => r_rsc_triosy_obj_ld_core_sct
    );
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_p_rsc_triosy_obj
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_p_rsc_triosy_obj IS
  PORT(
    p_rsc_triosy_lz : OUT STD_LOGIC;
    core_wten : IN STD_LOGIC;
    p_rsc_triosy_obj_iswt0 : IN STD_LOGIC
  );
END inPlaceNTT_DIT_precomp_core_p_rsc_triosy_obj;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_p_rsc_triosy_obj IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL p_rsc_triosy_obj_ld_core_sct : STD_LOGIC;

  COMPONENT inPlaceNTT_DIT_precomp_core_p_rsc_triosy_obj_p_rsc_triosy_wait_ctrl
    PORT(
      core_wten : IN STD_LOGIC;
      p_rsc_triosy_obj_iswt0 : IN STD_LOGIC;
      p_rsc_triosy_obj_ld_core_sct : OUT STD_LOGIC
    );
  END COMPONENT;
BEGIN
  p_rsc_triosy_obj : mgc_hls.mgc_io_sync_pkg_v2.mgc_io_sync_v2
    GENERIC MAP(
      valid => 0
      )
    PORT MAP(
      ld => p_rsc_triosy_obj_ld_core_sct,
      lz => p_rsc_triosy_lz
    );
  inPlaceNTT_DIT_precomp_core_p_rsc_triosy_obj_p_rsc_triosy_wait_ctrl_inst : inPlaceNTT_DIT_precomp_core_p_rsc_triosy_obj_p_rsc_triosy_wait_ctrl
    PORT MAP(
      core_wten => core_wten,
      p_rsc_triosy_obj_iswt0 => p_rsc_triosy_obj_iswt0,
      p_rsc_triosy_obj_ld_core_sct => p_rsc_triosy_obj_ld_core_sct
    );
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_0_obj
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_0_obj IS
  PORT(
    vec_rsc_triosy_0_0_lz : OUT STD_LOGIC;
    core_wten : IN STD_LOGIC;
    vec_rsc_triosy_0_0_obj_iswt0 : IN STD_LOGIC
  );
END inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_0_obj;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_0_obj IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL vec_rsc_triosy_0_0_obj_ld_core_sct : STD_LOGIC;

  COMPONENT inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_0_obj_vec_rsc_triosy_0_0_wait_ctrl
    PORT(
      core_wten : IN STD_LOGIC;
      vec_rsc_triosy_0_0_obj_iswt0 : IN STD_LOGIC;
      vec_rsc_triosy_0_0_obj_ld_core_sct : OUT STD_LOGIC
    );
  END COMPONENT;
BEGIN
  vec_rsc_triosy_0_0_obj : mgc_hls.mgc_io_sync_pkg_v2.mgc_io_sync_v2
    GENERIC MAP(
      valid => 0
      )
    PORT MAP(
      ld => vec_rsc_triosy_0_0_obj_ld_core_sct,
      lz => vec_rsc_triosy_0_0_lz
    );
  inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_0_obj_vec_rsc_triosy_0_0_wait_ctrl_inst
      : inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_0_obj_vec_rsc_triosy_0_0_wait_ctrl
    PORT MAP(
      core_wten => core_wten,
      vec_rsc_triosy_0_0_obj_iswt0 => vec_rsc_triosy_0_0_obj_iswt0,
      vec_rsc_triosy_0_0_obj_ld_core_sct => vec_rsc_triosy_0_0_obj_ld_core_sct
    );
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_1_obj
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_1_obj IS
  PORT(
    vec_rsc_triosy_0_1_lz : OUT STD_LOGIC;
    core_wten : IN STD_LOGIC;
    vec_rsc_triosy_0_1_obj_iswt0 : IN STD_LOGIC
  );
END inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_1_obj;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_1_obj IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL vec_rsc_triosy_0_1_obj_ld_core_sct : STD_LOGIC;

  COMPONENT inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_1_obj_vec_rsc_triosy_0_1_wait_ctrl
    PORT(
      core_wten : IN STD_LOGIC;
      vec_rsc_triosy_0_1_obj_iswt0 : IN STD_LOGIC;
      vec_rsc_triosy_0_1_obj_ld_core_sct : OUT STD_LOGIC
    );
  END COMPONENT;
BEGIN
  vec_rsc_triosy_0_1_obj : mgc_hls.mgc_io_sync_pkg_v2.mgc_io_sync_v2
    GENERIC MAP(
      valid => 0
      )
    PORT MAP(
      ld => vec_rsc_triosy_0_1_obj_ld_core_sct,
      lz => vec_rsc_triosy_0_1_lz
    );
  inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_1_obj_vec_rsc_triosy_0_1_wait_ctrl_inst
      : inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_1_obj_vec_rsc_triosy_0_1_wait_ctrl
    PORT MAP(
      core_wten => core_wten,
      vec_rsc_triosy_0_1_obj_iswt0 => vec_rsc_triosy_0_1_obj_iswt0,
      vec_rsc_triosy_0_1_obj_ld_core_sct => vec_rsc_triosy_0_1_obj_ld_core_sct
    );
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    twiddle_rsc_0_1_s_tdone : IN STD_LOGIC;
    twiddle_rsc_0_1_tr_write_done : IN STD_LOGIC;
    twiddle_rsc_0_1_RREADY : IN STD_LOGIC;
    twiddle_rsc_0_1_RVALID : OUT STD_LOGIC;
    twiddle_rsc_0_1_RUSER : OUT STD_LOGIC;
    twiddle_rsc_0_1_RLAST : OUT STD_LOGIC;
    twiddle_rsc_0_1_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_1_RDATA : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
    twiddle_rsc_0_1_RID : OUT STD_LOGIC;
    twiddle_rsc_0_1_ARREADY : OUT STD_LOGIC;
    twiddle_rsc_0_1_ARVALID : IN STD_LOGIC;
    twiddle_rsc_0_1_ARUSER : IN STD_LOGIC;
    twiddle_rsc_0_1_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_1_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_1_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_1_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_1_ARLOCK : IN STD_LOGIC;
    twiddle_rsc_0_1_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_1_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_1_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    twiddle_rsc_0_1_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    twiddle_rsc_0_1_ARID : IN STD_LOGIC;
    twiddle_rsc_0_1_BREADY : IN STD_LOGIC;
    twiddle_rsc_0_1_BVALID : OUT STD_LOGIC;
    twiddle_rsc_0_1_BUSER : OUT STD_LOGIC;
    twiddle_rsc_0_1_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_1_BID : OUT STD_LOGIC;
    twiddle_rsc_0_1_WREADY : OUT STD_LOGIC;
    twiddle_rsc_0_1_WVALID : IN STD_LOGIC;
    twiddle_rsc_0_1_WUSER : IN STD_LOGIC;
    twiddle_rsc_0_1_WLAST : IN STD_LOGIC;
    twiddle_rsc_0_1_WSTRB : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    twiddle_rsc_0_1_WDATA : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
    twiddle_rsc_0_1_AWREADY : OUT STD_LOGIC;
    twiddle_rsc_0_1_AWVALID : IN STD_LOGIC;
    twiddle_rsc_0_1_AWUSER : IN STD_LOGIC;
    twiddle_rsc_0_1_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_1_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_1_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_1_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_1_AWLOCK : IN STD_LOGIC;
    twiddle_rsc_0_1_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_1_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_1_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    twiddle_rsc_0_1_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    twiddle_rsc_0_1_AWID : IN STD_LOGIC;
    core_wen : IN STD_LOGIC;
    twiddle_rsc_0_1_i_oswt : IN STD_LOGIC;
    twiddle_rsc_0_1_i_wen_comp : OUT STD_LOGIC;
    twiddle_rsc_0_1_i_s_raddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    twiddle_rsc_0_1_i_s_din_mxwt : OUT STD_LOGIC_VECTOR (63 DOWNTO 0)
  );
END inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i IS
  -- Default Constants
  CONSTANT PWR : STD_LOGIC := '1';
  CONSTANT GND : STD_LOGIC := '0';

  -- Interconnect Declarations
  SIGNAL twiddle_rsc_0_1_i_biwt : STD_LOGIC;
  SIGNAL twiddle_rsc_0_1_i_bdwt : STD_LOGIC;
  SIGNAL twiddle_rsc_0_1_i_bcwt : STD_LOGIC;
  SIGNAL twiddle_rsc_0_1_i_s_re_core_sct : STD_LOGIC;
  SIGNAL twiddle_rsc_0_1_i_s_raddr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_s_din : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_s_rrdy : STD_LOGIC;
  SIGNAL twiddle_rsc_0_1_i_s_wrdy : STD_LOGIC;
  SIGNAL twiddle_rsc_0_1_is_idle : STD_LOGIC;

  SIGNAL twiddle_rsc_0_1_i_AWID : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_AWADDR : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_AWLEN : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_AWSIZE : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_AWBURST : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_AWCACHE : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_AWPROT : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_AWQOS : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_AWREGION : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_AWUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_WDATA : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_WSTRB : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_WUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_BID : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_BRESP : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_BUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_ARID : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_ARADDR : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_ARLEN : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_ARSIZE : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_ARBURST : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_ARCACHE : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_ARPROT : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_ARQOS : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_ARREGION : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_ARUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_RID : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_RDATA : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_RRESP : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_RUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_s_raddr_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_s_waddr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_s_din_1 : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_s_dout : STD_LOGIC_VECTOR (63 DOWNTO 0);

  COMPONENT inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_ctrl
    PORT(
      core_wen : IN STD_LOGIC;
      twiddle_rsc_0_1_i_oswt : IN STD_LOGIC;
      twiddle_rsc_0_1_i_biwt : OUT STD_LOGIC;
      twiddle_rsc_0_1_i_bdwt : OUT STD_LOGIC;
      twiddle_rsc_0_1_i_bcwt : IN STD_LOGIC;
      twiddle_rsc_0_1_i_s_re_core_sct : OUT STD_LOGIC;
      twiddle_rsc_0_1_i_s_rrdy : IN STD_LOGIC
    );
  END COMPONENT;
  COMPONENT inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      twiddle_rsc_0_1_i_oswt : IN STD_LOGIC;
      twiddle_rsc_0_1_i_wen_comp : OUT STD_LOGIC;
      twiddle_rsc_0_1_i_s_raddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      twiddle_rsc_0_1_i_s_din_mxwt : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
      twiddle_rsc_0_1_i_biwt : IN STD_LOGIC;
      twiddle_rsc_0_1_i_bdwt : IN STD_LOGIC;
      twiddle_rsc_0_1_i_bcwt : OUT STD_LOGIC;
      twiddle_rsc_0_1_i_s_raddr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      twiddle_rsc_0_1_i_s_raddr_core_sct : IN STD_LOGIC;
      twiddle_rsc_0_1_i_s_din : IN STD_LOGIC_VECTOR (63 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp_inst_twiddle_rsc_0_1_i_s_raddr_core
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp_inst_twiddle_rsc_0_1_i_s_din_mxwt
      : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp_inst_twiddle_rsc_0_1_i_s_raddr
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp_inst_twiddle_rsc_0_1_i_s_din
      : STD_LOGIC_VECTOR (63 DOWNTO 0);

BEGIN
  twiddle_rsc_0_1_i : amba_lib.amba_comps.ccs_axi4_slave_mem
    GENERIC MAP(
      rscid => 0,
      depth => 512,
      op_width => 64,
      cwidth => 64,
      addr_w => 9,
      nopreload => 0,
      rst_ph => 0,
      ADDR_WIDTH => 12,
      DATA_WIDTH => 64,
      ID_WIDTH => 1,
      USER_WIDTH => 1,
      REGION_MAP_SIZE => 1,
      wBASE_ADDRESS => 0,
      rBASE_ADDRESS => 0
      )
    PORT MAP(
      ACLK => clk,
      ARESETn => '1',
      AWID => twiddle_rsc_0_1_i_AWID,
      AWADDR => twiddle_rsc_0_1_i_AWADDR,
      AWLEN => twiddle_rsc_0_1_i_AWLEN,
      AWSIZE => twiddle_rsc_0_1_i_AWSIZE,
      AWBURST => twiddle_rsc_0_1_i_AWBURST,
      AWLOCK => twiddle_rsc_0_1_AWLOCK,
      AWCACHE => twiddle_rsc_0_1_i_AWCACHE,
      AWPROT => twiddle_rsc_0_1_i_AWPROT,
      AWQOS => twiddle_rsc_0_1_i_AWQOS,
      AWREGION => twiddle_rsc_0_1_i_AWREGION,
      AWUSER => twiddle_rsc_0_1_i_AWUSER,
      AWVALID => twiddle_rsc_0_1_AWVALID,
      AWREADY => twiddle_rsc_0_1_AWREADY,
      WDATA => twiddle_rsc_0_1_i_WDATA,
      WSTRB => twiddle_rsc_0_1_i_WSTRB,
      WLAST => twiddle_rsc_0_1_WLAST,
      WUSER => twiddle_rsc_0_1_i_WUSER,
      WVALID => twiddle_rsc_0_1_WVALID,
      WREADY => twiddle_rsc_0_1_WREADY,
      BID => twiddle_rsc_0_1_i_BID,
      BRESP => twiddle_rsc_0_1_i_BRESP,
      BUSER => twiddle_rsc_0_1_i_BUSER,
      BVALID => twiddle_rsc_0_1_BVALID,
      BREADY => twiddle_rsc_0_1_BREADY,
      ARID => twiddle_rsc_0_1_i_ARID,
      ARADDR => twiddle_rsc_0_1_i_ARADDR,
      ARLEN => twiddle_rsc_0_1_i_ARLEN,
      ARSIZE => twiddle_rsc_0_1_i_ARSIZE,
      ARBURST => twiddle_rsc_0_1_i_ARBURST,
      ARLOCK => twiddle_rsc_0_1_ARLOCK,
      ARCACHE => twiddle_rsc_0_1_i_ARCACHE,
      ARPROT => twiddle_rsc_0_1_i_ARPROT,
      ARQOS => twiddle_rsc_0_1_i_ARQOS,
      ARREGION => twiddle_rsc_0_1_i_ARREGION,
      ARUSER => twiddle_rsc_0_1_i_ARUSER,
      ARVALID => twiddle_rsc_0_1_ARVALID,
      ARREADY => twiddle_rsc_0_1_ARREADY,
      RID => twiddle_rsc_0_1_i_RID,
      RDATA => twiddle_rsc_0_1_i_RDATA,
      RRESP => twiddle_rsc_0_1_i_RRESP,
      RLAST => twiddle_rsc_0_1_RLAST,
      RUSER => twiddle_rsc_0_1_i_RUSER,
      RVALID => twiddle_rsc_0_1_RVALID,
      RREADY => twiddle_rsc_0_1_RREADY,
      s_re => twiddle_rsc_0_1_i_s_re_core_sct,
      s_we => '0',
      s_raddr => twiddle_rsc_0_1_i_s_raddr_1,
      s_waddr => twiddle_rsc_0_1_i_s_waddr,
      s_din => twiddle_rsc_0_1_i_s_din_1,
      s_dout => twiddle_rsc_0_1_i_s_dout,
      s_rrdy => twiddle_rsc_0_1_i_s_rrdy,
      s_wrdy => twiddle_rsc_0_1_i_s_wrdy,
      is_idle => twiddle_rsc_0_1_is_idle,
      tr_write_done => twiddle_rsc_0_1_tr_write_done,
      s_tdone => twiddle_rsc_0_1_s_tdone
    );
  twiddle_rsc_0_1_i_AWID(0) <= twiddle_rsc_0_1_AWID;
  twiddle_rsc_0_1_i_AWADDR <= twiddle_rsc_0_1_AWADDR;
  twiddle_rsc_0_1_i_AWLEN <= twiddle_rsc_0_1_AWLEN;
  twiddle_rsc_0_1_i_AWSIZE <= twiddle_rsc_0_1_AWSIZE;
  twiddle_rsc_0_1_i_AWBURST <= twiddle_rsc_0_1_AWBURST;
  twiddle_rsc_0_1_i_AWCACHE <= twiddle_rsc_0_1_AWCACHE;
  twiddle_rsc_0_1_i_AWPROT <= twiddle_rsc_0_1_AWPROT;
  twiddle_rsc_0_1_i_AWQOS <= twiddle_rsc_0_1_AWQOS;
  twiddle_rsc_0_1_i_AWREGION <= twiddle_rsc_0_1_AWREGION;
  twiddle_rsc_0_1_i_AWUSER(0) <= twiddle_rsc_0_1_AWUSER;
  twiddle_rsc_0_1_i_WDATA <= twiddle_rsc_0_1_WDATA;
  twiddle_rsc_0_1_i_WSTRB <= twiddle_rsc_0_1_WSTRB;
  twiddle_rsc_0_1_i_WUSER(0) <= twiddle_rsc_0_1_WUSER;
  twiddle_rsc_0_1_BID <= twiddle_rsc_0_1_i_BID(0);
  twiddle_rsc_0_1_BRESP <= twiddle_rsc_0_1_i_BRESP;
  twiddle_rsc_0_1_BUSER <= twiddle_rsc_0_1_i_BUSER(0);
  twiddle_rsc_0_1_i_ARID(0) <= twiddle_rsc_0_1_ARID;
  twiddle_rsc_0_1_i_ARADDR <= twiddle_rsc_0_1_ARADDR;
  twiddle_rsc_0_1_i_ARLEN <= twiddle_rsc_0_1_ARLEN;
  twiddle_rsc_0_1_i_ARSIZE <= twiddle_rsc_0_1_ARSIZE;
  twiddle_rsc_0_1_i_ARBURST <= twiddle_rsc_0_1_ARBURST;
  twiddle_rsc_0_1_i_ARCACHE <= twiddle_rsc_0_1_ARCACHE;
  twiddle_rsc_0_1_i_ARPROT <= twiddle_rsc_0_1_ARPROT;
  twiddle_rsc_0_1_i_ARQOS <= twiddle_rsc_0_1_ARQOS;
  twiddle_rsc_0_1_i_ARREGION <= twiddle_rsc_0_1_ARREGION;
  twiddle_rsc_0_1_i_ARUSER(0) <= twiddle_rsc_0_1_ARUSER;
  twiddle_rsc_0_1_RID <= twiddle_rsc_0_1_i_RID(0);
  twiddle_rsc_0_1_RDATA <= twiddle_rsc_0_1_i_RDATA;
  twiddle_rsc_0_1_RRESP <= twiddle_rsc_0_1_i_RRESP;
  twiddle_rsc_0_1_RUSER <= twiddle_rsc_0_1_i_RUSER(0);
  twiddle_rsc_0_1_i_s_raddr_1 <= twiddle_rsc_0_1_i_s_raddr;
  twiddle_rsc_0_1_i_s_waddr <= STD_LOGIC_VECTOR'( "000000000");
  twiddle_rsc_0_1_i_s_din <= twiddle_rsc_0_1_i_s_din_1;
  twiddle_rsc_0_1_i_s_dout <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000000000000000000000000000");

  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_ctrl_inst :
      inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_ctrl
    PORT MAP(
      core_wen => core_wen,
      twiddle_rsc_0_1_i_oswt => twiddle_rsc_0_1_i_oswt,
      twiddle_rsc_0_1_i_biwt => twiddle_rsc_0_1_i_biwt,
      twiddle_rsc_0_1_i_bdwt => twiddle_rsc_0_1_i_bdwt,
      twiddle_rsc_0_1_i_bcwt => twiddle_rsc_0_1_i_bcwt,
      twiddle_rsc_0_1_i_s_re_core_sct => twiddle_rsc_0_1_i_s_re_core_sct,
      twiddle_rsc_0_1_i_s_rrdy => twiddle_rsc_0_1_i_s_rrdy
    );
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp_inst : inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp
    PORT MAP(
      clk => clk,
      rst => rst,
      twiddle_rsc_0_1_i_oswt => twiddle_rsc_0_1_i_oswt,
      twiddle_rsc_0_1_i_wen_comp => twiddle_rsc_0_1_i_wen_comp,
      twiddle_rsc_0_1_i_s_raddr_core => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp_inst_twiddle_rsc_0_1_i_s_raddr_core,
      twiddle_rsc_0_1_i_s_din_mxwt => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp_inst_twiddle_rsc_0_1_i_s_din_mxwt,
      twiddle_rsc_0_1_i_biwt => twiddle_rsc_0_1_i_biwt,
      twiddle_rsc_0_1_i_bdwt => twiddle_rsc_0_1_i_bdwt,
      twiddle_rsc_0_1_i_bcwt => twiddle_rsc_0_1_i_bcwt,
      twiddle_rsc_0_1_i_s_raddr => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp_inst_twiddle_rsc_0_1_i_s_raddr,
      twiddle_rsc_0_1_i_s_raddr_core_sct => twiddle_rsc_0_1_i_s_re_core_sct,
      twiddle_rsc_0_1_i_s_din => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp_inst_twiddle_rsc_0_1_i_s_din
    );
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp_inst_twiddle_rsc_0_1_i_s_raddr_core
      <= twiddle_rsc_0_1_i_s_raddr_core;
  twiddle_rsc_0_1_i_s_din_mxwt <= inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp_inst_twiddle_rsc_0_1_i_s_din_mxwt;
  twiddle_rsc_0_1_i_s_raddr <= inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp_inst_twiddle_rsc_0_1_i_s_raddr;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_twiddle_rsc_0_1_wait_dp_inst_twiddle_rsc_0_1_i_s_din
      <= twiddle_rsc_0_1_i_s_din;

END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    twiddle_rsc_0_0_s_tdone : IN STD_LOGIC;
    twiddle_rsc_0_0_tr_write_done : IN STD_LOGIC;
    twiddle_rsc_0_0_RREADY : IN STD_LOGIC;
    twiddle_rsc_0_0_RVALID : OUT STD_LOGIC;
    twiddle_rsc_0_0_RUSER : OUT STD_LOGIC;
    twiddle_rsc_0_0_RLAST : OUT STD_LOGIC;
    twiddle_rsc_0_0_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_0_RDATA : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
    twiddle_rsc_0_0_RID : OUT STD_LOGIC;
    twiddle_rsc_0_0_ARREADY : OUT STD_LOGIC;
    twiddle_rsc_0_0_ARVALID : IN STD_LOGIC;
    twiddle_rsc_0_0_ARUSER : IN STD_LOGIC;
    twiddle_rsc_0_0_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_0_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_0_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_0_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_0_ARLOCK : IN STD_LOGIC;
    twiddle_rsc_0_0_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_0_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_0_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    twiddle_rsc_0_0_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    twiddle_rsc_0_0_ARID : IN STD_LOGIC;
    twiddle_rsc_0_0_BREADY : IN STD_LOGIC;
    twiddle_rsc_0_0_BVALID : OUT STD_LOGIC;
    twiddle_rsc_0_0_BUSER : OUT STD_LOGIC;
    twiddle_rsc_0_0_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_0_BID : OUT STD_LOGIC;
    twiddle_rsc_0_0_WREADY : OUT STD_LOGIC;
    twiddle_rsc_0_0_WVALID : IN STD_LOGIC;
    twiddle_rsc_0_0_WUSER : IN STD_LOGIC;
    twiddle_rsc_0_0_WLAST : IN STD_LOGIC;
    twiddle_rsc_0_0_WSTRB : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    twiddle_rsc_0_0_WDATA : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
    twiddle_rsc_0_0_AWREADY : OUT STD_LOGIC;
    twiddle_rsc_0_0_AWVALID : IN STD_LOGIC;
    twiddle_rsc_0_0_AWUSER : IN STD_LOGIC;
    twiddle_rsc_0_0_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_0_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_0_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_0_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_0_AWLOCK : IN STD_LOGIC;
    twiddle_rsc_0_0_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_0_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_0_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    twiddle_rsc_0_0_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    twiddle_rsc_0_0_AWID : IN STD_LOGIC;
    core_wen : IN STD_LOGIC;
    twiddle_rsc_0_0_i_oswt : IN STD_LOGIC;
    twiddle_rsc_0_0_i_wen_comp : OUT STD_LOGIC;
    twiddle_rsc_0_0_i_s_raddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    twiddle_rsc_0_0_i_s_din_mxwt : OUT STD_LOGIC_VECTOR (63 DOWNTO 0)
  );
END inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i IS
  -- Default Constants
  CONSTANT PWR : STD_LOGIC := '1';
  CONSTANT GND : STD_LOGIC := '0';

  -- Interconnect Declarations
  SIGNAL twiddle_rsc_0_0_i_biwt : STD_LOGIC;
  SIGNAL twiddle_rsc_0_0_i_bdwt : STD_LOGIC;
  SIGNAL twiddle_rsc_0_0_i_bcwt : STD_LOGIC;
  SIGNAL twiddle_rsc_0_0_i_s_re_core_sct : STD_LOGIC;
  SIGNAL twiddle_rsc_0_0_i_s_raddr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_s_din : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_s_rrdy : STD_LOGIC;
  SIGNAL twiddle_rsc_0_0_i_s_wrdy : STD_LOGIC;
  SIGNAL twiddle_rsc_0_0_is_idle : STD_LOGIC;

  SIGNAL twiddle_rsc_0_0_i_AWID : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_AWADDR : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_AWLEN : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_AWSIZE : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_AWBURST : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_AWCACHE : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_AWPROT : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_AWQOS : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_AWREGION : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_AWUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_WDATA : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_WSTRB : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_WUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_BID : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_BRESP : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_BUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_ARID : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_ARADDR : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_ARLEN : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_ARSIZE : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_ARBURST : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_ARCACHE : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_ARPROT : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_ARQOS : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_ARREGION : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_ARUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_RID : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_RDATA : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_RRESP : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_RUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_s_raddr_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_s_waddr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_s_din_1 : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_s_dout : STD_LOGIC_VECTOR (63 DOWNTO 0);

  COMPONENT inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_ctrl
    PORT(
      core_wen : IN STD_LOGIC;
      twiddle_rsc_0_0_i_oswt : IN STD_LOGIC;
      twiddle_rsc_0_0_i_biwt : OUT STD_LOGIC;
      twiddle_rsc_0_0_i_bdwt : OUT STD_LOGIC;
      twiddle_rsc_0_0_i_bcwt : IN STD_LOGIC;
      twiddle_rsc_0_0_i_s_re_core_sct : OUT STD_LOGIC;
      twiddle_rsc_0_0_i_s_rrdy : IN STD_LOGIC
    );
  END COMPONENT;
  COMPONENT inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      twiddle_rsc_0_0_i_oswt : IN STD_LOGIC;
      twiddle_rsc_0_0_i_wen_comp : OUT STD_LOGIC;
      twiddle_rsc_0_0_i_s_raddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      twiddle_rsc_0_0_i_s_din_mxwt : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
      twiddle_rsc_0_0_i_biwt : IN STD_LOGIC;
      twiddle_rsc_0_0_i_bdwt : IN STD_LOGIC;
      twiddle_rsc_0_0_i_bcwt : OUT STD_LOGIC;
      twiddle_rsc_0_0_i_s_raddr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      twiddle_rsc_0_0_i_s_raddr_core_sct : IN STD_LOGIC;
      twiddle_rsc_0_0_i_s_din : IN STD_LOGIC_VECTOR (63 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp_inst_twiddle_rsc_0_0_i_s_raddr_core
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp_inst_twiddle_rsc_0_0_i_s_din_mxwt
      : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp_inst_twiddle_rsc_0_0_i_s_raddr
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp_inst_twiddle_rsc_0_0_i_s_din
      : STD_LOGIC_VECTOR (63 DOWNTO 0);

BEGIN
  twiddle_rsc_0_0_i : amba_lib.amba_comps.ccs_axi4_slave_mem
    GENERIC MAP(
      rscid => 0,
      depth => 512,
      op_width => 64,
      cwidth => 64,
      addr_w => 9,
      nopreload => 0,
      rst_ph => 0,
      ADDR_WIDTH => 12,
      DATA_WIDTH => 64,
      ID_WIDTH => 1,
      USER_WIDTH => 1,
      REGION_MAP_SIZE => 1,
      wBASE_ADDRESS => 0,
      rBASE_ADDRESS => 0
      )
    PORT MAP(
      ACLK => clk,
      ARESETn => '1',
      AWID => twiddle_rsc_0_0_i_AWID,
      AWADDR => twiddle_rsc_0_0_i_AWADDR,
      AWLEN => twiddle_rsc_0_0_i_AWLEN,
      AWSIZE => twiddle_rsc_0_0_i_AWSIZE,
      AWBURST => twiddle_rsc_0_0_i_AWBURST,
      AWLOCK => twiddle_rsc_0_0_AWLOCK,
      AWCACHE => twiddle_rsc_0_0_i_AWCACHE,
      AWPROT => twiddle_rsc_0_0_i_AWPROT,
      AWQOS => twiddle_rsc_0_0_i_AWQOS,
      AWREGION => twiddle_rsc_0_0_i_AWREGION,
      AWUSER => twiddle_rsc_0_0_i_AWUSER,
      AWVALID => twiddle_rsc_0_0_AWVALID,
      AWREADY => twiddle_rsc_0_0_AWREADY,
      WDATA => twiddle_rsc_0_0_i_WDATA,
      WSTRB => twiddle_rsc_0_0_i_WSTRB,
      WLAST => twiddle_rsc_0_0_WLAST,
      WUSER => twiddle_rsc_0_0_i_WUSER,
      WVALID => twiddle_rsc_0_0_WVALID,
      WREADY => twiddle_rsc_0_0_WREADY,
      BID => twiddle_rsc_0_0_i_BID,
      BRESP => twiddle_rsc_0_0_i_BRESP,
      BUSER => twiddle_rsc_0_0_i_BUSER,
      BVALID => twiddle_rsc_0_0_BVALID,
      BREADY => twiddle_rsc_0_0_BREADY,
      ARID => twiddle_rsc_0_0_i_ARID,
      ARADDR => twiddle_rsc_0_0_i_ARADDR,
      ARLEN => twiddle_rsc_0_0_i_ARLEN,
      ARSIZE => twiddle_rsc_0_0_i_ARSIZE,
      ARBURST => twiddle_rsc_0_0_i_ARBURST,
      ARLOCK => twiddle_rsc_0_0_ARLOCK,
      ARCACHE => twiddle_rsc_0_0_i_ARCACHE,
      ARPROT => twiddle_rsc_0_0_i_ARPROT,
      ARQOS => twiddle_rsc_0_0_i_ARQOS,
      ARREGION => twiddle_rsc_0_0_i_ARREGION,
      ARUSER => twiddle_rsc_0_0_i_ARUSER,
      ARVALID => twiddle_rsc_0_0_ARVALID,
      ARREADY => twiddle_rsc_0_0_ARREADY,
      RID => twiddle_rsc_0_0_i_RID,
      RDATA => twiddle_rsc_0_0_i_RDATA,
      RRESP => twiddle_rsc_0_0_i_RRESP,
      RLAST => twiddle_rsc_0_0_RLAST,
      RUSER => twiddle_rsc_0_0_i_RUSER,
      RVALID => twiddle_rsc_0_0_RVALID,
      RREADY => twiddle_rsc_0_0_RREADY,
      s_re => twiddle_rsc_0_0_i_s_re_core_sct,
      s_we => '0',
      s_raddr => twiddle_rsc_0_0_i_s_raddr_1,
      s_waddr => twiddle_rsc_0_0_i_s_waddr,
      s_din => twiddle_rsc_0_0_i_s_din_1,
      s_dout => twiddle_rsc_0_0_i_s_dout,
      s_rrdy => twiddle_rsc_0_0_i_s_rrdy,
      s_wrdy => twiddle_rsc_0_0_i_s_wrdy,
      is_idle => twiddle_rsc_0_0_is_idle,
      tr_write_done => twiddle_rsc_0_0_tr_write_done,
      s_tdone => twiddle_rsc_0_0_s_tdone
    );
  twiddle_rsc_0_0_i_AWID(0) <= twiddle_rsc_0_0_AWID;
  twiddle_rsc_0_0_i_AWADDR <= twiddle_rsc_0_0_AWADDR;
  twiddle_rsc_0_0_i_AWLEN <= twiddle_rsc_0_0_AWLEN;
  twiddle_rsc_0_0_i_AWSIZE <= twiddle_rsc_0_0_AWSIZE;
  twiddle_rsc_0_0_i_AWBURST <= twiddle_rsc_0_0_AWBURST;
  twiddle_rsc_0_0_i_AWCACHE <= twiddle_rsc_0_0_AWCACHE;
  twiddle_rsc_0_0_i_AWPROT <= twiddle_rsc_0_0_AWPROT;
  twiddle_rsc_0_0_i_AWQOS <= twiddle_rsc_0_0_AWQOS;
  twiddle_rsc_0_0_i_AWREGION <= twiddle_rsc_0_0_AWREGION;
  twiddle_rsc_0_0_i_AWUSER(0) <= twiddle_rsc_0_0_AWUSER;
  twiddle_rsc_0_0_i_WDATA <= twiddle_rsc_0_0_WDATA;
  twiddle_rsc_0_0_i_WSTRB <= twiddle_rsc_0_0_WSTRB;
  twiddle_rsc_0_0_i_WUSER(0) <= twiddle_rsc_0_0_WUSER;
  twiddle_rsc_0_0_BID <= twiddle_rsc_0_0_i_BID(0);
  twiddle_rsc_0_0_BRESP <= twiddle_rsc_0_0_i_BRESP;
  twiddle_rsc_0_0_BUSER <= twiddle_rsc_0_0_i_BUSER(0);
  twiddle_rsc_0_0_i_ARID(0) <= twiddle_rsc_0_0_ARID;
  twiddle_rsc_0_0_i_ARADDR <= twiddle_rsc_0_0_ARADDR;
  twiddle_rsc_0_0_i_ARLEN <= twiddle_rsc_0_0_ARLEN;
  twiddle_rsc_0_0_i_ARSIZE <= twiddle_rsc_0_0_ARSIZE;
  twiddle_rsc_0_0_i_ARBURST <= twiddle_rsc_0_0_ARBURST;
  twiddle_rsc_0_0_i_ARCACHE <= twiddle_rsc_0_0_ARCACHE;
  twiddle_rsc_0_0_i_ARPROT <= twiddle_rsc_0_0_ARPROT;
  twiddle_rsc_0_0_i_ARQOS <= twiddle_rsc_0_0_ARQOS;
  twiddle_rsc_0_0_i_ARREGION <= twiddle_rsc_0_0_ARREGION;
  twiddle_rsc_0_0_i_ARUSER(0) <= twiddle_rsc_0_0_ARUSER;
  twiddle_rsc_0_0_RID <= twiddle_rsc_0_0_i_RID(0);
  twiddle_rsc_0_0_RDATA <= twiddle_rsc_0_0_i_RDATA;
  twiddle_rsc_0_0_RRESP <= twiddle_rsc_0_0_i_RRESP;
  twiddle_rsc_0_0_RUSER <= twiddle_rsc_0_0_i_RUSER(0);
  twiddle_rsc_0_0_i_s_raddr_1 <= twiddle_rsc_0_0_i_s_raddr;
  twiddle_rsc_0_0_i_s_waddr <= STD_LOGIC_VECTOR'( "000000000");
  twiddle_rsc_0_0_i_s_din <= twiddle_rsc_0_0_i_s_din_1;
  twiddle_rsc_0_0_i_s_dout <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000000000000000000000000000");

  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_ctrl_inst :
      inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_ctrl
    PORT MAP(
      core_wen => core_wen,
      twiddle_rsc_0_0_i_oswt => twiddle_rsc_0_0_i_oswt,
      twiddle_rsc_0_0_i_biwt => twiddle_rsc_0_0_i_biwt,
      twiddle_rsc_0_0_i_bdwt => twiddle_rsc_0_0_i_bdwt,
      twiddle_rsc_0_0_i_bcwt => twiddle_rsc_0_0_i_bcwt,
      twiddle_rsc_0_0_i_s_re_core_sct => twiddle_rsc_0_0_i_s_re_core_sct,
      twiddle_rsc_0_0_i_s_rrdy => twiddle_rsc_0_0_i_s_rrdy
    );
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp_inst : inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp
    PORT MAP(
      clk => clk,
      rst => rst,
      twiddle_rsc_0_0_i_oswt => twiddle_rsc_0_0_i_oswt,
      twiddle_rsc_0_0_i_wen_comp => twiddle_rsc_0_0_i_wen_comp,
      twiddle_rsc_0_0_i_s_raddr_core => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp_inst_twiddle_rsc_0_0_i_s_raddr_core,
      twiddle_rsc_0_0_i_s_din_mxwt => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp_inst_twiddle_rsc_0_0_i_s_din_mxwt,
      twiddle_rsc_0_0_i_biwt => twiddle_rsc_0_0_i_biwt,
      twiddle_rsc_0_0_i_bdwt => twiddle_rsc_0_0_i_bdwt,
      twiddle_rsc_0_0_i_bcwt => twiddle_rsc_0_0_i_bcwt,
      twiddle_rsc_0_0_i_s_raddr => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp_inst_twiddle_rsc_0_0_i_s_raddr,
      twiddle_rsc_0_0_i_s_raddr_core_sct => twiddle_rsc_0_0_i_s_re_core_sct,
      twiddle_rsc_0_0_i_s_din => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp_inst_twiddle_rsc_0_0_i_s_din
    );
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp_inst_twiddle_rsc_0_0_i_s_raddr_core
      <= twiddle_rsc_0_0_i_s_raddr_core;
  twiddle_rsc_0_0_i_s_din_mxwt <= inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp_inst_twiddle_rsc_0_0_i_s_din_mxwt;
  twiddle_rsc_0_0_i_s_raddr <= inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp_inst_twiddle_rsc_0_0_i_s_raddr;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_twiddle_rsc_0_0_wait_dp_inst_twiddle_rsc_0_0_i_s_din
      <= twiddle_rsc_0_0_i_s_din;

END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    vec_rsc_0_1_s_tdone : IN STD_LOGIC;
    vec_rsc_0_1_tr_write_done : IN STD_LOGIC;
    vec_rsc_0_1_RREADY : IN STD_LOGIC;
    vec_rsc_0_1_RVALID : OUT STD_LOGIC;
    vec_rsc_0_1_RUSER : OUT STD_LOGIC;
    vec_rsc_0_1_RLAST : OUT STD_LOGIC;
    vec_rsc_0_1_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_1_RDATA : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
    vec_rsc_0_1_RID : OUT STD_LOGIC;
    vec_rsc_0_1_ARREADY : OUT STD_LOGIC;
    vec_rsc_0_1_ARVALID : IN STD_LOGIC;
    vec_rsc_0_1_ARUSER : IN STD_LOGIC;
    vec_rsc_0_1_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_1_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_1_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_1_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_1_ARLOCK : IN STD_LOGIC;
    vec_rsc_0_1_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_1_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_1_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    vec_rsc_0_1_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    vec_rsc_0_1_ARID : IN STD_LOGIC;
    vec_rsc_0_1_BREADY : IN STD_LOGIC;
    vec_rsc_0_1_BVALID : OUT STD_LOGIC;
    vec_rsc_0_1_BUSER : OUT STD_LOGIC;
    vec_rsc_0_1_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_1_BID : OUT STD_LOGIC;
    vec_rsc_0_1_WREADY : OUT STD_LOGIC;
    vec_rsc_0_1_WVALID : IN STD_LOGIC;
    vec_rsc_0_1_WUSER : IN STD_LOGIC;
    vec_rsc_0_1_WLAST : IN STD_LOGIC;
    vec_rsc_0_1_WSTRB : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    vec_rsc_0_1_WDATA : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
    vec_rsc_0_1_AWREADY : OUT STD_LOGIC;
    vec_rsc_0_1_AWVALID : IN STD_LOGIC;
    vec_rsc_0_1_AWUSER : IN STD_LOGIC;
    vec_rsc_0_1_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_1_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_1_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_1_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_1_AWLOCK : IN STD_LOGIC;
    vec_rsc_0_1_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_1_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_1_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    vec_rsc_0_1_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    vec_rsc_0_1_AWID : IN STD_LOGIC;
    core_wen : IN STD_LOGIC;
    vec_rsc_0_1_i_oswt : IN STD_LOGIC;
    vec_rsc_0_1_i_wen_comp : OUT STD_LOGIC;
    vec_rsc_0_1_i_oswt_1 : IN STD_LOGIC;
    vec_rsc_0_1_i_wen_comp_1 : OUT STD_LOGIC;
    vec_rsc_0_1_i_s_raddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    vec_rsc_0_1_i_s_waddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    vec_rsc_0_1_i_s_din_mxwt : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
    vec_rsc_0_1_i_s_dout_core : IN STD_LOGIC_VECTOR (63 DOWNTO 0)
  );
END inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i IS
  -- Default Constants
  CONSTANT PWR : STD_LOGIC := '1';
  CONSTANT GND : STD_LOGIC := '0';

  -- Interconnect Declarations
  SIGNAL vec_rsc_0_1_i_biwt : STD_LOGIC;
  SIGNAL vec_rsc_0_1_i_bdwt : STD_LOGIC;
  SIGNAL vec_rsc_0_1_i_bcwt : STD_LOGIC;
  SIGNAL vec_rsc_0_1_i_s_re_core_sct : STD_LOGIC;
  SIGNAL vec_rsc_0_1_i_biwt_1 : STD_LOGIC;
  SIGNAL vec_rsc_0_1_i_bdwt_2 : STD_LOGIC;
  SIGNAL vec_rsc_0_1_i_bcwt_1 : STD_LOGIC;
  SIGNAL vec_rsc_0_1_i_s_we_core_sct : STD_LOGIC;
  SIGNAL vec_rsc_0_1_i_s_raddr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_s_waddr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_s_din : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_s_dout : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_s_rrdy : STD_LOGIC;
  SIGNAL vec_rsc_0_1_i_s_wrdy : STD_LOGIC;
  SIGNAL vec_rsc_0_1_is_idle_1 : STD_LOGIC;

  SIGNAL vec_rsc_0_1_i_AWID : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_AWADDR : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_AWLEN : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_AWSIZE : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_AWBURST : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_AWCACHE : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_AWPROT : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_AWQOS : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_AWREGION : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_AWUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_WDATA : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_WSTRB : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_WUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_BID : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_BRESP : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_BUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_ARID : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_ARADDR : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_ARLEN : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_ARSIZE : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_ARBURST : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_ARCACHE : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_ARPROT : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_ARQOS : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_ARREGION : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_ARUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_RID : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_RDATA : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_RRESP : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_RUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_s_raddr_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_s_waddr_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_s_din_1 : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_s_dout_1 : STD_LOGIC_VECTOR (63 DOWNTO 0);

  COMPONENT inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_ctrl
    PORT(
      core_wen : IN STD_LOGIC;
      vec_rsc_0_1_i_oswt : IN STD_LOGIC;
      vec_rsc_0_1_i_oswt_1 : IN STD_LOGIC;
      vec_rsc_0_1_i_biwt : OUT STD_LOGIC;
      vec_rsc_0_1_i_bdwt : OUT STD_LOGIC;
      vec_rsc_0_1_i_bcwt : IN STD_LOGIC;
      vec_rsc_0_1_i_s_re_core_sct : OUT STD_LOGIC;
      vec_rsc_0_1_i_biwt_1 : OUT STD_LOGIC;
      vec_rsc_0_1_i_bdwt_2 : OUT STD_LOGIC;
      vec_rsc_0_1_i_bcwt_1 : IN STD_LOGIC;
      vec_rsc_0_1_i_s_we_core_sct : OUT STD_LOGIC;
      vec_rsc_0_1_i_s_rrdy : IN STD_LOGIC;
      vec_rsc_0_1_i_s_wrdy : IN STD_LOGIC
    );
  END COMPONENT;
  COMPONENT inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      vec_rsc_0_1_i_oswt : IN STD_LOGIC;
      vec_rsc_0_1_i_wen_comp : OUT STD_LOGIC;
      vec_rsc_0_1_i_oswt_1 : IN STD_LOGIC;
      vec_rsc_0_1_i_wen_comp_1 : OUT STD_LOGIC;
      vec_rsc_0_1_i_s_raddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      vec_rsc_0_1_i_s_waddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      vec_rsc_0_1_i_s_din_mxwt : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
      vec_rsc_0_1_i_s_dout_core : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
      vec_rsc_0_1_i_biwt : IN STD_LOGIC;
      vec_rsc_0_1_i_bdwt : IN STD_LOGIC;
      vec_rsc_0_1_i_bcwt : OUT STD_LOGIC;
      vec_rsc_0_1_i_biwt_1 : IN STD_LOGIC;
      vec_rsc_0_1_i_bdwt_2 : IN STD_LOGIC;
      vec_rsc_0_1_i_bcwt_1 : OUT STD_LOGIC;
      vec_rsc_0_1_i_s_raddr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      vec_rsc_0_1_i_s_raddr_core_sct : IN STD_LOGIC;
      vec_rsc_0_1_i_s_waddr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      vec_rsc_0_1_i_s_waddr_core_sct : IN STD_LOGIC;
      vec_rsc_0_1_i_s_din : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
      vec_rsc_0_1_i_s_dout : OUT STD_LOGIC_VECTOR (63 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_raddr_core
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_waddr_core
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_din_mxwt
      : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_dout_core
      : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_raddr
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_waddr
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_din
      : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_dout
      : STD_LOGIC_VECTOR (63 DOWNTO 0);

BEGIN
  vec_rsc_0_1_i : amba_lib.amba_comps.ccs_axi4_slave_mem
    GENERIC MAP(
      rscid => 0,
      depth => 512,
      op_width => 64,
      cwidth => 64,
      addr_w => 9,
      nopreload => 0,
      rst_ph => 0,
      ADDR_WIDTH => 12,
      DATA_WIDTH => 64,
      ID_WIDTH => 1,
      USER_WIDTH => 1,
      REGION_MAP_SIZE => 1,
      wBASE_ADDRESS => 0,
      rBASE_ADDRESS => 0
      )
    PORT MAP(
      ACLK => clk,
      ARESETn => '1',
      AWID => vec_rsc_0_1_i_AWID,
      AWADDR => vec_rsc_0_1_i_AWADDR,
      AWLEN => vec_rsc_0_1_i_AWLEN,
      AWSIZE => vec_rsc_0_1_i_AWSIZE,
      AWBURST => vec_rsc_0_1_i_AWBURST,
      AWLOCK => vec_rsc_0_1_AWLOCK,
      AWCACHE => vec_rsc_0_1_i_AWCACHE,
      AWPROT => vec_rsc_0_1_i_AWPROT,
      AWQOS => vec_rsc_0_1_i_AWQOS,
      AWREGION => vec_rsc_0_1_i_AWREGION,
      AWUSER => vec_rsc_0_1_i_AWUSER,
      AWVALID => vec_rsc_0_1_AWVALID,
      AWREADY => vec_rsc_0_1_AWREADY,
      WDATA => vec_rsc_0_1_i_WDATA,
      WSTRB => vec_rsc_0_1_i_WSTRB,
      WLAST => vec_rsc_0_1_WLAST,
      WUSER => vec_rsc_0_1_i_WUSER,
      WVALID => vec_rsc_0_1_WVALID,
      WREADY => vec_rsc_0_1_WREADY,
      BID => vec_rsc_0_1_i_BID,
      BRESP => vec_rsc_0_1_i_BRESP,
      BUSER => vec_rsc_0_1_i_BUSER,
      BVALID => vec_rsc_0_1_BVALID,
      BREADY => vec_rsc_0_1_BREADY,
      ARID => vec_rsc_0_1_i_ARID,
      ARADDR => vec_rsc_0_1_i_ARADDR,
      ARLEN => vec_rsc_0_1_i_ARLEN,
      ARSIZE => vec_rsc_0_1_i_ARSIZE,
      ARBURST => vec_rsc_0_1_i_ARBURST,
      ARLOCK => vec_rsc_0_1_ARLOCK,
      ARCACHE => vec_rsc_0_1_i_ARCACHE,
      ARPROT => vec_rsc_0_1_i_ARPROT,
      ARQOS => vec_rsc_0_1_i_ARQOS,
      ARREGION => vec_rsc_0_1_i_ARREGION,
      ARUSER => vec_rsc_0_1_i_ARUSER,
      ARVALID => vec_rsc_0_1_ARVALID,
      ARREADY => vec_rsc_0_1_ARREADY,
      RID => vec_rsc_0_1_i_RID,
      RDATA => vec_rsc_0_1_i_RDATA,
      RRESP => vec_rsc_0_1_i_RRESP,
      RLAST => vec_rsc_0_1_RLAST,
      RUSER => vec_rsc_0_1_i_RUSER,
      RVALID => vec_rsc_0_1_RVALID,
      RREADY => vec_rsc_0_1_RREADY,
      s_re => vec_rsc_0_1_i_s_re_core_sct,
      s_we => vec_rsc_0_1_i_s_we_core_sct,
      s_raddr => vec_rsc_0_1_i_s_raddr_1,
      s_waddr => vec_rsc_0_1_i_s_waddr_1,
      s_din => vec_rsc_0_1_i_s_din_1,
      s_dout => vec_rsc_0_1_i_s_dout_1,
      s_rrdy => vec_rsc_0_1_i_s_rrdy,
      s_wrdy => vec_rsc_0_1_i_s_wrdy,
      is_idle => vec_rsc_0_1_is_idle_1,
      tr_write_done => vec_rsc_0_1_tr_write_done,
      s_tdone => vec_rsc_0_1_s_tdone
    );
  vec_rsc_0_1_i_AWID(0) <= vec_rsc_0_1_AWID;
  vec_rsc_0_1_i_AWADDR <= vec_rsc_0_1_AWADDR;
  vec_rsc_0_1_i_AWLEN <= vec_rsc_0_1_AWLEN;
  vec_rsc_0_1_i_AWSIZE <= vec_rsc_0_1_AWSIZE;
  vec_rsc_0_1_i_AWBURST <= vec_rsc_0_1_AWBURST;
  vec_rsc_0_1_i_AWCACHE <= vec_rsc_0_1_AWCACHE;
  vec_rsc_0_1_i_AWPROT <= vec_rsc_0_1_AWPROT;
  vec_rsc_0_1_i_AWQOS <= vec_rsc_0_1_AWQOS;
  vec_rsc_0_1_i_AWREGION <= vec_rsc_0_1_AWREGION;
  vec_rsc_0_1_i_AWUSER(0) <= vec_rsc_0_1_AWUSER;
  vec_rsc_0_1_i_WDATA <= vec_rsc_0_1_WDATA;
  vec_rsc_0_1_i_WSTRB <= vec_rsc_0_1_WSTRB;
  vec_rsc_0_1_i_WUSER(0) <= vec_rsc_0_1_WUSER;
  vec_rsc_0_1_BID <= vec_rsc_0_1_i_BID(0);
  vec_rsc_0_1_BRESP <= vec_rsc_0_1_i_BRESP;
  vec_rsc_0_1_BUSER <= vec_rsc_0_1_i_BUSER(0);
  vec_rsc_0_1_i_ARID(0) <= vec_rsc_0_1_ARID;
  vec_rsc_0_1_i_ARADDR <= vec_rsc_0_1_ARADDR;
  vec_rsc_0_1_i_ARLEN <= vec_rsc_0_1_ARLEN;
  vec_rsc_0_1_i_ARSIZE <= vec_rsc_0_1_ARSIZE;
  vec_rsc_0_1_i_ARBURST <= vec_rsc_0_1_ARBURST;
  vec_rsc_0_1_i_ARCACHE <= vec_rsc_0_1_ARCACHE;
  vec_rsc_0_1_i_ARPROT <= vec_rsc_0_1_ARPROT;
  vec_rsc_0_1_i_ARQOS <= vec_rsc_0_1_ARQOS;
  vec_rsc_0_1_i_ARREGION <= vec_rsc_0_1_ARREGION;
  vec_rsc_0_1_i_ARUSER(0) <= vec_rsc_0_1_ARUSER;
  vec_rsc_0_1_RID <= vec_rsc_0_1_i_RID(0);
  vec_rsc_0_1_RDATA <= vec_rsc_0_1_i_RDATA;
  vec_rsc_0_1_RRESP <= vec_rsc_0_1_i_RRESP;
  vec_rsc_0_1_RUSER <= vec_rsc_0_1_i_RUSER(0);
  vec_rsc_0_1_i_s_raddr_1 <= vec_rsc_0_1_i_s_raddr;
  vec_rsc_0_1_i_s_waddr_1 <= vec_rsc_0_1_i_s_waddr;
  vec_rsc_0_1_i_s_din <= vec_rsc_0_1_i_s_din_1;
  vec_rsc_0_1_i_s_dout_1 <= vec_rsc_0_1_i_s_dout;

  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_ctrl_inst : inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_ctrl
    PORT MAP(
      core_wen => core_wen,
      vec_rsc_0_1_i_oswt => vec_rsc_0_1_i_oswt,
      vec_rsc_0_1_i_oswt_1 => vec_rsc_0_1_i_oswt_1,
      vec_rsc_0_1_i_biwt => vec_rsc_0_1_i_biwt,
      vec_rsc_0_1_i_bdwt => vec_rsc_0_1_i_bdwt,
      vec_rsc_0_1_i_bcwt => vec_rsc_0_1_i_bcwt,
      vec_rsc_0_1_i_s_re_core_sct => vec_rsc_0_1_i_s_re_core_sct,
      vec_rsc_0_1_i_biwt_1 => vec_rsc_0_1_i_biwt_1,
      vec_rsc_0_1_i_bdwt_2 => vec_rsc_0_1_i_bdwt_2,
      vec_rsc_0_1_i_bcwt_1 => vec_rsc_0_1_i_bcwt_1,
      vec_rsc_0_1_i_s_we_core_sct => vec_rsc_0_1_i_s_we_core_sct,
      vec_rsc_0_1_i_s_rrdy => vec_rsc_0_1_i_s_rrdy,
      vec_rsc_0_1_i_s_wrdy => vec_rsc_0_1_i_s_wrdy
    );
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst : inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp
    PORT MAP(
      clk => clk,
      rst => rst,
      vec_rsc_0_1_i_oswt => vec_rsc_0_1_i_oswt,
      vec_rsc_0_1_i_wen_comp => vec_rsc_0_1_i_wen_comp,
      vec_rsc_0_1_i_oswt_1 => vec_rsc_0_1_i_oswt_1,
      vec_rsc_0_1_i_wen_comp_1 => vec_rsc_0_1_i_wen_comp_1,
      vec_rsc_0_1_i_s_raddr_core => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_raddr_core,
      vec_rsc_0_1_i_s_waddr_core => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_waddr_core,
      vec_rsc_0_1_i_s_din_mxwt => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_din_mxwt,
      vec_rsc_0_1_i_s_dout_core => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_dout_core,
      vec_rsc_0_1_i_biwt => vec_rsc_0_1_i_biwt,
      vec_rsc_0_1_i_bdwt => vec_rsc_0_1_i_bdwt,
      vec_rsc_0_1_i_bcwt => vec_rsc_0_1_i_bcwt,
      vec_rsc_0_1_i_biwt_1 => vec_rsc_0_1_i_biwt_1,
      vec_rsc_0_1_i_bdwt_2 => vec_rsc_0_1_i_bdwt_2,
      vec_rsc_0_1_i_bcwt_1 => vec_rsc_0_1_i_bcwt_1,
      vec_rsc_0_1_i_s_raddr => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_raddr,
      vec_rsc_0_1_i_s_raddr_core_sct => vec_rsc_0_1_i_s_re_core_sct,
      vec_rsc_0_1_i_s_waddr => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_waddr,
      vec_rsc_0_1_i_s_waddr_core_sct => vec_rsc_0_1_i_s_we_core_sct,
      vec_rsc_0_1_i_s_din => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_din,
      vec_rsc_0_1_i_s_dout => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_dout
    );
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_raddr_core
      <= vec_rsc_0_1_i_s_raddr_core;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_waddr_core
      <= vec_rsc_0_1_i_s_waddr_core;
  vec_rsc_0_1_i_s_din_mxwt <= inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_din_mxwt;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_dout_core
      <= vec_rsc_0_1_i_s_dout_core;
  vec_rsc_0_1_i_s_raddr <= inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_raddr;
  vec_rsc_0_1_i_s_waddr <= inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_waddr;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_din
      <= vec_rsc_0_1_i_s_din;
  vec_rsc_0_1_i_s_dout <= inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_vec_rsc_0_1_wait_dp_inst_vec_rsc_0_1_i_s_dout;

END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    vec_rsc_0_0_s_tdone : IN STD_LOGIC;
    vec_rsc_0_0_tr_write_done : IN STD_LOGIC;
    vec_rsc_0_0_RREADY : IN STD_LOGIC;
    vec_rsc_0_0_RVALID : OUT STD_LOGIC;
    vec_rsc_0_0_RUSER : OUT STD_LOGIC;
    vec_rsc_0_0_RLAST : OUT STD_LOGIC;
    vec_rsc_0_0_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_0_RDATA : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
    vec_rsc_0_0_RID : OUT STD_LOGIC;
    vec_rsc_0_0_ARREADY : OUT STD_LOGIC;
    vec_rsc_0_0_ARVALID : IN STD_LOGIC;
    vec_rsc_0_0_ARUSER : IN STD_LOGIC;
    vec_rsc_0_0_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_0_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_0_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_0_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_0_ARLOCK : IN STD_LOGIC;
    vec_rsc_0_0_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_0_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_0_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    vec_rsc_0_0_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    vec_rsc_0_0_ARID : IN STD_LOGIC;
    vec_rsc_0_0_BREADY : IN STD_LOGIC;
    vec_rsc_0_0_BVALID : OUT STD_LOGIC;
    vec_rsc_0_0_BUSER : OUT STD_LOGIC;
    vec_rsc_0_0_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_0_BID : OUT STD_LOGIC;
    vec_rsc_0_0_WREADY : OUT STD_LOGIC;
    vec_rsc_0_0_WVALID : IN STD_LOGIC;
    vec_rsc_0_0_WUSER : IN STD_LOGIC;
    vec_rsc_0_0_WLAST : IN STD_LOGIC;
    vec_rsc_0_0_WSTRB : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    vec_rsc_0_0_WDATA : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
    vec_rsc_0_0_AWREADY : OUT STD_LOGIC;
    vec_rsc_0_0_AWVALID : IN STD_LOGIC;
    vec_rsc_0_0_AWUSER : IN STD_LOGIC;
    vec_rsc_0_0_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_0_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_0_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_0_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_0_AWLOCK : IN STD_LOGIC;
    vec_rsc_0_0_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_0_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_0_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    vec_rsc_0_0_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    vec_rsc_0_0_AWID : IN STD_LOGIC;
    core_wen : IN STD_LOGIC;
    vec_rsc_0_0_i_oswt : IN STD_LOGIC;
    vec_rsc_0_0_i_wen_comp : OUT STD_LOGIC;
    vec_rsc_0_0_i_oswt_1 : IN STD_LOGIC;
    vec_rsc_0_0_i_wen_comp_1 : OUT STD_LOGIC;
    vec_rsc_0_0_i_s_raddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    vec_rsc_0_0_i_s_waddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    vec_rsc_0_0_i_s_din_mxwt : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
    vec_rsc_0_0_i_s_dout_core : IN STD_LOGIC_VECTOR (63 DOWNTO 0)
  );
END inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i IS
  -- Default Constants
  CONSTANT PWR : STD_LOGIC := '1';
  CONSTANT GND : STD_LOGIC := '0';

  -- Interconnect Declarations
  SIGNAL vec_rsc_0_0_i_biwt : STD_LOGIC;
  SIGNAL vec_rsc_0_0_i_bdwt : STD_LOGIC;
  SIGNAL vec_rsc_0_0_i_bcwt : STD_LOGIC;
  SIGNAL vec_rsc_0_0_i_s_re_core_sct : STD_LOGIC;
  SIGNAL vec_rsc_0_0_i_biwt_1 : STD_LOGIC;
  SIGNAL vec_rsc_0_0_i_bdwt_2 : STD_LOGIC;
  SIGNAL vec_rsc_0_0_i_bcwt_1 : STD_LOGIC;
  SIGNAL vec_rsc_0_0_i_s_we_core_sct : STD_LOGIC;
  SIGNAL vec_rsc_0_0_i_s_raddr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_s_waddr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_s_din : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_s_dout : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_s_rrdy : STD_LOGIC;
  SIGNAL vec_rsc_0_0_i_s_wrdy : STD_LOGIC;
  SIGNAL vec_rsc_0_0_is_idle_1 : STD_LOGIC;

  SIGNAL vec_rsc_0_0_i_AWID : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_AWADDR : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_AWLEN : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_AWSIZE : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_AWBURST : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_AWCACHE : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_AWPROT : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_AWQOS : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_AWREGION : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_AWUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_WDATA : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_WSTRB : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_WUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_BID : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_BRESP : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_BUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_ARID : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_ARADDR : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_ARLEN : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_ARSIZE : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_ARBURST : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_ARCACHE : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_ARPROT : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_ARQOS : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_ARREGION : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_ARUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_RID : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_RDATA : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_RRESP : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_RUSER : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_s_raddr_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_s_waddr_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_s_din_1 : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL vec_rsc_0_0_i_s_dout_1 : STD_LOGIC_VECTOR (63 DOWNTO 0);

  COMPONENT inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_ctrl
    PORT(
      core_wen : IN STD_LOGIC;
      vec_rsc_0_0_i_oswt : IN STD_LOGIC;
      vec_rsc_0_0_i_oswt_1 : IN STD_LOGIC;
      vec_rsc_0_0_i_biwt : OUT STD_LOGIC;
      vec_rsc_0_0_i_bdwt : OUT STD_LOGIC;
      vec_rsc_0_0_i_bcwt : IN STD_LOGIC;
      vec_rsc_0_0_i_s_re_core_sct : OUT STD_LOGIC;
      vec_rsc_0_0_i_biwt_1 : OUT STD_LOGIC;
      vec_rsc_0_0_i_bdwt_2 : OUT STD_LOGIC;
      vec_rsc_0_0_i_bcwt_1 : IN STD_LOGIC;
      vec_rsc_0_0_i_s_we_core_sct : OUT STD_LOGIC;
      vec_rsc_0_0_i_s_rrdy : IN STD_LOGIC;
      vec_rsc_0_0_i_s_wrdy : IN STD_LOGIC
    );
  END COMPONENT;
  COMPONENT inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      vec_rsc_0_0_i_oswt : IN STD_LOGIC;
      vec_rsc_0_0_i_wen_comp : OUT STD_LOGIC;
      vec_rsc_0_0_i_oswt_1 : IN STD_LOGIC;
      vec_rsc_0_0_i_wen_comp_1 : OUT STD_LOGIC;
      vec_rsc_0_0_i_s_raddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      vec_rsc_0_0_i_s_waddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      vec_rsc_0_0_i_s_din_mxwt : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
      vec_rsc_0_0_i_s_dout_core : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
      vec_rsc_0_0_i_biwt : IN STD_LOGIC;
      vec_rsc_0_0_i_bdwt : IN STD_LOGIC;
      vec_rsc_0_0_i_bcwt : OUT STD_LOGIC;
      vec_rsc_0_0_i_biwt_1 : IN STD_LOGIC;
      vec_rsc_0_0_i_bdwt_2 : IN STD_LOGIC;
      vec_rsc_0_0_i_bcwt_1 : OUT STD_LOGIC;
      vec_rsc_0_0_i_s_raddr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      vec_rsc_0_0_i_s_raddr_core_sct : IN STD_LOGIC;
      vec_rsc_0_0_i_s_waddr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      vec_rsc_0_0_i_s_waddr_core_sct : IN STD_LOGIC;
      vec_rsc_0_0_i_s_din : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
      vec_rsc_0_0_i_s_dout : OUT STD_LOGIC_VECTOR (63 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_raddr_core
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_waddr_core
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_din_mxwt
      : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_dout_core
      : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_raddr
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_waddr
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_din
      : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_dout
      : STD_LOGIC_VECTOR (63 DOWNTO 0);

BEGIN
  vec_rsc_0_0_i : amba_lib.amba_comps.ccs_axi4_slave_mem
    GENERIC MAP(
      rscid => 0,
      depth => 512,
      op_width => 64,
      cwidth => 64,
      addr_w => 9,
      nopreload => 0,
      rst_ph => 0,
      ADDR_WIDTH => 12,
      DATA_WIDTH => 64,
      ID_WIDTH => 1,
      USER_WIDTH => 1,
      REGION_MAP_SIZE => 1,
      wBASE_ADDRESS => 0,
      rBASE_ADDRESS => 0
      )
    PORT MAP(
      ACLK => clk,
      ARESETn => '1',
      AWID => vec_rsc_0_0_i_AWID,
      AWADDR => vec_rsc_0_0_i_AWADDR,
      AWLEN => vec_rsc_0_0_i_AWLEN,
      AWSIZE => vec_rsc_0_0_i_AWSIZE,
      AWBURST => vec_rsc_0_0_i_AWBURST,
      AWLOCK => vec_rsc_0_0_AWLOCK,
      AWCACHE => vec_rsc_0_0_i_AWCACHE,
      AWPROT => vec_rsc_0_0_i_AWPROT,
      AWQOS => vec_rsc_0_0_i_AWQOS,
      AWREGION => vec_rsc_0_0_i_AWREGION,
      AWUSER => vec_rsc_0_0_i_AWUSER,
      AWVALID => vec_rsc_0_0_AWVALID,
      AWREADY => vec_rsc_0_0_AWREADY,
      WDATA => vec_rsc_0_0_i_WDATA,
      WSTRB => vec_rsc_0_0_i_WSTRB,
      WLAST => vec_rsc_0_0_WLAST,
      WUSER => vec_rsc_0_0_i_WUSER,
      WVALID => vec_rsc_0_0_WVALID,
      WREADY => vec_rsc_0_0_WREADY,
      BID => vec_rsc_0_0_i_BID,
      BRESP => vec_rsc_0_0_i_BRESP,
      BUSER => vec_rsc_0_0_i_BUSER,
      BVALID => vec_rsc_0_0_BVALID,
      BREADY => vec_rsc_0_0_BREADY,
      ARID => vec_rsc_0_0_i_ARID,
      ARADDR => vec_rsc_0_0_i_ARADDR,
      ARLEN => vec_rsc_0_0_i_ARLEN,
      ARSIZE => vec_rsc_0_0_i_ARSIZE,
      ARBURST => vec_rsc_0_0_i_ARBURST,
      ARLOCK => vec_rsc_0_0_ARLOCK,
      ARCACHE => vec_rsc_0_0_i_ARCACHE,
      ARPROT => vec_rsc_0_0_i_ARPROT,
      ARQOS => vec_rsc_0_0_i_ARQOS,
      ARREGION => vec_rsc_0_0_i_ARREGION,
      ARUSER => vec_rsc_0_0_i_ARUSER,
      ARVALID => vec_rsc_0_0_ARVALID,
      ARREADY => vec_rsc_0_0_ARREADY,
      RID => vec_rsc_0_0_i_RID,
      RDATA => vec_rsc_0_0_i_RDATA,
      RRESP => vec_rsc_0_0_i_RRESP,
      RLAST => vec_rsc_0_0_RLAST,
      RUSER => vec_rsc_0_0_i_RUSER,
      RVALID => vec_rsc_0_0_RVALID,
      RREADY => vec_rsc_0_0_RREADY,
      s_re => vec_rsc_0_0_i_s_re_core_sct,
      s_we => vec_rsc_0_0_i_s_we_core_sct,
      s_raddr => vec_rsc_0_0_i_s_raddr_1,
      s_waddr => vec_rsc_0_0_i_s_waddr_1,
      s_din => vec_rsc_0_0_i_s_din_1,
      s_dout => vec_rsc_0_0_i_s_dout_1,
      s_rrdy => vec_rsc_0_0_i_s_rrdy,
      s_wrdy => vec_rsc_0_0_i_s_wrdy,
      is_idle => vec_rsc_0_0_is_idle_1,
      tr_write_done => vec_rsc_0_0_tr_write_done,
      s_tdone => vec_rsc_0_0_s_tdone
    );
  vec_rsc_0_0_i_AWID(0) <= vec_rsc_0_0_AWID;
  vec_rsc_0_0_i_AWADDR <= vec_rsc_0_0_AWADDR;
  vec_rsc_0_0_i_AWLEN <= vec_rsc_0_0_AWLEN;
  vec_rsc_0_0_i_AWSIZE <= vec_rsc_0_0_AWSIZE;
  vec_rsc_0_0_i_AWBURST <= vec_rsc_0_0_AWBURST;
  vec_rsc_0_0_i_AWCACHE <= vec_rsc_0_0_AWCACHE;
  vec_rsc_0_0_i_AWPROT <= vec_rsc_0_0_AWPROT;
  vec_rsc_0_0_i_AWQOS <= vec_rsc_0_0_AWQOS;
  vec_rsc_0_0_i_AWREGION <= vec_rsc_0_0_AWREGION;
  vec_rsc_0_0_i_AWUSER(0) <= vec_rsc_0_0_AWUSER;
  vec_rsc_0_0_i_WDATA <= vec_rsc_0_0_WDATA;
  vec_rsc_0_0_i_WSTRB <= vec_rsc_0_0_WSTRB;
  vec_rsc_0_0_i_WUSER(0) <= vec_rsc_0_0_WUSER;
  vec_rsc_0_0_BID <= vec_rsc_0_0_i_BID(0);
  vec_rsc_0_0_BRESP <= vec_rsc_0_0_i_BRESP;
  vec_rsc_0_0_BUSER <= vec_rsc_0_0_i_BUSER(0);
  vec_rsc_0_0_i_ARID(0) <= vec_rsc_0_0_ARID;
  vec_rsc_0_0_i_ARADDR <= vec_rsc_0_0_ARADDR;
  vec_rsc_0_0_i_ARLEN <= vec_rsc_0_0_ARLEN;
  vec_rsc_0_0_i_ARSIZE <= vec_rsc_0_0_ARSIZE;
  vec_rsc_0_0_i_ARBURST <= vec_rsc_0_0_ARBURST;
  vec_rsc_0_0_i_ARCACHE <= vec_rsc_0_0_ARCACHE;
  vec_rsc_0_0_i_ARPROT <= vec_rsc_0_0_ARPROT;
  vec_rsc_0_0_i_ARQOS <= vec_rsc_0_0_ARQOS;
  vec_rsc_0_0_i_ARREGION <= vec_rsc_0_0_ARREGION;
  vec_rsc_0_0_i_ARUSER(0) <= vec_rsc_0_0_ARUSER;
  vec_rsc_0_0_RID <= vec_rsc_0_0_i_RID(0);
  vec_rsc_0_0_RDATA <= vec_rsc_0_0_i_RDATA;
  vec_rsc_0_0_RRESP <= vec_rsc_0_0_i_RRESP;
  vec_rsc_0_0_RUSER <= vec_rsc_0_0_i_RUSER(0);
  vec_rsc_0_0_i_s_raddr_1 <= vec_rsc_0_0_i_s_raddr;
  vec_rsc_0_0_i_s_waddr_1 <= vec_rsc_0_0_i_s_waddr;
  vec_rsc_0_0_i_s_din <= vec_rsc_0_0_i_s_din_1;
  vec_rsc_0_0_i_s_dout_1 <= vec_rsc_0_0_i_s_dout;

  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_ctrl_inst : inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_ctrl
    PORT MAP(
      core_wen => core_wen,
      vec_rsc_0_0_i_oswt => vec_rsc_0_0_i_oswt,
      vec_rsc_0_0_i_oswt_1 => vec_rsc_0_0_i_oswt_1,
      vec_rsc_0_0_i_biwt => vec_rsc_0_0_i_biwt,
      vec_rsc_0_0_i_bdwt => vec_rsc_0_0_i_bdwt,
      vec_rsc_0_0_i_bcwt => vec_rsc_0_0_i_bcwt,
      vec_rsc_0_0_i_s_re_core_sct => vec_rsc_0_0_i_s_re_core_sct,
      vec_rsc_0_0_i_biwt_1 => vec_rsc_0_0_i_biwt_1,
      vec_rsc_0_0_i_bdwt_2 => vec_rsc_0_0_i_bdwt_2,
      vec_rsc_0_0_i_bcwt_1 => vec_rsc_0_0_i_bcwt_1,
      vec_rsc_0_0_i_s_we_core_sct => vec_rsc_0_0_i_s_we_core_sct,
      vec_rsc_0_0_i_s_rrdy => vec_rsc_0_0_i_s_rrdy,
      vec_rsc_0_0_i_s_wrdy => vec_rsc_0_0_i_s_wrdy
    );
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst : inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp
    PORT MAP(
      clk => clk,
      rst => rst,
      vec_rsc_0_0_i_oswt => vec_rsc_0_0_i_oswt,
      vec_rsc_0_0_i_wen_comp => vec_rsc_0_0_i_wen_comp,
      vec_rsc_0_0_i_oswt_1 => vec_rsc_0_0_i_oswt_1,
      vec_rsc_0_0_i_wen_comp_1 => vec_rsc_0_0_i_wen_comp_1,
      vec_rsc_0_0_i_s_raddr_core => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_raddr_core,
      vec_rsc_0_0_i_s_waddr_core => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_waddr_core,
      vec_rsc_0_0_i_s_din_mxwt => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_din_mxwt,
      vec_rsc_0_0_i_s_dout_core => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_dout_core,
      vec_rsc_0_0_i_biwt => vec_rsc_0_0_i_biwt,
      vec_rsc_0_0_i_bdwt => vec_rsc_0_0_i_bdwt,
      vec_rsc_0_0_i_bcwt => vec_rsc_0_0_i_bcwt,
      vec_rsc_0_0_i_biwt_1 => vec_rsc_0_0_i_biwt_1,
      vec_rsc_0_0_i_bdwt_2 => vec_rsc_0_0_i_bdwt_2,
      vec_rsc_0_0_i_bcwt_1 => vec_rsc_0_0_i_bcwt_1,
      vec_rsc_0_0_i_s_raddr => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_raddr,
      vec_rsc_0_0_i_s_raddr_core_sct => vec_rsc_0_0_i_s_re_core_sct,
      vec_rsc_0_0_i_s_waddr => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_waddr,
      vec_rsc_0_0_i_s_waddr_core_sct => vec_rsc_0_0_i_s_we_core_sct,
      vec_rsc_0_0_i_s_din => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_din,
      vec_rsc_0_0_i_s_dout => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_dout
    );
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_raddr_core
      <= vec_rsc_0_0_i_s_raddr_core;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_waddr_core
      <= vec_rsc_0_0_i_s_waddr_core;
  vec_rsc_0_0_i_s_din_mxwt <= inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_din_mxwt;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_dout_core
      <= vec_rsc_0_0_i_s_dout_core;
  vec_rsc_0_0_i_s_raddr <= inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_raddr;
  vec_rsc_0_0_i_s_waddr <= inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_waddr;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_din
      <= vec_rsc_0_0_i_s_din;
  vec_rsc_0_0_i_s_dout <= inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_vec_rsc_0_0_wait_dp_inst_vec_rsc_0_0_i_s_dout;

END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp_core
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp_core IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    vec_rsc_0_0_s_tdone : IN STD_LOGIC;
    vec_rsc_0_0_tr_write_done : IN STD_LOGIC;
    vec_rsc_0_0_RREADY : IN STD_LOGIC;
    vec_rsc_0_0_RVALID : OUT STD_LOGIC;
    vec_rsc_0_0_RUSER : OUT STD_LOGIC;
    vec_rsc_0_0_RLAST : OUT STD_LOGIC;
    vec_rsc_0_0_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_0_RDATA : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
    vec_rsc_0_0_RID : OUT STD_LOGIC;
    vec_rsc_0_0_ARREADY : OUT STD_LOGIC;
    vec_rsc_0_0_ARVALID : IN STD_LOGIC;
    vec_rsc_0_0_ARUSER : IN STD_LOGIC;
    vec_rsc_0_0_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_0_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_0_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_0_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_0_ARLOCK : IN STD_LOGIC;
    vec_rsc_0_0_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_0_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_0_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    vec_rsc_0_0_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    vec_rsc_0_0_ARID : IN STD_LOGIC;
    vec_rsc_0_0_BREADY : IN STD_LOGIC;
    vec_rsc_0_0_BVALID : OUT STD_LOGIC;
    vec_rsc_0_0_BUSER : OUT STD_LOGIC;
    vec_rsc_0_0_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_0_BID : OUT STD_LOGIC;
    vec_rsc_0_0_WREADY : OUT STD_LOGIC;
    vec_rsc_0_0_WVALID : IN STD_LOGIC;
    vec_rsc_0_0_WUSER : IN STD_LOGIC;
    vec_rsc_0_0_WLAST : IN STD_LOGIC;
    vec_rsc_0_0_WSTRB : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    vec_rsc_0_0_WDATA : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
    vec_rsc_0_0_AWREADY : OUT STD_LOGIC;
    vec_rsc_0_0_AWVALID : IN STD_LOGIC;
    vec_rsc_0_0_AWUSER : IN STD_LOGIC;
    vec_rsc_0_0_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_0_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_0_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_0_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_0_AWLOCK : IN STD_LOGIC;
    vec_rsc_0_0_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_0_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_0_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    vec_rsc_0_0_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    vec_rsc_0_0_AWID : IN STD_LOGIC;
    vec_rsc_triosy_0_0_lz : OUT STD_LOGIC;
    vec_rsc_0_1_s_tdone : IN STD_LOGIC;
    vec_rsc_0_1_tr_write_done : IN STD_LOGIC;
    vec_rsc_0_1_RREADY : IN STD_LOGIC;
    vec_rsc_0_1_RVALID : OUT STD_LOGIC;
    vec_rsc_0_1_RUSER : OUT STD_LOGIC;
    vec_rsc_0_1_RLAST : OUT STD_LOGIC;
    vec_rsc_0_1_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_1_RDATA : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
    vec_rsc_0_1_RID : OUT STD_LOGIC;
    vec_rsc_0_1_ARREADY : OUT STD_LOGIC;
    vec_rsc_0_1_ARVALID : IN STD_LOGIC;
    vec_rsc_0_1_ARUSER : IN STD_LOGIC;
    vec_rsc_0_1_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_1_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_1_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_1_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_1_ARLOCK : IN STD_LOGIC;
    vec_rsc_0_1_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_1_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_1_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    vec_rsc_0_1_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    vec_rsc_0_1_ARID : IN STD_LOGIC;
    vec_rsc_0_1_BREADY : IN STD_LOGIC;
    vec_rsc_0_1_BVALID : OUT STD_LOGIC;
    vec_rsc_0_1_BUSER : OUT STD_LOGIC;
    vec_rsc_0_1_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_1_BID : OUT STD_LOGIC;
    vec_rsc_0_1_WREADY : OUT STD_LOGIC;
    vec_rsc_0_1_WVALID : IN STD_LOGIC;
    vec_rsc_0_1_WUSER : IN STD_LOGIC;
    vec_rsc_0_1_WLAST : IN STD_LOGIC;
    vec_rsc_0_1_WSTRB : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    vec_rsc_0_1_WDATA : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
    vec_rsc_0_1_AWREADY : OUT STD_LOGIC;
    vec_rsc_0_1_AWVALID : IN STD_LOGIC;
    vec_rsc_0_1_AWUSER : IN STD_LOGIC;
    vec_rsc_0_1_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_1_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_1_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_1_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_1_AWLOCK : IN STD_LOGIC;
    vec_rsc_0_1_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_1_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_1_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    vec_rsc_0_1_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    vec_rsc_0_1_AWID : IN STD_LOGIC;
    vec_rsc_triosy_0_1_lz : OUT STD_LOGIC;
    p_rsc_dat : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
    p_rsc_triosy_lz : OUT STD_LOGIC;
    r_rsc_triosy_lz : OUT STD_LOGIC;
    twiddle_rsc_0_0_s_tdone : IN STD_LOGIC;
    twiddle_rsc_0_0_tr_write_done : IN STD_LOGIC;
    twiddle_rsc_0_0_RREADY : IN STD_LOGIC;
    twiddle_rsc_0_0_RVALID : OUT STD_LOGIC;
    twiddle_rsc_0_0_RUSER : OUT STD_LOGIC;
    twiddle_rsc_0_0_RLAST : OUT STD_LOGIC;
    twiddle_rsc_0_0_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_0_RDATA : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
    twiddle_rsc_0_0_RID : OUT STD_LOGIC;
    twiddle_rsc_0_0_ARREADY : OUT STD_LOGIC;
    twiddle_rsc_0_0_ARVALID : IN STD_LOGIC;
    twiddle_rsc_0_0_ARUSER : IN STD_LOGIC;
    twiddle_rsc_0_0_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_0_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_0_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_0_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_0_ARLOCK : IN STD_LOGIC;
    twiddle_rsc_0_0_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_0_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_0_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    twiddle_rsc_0_0_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    twiddle_rsc_0_0_ARID : IN STD_LOGIC;
    twiddle_rsc_0_0_BREADY : IN STD_LOGIC;
    twiddle_rsc_0_0_BVALID : OUT STD_LOGIC;
    twiddle_rsc_0_0_BUSER : OUT STD_LOGIC;
    twiddle_rsc_0_0_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_0_BID : OUT STD_LOGIC;
    twiddle_rsc_0_0_WREADY : OUT STD_LOGIC;
    twiddle_rsc_0_0_WVALID : IN STD_LOGIC;
    twiddle_rsc_0_0_WUSER : IN STD_LOGIC;
    twiddle_rsc_0_0_WLAST : IN STD_LOGIC;
    twiddle_rsc_0_0_WSTRB : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    twiddle_rsc_0_0_WDATA : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
    twiddle_rsc_0_0_AWREADY : OUT STD_LOGIC;
    twiddle_rsc_0_0_AWVALID : IN STD_LOGIC;
    twiddle_rsc_0_0_AWUSER : IN STD_LOGIC;
    twiddle_rsc_0_0_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_0_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_0_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_0_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_0_AWLOCK : IN STD_LOGIC;
    twiddle_rsc_0_0_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_0_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_0_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    twiddle_rsc_0_0_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    twiddle_rsc_0_0_AWID : IN STD_LOGIC;
    twiddle_rsc_triosy_0_0_lz : OUT STD_LOGIC;
    twiddle_rsc_0_1_s_tdone : IN STD_LOGIC;
    twiddle_rsc_0_1_tr_write_done : IN STD_LOGIC;
    twiddle_rsc_0_1_RREADY : IN STD_LOGIC;
    twiddle_rsc_0_1_RVALID : OUT STD_LOGIC;
    twiddle_rsc_0_1_RUSER : OUT STD_LOGIC;
    twiddle_rsc_0_1_RLAST : OUT STD_LOGIC;
    twiddle_rsc_0_1_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_1_RDATA : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
    twiddle_rsc_0_1_RID : OUT STD_LOGIC;
    twiddle_rsc_0_1_ARREADY : OUT STD_LOGIC;
    twiddle_rsc_0_1_ARVALID : IN STD_LOGIC;
    twiddle_rsc_0_1_ARUSER : IN STD_LOGIC;
    twiddle_rsc_0_1_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_1_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_1_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_1_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_1_ARLOCK : IN STD_LOGIC;
    twiddle_rsc_0_1_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_1_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_1_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    twiddle_rsc_0_1_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    twiddle_rsc_0_1_ARID : IN STD_LOGIC;
    twiddle_rsc_0_1_BREADY : IN STD_LOGIC;
    twiddle_rsc_0_1_BVALID : OUT STD_LOGIC;
    twiddle_rsc_0_1_BUSER : OUT STD_LOGIC;
    twiddle_rsc_0_1_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_1_BID : OUT STD_LOGIC;
    twiddle_rsc_0_1_WREADY : OUT STD_LOGIC;
    twiddle_rsc_0_1_WVALID : IN STD_LOGIC;
    twiddle_rsc_0_1_WUSER : IN STD_LOGIC;
    twiddle_rsc_0_1_WLAST : IN STD_LOGIC;
    twiddle_rsc_0_1_WSTRB : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    twiddle_rsc_0_1_WDATA : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
    twiddle_rsc_0_1_AWREADY : OUT STD_LOGIC;
    twiddle_rsc_0_1_AWVALID : IN STD_LOGIC;
    twiddle_rsc_0_1_AWUSER : IN STD_LOGIC;
    twiddle_rsc_0_1_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_1_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_1_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_1_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_1_AWLOCK : IN STD_LOGIC;
    twiddle_rsc_0_1_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_1_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_1_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    twiddle_rsc_0_1_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    twiddle_rsc_0_1_AWID : IN STD_LOGIC;
    twiddle_rsc_triosy_0_1_lz : OUT STD_LOGIC
  );
END inPlaceNTT_DIT_precomp_core;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp_core IS
  -- Default Constants
  CONSTANT PWR : STD_LOGIC := '1';
  CONSTANT GND : STD_LOGIC := '0';

  -- Interconnect Declarations
  SIGNAL core_wen : STD_LOGIC;
  SIGNAL p_rsci_idat : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL core_wten : STD_LOGIC;
  SIGNAL vec_rsc_0_0_i_wen_comp : STD_LOGIC;
  SIGNAL vec_rsc_0_0_i_wen_comp_1 : STD_LOGIC;
  SIGNAL vec_rsc_0_0_i_s_din_mxwt : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL vec_rsc_0_1_i_wen_comp : STD_LOGIC;
  SIGNAL vec_rsc_0_1_i_wen_comp_1 : STD_LOGIC;
  SIGNAL vec_rsc_0_1_i_s_din_mxwt : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_wen_comp : STD_LOGIC;
  SIGNAL twiddle_rsc_0_0_i_s_raddr_core : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL twiddle_rsc_0_0_i_s_din_mxwt : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_wen_comp : STD_LOGIC;
  SIGNAL twiddle_rsc_0_1_i_s_raddr_core : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL twiddle_rsc_0_1_i_s_din_mxwt : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL COMP_LOOP_1_modulo_result_rem_cmp_z : STD_LOGIC_VECTOR (64 DOWNTO 0);
  SIGNAL COMP_LOOP_1_modulo_result_rem_cmp_a_63_0 : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL COMP_LOOP_1_modulo_result_rem_cmp_b_63_0 : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL fsm_output : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL COMP_LOOP_1_acc_10_tmp : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL or_tmp : STD_LOGIC;
  SIGNAL nor_tmp_3 : STD_LOGIC;
  SIGNAL and_dcpl_6 : STD_LOGIC;
  SIGNAL and_dcpl_7 : STD_LOGIC;
  SIGNAL and_dcpl_8 : STD_LOGIC;
  SIGNAL and_dcpl_9 : STD_LOGIC;
  SIGNAL and_dcpl_10 : STD_LOGIC;
  SIGNAL and_dcpl_12 : STD_LOGIC;
  SIGNAL and_dcpl_14 : STD_LOGIC;
  SIGNAL and_dcpl_15 : STD_LOGIC;
  SIGNAL and_dcpl_18 : STD_LOGIC;
  SIGNAL not_tmp_34 : STD_LOGIC;
  SIGNAL and_dcpl_21 : STD_LOGIC;
  SIGNAL and_dcpl_22 : STD_LOGIC;
  SIGNAL and_dcpl_23 : STD_LOGIC;
  SIGNAL and_dcpl_25 : STD_LOGIC;
  SIGNAL and_dcpl_26 : STD_LOGIC;
  SIGNAL and_dcpl_27 : STD_LOGIC;
  SIGNAL and_dcpl_28 : STD_LOGIC;
  SIGNAL and_dcpl_29 : STD_LOGIC;
  SIGNAL and_dcpl_31 : STD_LOGIC;
  SIGNAL and_dcpl_35 : STD_LOGIC;
  SIGNAL and_dcpl_38 : STD_LOGIC;
  SIGNAL and_dcpl_40 : STD_LOGIC;
  SIGNAL and_dcpl_50 : STD_LOGIC;
  SIGNAL and_dcpl_51 : STD_LOGIC;
  SIGNAL or_dcpl_4 : STD_LOGIC;
  SIGNAL mux_tmp_53 : STD_LOGIC;
  SIGNAL and_dcpl_67 : STD_LOGIC;
  SIGNAL or_tmp_59 : STD_LOGIC;
  SIGNAL mux_tmp_57 : STD_LOGIC;
  SIGNAL or_tmp_60 : STD_LOGIC;
  SIGNAL mux_tmp_68 : STD_LOGIC;
  SIGNAL mux_tmp_69 : STD_LOGIC;
  SIGNAL or_dcpl_8 : STD_LOGIC;
  SIGNAL or_dcpl_10 : STD_LOGIC;
  SIGNAL not_tmp_58 : STD_LOGIC;
  SIGNAL mux_tmp_77 : STD_LOGIC;
  SIGNAL or_dcpl_12 : STD_LOGIC;
  SIGNAL and_dcpl_80 : STD_LOGIC;
  SIGNAL COMP_LOOP_2_slc_COMP_LOOP_acc_9_itm : STD_LOGIC;
  SIGNAL COMP_LOOP_1_slc_COMP_LOOP_acc_9_itm : STD_LOGIC;
  SIGNAL VEC_LOOP_j_sva_9_0 : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL COMP_LOOP_2_acc_10_idiv_sva : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL COMP_LOOP_acc_1_cse_sva : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL COMP_LOOP_1_slc_31_1_idiv_sva : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL COMP_LOOP_2_slc_31_1_idiv_sva : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL COMP_LOOP_2_tmp_lshift_itm : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL STAGE_LOOP_lshift_psp_sva : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL COMP_LOOP_k_9_1_sva_7_0 : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL reg_COMP_LOOP_k_9_1_ftd : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL reg_vec_rsc_0_0_i_oswt_cse : STD_LOGIC;
  SIGNAL reg_vec_rsc_0_0_i_oswt_1_cse : STD_LOGIC;
  SIGNAL reg_vec_rsc_0_1_i_oswt_cse : STD_LOGIC;
  SIGNAL reg_vec_rsc_0_1_i_oswt_1_cse : STD_LOGIC;
  SIGNAL reg_vec_rsc_0_0_i_s_raddr_core_cse : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL reg_vec_rsc_0_0_i_s_waddr_core_cse : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL reg_vec_rsc_0_0_i_s_dout_core_cse : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL reg_twiddle_rsc_0_0_i_oswt_cse : STD_LOGIC;
  SIGNAL reg_twiddle_rsc_0_1_i_oswt_cse : STD_LOGIC;
  SIGNAL reg_vec_rsc_triosy_0_1_obj_iswt0_cse : STD_LOGIC;
  SIGNAL and_98_cse : STD_LOGIC;
  SIGNAL COMP_LOOP_and_cse : STD_LOGIC;
  SIGNAL COMP_LOOP_and_5_cse : STD_LOGIC;
  SIGNAL COMP_LOOP_and_7_cse : STD_LOGIC;
  SIGNAL z_out : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL and_dcpl_111 : STD_LOGIC;
  SIGNAL z_out_1 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL and_dcpl_122 : STD_LOGIC;
  SIGNAL z_out_2 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL and_dcpl_133 : STD_LOGIC;
  SIGNAL z_out_3 : STD_LOGIC_VECTOR (10 DOWNTO 0);
  SIGNAL and_dcpl_135 : STD_LOGIC;
  SIGNAL and_dcpl_138 : STD_LOGIC;
  SIGNAL and_dcpl_139 : STD_LOGIC;
  SIGNAL and_dcpl_142 : STD_LOGIC;
  SIGNAL and_dcpl_146 : STD_LOGIC;
  SIGNAL and_dcpl_151 : STD_LOGIC;
  SIGNAL z_out_4 : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL p_sva : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL STAGE_LOOP_i_3_0_sva : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL COMP_LOOP_acc_psp_sva : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL COMP_LOOP_1_tmp_acc_cse_sva : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL tmp_2_lpi_4_dfm : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL COMP_LOOP_1_acc_8_itm : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL COMP_LOOP_2_acc_8_itm : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL COMP_LOOP_1_acc_5_psp : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL COMP_LOOP_2_acc_5_psp : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL COMP_LOOP_1_mul_psp : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL COMP_LOOP_2_mul_psp : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL STAGE_LOOP_i_3_0_sva_mx0c1 : STD_LOGIC;
  SIGNAL vec_rsc_0_0_i_s_dout_core_1 : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL COMP_LOOP_2_acc_5_psp_mx0w2 : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL VEC_LOOP_j_sva_9_0_mx0c0 : STD_LOGIC;
  SIGNAL tmp_2_lpi_4_dfm_mx0c1 : STD_LOGIC;
  SIGNAL COMP_LOOP_1_acc_8_itm_mx0w0 : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL or_118_cse : STD_LOGIC;
  SIGNAL or_116_cse : STD_LOGIC;

  SIGNAL mux_34_nl : STD_LOGIC;
  SIGNAL nor_43_nl : STD_LOGIC;
  SIGNAL mux_33_nl : STD_LOGIC;
  SIGNAL or_106_nl : STD_LOGIC;
  SIGNAL mux_38_nl : STD_LOGIC;
  SIGNAL mux_37_nl : STD_LOGIC;
  SIGNAL nor_39_nl : STD_LOGIC;
  SIGNAL nor_40_nl : STD_LOGIC;
  SIGNAL mux_36_nl : STD_LOGIC;
  SIGNAL nor_41_nl : STD_LOGIC;
  SIGNAL nor_42_nl : STD_LOGIC;
  SIGNAL mux_41_nl : STD_LOGIC;
  SIGNAL nor_37_nl : STD_LOGIC;
  SIGNAL mux_40_nl : STD_LOGIC;
  SIGNAL or_43_nl : STD_LOGIC;
  SIGNAL or_42_nl : STD_LOGIC;
  SIGNAL nor_38_nl : STD_LOGIC;
  SIGNAL mux_39_nl : STD_LOGIC;
  SIGNAL or_39_nl : STD_LOGIC;
  SIGNAL or_37_nl : STD_LOGIC;
  SIGNAL and_30_nl : STD_LOGIC;
  SIGNAL and_32_nl : STD_LOGIC;
  SIGNAL and_34_nl : STD_LOGIC;
  SIGNAL and_37_nl : STD_LOGIC;
  SIGNAL and_39_nl : STD_LOGIC;
  SIGNAL and_42_nl : STD_LOGIC;
  SIGNAL mux_44_nl : STD_LOGIC;
  SIGNAL mux_43_nl : STD_LOGIC;
  SIGNAL and_99_nl : STD_LOGIC;
  SIGNAL and_100_nl : STD_LOGIC;
  SIGNAL mux_42_nl : STD_LOGIC;
  SIGNAL nor_35_nl : STD_LOGIC;
  SIGNAL nor_36_nl : STD_LOGIC;
  SIGNAL mux_47_nl : STD_LOGIC;
  SIGNAL nor_33_nl : STD_LOGIC;
  SIGNAL mux_46_nl : STD_LOGIC;
  SIGNAL or_53_nl : STD_LOGIC;
  SIGNAL or_52_nl : STD_LOGIC;
  SIGNAL nor_34_nl : STD_LOGIC;
  SIGNAL mux_45_nl : STD_LOGIC;
  SIGNAL or_49_nl : STD_LOGIC;
  SIGNAL or_48_nl : STD_LOGIC;
  SIGNAL mux_49_nl : STD_LOGIC;
  SIGNAL mux_48_nl : STD_LOGIC;
  SIGNAL or_114_nl : STD_LOGIC;
  SIGNAL COMP_LOOP_or_2_nl : STD_LOGIC;
  SIGNAL and_59_nl : STD_LOGIC;
  SIGNAL mux_51_nl : STD_LOGIC;
  SIGNAL mux_50_nl : STD_LOGIC;
  SIGNAL and_62_nl : STD_LOGIC;
  SIGNAL mux_52_nl : STD_LOGIC;
  SIGNAL nor_31_nl : STD_LOGIC;
  SIGNAL nor_32_nl : STD_LOGIC;
  SIGNAL and_65_nl : STD_LOGIC;
  SIGNAL nor_55_nl : STD_LOGIC;
  SIGNAL mux_56_nl : STD_LOGIC;
  SIGNAL mux_55_nl : STD_LOGIC;
  SIGNAL or_64_nl : STD_LOGIC;
  SIGNAL mux_54_nl : STD_LOGIC;
  SIGNAL or_61_nl : STD_LOGIC;
  SIGNAL and_69_nl : STD_LOGIC;
  SIGNAL mux_62_nl : STD_LOGIC;
  SIGNAL mux_61_nl : STD_LOGIC;
  SIGNAL mux_60_nl : STD_LOGIC;
  SIGNAL mux_59_nl : STD_LOGIC;
  SIGNAL mux_58_nl : STD_LOGIC;
  SIGNAL mux_63_nl : STD_LOGIC;
  SIGNAL nand_nl : STD_LOGIC;
  SIGNAL and_71_nl : STD_LOGIC;
  SIGNAL mux_64_nl : STD_LOGIC;
  SIGNAL VEC_LOOP_j_not_1_nl : STD_LOGIC;
  SIGNAL mux_67_nl : STD_LOGIC;
  SIGNAL mux_66_nl : STD_LOGIC;
  SIGNAL or_72_nl : STD_LOGIC;
  SIGNAL or_115_nl : STD_LOGIC;
  SIGNAL mux_28_nl : STD_LOGIC;
  SIGNAL or_111_nl : STD_LOGIC;
  SIGNAL or_112_nl : STD_LOGIC;
  SIGNAL mux_94_nl : STD_LOGIC;
  SIGNAL mux_93_nl : STD_LOGIC;
  SIGNAL mux_92_nl : STD_LOGIC;
  SIGNAL nand_7_nl : STD_LOGIC;
  SIGNAL mux_nl : STD_LOGIC;
  SIGNAL nand_8_nl : STD_LOGIC;
  SIGNAL COMP_LOOP_1_acc_11_nl : STD_LOGIC_VECTOR (10 DOWNTO 0);
  SIGNAL COMP_LOOP_2_acc_nl : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL mux_75_nl : STD_LOGIC;
  SIGNAL mux_79_nl : STD_LOGIC;
  SIGNAL mux_78_nl : STD_LOGIC;
  SIGNAL mux_76_nl : STD_LOGIC;
  SIGNAL mux_70_nl : STD_LOGIC;
  SIGNAL or_109_nl : STD_LOGIC;
  SIGNAL COMP_LOOP_2_acc_11_nl : STD_LOGIC_VECTOR (10 DOWNTO 0);
  SIGNAL mux_80_nl : STD_LOGIC;
  SIGNAL or_9_nl : STD_LOGIC;
  SIGNAL COMP_LOOP_1_acc_nl : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL mux_81_nl : STD_LOGIC;
  SIGNAL or_10_nl : STD_LOGIC;
  SIGNAL mux_82_nl : STD_LOGIC;
  SIGNAL nor_28_nl : STD_LOGIC;
  SIGNAL nor_29_nl : STD_LOGIC;
  SIGNAL and_85_nl : STD_LOGIC;
  SIGNAL and_88_nl : STD_LOGIC;
  SIGNAL mux_91_nl : STD_LOGIC;
  SIGNAL mux_90_nl : STD_LOGIC;
  SIGNAL mux_89_nl : STD_LOGIC;
  SIGNAL and_90_nl : STD_LOGIC;
  SIGNAL mux_88_nl : STD_LOGIC;
  SIGNAL mux_87_nl : STD_LOGIC;
  SIGNAL mux_86_nl : STD_LOGIC;
  SIGNAL mux_85_nl : STD_LOGIC;
  SIGNAL or_11_nl : STD_LOGIC;
  SIGNAL COMP_LOOP_1_modulo_qelse_acc_nl : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL or_2_nl : STD_LOGIC;
  SIGNAL or_62_nl : STD_LOGIC;
  SIGNAL mux_83_nl : STD_LOGIC;
  SIGNAL nor_26_nl : STD_LOGIC;
  SIGNAL nor_27_nl : STD_LOGIC;
  SIGNAL STAGE_LOOP_mux_3_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL COMP_LOOP_mux_40_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL COMP_LOOP_mux_41_nl : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL COMP_LOOP_mux_42_nl : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL COMP_LOOP_tmp_mux1h_4_nl : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL COMP_LOOP_tmp_mux1h_5_nl : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL COMP_LOOP_tmp_or_2_nl : STD_LOGIC;
  SIGNAL COMP_LOOP_tmp_or_3_nl : STD_LOGIC;
  SIGNAL p_rsci_dat : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL p_rsci_idat_1 : STD_LOGIC_VECTOR (63 DOWNTO 0);

  SIGNAL COMP_LOOP_1_modulo_result_rem_cmp_a : STD_LOGIC_VECTOR (64 DOWNTO 0);
  SIGNAL COMP_LOOP_1_modulo_result_rem_cmp_b : STD_LOGIC_VECTOR (64 DOWNTO 0);
  SIGNAL COMP_LOOP_1_modulo_result_rem_cmp_z_1 : STD_LOGIC_VECTOR (64 DOWNTO 0);

  SIGNAL COMP_LOOP_1_tmp_lshift_rg_a : STD_LOGIC_VECTOR (0 DOWNTO 0);
  SIGNAL COMP_LOOP_1_tmp_lshift_rg_s : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL COMP_LOOP_1_tmp_lshift_rg_z : STD_LOGIC_VECTOR (9 DOWNTO 0);

  COMPONENT inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      vec_rsc_0_0_s_tdone : IN STD_LOGIC;
      vec_rsc_0_0_tr_write_done : IN STD_LOGIC;
      vec_rsc_0_0_RREADY : IN STD_LOGIC;
      vec_rsc_0_0_RVALID : OUT STD_LOGIC;
      vec_rsc_0_0_RUSER : OUT STD_LOGIC;
      vec_rsc_0_0_RLAST : OUT STD_LOGIC;
      vec_rsc_0_0_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      vec_rsc_0_0_RDATA : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
      vec_rsc_0_0_RID : OUT STD_LOGIC;
      vec_rsc_0_0_ARREADY : OUT STD_LOGIC;
      vec_rsc_0_0_ARVALID : IN STD_LOGIC;
      vec_rsc_0_0_ARUSER : IN STD_LOGIC;
      vec_rsc_0_0_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_0_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_0_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      vec_rsc_0_0_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_0_ARLOCK : IN STD_LOGIC;
      vec_rsc_0_0_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      vec_rsc_0_0_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      vec_rsc_0_0_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      vec_rsc_0_0_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      vec_rsc_0_0_ARID : IN STD_LOGIC;
      vec_rsc_0_0_BREADY : IN STD_LOGIC;
      vec_rsc_0_0_BVALID : OUT STD_LOGIC;
      vec_rsc_0_0_BUSER : OUT STD_LOGIC;
      vec_rsc_0_0_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      vec_rsc_0_0_BID : OUT STD_LOGIC;
      vec_rsc_0_0_WREADY : OUT STD_LOGIC;
      vec_rsc_0_0_WVALID : IN STD_LOGIC;
      vec_rsc_0_0_WUSER : IN STD_LOGIC;
      vec_rsc_0_0_WLAST : IN STD_LOGIC;
      vec_rsc_0_0_WSTRB : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      vec_rsc_0_0_WDATA : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
      vec_rsc_0_0_AWREADY : OUT STD_LOGIC;
      vec_rsc_0_0_AWVALID : IN STD_LOGIC;
      vec_rsc_0_0_AWUSER : IN STD_LOGIC;
      vec_rsc_0_0_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_0_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_0_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      vec_rsc_0_0_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_0_AWLOCK : IN STD_LOGIC;
      vec_rsc_0_0_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      vec_rsc_0_0_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      vec_rsc_0_0_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      vec_rsc_0_0_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      vec_rsc_0_0_AWID : IN STD_LOGIC;
      core_wen : IN STD_LOGIC;
      vec_rsc_0_0_i_oswt : IN STD_LOGIC;
      vec_rsc_0_0_i_wen_comp : OUT STD_LOGIC;
      vec_rsc_0_0_i_oswt_1 : IN STD_LOGIC;
      vec_rsc_0_0_i_wen_comp_1 : OUT STD_LOGIC;
      vec_rsc_0_0_i_s_raddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      vec_rsc_0_0_i_s_waddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      vec_rsc_0_0_i_s_din_mxwt : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
      vec_rsc_0_0_i_s_dout_core : IN STD_LOGIC_VECTOR (63 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_RRESP : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_RDATA : STD_LOGIC_VECTOR
      (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARREGION : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARQOS : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARPROT : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARCACHE : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARBURST : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARSIZE : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARLEN : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARADDR : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_BRESP : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_WSTRB : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_WDATA : STD_LOGIC_VECTOR
      (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWREGION : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWQOS : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWPROT : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWCACHE : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWBURST : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWSIZE : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWLEN : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWADDR : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_i_s_raddr_core
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_i_s_waddr_core
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_i_s_din_mxwt
      : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_i_s_dout_core
      : STD_LOGIC_VECTOR (63 DOWNTO 0);

  COMPONENT inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      vec_rsc_0_1_s_tdone : IN STD_LOGIC;
      vec_rsc_0_1_tr_write_done : IN STD_LOGIC;
      vec_rsc_0_1_RREADY : IN STD_LOGIC;
      vec_rsc_0_1_RVALID : OUT STD_LOGIC;
      vec_rsc_0_1_RUSER : OUT STD_LOGIC;
      vec_rsc_0_1_RLAST : OUT STD_LOGIC;
      vec_rsc_0_1_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      vec_rsc_0_1_RDATA : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
      vec_rsc_0_1_RID : OUT STD_LOGIC;
      vec_rsc_0_1_ARREADY : OUT STD_LOGIC;
      vec_rsc_0_1_ARVALID : IN STD_LOGIC;
      vec_rsc_0_1_ARUSER : IN STD_LOGIC;
      vec_rsc_0_1_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_1_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_1_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      vec_rsc_0_1_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_1_ARLOCK : IN STD_LOGIC;
      vec_rsc_0_1_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      vec_rsc_0_1_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      vec_rsc_0_1_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      vec_rsc_0_1_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      vec_rsc_0_1_ARID : IN STD_LOGIC;
      vec_rsc_0_1_BREADY : IN STD_LOGIC;
      vec_rsc_0_1_BVALID : OUT STD_LOGIC;
      vec_rsc_0_1_BUSER : OUT STD_LOGIC;
      vec_rsc_0_1_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      vec_rsc_0_1_BID : OUT STD_LOGIC;
      vec_rsc_0_1_WREADY : OUT STD_LOGIC;
      vec_rsc_0_1_WVALID : IN STD_LOGIC;
      vec_rsc_0_1_WUSER : IN STD_LOGIC;
      vec_rsc_0_1_WLAST : IN STD_LOGIC;
      vec_rsc_0_1_WSTRB : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      vec_rsc_0_1_WDATA : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
      vec_rsc_0_1_AWREADY : OUT STD_LOGIC;
      vec_rsc_0_1_AWVALID : IN STD_LOGIC;
      vec_rsc_0_1_AWUSER : IN STD_LOGIC;
      vec_rsc_0_1_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_1_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_1_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      vec_rsc_0_1_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_1_AWLOCK : IN STD_LOGIC;
      vec_rsc_0_1_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      vec_rsc_0_1_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      vec_rsc_0_1_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      vec_rsc_0_1_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      vec_rsc_0_1_AWID : IN STD_LOGIC;
      core_wen : IN STD_LOGIC;
      vec_rsc_0_1_i_oswt : IN STD_LOGIC;
      vec_rsc_0_1_i_wen_comp : OUT STD_LOGIC;
      vec_rsc_0_1_i_oswt_1 : IN STD_LOGIC;
      vec_rsc_0_1_i_wen_comp_1 : OUT STD_LOGIC;
      vec_rsc_0_1_i_s_raddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      vec_rsc_0_1_i_s_waddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      vec_rsc_0_1_i_s_din_mxwt : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
      vec_rsc_0_1_i_s_dout_core : IN STD_LOGIC_VECTOR (63 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_RRESP : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_RDATA : STD_LOGIC_VECTOR
      (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARREGION : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARQOS : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARPROT : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARCACHE : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARBURST : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARSIZE : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARLEN : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARADDR : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_BRESP : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_WSTRB : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_WDATA : STD_LOGIC_VECTOR
      (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWREGION : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWQOS : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWPROT : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWCACHE : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWBURST : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWSIZE : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWLEN : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWADDR : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_i_s_raddr_core
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_i_s_waddr_core
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_i_s_din_mxwt
      : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_i_s_dout_core
      : STD_LOGIC_VECTOR (63 DOWNTO 0);

  COMPONENT inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      twiddle_rsc_0_0_s_tdone : IN STD_LOGIC;
      twiddle_rsc_0_0_tr_write_done : IN STD_LOGIC;
      twiddle_rsc_0_0_RREADY : IN STD_LOGIC;
      twiddle_rsc_0_0_RVALID : OUT STD_LOGIC;
      twiddle_rsc_0_0_RUSER : OUT STD_LOGIC;
      twiddle_rsc_0_0_RLAST : OUT STD_LOGIC;
      twiddle_rsc_0_0_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      twiddle_rsc_0_0_RDATA : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
      twiddle_rsc_0_0_RID : OUT STD_LOGIC;
      twiddle_rsc_0_0_ARREADY : OUT STD_LOGIC;
      twiddle_rsc_0_0_ARVALID : IN STD_LOGIC;
      twiddle_rsc_0_0_ARUSER : IN STD_LOGIC;
      twiddle_rsc_0_0_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_0_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_0_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      twiddle_rsc_0_0_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_0_ARLOCK : IN STD_LOGIC;
      twiddle_rsc_0_0_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      twiddle_rsc_0_0_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      twiddle_rsc_0_0_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      twiddle_rsc_0_0_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      twiddle_rsc_0_0_ARID : IN STD_LOGIC;
      twiddle_rsc_0_0_BREADY : IN STD_LOGIC;
      twiddle_rsc_0_0_BVALID : OUT STD_LOGIC;
      twiddle_rsc_0_0_BUSER : OUT STD_LOGIC;
      twiddle_rsc_0_0_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      twiddle_rsc_0_0_BID : OUT STD_LOGIC;
      twiddle_rsc_0_0_WREADY : OUT STD_LOGIC;
      twiddle_rsc_0_0_WVALID : IN STD_LOGIC;
      twiddle_rsc_0_0_WUSER : IN STD_LOGIC;
      twiddle_rsc_0_0_WLAST : IN STD_LOGIC;
      twiddle_rsc_0_0_WSTRB : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      twiddle_rsc_0_0_WDATA : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
      twiddle_rsc_0_0_AWREADY : OUT STD_LOGIC;
      twiddle_rsc_0_0_AWVALID : IN STD_LOGIC;
      twiddle_rsc_0_0_AWUSER : IN STD_LOGIC;
      twiddle_rsc_0_0_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_0_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_0_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      twiddle_rsc_0_0_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_0_AWLOCK : IN STD_LOGIC;
      twiddle_rsc_0_0_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      twiddle_rsc_0_0_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      twiddle_rsc_0_0_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      twiddle_rsc_0_0_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      twiddle_rsc_0_0_AWID : IN STD_LOGIC;
      core_wen : IN STD_LOGIC;
      twiddle_rsc_0_0_i_oswt : IN STD_LOGIC;
      twiddle_rsc_0_0_i_wen_comp : OUT STD_LOGIC;
      twiddle_rsc_0_0_i_s_raddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      twiddle_rsc_0_0_i_s_din_mxwt : OUT STD_LOGIC_VECTOR (63 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_RRESP
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_RDATA
      : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARREGION
      : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARQOS
      : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARPROT
      : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARCACHE
      : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARBURST
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARSIZE
      : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARLEN
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARADDR
      : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_BRESP
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_WSTRB
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_WDATA
      : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWREGION
      : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWQOS
      : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWPROT
      : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWCACHE
      : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWBURST
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWSIZE
      : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWLEN
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWADDR
      : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_i_s_raddr_core
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_i_s_din_mxwt
      : STD_LOGIC_VECTOR (63 DOWNTO 0);

  COMPONENT inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      twiddle_rsc_0_1_s_tdone : IN STD_LOGIC;
      twiddle_rsc_0_1_tr_write_done : IN STD_LOGIC;
      twiddle_rsc_0_1_RREADY : IN STD_LOGIC;
      twiddle_rsc_0_1_RVALID : OUT STD_LOGIC;
      twiddle_rsc_0_1_RUSER : OUT STD_LOGIC;
      twiddle_rsc_0_1_RLAST : OUT STD_LOGIC;
      twiddle_rsc_0_1_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      twiddle_rsc_0_1_RDATA : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
      twiddle_rsc_0_1_RID : OUT STD_LOGIC;
      twiddle_rsc_0_1_ARREADY : OUT STD_LOGIC;
      twiddle_rsc_0_1_ARVALID : IN STD_LOGIC;
      twiddle_rsc_0_1_ARUSER : IN STD_LOGIC;
      twiddle_rsc_0_1_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_1_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_1_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      twiddle_rsc_0_1_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_1_ARLOCK : IN STD_LOGIC;
      twiddle_rsc_0_1_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      twiddle_rsc_0_1_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      twiddle_rsc_0_1_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      twiddle_rsc_0_1_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      twiddle_rsc_0_1_ARID : IN STD_LOGIC;
      twiddle_rsc_0_1_BREADY : IN STD_LOGIC;
      twiddle_rsc_0_1_BVALID : OUT STD_LOGIC;
      twiddle_rsc_0_1_BUSER : OUT STD_LOGIC;
      twiddle_rsc_0_1_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      twiddle_rsc_0_1_BID : OUT STD_LOGIC;
      twiddle_rsc_0_1_WREADY : OUT STD_LOGIC;
      twiddle_rsc_0_1_WVALID : IN STD_LOGIC;
      twiddle_rsc_0_1_WUSER : IN STD_LOGIC;
      twiddle_rsc_0_1_WLAST : IN STD_LOGIC;
      twiddle_rsc_0_1_WSTRB : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      twiddle_rsc_0_1_WDATA : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
      twiddle_rsc_0_1_AWREADY : OUT STD_LOGIC;
      twiddle_rsc_0_1_AWVALID : IN STD_LOGIC;
      twiddle_rsc_0_1_AWUSER : IN STD_LOGIC;
      twiddle_rsc_0_1_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_1_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_1_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      twiddle_rsc_0_1_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_1_AWLOCK : IN STD_LOGIC;
      twiddle_rsc_0_1_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      twiddle_rsc_0_1_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      twiddle_rsc_0_1_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      twiddle_rsc_0_1_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      twiddle_rsc_0_1_AWID : IN STD_LOGIC;
      core_wen : IN STD_LOGIC;
      twiddle_rsc_0_1_i_oswt : IN STD_LOGIC;
      twiddle_rsc_0_1_i_wen_comp : OUT STD_LOGIC;
      twiddle_rsc_0_1_i_s_raddr_core : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      twiddle_rsc_0_1_i_s_din_mxwt : OUT STD_LOGIC_VECTOR (63 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_RRESP
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_RDATA
      : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARREGION
      : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARQOS
      : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARPROT
      : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARCACHE
      : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARBURST
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARSIZE
      : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARLEN
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARADDR
      : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_BRESP
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_WSTRB
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_WDATA
      : STD_LOGIC_VECTOR (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWREGION
      : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWQOS
      : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWPROT
      : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWCACHE
      : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWBURST
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWSIZE
      : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWLEN
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWADDR
      : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_i_s_raddr_core
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_i_s_din_mxwt
      : STD_LOGIC_VECTOR (63 DOWNTO 0);

  COMPONENT inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_1_obj
    PORT(
      vec_rsc_triosy_0_1_lz : OUT STD_LOGIC;
      core_wten : IN STD_LOGIC;
      vec_rsc_triosy_0_1_obj_iswt0 : IN STD_LOGIC
    );
  END COMPONENT;
  COMPONENT inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_0_obj
    PORT(
      vec_rsc_triosy_0_0_lz : OUT STD_LOGIC;
      core_wten : IN STD_LOGIC;
      vec_rsc_triosy_0_0_obj_iswt0 : IN STD_LOGIC
    );
  END COMPONENT;
  COMPONENT inPlaceNTT_DIT_precomp_core_p_rsc_triosy_obj
    PORT(
      p_rsc_triosy_lz : OUT STD_LOGIC;
      core_wten : IN STD_LOGIC;
      p_rsc_triosy_obj_iswt0 : IN STD_LOGIC
    );
  END COMPONENT;
  COMPONENT inPlaceNTT_DIT_precomp_core_r_rsc_triosy_obj
    PORT(
      r_rsc_triosy_lz : OUT STD_LOGIC;
      core_wten : IN STD_LOGIC;
      r_rsc_triosy_obj_iswt0 : IN STD_LOGIC
    );
  END COMPONENT;
  COMPONENT inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_1_obj
    PORT(
      twiddle_rsc_triosy_0_1_lz : OUT STD_LOGIC;
      core_wten : IN STD_LOGIC;
      twiddle_rsc_triosy_0_1_obj_iswt0 : IN STD_LOGIC
    );
  END COMPONENT;
  COMPONENT inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_0_obj
    PORT(
      twiddle_rsc_triosy_0_0_lz : OUT STD_LOGIC;
      core_wten : IN STD_LOGIC;
      twiddle_rsc_triosy_0_0_obj_iswt0 : IN STD_LOGIC
    );
  END COMPONENT;
  COMPONENT inPlaceNTT_DIT_precomp_core_staller
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      core_wen : OUT STD_LOGIC;
      core_wten : OUT STD_LOGIC;
      vec_rsc_0_0_i_wen_comp : IN STD_LOGIC;
      vec_rsc_0_0_i_wen_comp_1 : IN STD_LOGIC;
      vec_rsc_0_1_i_wen_comp : IN STD_LOGIC;
      vec_rsc_0_1_i_wen_comp_1 : IN STD_LOGIC;
      twiddle_rsc_0_0_i_wen_comp : IN STD_LOGIC;
      twiddle_rsc_0_1_i_wen_comp : IN STD_LOGIC
    );
  END COMPONENT;
  COMPONENT inPlaceNTT_DIT_precomp_core_core_fsm
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      core_wen : IN STD_LOGIC;
      fsm_output : OUT STD_LOGIC_VECTOR (6 DOWNTO 0);
      COMP_LOOP_C_38_tr0 : IN STD_LOGIC;
      COMP_LOOP_C_77_tr0 : IN STD_LOGIC;
      VEC_LOOP_C_0_tr0 : IN STD_LOGIC;
      STAGE_LOOP_C_1_tr0 : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL inPlaceNTT_DIT_precomp_core_core_fsm_inst_fsm_output : STD_LOGIC_VECTOR
      (6 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_core_fsm_inst_COMP_LOOP_C_38_tr0 : STD_LOGIC;
  SIGNAL inPlaceNTT_DIT_precomp_core_core_fsm_inst_COMP_LOOP_C_77_tr0 : STD_LOGIC;
  SIGNAL inPlaceNTT_DIT_precomp_core_core_fsm_inst_VEC_LOOP_C_0_tr0 : STD_LOGIC;
  SIGNAL inPlaceNTT_DIT_precomp_core_core_fsm_inst_STAGE_LOOP_C_1_tr0 : STD_LOGIC;

  FUNCTION CONV_SL_1_1(input_val:BOOLEAN)
  RETURN STD_LOGIC IS
  BEGIN
    IF input_val THEN RETURN '1';ELSE RETURN '0';END IF;
  END;

  FUNCTION MUX1HOT_v_10_3_2(input_2 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(9 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(9 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_4_3_2(input_2 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(3 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(3 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_64_3_2(input_2 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(63 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(63 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_64_4_2(input_3 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(63 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(63 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_64_8_2(input_7 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  input_6 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(7 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(63 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(63 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
      tmp := (OTHERS=>sel( 7));
      result := result or ( input_7 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_9_4_2(input_3 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX_s_1_2_2(input_0 : STD_LOGIC;
  input_1 : STD_LOGIC;
  sel : STD_LOGIC)
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_10_2_2(input_0 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(9 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_4_2_2(input_0 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(3 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_64_2_2(input_0 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(63 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(63 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_8_2_2(input_0 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(7 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_9_2_2(input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

BEGIN
  p_rsci : mgc_hls.ccs_in_pkg_v1.ccs_in_v1
    GENERIC MAP(
      rscid => 2,
      width => 64
      )
    PORT MAP(
      dat => p_rsci_dat,
      idat => p_rsci_idat_1
    );
  p_rsci_dat <= p_rsc_dat;
  p_rsci_idat <= p_rsci_idat_1;

  COMP_LOOP_1_modulo_result_rem_cmp : mgc_hls.mgc_comps.mgc_rem
    GENERIC MAP(
      width_a => 65,
      width_b => 65,
      signd => 1
      )
    PORT MAP(
      a => COMP_LOOP_1_modulo_result_rem_cmp_a,
      b => COMP_LOOP_1_modulo_result_rem_cmp_b,
      z => COMP_LOOP_1_modulo_result_rem_cmp_z_1
    );
  COMP_LOOP_1_modulo_result_rem_cmp_a <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(COMP_LOOP_1_modulo_result_rem_cmp_a_63_0),65));
  COMP_LOOP_1_modulo_result_rem_cmp_b <= STD_LOGIC_VECTOR(UNSIGNED'( "0") & UNSIGNED(COMP_LOOP_1_modulo_result_rem_cmp_b_63_0));
  COMP_LOOP_1_modulo_result_rem_cmp_z <= COMP_LOOP_1_modulo_result_rem_cmp_z_1;

  COMP_LOOP_1_tmp_lshift_rg : mgc_hls.mgc_shift_comps_v5.mgc_shift_l_v5
    GENERIC MAP(
      width_a => 1,
      signd_a => 0,
      width_s => 4,
      width_z => 10
      )
    PORT MAP(
      a => COMP_LOOP_1_tmp_lshift_rg_a,
      s => COMP_LOOP_1_tmp_lshift_rg_s,
      z => COMP_LOOP_1_tmp_lshift_rg_z
    );
  COMP_LOOP_1_tmp_lshift_rg_a(0) <= '1';
  COMP_LOOP_1_tmp_lshift_rg_s <= MUX1HOT_v_4_3_2(z_out_1, STAGE_LOOP_i_3_0_sva, COMP_LOOP_1_tmp_acc_cse_sva,
      STD_LOGIC_VECTOR'( (NOT (fsm_output(0))) & (NOT (fsm_output(1))) & (and_dcpl_8
      AND and_dcpl_9 AND (fsm_output(1)) AND (fsm_output(0)) AND (NOT (fsm_output(6))))));
  z_out <= COMP_LOOP_1_tmp_lshift_rg_z;

  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst : inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i
    PORT MAP(
      clk => clk,
      rst => rst,
      vec_rsc_0_0_s_tdone => vec_rsc_0_0_s_tdone,
      vec_rsc_0_0_tr_write_done => vec_rsc_0_0_tr_write_done,
      vec_rsc_0_0_RREADY => vec_rsc_0_0_RREADY,
      vec_rsc_0_0_RVALID => vec_rsc_0_0_RVALID,
      vec_rsc_0_0_RUSER => vec_rsc_0_0_RUSER,
      vec_rsc_0_0_RLAST => vec_rsc_0_0_RLAST,
      vec_rsc_0_0_RRESP => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_RRESP,
      vec_rsc_0_0_RDATA => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_RDATA,
      vec_rsc_0_0_RID => vec_rsc_0_0_RID,
      vec_rsc_0_0_ARREADY => vec_rsc_0_0_ARREADY,
      vec_rsc_0_0_ARVALID => vec_rsc_0_0_ARVALID,
      vec_rsc_0_0_ARUSER => vec_rsc_0_0_ARUSER,
      vec_rsc_0_0_ARREGION => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARREGION,
      vec_rsc_0_0_ARQOS => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARQOS,
      vec_rsc_0_0_ARPROT => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARPROT,
      vec_rsc_0_0_ARCACHE => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARCACHE,
      vec_rsc_0_0_ARLOCK => vec_rsc_0_0_ARLOCK,
      vec_rsc_0_0_ARBURST => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARBURST,
      vec_rsc_0_0_ARSIZE => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARSIZE,
      vec_rsc_0_0_ARLEN => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARLEN,
      vec_rsc_0_0_ARADDR => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARADDR,
      vec_rsc_0_0_ARID => vec_rsc_0_0_ARID,
      vec_rsc_0_0_BREADY => vec_rsc_0_0_BREADY,
      vec_rsc_0_0_BVALID => vec_rsc_0_0_BVALID,
      vec_rsc_0_0_BUSER => vec_rsc_0_0_BUSER,
      vec_rsc_0_0_BRESP => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_BRESP,
      vec_rsc_0_0_BID => vec_rsc_0_0_BID,
      vec_rsc_0_0_WREADY => vec_rsc_0_0_WREADY,
      vec_rsc_0_0_WVALID => vec_rsc_0_0_WVALID,
      vec_rsc_0_0_WUSER => vec_rsc_0_0_WUSER,
      vec_rsc_0_0_WLAST => vec_rsc_0_0_WLAST,
      vec_rsc_0_0_WSTRB => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_WSTRB,
      vec_rsc_0_0_WDATA => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_WDATA,
      vec_rsc_0_0_AWREADY => vec_rsc_0_0_AWREADY,
      vec_rsc_0_0_AWVALID => vec_rsc_0_0_AWVALID,
      vec_rsc_0_0_AWUSER => vec_rsc_0_0_AWUSER,
      vec_rsc_0_0_AWREGION => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWREGION,
      vec_rsc_0_0_AWQOS => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWQOS,
      vec_rsc_0_0_AWPROT => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWPROT,
      vec_rsc_0_0_AWCACHE => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWCACHE,
      vec_rsc_0_0_AWLOCK => vec_rsc_0_0_AWLOCK,
      vec_rsc_0_0_AWBURST => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWBURST,
      vec_rsc_0_0_AWSIZE => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWSIZE,
      vec_rsc_0_0_AWLEN => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWLEN,
      vec_rsc_0_0_AWADDR => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWADDR,
      vec_rsc_0_0_AWID => vec_rsc_0_0_AWID,
      core_wen => core_wen,
      vec_rsc_0_0_i_oswt => reg_vec_rsc_0_0_i_oswt_cse,
      vec_rsc_0_0_i_wen_comp => vec_rsc_0_0_i_wen_comp,
      vec_rsc_0_0_i_oswt_1 => reg_vec_rsc_0_0_i_oswt_1_cse,
      vec_rsc_0_0_i_wen_comp_1 => vec_rsc_0_0_i_wen_comp_1,
      vec_rsc_0_0_i_s_raddr_core => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_i_s_raddr_core,
      vec_rsc_0_0_i_s_waddr_core => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_i_s_waddr_core,
      vec_rsc_0_0_i_s_din_mxwt => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_i_s_din_mxwt,
      vec_rsc_0_0_i_s_dout_core => inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_i_s_dout_core
    );
  vec_rsc_0_0_RRESP <= inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_RRESP;
  vec_rsc_0_0_RDATA <= inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_RDATA;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARREGION <= vec_rsc_0_0_ARREGION;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARQOS <= vec_rsc_0_0_ARQOS;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARPROT <= vec_rsc_0_0_ARPROT;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARCACHE <= vec_rsc_0_0_ARCACHE;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARBURST <= vec_rsc_0_0_ARBURST;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARSIZE <= vec_rsc_0_0_ARSIZE;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARLEN <= vec_rsc_0_0_ARLEN;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_ARADDR <= vec_rsc_0_0_ARADDR;
  vec_rsc_0_0_BRESP <= inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_BRESP;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_WSTRB <= vec_rsc_0_0_WSTRB;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_WDATA <= vec_rsc_0_0_WDATA;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWREGION <= vec_rsc_0_0_AWREGION;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWQOS <= vec_rsc_0_0_AWQOS;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWPROT <= vec_rsc_0_0_AWPROT;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWCACHE <= vec_rsc_0_0_AWCACHE;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWBURST <= vec_rsc_0_0_AWBURST;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWSIZE <= vec_rsc_0_0_AWSIZE;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWLEN <= vec_rsc_0_0_AWLEN;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_AWADDR <= vec_rsc_0_0_AWADDR;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_i_s_raddr_core <= reg_vec_rsc_0_0_i_s_raddr_core_cse;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_i_s_waddr_core <= reg_vec_rsc_0_0_i_s_waddr_core_cse;
  vec_rsc_0_0_i_s_din_mxwt <= inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_i_s_din_mxwt;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_0_i_inst_vec_rsc_0_0_i_s_dout_core <= reg_vec_rsc_0_0_i_s_dout_core_cse;

  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst : inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i
    PORT MAP(
      clk => clk,
      rst => rst,
      vec_rsc_0_1_s_tdone => vec_rsc_0_1_s_tdone,
      vec_rsc_0_1_tr_write_done => vec_rsc_0_1_tr_write_done,
      vec_rsc_0_1_RREADY => vec_rsc_0_1_RREADY,
      vec_rsc_0_1_RVALID => vec_rsc_0_1_RVALID,
      vec_rsc_0_1_RUSER => vec_rsc_0_1_RUSER,
      vec_rsc_0_1_RLAST => vec_rsc_0_1_RLAST,
      vec_rsc_0_1_RRESP => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_RRESP,
      vec_rsc_0_1_RDATA => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_RDATA,
      vec_rsc_0_1_RID => vec_rsc_0_1_RID,
      vec_rsc_0_1_ARREADY => vec_rsc_0_1_ARREADY,
      vec_rsc_0_1_ARVALID => vec_rsc_0_1_ARVALID,
      vec_rsc_0_1_ARUSER => vec_rsc_0_1_ARUSER,
      vec_rsc_0_1_ARREGION => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARREGION,
      vec_rsc_0_1_ARQOS => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARQOS,
      vec_rsc_0_1_ARPROT => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARPROT,
      vec_rsc_0_1_ARCACHE => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARCACHE,
      vec_rsc_0_1_ARLOCK => vec_rsc_0_1_ARLOCK,
      vec_rsc_0_1_ARBURST => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARBURST,
      vec_rsc_0_1_ARSIZE => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARSIZE,
      vec_rsc_0_1_ARLEN => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARLEN,
      vec_rsc_0_1_ARADDR => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARADDR,
      vec_rsc_0_1_ARID => vec_rsc_0_1_ARID,
      vec_rsc_0_1_BREADY => vec_rsc_0_1_BREADY,
      vec_rsc_0_1_BVALID => vec_rsc_0_1_BVALID,
      vec_rsc_0_1_BUSER => vec_rsc_0_1_BUSER,
      vec_rsc_0_1_BRESP => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_BRESP,
      vec_rsc_0_1_BID => vec_rsc_0_1_BID,
      vec_rsc_0_1_WREADY => vec_rsc_0_1_WREADY,
      vec_rsc_0_1_WVALID => vec_rsc_0_1_WVALID,
      vec_rsc_0_1_WUSER => vec_rsc_0_1_WUSER,
      vec_rsc_0_1_WLAST => vec_rsc_0_1_WLAST,
      vec_rsc_0_1_WSTRB => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_WSTRB,
      vec_rsc_0_1_WDATA => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_WDATA,
      vec_rsc_0_1_AWREADY => vec_rsc_0_1_AWREADY,
      vec_rsc_0_1_AWVALID => vec_rsc_0_1_AWVALID,
      vec_rsc_0_1_AWUSER => vec_rsc_0_1_AWUSER,
      vec_rsc_0_1_AWREGION => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWREGION,
      vec_rsc_0_1_AWQOS => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWQOS,
      vec_rsc_0_1_AWPROT => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWPROT,
      vec_rsc_0_1_AWCACHE => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWCACHE,
      vec_rsc_0_1_AWLOCK => vec_rsc_0_1_AWLOCK,
      vec_rsc_0_1_AWBURST => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWBURST,
      vec_rsc_0_1_AWSIZE => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWSIZE,
      vec_rsc_0_1_AWLEN => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWLEN,
      vec_rsc_0_1_AWADDR => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWADDR,
      vec_rsc_0_1_AWID => vec_rsc_0_1_AWID,
      core_wen => core_wen,
      vec_rsc_0_1_i_oswt => reg_vec_rsc_0_1_i_oswt_cse,
      vec_rsc_0_1_i_wen_comp => vec_rsc_0_1_i_wen_comp,
      vec_rsc_0_1_i_oswt_1 => reg_vec_rsc_0_1_i_oswt_1_cse,
      vec_rsc_0_1_i_wen_comp_1 => vec_rsc_0_1_i_wen_comp_1,
      vec_rsc_0_1_i_s_raddr_core => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_i_s_raddr_core,
      vec_rsc_0_1_i_s_waddr_core => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_i_s_waddr_core,
      vec_rsc_0_1_i_s_din_mxwt => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_i_s_din_mxwt,
      vec_rsc_0_1_i_s_dout_core => inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_i_s_dout_core
    );
  vec_rsc_0_1_RRESP <= inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_RRESP;
  vec_rsc_0_1_RDATA <= inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_RDATA;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARREGION <= vec_rsc_0_1_ARREGION;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARQOS <= vec_rsc_0_1_ARQOS;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARPROT <= vec_rsc_0_1_ARPROT;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARCACHE <= vec_rsc_0_1_ARCACHE;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARBURST <= vec_rsc_0_1_ARBURST;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARSIZE <= vec_rsc_0_1_ARSIZE;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARLEN <= vec_rsc_0_1_ARLEN;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_ARADDR <= vec_rsc_0_1_ARADDR;
  vec_rsc_0_1_BRESP <= inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_BRESP;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_WSTRB <= vec_rsc_0_1_WSTRB;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_WDATA <= vec_rsc_0_1_WDATA;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWREGION <= vec_rsc_0_1_AWREGION;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWQOS <= vec_rsc_0_1_AWQOS;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWPROT <= vec_rsc_0_1_AWPROT;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWCACHE <= vec_rsc_0_1_AWCACHE;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWBURST <= vec_rsc_0_1_AWBURST;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWSIZE <= vec_rsc_0_1_AWSIZE;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWLEN <= vec_rsc_0_1_AWLEN;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_AWADDR <= vec_rsc_0_1_AWADDR;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_i_s_raddr_core <= reg_vec_rsc_0_0_i_s_raddr_core_cse;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_i_s_waddr_core <= reg_vec_rsc_0_0_i_s_waddr_core_cse;
  vec_rsc_0_1_i_s_din_mxwt <= inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_i_s_din_mxwt;
  inPlaceNTT_DIT_precomp_core_vec_rsc_0_1_i_inst_vec_rsc_0_1_i_s_dout_core <= reg_vec_rsc_0_0_i_s_dout_core_cse;

  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst : inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i
    PORT MAP(
      clk => clk,
      rst => rst,
      twiddle_rsc_0_0_s_tdone => twiddle_rsc_0_0_s_tdone,
      twiddle_rsc_0_0_tr_write_done => twiddle_rsc_0_0_tr_write_done,
      twiddle_rsc_0_0_RREADY => twiddle_rsc_0_0_RREADY,
      twiddle_rsc_0_0_RVALID => twiddle_rsc_0_0_RVALID,
      twiddle_rsc_0_0_RUSER => twiddle_rsc_0_0_RUSER,
      twiddle_rsc_0_0_RLAST => twiddle_rsc_0_0_RLAST,
      twiddle_rsc_0_0_RRESP => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_RRESP,
      twiddle_rsc_0_0_RDATA => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_RDATA,
      twiddle_rsc_0_0_RID => twiddle_rsc_0_0_RID,
      twiddle_rsc_0_0_ARREADY => twiddle_rsc_0_0_ARREADY,
      twiddle_rsc_0_0_ARVALID => twiddle_rsc_0_0_ARVALID,
      twiddle_rsc_0_0_ARUSER => twiddle_rsc_0_0_ARUSER,
      twiddle_rsc_0_0_ARREGION => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARREGION,
      twiddle_rsc_0_0_ARQOS => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARQOS,
      twiddle_rsc_0_0_ARPROT => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARPROT,
      twiddle_rsc_0_0_ARCACHE => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARCACHE,
      twiddle_rsc_0_0_ARLOCK => twiddle_rsc_0_0_ARLOCK,
      twiddle_rsc_0_0_ARBURST => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARBURST,
      twiddle_rsc_0_0_ARSIZE => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARSIZE,
      twiddle_rsc_0_0_ARLEN => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARLEN,
      twiddle_rsc_0_0_ARADDR => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARADDR,
      twiddle_rsc_0_0_ARID => twiddle_rsc_0_0_ARID,
      twiddle_rsc_0_0_BREADY => twiddle_rsc_0_0_BREADY,
      twiddle_rsc_0_0_BVALID => twiddle_rsc_0_0_BVALID,
      twiddle_rsc_0_0_BUSER => twiddle_rsc_0_0_BUSER,
      twiddle_rsc_0_0_BRESP => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_BRESP,
      twiddle_rsc_0_0_BID => twiddle_rsc_0_0_BID,
      twiddle_rsc_0_0_WREADY => twiddle_rsc_0_0_WREADY,
      twiddle_rsc_0_0_WVALID => twiddle_rsc_0_0_WVALID,
      twiddle_rsc_0_0_WUSER => twiddle_rsc_0_0_WUSER,
      twiddle_rsc_0_0_WLAST => twiddle_rsc_0_0_WLAST,
      twiddle_rsc_0_0_WSTRB => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_WSTRB,
      twiddle_rsc_0_0_WDATA => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_WDATA,
      twiddle_rsc_0_0_AWREADY => twiddle_rsc_0_0_AWREADY,
      twiddle_rsc_0_0_AWVALID => twiddle_rsc_0_0_AWVALID,
      twiddle_rsc_0_0_AWUSER => twiddle_rsc_0_0_AWUSER,
      twiddle_rsc_0_0_AWREGION => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWREGION,
      twiddle_rsc_0_0_AWQOS => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWQOS,
      twiddle_rsc_0_0_AWPROT => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWPROT,
      twiddle_rsc_0_0_AWCACHE => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWCACHE,
      twiddle_rsc_0_0_AWLOCK => twiddle_rsc_0_0_AWLOCK,
      twiddle_rsc_0_0_AWBURST => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWBURST,
      twiddle_rsc_0_0_AWSIZE => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWSIZE,
      twiddle_rsc_0_0_AWLEN => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWLEN,
      twiddle_rsc_0_0_AWADDR => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWADDR,
      twiddle_rsc_0_0_AWID => twiddle_rsc_0_0_AWID,
      core_wen => core_wen,
      twiddle_rsc_0_0_i_oswt => reg_twiddle_rsc_0_0_i_oswt_cse,
      twiddle_rsc_0_0_i_wen_comp => twiddle_rsc_0_0_i_wen_comp,
      twiddle_rsc_0_0_i_s_raddr_core => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_i_s_raddr_core,
      twiddle_rsc_0_0_i_s_din_mxwt => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_i_s_din_mxwt
    );
  twiddle_rsc_0_0_RRESP <= inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_RRESP;
  twiddle_rsc_0_0_RDATA <= inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_RDATA;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARREGION <=
      twiddle_rsc_0_0_ARREGION;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARQOS <= twiddle_rsc_0_0_ARQOS;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARPROT <= twiddle_rsc_0_0_ARPROT;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARCACHE <= twiddle_rsc_0_0_ARCACHE;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARBURST <= twiddle_rsc_0_0_ARBURST;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARSIZE <= twiddle_rsc_0_0_ARSIZE;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARLEN <= twiddle_rsc_0_0_ARLEN;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_ARADDR <= twiddle_rsc_0_0_ARADDR;
  twiddle_rsc_0_0_BRESP <= inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_BRESP;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_WSTRB <= twiddle_rsc_0_0_WSTRB;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_WDATA <= twiddle_rsc_0_0_WDATA;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWREGION <=
      twiddle_rsc_0_0_AWREGION;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWQOS <= twiddle_rsc_0_0_AWQOS;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWPROT <= twiddle_rsc_0_0_AWPROT;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWCACHE <= twiddle_rsc_0_0_AWCACHE;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWBURST <= twiddle_rsc_0_0_AWBURST;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWSIZE <= twiddle_rsc_0_0_AWSIZE;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWLEN <= twiddle_rsc_0_0_AWLEN;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_AWADDR <= twiddle_rsc_0_0_AWADDR;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_i_s_raddr_core
      <= twiddle_rsc_0_0_i_s_raddr_core;
  twiddle_rsc_0_0_i_s_din_mxwt <= inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_0_i_inst_twiddle_rsc_0_0_i_s_din_mxwt;

  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst : inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i
    PORT MAP(
      clk => clk,
      rst => rst,
      twiddle_rsc_0_1_s_tdone => twiddle_rsc_0_1_s_tdone,
      twiddle_rsc_0_1_tr_write_done => twiddle_rsc_0_1_tr_write_done,
      twiddle_rsc_0_1_RREADY => twiddle_rsc_0_1_RREADY,
      twiddle_rsc_0_1_RVALID => twiddle_rsc_0_1_RVALID,
      twiddle_rsc_0_1_RUSER => twiddle_rsc_0_1_RUSER,
      twiddle_rsc_0_1_RLAST => twiddle_rsc_0_1_RLAST,
      twiddle_rsc_0_1_RRESP => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_RRESP,
      twiddle_rsc_0_1_RDATA => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_RDATA,
      twiddle_rsc_0_1_RID => twiddle_rsc_0_1_RID,
      twiddle_rsc_0_1_ARREADY => twiddle_rsc_0_1_ARREADY,
      twiddle_rsc_0_1_ARVALID => twiddle_rsc_0_1_ARVALID,
      twiddle_rsc_0_1_ARUSER => twiddle_rsc_0_1_ARUSER,
      twiddle_rsc_0_1_ARREGION => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARREGION,
      twiddle_rsc_0_1_ARQOS => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARQOS,
      twiddle_rsc_0_1_ARPROT => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARPROT,
      twiddle_rsc_0_1_ARCACHE => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARCACHE,
      twiddle_rsc_0_1_ARLOCK => twiddle_rsc_0_1_ARLOCK,
      twiddle_rsc_0_1_ARBURST => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARBURST,
      twiddle_rsc_0_1_ARSIZE => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARSIZE,
      twiddle_rsc_0_1_ARLEN => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARLEN,
      twiddle_rsc_0_1_ARADDR => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARADDR,
      twiddle_rsc_0_1_ARID => twiddle_rsc_0_1_ARID,
      twiddle_rsc_0_1_BREADY => twiddle_rsc_0_1_BREADY,
      twiddle_rsc_0_1_BVALID => twiddle_rsc_0_1_BVALID,
      twiddle_rsc_0_1_BUSER => twiddle_rsc_0_1_BUSER,
      twiddle_rsc_0_1_BRESP => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_BRESP,
      twiddle_rsc_0_1_BID => twiddle_rsc_0_1_BID,
      twiddle_rsc_0_1_WREADY => twiddle_rsc_0_1_WREADY,
      twiddle_rsc_0_1_WVALID => twiddle_rsc_0_1_WVALID,
      twiddle_rsc_0_1_WUSER => twiddle_rsc_0_1_WUSER,
      twiddle_rsc_0_1_WLAST => twiddle_rsc_0_1_WLAST,
      twiddle_rsc_0_1_WSTRB => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_WSTRB,
      twiddle_rsc_0_1_WDATA => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_WDATA,
      twiddle_rsc_0_1_AWREADY => twiddle_rsc_0_1_AWREADY,
      twiddle_rsc_0_1_AWVALID => twiddle_rsc_0_1_AWVALID,
      twiddle_rsc_0_1_AWUSER => twiddle_rsc_0_1_AWUSER,
      twiddle_rsc_0_1_AWREGION => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWREGION,
      twiddle_rsc_0_1_AWQOS => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWQOS,
      twiddle_rsc_0_1_AWPROT => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWPROT,
      twiddle_rsc_0_1_AWCACHE => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWCACHE,
      twiddle_rsc_0_1_AWLOCK => twiddle_rsc_0_1_AWLOCK,
      twiddle_rsc_0_1_AWBURST => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWBURST,
      twiddle_rsc_0_1_AWSIZE => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWSIZE,
      twiddle_rsc_0_1_AWLEN => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWLEN,
      twiddle_rsc_0_1_AWADDR => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWADDR,
      twiddle_rsc_0_1_AWID => twiddle_rsc_0_1_AWID,
      core_wen => core_wen,
      twiddle_rsc_0_1_i_oswt => reg_twiddle_rsc_0_1_i_oswt_cse,
      twiddle_rsc_0_1_i_wen_comp => twiddle_rsc_0_1_i_wen_comp,
      twiddle_rsc_0_1_i_s_raddr_core => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_i_s_raddr_core,
      twiddle_rsc_0_1_i_s_din_mxwt => inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_i_s_din_mxwt
    );
  twiddle_rsc_0_1_RRESP <= inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_RRESP;
  twiddle_rsc_0_1_RDATA <= inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_RDATA;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARREGION <=
      twiddle_rsc_0_1_ARREGION;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARQOS <= twiddle_rsc_0_1_ARQOS;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARPROT <= twiddle_rsc_0_1_ARPROT;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARCACHE <= twiddle_rsc_0_1_ARCACHE;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARBURST <= twiddle_rsc_0_1_ARBURST;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARSIZE <= twiddle_rsc_0_1_ARSIZE;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARLEN <= twiddle_rsc_0_1_ARLEN;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_ARADDR <= twiddle_rsc_0_1_ARADDR;
  twiddle_rsc_0_1_BRESP <= inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_BRESP;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_WSTRB <= twiddle_rsc_0_1_WSTRB;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_WDATA <= twiddle_rsc_0_1_WDATA;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWREGION <=
      twiddle_rsc_0_1_AWREGION;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWQOS <= twiddle_rsc_0_1_AWQOS;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWPROT <= twiddle_rsc_0_1_AWPROT;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWCACHE <= twiddle_rsc_0_1_AWCACHE;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWBURST <= twiddle_rsc_0_1_AWBURST;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWSIZE <= twiddle_rsc_0_1_AWSIZE;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWLEN <= twiddle_rsc_0_1_AWLEN;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_AWADDR <= twiddle_rsc_0_1_AWADDR;
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_i_s_raddr_core
      <= twiddle_rsc_0_1_i_s_raddr_core;
  twiddle_rsc_0_1_i_s_din_mxwt <= inPlaceNTT_DIT_precomp_core_twiddle_rsc_0_1_i_inst_twiddle_rsc_0_1_i_s_din_mxwt;

  inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_1_obj_inst : inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_1_obj
    PORT MAP(
      vec_rsc_triosy_0_1_lz => vec_rsc_triosy_0_1_lz,
      core_wten => core_wten,
      vec_rsc_triosy_0_1_obj_iswt0 => reg_vec_rsc_triosy_0_1_obj_iswt0_cse
    );
  inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_0_obj_inst : inPlaceNTT_DIT_precomp_core_vec_rsc_triosy_0_0_obj
    PORT MAP(
      vec_rsc_triosy_0_0_lz => vec_rsc_triosy_0_0_lz,
      core_wten => core_wten,
      vec_rsc_triosy_0_0_obj_iswt0 => reg_vec_rsc_triosy_0_1_obj_iswt0_cse
    );
  inPlaceNTT_DIT_precomp_core_p_rsc_triosy_obj_inst : inPlaceNTT_DIT_precomp_core_p_rsc_triosy_obj
    PORT MAP(
      p_rsc_triosy_lz => p_rsc_triosy_lz,
      core_wten => core_wten,
      p_rsc_triosy_obj_iswt0 => reg_vec_rsc_triosy_0_1_obj_iswt0_cse
    );
  inPlaceNTT_DIT_precomp_core_r_rsc_triosy_obj_inst : inPlaceNTT_DIT_precomp_core_r_rsc_triosy_obj
    PORT MAP(
      r_rsc_triosy_lz => r_rsc_triosy_lz,
      core_wten => core_wten,
      r_rsc_triosy_obj_iswt0 => reg_vec_rsc_triosy_0_1_obj_iswt0_cse
    );
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_1_obj_inst : inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_1_obj
    PORT MAP(
      twiddle_rsc_triosy_0_1_lz => twiddle_rsc_triosy_0_1_lz,
      core_wten => core_wten,
      twiddle_rsc_triosy_0_1_obj_iswt0 => reg_vec_rsc_triosy_0_1_obj_iswt0_cse
    );
  inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_0_obj_inst : inPlaceNTT_DIT_precomp_core_twiddle_rsc_triosy_0_0_obj
    PORT MAP(
      twiddle_rsc_triosy_0_0_lz => twiddle_rsc_triosy_0_0_lz,
      core_wten => core_wten,
      twiddle_rsc_triosy_0_0_obj_iswt0 => reg_vec_rsc_triosy_0_1_obj_iswt0_cse
    );
  inPlaceNTT_DIT_precomp_core_staller_inst : inPlaceNTT_DIT_precomp_core_staller
    PORT MAP(
      clk => clk,
      rst => rst,
      core_wen => core_wen,
      core_wten => core_wten,
      vec_rsc_0_0_i_wen_comp => vec_rsc_0_0_i_wen_comp,
      vec_rsc_0_0_i_wen_comp_1 => vec_rsc_0_0_i_wen_comp_1,
      vec_rsc_0_1_i_wen_comp => vec_rsc_0_1_i_wen_comp,
      vec_rsc_0_1_i_wen_comp_1 => vec_rsc_0_1_i_wen_comp_1,
      twiddle_rsc_0_0_i_wen_comp => twiddle_rsc_0_0_i_wen_comp,
      twiddle_rsc_0_1_i_wen_comp => twiddle_rsc_0_1_i_wen_comp
    );
  inPlaceNTT_DIT_precomp_core_core_fsm_inst : inPlaceNTT_DIT_precomp_core_core_fsm
    PORT MAP(
      clk => clk,
      rst => rst,
      core_wen => core_wen,
      fsm_output => inPlaceNTT_DIT_precomp_core_core_fsm_inst_fsm_output,
      COMP_LOOP_C_38_tr0 => inPlaceNTT_DIT_precomp_core_core_fsm_inst_COMP_LOOP_C_38_tr0,
      COMP_LOOP_C_77_tr0 => inPlaceNTT_DIT_precomp_core_core_fsm_inst_COMP_LOOP_C_77_tr0,
      VEC_LOOP_C_0_tr0 => inPlaceNTT_DIT_precomp_core_core_fsm_inst_VEC_LOOP_C_0_tr0,
      STAGE_LOOP_C_1_tr0 => inPlaceNTT_DIT_precomp_core_core_fsm_inst_STAGE_LOOP_C_1_tr0
    );
  fsm_output <= inPlaceNTT_DIT_precomp_core_core_fsm_inst_fsm_output;
  inPlaceNTT_DIT_precomp_core_core_fsm_inst_COMP_LOOP_C_38_tr0 <= NOT COMP_LOOP_2_slc_COMP_LOOP_acc_9_itm;
  inPlaceNTT_DIT_precomp_core_core_fsm_inst_COMP_LOOP_C_77_tr0 <= NOT COMP_LOOP_1_slc_COMP_LOOP_acc_9_itm;
  inPlaceNTT_DIT_precomp_core_core_fsm_inst_VEC_LOOP_C_0_tr0 <= z_out_3(10);
  inPlaceNTT_DIT_precomp_core_core_fsm_inst_STAGE_LOOP_C_1_tr0 <= NOT (z_out_2(2));

  and_98_cse <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("11"));
  or_118_cse <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("00"));
  or_116_cse <= CONV_SL_1_1(fsm_output(5 DOWNTO 4)/=STD_LOGIC_VECTOR'("00"));
  COMP_LOOP_and_cse <= core_wen AND (NOT(or_dcpl_10 OR or_dcpl_8));
  COMP_LOOP_and_5_cse <= core_wen AND (NOT(or_116_cse OR CONV_SL_1_1(fsm_output(3
      DOWNTO 2)/=STD_LOGIC_VECTOR'("11")) OR or_dcpl_12));
  COMP_LOOP_and_7_cse <= core_wen AND (NOT((NOT nor_tmp_3) OR CONV_SL_1_1(fsm_output(3
      DOWNTO 2)/=STD_LOGIC_VECTOR'("01")) OR or_dcpl_8));
  COMP_LOOP_1_modulo_qelse_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(COMP_LOOP_1_modulo_result_rem_cmp_z(63
      DOWNTO 0)) + UNSIGNED(p_sva), 64));
  vec_rsc_0_0_i_s_dout_core_1 <= MUX_v_64_2_2((COMP_LOOP_1_modulo_result_rem_cmp_z(63
      DOWNTO 0)), STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(COMP_LOOP_1_modulo_qelse_acc_nl),
      64)), COMP_LOOP_1_modulo_result_rem_cmp_z(63));
  COMP_LOOP_2_acc_5_psp_mx0w2 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(tmp_2_lpi_4_dfm)
      + SIGNED(vec_rsc_0_0_i_s_dout_core_1), 64));
  COMP_LOOP_1_acc_10_tmp <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(VEC_LOOP_j_sva_9_0)
      + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(COMP_LOOP_k_9_1_sva_7_0 & '0'), 9),
      10) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STAGE_LOOP_lshift_psp_sva(9 DOWNTO
      1)), 9), 10), 10));
  COMP_LOOP_1_acc_8_itm_mx0w0 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(tmp_2_lpi_4_dfm)
      - SIGNED(vec_rsc_0_0_i_s_dout_core_1), 64));
  or_tmp <= CONV_SL_1_1(fsm_output(5 DOWNTO 1)/=STD_LOGIC_VECTOR'("00000"));
  nor_tmp_3 <= CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("11"));
  and_dcpl_6 <= NOT(CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("00")));
  and_dcpl_7 <= and_dcpl_6 AND (NOT (fsm_output(6)));
  and_dcpl_8 <= NOT(CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("00")));
  and_dcpl_9 <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 4)/=STD_LOGIC_VECTOR'("00")));
  and_dcpl_10 <= and_dcpl_9 AND and_dcpl_8;
  and_dcpl_12 <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_14 <= CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_15 <= and_dcpl_14 AND and_dcpl_8;
  and_dcpl_18 <= NOT((fsm_output(4)) OR (fsm_output(2)) OR (fsm_output(6)));
  not_tmp_34 <= NOT((fsm_output(3)) AND (fsm_output(5)));
  and_dcpl_21 <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_22 <= and_dcpl_21 AND (NOT (fsm_output(6)));
  and_dcpl_23 <= and_dcpl_10 AND and_dcpl_22;
  and_dcpl_25 <= (fsm_output(0)) AND (fsm_output(1)) AND (NOT (fsm_output(6)));
  and_dcpl_26 <= and_dcpl_10 AND and_dcpl_25;
  and_dcpl_27 <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_28 <= CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_29 <= and_dcpl_28 AND and_dcpl_27;
  and_dcpl_31 <= and_dcpl_12 AND (NOT (fsm_output(6)));
  and_dcpl_35 <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_38 <= and_dcpl_21 AND (fsm_output(6));
  and_dcpl_40 <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)=STD_LOGIC_VECTOR'("11"));
  and_dcpl_50 <= and_dcpl_9 AND and_dcpl_35;
  and_dcpl_51 <= and_dcpl_50 AND and_dcpl_7;
  or_dcpl_4 <= NOT(CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("11")));
  or_2_nl <= CONV_SL_1_1(fsm_output(5 DOWNTO 4)/=STD_LOGIC_VECTOR'("10"));
  or_62_nl <= CONV_SL_1_1(fsm_output(5 DOWNTO 4)/=STD_LOGIC_VECTOR'("01"));
  mux_tmp_53 <= MUX_s_1_2_2(or_2_nl, or_62_nl, fsm_output(3));
  and_dcpl_67 <= and_dcpl_29 AND and_dcpl_22;
  or_tmp_59 <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("01"));
  mux_tmp_57 <= MUX_s_1_2_2((NOT (fsm_output(4))), (fsm_output(4)), fsm_output(3));
  or_tmp_60 <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("10"));
  mux_tmp_68 <= MUX_s_1_2_2(nor_tmp_3, (fsm_output(5)), fsm_output(3));
  mux_tmp_69 <= MUX_s_1_2_2((NOT (fsm_output(4))), (fsm_output(4)), fsm_output(5));
  or_dcpl_8 <= (fsm_output(0)) OR (NOT (fsm_output(1))) OR (fsm_output(6));
  or_dcpl_10 <= or_116_cse OR CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("00"));
  not_tmp_58 <= NOT(and_98_cse OR CONV_SL_1_1(fsm_output(5 DOWNTO 2)/=STD_LOGIC_VECTOR'("0000")));
  mux_tmp_77 <= MUX_s_1_2_2(mux_tmp_69, nor_tmp_3, fsm_output(3));
  or_dcpl_12 <= or_dcpl_4 OR (fsm_output(6));
  and_dcpl_80 <= NOT((fsm_output(4)) OR (fsm_output(1)) OR (fsm_output(6)));
  STAGE_LOOP_i_3_0_sva_mx0c1 <= and_dcpl_15 AND and_dcpl_12 AND (fsm_output(6));
  VEC_LOOP_j_sva_9_0_mx0c0 <= and_dcpl_10 AND and_dcpl_31;
  nor_26_nl <= NOT((NOT (VEC_LOOP_j_sva_9_0(0))) OR (NOT (fsm_output(2))) OR (fsm_output(3))
      OR (fsm_output(5)));
  nor_27_nl <= NOT((NOT (COMP_LOOP_acc_1_cse_sva(0))) OR (fsm_output(2)) OR not_tmp_34);
  mux_83_nl <= MUX_s_1_2_2(nor_26_nl, nor_27_nl, fsm_output(0));
  tmp_2_lpi_4_dfm_mx0c1 <= mux_83_nl AND and_dcpl_80;
  and_dcpl_111 <= NOT(CONV_SL_1_1(fsm_output/=STD_LOGIC_VECTOR'("0000010")));
  and_dcpl_122 <= CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("01")) AND
      and_dcpl_8 AND (NOT (fsm_output(1))) AND (fsm_output(0)) AND (fsm_output(6));
  and_dcpl_133 <= CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("01")) AND
      and_dcpl_8 AND (NOT (fsm_output(1))) AND (NOT (fsm_output(0))) AND (fsm_output(6));
  and_dcpl_135 <= (fsm_output(1)) AND (NOT (fsm_output(0))) AND (NOT (fsm_output(6)));
  and_dcpl_138 <= and_dcpl_9 AND CONV_SL_1_1(fsm_output(3 DOWNTO 2)=STD_LOGIC_VECTOR'("00"));
  and_dcpl_139 <= and_dcpl_138 AND and_dcpl_135;
  and_dcpl_142 <= and_dcpl_138 AND (fsm_output(1)) AND (fsm_output(0)) AND (NOT (fsm_output(6)));
  and_dcpl_146 <= CONV_SL_1_1(fsm_output(5 DOWNTO 2)=STD_LOGIC_VECTOR'("1010")) AND
      and_dcpl_135;
  and_dcpl_151 <= and_dcpl_9 AND (NOT (fsm_output(3))) AND (fsm_output(2)) AND (NOT
      (fsm_output(1))) AND (NOT (fsm_output(0))) AND (NOT (fsm_output(6)));
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( (core_wen AND mux_34_nl) = '1' ) THEN
        p_sva <= p_rsci_idat;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( (core_wen AND ((and_dcpl_10 AND and_dcpl_7) OR STAGE_LOOP_i_3_0_sva_mx0c1))
          = '1' ) THEN
        STAGE_LOOP_i_3_0_sva <= MUX_v_4_2_2(STD_LOGIC_VECTOR'( "0001"), z_out_1,
            STAGE_LOOP_i_3_0_sva_mx0c1);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( core_wen = '1' ) THEN
        reg_vec_rsc_0_0_i_s_raddr_core_cse <= MUX1HOT_v_9_4_2((COMP_LOOP_1_acc_10_tmp(9
            DOWNTO 1)), COMP_LOOP_acc_psp_sva, (COMP_LOOP_acc_1_cse_sva(9 DOWNTO
            1)), (COMP_LOOP_2_acc_10_idiv_sva(9 DOWNTO 1)), STD_LOGIC_VECTOR'( and_dcpl_23
            & and_dcpl_26 & and_30_nl & and_32_nl));
        reg_vec_rsc_0_0_i_s_waddr_core_cse <= MUX1HOT_v_9_4_2(COMP_LOOP_acc_psp_sva,
            (COMP_LOOP_1_slc_31_1_idiv_sva(9 DOWNTO 1)), (COMP_LOOP_acc_1_cse_sva(9
            DOWNTO 1)), (COMP_LOOP_2_slc_31_1_idiv_sva(9 DOWNTO 1)), STD_LOGIC_VECTOR'(
            and_34_nl & and_37_nl & and_39_nl & and_42_nl));
        reg_vec_rsc_0_0_i_s_dout_core_cse <= vec_rsc_0_0_i_s_dout_core_1;
        twiddle_rsc_0_0_i_s_raddr_core <= MUX_v_9_2_2((z_out_4(8 DOWNTO 0)), (z_out_4(9
            DOWNTO 1)), and_dcpl_51);
        twiddle_rsc_0_1_i_s_raddr_core <= z_out_4(9 DOWNTO 1);
        COMP_LOOP_1_modulo_result_rem_cmp_a_63_0 <= MUX1HOT_v_64_8_2(z_out_4, COMP_LOOP_1_mul_psp,
            COMP_LOOP_2_acc_5_psp_mx0w2, COMP_LOOP_1_acc_5_psp, COMP_LOOP_1_acc_8_itm,
            COMP_LOOP_2_mul_psp, COMP_LOOP_2_acc_5_psp, COMP_LOOP_2_acc_8_itm, STD_LOGIC_VECTOR'(
            COMP_LOOP_or_2_nl & and_59_nl & and_62_nl & and_65_nl & nor_55_nl & and_69_nl
            & (NOT mux_63_nl) & and_71_nl));
        COMP_LOOP_1_modulo_result_rem_cmp_b_63_0 <= p_sva;
        COMP_LOOP_1_tmp_acc_cse_sva <= z_out_1;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_vec_rsc_0_0_i_oswt_cse <= '0';
        reg_vec_rsc_0_0_i_oswt_1_cse <= '0';
        reg_vec_rsc_0_1_i_oswt_cse <= '0';
        reg_vec_rsc_0_1_i_oswt_1_cse <= '0';
        reg_twiddle_rsc_0_0_i_oswt_cse <= '0';
        reg_twiddle_rsc_0_1_i_oswt_cse <= '0';
        reg_vec_rsc_triosy_0_1_obj_iswt0_cse <= '0';
        COMP_LOOP_2_tmp_lshift_itm <= STD_LOGIC_VECTOR'( "0000000000");
      ELSIF ( core_wen = '1' ) THEN
        reg_vec_rsc_0_0_i_oswt_cse <= mux_38_nl AND and_dcpl_18;
        reg_vec_rsc_0_0_i_oswt_1_cse <= mux_41_nl AND (fsm_output(1));
        reg_vec_rsc_0_1_i_oswt_cse <= mux_44_nl AND and_dcpl_18;
        reg_vec_rsc_0_1_i_oswt_1_cse <= mux_47_nl AND (fsm_output(1));
        reg_twiddle_rsc_0_0_i_oswt_cse <= NOT(mux_49_nl OR (fsm_output(4)) OR (fsm_output(5))
            OR (fsm_output(3)) OR (fsm_output(0)) OR (fsm_output(6)));
        reg_twiddle_rsc_0_1_i_oswt_cse <= and_dcpl_50 AND and_dcpl_6 AND (NOT (fsm_output(6)))
            AND (z_out_4(0));
        reg_vec_rsc_triosy_0_1_obj_iswt0_cse <= and_dcpl_15 AND and_dcpl_12 AND (fsm_output(6))
            AND (NOT (z_out_2(2)));
        COMP_LOOP_2_tmp_lshift_itm <= MUX1HOT_v_10_3_2(COMP_LOOP_1_acc_10_tmp, z_out,
            (z_out_4(9 DOWNTO 0)), STD_LOGIC_VECTOR'( and_dcpl_23 & and_dcpl_26 &
            and_dcpl_51));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        VEC_LOOP_j_sva_9_0 <= STD_LOGIC_VECTOR'( "0000000000");
      ELSIF ( (core_wen AND (VEC_LOOP_j_sva_9_0_mx0c0 OR (and_dcpl_15 AND and_dcpl_6
          AND (fsm_output(6))))) = '1' ) THEN
        VEC_LOOP_j_sva_9_0 <= MUX_v_10_2_2(STD_LOGIC_VECTOR'("0000000000"), (z_out_3(9
            DOWNTO 0)), VEC_LOOP_j_not_1_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( (core_wen AND mux_67_nl) = '1' ) THEN
        STAGE_LOOP_lshift_psp_sva <= z_out;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( (mux_94_nl AND core_wen) = '1' ) THEN
        COMP_LOOP_k_9_1_sva_7_0 <= MUX_v_8_2_2(STD_LOGIC_VECTOR'("00000000"), reg_COMP_LOOP_k_9_1_ftd,
            or_115_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( COMP_LOOP_and_cse = '1' ) THEN
        COMP_LOOP_acc_psp_sva <= z_out_3(8 DOWNTO 0);
        COMP_LOOP_2_slc_COMP_LOOP_acc_9_itm <= COMP_LOOP_2_acc_nl(9);
        reg_COMP_LOOP_k_9_1_ftd <= z_out_2(7 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        COMP_LOOP_1_slc_31_1_idiv_sva <= STD_LOGIC_VECTOR'( "0000000000");
      ELSIF ( COMP_LOOP_and_cse = '1' ) THEN
        COMP_LOOP_1_slc_31_1_idiv_sva <= COMP_LOOP_1_acc_11_nl(10 DOWNTO 1);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        COMP_LOOP_acc_1_cse_sva <= STD_LOGIC_VECTOR'( "0000000000");
      ELSIF ( (core_wen AND mux_75_nl) = '1' ) THEN
        COMP_LOOP_acc_1_cse_sva <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(VEC_LOOP_j_sva_9_0)
            + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(COMP_LOOP_k_9_1_sva_7_0 & '1'),
            9), 10), 10));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        COMP_LOOP_2_acc_10_idiv_sva <= STD_LOGIC_VECTOR'( "0000000000");
      ELSIF ( (core_wen AND (mux_79_nl OR (fsm_output(6)))) = '1' ) THEN
        COMP_LOOP_2_acc_10_idiv_sva <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(VEC_LOOP_j_sva_9_0)
            + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(COMP_LOOP_k_9_1_sva_7_0 & '1'),
            9), 10) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STAGE_LOOP_lshift_psp_sva(9
            DOWNTO 1)), 9), 10), 10));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        COMP_LOOP_2_slc_31_1_idiv_sva <= STD_LOGIC_VECTOR'( "0000000000");
      ELSIF ( (core_wen AND mux_80_nl) = '1' ) THEN
        COMP_LOOP_2_slc_31_1_idiv_sva <= COMP_LOOP_2_acc_11_nl(10 DOWNTO 1);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( (core_wen AND mux_81_nl) = '1' ) THEN
        COMP_LOOP_1_slc_COMP_LOOP_acc_9_itm <= COMP_LOOP_1_acc_nl(9);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( (core_wen AND (NOT(or_dcpl_10 OR or_dcpl_12))) = '1' ) THEN
        COMP_LOOP_1_mul_psp <= z_out_4;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( (core_wen AND ((mux_82_nl AND and_dcpl_80) OR tmp_2_lpi_4_dfm_mx0c1))
          = '1' ) THEN
        tmp_2_lpi_4_dfm <= MUX_v_64_2_2(vec_rsc_0_0_i_s_din_mxwt, vec_rsc_0_1_i_s_din_mxwt,
            tmp_2_lpi_4_dfm_mx0c1);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( (core_wen AND (mux_91_nl OR (fsm_output(6)))) = '1' ) THEN
        COMP_LOOP_2_mul_psp <= MUX1HOT_v_64_3_2(twiddle_rsc_0_0_i_s_din_mxwt, twiddle_rsc_0_1_i_s_din_mxwt,
            z_out_4, STD_LOGIC_VECTOR'( and_85_nl & and_88_nl & and_dcpl_67));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( COMP_LOOP_and_5_cse = '1' ) THEN
        COMP_LOOP_1_acc_8_itm <= COMP_LOOP_1_acc_8_itm_mx0w0;
        COMP_LOOP_1_acc_5_psp <= COMP_LOOP_2_acc_5_psp_mx0w2;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF ( COMP_LOOP_and_7_cse = '1' ) THEN
        COMP_LOOP_2_acc_8_itm <= COMP_LOOP_1_acc_8_itm_mx0w0;
        COMP_LOOP_2_acc_5_psp <= COMP_LOOP_2_acc_5_psp_mx0w2;
      END IF;
    END IF;
  END PROCESS;
  nor_43_nl <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 0)/=STD_LOGIC_VECTOR'("000000")));
  or_106_nl <= CONV_SL_1_1(fsm_output(3 DOWNTO 1)/=STD_LOGIC_VECTOR'("000"));
  mux_33_nl <= MUX_s_1_2_2((fsm_output(5)), or_116_cse, or_106_nl);
  mux_34_nl <= MUX_s_1_2_2(nor_43_nl, mux_33_nl, fsm_output(6));
  nor_39_nl <= NOT((NOT COMP_LOOP_2_slc_COMP_LOOP_acc_9_itm) OR (COMP_LOOP_acc_1_cse_sva(0))
      OR not_tmp_34);
  nor_40_nl <= NOT((COMP_LOOP_2_acc_10_idiv_sva(0)) OR not_tmp_34);
  mux_37_nl <= MUX_s_1_2_2(nor_39_nl, nor_40_nl, fsm_output(0));
  nor_41_nl <= NOT((COMP_LOOP_1_acc_10_tmp(0)) OR (fsm_output(3)) OR (fsm_output(5)));
  nor_42_nl <= NOT((VEC_LOOP_j_sva_9_0(0)) OR (fsm_output(3)) OR (fsm_output(5)));
  mux_36_nl <= MUX_s_1_2_2(nor_41_nl, nor_42_nl, fsm_output(0));
  mux_38_nl <= MUX_s_1_2_2(mux_37_nl, mux_36_nl, fsm_output(1));
  or_43_nl <= (fsm_output(2)) OR (COMP_LOOP_acc_1_cse_sva(0)) OR (fsm_output(5));
  or_42_nl <= (NOT (fsm_output(2))) OR (COMP_LOOP_2_slc_31_1_idiv_sva(0)) OR (fsm_output(5));
  mux_40_nl <= MUX_s_1_2_2(or_43_nl, or_42_nl, fsm_output(3));
  nor_37_nl <= NOT((NOT (fsm_output(6))) OR (fsm_output(4)) OR mux_40_nl);
  or_39_nl <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("01")) OR (COMP_LOOP_1_slc_31_1_idiv_sva(0))
      OR (NOT (fsm_output(5)));
  or_37_nl <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("10")) OR (VEC_LOOP_j_sva_9_0(0))
      OR (fsm_output(5));
  mux_39_nl <= MUX_s_1_2_2(or_39_nl, or_37_nl, fsm_output(4));
  nor_38_nl <= NOT((fsm_output(6)) OR mux_39_nl);
  mux_41_nl <= MUX_s_1_2_2(nor_37_nl, nor_38_nl, fsm_output(0));
  and_30_nl <= and_dcpl_29 AND and_dcpl_7;
  and_32_nl <= and_dcpl_29 AND and_dcpl_31;
  and_34_nl <= and_dcpl_14 AND and_dcpl_27 AND and_dcpl_25;
  and_37_nl <= and_dcpl_28 AND and_dcpl_35 AND and_dcpl_25;
  and_39_nl <= and_dcpl_10 AND and_dcpl_38;
  and_42_nl <= and_dcpl_9 AND and_dcpl_40 AND and_dcpl_38;
  and_99_nl <= COMP_LOOP_2_slc_COMP_LOOP_acc_9_itm AND (COMP_LOOP_acc_1_cse_sva(0))
      AND (fsm_output(3)) AND (fsm_output(5));
  and_100_nl <= (COMP_LOOP_2_acc_10_idiv_sva(0)) AND (fsm_output(3)) AND (fsm_output(5));
  mux_43_nl <= MUX_s_1_2_2(and_99_nl, and_100_nl, fsm_output(0));
  nor_35_nl <= NOT((NOT (COMP_LOOP_1_acc_10_tmp(0))) OR (fsm_output(3)) OR (fsm_output(5)));
  nor_36_nl <= NOT((NOT (VEC_LOOP_j_sva_9_0(0))) OR (fsm_output(3)) OR (fsm_output(5)));
  mux_42_nl <= MUX_s_1_2_2(nor_35_nl, nor_36_nl, fsm_output(0));
  mux_44_nl <= MUX_s_1_2_2(mux_43_nl, mux_42_nl, fsm_output(1));
  or_53_nl <= (fsm_output(2)) OR (NOT (COMP_LOOP_acc_1_cse_sva(0))) OR (fsm_output(5));
  or_52_nl <= (NOT (fsm_output(2))) OR (NOT (COMP_LOOP_2_slc_31_1_idiv_sva(0))) OR
      (fsm_output(5));
  mux_46_nl <= MUX_s_1_2_2(or_53_nl, or_52_nl, fsm_output(3));
  nor_33_nl <= NOT((NOT (fsm_output(6))) OR (fsm_output(4)) OR mux_46_nl);
  or_49_nl <= (fsm_output(3)) OR (NOT((fsm_output(2)) AND (COMP_LOOP_1_slc_31_1_idiv_sva(0))
      AND (fsm_output(5))));
  or_48_nl <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("10")) OR (NOT
      (VEC_LOOP_j_sva_9_0(0))) OR (fsm_output(5));
  mux_45_nl <= MUX_s_1_2_2(or_49_nl, or_48_nl, fsm_output(4));
  nor_34_nl <= NOT((fsm_output(6)) OR mux_45_nl);
  mux_47_nl <= MUX_s_1_2_2(nor_33_nl, nor_34_nl, fsm_output(0));
  mux_48_nl <= MUX_s_1_2_2((NOT (fsm_output(2))), (fsm_output(2)), fsm_output(1));
  or_114_nl <= CONV_SL_1_1(fsm_output(2 DOWNTO 1)/=STD_LOGIC_VECTOR'("01"));
  mux_49_nl <= MUX_s_1_2_2(mux_48_nl, or_114_nl, z_out_4(0));
  COMP_LOOP_or_2_nl <= and_dcpl_26 OR and_dcpl_67;
  mux_50_nl <= MUX_s_1_2_2((NOT (fsm_output(3))), (fsm_output(3)), fsm_output(2));
  mux_51_nl <= MUX_s_1_2_2(and_dcpl_8, mux_50_nl, and_98_cse);
  and_59_nl <= (NOT mux_51_nl) AND and_dcpl_9 AND (NOT (fsm_output(6)));
  nor_31_nl <= NOT((fsm_output(3)) OR (NOT nor_tmp_3));
  nor_32_nl <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 3)/=STD_LOGIC_VECTOR'("001")));
  mux_52_nl <= MUX_s_1_2_2(nor_31_nl, nor_32_nl, fsm_output(0));
  and_62_nl <= mux_52_nl AND (fsm_output(2)) AND (fsm_output(1)) AND (NOT (fsm_output(6)));
  and_65_nl <= (NOT((NOT(or_dcpl_4 AND (NOT (fsm_output(2))))) AND (fsm_output(3))))
      AND and_dcpl_14 AND (NOT (fsm_output(6)));
  or_64_nl <= CONV_SL_1_1(fsm_output(5 DOWNTO 3)/=STD_LOGIC_VECTOR'("100"));
  mux_55_nl <= MUX_s_1_2_2(or_64_nl, mux_tmp_53, fsm_output(2));
  or_61_nl <= CONV_SL_1_1(fsm_output(5 DOWNTO 3)/=STD_LOGIC_VECTOR'("011"));
  mux_54_nl <= MUX_s_1_2_2(mux_tmp_53, or_61_nl, fsm_output(2));
  mux_56_nl <= MUX_s_1_2_2(mux_55_nl, mux_54_nl, and_98_cse);
  nor_55_nl <= NOT(mux_56_nl OR (fsm_output(6)));
  mux_61_nl <= MUX_s_1_2_2(or_tmp_60, mux_tmp_57, fsm_output(2));
  mux_59_nl <= MUX_s_1_2_2(or_tmp_60, or_tmp_59, fsm_output(2));
  mux_58_nl <= MUX_s_1_2_2(mux_tmp_57, or_tmp_59, fsm_output(2));
  mux_60_nl <= MUX_s_1_2_2(mux_59_nl, mux_58_nl, fsm_output(0));
  mux_62_nl <= MUX_s_1_2_2(mux_61_nl, mux_60_nl, fsm_output(1));
  and_69_nl <= (NOT mux_62_nl) AND CONV_SL_1_1(fsm_output(6 DOWNTO 5)=STD_LOGIC_VECTOR'("01"));
  nand_nl <= NOT(((CONV_SL_1_1(fsm_output(2 DOWNTO 0)=STD_LOGIC_VECTOR'("111")))
      OR (fsm_output(3))) AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("11")));
  mux_63_nl <= MUX_s_1_2_2(nand_nl, or_tmp, fsm_output(6));
  mux_64_nl <= MUX_s_1_2_2(and_dcpl_8, and_dcpl_40, fsm_output(1));
  and_71_nl <= (NOT mux_64_nl) AND and_dcpl_9 AND (fsm_output(6));
  VEC_LOOP_j_not_1_nl <= NOT VEC_LOOP_j_sva_9_0_mx0c0;
  or_72_nl <= CONV_SL_1_1(fsm_output(3 DOWNTO 0)/=STD_LOGIC_VECTOR'("0000"));
  mux_66_nl <= MUX_s_1_2_2((fsm_output(5)), or_116_cse, or_72_nl);
  mux_67_nl <= MUX_s_1_2_2((NOT or_tmp), mux_66_nl, fsm_output(6));
  or_111_nl <= (NOT (fsm_output(0))) OR (fsm_output(4));
  or_112_nl <= (fsm_output(0)) OR (NOT (fsm_output(4)));
  mux_28_nl <= MUX_s_1_2_2(or_111_nl, or_112_nl, fsm_output(6));
  or_115_nl <= mux_28_nl OR (fsm_output(5)) OR (NOT and_dcpl_8) OR (fsm_output(1));
  nand_7_nl <= NOT((((fsm_output(0)) AND (fsm_output(3))) OR (fsm_output(4))) AND
      (fsm_output(5)));
  mux_nl <= MUX_s_1_2_2((fsm_output(5)), (NOT (fsm_output(5))), or_118_cse);
  mux_92_nl <= MUX_s_1_2_2(nand_7_nl, mux_nl, fsm_output(1));
  nand_8_nl <= NOT(or_118_cse AND (fsm_output(5)));
  mux_93_nl <= MUX_s_1_2_2(mux_92_nl, nand_8_nl, fsm_output(2));
  mux_94_nl <= MUX_s_1_2_2(mux_93_nl, or_116_cse, fsm_output(6));
  COMP_LOOP_1_acc_11_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(VEC_LOOP_j_sva_9_0),
      10), 11) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(COMP_LOOP_k_9_1_sva_7_0 & '0'),
      9), 11) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STAGE_LOOP_lshift_psp_sva),
      10), 11), 11));
  COMP_LOOP_2_acc_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED('1' & (NOT (STAGE_LOOP_lshift_psp_sva(9
      DOWNTO 1)))) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(COMP_LOOP_k_9_1_sva_7_0 &
      '1'), 9), 10) + SIGNED'( "0000000001"), 10));
  mux_75_nl <= MUX_s_1_2_2(not_tmp_58, or_tmp, fsm_output(6));
  mux_78_nl <= MUX_s_1_2_2(mux_tmp_77, mux_tmp_68, fsm_output(2));
  mux_70_nl <= MUX_s_1_2_2(mux_tmp_69, (fsm_output(5)), fsm_output(3));
  or_109_nl <= (fsm_output(0)) OR (fsm_output(2));
  mux_76_nl <= MUX_s_1_2_2(mux_70_nl, mux_tmp_68, or_109_nl);
  mux_79_nl <= MUX_s_1_2_2(mux_78_nl, mux_76_nl, fsm_output(1));
  COMP_LOOP_2_acc_11_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(VEC_LOOP_j_sva_9_0),
      10), 11) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(COMP_LOOP_k_9_1_sva_7_0 & '1'),
      9), 11) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STAGE_LOOP_lshift_psp_sva),
      10), 11), 11));
  or_9_nl <= (CONV_SL_1_1(fsm_output(3 DOWNTO 1)=STD_LOGIC_VECTOR'("111"))) OR CONV_SL_1_1(fsm_output(5
      DOWNTO 4)/=STD_LOGIC_VECTOR'("00"));
  mux_80_nl <= MUX_s_1_2_2(not_tmp_58, or_9_nl, fsm_output(6));
  COMP_LOOP_1_acc_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(z_out_2 & '0') + SIGNED('1'
      & (NOT (STAGE_LOOP_lshift_psp_sva(9 DOWNTO 1)))) + SIGNED'( "0000000001"),
      10));
  or_10_nl <= (CONV_SL_1_1(fsm_output(3 DOWNTO 0)=STD_LOGIC_VECTOR'("1111"))) OR
      CONV_SL_1_1(fsm_output(5 DOWNTO 4)/=STD_LOGIC_VECTOR'("00"));
  mux_81_nl <= MUX_s_1_2_2(not_tmp_58, or_10_nl, fsm_output(6));
  nor_28_nl <= NOT((VEC_LOOP_j_sva_9_0(0)) OR (NOT (fsm_output(2))) OR (fsm_output(3))
      OR (fsm_output(5)));
  nor_29_nl <= NOT((COMP_LOOP_acc_1_cse_sva(0)) OR (fsm_output(2)) OR not_tmp_34);
  mux_82_nl <= MUX_s_1_2_2(nor_28_nl, nor_29_nl, fsm_output(0));
  and_85_nl <= and_dcpl_50 AND and_dcpl_12 AND (NOT (fsm_output(6))) AND (NOT (COMP_LOOP_2_tmp_lshift_itm(0)));
  and_88_nl <= and_dcpl_50 AND and_dcpl_12 AND (NOT (fsm_output(6))) AND (COMP_LOOP_2_tmp_lshift_itm(0));
  mux_89_nl <= MUX_s_1_2_2(and_dcpl_9, nor_tmp_3, fsm_output(3));
  and_90_nl <= (fsm_output(0)) AND (fsm_output(2));
  mux_90_nl <= MUX_s_1_2_2(mux_89_nl, mux_tmp_77, and_90_nl);
  mux_86_nl <= MUX_s_1_2_2(and_dcpl_9, (fsm_output(5)), fsm_output(3));
  mux_87_nl <= MUX_s_1_2_2(mux_86_nl, nor_tmp_3, fsm_output(2));
  or_11_nl <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("00"));
  mux_85_nl <= MUX_s_1_2_2(and_dcpl_9, nor_tmp_3, or_11_nl);
  mux_88_nl <= MUX_s_1_2_2(mux_87_nl, mux_85_nl, fsm_output(0));
  mux_91_nl <= MUX_s_1_2_2(mux_90_nl, mux_88_nl, fsm_output(1));
  STAGE_LOOP_mux_3_nl <= MUX_v_4_2_2(STAGE_LOOP_i_3_0_sva, (NOT STAGE_LOOP_i_3_0_sva),
      and_dcpl_111);
  z_out_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(STAGE_LOOP_mux_3_nl) + UNSIGNED'(
      and_dcpl_111 & '0' & and_dcpl_111 & '1'), 4));
  COMP_LOOP_mux_40_nl <= MUX_v_8_2_2(COMP_LOOP_k_9_1_sva_7_0, (STD_LOGIC_VECTOR'(
      "00000") & (z_out_1(3 DOWNTO 1))), and_dcpl_122);
  z_out_2 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(COMP_LOOP_mux_40_nl),
      9) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'( and_dcpl_122 & '1'), 2), 9), 9));
  COMP_LOOP_mux_41_nl <= MUX_v_10_2_2(('0' & (VEC_LOOP_j_sva_9_0(9 DOWNTO 1))), VEC_LOOP_j_sva_9_0,
      and_dcpl_133);
  COMP_LOOP_mux_42_nl <= MUX_v_10_2_2((STD_LOGIC_VECTOR'( "00") & COMP_LOOP_k_9_1_sva_7_0),
      STAGE_LOOP_lshift_psp_sva, and_dcpl_133);
  z_out_3 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(COMP_LOOP_mux_41_nl),
      11) + CONV_UNSIGNED(UNSIGNED(COMP_LOOP_mux_42_nl), 11), 11));
  COMP_LOOP_tmp_mux1h_4_nl <= MUX1HOT_v_64_4_2((STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000000000000000000")
      & (z_out(8 DOWNTO 0))), twiddle_rsc_0_0_i_s_din_mxwt, COMP_LOOP_2_mul_psp,
      (STD_LOGIC_VECTOR'( "000000000000000000000000000000000000000000000000000000")
      & COMP_LOOP_2_tmp_lshift_itm), STD_LOGIC_VECTOR'( and_dcpl_139 & and_dcpl_142
      & and_dcpl_146 & and_dcpl_151));
  COMP_LOOP_tmp_or_2_nl <= ((NOT (COMP_LOOP_2_tmp_lshift_itm(0))) AND and_dcpl_142)
      OR ((NOT (COMP_LOOP_2_acc_10_idiv_sva(0))) AND and_dcpl_146);
  COMP_LOOP_tmp_or_3_nl <= ((COMP_LOOP_2_tmp_lshift_itm(0)) AND and_dcpl_142) OR
      ((COMP_LOOP_2_acc_10_idiv_sva(0)) AND and_dcpl_146);
  COMP_LOOP_tmp_mux1h_5_nl <= MUX1HOT_v_64_4_2((STD_LOGIC_VECTOR'( "00000000000000000000000000000000000000000000000000000000")
      & COMP_LOOP_k_9_1_sva_7_0), vec_rsc_0_0_i_s_din_mxwt, vec_rsc_0_1_i_s_din_mxwt,
      (STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000000000000000000")
      & COMP_LOOP_k_9_1_sva_7_0 & '1'), STD_LOGIC_VECTOR'( and_dcpl_139 & COMP_LOOP_tmp_or_2_nl
      & COMP_LOOP_tmp_or_3_nl & and_dcpl_151));
  z_out_4 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'( UNSIGNED(COMP_LOOP_tmp_mux1h_4_nl)
      * UNSIGNED(COMP_LOOP_tmp_mux1h_5_nl)), 64));
END v5;

-- ------------------------------------------------------------------
--  Design Unit:    inPlaceNTT_DIT_precomp
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY amba_lib;
USE amba_lib.amba_comps.ALL;
LIBRARY mgc_hls;
USE mgc_hls.mgc_io_sync_pkg_v2.ALL;
USE mgc_hls.ccs_in_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;


ENTITY inPlaceNTT_DIT_precomp IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    vec_rsc_0_0_s_tdone : IN STD_LOGIC;
    vec_rsc_0_0_tr_write_done : IN STD_LOGIC;
    vec_rsc_0_0_RREADY : IN STD_LOGIC;
    vec_rsc_0_0_RVALID : OUT STD_LOGIC;
    vec_rsc_0_0_RUSER : OUT STD_LOGIC;
    vec_rsc_0_0_RLAST : OUT STD_LOGIC;
    vec_rsc_0_0_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_0_RDATA : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
    vec_rsc_0_0_RID : OUT STD_LOGIC;
    vec_rsc_0_0_ARREADY : OUT STD_LOGIC;
    vec_rsc_0_0_ARVALID : IN STD_LOGIC;
    vec_rsc_0_0_ARUSER : IN STD_LOGIC;
    vec_rsc_0_0_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_0_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_0_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_0_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_0_ARLOCK : IN STD_LOGIC;
    vec_rsc_0_0_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_0_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_0_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    vec_rsc_0_0_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    vec_rsc_0_0_ARID : IN STD_LOGIC;
    vec_rsc_0_0_BREADY : IN STD_LOGIC;
    vec_rsc_0_0_BVALID : OUT STD_LOGIC;
    vec_rsc_0_0_BUSER : OUT STD_LOGIC;
    vec_rsc_0_0_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_0_BID : OUT STD_LOGIC;
    vec_rsc_0_0_WREADY : OUT STD_LOGIC;
    vec_rsc_0_0_WVALID : IN STD_LOGIC;
    vec_rsc_0_0_WUSER : IN STD_LOGIC;
    vec_rsc_0_0_WLAST : IN STD_LOGIC;
    vec_rsc_0_0_WSTRB : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    vec_rsc_0_0_WDATA : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
    vec_rsc_0_0_AWREADY : OUT STD_LOGIC;
    vec_rsc_0_0_AWVALID : IN STD_LOGIC;
    vec_rsc_0_0_AWUSER : IN STD_LOGIC;
    vec_rsc_0_0_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_0_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_0_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_0_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_0_AWLOCK : IN STD_LOGIC;
    vec_rsc_0_0_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_0_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_0_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    vec_rsc_0_0_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    vec_rsc_0_0_AWID : IN STD_LOGIC;
    vec_rsc_triosy_0_0_lz : OUT STD_LOGIC;
    vec_rsc_0_1_s_tdone : IN STD_LOGIC;
    vec_rsc_0_1_tr_write_done : IN STD_LOGIC;
    vec_rsc_0_1_RREADY : IN STD_LOGIC;
    vec_rsc_0_1_RVALID : OUT STD_LOGIC;
    vec_rsc_0_1_RUSER : OUT STD_LOGIC;
    vec_rsc_0_1_RLAST : OUT STD_LOGIC;
    vec_rsc_0_1_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_1_RDATA : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
    vec_rsc_0_1_RID : OUT STD_LOGIC;
    vec_rsc_0_1_ARREADY : OUT STD_LOGIC;
    vec_rsc_0_1_ARVALID : IN STD_LOGIC;
    vec_rsc_0_1_ARUSER : IN STD_LOGIC;
    vec_rsc_0_1_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_1_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_1_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_1_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_1_ARLOCK : IN STD_LOGIC;
    vec_rsc_0_1_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_1_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_1_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    vec_rsc_0_1_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    vec_rsc_0_1_ARID : IN STD_LOGIC;
    vec_rsc_0_1_BREADY : IN STD_LOGIC;
    vec_rsc_0_1_BVALID : OUT STD_LOGIC;
    vec_rsc_0_1_BUSER : OUT STD_LOGIC;
    vec_rsc_0_1_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_1_BID : OUT STD_LOGIC;
    vec_rsc_0_1_WREADY : OUT STD_LOGIC;
    vec_rsc_0_1_WVALID : IN STD_LOGIC;
    vec_rsc_0_1_WUSER : IN STD_LOGIC;
    vec_rsc_0_1_WLAST : IN STD_LOGIC;
    vec_rsc_0_1_WSTRB : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    vec_rsc_0_1_WDATA : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
    vec_rsc_0_1_AWREADY : OUT STD_LOGIC;
    vec_rsc_0_1_AWVALID : IN STD_LOGIC;
    vec_rsc_0_1_AWUSER : IN STD_LOGIC;
    vec_rsc_0_1_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_1_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_1_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_1_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    vec_rsc_0_1_AWLOCK : IN STD_LOGIC;
    vec_rsc_0_1_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    vec_rsc_0_1_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    vec_rsc_0_1_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    vec_rsc_0_1_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    vec_rsc_0_1_AWID : IN STD_LOGIC;
    vec_rsc_triosy_0_1_lz : OUT STD_LOGIC;
    p_rsc_dat : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
    p_rsc_triosy_lz : OUT STD_LOGIC;
    r_rsc_dat : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
    r_rsc_triosy_lz : OUT STD_LOGIC;
    twiddle_rsc_0_0_s_tdone : IN STD_LOGIC;
    twiddle_rsc_0_0_tr_write_done : IN STD_LOGIC;
    twiddle_rsc_0_0_RREADY : IN STD_LOGIC;
    twiddle_rsc_0_0_RVALID : OUT STD_LOGIC;
    twiddle_rsc_0_0_RUSER : OUT STD_LOGIC;
    twiddle_rsc_0_0_RLAST : OUT STD_LOGIC;
    twiddle_rsc_0_0_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_0_RDATA : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
    twiddle_rsc_0_0_RID : OUT STD_LOGIC;
    twiddle_rsc_0_0_ARREADY : OUT STD_LOGIC;
    twiddle_rsc_0_0_ARVALID : IN STD_LOGIC;
    twiddle_rsc_0_0_ARUSER : IN STD_LOGIC;
    twiddle_rsc_0_0_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_0_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_0_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_0_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_0_ARLOCK : IN STD_LOGIC;
    twiddle_rsc_0_0_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_0_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_0_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    twiddle_rsc_0_0_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    twiddle_rsc_0_0_ARID : IN STD_LOGIC;
    twiddle_rsc_0_0_BREADY : IN STD_LOGIC;
    twiddle_rsc_0_0_BVALID : OUT STD_LOGIC;
    twiddle_rsc_0_0_BUSER : OUT STD_LOGIC;
    twiddle_rsc_0_0_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_0_BID : OUT STD_LOGIC;
    twiddle_rsc_0_0_WREADY : OUT STD_LOGIC;
    twiddle_rsc_0_0_WVALID : IN STD_LOGIC;
    twiddle_rsc_0_0_WUSER : IN STD_LOGIC;
    twiddle_rsc_0_0_WLAST : IN STD_LOGIC;
    twiddle_rsc_0_0_WSTRB : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    twiddle_rsc_0_0_WDATA : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
    twiddle_rsc_0_0_AWREADY : OUT STD_LOGIC;
    twiddle_rsc_0_0_AWVALID : IN STD_LOGIC;
    twiddle_rsc_0_0_AWUSER : IN STD_LOGIC;
    twiddle_rsc_0_0_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_0_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_0_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_0_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_0_AWLOCK : IN STD_LOGIC;
    twiddle_rsc_0_0_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_0_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_0_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    twiddle_rsc_0_0_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    twiddle_rsc_0_0_AWID : IN STD_LOGIC;
    twiddle_rsc_triosy_0_0_lz : OUT STD_LOGIC;
    twiddle_rsc_0_1_s_tdone : IN STD_LOGIC;
    twiddle_rsc_0_1_tr_write_done : IN STD_LOGIC;
    twiddle_rsc_0_1_RREADY : IN STD_LOGIC;
    twiddle_rsc_0_1_RVALID : OUT STD_LOGIC;
    twiddle_rsc_0_1_RUSER : OUT STD_LOGIC;
    twiddle_rsc_0_1_RLAST : OUT STD_LOGIC;
    twiddle_rsc_0_1_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_1_RDATA : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
    twiddle_rsc_0_1_RID : OUT STD_LOGIC;
    twiddle_rsc_0_1_ARREADY : OUT STD_LOGIC;
    twiddle_rsc_0_1_ARVALID : IN STD_LOGIC;
    twiddle_rsc_0_1_ARUSER : IN STD_LOGIC;
    twiddle_rsc_0_1_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_1_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_1_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_1_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_1_ARLOCK : IN STD_LOGIC;
    twiddle_rsc_0_1_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_1_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_1_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    twiddle_rsc_0_1_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    twiddle_rsc_0_1_ARID : IN STD_LOGIC;
    twiddle_rsc_0_1_BREADY : IN STD_LOGIC;
    twiddle_rsc_0_1_BVALID : OUT STD_LOGIC;
    twiddle_rsc_0_1_BUSER : OUT STD_LOGIC;
    twiddle_rsc_0_1_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_1_BID : OUT STD_LOGIC;
    twiddle_rsc_0_1_WREADY : OUT STD_LOGIC;
    twiddle_rsc_0_1_WVALID : IN STD_LOGIC;
    twiddle_rsc_0_1_WUSER : IN STD_LOGIC;
    twiddle_rsc_0_1_WLAST : IN STD_LOGIC;
    twiddle_rsc_0_1_WSTRB : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    twiddle_rsc_0_1_WDATA : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
    twiddle_rsc_0_1_AWREADY : OUT STD_LOGIC;
    twiddle_rsc_0_1_AWVALID : IN STD_LOGIC;
    twiddle_rsc_0_1_AWUSER : IN STD_LOGIC;
    twiddle_rsc_0_1_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_1_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_1_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_1_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
    twiddle_rsc_0_1_AWLOCK : IN STD_LOGIC;
    twiddle_rsc_0_1_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    twiddle_rsc_0_1_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    twiddle_rsc_0_1_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    twiddle_rsc_0_1_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    twiddle_rsc_0_1_AWID : IN STD_LOGIC;
    twiddle_rsc_triosy_0_1_lz : OUT STD_LOGIC
  );
END inPlaceNTT_DIT_precomp;

ARCHITECTURE v5 OF inPlaceNTT_DIT_precomp IS
  -- Default Constants
  CONSTANT PWR : STD_LOGIC := '1';
  CONSTANT GND : STD_LOGIC := '0';

  COMPONENT inPlaceNTT_DIT_precomp_core
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      vec_rsc_0_0_s_tdone : IN STD_LOGIC;
      vec_rsc_0_0_tr_write_done : IN STD_LOGIC;
      vec_rsc_0_0_RREADY : IN STD_LOGIC;
      vec_rsc_0_0_RVALID : OUT STD_LOGIC;
      vec_rsc_0_0_RUSER : OUT STD_LOGIC;
      vec_rsc_0_0_RLAST : OUT STD_LOGIC;
      vec_rsc_0_0_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      vec_rsc_0_0_RDATA : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
      vec_rsc_0_0_RID : OUT STD_LOGIC;
      vec_rsc_0_0_ARREADY : OUT STD_LOGIC;
      vec_rsc_0_0_ARVALID : IN STD_LOGIC;
      vec_rsc_0_0_ARUSER : IN STD_LOGIC;
      vec_rsc_0_0_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_0_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_0_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      vec_rsc_0_0_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_0_ARLOCK : IN STD_LOGIC;
      vec_rsc_0_0_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      vec_rsc_0_0_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      vec_rsc_0_0_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      vec_rsc_0_0_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      vec_rsc_0_0_ARID : IN STD_LOGIC;
      vec_rsc_0_0_BREADY : IN STD_LOGIC;
      vec_rsc_0_0_BVALID : OUT STD_LOGIC;
      vec_rsc_0_0_BUSER : OUT STD_LOGIC;
      vec_rsc_0_0_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      vec_rsc_0_0_BID : OUT STD_LOGIC;
      vec_rsc_0_0_WREADY : OUT STD_LOGIC;
      vec_rsc_0_0_WVALID : IN STD_LOGIC;
      vec_rsc_0_0_WUSER : IN STD_LOGIC;
      vec_rsc_0_0_WLAST : IN STD_LOGIC;
      vec_rsc_0_0_WSTRB : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      vec_rsc_0_0_WDATA : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
      vec_rsc_0_0_AWREADY : OUT STD_LOGIC;
      vec_rsc_0_0_AWVALID : IN STD_LOGIC;
      vec_rsc_0_0_AWUSER : IN STD_LOGIC;
      vec_rsc_0_0_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_0_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_0_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      vec_rsc_0_0_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_0_AWLOCK : IN STD_LOGIC;
      vec_rsc_0_0_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      vec_rsc_0_0_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      vec_rsc_0_0_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      vec_rsc_0_0_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      vec_rsc_0_0_AWID : IN STD_LOGIC;
      vec_rsc_triosy_0_0_lz : OUT STD_LOGIC;
      vec_rsc_0_1_s_tdone : IN STD_LOGIC;
      vec_rsc_0_1_tr_write_done : IN STD_LOGIC;
      vec_rsc_0_1_RREADY : IN STD_LOGIC;
      vec_rsc_0_1_RVALID : OUT STD_LOGIC;
      vec_rsc_0_1_RUSER : OUT STD_LOGIC;
      vec_rsc_0_1_RLAST : OUT STD_LOGIC;
      vec_rsc_0_1_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      vec_rsc_0_1_RDATA : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
      vec_rsc_0_1_RID : OUT STD_LOGIC;
      vec_rsc_0_1_ARREADY : OUT STD_LOGIC;
      vec_rsc_0_1_ARVALID : IN STD_LOGIC;
      vec_rsc_0_1_ARUSER : IN STD_LOGIC;
      vec_rsc_0_1_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_1_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_1_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      vec_rsc_0_1_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_1_ARLOCK : IN STD_LOGIC;
      vec_rsc_0_1_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      vec_rsc_0_1_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      vec_rsc_0_1_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      vec_rsc_0_1_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      vec_rsc_0_1_ARID : IN STD_LOGIC;
      vec_rsc_0_1_BREADY : IN STD_LOGIC;
      vec_rsc_0_1_BVALID : OUT STD_LOGIC;
      vec_rsc_0_1_BUSER : OUT STD_LOGIC;
      vec_rsc_0_1_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      vec_rsc_0_1_BID : OUT STD_LOGIC;
      vec_rsc_0_1_WREADY : OUT STD_LOGIC;
      vec_rsc_0_1_WVALID : IN STD_LOGIC;
      vec_rsc_0_1_WUSER : IN STD_LOGIC;
      vec_rsc_0_1_WLAST : IN STD_LOGIC;
      vec_rsc_0_1_WSTRB : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      vec_rsc_0_1_WDATA : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
      vec_rsc_0_1_AWREADY : OUT STD_LOGIC;
      vec_rsc_0_1_AWVALID : IN STD_LOGIC;
      vec_rsc_0_1_AWUSER : IN STD_LOGIC;
      vec_rsc_0_1_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_1_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_1_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      vec_rsc_0_1_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      vec_rsc_0_1_AWLOCK : IN STD_LOGIC;
      vec_rsc_0_1_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      vec_rsc_0_1_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      vec_rsc_0_1_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      vec_rsc_0_1_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      vec_rsc_0_1_AWID : IN STD_LOGIC;
      vec_rsc_triosy_0_1_lz : OUT STD_LOGIC;
      p_rsc_dat : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
      p_rsc_triosy_lz : OUT STD_LOGIC;
      r_rsc_triosy_lz : OUT STD_LOGIC;
      twiddle_rsc_0_0_s_tdone : IN STD_LOGIC;
      twiddle_rsc_0_0_tr_write_done : IN STD_LOGIC;
      twiddle_rsc_0_0_RREADY : IN STD_LOGIC;
      twiddle_rsc_0_0_RVALID : OUT STD_LOGIC;
      twiddle_rsc_0_0_RUSER : OUT STD_LOGIC;
      twiddle_rsc_0_0_RLAST : OUT STD_LOGIC;
      twiddle_rsc_0_0_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      twiddle_rsc_0_0_RDATA : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
      twiddle_rsc_0_0_RID : OUT STD_LOGIC;
      twiddle_rsc_0_0_ARREADY : OUT STD_LOGIC;
      twiddle_rsc_0_0_ARVALID : IN STD_LOGIC;
      twiddle_rsc_0_0_ARUSER : IN STD_LOGIC;
      twiddle_rsc_0_0_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_0_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_0_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      twiddle_rsc_0_0_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_0_ARLOCK : IN STD_LOGIC;
      twiddle_rsc_0_0_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      twiddle_rsc_0_0_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      twiddle_rsc_0_0_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      twiddle_rsc_0_0_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      twiddle_rsc_0_0_ARID : IN STD_LOGIC;
      twiddle_rsc_0_0_BREADY : IN STD_LOGIC;
      twiddle_rsc_0_0_BVALID : OUT STD_LOGIC;
      twiddle_rsc_0_0_BUSER : OUT STD_LOGIC;
      twiddle_rsc_0_0_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      twiddle_rsc_0_0_BID : OUT STD_LOGIC;
      twiddle_rsc_0_0_WREADY : OUT STD_LOGIC;
      twiddle_rsc_0_0_WVALID : IN STD_LOGIC;
      twiddle_rsc_0_0_WUSER : IN STD_LOGIC;
      twiddle_rsc_0_0_WLAST : IN STD_LOGIC;
      twiddle_rsc_0_0_WSTRB : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      twiddle_rsc_0_0_WDATA : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
      twiddle_rsc_0_0_AWREADY : OUT STD_LOGIC;
      twiddle_rsc_0_0_AWVALID : IN STD_LOGIC;
      twiddle_rsc_0_0_AWUSER : IN STD_LOGIC;
      twiddle_rsc_0_0_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_0_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_0_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      twiddle_rsc_0_0_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_0_AWLOCK : IN STD_LOGIC;
      twiddle_rsc_0_0_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      twiddle_rsc_0_0_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      twiddle_rsc_0_0_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      twiddle_rsc_0_0_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      twiddle_rsc_0_0_AWID : IN STD_LOGIC;
      twiddle_rsc_triosy_0_0_lz : OUT STD_LOGIC;
      twiddle_rsc_0_1_s_tdone : IN STD_LOGIC;
      twiddle_rsc_0_1_tr_write_done : IN STD_LOGIC;
      twiddle_rsc_0_1_RREADY : IN STD_LOGIC;
      twiddle_rsc_0_1_RVALID : OUT STD_LOGIC;
      twiddle_rsc_0_1_RUSER : OUT STD_LOGIC;
      twiddle_rsc_0_1_RLAST : OUT STD_LOGIC;
      twiddle_rsc_0_1_RRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      twiddle_rsc_0_1_RDATA : OUT STD_LOGIC_VECTOR (63 DOWNTO 0);
      twiddle_rsc_0_1_RID : OUT STD_LOGIC;
      twiddle_rsc_0_1_ARREADY : OUT STD_LOGIC;
      twiddle_rsc_0_1_ARVALID : IN STD_LOGIC;
      twiddle_rsc_0_1_ARUSER : IN STD_LOGIC;
      twiddle_rsc_0_1_ARREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_1_ARQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_1_ARPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      twiddle_rsc_0_1_ARCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_1_ARLOCK : IN STD_LOGIC;
      twiddle_rsc_0_1_ARBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      twiddle_rsc_0_1_ARSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      twiddle_rsc_0_1_ARLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      twiddle_rsc_0_1_ARADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      twiddle_rsc_0_1_ARID : IN STD_LOGIC;
      twiddle_rsc_0_1_BREADY : IN STD_LOGIC;
      twiddle_rsc_0_1_BVALID : OUT STD_LOGIC;
      twiddle_rsc_0_1_BUSER : OUT STD_LOGIC;
      twiddle_rsc_0_1_BRESP : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      twiddle_rsc_0_1_BID : OUT STD_LOGIC;
      twiddle_rsc_0_1_WREADY : OUT STD_LOGIC;
      twiddle_rsc_0_1_WVALID : IN STD_LOGIC;
      twiddle_rsc_0_1_WUSER : IN STD_LOGIC;
      twiddle_rsc_0_1_WLAST : IN STD_LOGIC;
      twiddle_rsc_0_1_WSTRB : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      twiddle_rsc_0_1_WDATA : IN STD_LOGIC_VECTOR (63 DOWNTO 0);
      twiddle_rsc_0_1_AWREADY : OUT STD_LOGIC;
      twiddle_rsc_0_1_AWVALID : IN STD_LOGIC;
      twiddle_rsc_0_1_AWUSER : IN STD_LOGIC;
      twiddle_rsc_0_1_AWREGION : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_1_AWQOS : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_1_AWPROT : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      twiddle_rsc_0_1_AWCACHE : IN STD_LOGIC_VECTOR (3 DOWNTO 0);
      twiddle_rsc_0_1_AWLOCK : IN STD_LOGIC;
      twiddle_rsc_0_1_AWBURST : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      twiddle_rsc_0_1_AWSIZE : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      twiddle_rsc_0_1_AWLEN : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      twiddle_rsc_0_1_AWADDR : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      twiddle_rsc_0_1_AWID : IN STD_LOGIC;
      twiddle_rsc_triosy_0_1_lz : OUT STD_LOGIC
    );
  END COMPONENT;
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_RRESP : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_RDATA : STD_LOGIC_VECTOR (63
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARREGION : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARQOS : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARPROT : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARCACHE : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARBURST : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARSIZE : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARLEN : STD_LOGIC_VECTOR (7
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARADDR : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_BRESP : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_WSTRB : STD_LOGIC_VECTOR (7
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_WDATA : STD_LOGIC_VECTOR (63
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWREGION : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWQOS : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWPROT : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWCACHE : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWBURST : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWSIZE : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWLEN : STD_LOGIC_VECTOR (7
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWADDR : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_RRESP : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_RDATA : STD_LOGIC_VECTOR (63
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARREGION : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARQOS : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARPROT : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARCACHE : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARBURST : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARSIZE : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARLEN : STD_LOGIC_VECTOR (7
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARADDR : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_BRESP : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_WSTRB : STD_LOGIC_VECTOR (7
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_WDATA : STD_LOGIC_VECTOR (63
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWREGION : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWQOS : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWPROT : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWCACHE : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWBURST : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWSIZE : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWLEN : STD_LOGIC_VECTOR (7
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWADDR : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_p_rsc_dat : STD_LOGIC_VECTOR (63 DOWNTO
      0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_RRESP : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_RDATA : STD_LOGIC_VECTOR
      (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARREGION : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARQOS : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARPROT : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARCACHE : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARBURST : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARSIZE : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARLEN : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARADDR : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_BRESP : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_WSTRB : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_WDATA : STD_LOGIC_VECTOR
      (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWREGION : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWQOS : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWPROT : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWCACHE : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWBURST : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWSIZE : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWLEN : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWADDR : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_RRESP : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_RDATA : STD_LOGIC_VECTOR
      (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARREGION : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARQOS : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARPROT : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARCACHE : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARBURST : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARSIZE : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARLEN : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARADDR : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_BRESP : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_WSTRB : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_WDATA : STD_LOGIC_VECTOR
      (63 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWREGION : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWQOS : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWPROT : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWCACHE : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWBURST : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWSIZE : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWLEN : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWADDR : STD_LOGIC_VECTOR
      (11 DOWNTO 0);

BEGIN
  inPlaceNTT_DIT_precomp_core_inst : inPlaceNTT_DIT_precomp_core
    PORT MAP(
      clk => clk,
      rst => rst,
      vec_rsc_0_0_s_tdone => vec_rsc_0_0_s_tdone,
      vec_rsc_0_0_tr_write_done => vec_rsc_0_0_tr_write_done,
      vec_rsc_0_0_RREADY => vec_rsc_0_0_RREADY,
      vec_rsc_0_0_RVALID => vec_rsc_0_0_RVALID,
      vec_rsc_0_0_RUSER => vec_rsc_0_0_RUSER,
      vec_rsc_0_0_RLAST => vec_rsc_0_0_RLAST,
      vec_rsc_0_0_RRESP => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_RRESP,
      vec_rsc_0_0_RDATA => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_RDATA,
      vec_rsc_0_0_RID => vec_rsc_0_0_RID,
      vec_rsc_0_0_ARREADY => vec_rsc_0_0_ARREADY,
      vec_rsc_0_0_ARVALID => vec_rsc_0_0_ARVALID,
      vec_rsc_0_0_ARUSER => vec_rsc_0_0_ARUSER,
      vec_rsc_0_0_ARREGION => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARREGION,
      vec_rsc_0_0_ARQOS => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARQOS,
      vec_rsc_0_0_ARPROT => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARPROT,
      vec_rsc_0_0_ARCACHE => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARCACHE,
      vec_rsc_0_0_ARLOCK => vec_rsc_0_0_ARLOCK,
      vec_rsc_0_0_ARBURST => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARBURST,
      vec_rsc_0_0_ARSIZE => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARSIZE,
      vec_rsc_0_0_ARLEN => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARLEN,
      vec_rsc_0_0_ARADDR => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARADDR,
      vec_rsc_0_0_ARID => vec_rsc_0_0_ARID,
      vec_rsc_0_0_BREADY => vec_rsc_0_0_BREADY,
      vec_rsc_0_0_BVALID => vec_rsc_0_0_BVALID,
      vec_rsc_0_0_BUSER => vec_rsc_0_0_BUSER,
      vec_rsc_0_0_BRESP => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_BRESP,
      vec_rsc_0_0_BID => vec_rsc_0_0_BID,
      vec_rsc_0_0_WREADY => vec_rsc_0_0_WREADY,
      vec_rsc_0_0_WVALID => vec_rsc_0_0_WVALID,
      vec_rsc_0_0_WUSER => vec_rsc_0_0_WUSER,
      vec_rsc_0_0_WLAST => vec_rsc_0_0_WLAST,
      vec_rsc_0_0_WSTRB => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_WSTRB,
      vec_rsc_0_0_WDATA => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_WDATA,
      vec_rsc_0_0_AWREADY => vec_rsc_0_0_AWREADY,
      vec_rsc_0_0_AWVALID => vec_rsc_0_0_AWVALID,
      vec_rsc_0_0_AWUSER => vec_rsc_0_0_AWUSER,
      vec_rsc_0_0_AWREGION => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWREGION,
      vec_rsc_0_0_AWQOS => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWQOS,
      vec_rsc_0_0_AWPROT => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWPROT,
      vec_rsc_0_0_AWCACHE => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWCACHE,
      vec_rsc_0_0_AWLOCK => vec_rsc_0_0_AWLOCK,
      vec_rsc_0_0_AWBURST => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWBURST,
      vec_rsc_0_0_AWSIZE => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWSIZE,
      vec_rsc_0_0_AWLEN => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWLEN,
      vec_rsc_0_0_AWADDR => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWADDR,
      vec_rsc_0_0_AWID => vec_rsc_0_0_AWID,
      vec_rsc_triosy_0_0_lz => vec_rsc_triosy_0_0_lz,
      vec_rsc_0_1_s_tdone => vec_rsc_0_1_s_tdone,
      vec_rsc_0_1_tr_write_done => vec_rsc_0_1_tr_write_done,
      vec_rsc_0_1_RREADY => vec_rsc_0_1_RREADY,
      vec_rsc_0_1_RVALID => vec_rsc_0_1_RVALID,
      vec_rsc_0_1_RUSER => vec_rsc_0_1_RUSER,
      vec_rsc_0_1_RLAST => vec_rsc_0_1_RLAST,
      vec_rsc_0_1_RRESP => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_RRESP,
      vec_rsc_0_1_RDATA => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_RDATA,
      vec_rsc_0_1_RID => vec_rsc_0_1_RID,
      vec_rsc_0_1_ARREADY => vec_rsc_0_1_ARREADY,
      vec_rsc_0_1_ARVALID => vec_rsc_0_1_ARVALID,
      vec_rsc_0_1_ARUSER => vec_rsc_0_1_ARUSER,
      vec_rsc_0_1_ARREGION => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARREGION,
      vec_rsc_0_1_ARQOS => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARQOS,
      vec_rsc_0_1_ARPROT => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARPROT,
      vec_rsc_0_1_ARCACHE => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARCACHE,
      vec_rsc_0_1_ARLOCK => vec_rsc_0_1_ARLOCK,
      vec_rsc_0_1_ARBURST => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARBURST,
      vec_rsc_0_1_ARSIZE => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARSIZE,
      vec_rsc_0_1_ARLEN => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARLEN,
      vec_rsc_0_1_ARADDR => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARADDR,
      vec_rsc_0_1_ARID => vec_rsc_0_1_ARID,
      vec_rsc_0_1_BREADY => vec_rsc_0_1_BREADY,
      vec_rsc_0_1_BVALID => vec_rsc_0_1_BVALID,
      vec_rsc_0_1_BUSER => vec_rsc_0_1_BUSER,
      vec_rsc_0_1_BRESP => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_BRESP,
      vec_rsc_0_1_BID => vec_rsc_0_1_BID,
      vec_rsc_0_1_WREADY => vec_rsc_0_1_WREADY,
      vec_rsc_0_1_WVALID => vec_rsc_0_1_WVALID,
      vec_rsc_0_1_WUSER => vec_rsc_0_1_WUSER,
      vec_rsc_0_1_WLAST => vec_rsc_0_1_WLAST,
      vec_rsc_0_1_WSTRB => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_WSTRB,
      vec_rsc_0_1_WDATA => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_WDATA,
      vec_rsc_0_1_AWREADY => vec_rsc_0_1_AWREADY,
      vec_rsc_0_1_AWVALID => vec_rsc_0_1_AWVALID,
      vec_rsc_0_1_AWUSER => vec_rsc_0_1_AWUSER,
      vec_rsc_0_1_AWREGION => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWREGION,
      vec_rsc_0_1_AWQOS => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWQOS,
      vec_rsc_0_1_AWPROT => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWPROT,
      vec_rsc_0_1_AWCACHE => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWCACHE,
      vec_rsc_0_1_AWLOCK => vec_rsc_0_1_AWLOCK,
      vec_rsc_0_1_AWBURST => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWBURST,
      vec_rsc_0_1_AWSIZE => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWSIZE,
      vec_rsc_0_1_AWLEN => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWLEN,
      vec_rsc_0_1_AWADDR => inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWADDR,
      vec_rsc_0_1_AWID => vec_rsc_0_1_AWID,
      vec_rsc_triosy_0_1_lz => vec_rsc_triosy_0_1_lz,
      p_rsc_dat => inPlaceNTT_DIT_precomp_core_inst_p_rsc_dat,
      p_rsc_triosy_lz => p_rsc_triosy_lz,
      r_rsc_triosy_lz => r_rsc_triosy_lz,
      twiddle_rsc_0_0_s_tdone => twiddle_rsc_0_0_s_tdone,
      twiddle_rsc_0_0_tr_write_done => twiddle_rsc_0_0_tr_write_done,
      twiddle_rsc_0_0_RREADY => twiddle_rsc_0_0_RREADY,
      twiddle_rsc_0_0_RVALID => twiddle_rsc_0_0_RVALID,
      twiddle_rsc_0_0_RUSER => twiddle_rsc_0_0_RUSER,
      twiddle_rsc_0_0_RLAST => twiddle_rsc_0_0_RLAST,
      twiddle_rsc_0_0_RRESP => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_RRESP,
      twiddle_rsc_0_0_RDATA => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_RDATA,
      twiddle_rsc_0_0_RID => twiddle_rsc_0_0_RID,
      twiddle_rsc_0_0_ARREADY => twiddle_rsc_0_0_ARREADY,
      twiddle_rsc_0_0_ARVALID => twiddle_rsc_0_0_ARVALID,
      twiddle_rsc_0_0_ARUSER => twiddle_rsc_0_0_ARUSER,
      twiddle_rsc_0_0_ARREGION => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARREGION,
      twiddle_rsc_0_0_ARQOS => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARQOS,
      twiddle_rsc_0_0_ARPROT => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARPROT,
      twiddle_rsc_0_0_ARCACHE => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARCACHE,
      twiddle_rsc_0_0_ARLOCK => twiddle_rsc_0_0_ARLOCK,
      twiddle_rsc_0_0_ARBURST => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARBURST,
      twiddle_rsc_0_0_ARSIZE => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARSIZE,
      twiddle_rsc_0_0_ARLEN => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARLEN,
      twiddle_rsc_0_0_ARADDR => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARADDR,
      twiddle_rsc_0_0_ARID => twiddle_rsc_0_0_ARID,
      twiddle_rsc_0_0_BREADY => twiddle_rsc_0_0_BREADY,
      twiddle_rsc_0_0_BVALID => twiddle_rsc_0_0_BVALID,
      twiddle_rsc_0_0_BUSER => twiddle_rsc_0_0_BUSER,
      twiddle_rsc_0_0_BRESP => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_BRESP,
      twiddle_rsc_0_0_BID => twiddle_rsc_0_0_BID,
      twiddle_rsc_0_0_WREADY => twiddle_rsc_0_0_WREADY,
      twiddle_rsc_0_0_WVALID => twiddle_rsc_0_0_WVALID,
      twiddle_rsc_0_0_WUSER => twiddle_rsc_0_0_WUSER,
      twiddle_rsc_0_0_WLAST => twiddle_rsc_0_0_WLAST,
      twiddle_rsc_0_0_WSTRB => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_WSTRB,
      twiddle_rsc_0_0_WDATA => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_WDATA,
      twiddle_rsc_0_0_AWREADY => twiddle_rsc_0_0_AWREADY,
      twiddle_rsc_0_0_AWVALID => twiddle_rsc_0_0_AWVALID,
      twiddle_rsc_0_0_AWUSER => twiddle_rsc_0_0_AWUSER,
      twiddle_rsc_0_0_AWREGION => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWREGION,
      twiddle_rsc_0_0_AWQOS => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWQOS,
      twiddle_rsc_0_0_AWPROT => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWPROT,
      twiddle_rsc_0_0_AWCACHE => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWCACHE,
      twiddle_rsc_0_0_AWLOCK => twiddle_rsc_0_0_AWLOCK,
      twiddle_rsc_0_0_AWBURST => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWBURST,
      twiddle_rsc_0_0_AWSIZE => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWSIZE,
      twiddle_rsc_0_0_AWLEN => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWLEN,
      twiddle_rsc_0_0_AWADDR => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWADDR,
      twiddle_rsc_0_0_AWID => twiddle_rsc_0_0_AWID,
      twiddle_rsc_triosy_0_0_lz => twiddle_rsc_triosy_0_0_lz,
      twiddle_rsc_0_1_s_tdone => twiddle_rsc_0_1_s_tdone,
      twiddle_rsc_0_1_tr_write_done => twiddle_rsc_0_1_tr_write_done,
      twiddle_rsc_0_1_RREADY => twiddle_rsc_0_1_RREADY,
      twiddle_rsc_0_1_RVALID => twiddle_rsc_0_1_RVALID,
      twiddle_rsc_0_1_RUSER => twiddle_rsc_0_1_RUSER,
      twiddle_rsc_0_1_RLAST => twiddle_rsc_0_1_RLAST,
      twiddle_rsc_0_1_RRESP => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_RRESP,
      twiddle_rsc_0_1_RDATA => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_RDATA,
      twiddle_rsc_0_1_RID => twiddle_rsc_0_1_RID,
      twiddle_rsc_0_1_ARREADY => twiddle_rsc_0_1_ARREADY,
      twiddle_rsc_0_1_ARVALID => twiddle_rsc_0_1_ARVALID,
      twiddle_rsc_0_1_ARUSER => twiddle_rsc_0_1_ARUSER,
      twiddle_rsc_0_1_ARREGION => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARREGION,
      twiddle_rsc_0_1_ARQOS => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARQOS,
      twiddle_rsc_0_1_ARPROT => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARPROT,
      twiddle_rsc_0_1_ARCACHE => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARCACHE,
      twiddle_rsc_0_1_ARLOCK => twiddle_rsc_0_1_ARLOCK,
      twiddle_rsc_0_1_ARBURST => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARBURST,
      twiddle_rsc_0_1_ARSIZE => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARSIZE,
      twiddle_rsc_0_1_ARLEN => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARLEN,
      twiddle_rsc_0_1_ARADDR => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARADDR,
      twiddle_rsc_0_1_ARID => twiddle_rsc_0_1_ARID,
      twiddle_rsc_0_1_BREADY => twiddle_rsc_0_1_BREADY,
      twiddle_rsc_0_1_BVALID => twiddle_rsc_0_1_BVALID,
      twiddle_rsc_0_1_BUSER => twiddle_rsc_0_1_BUSER,
      twiddle_rsc_0_1_BRESP => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_BRESP,
      twiddle_rsc_0_1_BID => twiddle_rsc_0_1_BID,
      twiddle_rsc_0_1_WREADY => twiddle_rsc_0_1_WREADY,
      twiddle_rsc_0_1_WVALID => twiddle_rsc_0_1_WVALID,
      twiddle_rsc_0_1_WUSER => twiddle_rsc_0_1_WUSER,
      twiddle_rsc_0_1_WLAST => twiddle_rsc_0_1_WLAST,
      twiddle_rsc_0_1_WSTRB => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_WSTRB,
      twiddle_rsc_0_1_WDATA => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_WDATA,
      twiddle_rsc_0_1_AWREADY => twiddle_rsc_0_1_AWREADY,
      twiddle_rsc_0_1_AWVALID => twiddle_rsc_0_1_AWVALID,
      twiddle_rsc_0_1_AWUSER => twiddle_rsc_0_1_AWUSER,
      twiddle_rsc_0_1_AWREGION => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWREGION,
      twiddle_rsc_0_1_AWQOS => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWQOS,
      twiddle_rsc_0_1_AWPROT => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWPROT,
      twiddle_rsc_0_1_AWCACHE => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWCACHE,
      twiddle_rsc_0_1_AWLOCK => twiddle_rsc_0_1_AWLOCK,
      twiddle_rsc_0_1_AWBURST => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWBURST,
      twiddle_rsc_0_1_AWSIZE => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWSIZE,
      twiddle_rsc_0_1_AWLEN => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWLEN,
      twiddle_rsc_0_1_AWADDR => inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWADDR,
      twiddle_rsc_0_1_AWID => twiddle_rsc_0_1_AWID,
      twiddle_rsc_triosy_0_1_lz => twiddle_rsc_triosy_0_1_lz
    );
  vec_rsc_0_0_RRESP <= inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_RRESP;
  vec_rsc_0_0_RDATA <= inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_RDATA;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARREGION <= vec_rsc_0_0_ARREGION;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARQOS <= vec_rsc_0_0_ARQOS;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARPROT <= vec_rsc_0_0_ARPROT;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARCACHE <= vec_rsc_0_0_ARCACHE;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARBURST <= vec_rsc_0_0_ARBURST;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARSIZE <= vec_rsc_0_0_ARSIZE;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARLEN <= vec_rsc_0_0_ARLEN;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_ARADDR <= vec_rsc_0_0_ARADDR;
  vec_rsc_0_0_BRESP <= inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_BRESP;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_WSTRB <= vec_rsc_0_0_WSTRB;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_WDATA <= vec_rsc_0_0_WDATA;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWREGION <= vec_rsc_0_0_AWREGION;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWQOS <= vec_rsc_0_0_AWQOS;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWPROT <= vec_rsc_0_0_AWPROT;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWCACHE <= vec_rsc_0_0_AWCACHE;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWBURST <= vec_rsc_0_0_AWBURST;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWSIZE <= vec_rsc_0_0_AWSIZE;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWLEN <= vec_rsc_0_0_AWLEN;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_0_AWADDR <= vec_rsc_0_0_AWADDR;
  vec_rsc_0_1_RRESP <= inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_RRESP;
  vec_rsc_0_1_RDATA <= inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_RDATA;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARREGION <= vec_rsc_0_1_ARREGION;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARQOS <= vec_rsc_0_1_ARQOS;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARPROT <= vec_rsc_0_1_ARPROT;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARCACHE <= vec_rsc_0_1_ARCACHE;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARBURST <= vec_rsc_0_1_ARBURST;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARSIZE <= vec_rsc_0_1_ARSIZE;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARLEN <= vec_rsc_0_1_ARLEN;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_ARADDR <= vec_rsc_0_1_ARADDR;
  vec_rsc_0_1_BRESP <= inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_BRESP;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_WSTRB <= vec_rsc_0_1_WSTRB;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_WDATA <= vec_rsc_0_1_WDATA;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWREGION <= vec_rsc_0_1_AWREGION;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWQOS <= vec_rsc_0_1_AWQOS;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWPROT <= vec_rsc_0_1_AWPROT;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWCACHE <= vec_rsc_0_1_AWCACHE;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWBURST <= vec_rsc_0_1_AWBURST;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWSIZE <= vec_rsc_0_1_AWSIZE;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWLEN <= vec_rsc_0_1_AWLEN;
  inPlaceNTT_DIT_precomp_core_inst_vec_rsc_0_1_AWADDR <= vec_rsc_0_1_AWADDR;
  inPlaceNTT_DIT_precomp_core_inst_p_rsc_dat <= p_rsc_dat;
  twiddle_rsc_0_0_RRESP <= inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_RRESP;
  twiddle_rsc_0_0_RDATA <= inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_RDATA;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARREGION <= twiddle_rsc_0_0_ARREGION;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARQOS <= twiddle_rsc_0_0_ARQOS;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARPROT <= twiddle_rsc_0_0_ARPROT;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARCACHE <= twiddle_rsc_0_0_ARCACHE;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARBURST <= twiddle_rsc_0_0_ARBURST;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARSIZE <= twiddle_rsc_0_0_ARSIZE;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARLEN <= twiddle_rsc_0_0_ARLEN;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_ARADDR <= twiddle_rsc_0_0_ARADDR;
  twiddle_rsc_0_0_BRESP <= inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_BRESP;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_WSTRB <= twiddle_rsc_0_0_WSTRB;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_WDATA <= twiddle_rsc_0_0_WDATA;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWREGION <= twiddle_rsc_0_0_AWREGION;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWQOS <= twiddle_rsc_0_0_AWQOS;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWPROT <= twiddle_rsc_0_0_AWPROT;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWCACHE <= twiddle_rsc_0_0_AWCACHE;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWBURST <= twiddle_rsc_0_0_AWBURST;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWSIZE <= twiddle_rsc_0_0_AWSIZE;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWLEN <= twiddle_rsc_0_0_AWLEN;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_0_AWADDR <= twiddle_rsc_0_0_AWADDR;
  twiddle_rsc_0_1_RRESP <= inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_RRESP;
  twiddle_rsc_0_1_RDATA <= inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_RDATA;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARREGION <= twiddle_rsc_0_1_ARREGION;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARQOS <= twiddle_rsc_0_1_ARQOS;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARPROT <= twiddle_rsc_0_1_ARPROT;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARCACHE <= twiddle_rsc_0_1_ARCACHE;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARBURST <= twiddle_rsc_0_1_ARBURST;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARSIZE <= twiddle_rsc_0_1_ARSIZE;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARLEN <= twiddle_rsc_0_1_ARLEN;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_ARADDR <= twiddle_rsc_0_1_ARADDR;
  twiddle_rsc_0_1_BRESP <= inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_BRESP;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_WSTRB <= twiddle_rsc_0_1_WSTRB;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_WDATA <= twiddle_rsc_0_1_WDATA;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWREGION <= twiddle_rsc_0_1_AWREGION;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWQOS <= twiddle_rsc_0_1_AWQOS;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWPROT <= twiddle_rsc_0_1_AWPROT;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWCACHE <= twiddle_rsc_0_1_AWCACHE;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWBURST <= twiddle_rsc_0_1_AWBURST;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWSIZE <= twiddle_rsc_0_1_AWSIZE;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWLEN <= twiddle_rsc_0_1_AWLEN;
  inPlaceNTT_DIT_precomp_core_inst_twiddle_rsc_0_1_AWADDR <= twiddle_rsc_0_1_AWADDR;

END v5;



