// Generated by ZYANG
#ifndef INCLUDED_CCS_DUT_WRAPPER_H
#define INCLUDED_CCS_DUT_WRAPPER_H

#ifndef SC_USE_STD_STRING
#define SC_USE_STD_STRING
#endif

#include <systemc.h>
#include <mc_simulator_extensions.h>

#ifdef CCS_SYSC
namespace HDL {
#endif
#if defined(CCS_DUT_SYSC)
// alias ccs_DUT_wrapper to namespace enclosure of either cycle or RTL SystemC netlist
namespace
    ccs_design {
#if defined(CCS_DUT_CYCLE)
#include "cycle.cxx"
#else
#if defined(CCS_DUT_RTL)
#include "rtl.cxx"
#endif
#endif
}
typedef
    ccs_design::HDL::stockham_dit ccs_DUT_wrapper;

#else

// Create a foreign module wrapper around the HDL
#ifdef VCS_SYSTEMC
// VCS support - ccs_DUT_wrapper is derived from VCS-generated SystemC wrapper around HDL code
class ccs_DUT_wrapper : public TOP_HDL_ENTITY
{
public:
  ccs_DUT_wrapper(const sc_module_name& nm, const char *hdl_name)
  : TOP_HDL_ENTITY(nm)
  {
  // elaborate_foreign_module(hdl_name);
  }

  ~ccs_DUT_wrapper() {}
};

#else
// non VCS simulators - ccs_DUT_wrapper is derived from mc_foreign_module (adding 2nd ctor arg)
class ccs_DUT_wrapper: public mc_foreign_module
{
public:
  // Interface Ports
  sc_in<bool> clk;
  sc_in<sc_logic> rst;
  sc_out<sc_lv<7> > xt_rsc_0_0_adra;
  sc_out<sc_lv<32> > xt_rsc_0_0_da;
  sc_out<sc_logic> xt_rsc_0_0_wea;
  sc_in<sc_lv<32> > xt_rsc_0_0_qa;
  sc_out<sc_lv<7> > xt_rsc_0_0_adrb;
  sc_out<sc_lv<32> > xt_rsc_0_0_db;
  sc_out<sc_logic> xt_rsc_0_0_web;
  sc_in<sc_lv<32> > xt_rsc_0_0_qb;
  sc_out<sc_logic> xt_rsc_triosy_0_0_lz;
  sc_out<sc_lv<7> > xt_rsc_0_1_adra;
  sc_out<sc_lv<32> > xt_rsc_0_1_da;
  sc_out<sc_logic> xt_rsc_0_1_wea;
  sc_in<sc_lv<32> > xt_rsc_0_1_qa;
  sc_out<sc_lv<7> > xt_rsc_0_1_adrb;
  sc_out<sc_lv<32> > xt_rsc_0_1_db;
  sc_out<sc_logic> xt_rsc_0_1_web;
  sc_in<sc_lv<32> > xt_rsc_0_1_qb;
  sc_out<sc_logic> xt_rsc_triosy_0_1_lz;
  sc_out<sc_lv<7> > xt_rsc_0_2_adra;
  sc_out<sc_lv<32> > xt_rsc_0_2_da;
  sc_out<sc_logic> xt_rsc_0_2_wea;
  sc_in<sc_lv<32> > xt_rsc_0_2_qa;
  sc_out<sc_lv<7> > xt_rsc_0_2_adrb;
  sc_out<sc_lv<32> > xt_rsc_0_2_db;
  sc_out<sc_logic> xt_rsc_0_2_web;
  sc_in<sc_lv<32> > xt_rsc_0_2_qb;
  sc_out<sc_logic> xt_rsc_triosy_0_2_lz;
  sc_out<sc_lv<7> > xt_rsc_0_3_adra;
  sc_out<sc_lv<32> > xt_rsc_0_3_da;
  sc_out<sc_logic> xt_rsc_0_3_wea;
  sc_in<sc_lv<32> > xt_rsc_0_3_qa;
  sc_out<sc_lv<7> > xt_rsc_0_3_adrb;
  sc_out<sc_lv<32> > xt_rsc_0_3_db;
  sc_out<sc_logic> xt_rsc_0_3_web;
  sc_in<sc_lv<32> > xt_rsc_0_3_qb;
  sc_out<sc_logic> xt_rsc_triosy_0_3_lz;
  sc_out<sc_lv<7> > xt_rsc_0_4_adra;
  sc_out<sc_lv<32> > xt_rsc_0_4_da;
  sc_out<sc_logic> xt_rsc_0_4_wea;
  sc_in<sc_lv<32> > xt_rsc_0_4_qa;
  sc_out<sc_lv<7> > xt_rsc_0_4_adrb;
  sc_out<sc_lv<32> > xt_rsc_0_4_db;
  sc_out<sc_logic> xt_rsc_0_4_web;
  sc_in<sc_lv<32> > xt_rsc_0_4_qb;
  sc_out<sc_logic> xt_rsc_triosy_0_4_lz;
  sc_out<sc_lv<7> > xt_rsc_0_5_adra;
  sc_out<sc_lv<32> > xt_rsc_0_5_da;
  sc_out<sc_logic> xt_rsc_0_5_wea;
  sc_in<sc_lv<32> > xt_rsc_0_5_qa;
  sc_out<sc_lv<7> > xt_rsc_0_5_adrb;
  sc_out<sc_lv<32> > xt_rsc_0_5_db;
  sc_out<sc_logic> xt_rsc_0_5_web;
  sc_in<sc_lv<32> > xt_rsc_0_5_qb;
  sc_out<sc_logic> xt_rsc_triosy_0_5_lz;
  sc_out<sc_lv<7> > xt_rsc_0_6_adra;
  sc_out<sc_lv<32> > xt_rsc_0_6_da;
  sc_out<sc_logic> xt_rsc_0_6_wea;
  sc_in<sc_lv<32> > xt_rsc_0_6_qa;
  sc_out<sc_lv<7> > xt_rsc_0_6_adrb;
  sc_out<sc_lv<32> > xt_rsc_0_6_db;
  sc_out<sc_logic> xt_rsc_0_6_web;
  sc_in<sc_lv<32> > xt_rsc_0_6_qb;
  sc_out<sc_logic> xt_rsc_triosy_0_6_lz;
  sc_out<sc_lv<7> > xt_rsc_0_7_adra;
  sc_out<sc_lv<32> > xt_rsc_0_7_da;
  sc_out<sc_logic> xt_rsc_0_7_wea;
  sc_in<sc_lv<32> > xt_rsc_0_7_qa;
  sc_out<sc_lv<7> > xt_rsc_0_7_adrb;
  sc_out<sc_lv<32> > xt_rsc_0_7_db;
  sc_out<sc_logic> xt_rsc_0_7_web;
  sc_in<sc_lv<32> > xt_rsc_0_7_qb;
  sc_out<sc_logic> xt_rsc_triosy_0_7_lz;
  sc_in<sc_lv<32> > p_rsc_dat;
  sc_out<sc_logic> p_rsc_triosy_lz;
  sc_out<sc_lv<10> > twiddle_rsc_radr;
  sc_in<sc_lv<32> > twiddle_rsc_q;
  sc_out<sc_logic> twiddle_rsc_triosy_lz;
  sc_out<sc_lv<10> > twiddle_h_rsc_radr;
  sc_in<sc_lv<32> > twiddle_h_rsc_q;
  sc_out<sc_logic> twiddle_h_rsc_triosy_lz;
public:
  ccs_DUT_wrapper(const sc_module_name& nm, const char *hdl_name)
  :
    mc_foreign_module(nm, hdl_name), 
    clk("clk"), 
    rst("rst"), 
    xt_rsc_0_0_adra("xt_rsc_0_0_adra"), 
    xt_rsc_0_0_da("xt_rsc_0_0_da"), 
    xt_rsc_0_0_wea("xt_rsc_0_0_wea"), 
    xt_rsc_0_0_qa("xt_rsc_0_0_qa"), 
    xt_rsc_0_0_adrb("xt_rsc_0_0_adrb"), 
    xt_rsc_0_0_db("xt_rsc_0_0_db"), 
    xt_rsc_0_0_web("xt_rsc_0_0_web"), 
    xt_rsc_0_0_qb("xt_rsc_0_0_qb"), 
    xt_rsc_triosy_0_0_lz("xt_rsc_triosy_0_0_lz"), 
    xt_rsc_0_1_adra("xt_rsc_0_1_adra"), 
    xt_rsc_0_1_da("xt_rsc_0_1_da"), 
    xt_rsc_0_1_wea("xt_rsc_0_1_wea"), 
    xt_rsc_0_1_qa("xt_rsc_0_1_qa"), 
    xt_rsc_0_1_adrb("xt_rsc_0_1_adrb"), 
    xt_rsc_0_1_db("xt_rsc_0_1_db"), 
    xt_rsc_0_1_web("xt_rsc_0_1_web"), 
    xt_rsc_0_1_qb("xt_rsc_0_1_qb"), 
    xt_rsc_triosy_0_1_lz("xt_rsc_triosy_0_1_lz"), 
    xt_rsc_0_2_adra("xt_rsc_0_2_adra"), 
    xt_rsc_0_2_da("xt_rsc_0_2_da"), 
    xt_rsc_0_2_wea("xt_rsc_0_2_wea"), 
    xt_rsc_0_2_qa("xt_rsc_0_2_qa"), 
    xt_rsc_0_2_adrb("xt_rsc_0_2_adrb"), 
    xt_rsc_0_2_db("xt_rsc_0_2_db"), 
    xt_rsc_0_2_web("xt_rsc_0_2_web"), 
    xt_rsc_0_2_qb("xt_rsc_0_2_qb"), 
    xt_rsc_triosy_0_2_lz("xt_rsc_triosy_0_2_lz"), 
    xt_rsc_0_3_adra("xt_rsc_0_3_adra"), 
    xt_rsc_0_3_da("xt_rsc_0_3_da"), 
    xt_rsc_0_3_wea("xt_rsc_0_3_wea"), 
    xt_rsc_0_3_qa("xt_rsc_0_3_qa"), 
    xt_rsc_0_3_adrb("xt_rsc_0_3_adrb"), 
    xt_rsc_0_3_db("xt_rsc_0_3_db"), 
    xt_rsc_0_3_web("xt_rsc_0_3_web"), 
    xt_rsc_0_3_qb("xt_rsc_0_3_qb"), 
    xt_rsc_triosy_0_3_lz("xt_rsc_triosy_0_3_lz"), 
    xt_rsc_0_4_adra("xt_rsc_0_4_adra"), 
    xt_rsc_0_4_da("xt_rsc_0_4_da"), 
    xt_rsc_0_4_wea("xt_rsc_0_4_wea"), 
    xt_rsc_0_4_qa("xt_rsc_0_4_qa"), 
    xt_rsc_0_4_adrb("xt_rsc_0_4_adrb"), 
    xt_rsc_0_4_db("xt_rsc_0_4_db"), 
    xt_rsc_0_4_web("xt_rsc_0_4_web"), 
    xt_rsc_0_4_qb("xt_rsc_0_4_qb"), 
    xt_rsc_triosy_0_4_lz("xt_rsc_triosy_0_4_lz"), 
    xt_rsc_0_5_adra("xt_rsc_0_5_adra"), 
    xt_rsc_0_5_da("xt_rsc_0_5_da"), 
    xt_rsc_0_5_wea("xt_rsc_0_5_wea"), 
    xt_rsc_0_5_qa("xt_rsc_0_5_qa"), 
    xt_rsc_0_5_adrb("xt_rsc_0_5_adrb"), 
    xt_rsc_0_5_db("xt_rsc_0_5_db"), 
    xt_rsc_0_5_web("xt_rsc_0_5_web"), 
    xt_rsc_0_5_qb("xt_rsc_0_5_qb"), 
    xt_rsc_triosy_0_5_lz("xt_rsc_triosy_0_5_lz"), 
    xt_rsc_0_6_adra("xt_rsc_0_6_adra"), 
    xt_rsc_0_6_da("xt_rsc_0_6_da"), 
    xt_rsc_0_6_wea("xt_rsc_0_6_wea"), 
    xt_rsc_0_6_qa("xt_rsc_0_6_qa"), 
    xt_rsc_0_6_adrb("xt_rsc_0_6_adrb"), 
    xt_rsc_0_6_db("xt_rsc_0_6_db"), 
    xt_rsc_0_6_web("xt_rsc_0_6_web"), 
    xt_rsc_0_6_qb("xt_rsc_0_6_qb"), 
    xt_rsc_triosy_0_6_lz("xt_rsc_triosy_0_6_lz"), 
    xt_rsc_0_7_adra("xt_rsc_0_7_adra"), 
    xt_rsc_0_7_da("xt_rsc_0_7_da"), 
    xt_rsc_0_7_wea("xt_rsc_0_7_wea"), 
    xt_rsc_0_7_qa("xt_rsc_0_7_qa"), 
    xt_rsc_0_7_adrb("xt_rsc_0_7_adrb"), 
    xt_rsc_0_7_db("xt_rsc_0_7_db"), 
    xt_rsc_0_7_web("xt_rsc_0_7_web"), 
    xt_rsc_0_7_qb("xt_rsc_0_7_qb"), 
    xt_rsc_triosy_0_7_lz("xt_rsc_triosy_0_7_lz"), 
    p_rsc_dat("p_rsc_dat"), 
    p_rsc_triosy_lz("p_rsc_triosy_lz"), 
    twiddle_rsc_radr("twiddle_rsc_radr"), 
    twiddle_rsc_q("twiddle_rsc_q"), 
    twiddle_rsc_triosy_lz("twiddle_rsc_triosy_lz"), 
    twiddle_h_rsc_radr("twiddle_h_rsc_radr"), 
    twiddle_h_rsc_q("twiddle_h_rsc_q"), 
    twiddle_h_rsc_triosy_lz("twiddle_h_rsc_triosy_lz")
  {
    elaborate_foreign_module(hdl_name);
  }

  ~ccs_DUT_wrapper() {}
};
#endif

#endif

#ifdef CCS_SYSC
} // end namespace HDL
#endif
#endif


