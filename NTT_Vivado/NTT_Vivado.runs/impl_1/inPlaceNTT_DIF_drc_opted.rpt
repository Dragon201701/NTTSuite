Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
---------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2019.1 (win64) Build 2552052 Fri May 24 14:49:42 MDT 2019
| Date         : Thu Apr 15 13:41:41 2021
| Host         : DESKTOP-5VIDJ10 running 64-bit major release  (build 9200)
| Command      : report_drc -file inPlaceNTT_DIF_drc_opted.rpt -pb inPlaceNTT_DIF_drc_opted.pb -rpx inPlaceNTT_DIF_drc_opted.rpx
| Design       : inPlaceNTT_DIF
| Device       : xc7vx690tffg1761-2
| Speed File   : -2
| Design State : Synthesized
---------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: checkpoint_inPlaceNTT_DIF
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 60
+----------+------------------+-----------------------------------------------------+------------+
| Rule     | Severity         | Description                                         | Violations |
+----------+------------------+-----------------------------------------------------+------------+
| NSTD-1   | Critical Warning | Unspecified I/O Standard                            | 1          |
| UCIO-1   | Critical Warning | Unconstrained Logical Port                          | 1          |
| CFGBVS-1 | Warning          | Missing CFGBVS and CONFIG_VOLTAGE Design Properties | 1          |
| DPIP-1   | Warning          | Input pipelining                                    | 24         |
| DPOP-1   | Warning          | PREG Output pipelining                              | 16         |
| DPOP-2   | Warning          | MREG Output pipelining                              | 16         |
| IOCNT-1  | Warning          | Number of IOs                                       | 1          |
+----------+------------------+-----------------------------------------------------+------------+

2. REPORT DETAILS
-----------------
NSTD-1#1 Critical Warning
Unspecified I/O Standard  
2308 out of 2308 logical ports use I/O standard (IOSTANDARD) value 'DEFAULT', instead of a user assigned specific value. This may cause I/O contention or incompatibility with the board power or connectivity affecting performance, signal integrity or in extreme cases cause damage to the device or the components to which it is connected. To correct this violation, specify all I/O standards. This design will fail to generate a bitstream unless all logical ports have a user specified I/O standard value defined. To allow bitstream creation with unspecified I/O standard values (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks NSTD-1].  NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. Problem ports: p_rsc_dat[63:0], r_rsc_dat[63:0], vec_rsc_0_0_adra[5:0], vec_rsc_0_0_da[63:0], vec_rsc_0_0_qa[63:0], vec_rsc_0_10_adra[5:0], vec_rsc_0_10_da[63:0], vec_rsc_0_10_qa[63:0], vec_rsc_0_11_adra[5:0], vec_rsc_0_11_da[63:0], vec_rsc_0_11_qa[63:0], vec_rsc_0_12_adra[5:0], vec_rsc_0_12_da[63:0], vec_rsc_0_12_qa[63:0], vec_rsc_0_13_adra[5:0] (the first 15 of 86 listed).
Related violations: <none>

UCIO-1#1 Critical Warning
Unconstrained Logical Port  
2308 out of 2308 logical ports have no user assigned specific location constraint (LOC). This may cause I/O contention or incompatibility with the board power or connectivity affecting performance, signal integrity or in extreme cases cause damage to the device or the components to which it is connected. To correct this violation, specify all pin locations. This design will fail to generate a bitstream unless all logical ports have a user specified site LOC constraint defined.  To allow bitstream creation with unspecified pin locations (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks UCIO-1].  NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run.  Problem ports: p_rsc_dat[63:0], r_rsc_dat[63:0], vec_rsc_0_0_adra[5:0], vec_rsc_0_0_da[63:0], vec_rsc_0_0_qa[63:0], vec_rsc_0_10_adra[5:0], vec_rsc_0_10_da[63:0], vec_rsc_0_10_qa[63:0], vec_rsc_0_11_adra[5:0], vec_rsc_0_11_da[63:0], vec_rsc_0_11_qa[63:0], vec_rsc_0_12_adra[5:0], vec_rsc_0_12_da[63:0], vec_rsc_0_12_qa[63:0], vec_rsc_0_13_adra[5:0] (the first 15 of 86 listed).
Related violations: <none>

CFGBVS-1#1 Warning
Missing CFGBVS and CONFIG_VOLTAGE Design Properties  
Neither the CFGBVS nor CONFIG_VOLTAGE voltage property is set in the current_design.  Configuration bank voltage select (CFGBVS) must be set to VCCO or GND, and CONFIG_VOLTAGE must be set to the correct configuration voltage, in order to determine the I/O voltage support for the pins in bank 0.  It is suggested to specify these either using the 'Edit Device Properties' function in the GUI or directly in the XDC file using the following syntax:

 set_property CFGBVS value1 [current_design]
 #where value1 is either VCCO or GND

 set_property CONFIG_VOLTAGE value2 [current_design]
 #where value2 is the voltage provided to configuration bank 0

Refer to the device configuration user guide for more information.
Related violations: <none>

DPIP-1#1 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__0 input inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#2 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__2 input inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#3 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__5 input inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__5/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#4 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__9 input inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__9/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#5 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1 input inPlaceNTT_DIF_core_inst/nl_z_out_1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#6 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1 input inPlaceNTT_DIF_core_inst/nl_z_out_1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#7 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__0 input inPlaceNTT_DIF_core_inst/nl_z_out_1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#8 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__0 input inPlaceNTT_DIF_core_inst/nl_z_out_1__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#9 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__1 input inPlaceNTT_DIF_core_inst/nl_z_out_1__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#10 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__1 input inPlaceNTT_DIF_core_inst/nl_z_out_1__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#11 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__2 input inPlaceNTT_DIF_core_inst/nl_z_out_1__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#12 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__2 input inPlaceNTT_DIF_core_inst/nl_z_out_1__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#13 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__3 input inPlaceNTT_DIF_core_inst/nl_z_out_1__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#14 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__3 input inPlaceNTT_DIF_core_inst/nl_z_out_1__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#15 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__4 input inPlaceNTT_DIF_core_inst/nl_z_out_1__4/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#16 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__4 input inPlaceNTT_DIF_core_inst/nl_z_out_1__4/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#17 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__5 input inPlaceNTT_DIF_core_inst/nl_z_out_1__5/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#18 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__5 input inPlaceNTT_DIF_core_inst/nl_z_out_1__5/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#19 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__6 input inPlaceNTT_DIF_core_inst/nl_z_out_1__6/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#20 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__6 input inPlaceNTT_DIF_core_inst/nl_z_out_1__6/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#21 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__7 input inPlaceNTT_DIF_core_inst/nl_z_out_1__7/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#22 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__7 input inPlaceNTT_DIF_core_inst/nl_z_out_1__7/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#23 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__8 input inPlaceNTT_DIF_core_inst/nl_z_out_1__8/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#24 Warning
Input pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__8 input inPlaceNTT_DIF_core_inst/nl_z_out_1__8/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-1#1 Warning
PREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5 output inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#2 Warning
PREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__1 output inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#3 Warning
PREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__10 output inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#4 Warning
PREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__11 output inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__11/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#5 Warning
PREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__13 output inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__13/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#6 Warning
PREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__14 output inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__14/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#7 Warning
PREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__2 output inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#8 Warning
PREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__4 output inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#9 Warning
PREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__6 output inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__6/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#10 Warning
PREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__8 output inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__8/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#11 Warning
PREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__0 output inPlaceNTT_DIF_core_inst/nl_z_out_1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#12 Warning
PREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__2 output inPlaceNTT_DIF_core_inst/nl_z_out_1__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#13 Warning
PREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__4 output inPlaceNTT_DIF_core_inst/nl_z_out_1__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#14 Warning
PREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__5 output inPlaceNTT_DIF_core_inst/nl_z_out_1__5/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#15 Warning
PREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__7 output inPlaceNTT_DIF_core_inst/nl_z_out_1__7/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#16 Warning
PREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__8 output inPlaceNTT_DIF_core_inst/nl_z_out_1__8/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5 multiplier stage inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__1 multiplier stage inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__10 multiplier stage inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#4 Warning
MREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__11 multiplier stage inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#5 Warning
MREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__13 multiplier stage inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__13/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#6 Warning
MREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__14 multiplier stage inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#7 Warning
MREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__2 multiplier stage inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#8 Warning
MREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__4 multiplier stage inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#9 Warning
MREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__6 multiplier stage inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#10 Warning
MREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__8 multiplier stage inPlaceNTT_DIF_core_inst/nl_STAGE_MAIN_LOOP_1_COMP_LOOP_1_COMP_LOOP_rem_1_cmp_a_mx0w5__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#11 Warning
MREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__0 multiplier stage inPlaceNTT_DIF_core_inst/nl_z_out_1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#12 Warning
MREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__2 multiplier stage inPlaceNTT_DIF_core_inst/nl_z_out_1__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#13 Warning
MREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__4 multiplier stage inPlaceNTT_DIF_core_inst/nl_z_out_1__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#14 Warning
MREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__5 multiplier stage inPlaceNTT_DIF_core_inst/nl_z_out_1__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#15 Warning
MREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__7 multiplier stage inPlaceNTT_DIF_core_inst/nl_z_out_1__7/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#16 Warning
MREG Output pipelining  
DSP inPlaceNTT_DIF_core_inst/nl_z_out_1__8 multiplier stage inPlaceNTT_DIF_core_inst/nl_z_out_1__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

IOCNT-1#1 Warning
Number of IOs  
The design contains 2308 unplaced I/O ports while the target device, xc7vx690tffg1761-2, has 850 remaining available user I/O pins. This DRC assumes that all ports which do not drive MGT pins should be placed on user I/O pins. To correct this issue:
1. Ensure you are targeting the correct device and package. Select a larger device or different package if necessary.
2. Check the top-level ports of the design to ensure the correct number of ports are specified.
3. Consider design changes to reduce the number of user I/O pins needed.

Related violations: <none>


